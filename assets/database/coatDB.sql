-- phpMyAdmin SQL Dump
-- version 4.0.10.18
-- https://www.phpmyadmin.net
--
-- Host: localhost:3306
-- Generation Time: Nov 10, 2017 at 03:50 PM
-- Server version: 5.6.36-cll-lve
-- PHP Version: 5.6.30

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `coatDB`
--

-- --------------------------------------------------------

--
-- Table structure for table `admin`
--

CREATE TABLE IF NOT EXISTS `admin` (
  `adminID` int(5) NOT NULL AUTO_INCREMENT,
  `username` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  PRIMARY KEY (`adminID`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- Dumping data for table `admin`
--

INSERT INTO `admin` (`adminID`, `username`, `password`) VALUES
(1, 'admin', 'e6e061838856bf47e1de730719fb2609');

-- --------------------------------------------------------

--
-- Table structure for table `colleges`
--

CREATE TABLE IF NOT EXISTS `colleges` (
  `collegeID` int(5) NOT NULL AUTO_INCREMENT,
  `collegeName` varchar(255) NOT NULL,
  PRIMARY KEY (`collegeID`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=42 ;

--
-- Dumping data for table `colleges`
--

INSERT INTO `colleges` (`collegeID`, `collegeName`) VALUES
(26, 'SRM University (NCR Campus)'),
(41, 'Bhagwan Parshuram Institute of Technology');

-- --------------------------------------------------------

--
-- Table structure for table `compulsorySkills`
--

CREATE TABLE IF NOT EXISTS `compulsorySkills` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `skill_id` int(5) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `courses`
--

CREATE TABLE IF NOT EXISTS `courses` (
  `courseID` int(5) NOT NULL AUTO_INCREMENT,
  `course` varchar(255) NOT NULL,
  PRIMARY KEY (`courseID`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=6 ;

--
-- Dumping data for table `courses`
--

INSERT INTO `courses` (`courseID`, `course`) VALUES
(1, 'B.Tech-CSE'),
(2, 'B.Tech-IT'),
(4, 'MCA'),
(5, 'B.Tech-ECE');

-- --------------------------------------------------------

--
-- Table structure for table `questions`
--

CREATE TABLE IF NOT EXISTS `questions` (
  `question_id` int(5) NOT NULL AUTO_INCREMENT,
  `question` longtext NOT NULL,
  `option1` longtext NOT NULL,
  `option2` longtext NOT NULL,
  `option3` longtext NOT NULL,
  `option4` longtext NOT NULL,
  `difficulty_level` enum('1','2','3','4','5','6','7','8') NOT NULL,
  `expert_time` int(5) NOT NULL,
  `skill_id` int(5) NOT NULL,
  `answer` enum('1','2','3','4') NOT NULL,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3865 ;

--
-- Dumping data for table `questions`
--

INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(1, '<p>What is operating system?</p>\r\n', '<p>collection of programs that manages hardware resources</p>\r\n', '<p>system service provider to the application programs</p>\r\n', '<p>link to interface the hardware and application programs</p>\r\n', '<p>All of the above</p>\r\n', '1', 10, 19, '4'),
(2, '<p>By operating system, the resource management can be done via:</p>\r\n\r\n<p style="margin-left:36.0pt">&nbsp;</p>\r\n', '<p>time division multiplexing</p>\r\n', '<p>space division multiplexing</p>\r\n', '<p>both (a) and (b)</p>\r\n', '<p>none of the above</p>\r\n', '1', 10, 19, '3'),
(3, '<p>Process is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>program in High level language kept on disk</p>\r\n', '<p>contents of main memory</p>\r\n', '<p>a program in execution</p>\r\n', '<p>a job in secondary memory</p>\r\n', '1', 10, 19, '3'),
(4, '<p>A critical region is</p>\r\n', '<p>a program segment that often causes unexpected system crashes</p>\r\n', '<p>a program segment where shared resources are accessed</p>\r\n', '<p>one which is enclosed by a pair of P and V operations on semaphores</p>\r\n', '<p>none of the above</p>\r\n', '1', 10, 19, '4'),
(5, '<p>Assembler language<br />\r\n&nbsp;</p>\r\n', '<p>is usually the primary user interface</p>\r\n', '<p>requires fixed-format commands</p>\r\n', '<p>is a mnemonic form of machine language</p>\r\n', '<p>is quite different from the SCL interpreter</p>\r\n', '1', 10, 19, '3'),
(6, '<p>The primary job of the operating system of a computer is to<br />\r\n&nbsp;</p>\r\n', '<p>command resources</p>\r\n', '<p>manage resources</p>\r\n', '<p>provide utilities</p>\r\n', '<p>be user friendly</p>\r\n', '1', 10, 19, '2'),
(7, '<p>Which module gives control of the CPU to the process selected by the short-term scheduler?<br />\r\n&nbsp;</p>\r\n', '<p>dispatcher</p>\r\n', '<p>interrupt</p>\r\n', '<p>scheduler</p>\r\n', '<p>&nbsp;none of the above</p>\r\n', '1', 10, 19, '1'),
(8, '<p>Race around condition occurs when ?&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Two processed unknowingly wait for resources that are help by each other<br />\r\n&nbsp;</p>\r\n', '<p>Two process wait for same resources</p>\r\n', '<p><br />\r\nAll resources are shared</p>\r\n', '<p>Two processes share the same shared resource</p>\r\n', '1', 10, 19, '2'),
(9, '<p>PCB =<br />\r\n&nbsp;</p>\r\n', '<p>Program Control Block</p>\r\n', '<p>Process Control Block</p>\r\n', '<p>Process Communication Block</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 19, '2'),
(10, '<p>FIFO scheduling is ________.<br />\r\n&nbsp;</p>\r\n', '<p>Non Preemptive Scheduling</p>\r\n', '<p>Deadline Scheduling</p>\r\n', '<p>Preemptive Scheduling</p>\r\n', '<p>Fair share scheduling</p>\r\n', '1', 10, 19, '1'),
(11, '<p>The Banker&#39;s algorithm is used<br />\r\n&nbsp;</p>\r\n', '<p>to prevent deadlock in operating systems</p>\r\n', '<p>to detect deadlock in operating systems</p>\r\n', '<p>to rectify a deadlocked state</p>\r\n', '<p>none of the above</p>\r\n', '1', 10, 19, '1'),
(12, '<p>An assembler is used to translate a program written in<br />\r\n&nbsp;</p>\r\n', '<p>A Low Language</p>\r\n', '<p>A high Language</p>\r\n', '<p>Middle Language</p>\r\n', '<p>Assembly Language</p>\r\n', '1', 10, 19, '4'),
(13, '<p>Memory management is:<br />\r\n&nbsp;</p>\r\n', '<p>replaced with virtual memory on current systems</p>\r\n', '<p>not used in modern operating system</p>\r\n', '<p>not used on multiprogramming systems</p>\r\n', '<p>critical for even the simplest operating systems</p>\r\n', '1', 10, 19, '1'),
(14, '<p>Dead-lock in an Operating System is<br />\r\n&nbsp;</p>\r\n', '<p>Definite waiting process</p>\r\n', '<p>Desirable process</p>\r\n', '<p>Undesirable process</p>\r\n', '<p>All the above</p>\r\n', '1', 10, 19, '1'),
(16, '<p>Round robin scheduling is essentially the preemptive version of ________ ?<br />\n&nbsp;</p>\n', '<p>FIFO</p>\r\n', '<p>Shortest job first</p>\r\n', '<p>Shortest remaining</p>\r\n', '<p>Longest time first</p>\r\n', '1', 10, 19, '1'),
(17, '<p>&nbsp;A page fault occurs ?<br />\r\n&nbsp;</p>\r\n', '<p>when the page is not in the memory</p>\r\n', '<p>when the page is in the memory</p>\r\n', '<p>when the process enters the blocked state</p>\r\n', '<p>when the process is in the ready state</p>\r\n', '1', 10, 19, '1'),
(18, '<p>Which of the following will determine your choice of systems software for your computer?&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Is the applications software you want to use compatible with it ?</p>\r\n', '<p>Is it expensive ?</p>\r\n', '<p>Is it compatible with your hardware ?</p>\r\n', '<p>Both 1 and 3</p>\r\n', '1', 10, 19, '4'),
(19, '<p>What is a shell ?&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>is a hardware component</p>\r\n', '<p>It is a command interpreter</p>\r\n', '<p>It is a part in compiler</p>\r\n', '<p>It is a tool in CPU scheduling</p>\r\n', '1', 10, 19, '2'),
(20, '<p>The processes that are residing in main memory and are ready and waiting to execute are kept on a list called<br />\r\n&nbsp;</p>\r\n', '<p>job queue</p>\r\n', '<p>ready queue</p>\r\n', '<p>execution queue</p>\r\n', '<p>process queue</p>\r\n', '2', 10, 19, '2'),
(21, '<p>The interval from the time of submission of a process to the time of completion is termed as<br />\r\n&nbsp;</p>\r\n', '<p>waiting time</p>\r\n', '<p>turnaround time</p>\r\n', '<p>response time</p>\r\n', '<p>throughput</p>\r\n', '2', 10, 19, '2'),
(22, '<p>Which scheduling algorithm allocates the CPU first to the process that requests the CPU first?<br />\r\n&nbsp;</p>\r\n', '<p>first-come, first-served scheduling</p>\r\n', '<p>shortest job scheduling</p>\r\n', '<p>priority scheduling</p>\r\n', '<p>none of the above</p>\r\n', '2', 10, 19, '1'),
(23, '<p>In priority scheduling algorithm<br />\r\n&nbsp;</p>\r\n', '<p>CPU is allocated to the process with highest priority</p>\r\n', '<p>CPU is allocated to the process with lowest priority</p>\r\n', '<p>equal priority processes can not be scheduled</p>\r\n', '<p>none of the above</p>\r\n', '2', 10, 19, '1'),
(24, '<p>Virtual memory is ..... ?<br />\r\n&nbsp;</p>\r\n', '<p>An extremely large main memory</p>\r\n', '<p>An extremely large secondary memory</p>\r\n', '<p>An illusion of extremely large main memory</p>\r\n', '<p>A type of memory used in super computers</p>\r\n', '2', 10, 19, '3'),
(25, '<p>Concurrent process are ?<br />\r\n&nbsp;</p>\r\n', '<p>Processes that do not overlap in time</p>\r\n', '<p>Process that overlap in time</p>\r\n', '<p>Processes that are executed by the processor at the same time</p>\r\n', '<p>None of the above</p>\r\n', '2', 10, 19, '2'),
(26, '<p>Which is not the state of the process ?<br />\r\n&nbsp;</p>\r\n', '<p>Blocked</p>\r\n', '<p>Running</p>\r\n', '<p>Ready&nbsp;</p>\r\n', '<p>Privileged</p>\r\n', '2', 10, 19, '4'),
(28, '<p>Size of the virtual memory depends upon ?<br />\r\n&nbsp;</p>\r\n', '<p>Data Bus</p>\r\n', '<p>Address Bus</p>\r\n', '<p>Size of main memory</p>\r\n', '<p>Memory buffer register</p>\r\n', '2', 10, 19, '2'),
(29, '<p>Which of the following approaches do not require knowledge of the system state?<br />\r\n&nbsp;</p>\r\n', '<p>Deadlock detection</p>\r\n', '<p>Deadlock Avoidence</p>\r\n', '<p>Deadlock Prevention</p>\r\n', '<p>None of the above</p>\r\n', '2', 10, 19, '4'),
(30, '<p>Which of the following scheduling policy is well suited for time shared operating system?<br />\r\n&nbsp;</p>\r\n', '<p>Shortest job first</p>\r\n', '<p>Round robin</p>\r\n', '<p>First com first serve</p>\r\n', '<p>Elevator</p>\r\n', '2', 10, 19, '2'),
(31, '<p>The simplest way to break a deadlock is to<br />\r\n&nbsp;</p>\r\n', '<p>Kill one of the processes</p>\r\n', '<p>Roll back</p>\r\n', '<p>Preempt a resource</p>\r\n', '<p>Lock one of the processes</p>\r\n', '2', 10, 19, '1'),
(32, '<p>System generation:<br />\r\n&nbsp;</p>\r\n', '<p>is always quite simple</p>\r\n', '<p>is always very difficult</p>\r\n', '<p>varies in difficulty between systems</p>\r\n', '<p>requires extensive tools to be understandable</p>\r\n', '2', 10, 19, '3'),
(33, '<p>The Memory Address Register<br />\r\n&nbsp;</p>\r\n', '<p>is a hardware memory device which denotes the location of the current instructionbeing executed.</p>\r\n', '<p>is a group of electrical circuits (hardware), that performs the intent of instructions fetched from memory.</p>\r\n', '<p>contains the address of the memory location that is to be read from or stored into.</p>\r\n', '<p>contains a copy of the designated memory location specified by the MAR after a &quot;read&quot; or the new contents of the memory prior to a &quot;write&quot;.</p>\r\n', '2', 10, 19, '3'),
(34, '<p>In priority scheduling algorithm, when a process arrives at the ready queue, its priority is compared with the priority of<br />\r\n&nbsp;</p>\r\n', '<p>all process</p>\r\n', '<p>currently running process</p>\r\n', '<p>parent process</p>\r\n', '<p>init process</p>\r\n', '2', 10, 19, '2'),
(35, '<p>Time quantum is defined in<br />\r\n&nbsp;</p>\r\n', '<p>shortest job scheduling algorithm</p>\r\n', '<p>round robin scheduling algorithm</p>\r\n', '<p>priority scheduling algorithm</p>\r\n', '<p>multilevel queue scheduling algorithm</p>\r\n', '2', 10, 19, '2'),
(36, '<p>Process are classified into different groups in<br />\r\n&nbsp;</p>\r\n', '<p>shortest job scheduling algorithm</p>\r\n', '<p>round robin scheduling algorithm</p>\r\n', '<p>priority scheduling algorithm</p>\r\n', '<p>multilevel queue scheduling algorithm</p>\r\n', '2', 10, 19, '4'),
(37, '<p>In multilevel feedback scheduling algorithm<br />\r\n&nbsp;</p>\r\n', '<p>a process can move to a different classified ready queue</p>\r\n', '<p>classification of ready queue is permanent</p>\r\n', '<p>processes are not classified into groups</p>\r\n', '<p>none of the above</p>\r\n', '2', 10, 19, '1'),
(38, '<p>Which one of the following can not be scheduled by the kernel?</p>\r\n', '<p>kernel level thread<br />\r\n&nbsp;</p>\r\n', '<p>user level thread</p>\r\n', '<p>process</p>\r\n', '<p>none of the above</p>\r\n', '2', 10, 19, '2'),
(39, '<p>For a Hold and wait condition to prevail :<br />\r\n&nbsp;</p>\r\n', '<p>A process must be not be holding a resource, but waiting for one to be freed, and then request to acquire it</p>\r\n', '<p>A process must be holding at least one resource and waiting to acquire additional resources that are being held by other processes</p>\r\n', '<p>A process must hold at least one resource and not be waiting to acquire additional resources</p>\r\n', '<p>None of these</p>\r\n', '2', 10, 19, '2'),
(40, '<p>To ensure no preemption, if a process is holding some resources and requests another resource that cannot be immediately allocated to it :<br />\r\n&nbsp;</p>\r\n', '<p>then the process waits for the resources be allocated to it</p>\r\n', '<p>the process keeps sending requests until the resource is allocated to it</p>\r\n', '<p>the process resumes execution without the resource being allocated to it</p>\r\n', '<p>then all resources currently being held are preempted</p>\r\n', '2', 10, 19, '4'),
(41, '<p>One way to ensure that the circular wait condition never holds is to :<br />\r\n&nbsp;</p>\r\n', '<p>impose a total ordering of all resource types and to determine whether one precedes another in the ordering</p>\r\n', '<p>to never let a process acquire resources that are held by other processes</p>\r\n', '<p>to let a process wait for only one resource at a time</p>\r\n', '<p>All of the above</p>\r\n', '3', 10, 19, '1'),
(42, '<p>_____ is the concept in which a process is copied into main memory from the secondary memory according to the requirement.<br />\r\n&nbsp;</p>\r\n', '<p>Paging</p>\r\n', '<p>Demand paging</p>\r\n', '<p>Segmentation</p>\r\n', '<p>Swapping</p>\r\n', '3', 10, 19, '2'),
(43, '<p>______ is a unique tag, usually a number, identifies the file within the file system.<br />\r\n&nbsp;</p>\r\n', '<p>File identifier</p>\r\n', '<p>File name</p>\r\n', '<p>File type</p>\r\n', '<p>none of the above</p>\r\n', '3', 10, 19, '1'),
(44, '<p>Mapping of file is managed by<br />\r\n&nbsp;</p>\r\n', '<p>file metadata</p>\r\n', '<p>page table</p>\r\n', '<p>virtual memory</p>\r\n', '<p>file system</p>\r\n', '3', 10, 19, '1'),
(45, '<p>file system fragmentation occurs when<br />\r\n&nbsp;</p>\r\n', '<p>unused space or single file are not contiguous</p>\r\n', '<p>used space is not contiguous</p>\r\n', '<p>unused space is non-contiguous</p>\r\n', '<p>multiple files are non-contiguous</p>\r\n', '3', 10, 19, '1'),
(46, '<p>The entry of all the PCBs of the current processes is in :<br />\r\n&nbsp;</p>\r\n', '<p>Process Register</p>\r\n', '<p>Program Counter</p>\r\n', '<p>Process Table</p>\r\n', '<p>Process Unit</p>\r\n', '3', 10, 19, '1'),
(47, '<p>When a page fault occurs before an executing instruction is complete :<br />\r\n&nbsp;</p>\r\n', '<p>the instruction must be restarted</p>\r\n', '<p>the instruction must be ignored</p>\r\n', '<p>the instruction must be completed ignoring the page fault</p>\r\n', '<p>none of the above</p>\r\n', '3', 10, 19, '1'),
(48, '<p>A relationship between processes such that each has some part (critical section) which must not be executed while the critical section of another is being executed, is known as<br />\r\n&nbsp;</p>\r\n', '<p>semaphore</p>\r\n', '<p>mutual exclusion</p>\r\n', '<p>multiprogramming</p>\r\n', '<p>multitasking</p>\r\n', '3', 10, 19, '2'),
(49, '<p>What is the name of the operating system which was originally designed by scientists and engineers for use by scientists and engineers?<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;XENIX</p>\r\n', '<p>UNIX</p>\r\n', '<p>OS/2</p>\r\n', '<p>None of the above</p>\r\n', '3', 10, 19, '2'),
(50, '<p>The most common security failure is<br />\r\n&nbsp;</p>\r\n', '<p>carelessness by users</p>\r\n', '<p>depending on passwords</p>\r\n', '<p>too much emphasis on preventing physical access</p>\r\n', '<p>none of the above</p>\r\n', '3', 10, 19, '1'),
(51, '<p>Terminal Table<br />\r\n&nbsp;</p>\r\n', '<p>contains all constants in the program</p>\r\n', '<p>&nbsp;a permanent table of decision rules in the form of patterns for matching with the uniform symbol table to discover syntactic structure.</p>\r\n', '<p>consists of a full or partial list of the token&#39;s as they appear in the program. Created by Lexical analysis and used for syntax analysis and interpretation</p>\r\n', '<p>&nbsp;a permanent table which lists all key words and special symbols of the language in symbolic form.</p>\r\n', '3', 10, 19, '4'),
(52, '<p>Block or buffer caches are used<br />\r\n&nbsp;</p>\r\n', '<p>to improve disk performance</p>\r\n', '<p>to handle interrupts</p>\r\n', '<p>to increase the capacity of main memory</p>\r\n', '<p>to speed up main memory read operation</p>\r\n', '3', 10, 19, '1'),
(53, '<p>The algorithm in which we split m frames among n processes, to give everyone an equal share, m/n frames is known as :<br />\r\n&nbsp;</p>\r\n', '<p>proportional allocation algorithm</p>\r\n', '<p>equal allocation algorithm</p>\r\n', '<p>split allocation algorithm</p>\r\n', '<p>None of the above</p>\r\n', '3', 10, 19, '2'),
(54, '<p>The number of processes completed per unit time is known as.... ?<br />\r\n&nbsp;</p>\r\n', '<p>Output</p>\r\n', '<p>Throughput</p>\r\n', '<p>Efficiency</p>\r\n', '<p>Capacity</p>\r\n', '3', 10, 19, '2'),
(55, '<p>To avoid the race condition, the number of processes that may be simultaneously inside their critical section is<br />\r\n&nbsp;</p>\r\n', '<p>8</p>\r\n', '<p>1</p>\r\n', '<p>16</p>\r\n', '<p>0</p>\r\n', '3', 10, 19, '1'),
(56, '<p>To protect system,there are how many security levels?<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>4</p>\r\n', '3', 10, 19, '3'),
(57, '<p>A major security problem for operating system is<br />\r\n&nbsp;</p>\r\n', '<p>Authentication problem</p>\r\n', '<p>Physical problem</p>\r\n', '<p>Human problem</p>\r\n', '<p>None of the above</p>\r\n', '3', 10, 19, '1'),
(58, '<p>Which command is used to see the sub-directory structure of drive?<br />\r\n&nbsp;</p>\r\n', '<p>Tree</p>\r\n', '<p>List</p>\r\n', '<p>Subtree</p>\r\n', '<p>None</p>\r\n', '3', 10, 19, '1'),
(59, '<p>______ is a high level abstraction over Semaphore.<br />\r\n&nbsp;</p>\r\n', '<p>Shared memory</p>\r\n', '<p>Monitor</p>\r\n', '<p>Mutual Exclusion</p>\r\n', '<p>None of the above</p>\r\n', '3', 10, 19, '2'),
(60, '<p>A tree sturctured file directory system<br />\r\n&nbsp;</p>\r\n', '<p>allows easy storage and retrieval of file names</p>\r\n', '<p>is a much debated unecessary feature</p>\r\n', '<p>is not essential when we have millions of files</p>\r\n', '<p>none of the above</p>\r\n', '3', 10, 19, '1'),
(61, '<p>In analyzing the compilation of PL/I program, the term &quot;Syntax analysis&quot; is associated with<br />\r\n&nbsp;</p>\r\n', '<p>recognition of basic syntactic constructs through reductions</p>\r\n', '<p>recognition of basic elements and creation of uniform symbols</p>\r\n', '<p>creation of more optional matrix.</p>\r\n', '<p>none of the above</p>\r\n', '4', 10, 19, '1'),
(62, '<p>A hardware device that is capable of executing a sequence of instructions, is known as<br />\r\n&nbsp;</p>\r\n', '<p>CPU</p>\r\n', '<p>ALU</p>\r\n', '<p>CU</p>\r\n', '<p>Processor</p>\r\n', '4', 10, 19, '4'),
(63, '<p>Which of following is/are the advantage(s) of modular programming?<br />\r\n&nbsp;</p>\r\n', '<p>The program is much easier to change</p>\r\n', '<p>Modules can be reused in other programs</p>\r\n', '<p>Easy debugging</p>\r\n', '<p>Easy to compile</p>\r\n', '4', 10, 19, '1'),
(64, '<p>The function(s) performed by the paging software is (are)<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;Implementation of the access environment for all programs in the system</p>\r\n', '<p>Management of the physical address space</p>\r\n', '<p>Sharing and protection</p>\r\n', '<p>All the above</p>\r\n', '4', 10, 19, '4'),
(65, '<p>A compiler for a high-level language that runs on one machine and produces code for a different machine is called is<br />\r\n&nbsp;</p>\r\n', '<p>optimizing compiler</p>\r\n', '<p>one pass compiler</p>\r\n', '<p>cross compiler</p>\r\n', '<p>multipass compiler</p>\r\n', '4', 10, 19, '3'),
(67, '<p>Which directory implementation is used in most Operating System?<br />\r\n&nbsp;</p>\r\n', '<p>Single level directory structure</p>\r\n', '<p>Two level directory structure</p>\r\n', '<p>Tree directory structure</p>\r\n', '<p>Acyclic directory structure</p>\r\n', '4', 10, 19, '3'),
(68, '<p>The mechanism that bring a page into memory only when it is needed is called _____________<br />\r\n&nbsp;</p>\r\n', '<p>Sagmentation</p>\r\n', '<p>Fragmentation</p>\r\n', '<p>Demand Paging</p>\r\n', '<p>Page and Replacement</p>\r\n', '4', 10, 19, '3'),
(69, '<p>The part of machine level instruction, which tells the central processor what has to be done, is<br />\r\n&nbsp;</p>\r\n', '<p>Operation code</p>\r\n', '<p>address</p>\r\n', '<p>Locator</p>\r\n', '<p>Flip flop</p>\r\n', '4', 10, 19, '1'),
(70, '<p>Which of the following disk scheduling strategies is likely to give the best throughput ?<br />\r\n&nbsp;</p>\r\n', '<p>Farthest cylinder next</p>\r\n', '<p>Nearest Cylinder next</p>\r\n', '<p>FCFS</p>\r\n', '<p>Elevator algorithm</p>\r\n', '4', 10, 19, '1'),
(71, '<p>Which of the following algorithm suffers from the Belady&#39;s anomly ?<br />\r\n&nbsp;</p>\r\n', '<p>FIFO</p>\r\n', '<p>LIFO</p>\r\n', '<p>Optimal Algorithm</p>\r\n', '<p>None of the above</p>\r\n', '4', 10, 19, '1'),
(72, '<p>Aging is a technique ?<br />\r\n&nbsp;</p>\r\n', '<p>Used to increase the priority of processed that are waiting for long times</p>\r\n', '<p>Used to decrease the priority that are waiting for long time</p>\r\n', '<p>Used to increase the priority of processed that are currently running</p>\r\n', '<p>Used to decrease the priority processes that are currently running</p>\r\n', '4', 10, 19, '1'),
(73, '<p>What is Page stealing ?<br />\r\n&nbsp;</p>\r\n', '<p>It takes page frames from other working sets</p>\r\n', '<p>To increase the capacity of main memory</p>\r\n', '<p>To speed up main memory read operation</p>\r\n', '<p>None of the above</p>\r\n', '4', 10, 19, '1'),
(74, '<p>When size of the memory is increased the page replacement policy that sometimes leads to more page faults is called _________ .</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>FIFO</p>\r\n', '<p>Optimal</p>\r\n', '<p>LRU</p>\r\n', '<p>None of the above</p>\r\n', '4', 10, 19, '1'),
(75, '<p>Routine is not loaded until it is called. All routines are kept on disk in a relocatable load format. The main program is loaded into memory &amp; is executed. This type of loading is called... ?&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Static loading</p>\r\n', '<p>Dynamic loading</p>\r\n', '<p>Dynamic linking</p>\r\n', '<p>Overlays</p>\r\n', '4', 10, 19, '3'),
(76, '<p>In the blocked state ?&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>the processes waiting for I/O are found</p>\r\n', '<p>the process which is running is found</p>\r\n', '<p>the processes waiting for the processor are found</p>\r\n', '<p>None of the above</p>\r\n', '4', 10, 19, '1'),
(77, '<p>What must reside in the main memory under all situations in a resident - OS computer?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Linker</p>\r\n', '<p>Loader</p>\r\n', '<p>Assembler</p>\r\n', '<p>Compiler</p>\r\n', '4', 10, 19, '2'),
(78, '<p>CPU can access which type of memory directly?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>random-access memory</p>\r\n', '<p>&nbsp;magnetic disk</p>\r\n', '<p>magnetic tape</p>\r\n', '<p>none of the above</p>\r\n', '4', 10, 19, '1'),
(79, '<p>It is not possible to have a deadlock involving only a single process. Why?<br />\r\n&nbsp;</p>\r\n', '<p>This follows directly from the hold-and-wait condition</p>\r\n', '<p>This holds mutual exclusion, hold-and-wait and non-preemption</p>\r\n', '<p>Because single process not always in safe state</p>\r\n', '<p>None of the above</p>\r\n', '4', 10, 19, '1'),
(80, '<p>Interrupts which are initiated by an instruction are</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Internal</p>\r\n', '<p>External</p>\r\n', '<p>Hardware</p>\r\n', '<p>Software</p>\r\n', '4', 10, 19, '4'),
(81, '<p>What is the memory from 1K - 640K called ?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Extended Memory</p>\r\n', '<p>Normal Memory</p>\r\n', '<p>Low Memory</p>\r\n', '<p>Conventional Memory</p>\r\n', '5', 10, 19, '4'),
(82, '<p>What is convoy effect ?<br />\r\n&nbsp;</p>\r\n', '<p>All process waiting for the long process to complete</p>\r\n', '<p>All process waiting for the small process to complete</p>\r\n', '<p>Process in not present in main memory</p>\r\n', '<p>None of the above</p>\r\n', '5', 10, 19, '1'),
(83, '<p>In wildcard specification `?&#39; is used as replacement for<br />\r\n&nbsp;</p>\r\n', '<p>one character</p>\r\n', '<p>two charactors</p>\r\n', '<p>three charactors</p>\r\n', '<p>none of the above</p>\r\n', '5', 10, 19, '1'),
(84, '<p>Which of the following refers to the associative memory?<br />\r\n&nbsp;</p>\r\n', '<p>the address of the data is generated by the CPU</p>\r\n', '<p>the address of the data is supplied by the users</p>\r\n', '<p>there is no need for an address i.e. the data is used as an address</p>\r\n', '<p>the data are accessed sequentially</p>\r\n', '5', 10, 19, '3'),
(85, '<p>A system program that combines the separately compiled modules of a program into a form suitable for execution<br />\r\n&nbsp;</p>\r\n', '<p>assembler</p>\r\n', '<p>linking loader</p>\r\n', '<p>cross compiler</p>\r\n', '<p>load and go</p>\r\n', '5', 10, 19, '2'),
(86, '<p>Which scheduler performs the &quot;swapping out&quot; or &quot;swapping in&quot;?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Long-term scheduling</p>\r\n', '<p>Medium-term scheduling</p>\r\n', '<p>Short-term scheduling</p>\r\n', '<p>None of the above</p>\r\n', '5', 10, 19, '2'),
(87, '<p>Which technique is used to temporarily removing non-active programs from the memory of computer system?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Swapping</p>\r\n', '<p>Spooling</p>\r\n', '<p>Scheduler</p>\r\n', '<p>None of the above</p>\r\n', '5', 10, 19, '1'),
(88, '<p>What is page cannibalizing?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>Page swapping or Page replacements</p>\r\n', '<p>&nbsp;Adding timestamps to the page</p>\r\n', '<p>Avoiding page replacements</p>\r\n', '<p>All the above</p>\r\n', '1', 10, 19, '1'),
(89, '<p>From the following statements which one is not a valid deadlock prevention scheme?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Number the resources uniquely and never request a lower numbered resource than the last one</p>\r\n', '<p>&nbsp;Release all the resources before requesting for a new resource</p>\r\n', '<p>Request all the resources before execution</p>\r\n', '<p>&nbsp;Never request a resource after releasing any resources</p>\r\n', '5', 10, 19, '4'),
(90, '<p>Which of the following helps a system call to invoke?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;Polling</p>\r\n', '<p>&nbsp;A software interrupt</p>\r\n', '<p>Call function</p>\r\n', '<p>&nbsp;Queues</p>\r\n', '5', 10, 19, '2'),
(91, '<p>Operating System: Which RAID level refers to disk mirroring?</p>\r\n', '<p>0</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '5', 10, 19, '2'),
(92, '<p>The optimal page replacement algorithm will select the page that</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>has been used least number of times.</p>\r\n', '<p>has been used most number of times.</p>\r\n', '<p>has been used for the longest time in the past.</p>\r\n', '<p>will not be used for the longest time in future.</p>\r\n', '5', 8, 19, '4'),
(93, '<p>The address generated by the CPU is referred to as:&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>physical address</p>\r\n', '<p>&nbsp;logical address</p>\r\n', '<p>physical as well as logical address.</p>\r\n', '<p>none of the above</p>\r\n', '5', 7, 19, '2'),
(94, '<p>In virtual memory systems, Dynamic address translation<br />\r\n&nbsp;</p>\r\n', '<p>is the hardware necessary to implement paging</p>\r\n', '<p>stores pages at a specific location on disk</p>\r\n', '<p>&nbsp;is useless when swapping is used</p>\r\n', '<p>&nbsp;is part of the operating system paging algorithm</p>\r\n', '5', 10, 19, '1'),
(95, '<p>Fragmentation of the file system<br />\r\n&nbsp;</p>\r\n', '<p>occurs only if the file system is used improperly</p>\r\n', '<p>can always be prevented</p>\r\n', '<p>can be temporarily removed by compaction</p>\r\n', '<p>&nbsp;is a characteristic of all file systems</p>\r\n', '5', 10, 19, '3'),
(96, '<p>A non-relocatable program is one which<br />\r\n&nbsp;</p>\r\n', '<p>cannot be made to execute in any area of storage other than the one designated for it at the time of its coding or translation.</p>\r\n', '<p>&nbsp;consists of a program and relevant information for its relocation.</p>\r\n', '<p>&nbsp;can itself performs the relocation of its address-sensitive portions.</p>\r\n', '<p>all the above</p>\r\n', '6', 10, 19, '3'),
(97, '<p>Which of the following are(is) Language Processor(s)<br />\r\n&nbsp;</p>\r\n', '<p>assembles</p>\r\n', '<p>compilers</p>\r\n', '<p>&nbsp;interpreters</p>\r\n', '<p>all the above</p>\r\n', '6', 10, 19, '4'),
(98, '<p>In which addressing mode the effective address of the operand is the contents of a register specified in the instruction and after accessing the operand, the contents of this register is incremented to point to the next item in the list?<br />\r\n&nbsp;</p>\r\n', '<p>index addressing</p>\r\n', '<p>indirect addressing</p>\r\n', '<p>auto increment</p>\r\n', '<p>auto decrement</p>\r\n', '6', 10, 19, '3'),
(99, '<p>Consider a computer system with 6 tape drives and &#39;n&#39; processes completing for them. What is the maximum value of &#39;n&#39; for the system to be deadlock free? (Assuming that each processes may need 3 tape drives)</p>\r\n', '<p>3</p>\r\n', '<p>2</p>\r\n', '<p>4</p>\r\n', '<p>7</p>\r\n', '6', 10, 19, '2'),
(100, '<p>What is the use of thrashing?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;It improves system performance</p>\r\n', '<p>&nbsp;It implies excessive page I/O</p>\r\n', '<p>&nbsp;It decreases the degree of multiprogramming</p>\r\n', '<p>&nbsp;It reduces page I/O</p>\r\n', '6', 5, 19, '3'),
(101, '<p>What will a simple two pass assembler do in the first pass?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;It will allocate space for the literals.</p>\r\n', '<p>&nbsp;It will generate the code for all the load and store register instruction.</p>\r\n', '<p>&nbsp;It will build the symbol table for the symbols and their values.</p>\r\n', '<p>&nbsp;It will compute the total length of the program</p>\r\n', '6', 8, 19, '1'),
(102, '<p>Consider the following statements:</p>\r\n\r\n<p>a. With the use of kernel supported threads context switch is faster.<br />\r\nb. The entire process can be blocked by the system for user - level threads.<br />\r\nc. Kernel supported threads can be scheduled independently.<br />\r\nd. User level threads are transparent to the kernel.</p>\r\n\r\n<p>Which of the above statements are true?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;a and d</p>\r\n', '<p>a and b</p>\r\n', '<p>&nbsp;b and c</p>\r\n', '<p>a and c</p>\r\n', '6', 10, 19, '3'),
(103, '<p>A system has &#39;m&#39; number of resources of same type and 3 processes A, B, C. Share these resources A, B, C which have the peak demand of 3, 4 and 6 respectively. Deadlock will not occur if the value of &#39;m&#39; is __________.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>m = 15</p>\r\n', '<p>m = 8</p>\r\n', '<p>m = 13</p>\r\n', '<p>m = 9</p>\r\n', '6', 20, 19, '3'),
(104, '<table border="1" cellpadding="1" cellspacing="1" style="width:500px">\r\n	<tbody>\r\n		<tr>\r\n			<td style="text-align:center">Process</td>\r\n			<td style="text-align:center">Arrival time&nbsp;</td>\r\n			<td style="text-align:center">Burst time</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="text-align:center">P0</td>\r\n			<td style="text-align:center">0</td>\r\n			<td style="text-align:center">5</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="text-align:center">P1</td>\r\n			<td style="text-align:center">1</td>\r\n			<td style="text-align:center">7</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="text-align:center">P2</td>\r\n			<td style="text-align:center">3</td>\r\n			<td style="text-align:center">4</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>In the given table it shows P1, P2 and P3 are the three processes.<br />\r\nWhat is the completion order of the 3 processes under the policies First Come First Serve(FCFS) and Round Robin Scheduling? (RRS with CPU quantum time of 2 units)</p>\r\n\r\n<p>&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;FCFS: P1, P2, P3 RR2: P1, P3, P2</p>\r\n', '<p>&nbsp;FCFS: P1, P3, P2 RR2: P1, P2, P3</p>\r\n', '<p>&nbsp;FCFS: P1, P3, P2 RR2: P1, P3, P2</p>\r\n', '<p>FCFS: P1, P2, P3 RR2: P1, P2, P3</p>\r\n', '6', 200, 19, '1'),
(105, '<p>What is said to happen when the result of computation depends on the speed of the processes involved?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A deadlock</p>\r\n', '<p>A time lock</p>\r\n', '<p>&nbsp;Cycle stealing</p>\r\n', '<p>&nbsp;Race condition</p>\r\n', '6', 8, 19, '4'),
(106, '<p>Consider a counting semaphore which was initialized to 10 and then 6P (wait) operations and 4v(signal) operations were completed on this semaphore. What is the resulting value of semaphore?</p>\r\n', '<p>10</p>\r\n', '<p>9</p>\r\n', '<p>8</p>\r\n', '<p>0</p>\r\n', '6', 30, 19, '3'),
(107, '<p>A process executes the code,</p>\r\n\r\n<p>fork();<br />\r\nfork();<br />\r\nfork();</p>\r\n\r\n<p>How many child processes are created?<br />\r\n&nbsp;</p>\r\n', '<p>5</p>\r\n', '<p>8</p>\r\n', '<p>7</p>\r\n', '<p>9</p>\r\n', '6', 20, 19, '3'),
(108, '<p>Why is the Software interrupt required by the processor?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Return from subroutine.</p>\r\n', '<p>Obtain system services, which need execution of privileged instruction.</p>\r\n', '<p>Test the interrupt system of the processor.</p>\r\n', '<p>Implement co-routines.</p>\r\n', '6', 10, 19, '2'),
(109, '<p>A machine has a physical memory of 64 Mbyte and a virtual address space of 32 - bit. The page size is 4kbyte, What is the approximate size of the page table?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;24 Mbyte</p>\r\n', '<p>&nbsp;16 Mbyte</p>\r\n', '<p>2&nbsp;Mbyte</p>\r\n', '<p>8 Mbyte</p>\r\n', '6', 15, 19, '3'),
(110, '<p>We have three processes P0, P1 and P2 whose arrival time and burst time are given below.</p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:500px">\r\n	<tbody>\r\n		<tr>\r\n			<td style="text-align: center;">Process</td>\r\n			<td style="text-align: center;">Arrival time&nbsp;</td>\r\n			<td style="text-align: center;">Burst Time</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="text-align: center;">P0</td>\r\n			<td style="text-align: center;">0ms</td>\r\n			<td style="text-align: center;">9ms</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="text-align: center;">P1</td>\r\n			<td style="text-align: center;">1ms</td>\r\n			<td style="text-align: center;">4ms</td>\r\n		</tr>\r\n		<tr>\r\n			<td style="text-align: center;">P2</td>\r\n			<td style="text-align: center;">2ms</td>\r\n			<td style="text-align: center;">9ms</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>If the preemptive Shortest Job First (SJF) scheduling algorithm is carried out only at arrival or completion of processes then the average waiting time for the three processes is ________.</p>\r\n\r\n<p>&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>7.33ms</p>\r\n', '<p>6.33ms</p>\r\n', '<p>5ms</p>\r\n', '<p>4.33ms</p>\r\n', '6', 200, 19, '3'),
(111, '<p>Which of the following statements is not true for the deadlock prevention and deadlock avoidance schemes?&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;Deadlock avoidance is less restrictive than deadlock prevention</p>\r\n', '<p>&nbsp;In deadlock prevention, the request for resources is always granted, if the resulting state is safe.</p>\r\n', '<p>&nbsp;It is the priority to have the knowledge of resource requirements for deadlock avoidance.</p>\r\n', '<p>In deadlock avoidance, the request for resources is always granted, if the resulting state is safe.</p>\r\n', '7', 8, 19, '4'),
(112, '<p>We have a CPU that generates virtual addresses of 32 bits and the page size is of 4 kbyte. Transition Lookaside Buffer ( TLB ) of the processor can hold a total of 128 page table entries and 4 - way set associative. What is the minimum size of the TLB tag?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>16 bit</p>\r\n', '<p>20 bit</p>\r\n', '<p>11 bit</p>\r\n', '<p>15 bit</p>\r\n', '7', 20, 19, '4'),
(113, '<p>Consider a virtual memory system that uses First In First Out (FIFO) page replacement policy and it allocates a fixed number of frames to a process. Consider the following two statements,</p>\r\n\r\n<p>1: Sometimes the page fault rate is increased if the number of page frames allocated is increased.<br />\r\n2: Some programs do not exhibit Locality of reference.</p>\r\n\r\n<p>Which of the following is true?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1 is false and 2 is true</p>\r\n', '<p>&nbsp;both 1 and 2 are false</p>\r\n', '<p>both 1 and 2 are true but 2 is not the reason for 1</p>\r\n', '<p>both 1 and 2 are true and 2 is the reason for 1</p>\r\n', '7', 15, 19, '3'),
(114, '<p>Why do we translate a virtual address to physical address where a multilevel page table is preferred in comparison to a single level page table?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;It is required by the translation look-aside buffer</p>\r\n', '<p>&nbsp;It helps to reduce the memory access time to read or write a memory location</p>\r\n', '<p>It helps to reduce the number of page faults in page replacement algorithm</p>\r\n', '<p>&nbsp;It helps to reduce the size of a page table needed to implement the virtual address space of a process</p>\r\n', '7', 10, 19, '4'),
(115, '<p>OS: If the disk head is located initially at 32, find the number of disk moves required with FCFS if the disk queue of I/O blocks requests are 98, 37, 14, 124, 65, 70.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>320</p>\r\n', '<p>321</p>\r\n', '<p>324</p>\r\n', '<p>none of the above</p>\r\n', '7', 150, 19, '3'),
(116, '<p>The maximum amount of information that is available in one portion of the disk access arm for a removal disk pack (without further movement of the arm with multiple heads)<br />\r\n&nbsp;</p>\r\n', '<p>A cylinder of data</p>\r\n', '<p>A track of data</p>\r\n', '<p>A block of data</p>\r\n', '<p>A plate of Data</p>\r\n', '7', 5, 19, '1'),
(117, '<p>Match the following:<br />\r\nList &ndash; I - - - - - - - - - - - - - - - - - - - - - - - - - List &ndash; II<br />\r\na. Multilevel feedback queue - - - - - - - - - i. Time-slicing<br />\r\nb. FCFS - - - - - - - - - - - - - - - - - - - - - - - -ii. Criteria to move processes between queues<br />\r\nc. Shortest process next - - - - - - - - - - - -iii. Batch processing<br />\r\nd. Round robin scheduling - - - - - - - - - - -iv. Exponential smoothing</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;a-i, b-iii, c-ii, d-iv</p>\r\n', '<p>&nbsp;a-iv, b-iii, c-ii, d-i</p>\r\n', '<p>a-iii, b-i, c-iv, d-i</p>\r\n', '<p>a-ii, b-iii, c-iv, d-i<br />\r\n&nbsp;</p>\r\n', '7', 15, 19, '4'),
(118, '<p>An application loads 100 libraries at startup and loading each library exactly one disk access is required. 10ms is the seek time of the disk to a random location and 6000rpm is the rotational speed of the disk. Neglect the time to transfer data from the disk block once the head has been positioned at the start of the block. What will be the time taken by the application to load all the libraries, if all 100 libraries are loaded from random location on the disk?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;1.50s</p>\r\n', '<p>1s</p>\r\n', '<p>1.87s</p>\r\n', '<p>0.74s</p>\r\n', '7', 30, 19, '1'),
(119, '<p>The program given below consists of three concurrent processes P0, P1, P2 and three binary semaphores with the values S0 = 1, S1 = 0, S2 = 0.&nbsp;<br />\r\nHow many times the process P0 will print &lsquo;0&rsquo; ?<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<table border="1" cellpadding="1" cellspacing="1" style="width:500px">\r\n	<tbody>\r\n		<tr>\r\n			<td style="text-align:center">Process P0</td>\r\n			<td style="text-align:center">Process P1</td>\r\n			<td style="text-align:center">Process P2</td>\r\n		</tr>\r\n		<tr>\r\n			<td>\r\n			<p style="text-align:center">wait(s0);</p>\r\n\r\n			<p style="text-align:center">Print &#39;0&#39;</p>\r\n\r\n			<p style="text-align:center">release(s1);</p>\r\n\r\n			<p style="text-align:center">release(s2);</p>\r\n\r\n			<p style="text-align:center">}</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align:center">wait(s1);</p>\r\n\r\n			<p style="text-align:center">release(s1);</p>\r\n			</td>\r\n			<td>\r\n			<p style="text-align:center">wait(s2);</p>\r\n\r\n			<p style="text-align:center">release(s0);</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>At least thrice</p>\r\n', '<p>&nbsp;Exactly thrice</p>\r\n', '<p>&nbsp;At least twice</p>\r\n', '<p>Exactly twice<br />\r\n&nbsp;</p>\r\n', '7', 120, 19, '3'),
(120, '<p>In a virtual memory environment the minimum number of page frames that must be allocated to a running process is determined by ___________________.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;The Number of Processes in the Memory</p>\r\n', '<p>&nbsp;The Instruction Set Architecture</p>\r\n', '<p>&nbsp;The Page Size</p>\r\n', '<p>&nbsp;The Physical Memory Size</p>\r\n', '7', 10, 19, '2'),
(121, '<p>We have an operating system, which is capable of loading and executing a single sequential user process at a time. If the disk head scheduling algorithm which is initially First Come First Served (FCFS) is replaced by Shortest Seek Time First (SSTF) claimed by the vendor to give 50% better benchmark results then what is the expected improvement in the I / O performance of the user programs?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;0%</p>\r\n', '<p>&nbsp;25%</p>\r\n', '<p>&nbsp;50%</p>\r\n', '<p>&nbsp;75%</p>\r\n', '8', 20, 19, '1'),
(122, '<p>What is the effect of using a larger block size in a fixed block size file system?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;It leads to poorer disk throughput and poorer disk space utilization</p>\r\n', '<p>It leads to poorer disk throughput but better disk space utilization</p>\r\n', '<p>It leads to better disk throughput and better disk space utilization</p>\r\n', '<p>It leads to better disk throughput and poorer disk space utilization</p>\r\n', '8', 10, 19, '4'),
(123, '<p>Consider a system with 32 bit virtual addresses and 1 kbyte page size. Why is it not possible to use one - level page tables for virtual to physical address translation?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;The amount of external fragmentation</p>\r\n', '<p>&nbsp;The amount of internal fragmentation</p>\r\n', '<p>The large computation overhead in the translation process</p>\r\n', '<p>The large memory overhead in maintaining page tables<br />\r\n&nbsp;</p>\r\n', '8', 10, 19, '4'),
(124, '<p>We have a uniprocessor machine where a set of n tasks with known run times r1, r2, r3,&hellip;.rn are to be run. What will be the maximum throughput result of the processor scheduling algorithm?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;Shortest Job First</p>\r\n', '<p>First Come First Served</p>\r\n', '<p>Round Robin</p>\r\n', '<p>&nbsp;Highest Response Ratio Next</p>\r\n', '8', 20, 19, '1'),
(125, '<p>Three CPU intensive processes requires 10, 20 and 30 time units and arrive at times 0, 2 and 6 respectively. The operating system implements a shortest remaining time first scheduling algorithm. Considering that the context switches at time zero and at the end are not counted the number of context switches are needed is ______.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>4</p>\r\n', '<p>3</p>\r\n', '<p>2</p>\r\n', '<p>1</p>\r\n', '8', 20, 19, '3'),
(126, '<p>The capacity of a memory unit = (the number of words) * (the number of bits / words). What will be the number of separate address and data lines needed for a memory of 4k * 16 ?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;12 address and 16 data lines</p>\r\n', '<p>12 address and 12 data lines</p>\r\n', '<p>&nbsp;11 address and 6 data lines</p>\r\n', '<p>12 address and 8 data lines</p>\r\n', '8', 15, 19, '1'),
(127, '<p>Which of the following statements is true for the dirty page in a page table?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Helps to maintain LRU information</p>\r\n', '<p>Allows only read on a page</p>\r\n', '<p>&nbsp;Helps to avoid unnecessary writes on paging device</p>\r\n', '<p>None of the above</p>\r\n', '8', 8, 19, '3'),
(128, '<p>An operating system maintains smaller data structures for a thread than a process, as a thread is usually defined as a &lsquo; light weight process &rsquo;. What is the per thread basis of the operating system?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Does not maintain a separate stack</p>\r\n', '<p>Maintains only CPU register state.</p>\r\n', '<p>&nbsp;Does not maintain a virtual memory state</p>\r\n', '<p>Maintains only scheduling and accounting information</p>\r\n', '8', 10, 19, '4'),
(129, '<p>We have a process that has been allocated 3 page frames and initially none of the pages of the process are available in the memory. The following sequence of page references (reference string) is made by the process :&nbsp;<br />\r\n1, 2, 1, 3, 7, 4, 5, 6, 3, 1<br />\r\nHow many page faults will occur for the above reference string with the Least Recently Used(LRU) Page Replacement Policy in comparison to an Optimal Page Replacement policy?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>3</p>\r\n', '<p>2</p>\r\n', '<p>1</p>\r\n', '<p>0</p>\r\n', '8', 120, 19, '2'),
(130, '<p>A program is executing in a pure demand paging system with 100 records per page with 1 free main memory frame. The address sequence that is generated by tracing this program is recorded as follows,<br />\r\n0100, 0200, 0430, 0499, 0510, 0530, 0560, 0120, 0220, 0240, 0260, 0320, 0370<br />\r\nWhat are the number of page faults?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>8</p>\r\n', '<p>11</p>\r\n', '<p>7</p>\r\n', '<p>12</p>\r\n', '8', 180, 19, '3'),
(131, '<p>We have a process that has been allocated 3 page frames and initially none of the pages of the process are available in the memory. The following sequence of page references (reference string) is made by the process :&nbsp;<br />\r\n1, 2, 1, 3, 7, 4, 5, 6, 3, 1<br />\r\nIf Optimal Page Replacement policy is used, _______ page faults will occur for the above reference string.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>7</p>\r\n', '<p>8</p>\r\n', '<p>9</p>\r\n', '<p>6</p>\r\n', '8', 120, 19, '1'),
(159, '<p>A wire is lopped in the form of a circle of radius 28 cm. It is bent again into a square form. What will be the length of the diagonal of the largest square possible thus?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>88 root 2</p>\r\n', '<p>44 root 2</p>\r\n', '<p>44</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>88</p>\r\n', '6', 30, 25, '2'),
(162, '<p>Which of the following operation will give the sum of the reciprocals of x and y and unity?</p>\r\n', '<p>(x + y)*(x &ndash; y)</p>\r\n', '<p>[(x*y) &ndash; x]-y</p>\r\n', '<p>[{x * y) &ndash; (x + y)} &ndash; x]- y</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(x + y) &ndash; (x &ndash; y )</p>\r\n', '8', 38, 25, '3'),
(163, '<p>Read the instructions to solve the question-</p>\r\n\r\n<p>A*B=A<sup>3</sup> -B<sup>3</sup></p>\r\n\r\n<p>A + B=A-B</p>\r\n\r\n<p>A &ndash; B=A/B</p>\r\n\r\n<p>Find the value of (3*4) &ndash; (8 + 12)</p>\r\n', '<p>9.25</p>\r\n', '<p>9</p>\r\n', '<p>-9.25</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 28, 25, '1'),
(164, '<p>Which of the following is an even function?</p>\r\n', '<p>|x<sup>2</sup>&nbsp;|- 5x</p>\r\n', '<p>x<sup>4</sup>&nbsp;+ x<sup>5</sup></p>\r\n', '<p>e<sup>2x</sup>&nbsp;+ e<sup>-2x</sup></p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>|x|<sup>2</sup>&nbsp;/x</p>\r\n', '6', 30, 25, '3'),
(166, '<p>Find the maximum value of the function 1/(x<sup>2</sup> &ndash; 3x + 2).</p>\r\n', '<p>&frac14;</p>\r\n', '<p>11/4</p>\r\n', '<p>0</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '7', 32, 25, '4'),
(168, '<p>For what value of x, x<sup>2</sup> + 10x + 11 will give the minimum value?</p>\r\n', '<p>5</p>\r\n', '<p>10</p>\r\n', '<p>-10</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>-5</p>\r\n', '5', 38, 25, '4'),
(169, '<p>If f(x) = e<sup>x</sup> , then the value of 7 f(x) will be equal to-</p>\r\n', '<p>e<sup>7x</sup></p>\r\n', '<p>7e<sup>x</sup></p>\r\n', '<p>7e<sup>7x</sup></p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>e<sup>x</sup></p>\r\n', '4', 24, 25, '2'),
(170, '<p>Define the following functions-</p>\r\n\r\n<p>i) a @ b = a+b/2</p>\r\n\r\n<p>ii) a # b = a<sup>2</sup> - b<sup>2</sup></p>\r\n\r\n<p>iii) a!b = a-b/2</p>\r\n\r\n<p>Find the value of {[(3@4)!(3#2)] @ [(4!3)@(2#3)]}</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>-0.75</p>\r\n', '<p>-1</p>\r\n', '<p>-2.25</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>-1.5</p>\r\n', '4', 50, 25, '4'),
(171, '<p>Define the following functions-</p>\r\n\r\n<p>i) a @ b = a+b/2</p>\r\n\r\n<p>ii) a # b = a<sup>2</sup> - b<sup>2</sup></p>\r\n\r\n<p>iii) a!b = a-b/2</p>\r\n\r\n<p>Find the value of (4#3)@(2!3)-</p>\r\n', '<p>3.25</p>\r\n', '<p>7</p>\r\n', '<p>3.5</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>6.5</p>\r\n', '3', 40, 25, '1'),
(172, '<p>Define the following functions-</p>\r\n\r\n<p>i) a @ b = a+b/2</p>\r\n\r\n<p>ii) a # b = a<sup>2</sup> - b<sup>2</sup></p>\r\n\r\n<p>iii) a!b = a-b/2</p>\r\n\r\n<p>Which of the following has a value of 0.25 for a=0 and b= 0.5?</p>\r\n', '<p>a#b</p>\r\n', '<p>a@b</p>\r\n', '<p>Either a) or b)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Cannot be determined</p>\r\n', '3', 55, 25, '2'),
(173, '<p>Define the following functions-</p>\r\n\r\n<p>i) a @ b = a+b/2</p>\r\n\r\n<p>ii) a # b = a<sup>2</sup> - b<sup>2</sup></p>\r\n\r\n<p>iii) a!b = a-b/2</p>\r\n\r\n<p>Which of the following has a value of 4 for a= 5 and b= 3?</p>\r\n', '<p>(a!b)(a@b)</p>\r\n', '<p>(a!b)/(a#b)</p>\r\n', '<p>(a#b)/(a!b)(a@b)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both a) and c)</p>\r\n', '3', 50, 25, '4'),
(174, '<p>Define the following functions-</p>\r\n\r\n<p>i) a @ b = a+b/2</p>\r\n\r\n<p>ii) a # b = a 2 - b 2</p>\r\n\r\n<p>iii) a!b = a-b/2</p>\r\n\r\n<p>If we define a$b as a 3 -b 3 ,then for integers a, b&gt;2 and a&gt;b which of the following will be always true?</p>\r\n', '<p>(a@b)&gt;(a!b)</p>\r\n', '<p>(a#b)&lt;(a$b)</p>\r\n', '<p>(a@b)&gt;=(a!b)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both a) and b)</p>\r\n', '5', 32, 25, '4'),
(175, '<p>Define the following functions-</p>\r\n\r\n<p>a) (a M b)=a-b</p>\r\n\r\n<p>b) (a D b)=a+b</p>\r\n\r\n<p>c) (a H b)=ab</p>\r\n\r\n<p>d) (a P b)=a/b</p>\r\n\r\n<p>Which of the following functions will represent a 2 -b 2 ?</p>\r\n', '<p>(a M b) H (a D b)</p>\r\n', '<p>(a H b) M (a P b)</p>\r\n', '<p>(a D b)/(a M b)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 32, 25, '1'),
(176, '<p>Define the following functions-</p>\r\n\r\n<p>a) (a M b)=a-b</p>\r\n\r\n<p>b) (a D b)=a+b</p>\r\n\r\n<p>c) (a H b)=ab</p>\r\n\r\n<p>d) (a P b)=a/b</p>\r\n\r\n<p>Which of the following represents a 2 ?</p>\r\n', '<p>(a M b) H (a D b) + b<sup>2</sup></p>\r\n', '<p>(a H b) M (a P b) + b<sup>2</sup></p>\r\n', '<p>(a M b)/(a P b)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both a) and c)</p>\r\n', '5', 30, 25, '1'),
(177, '<p>Define the following functions-</p>\r\n\r\n<p>a) (a M b)=a-b</p>\r\n\r\n<p>b) (a D b)=a+b</p>\r\n\r\n<p>c) (a H b)=ab</p>\r\n\r\n<p>d) (a P b)=a/b</p>\r\n\r\n<p>What is the value of (3M4H2D4P8M2)?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>6.5</p>\r\n', '<p>6</p>\r\n', '<p>-6.5</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '6', 30, 25, '3'),
(178, '<p>Define the following functions-</p>\r\n\r\n<p>a) (a M b)=a-b</p>\r\n\r\n<p>b) (a D b)=a+b</p>\r\n\r\n<p>c) (a H b)=ab</p>\r\n\r\n<p>d) (a P b)=a/b</p>\r\n\r\n<p>Which of the four functions defined has the maximum value?</p>\r\n', '<p>(a M b)</p>\r\n', '<p>(a D b)</p>\r\n', '<p>(a P b)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Cannot be determined</p>\r\n', '7', 35, 25, '4');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(179, '<p>Define the following functions-</p>\r\n\r\n<p>a) (a M b)=a-b</p>\r\n\r\n<p>b) (a D b)=a+b</p>\r\n\r\n<p>c) (a H b)=ab</p>\r\n\r\n<p>d) (a P b)=a/b</p>\r\n\r\n<p>Which of the four functions defined has the minimum value?</p>\r\n', '<p>(a M b)</p>\r\n', '<p>(a D b)</p>\r\n', '<p>(a H b)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Cannot be determined</p>\r\n', '7', 38, 25, '4'),
(180, '<p>Define the following functions:</p>\r\n\r\n<p>f(x,y,z) = xy+yz+zx</p>\r\n\r\n<p>g(x,y,z) = x<sup>2</sup>y + y<sup>2</sup>z + z<sup>2</sup>x and</p>\r\n\r\n<p>h(x,y,z) = 3xyz</p>\r\n\r\n<p>Find the value of following expression-</p>\r\n\r\n<p>h[f(2,3,1), g(3,4,2), h(1/3, 1/3, 3)]</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '<p>23760</p>\r\n', '<p>2640</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '7', 45, 25, '3'),
(181, '<p>Define the following functions:</p>\r\n\r\n<p>f(x,y,z) = xy+yz+zx</p>\r\n\r\n<p>g(x,y,z) = x<sup>2</sup>y + y<sup>2</sup>z + z<sup>2</sup>x and</p>\r\n\r\n<p>h(x,y,z) = 3xyz</p>\r\n\r\n<p>Find the value of following expression-</p>\r\n\r\n<p>g[f(1, 0, 0), g(0, 1, 0), h(1, 1, 1)]</p>\r\n', '<p>0</p>\r\n', '<p>9</p>\r\n', '<p>12</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>18</p>\r\n', '6', 48, 25, '1'),
(182, '<p>Define the following functions:</p>\r\n\r\n<p>f(x,y,z) = xy+yz+zx</p>\r\n\r\n<p>g(x,y,z) = x<sup>2</sup>y + y<sup>2</sup>z + z<sup>2</sup>x and</p>\r\n\r\n<p>h(x,y,z) = 3xyz</p>\r\n\r\n<p>Find the value of following expression-</p>\r\n\r\n<p>f[f(1, 1, 1), g(1, 1, 1), h(1, 1, 1)]</p>\r\n', '<p>9</p>\r\n', '<p>18</p>\r\n', '<p>27</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '6', 50, 25, '3'),
(183, '<p>Define the following functions:</p>\r\n\r\n<p>f(x,y,z) = xy+yz+zx</p>\r\n\r\n<p>g(x,y,z) = x<sup>2</sup>y + y<sup>2</sup>z + z<sup>2</sup>x and</p>\r\n\r\n<p>h(x,y,z) = 3xyz</p>\r\n\r\n<p>Find the value of following expression-</p>\r\n\r\n<p>f(1, 2, 3) &ndash; g(1, 2, 3) + h(1, 2, 3)</p>\r\n', '<p>-6</p>\r\n', '<p>6</p>\r\n', '<p>12</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>8</p>\r\n', '6', 50, 25, '2'),
(184, '<p>Solve the following equation-</p>\r\n\r\n<p>3x<sup>2&nbsp;</sup>&ndash; 7x + 4 &lt;<span style="font-size:10.8333px">=</span>&nbsp;0</p>\r\n', '<p>X&gt;&nbsp;0</p>\r\n', '<p>X&lt;&nbsp;0</p>\r\n', '<p>All x</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '7', 45, 25, '4'),
(185, '<p>Solve the given equation-</p>\r\n\r\n<p>X<sup>2&nbsp;</sup>&ndash; 14x - 15 &gt; 0</p>\r\n', '<p>X &lt; -1</p>\r\n', '<p>15 &lt; x</p>\r\n', '<p>Both a) and b)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;-1 &lt; x &lt; 15</p>\r\n', '8', 45, 25, '3'),
(186, '<p>Solve the following equation&mdash;</p>\r\n\r\n<p>X<sup>2</sup>&nbsp;&ndash; 7x + 12 &lt;&nbsp;|x &ndash; 4|</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>X &lt; 2</p>\r\n', '<p>X &gt; 4</p>\r\n', '<p>2 &lt; x&lt; 4</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2&lt;=x&lt;=4</p>\r\n', '8', 45, 25, '3'),
(187, '<p>Find the largest integral x that satisfies the given inequality-</p>\r\n\r\n<p>x-2/x<sup>2</sup>-9 &lt; 0</p>\r\n', '<p>x=-4</p>\r\n', '<p>x=-2</p>\r\n', '<p>x=3</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '8', 42, 25, '1'),
(188, '<p>Solve the following polynomial inequality:</p>\r\n\r\n<p>(x-1)(3- x)/(x-2)<sup>2</sup>&nbsp;&gt; 0</p>\r\n', '<p>1</p>\r\n', '<p>-1</p>\r\n', '<p>-3</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '8', 45, 25, '2'),
(189, '<p>Which of the following is not the component of .Net framework?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Common Language Run time(CLR)</p>\r\n', '<p>.Net Framework Library.</p>\r\n', '<p>Component Network</p>\r\n', '<p>Windows Workflow Foundation (WF)<br />\r\n&nbsp;</p>\r\n', '1', 15, 5, '3'),
(190, '<p>Following is/are the Integrated Development Environment (IDE) for C#.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Visual Studio 2010 (VS)&nbsp;</p>\r\n', '<p>Visual Web Developer</p>\r\n', '<p>Both A and B</p>\r\n', '<p>None of the above</p>\r\n', '1', 15, 5, '3'),
(191, '<p>A C# program may consist of the following parts.</p>\r\n\r\n<p>i) Namespace declaration</p>\r\n\r\n<p>ii) Class methods</p>\r\n\r\n<p>iii) A main method</p>\r\n\r\n<p>iv) Statement &amp; Expressions</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i, ii and iii only</p>\r\n', '<p>ii, iii and iv only</p>\r\n', '<p>i, iii and iv only</p>\r\n', '<p>All the above</p>\r\n', '1', 17, 5, '4'),
(192, '<p>State True or False for naming class in C#.</p>\r\n\r\n<p>i) The class name can be a C# keyword.</p>\r\n\r\n<p>ii) A name must begin with a letter, can be followed by letters, digits and underscore.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i- True, ii- False</p>\r\n', '<p>i- False, ii- True</p>\r\n', '<p>i-True, ii-True</p>\r\n', '<p>i- False, ii- False</p>\r\n', '1', 17, 5, '2'),
(193, '<p>...................... is a name which can be used to identify a class, variable, function etc.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Keyword</p>\r\n', '<p>Reference</p>\r\n', '<p>Identifier</p>\r\n', '<p>Object</p>\r\n', '1', 16, 5, '3'),
(194, '<p>.................... conversions are performed by C# compiler itself and ..................... conversions are performed by users by using predefined functions.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Implicit type, Explicit type</p>\r\n', '<p>Explicit type, Implicit type</p>\r\n', '<p>External type, Internal type</p>\r\n', '<p>Internal type, External type</p>\r\n', '1', 20, 5, '1'),
(195, '<p>A variable can be declared by using which of the following syntax?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;variable_list&gt; &lt;data_type&gt;;</p>\r\n', '<p>&lt;variable_list&gt;, &lt;data_type&gt;</p>\r\n', '<p>&lt;data_type&gt; &lt;variable_list&gt;</p>\r\n', '<p>&lt;data_type&gt; &lt;variable_list&gt;;</p>\r\n', '1', 5, 5, '4'),
(196, '<p>Match the following.</p>\r\n\r\n<p>i) * &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;a) returns the address of an variable</p>\r\n\r\n<p>ii) ? : &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;b) point to variable</p>\r\n\r\n<p>iii) &amp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c) conditional expression</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-a, ii-b, iii-c</p>\r\n', '<p>i-b, ii-c, iii-a</p>\r\n', '<p>i-c, ii-a, iii-b</p>\r\n', '<p>i-a, ii-c, iii-b</p>\r\n', '1', 18, 5, '2'),
(197, '<p>C# supports the following types of access specifiers.</p>\r\n\r\n<p>i) public ii) friend iii) private iv) protected v) internal</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i, ii, iii and iv only</p>\r\n', '<p>i, iii, iv and v only</p>\r\n', '<p>i, ii, iv and v only</p>\r\n', '<p>All i, ii, iii, iv and v</p>\r\n', '1', 18, 5, '2'),
(198, '<p>........................ access specifier allows a class to expose it&#39;s member variables and member functions to other functions and objects in the current application.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Internal</p>\r\n', '<p>Protected</p>\r\n', '<p>Private</p>\r\n', '<p>Public</p>\r\n', '1', 23, 5, '1'),
(199, '<p>A local variable&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Can be used anywhere in the program&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Is declared within a method</p>\r\n', '<p>Must accept a class&nbsp;</p>\r\n', '<p>Represent a class object</p>\r\n', '1', 13, 5, '2'),
(200, '<p>An instance variable&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>is an object of a class&nbsp;</p>\r\n', '<p>represents an attribute of an object&nbsp;</p>\r\n', '<p>is a method of a class&nbsp;</p>\r\n', '<p>both&nbsp; a and c</p>\r\n', '1', 14, 5, '2'),
(201, '<p>Private Button print = new button();&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>creates a button control&nbsp;</p>\r\n', '<p>initializes a button control&nbsp;</p>\r\n', '<p>instantiates button control&nbsp;</p>\r\n', '<p>both a and c</p>\r\n', '1', 15, 5, '4'),
(202, '<p>An instance method&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Represents the behavior of an object</p>\r\n', '<p>Represents the attribute of an object&nbsp;</p>\r\n', '<p>Represents another class&nbsp;</p>\r\n', '<p>Both a and b</p>\r\n', '1', 14, 5, '1'),
(203, '<p>Which of these methods of class are used to remove the leading and backward whitespaces?</p>\r\n', '<p>startsWith()</p>\r\n', '<p>trim()</p>\r\n', '<p>Trim()</p>\r\n', '<p>doTrim()</p>\r\n', '1', 5, 5, '3'),
(204, '<p>A Constructor&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>is used to create objects&nbsp;</p>\r\n', '<p>must have the same name as the class it is declared within&nbsp;</p>\r\n', '<p>maybe overloaded&nbsp;</p>\r\n', '<p>all the above</p>\r\n', '1', 13, 5, '4'),
(205, '<p>How many Bytes are stored by &lsquo;Long&rsquo; Datatype in C# .net?<br />\r\n&nbsp;</p>\r\n', '<p>8</p>\r\n', '<p>4</p>\r\n', '<p>2</p>\r\n', '<p>1</p>\r\n', '1', 13, 5, '1'),
(206, '<p>Which form of inheritance is not supported directly by C# .NET?<br />\r\n&nbsp;</p>\r\n', '<p>Multiple inheritance</p>\r\n', '<p>Multilevel inheritance<br />\r\n&nbsp;</p>\r\n', '<p>Single inheritance</p>\r\n', '<p>Hierarchical inheritance</p>\r\n', '1', 15, 5, '1'),
(207, '<p>class Test: Form { }&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Creates the class Test : Form&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Creates the class Test that inherits the class Form</p>\r\n', '<p>Creates the class form that inherits the class Test&nbsp;</p>\r\n', '<p>Both a and b</p>\r\n', '1', 14, 5, '2'),
(208, '<p>A variable declared inside a method is called a________variable&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Static&nbsp;</p>\r\n', '<p>Private</p>\r\n', '<p>Local&nbsp;</p>\r\n', '<p>Serial</p>\r\n', '1', 15, 5, '3'),
(209, '<p>Automatic&nbsp;paging&nbsp;is&nbsp;possible&nbsp;in<br />\r\n&nbsp;</p>\r\n', '<p>datareader</p>\r\n', '<p>dataset</p>\r\n', '<p>datalabel</p>\r\n', '<p>all the above</p>\r\n', '1', 14, 5, '3'),
(210, '<p>Which&nbsp;file&nbsp;contains&nbsp;configuration&nbsp;data&nbsp;for&nbsp;each&nbsp;unique&nbsp;URL&nbsp;resource&nbsp;used&nbsp;in&nbsp;project?<br />\r\n&nbsp;</p>\r\n', '<p>global.asax<br />\r\n&nbsp;</p>\r\n', '<p>assemblyinfo.cs</p>\r\n', '<p>web.config</p>\r\n', '<p>webapplication.vsdisco</p>\r\n', '1', 17, 5, '3'),
(211, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;characters&nbsp;ends&nbsp;every&nbsp;C#&nbsp;statement?<br />\r\n&nbsp;</p>\r\n', '<p>Period&nbsp;(.)</p>\r\n', '<p>Colon&nbsp;(:)</p>\r\n', '<p><br />\r\nSemicolon&nbsp;(?)<br />\r\n&nbsp;</p>\r\n', '<p>Comma&nbsp;(,)</p>\r\n', '1', 15, 5, '3'),
(212, '<p>Managed&nbsp;methods&nbsp;will&nbsp;be&nbsp;marked&nbsp;as&nbsp;&shy;&shy;&shy;&shy;&shy;&shy;&shy;&shy;&shy;&shy;&shy;&shy;&nbsp;in&nbsp;MSIL&nbsp;code<br />\r\n&nbsp;</p>\r\n', '<p>cil</p>\r\n', '<p>dgclr<br />\r\n&nbsp;</p>\r\n', '<p>mscorjit</p>\r\n', '<p>none of the above</p>\r\n', '1', 17, 5, '1'),
(213, '<p>Which&nbsp;property&nbsp;will&nbsp;you&nbsp;use&nbsp;to&nbsp;process&nbsp;different&nbsp;server&nbsp;paths&nbsp;in&nbsp;a&nbsp;page?<br />\r\n&nbsp;</p>\r\n', '<p>Request</p>\r\n', '<p>Response</p>\r\n', '<p>Server</p>\r\n', '<p>Application</p>\r\n', '1', 17, 5, '3'),
(214, '<p>In&nbsp;data&nbsp;reader,&nbsp;what&nbsp;can&nbsp;be&nbsp;used&nbsp;before&nbsp;read&nbsp;method?<br />\r\n&nbsp;</p>\r\n', '<p>Getstring</p>\r\n', '<p>Getvalue</p>\r\n', '<p>GetNumber</p>\r\n', '<p>None of the above</p>\r\n', '1', 15, 5, '4'),
(215, '<p>Which&nbsp;method&nbsp;do&nbsp;you&nbsp;invoke&nbsp;on&nbsp;the&nbsp;SQLDataAdapter&nbsp;object&nbsp;to&nbsp;load&nbsp;your&nbsp;dataset&nbsp;with&nbsp;data?<br />\r\n&nbsp;</p>\r\n', '<p>Update</p>\r\n', '<p>Fill</p>\r\n', '<p>Gather</p>\r\n', '<p>Load</p>\r\n', '1', 17, 5, '2'),
(216, '<p>What&nbsp;is&nbsp;MSIL?<br />\r\n&nbsp;</p>\r\n', '<p>Multi&nbsp;Socket&nbsp;Interface&nbsp;Library</p>\r\n', '<p>Microsoft&nbsp;Intermediate&nbsp;Language<br />\r\n&nbsp;</p>\r\n', '<p>Microsoft&nbsp;Interface&nbsp;Language</p>\r\n', '<p>Microsoft&nbsp;Integer&nbsp;Long</p>\r\n', '1', 15, 5, '2'),
(217, '<p>An&nbsp;assembly&nbsp;is<br />\r\n&nbsp;</p>\r\n', '<p>A&nbsp;collection&nbsp;of&nbsp;files&nbsp;that&nbsp;appear&nbsp;to&nbsp;the&nbsp;programmer&nbsp;to&nbsp;be&nbsp;a&nbsp;single&nbsp;DLL&nbsp;or&nbsp;EXE.</p>\r\n', '<p>properties&nbsp;of&nbsp;c#</p>\r\n', '<p>events of&nbsp;c#</p>\r\n', '<p>declarative&nbsp;syntax&nbsp;of&nbsp;Java</p>\r\n', '1', 14, 5, '1'),
(218, '<p>What&nbsp;is&nbsp;boxing?<br />\r\n&nbsp;</p>\r\n', '<p>Encapsulating&nbsp;an&nbsp;object&nbsp;in&nbsp;a&nbsp;value&nbsp;type.</p>\r\n', '<p>Encapsulating&nbsp;a&nbsp;copy&nbsp;of&nbsp;an&nbsp;object&nbsp;in&nbsp;a&nbsp;value&nbsp;type.</p>\r\n', '<p>Encapsulating&nbsp;a&nbsp;value&nbsp;type&nbsp;in&nbsp;an&nbsp;object.</p>\r\n', '<p>Encapsulating&nbsp;a&nbsp;copy&nbsp;of&nbsp;a&nbsp;value&nbsp;type&nbsp;in&nbsp;an&nbsp;object.</p>\r\n', '1', 14, 5, '2'),
(219, '<p>Two&nbsp;methods&nbsp;with&nbsp;the&nbsp;same&nbsp;name&nbsp;but&nbsp;with&nbsp;different&nbsp;parameters. &nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Overloading</p>\r\n', '<p>Loading</p>\r\n', '<p>Multiplexing</p>\r\n', '<p>Dulpexing</p>\r\n', '1', 15, 5, '1'),
(220, '<p>Find any errors in the following BankAccount constructor: Public int BankAccount() { balance = 0; }&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Name&nbsp;</p>\r\n', '<p>Formal parameters&nbsp;</p>\r\n', '<p>Return type</p>\r\n', '<p>No errors</p>\r\n', '2', 18, 5, '3'),
(221, '<p>In the body of a method, C# uses the variable named_____to refer to the current object whose method is being invoked.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>call</p>\r\n', '<p>this</p>\r\n', '<p>do&nbsp;</p>\r\n', '<p>that</p>\r\n', '2', 17, 5, '2'),
(222, '<p>&nbsp;String mystring; Creates a(n)&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Class&nbsp;</p>\r\n', '<p>Constructor&nbsp;</p>\r\n', '<p>Object</p>\r\n', '<p>Both a and b</p>\r\n', '2', 15, 5, '3'),
(223, '<p>Which among the following is used for storage of memory aspects?</p>\r\n', '<p>BufferedStream</p>\r\n', '<p>FileStream</p>\r\n', '<p>MemoryStream</p>\r\n', '<p>None of the above</p>\r\n', '2', 5, 5, '3'),
(224, '<p>Which among the following is used for storage of unmanaged memory aspects?<br />\r\n&nbsp;</p>\r\n', '<p>BufferedStream</p>\r\n', '<p>FileStream</p>\r\n', '<p>MemoryStream</p>\r\n', '<p>UnmanagedMemoryStream</p>\r\n', '2', 17, 5, '4'),
(225, '<p>Arrange the following datatype in order of increasing magnitude sbyte, short, long, int.<br />\r\n&nbsp;</p>\r\n', '<p>long &lt; short &lt; int &lt; sbyte</p>\r\n', '<p>sbyte &lt; short &lt; int &lt; long</p>\r\n', '<p>short &lt; sbyte &lt; int &lt; long</p>\r\n', '<p>short &lt; int &lt; sbyte &lt; long</p>\r\n', '2', 17, 5, '2'),
(226, '<p>&nbsp;What is the most specified using class declaration ?<br />\r\n&nbsp;</p>\r\n', '<p>type</p>\r\n', '<p>scope</p>\r\n', '<p>type &amp; scope</p>\r\n', '<p>none of the above</p>\r\n', '2', 15, 5, '3'),
(227, '<p>An Event is&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>The result of a users action</p>\r\n', '<p>result of a party&nbsp;</p>\r\n', '<p>code to force users action</p>\r\n', '<p>none of the a above</p>\r\n', '2', 14, 5, '1'),
(228, '<p>&nbsp;A delegate defines&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>a Wahsington representative&nbsp;</p>\r\n', '<p>a class that encapsulates methods</p>\r\n', '<p>a means of passing arrays into methods&nbsp;</p>\r\n', '<p>a substitue for an inherited method<br />\r\n&nbsp;</p>\r\n', '2', 15, 5, '2'),
(229, '<p>Which of the classes provide the operation of reading from and writing to the console in C#.NET?<br />\r\n&nbsp;</p>\r\n', '<p>System.Array</p>\r\n', '<p>System.Output</p>\r\n', '<p>System.ReadLine</p>\r\n', '<p>System.Console<br />\r\n&nbsp;</p>\r\n', '2', 17, 5, '4'),
(230, '<p>How is a string typically processed?<br />\r\n&nbsp;</p>\r\n', '<p>On a character by character basis</p>\r\n', '<p>On a string by string basis</p>\r\n', '<p>Both a &amp; b</p>\r\n', '<p>None of the above</p>\r\n', '2', 16, 5, '1'),
(231, '<p>How to print \\\\ on the screen?<br />\r\n&nbsp;</p>\r\n', '<p>Console.WriteLine(&ldquo;\\\\&rdquo;);</p>\r\n', '<p>Console.WriteLine(&ldquo;\\\\\\&rdquo;);</p>\r\n', '<p>Console.WriteLine(&ldquo;\\\\\\\\&rdquo;);</p>\r\n', '<p>Console.WriteLine(&ldquo;\\\\\\\\\\\\&rdquo;);</p>\r\n', '2', 15, 5, '3'),
(232, '<p>Which of the given stream methods provide access to the output console by default in C#.NET?<br />\r\n&nbsp;</p>\r\n', '<p>Console.In</p>\r\n', '<p>Console.Out</p>\r\n', '<p>Console.Error</p>\r\n', '<p>All the above</p>\r\n', '2', 18, 5, '2'),
(233, '<p>What is the proper header for a class that intends to use an interface.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>class MyClass IFace&nbsp;</p>\r\n', '<p>class MyClass ; IFace&nbsp;</p>\r\n', '<p>class MyClass : IFace</p>\r\n', '<p>class MyCalss {IFace}&nbsp;</p>\r\n', '2', 15, 5, '3'),
(234, '<p>In order for a class to use an interface, it must&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>inherit the properties of the interface&nbsp;</p>\r\n', '<p>contain the same methods as the interface&nbsp;</p>\r\n', '<p>create an interface objects&nbsp;</p>\r\n', '<p>all the above</p>\r\n', '2', 16, 5, '4'),
(235, '<p>Every class directly or indirectly extends the______class.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>System</p>\r\n', '<p>Object</p>\r\n', '<p>Drawing</p>\r\n', '<p>Console</p>\r\n', '2', 15, 5, '2'),
(236, '<p>The concept of composition specifies that you can.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Compose good code with C#&nbsp;</p>\r\n', '<p>Compose C# projects with different objects</p>\r\n', '<p>Reduce errors by remaining composed during programming&nbsp;</p>\r\n', '<p>All the above</p>\r\n', '2', 15, 5, '2'),
(237, '<p>Polymorphism occurs when the methods of the child class.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Override the parent class methods but maintain the implementation&nbsp;</p>\r\n', '<p>Maintain the same return type and arguments as the parent class, but implement it differently</p>\r\n', '<p>Have different return types and arguments than the parent class&nbsp;</p>\r\n', '<p>Are virtual</p>\r\n', '2', 16, 5, '2'),
(238, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;incorrect&nbsp;about&nbsp;System.Text.StringBuilder&nbsp;and&nbsp;System.String? &nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>StringBuilder&nbsp;is&nbsp;more&nbsp;efficient&nbsp;when&nbsp;there&nbsp;is&nbsp;a&nbsp;large&nbsp;amount&nbsp;of&nbsp;string&nbsp;manipulation</p>\r\n', '<p>Strings&nbsp;are&nbsp;immutable,&nbsp;so&nbsp;each&nbsp;time&nbsp;a&nbsp;string&nbsp;is&nbsp;changed,&nbsp;a&nbsp;new&nbsp;instance&nbsp;in&nbsp;memory&nbsp;is&nbsp;created.</p>\r\n', '<p>StringBuilder&nbsp;is&nbsp;mutable?&nbsp;when&nbsp;you&nbsp;modify&nbsp;an&nbsp;instance&nbsp;of&nbsp;the&nbsp;StringBuilder&nbsp;class,&nbsp;you&nbsp;modify&nbsp;the&nbsp;actual string,&nbsp;not&nbsp;a&nbsp;copy</p>\r\n', '<p>Strings&nbsp;are&nbsp;mutable&nbsp;in&nbsp;.Net</p>\r\n', '2', 17, 5, '4'),
(239, '<p>An&nbsp;Event&nbsp;has&nbsp;_____&nbsp;as&nbsp;default&nbsp;return&nbsp;type &nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>No&nbsp;return&nbsp;type&nbsp;for&nbsp;events</p>\r\n', '<p>Double</p>\r\n', '<p>Integer</p>\r\n', '<p>String</p>\r\n', '2', 5, 5, '1'),
(240, '<p>Features&nbsp;of&nbsp;readonly&nbsp;variables &nbsp;&nbsp;&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>It&nbsp;is&nbsp;allocated&nbsp;at&nbsp;compile&nbsp;time</p>\r\n', '<p>Declaration&nbsp;and&nbsp;initialization&nbsp;can&nbsp;be&nbsp;separated</p>\r\n', '<p>It&nbsp;is&nbsp;initialized&nbsp;at&nbsp;run&nbsp;time</p>\r\n', '<p>All the above</p>\r\n', '2', 5, 5, '4'),
(241, '<p>How&nbsp;many&nbsp;web.config&nbsp;files&nbsp;that&nbsp;can&nbsp;be&nbsp;there&nbsp;an&nbsp;ASP.NET&nbsp;application? &nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>only one</p>\r\n', '<p>only two</p>\r\n', '<p>upto 10</p>\r\n', '<p>one or more</p>\r\n', '2', 16, 5, '4'),
(302, '<p>As an Android programmer, what version of Android should you use as your minimum development target?&nbsp;</p>\r\n', '<p>Versions 1.6 or 2.0<br />\r\n&nbsp;</p>\r\n', '<p>Versions 1.0 or 1.1</p>\r\n', '<p>Versions 1.2 or 1.3</p>\r\n', '<p>Versions 2.3 or 3.0</p>\r\n', '2', 45, 1, '1'),
(303, '<p>Android tries hard to ______________ low-level components, such as the software stack, with interfaces so that vendor-specific code can be managed easily.</p>\r\n', '<p>confound</p>\r\n', '<p>absract</p>\r\n', '<p>modularize</p>\r\n', '<p>compoud</p>\r\n', '2', 35, 1, '2'),
(304, '<p>What part of the Android platform is open source?</p>\r\n', '<p>low-level Linux modules<br />\r\n&nbsp;</p>\r\n', '<p>native libraries</p>\r\n', '<p>application frame work</p>\r\n', '<p>complete applications</p>\r\n', '2', 28, 1, '2'),
(305, '<p>Explain android activity life cycle?</p>\r\n', '<p>onCreate() &minus;&gt; onStart() &minus;&gt; onActivityStarted() &minus;&gt; onResume() &minus;&gt; onPause() &minus;&gt; onStop() &minus;&gt; onActivityDistroy() &minus;&gt; onDestroy()</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>OnCreate() &minus;&gt; onStart() &minus;&gt;onResume() &minus;&gt; onPause() &minus;&gt; onStop() &minus;&gt; onRestart() &minus;&gt; onDestroy()</p>\r\n', '<p>OnCreate() &minus;&gt; onStart() &minus;&gt; onPause() &minus;&gt; onResume() &minus;&gt; onStop() &minus;&gt; onDestroy()</p>\r\n', '<p>&minus;&gt;onResume()</p>\r\n', '2', 34, 1, '2'),
(306, '<p>On which thread services work in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Worker Thread</p>\r\n', '<p>Own Thread</p>\r\n', '<p>Main Thread</p>\r\n', '<p>None of the above</p>\r\n', '2', 28, 1, '3'),
(307, '<p>What is broadcast receiver in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>It will react on broadcast announcements</p>\r\n', '<p>It will do background functionalities as services</p>\r\n', '<p>It will pass the data between activities</p>\r\n', '<p>None of the above</p>\r\n', '2', 28, 1, '1'),
(308, '<p>What is the use of content provider in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>To send the data from an application to another application</p>\r\n', '<p>To store the data in a database</p>\r\n', '<p>&nbsp;To share the data between applications</p>\r\n', '<p>None of the above</p>\r\n', '2', 35, 1, '3'),
(309, '<p>What is JNI in android?</p>\r\n', '<p>Java network interface</p>\r\n', '<p>&nbsp;Java interface</p>\r\n', '<p>Image editable tool</p>\r\n', '<p>Java native interface</p>\r\n', '2', 30, 1, '4'),
(310, '<p>What is ADB in android?</p>\r\n', '<p>Image tool</p>\r\n', '<p>Development tool</p>\r\n', '<p>Android Debug Bridge</p>\r\n', '<p>None of the above</p>\r\n', '2', 25, 1, '3'),
(311, '<p>What is the library of Map View in android?</p>\r\n', '<p>com.map</p>\r\n', '<p>com.goggle.gogglemaps</p>\r\n', '<p>in.maps</p>\r\n', '<p>com.goggle.android.maps</p>\r\n', '4', 27, 1, '4'),
(312, '<p>What is the HTTP response error code status in android?</p>\r\n', '<p>status code &lt; 100</p>\r\n', '<p>status code &gt; 100</p>\r\n', '<p>status &gt;= 400</p>\r\n', '<p>None of the above</p>\r\n', '3', 25, 1, '3'),
(313, '<p>How many protection levels are available in the android permission tag?</p>\r\n', '<p>There are no permission tags available in android</p>\r\n', '<p>Normal, kernel, application</p>\r\n', '<p>Normal, dangerous, signature, and signatureOrsystem</p>\r\n', '<p>None of the above</p>\r\n', '3', 27, 1, '3'),
(314, '<p>What is the main difference between set and list in android?</p>\r\n', '<p>Set can&#39;t contain duplicate values</p>\r\n', '<p>List may contain duplicate values</p>\r\n', '<p>A and B&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '3', 25, 1, '3'),
(315, '<p>How to kill an activity in Android?</p>\r\n', '<p>finish()</p>\r\n', '<p>finishActivity(int requestCode)</p>\r\n', '<p>A &amp; B</p>\r\n', '<p>None of the above</p>\r\n', '3', 26, 1, '3'),
(316, '<p>What is the life cycle of services in android?</p>\r\n', '<p>onCreate()&minus;&gt;onStartCommand()&minus;&gt;onDestory()</p>\r\n', '<p>onRecieve()</p>\r\n', '<p>final()</p>\r\n', '<p>Service life cycle is same as activity life cycle.</p>\r\n', '3', 32, 1, '1'),
(317, '<p>What is ANR in android?</p>\r\n', '<p>When the application is not responding ANR will occur.</p>\r\n', '<p>Dialog box is called as ANR.</p>\r\n', '<p>When Android forcefully kills an application, it is called ANR</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 30, 1, '1'),
(319, '<p>Persist data can be stored in Android through</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Shared Preferences</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Internal/External storage</p>\r\n', '<p>SQlite</p>\r\n', '<p>All of the above</p>\r\n', '4', 30, 1, '4'),
(321, '<p>How to fix crash using log cat in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Gmail</p>\r\n', '<p>log cat contains the exception name along with the line number</p>\r\n', '<p>Google search</p>\r\n', '<p>None of the above</p>\r\n', '4', 25, 1, '2'),
(322, '<p>How many orientations does android support?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>4</p>\r\n', '<p>10</p>\r\n', '<p>2</p>\r\n', '<p>None of the above</p>\r\n', '4', 30, 1, '1'),
(323, '<p>What is transient data in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Permanent data</p>\r\n', '<p>Secure data</p>\r\n', '<p>Temporary data</p>\r\n', '<p>Logical data</p>\r\n', '4', 30, 1, '4'),
(324, '<p>How do you join two notifications in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Give same id for both notifications</p>\r\n', '<p>Write notification code two times</p>\r\n', '<p>It is not possible in android</p>\r\n', '<p>Both A and C</p>\r\n', '4', 28, 1, '4'),
(326, '<p>How to move services to foreground in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Services always work in Foreground only</p>\r\n', '<p>No,We can&#39;t do this query</p>\r\n', '<p>Using startService(Intent intent)</p>\r\n', '<p>startFordgroud(int id, Notification notification).</p>\r\n', '1', 45, 1, '4'),
(327, '<p>What are the return values of onStartCommand() in android services?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>START_STICKY</p>\r\n', '<p>START_NOT_STICKY</p>\r\n', '<p>START_REDELIVER_INTENT</p>\r\n', '<p>All the above</p>\r\n', '7', 35, 1, '4'),
(328, '<p>How to upgrade SQlite the database from a lower version to higher version in android SQlite?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Using helper Class</p>\r\n', '<p>Using cursor</p>\r\n', '<p>Using intent</p>\r\n', '<p>None of the above</p>\r\n', '7', 36, 1, '1'),
(329, '<p>What is log message in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Log message is used to debug a program</p>\r\n', '<p>Same as printf()</p>\r\n', '<p>Same as Toast().</p>\r\n', '<p>None of the above</p>\r\n', '7', 30, 1, '1'),
(330, '<p>What does httpclient.execute() returns in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Http entity</p>\r\n', '<p>Http response</p>\r\n', '<p>Http result</p>\r\n', '<p>None of the above</p>\r\n', '7', 30, 1, '2'),
(331, '<p>What is the purpose of super.onCreate() in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>To create an activity</p>\r\n', '<p>To create a graphical window for subclass</p>\r\n', '<p>It allows the developers to write the program</p>\r\n', '<p>None of the above</p>\r\n', '7', 31, 1, '2'),
(332, '<p>What are the functionalities in asyncTask in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>onPreExecution()</p>\r\n', '<p>doInBackground()</p>\r\n', '<p>onProgressUpdate()</p>\r\n', '<p>onPostExecution()</p>\r\n', '6', 27, 1, '4'),
(333, '<p>What is the difference between content values and cursor in android SQlite?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Content values are key pair values, which are updated or inserted in the database</p>\r\n', '<p>Cursor is used to store the temporary result.</p>\r\n', '<p>Both A &amp; B</p>\r\n', '<p>None of the above</p>\r\n', '6', 30, 1, '3'),
(334, '<p>Which features are considered while creating android application?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Screen Size</p>\r\n', '<p>Input configuration</p>\r\n', '<p>Platform Version</p>\r\n', '<p>All the above</p>\r\n', '6', 25, 1, '4'),
(335, '<p>What is DDMS in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Dalvik memory server</p>\r\n', '<p>Device memory server</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Dalvik monitoring services</p>\r\n', '<p>Dalvik debug monitor services</p>\r\n', '6', 25, 1, '4'),
(336, '<p>What is fragment life cycle in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>onReceive()</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>onCreate()</p>\r\n', '<p>onAttach()-&gt;onCreate() &minus;&gt; onCreateView() &minus;&gt; onActivityCreated() &minus;&gt; onStart() &minus;&gt; onResume()</p>\r\n', '<p>None of the above</p>\r\n', '4', 30, 1, '3'),
(337, '<p>Is it mandatory to call onCreate() and onStart() in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>No, we can write the program without writing onCreate() and onStart()</p>\r\n', '<p>Yes, we should call onCreate() and onStart() to write the program</p>\r\n', '<p>At least we need to call onCreate() once</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '6', 31, 1, '1'),
(338, '<p>What is a thread in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Same as services</p>\r\n', '<p>Background activity</p>\r\n', '<p>Broadcast Receiver</p>\r\n', '<p>Independent dis-patchable unit is called a thread</p>\r\n', '6', 28, 1, '4'),
(339, '<p>How to get a response from an activity in Android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>startActivityToResult()</p>\r\n', '<p>startActiivtyForResult()</p>\r\n', '<p>Bundle()</p>\r\n', '<p>None of the above</p>\r\n', '6', 29, 1, '2'),
(340, '<p>How to store heavy structured data in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Shared Preferences</p>\r\n', '<p>Cursor</p>\r\n', '<p>SQlite database</p>\r\n', '<p>Not possible</p>\r\n', '1', 40, 1, '3'),
(341, '<p>What is the application class in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A class that can create only an object</p>\r\n', '<p>Anonymous class</p>\r\n', '<p>Java class</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Base class&nbsp;</p>\r\n', '4', 30, 1, '4'),
(342, '<p>What is JSON in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Java Script Object Native</p>\r\n', '<p>Java Script Oriented Notation</p>\r\n', '<p>Java Script Object Notation</p>\r\n', '<p>None of the above</p>\r\n', '4', 25, 1, '3'),
(344, '<p>What is anchor view?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Same as list view</p>\r\n', '<p>Provides the information on respective relative positions</p>\r\n', '<p>Same as relative layout</p>\r\n', '<p>None of the above</p>\r\n', '5', 30, 1, '2'),
(345, '<p>What is an activity in Android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Activity performs the actions on the screen</p>\r\n', '<p>Manage the Application content</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Screen UI</p>\r\n', '<p>None of the above</p>\r\n', '1', 30, 1, '1'),
(346, '<p>What is android view group?</p>\r\n', '<p>Collection of views and other child views</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Base class of building blocks</p>\r\n', '<p>Layouts</p>\r\n', '<p>None of the above</p>\r\n', '1', 28, 1, '1'),
(347, '<p>How to stop the services in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>finish()</p>\r\n', '<p>system.exit()</p>\r\n', '<p>By manually</p>\r\n', '<p>stopSelf() and stopService()</p>\r\n', '5', 25, 1, '4'),
(348, '<p>What is the time limit of broadcast receiver in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>10 sec</p>\r\n', '<p>15 sec</p>\r\n', '<p>5 sec</p>\r\n', '<p>1 hour</p>\r\n', '5', 26, 1, '1'),
(349, '<p>What is a base adapter in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Base Adapter is a common class for any adapter, which can we use for both ListView and spinner</p>\r\n', '<p>A kind of adapter</p>\r\n', '<p>Data storage space</p>\r\n', '<p>None of the above</p>\r\n', '5', 27, 1, '1'),
(350, '<p>What is sandbox in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Each application runs securely without interrupting another process</p>\r\n', '<p>Android Box</p>\r\n', '<p>Android development tool kit</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 30, 1, '1'),
(351, '<p>What is off-line synchronization in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Synchronization with internet</p>\r\n', '<p>Background synchronization</p>\r\n', '<p>Synchronization without internet</p>\r\n', '<p>None of the above</p>\r\n', '6', 35, 1, '3'),
(352, '<p>How to pass the data between activities in Android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Intent</p>\r\n', '<p>Content provider</p>\r\n', '<p>Broadcast reciever</p>\r\n', '<p>None of the above</p>\r\n', '6', 30, 1, '1'),
(353, '<p>WHich of the following is/are are the subclasses in Android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Action bar activity</p>\r\n', '<p>Launcher activity</p>\r\n', '<p>Tab activity</p>\r\n', '<p>All the above</p>\r\n', '4', 25, 1, '4'),
(354, '<p>Which permissions are required to get a location in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ACCESS_FINE and ACCESS_COARSE</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>GPRS permission</p>\r\n', '<p>Internet permission</p>\r\n', '<p>WIFI permission.</p>\r\n', '6', 28, 1, '1'),
(355, '<p>Which method is used to find GPS enabled or disabled pro-grammatically in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>finish()</p>\r\n', '<p>getGPSStatus()</p>\r\n', '<p>onProviderDisable()</p>\r\n', '<p>getGPS().</p>\r\n', '4', 30, 1, '3'),
(356, '<p>Data can be read from local source XML in android through</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>XML resource parser</p>\r\n', '<p>XML pull parsing</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>DOM parsing</p>\r\n', '<p>None of the above</p>\r\n', '3', 33, 1, '1'),
(357, '<p>What is a GCM in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Goggle Could Messaging for chrome</p>\r\n', '<p>Goggle Count Messaging</p>\r\n', '<p>Goggle Message pack</p>\r\n', '<p>None of the above</p>\r\n', '2', 30, 1, '1'),
(358, '<p>Is it possible activity without UI in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>No, it&#39;s not possible</p>\r\n', '<p>Yes,it&#39;s possible</p>\r\n', '<p>can&#39;t say</p>\r\n', '<p>None of the above</p>\r\n', '2', 32, 1, '2'),
(359, '<p>What is bean class in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A bean class can be passed from one activity to another.</p>\r\n', '<p>A class used to hold states and objects</p>\r\n', '<p>A mandatory class in android</p>\r\n', '<p>None of the above</p>\r\n', '5', 30, 1, '2'),
(360, '<p>What is the life cycle of broadcast receivers in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>send intent()</p>\r\n', '<p>onRecieve()</p>\r\n', '<p>implicitBroadcast()</p>\r\n', '<p>sendBroadcast(), sendOrderBroadcast(), and sendStickyBroadcast().</p>\r\n', '3', 33, 1, '2'),
(361, '<p>How many ports are allocated for new emulator?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2</p>\r\n', '<p>0</p>\r\n', '<p>10</p>\r\n', '<p>None of the above</p>\r\n', '1', 28, 1, '1'),
(362, '<p>What is Manifest.xml in android?</p>\r\n', '<p>It has information about layout in an application</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>It has the information about activities in an application</p>\r\n', '<p>It has all the information about an application</p>\r\n', '<p>All the above</p>\r\n', '1', 30, 1, '3'),
(363, '<p>Who is father of C Language?</p>\r\n', '<p>Bjarne Stroustrup</p>\r\n', '<p>James A. Gosling</p>\r\n', '<p>Dennis Ritchie</p>\r\n', '<p>&nbsp;</p>\r\n\r\n<p>Dr. E.F. Codd&nbsp;</p>\r\n', '1', 10, 4, '3'),
(364, '<p>C programs are converted into machine language with the help of</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>An Editor</p>\r\n', '<p>A compiler</p>\r\n', '<p>An operating system</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 4, '2'),
(365, '<p>Which one of the following is not a reserved keyword for C?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>auto</p>\r\n', '<p>case</p>\r\n', '<p>main</p>\r\n', '<p>default</p>\r\n', '1', 10, 4, '3'),
(366, '<p>Which of the following is not a valid C variable name?<br />\r\n&nbsp;</p>\r\n', '<p>int number;</p>\r\n', '<p>float rate;</p>\r\n', '<p>int variable_count;</p>\r\n', '<p>int $main;</p>\r\n', '1', 10, 4, '4'),
(367, '<p>What is short int in C programming?<br />\r\n&nbsp;</p>\r\n', '<p>Basic datatype of C</p>\r\n', '<p>Qualifier</p>\r\n', '<p>short is the qualifier and int is the basic datatype</p>\r\n', '<p>All the above</p>\r\n', '1', 10, 4, '3'),
(368, '<p>Which is the only function all C programs must contain?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>start()&nbsp;&nbsp;&nbsp;</p>\r\n', '<p>system()</p>\r\n', '<p>main()</p>\r\n', '<p>printf()</p>\r\n', '1', 10, 4, '3'),
(369, '<p>Which of the following is not a correct variable type?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>float</p>\r\n', '<p>real</p>\r\n', '<p>int</p>\r\n', '<p>double</p>\r\n', '1', 10, 4, '2'),
(370, '<p>What is the output of this C code?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; #include&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; int main()</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int var = 010;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, var);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n', '<p>2</p>\r\n', '<p>8</p>\r\n', '<p>9</p>\r\n', '<p>10</p>\r\n', '1', 10, 4, '2'),
(371, '<p>What is the difference between a declaration and a definition of a variable?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both can occur multiple times, but a declaration must occur first.</p>\r\n', '<p>A definition occurs once, but a declaration may occur many times.</p>\r\n', '<p>Both can occur multiple times, but a definition must occur first.</p>\r\n', '<p>A declaration occurs once, but a definition may occur many times.</p>\r\n', '1', 10, 4, '4'),
(372, '<p>&quot;My salary was increased by 15%&quot; Select the statement, which will EXACTLY reproduce the line of text above.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>printf(&quot;My salary was increased by 15/%!&quot;);</p>\r\n', '<p>printf(&quot;My salary was increased by 15%!&quot;);</p>\r\n', '<p>printf(&quot;My salary was increased by 15&#39;%&#39;!&quot;);</p>\r\n', '<p>printf(&quot;My salary was increased by 15%%!&quot;);</p>\r\n', '1', 10, 4, '4'),
(373, '<p>enum types are processed by<br />\r\n&nbsp;</p>\r\n', '<p>Compiler</p>\r\n', '<p>Preprocessor</p>\r\n', '<p>Linker</p>\r\n', '<p>Assembler</p>\r\n', '1', 10, 4, '1'),
(374, '<p>The const feature can be applied to?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>An identifier</p>\r\n', '<p>An array</p>\r\n', '<p>&nbsp;An array argument</p>\r\n', '<p>All the above</p>\r\n', '1', 10, 4, '4'),
(375, '<p>Smallest element of Array Index is called</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Lower Bond</p>\r\n', '<p>Upper Bond</p>\r\n', '<p>Extraction</p>\r\n', '<p>Rang</p>\r\n', '1', 10, 4, '1'),
(376, '<p>What are the types of linkages?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Internal and External</p>\r\n', '<p>External and None</p>\r\n', '<p>&nbsp;External, Internal and None</p>\r\n', '<p>Internal</p>\r\n', '1', 10, 4, '2'),
(377, '<p>Is there any difference between following declarations? 1 : extern int fun(); 2 : int fun();</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both are identical</p>\r\n', '<p>No difference, except extern int fun(); is probably in another file</p>\r\n', '<p>int fun(); is overrided with extern int fun();</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 4, '2'),
(378, '<p>How would you round off a value from 1.66 to 2.0?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ceil(1.66)</p>\r\n', '<p>floor(1.66)</p>\r\n', '<p>roundup(1.66)</p>\r\n', '<p>roundto(1.66)</p>\r\n', '1', 10, 4, '1'),
(379, '<p>Which of the following are themselves a collection of different data types?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>string</p>\r\n', '<p>char</p>\r\n', '<p>structures</p>\r\n', '<p>All the above</p>\r\n', '1', 10, 4, '3'),
(380, '<p>Which of the following declaration is not supported by C?<br />\r\n&nbsp;</p>\r\n', '<p>String str;</p>\r\n', '<p>char *str;</p>\r\n', '<p>float str = 3e2;</p>\r\n', '<p>Both A and C</p>\r\n', '1', 10, 4, '1'),
(381, '<p>The precedence of arithmetic operators is (from highest to lowest)<br />\r\n&nbsp;</p>\r\n', '<p>%, *, /, +, &ndash;</p>\r\n', '<p>%, +, /, *, &ndash;</p>\r\n', '<p>+, -, %, *, /</p>\r\n', '<p>%, +, -, *, /</p>\r\n', '1', 10, 4, '1'),
(382, '<p>Which among the following is NOT a logical or relational operator?<br />\r\n&nbsp;</p>\r\n', '<p>!=</p>\r\n', '<p>==</p>\r\n', '<p>||</p>\r\n', '<p>=</p>\r\n', '1', 10, 4, '4'),
(383, '<p>What is the output of this C code?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; #include&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; void main()</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a = 3;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int b = ++a + a++ + --a;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;Value of b is %d&quot;, b);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n', '<p>Value of x is 12</p>\r\n', '<p>Value of x is 13</p>\r\n', '<p>Value of x is 10</p>\r\n', '<p>Undefined behaviour</p>\r\n', '1', 10, 4, '4'),
(384, '<p>What is the final value of j in the below code?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n    #include &lt;stdio.h&gt;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    int main()</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        int i = 0, j = 0;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        if (i &amp;&amp; (j = i + 10))</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n            //do something</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n            ;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '<p>10</p>\r\n', '<p>Depends on the compiler</p>\r\n', '<p>Depends on the language standard</p>\r\n', '1', 10, 4, '1'),
(385, '<p>Correct syntax to pass a Function Pointer as an argument<br />\r\n&nbsp;</p>\r\n', '<p>void pass(int (*fptr)(int, float, char)){}</p>\r\n', '<p>void pass(*fptr(int, float, char)){}</p>\r\n', '<p>void pass(int (*fptr)){}</p>\r\n', '<p>void pass(*fptr){}</p>\r\n', '1', 10, 4, '1'),
(386, '<p>The code snippet below produces</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n    #include &lt;stdio.h&gt;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    void main()</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        1 &lt; 2 ? return 1 : return 2;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>returns 1</p>\r\n', '<p>returns 2</p>\r\n', '<p>Varies</p>\r\n', '<p>Compile time error</p>\r\n', '1', 10, 4, '4'),
(387, '<p>What will be the data type of the result of the following operation?<br />\r\n(float)a * (int)b / (long)c * (double)d<br />\r\n&nbsp;</p>\r\n', '<p>int</p>\r\n', '<p>long</p>\r\n', '<p>float</p>\r\n', '<p>double</p>\r\n', '1', 10, 4, '4'),
(388, '<p>What is the output of the code given below?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n    #include &lt;stdio.h&gt;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    int main()</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        int ary[4] = {1, 2, 3, 4};</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        int *p = ary + 3;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        printf(&quot;%d\\n&quot;, p[-2]);</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>Compile time error</p>\r\n', '<p>Garbage value</p>\r\n', '1', 10, 4, '2'),
(389, '<p>What does argv and argc indicate in command-line arguments?<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;(Assuming: int main(int argc, char *argv[]) )<br />\r\n&nbsp;</p>\r\n', '<p>argument count, argument variable</p>\r\n', '<p>argument count, argument vector</p>\r\n', '<p>argument control, argument variable</p>\r\n', '<p>argument control, argument vector</p>\r\n', '1', 10, 4, '2'),
(390, '<p>What is the output of this C code?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n    #include &lt;stdio.h&gt;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    int main()</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        if (printf(&quot;%d&quot;, printf(&quot;)))</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n            printf(&quot;We are Happy&quot;);</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        else if (printf(&quot;1&quot;))</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n            printf(&quot;We are Sad&quot;);</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0We are Happy</p>\r\n', '<p>1We are Happy</p>\r\n', '<p>1We are Sad</p>\r\n', '<p>Compile time error</p>\r\n', '1', 10, 4, '4'),
(391, '<p>Comment on the following statement:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;int (*a)[7];<br />\r\n&nbsp;</p>\r\n', '<p>An array &ldquo;a&rdquo; of pointers.</p>\r\n', '<p>A pointer &ldquo;a&rdquo; to an array.</p>\r\n', '<p>A ragged array</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 4, '2'),
(392, '<p>Presence of code like &ldquo;s.t.b = 10&rdquo; indicate.<br />\r\n&nbsp;</p>\r\n', '<p>Syntax Error</p>\r\n', '<p>double data type</p>\r\n', '<p>structure</p>\r\n', '<p>An ordinary variable name</p>\r\n', '1', 10, 4, '3'),
(393, '<p>String operation such as strcat(s, t), strcmp(s, t), strcpy(s, t) and strlen(s) heavily&nbsp;rely upon.<br />\r\n&nbsp;</p>\r\n', '<p>Presence of NULL character</p>\r\n', '<p>Presence of new-line character</p>\r\n', '<p>Presence of any escape sequence</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 4, '1'),
(394, '<p>Which function definition will run correctly?<br />\r\n&nbsp;</p>\r\n', '<p>int sum(int a, int b)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;return (a + b);</p>\r\n', '<p>int sum(int a, int b)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;{return (a + b);}</p>\r\n', '<p>int sum(a, b)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;return (a + b);</p>\r\n', '<p>Both A and B</p>\r\n', '1', 10, 4, '2'),
(395, '<p>Which of the following is a correct format for declaration of function?<br />\r\n&nbsp;</p>\r\n', '<p>return-type function-name(argument type);</p>\r\n', '<p>return-type function-name(argument type)<br />\r\n{}</p>\r\n', '<p>return-type (argument type)function-name;</p>\r\n', '<p>Both A and B</p>\r\n', '1', 10, 4, '1'),
(396, '<p>What is the output of this C code?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n    #include &lt;stdio.h&gt;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    int main()</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        char *str = &quot;hello world&quot;;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        char strary[] = &quot;hello world&quot;;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        printf(&quot;%d %d\\n&quot;, sizeof(str), sizeof(strary));</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        return 0;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>11 11</p>\r\n', '<p>12 12</p>\r\n', '<p>4 12&nbsp;</p>\r\n', '<p>4 11</p>\r\n', '1', 10, 4, '3'),
(397, '<p>What is the output of this C code?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n    #include &lt;stdio.h&gt;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    struct student</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        char *c;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        struct student *point;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    };</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    void main()</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        struct student s;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        printf(&quot;%d&quot;, sizeof(s));</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>5</p>\r\n', '<p>9</p>\r\n', '<p>8</p>\r\n', '<p>16</p>\r\n', '1', 10, 4, '3'),
(398, '<p>The output of the code below is</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n    #include &lt;stdio.h&gt;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    void main()</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        int k = 8;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        int m = 7;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        k &lt; m ? k = k + 1 : m = m + 1;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        printf(&quot;%d&quot;, k);</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Compile time error</p>\r\n', '<p>9</p>\r\n', '<p>8</p>\r\n', '<p>Run time error</p>\r\n', '1', 10, 4, '1'),
(399, '<p>For initialization a = 2, c = 1 the value of a and c after this code will be<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = (c) ? a = 0 : 2;<br />\r\n&nbsp;</p>\r\n', '<p>a = 0, c = 0;</p>\r\n', '<p>a = 2, c = 2;</p>\r\n', '<p>a = 2, c = 2;</p>\r\n', '<p>a = 1, c = 2;</p>\r\n', '1', 10, 4, '1'),
(400, '<p>The standard header _______ is used for variable list arguments (&hellip;) in C.<br />\r\n&nbsp;</p>\r\n', '<p>&lt;stdio.h &gt;</p>\r\n', '<p>&lt;stdlib.h&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;math.h&gt;</p>\r\n', '<p>&lt;stdarg.h&gt;</p>\r\n', '1', 10, 4, '4'),
(401, '<p>Which of the following fopen statements are illegal?<br />\r\n&nbsp;</p>\r\n', '<p>fp = fopen(&ldquo;abc.txt&rdquo;, &ldquo;r&rdquo;);</p>\r\n', '<p>fp = fopen(&ldquo;/home/user1/abc.txt&rdquo;, &ldquo;w&rdquo;);</p>\r\n', '<p>fp = fopen(&ldquo;abc&rdquo;, &ldquo;w&rdquo;);</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 4, '4'),
(402, '<p>Strcat function adds null character<br />\r\n&nbsp;</p>\r\n', '<p>Only if there is space</p>\r\n', '<p>Depends on the standard</p>\r\n', '<p>Always</p>\r\n', '<p>Depends on the compiler</p>\r\n', '1', 10, 4, '3'),
(403, '<p>What is actual syntax of destructor in c++ ?</p>\r\n', '<p>!Classname( )</p>\r\n', '<p>@Classname( )</p>\r\n', '<p>$Classname( )</p>\r\n', '<p>~Classname( )</p>\r\n', '1', 30, 6, '4'),
(464, '<p>Which class cannot be subclassed (or extended) in java?<br />\r\n&nbsp;</p>\r\n', '<p>abstract class</p>\r\n', '<p>parent class</p>\r\n', '<p>Final class</p>\r\n', '<p>None of the above</p>\r\n', '1', 13, 17, '3'),
(465, '<p>Why we use array as a parameter of main method</p>\r\n', '<p>it is syntax</p>\r\n', '<p>Can store multiple values</p>\r\n', '<p>Both of above</p>\r\n', '<p>None of the above</p>\r\n', '1', 15, 17, '2'),
(466, '<p>Suspend thread can be revived by using</p>\r\n', '<p>start() method</p>\r\n', '<p>Suspend() method</p>\r\n', '<p>resume() method</p>\r\n', '<p>yield() method</p>\r\n', '1', 15, 17, '3');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(468, '<p>Which collection class associates values with keys, and orders the keys according to their natural order<br />\r\n&nbsp;</p>\r\n', '<p>java.util.HashSet</p>\r\n', '<p>java.util.LinkedList</p>\r\n', '<p>java.util.TreeMap</p>\r\n', '<p>java.util.SortedSet</p>\r\n', '4', 15, 17, '3'),
(469, '<p>Which method is used to perform DML statements in&nbsp;JDBC</p>\r\n', '<p>execute()</p>\r\n', '<p>executeUpdate()</p>\r\n', '<p>executeQuery()</p>\r\n', '<p>None of the above</p>\r\n', '4', 18, 17, '2'),
(470, '<p>Which of the following below are valid isolation levels in J2EE</p>\r\n', '<p>TRANSACTION_READ_UNCOMMITTED</p>\r\n', '<p>TRANSACTION_SERIALIZABLE</p>\r\n', '<p>Only A</p>\r\n', '<p>Both A and B</p>\r\n', '3', 20, 17, '4'),
(471, '<p>Which methods are utilized to control the access to an object in multi threaded programming</p>\r\n', '<p>Asynchronized methods</p>\r\n', '<p>Synchronized methods</p>\r\n', '<p>Serialized methods</p>\r\n', '<p>None of the above</p>\r\n', '3', 15, 17, '2'),
(472, '<p>Program which executes applet is known as</p>\r\n', '<p>applet engine</p>\r\n', '<p>virtual machine</p>\r\n', '<p>JVM</p>\r\n', '<p>None of the above</p>\r\n', '1', 20, 17, '1'),
(473, '<p>Which statement is static and synchronized in JDBC API</p>\r\n', '<p>executeQuery()</p>\r\n', '<p>executeUpdate()</p>\r\n', '<p>getConnection()</p>\r\n', '<p>prepareCall()</p>\r\n', '4', 15, 17, '3'),
(474, '<p>The JDBC-ODBC bridge is</p>\r\n', '<p>Multithreaded</p>\r\n', '<p>Singlethreaded</p>\r\n', '<p>Both of above</p>\r\n', '<p>None of the above</p>\r\n', '2', 20, 17, '1'),
(475, '<p>All raw data types should be read and uploaded to the database as an array of</p>\r\n', '<p>int</p>\r\n', '<p>char</p>\r\n', '<p>boolean&nbsp;</p>\r\n', '<p>byte</p>\r\n', '2', 23, 17, '4'),
(476, '<p>The class java.sql.Timestamp is associated with</p>\r\n', '<p>java.util.Time</p>\r\n', '<p>java.sql.Time</p>\r\n', '<p>java.util.Date</p>\r\n', '<p>None of the above</p>\r\n', '2', 20, 17, '3'),
(477, '<p>Which of the following statements about arrays is syntactically wrong</p>\r\n', '<p>arrayName[] p = new arrayName[5];</p>\r\n', '<p>arrayName p[5];</p>\r\n', '<p>arrayName[] p [];</p>\r\n', '<p>arrayName p[][] = new arrayName[2][];</p>\r\n', '2', 23, 17, '2'),
(478, '<p>Converting a primitive type data into its corresponding wrapper class object instance is called</p>\r\n', '<p>boxing</p>\r\n', '<p>wrapping</p>\r\n', '<p>instantiation</p>\r\n', '<p>autoboxing</p>\r\n', '2', 25, 17, '4'),
(479, '<p>&nbsp;Package of drawstring() method is</p>\r\n', '<p>java.applet</p>\r\n', '<p>java.io</p>\r\n', '<p>javax.swing</p>\r\n', '<p>java.awt</p>\r\n', '2', 23, 17, '4'),
(480, '<p>&nbsp;Which method executes only once</p>\r\n', '<p>start() method</p>\r\n', '<p>init() method</p>\r\n', '<p>stop() method</p>\r\n', '<p>destroy() method</p>\r\n', '2', 20, 17, '2'),
(481, '<p>Object which can store group of other objects is called</p>\r\n', '<p>Collection object</p>\r\n', '<p>Java object</p>\r\n', '<p>Package</p>\r\n', '<p>Wrapper</p>\r\n', '1', 20, 17, '1'),
(482, '<p>&nbsp;All collection classes are available in</p>\r\n', '<p>java.io package</p>\r\n', '<p>java.lang package</p>\r\n', '<p>java.awt package</p>\r\n', '<p>java.util package</p>\r\n', '2', 21, 17, '4'),
(483, '<p>Thread class is available in</p>\r\n', '<p>java.io package</p>\r\n', '<p>java.lang package</p>\r\n', '<p>java.awt package</p>\r\n', '<p>java.util package</p>\r\n', '2', 23, 17, '2'),
(484, '<p>Minimum threads in a program are</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>5</p>\r\n', '<p>Many</p>\r\n', '3', 23, 17, '1'),
(485, '<p>After the compilation of the java source code, which file is created by the JVM<br />\r\n&nbsp;</p>\r\n', '<p>.class</p>\r\n', '<p>.java</p>\r\n', '<p>.cdr</p>\r\n', '<p>.doc</p>\r\n', '1', 23, 17, '1'),
(486, '<p>pow() is associated with which class</p>\r\n', '<p>Math class</p>\r\n', '<p>Input stream class</p>\r\n', '<p>Object class</p>\r\n', '<p>None of the above</p>\r\n', '1', 18, 17, '1'),
(487, '<p>If method have same name as class name and method don&rsquo;t have any return type then it is known as</p>\r\n', '<p>Destructors</p>\r\n', '<p>Object</p>\r\n', '<p>Variable</p>\r\n', '<p>Constructor</p>\r\n', '1', 20, 17, '4'),
(488, '<p>Methods that have same name, but different Parameter list and different definition known as</p>\r\n', '<p>Overriding</p>\r\n', '<p>Constructor</p>\r\n', '<p>Overloading</p>\r\n', '<p>None of the above</p>\r\n', '3', 18, 17, '3'),
(489, '<p>Inheritance means</p>\r\n', '<p>Sub class extends super class</p>\r\n', '<p>Sub class extends Base class</p>\r\n', '<p>Sub class create object of super class</p>\r\n', '<p>All of the above</p>\r\n', '1', 20, 17, '1'),
(490, '<p>Which type of inheritance is not supported by java</p>\r\n', '<p>Single</p>\r\n', '<p>Multiple</p>\r\n', '<p>Multilevel</p>\r\n', '<p>Hierarchial</p>\r\n', '1', 18, 17, '2'),
(491, '<p>&nbsp;Super is the predefined</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Keyword</p>\r\n', '<p>Method</p>\r\n', '<p>Keyword and Method</p>\r\n', '<p>None of the above</p>\r\n', '3', 19, 17, '3'),
(492, '<p>AR file contains the compressed version of</p>\r\n', '<p>.java file</p>\r\n', '<p>.class file</p>\r\n', '<p>.jsp file</p>\r\n', '<p>None of the above</p>\r\n', '3', 20, 17, '2'),
(493, '<p>Process of creating exact copy of the existing object is called<br />\r\n&nbsp;</p>\r\n', '<p>cloning</p>\r\n', '<p>overloading</p>\r\n', '<p>overriding</p>\r\n', '<p>copying</p>\r\n', '3', 15, 17, '1'),
(494, '<p>Java intermediate code is known as</p>\r\n', '<p>First code</p>\r\n', '<p>Mid code</p>\r\n', '<p>Byte code</p>\r\n', '<p>None of the above</p>\r\n', '1', 15, 17, '3'),
(495, '<p>What do you mean by javap</p>\r\n', '<p>java compiler</p>\r\n', '<p>java Interpreter</p>\r\n', '<p>java Disassemble</p>\r\n', '<p>java debugger</p>\r\n', '4', 19, 17, '3'),
(496, '<p>How many transaction isolation levels are defined in java.sql.Connection interface</p>\r\n', '<p>4</p>\r\n', '<p>3</p>\r\n', '<p>5</p>\r\n', '<p>2</p>\r\n', '4', 22, 17, '3'),
(497, '<p>Which method of java is invoked by JVM to reclaim the inaccessible memory location</p>\r\n', '<p>reclaim() method</p>\r\n', '<p>final() method</p>\r\n', '<p>finalize() method</p>\r\n', '<p>Both B and C</p>\r\n', '4', 23, 17, '3'),
(498, '<p>____ allows java code to run in the JVM to call and be called by native applications</p>\r\n', '<p>JFI</p>\r\n', '<p>JNI</p>\r\n', '<p>NJI</p>\r\n', '<p>FJI</p>\r\n', '1', 20, 17, '2'),
(499, '<p>Interfaces helps in which type of inheritance</p>\r\n', '<p>Multiple inheritance</p>\r\n', '<p>Multilevel inheritance</p>\r\n', '<p>Hierarchical inheritance</p>\r\n', '<p>None of the above</p>\r\n', '2', 19, 17, '1'),
(500, '<p>Which method of the Applet class displays the result of applet code on screen</p>\r\n', '<p>run() method</p>\r\n', '<p>paint() method</p>\r\n', '<p>drawString() method</p>\r\n', '<p>main() method</p>\r\n', '4', 20, 17, '2'),
(501, '<p>Which command disassembles a class file</p>\r\n', '<p>javaamd</p>\r\n', '<p>javacmd</p>\r\n', '<p>java</p>\r\n', '<p>javap</p>\r\n', '4', 23, 17, '4'),
(502, '<p>Which keyword is used while using interface</p>\r\n', '<p>extend</p>\r\n', '<p>implements</p>\r\n', '<p>throw</p>\r\n', '<p>throws</p>\r\n', '2', 23, 17, '2'),
(503, '<p>Which keyword represents object of the present class</p>\r\n', '<p>interface</p>\r\n', '<p>package</p>\r\n', '<p>this</p>\r\n', '<p>static</p>\r\n', '5', 18, 17, '3'),
(504, '<p>Hot java is</p>\r\n', '<p>System software</p>\r\n', '<p>Web browser</p>\r\n', '<p>Java environment</p>\r\n', '<p>IDE</p>\r\n', '5', 20, 17, '2'),
(505, '<p>How many keywords are available in java</p>\r\n', '<p>35</p>\r\n', '<p>55</p>\r\n', '<p>48</p>\r\n', '<p>130</p>\r\n', '5', 18, 17, '3'),
(506, '<p>Which of the following statement is correct?<br />\r\n&nbsp;</p>\r\n', '<p>reverse() method reverses all characters.</p>\r\n', '<p>reverseall() method reverses all characters.</p>\r\n', '<p>replace() method replaces first occurrence of a character in invoking string with another character.</p>\r\n', '<p>replace() method replaces last occurrence of a character in invoking string with another character.</p>\r\n', '5', 20, 17, '1'),
(507, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class output {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String args[])</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringBuffer c = new StringBuffer(&quot;Hello&quot;);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringBuffer c1 = new StringBuffer(&quot; World&quot;);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c.append(c1);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;system.out.println(c);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hello</p>\r\n', '<p>World</p>\r\n', '<p>Helloworld<br />\r\n&nbsp;</p>\r\n', '<p>Hello World</p>\r\n', '7', 33, 17, '4'),
(508, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class output {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String args[])</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char c[]={&#39;a&#39;, &#39;1&#39;, &#39;b&#39; ,&#39; &#39; ,&#39;A&#39; , &#39;0&#39;};</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; 5; ++i)</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(Character.isDigit(c[i]))</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; system.out.println(c[i]+&quot; is a digit&quot;);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(Character.isWhitespace(c[i]))</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; system.out.println(c[i]+&quot; is a Whitespace character&quot;);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(Character.isUpperCase(c[i]))</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; system.out.println(c[i]+&quot; is an Upper case Letter&quot;);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(Character.isLowerCase(c[i]))</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; system.out.println(c[i]+&quot; is a lower case Letter&quot;);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=i+3;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n', '<p>a is a lower case Letter<br />\r\nis White space character</p>\r\n', '<p>b is a lower case Letter<br />\r\nis White space character</p>\r\n', '<p>a is a lower case Letter<br />\r\nA is a upper case Letter</p>\r\n', '<p>a is a lower case Letter<br />\r\n0 is a digit</p>\r\n', '7', 33, 17, '3'),
(509, '<p>When does Exceptions in Java arises in code sequence?<br />\r\n&nbsp;</p>\r\n', '<p>Run Time</p>\r\n', '<p>Compilation Time</p>\r\n', '<p>Can occur anytime</p>\r\n', '<p>None of the above</p>\r\n', '1', 18, 17, '1'),
(510, '<p>Which of these keywords must be used to handle the exception thrown by try block in some rational manner?<br />\r\n&nbsp;</p>\r\n', '<p>try</p>\r\n', '<p>finally</p>\r\n', '<p>throw</p>\r\n', '<p>catch</p>\r\n', '6', 18, 17, '4'),
(511, '<p>Which of these methods is used to know the type of content used in the URL?<br />\r\n&nbsp;</p>\r\n', '<p>ContentType()</p>\r\n', '<p>contentType()</p>\r\n', '<p>getContentType()</p>\r\n', '<p>GetContentType()</p>\r\n', '6', 24, 17, '3'),
(512, '<p>Which of these data member of HttpResponse class is used to store the response from a http server?<br />\r\n&nbsp;</p>\r\n', '<p>status</p>\r\n', '<p>address</p>\r\n', '<p>statusResponse</p>\r\n', '<p>status code</p>\r\n', '6', 19, 17, '4'),
(513, '<p>What will happen if two thread of same priority are called to be processed simultaneously?<br />\r\n&nbsp;</p>\r\n', '<p>Any one will be executed first lexographically</p>\r\n', '<p>Both of them will be executed simultaneously</p>\r\n', '<p>None of them will be executed</p>\r\n', '<p>It is dependent on the operating system.</p>\r\n', '6', 18, 17, '4'),
(514, '<p>What is the priority of the thread in output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class multithreaded_programing {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String args[]) {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread t = Thread.currentThread();</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(t); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n', '<p>4</p>\r\n', '<p>5</p>\r\n', '<p>0</p>\r\n', '<p>1</p>\r\n', '7', 36, 17, '2'),
(515, '<p>FocusEvent is subclass of which of these classes?<br />\r\n&nbsp;</p>\r\n', '<p>ComponentEvent<br />\r\n&nbsp;</p>\r\n', '<p>ContainerEvent</p>\r\n', '<p>ItemEvent</p>\r\n', '<p>InputEvent</p>\r\n', '6', 20, 17, '1'),
(516, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp; final class A {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class B extends A {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int j;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(j + &quot; &quot; + i); &nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class inheritance {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String args[])</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B obj = new B();</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj.display(); &nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n', '<p>2 2&nbsp;</p>\r\n', '<p>3 3</p>\r\n', '<p>Runtime error</p>\r\n', '<p>Compilation error</p>\r\n', '8', 60, 17, '4'),
(517, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp; class A {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int i;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected int j;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class B extends A {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int j;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void display() {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super.j = 3;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(i + &quot; &quot; + j);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class Output {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String args[])</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; B obj = new B();</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj.i=1;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj.j=2; &nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj.display(); &nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1 2&nbsp;</p>\r\n', '<p>2 1</p>\r\n', '<p>1 3&nbsp;</p>\r\n', '<p>3 1</p>\r\n', '8', 60, 17, '1'),
(518, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class ternary_operator {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String args[])&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int x = 3;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int y = ~ x;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int z;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; z = x &gt; y ? x : y;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(z);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n', '<p>0</p>\r\n', '<p>1</p>\r\n', '<p>3</p>\r\n', '<p>-4</p>\r\n', '8', 63, 17, '3'),
(519, '<p>Which of these method waits for the thread to treminate?<br />\r\n&nbsp;</p>\r\n', '<p>sleep()</p>\r\n', '<p>isAlive()</p>\r\n', '<p>join()</p>\r\n', '<p>stop()</p>\r\n', '7', 20, 17, '3'),
(520, '<p>Which of these interfaces define a method actionPerformed()?<br />\r\n&nbsp;</p>\r\n', '<p>ComponentListener</p>\r\n', '<p>ContainerListener</p>\r\n', '<p>ActionListener</p>\r\n', '<p>InputListener</p>\r\n', '7', 36, 17, '3'),
(521, '<p>Which of these interfaces define four methods?<br />\r\n&nbsp;</p>\r\n', '<p>ComponentListener</p>\r\n', '<p>ContainerListener</p>\r\n', '<p>ActionListener</p>\r\n', '<p>InputListener</p>\r\n', '4', 18, 17, '1'),
(522, '<p>Which of these method of Object class is used to obtain class of an object at run time?<br />\r\n&nbsp;</p>\r\n', '<p>get()</p>\r\n', '<p>void getclass()</p>\r\n', '<p>Class getclass()</p>\r\n', '<p>None of the above</p>\r\n', '4', 18, 17, '3'),
(523, '<p>Which of these is a method of ObjectInput interface used to deserialize an object from a stream?<br />\r\n&nbsp;</p>\r\n', '<p>int read()</p>\r\n', '<p>void close()</p>\r\n', '<p>Object readObject()</p>\r\n', '<p>Object WriteObject()</p>\r\n', '8', 20, 17, '3'),
(524, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class test {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int b;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test(int i, int j) {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = i;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b = j;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void meth(test o) {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; o.a *= 2;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; O.b /= 2;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class Output {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String args[])</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test obj = new test(10 , 20);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; obj.meth(obj);</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(obj.a + &quot; &quot; + obj.b); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n', '<p>10 20</p>\r\n', '<p>20 10</p>\r\n', '<p>20 40</p>\r\n', '<p>40 20</p>\r\n', '8', 61, 17, '2'),
(525, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; class Output {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String args[])</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Object obj = new Object();</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.print(obj.getclass());</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n', '<p>Object</p>\r\n', '<p>class Object</p>\r\n', '<p>class java.lang.Object</p>\r\n', '<p>None of the above</p>\r\n', '6', 60, 17, '3'),
(526, '<p>What is an event in delegation event model used by Java programming language?<br />\r\n&nbsp;</p>\r\n', '<p>An event is an object that describes a state change in a source.</p>\r\n', '<p>An event is an object that describes a state change in processing.</p>\r\n', '<p>An event is an object that describes any change by the user and system.</p>\r\n', '<p>An event is a class used for defining object, to create events.</p>\r\n', '5', 23, 17, '1'),
(527, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>&nbsp;&nbsp; class string_class {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String args[])</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String obj = &quot;I LIKE JAVA&quot;; &nbsp;&nbsp;</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(obj.length());</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;&nbsp;&nbsp; }</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>9</p>\r\n', '<p>10</p>\r\n', '<p>11</p>\r\n', '<p>12</p>\r\n', '7', 60, 17, '3'),
(593, '<p>What is class in c++ ?</p>\r\n', '<p>When you define a class, you define a blueprint for a data type.</p>\r\n', '<p>When you define a class, you make get more funtionality.</p>\r\n', '<p>When you define a class, you define the logic.</p>\r\n', '<p>When you define a class, you make debugging.</p>\r\n', '1', 30, 6, '1'),
(594, '<p>What is object in C++ ?</p>\r\n', '<p>Object is part of syntax of a class.</p>\r\n', '<p>Object is datatype of a class.</p>\r\n', '<p>Object is an instance of a class.</p>\r\n', '<p>Object is function of a class.</p>\r\n', '1', 25, 6, '3'),
(595, '<p>What is purpose of abstract class ?.</p>\r\n', '<p>to provide help with database connectivity.</p>\r\n', '<p>to provide data input to other classes.</p>\r\n', '<p>to provide security to other classes.</p>\r\n', '<p>to provide an appropriate base class from which other classes can inherit.</p>\r\n', '1', 26, 6, '4'),
(596, '<p>What is default visibility mode for members of classes in C++ ?</p>\r\n', '<p>Private</p>\r\n', '<p>Public</p>\r\n', '<p>Protected</p>\r\n', '<p>Depends</p>\r\n', '1', 27, 6, '1'),
(597, '<p>Which is more memory efficient ?</p>\r\n', '<p>structure</p>\r\n', '<p>union</p>\r\n', '<p>both use same memory</p>\r\n', '<p>depends on a programmer</p>\r\n', '1', 27, 6, '2'),
(598, '<p>How we can define member function outside the class ?</p>\r\n', '<p>Using union</p>\r\n', '<p>Using structure</p>\r\n', '<p>Using pointers</p>\r\n', '<p>Using scope resolution</p>\r\n', '1', 30, 6, '4'),
(599, '<p>Which among following is correct way of declaring object of a class ?</p>\r\n', '<p>Classname Objectname;</p>\r\n', '<p>Class Classname Objectname;</p>\r\n', '<p>Class Classname Object Objectname;</p>\r\n', '<p>Classname Object Objectname;</p>\r\n', '1', 30, 6, '1'),
(600, '<p>&nbsp;What is true about Constructor ?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Its name is plural of class name.</p>\r\n', '<p>Its name has * symbol before it.</p>\r\n', '<p>Its name is same as of class name.</p>\r\n', '<p>Its name has # symbol before it.</p>\r\n', '1', 28, 6, '3'),
(601, '<p>How we can access data members using objects ?</p>\r\n', '<p>object@datamember</p>\r\n', '<p>object*datamember</p>\r\n', '<p>object-&gt;datamember</p>\r\n', '<p>object.datamember</p>\r\n', '1', 28, 6, '4'),
(602, '<p>A variable is defined within a block in a body of a function. Which of the following are true ?</p>\r\n', '<p>It is visible from the point of definition to the end of the program.</p>\r\n', '<p>It is visible throughout the function.</p>\r\n', '<p>It is visible from the point of definition to the end of the block.</p>\r\n', '<p>It is visible throughout the block.</p>\r\n', '1', 32, 6, '2'),
(603, '<p>The major goal of inheritance in C++ is ?</p>\r\n', '<p>To facilitate the reusability of code</p>\r\n', '<p>To help modular programming</p>\r\n', '<p>To facilitate the conversion of data types</p>\r\n', '<p>To extend the capabilities of a class</p>\r\n', '1', 26, 6, '1'),
(604, '<p>Which of the following cannot be passed to a function ?</p>\r\n', '<p>Array</p>\r\n', '<p>Reference variable</p>\r\n', '<p>File</p>\r\n', '<p>Object</p>\r\n', '1', 30, 6, '3'),
(605, '<p>Enumerators are stored by the compiler in ?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>string</p>\r\n', '<p>integer</p>\r\n', '<p>float</p>\r\n', '<p>Any of the above</p>\r\n', '1', 30, 6, '2'),
(606, '<p>The default visibility mode while inheriting is ?</p>\r\n', '<p>public</p>\r\n', '<p>protected</p>\r\n', '<p>private</p>\r\n', '<p>any of the above</p>\r\n', '1', 30, 6, '3'),
(607, '<p>The derived class constructor</p>\r\n', '<p>never passes any values to base class constructor</p>\r\n', '<p>can pass arguments only to one base class constructor function</p>\r\n', '<p>is responsible for passing the entire test of arguments needed by base class constructors</p>\r\n', '<p>none of the above</p>\r\n', '1', 28, 6, '3'),
(608, '<p>An explicitly defined destructor function</p>\r\n', '<p>may be virtual</p>\r\n', '<p>may not be virtual</p>\r\n', '<p>will always be virtual</p>\r\n', '<p>will never&nbsp;be virtual</p>\r\n', '3', 30, 6, '1'),
(609, '<p>What is meant by&nbsp;int *ptr[5];</p>\r\n', '<p>a pointer of 5 int elements</p>\r\n', '<p>an array of 5 int pointers</p>\r\n', '<p>an array of 5 elements returning an int value</p>\r\n', '<p>None of the above</p>\r\n', '1', 30, 6, '2'),
(610, '<p>When a structure refers to itself, it is known as ?</p>\r\n', '<p>encapsulated structure</p>\r\n', '<p>nested structure</p>\r\n', '<p>recursive structure</p>\r\n', '<p>self-referential structure</p>\r\n', '3', 28, 6, '4'),
(611, '<p>The members of a class are ?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>have no visibility by default</p>\r\n', '<p>public by default</p>\r\n', '<p>private by default</p>\r\n', '<p>protected by default</p>\r\n', '1', 25, 6, '3'),
(612, '<p>The function used to define the task assigned to an operator is ?</p>\r\n', '<p>Virtual function</p>\r\n', '<p>Static function</p>\r\n', '<p>Operator function</p>\r\n', '<p>Friend function</p>\r\n', '3', 30, 6, '3'),
(613, '<p>Which operators can not be overloaded ?</p>\r\n', '<p>Binary operator</p>\r\n', '<p>Ternary operator</p>\r\n', '<p>Unary operator</p>\r\n', '<p>All can be overloaded</p>\r\n', '1', 30, 6, '2'),
(614, '<p>Classes in c++ are ?</p>\r\n', '<p>Fundamental data type</p>\r\n', '<p>Primitive data type</p>\r\n', '<p>Desired data type</p>\r\n', '<p>Not defined</p>\r\n', '1', 27, 6, '3'),
(615, '<p>A constructor function is generally defined&nbsp;</p>\r\n', '<p>In the private section of a class</p>\r\n', '<p>In the public section of a class</p>\r\n', '<p>In the protected section of a class</p>\r\n', '<p>None of the above</p>\r\n', '1', 30, 6, '2'),
(617, '<p>Only one copy of the class is inherited, when it is defined as ?</p>\r\n', '<p>virtual</p>\r\n', '<p>public</p>\r\n', '<p>static&nbsp;</p>\r\n', '<p>private</p>\r\n', '3', 30, 6, '1'),
(618, '<p>What is the use of dynamic_cast operator?<br />\r\n&nbsp;</p>\r\n', '<p>it converts virtual base class to derived class</p>\r\n', '<p>it converts virtual base object to derived objeccts</p>\r\n', '<p>it will convert the operator based on precedence</p>\r\n', '<p>None of the above</p>\r\n', '3', 26, 6, '1'),
(619, '<p>&nbsp;What will happen when the function call operator is overloaded?<br />\r\n&nbsp;</p>\r\n', '<p>It will not modify the functions.<br />\r\n&nbsp;</p>\r\n', '<p>It will modify the functions.</p>\r\n', '<p>It will modify the object.</p>\r\n', '<p>It will modify the operator to be interpreted.</p>\r\n', '1', 30, 6, '4'),
(620, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n   #include </pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n   using namespace std;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n   int main()</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n   {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n       int a[2][4] = {3, 6, 9, 12, 15, 18, 21, 24};</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n       cout &lt;&lt; *(a[1] + 2) &lt;&lt; *(*(a + 1) + 2) &lt;&lt; 2[1[a]];</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n       return 0;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n   }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>15 18 21</p>\r\n', '<p>21 21 21</p>\r\n', '<p>24 24 24</p>\r\n', '<p>Compile time error</p>\r\n', '4', 60, 6, '2'),
(621, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n   #include </pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n   using namespace std;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n   int main()</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n   {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n       int arr[] = {4, 5, 6, 7};</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n       int *p = (arr + 1);</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n       cout &lt;&lt; *p;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n       return 0;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n   }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>4</p>\r\n', '<p>5</p>\r\n', '<p>6</p>\r\n', '<p>7</p>\r\n', '4', 45, 6, '2'),
(622, '<p>Function overloading is also similar to which of the following?<br />\r\n&nbsp;</p>\r\n', '<p>operator overloading</p>\r\n', '<p>constructor overloading</p>\r\n', '<p>destructor overloading</p>\r\n', '<p>none of the above</p>\r\n', '1', 30, 6, '2'),
(623, '<p>What is the output of this program?</p>\r\n\r\n<ol>\r\n	<li>\r\n	<pre>\r\n    #include </pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    using namespace std;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    void print(int i)</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        cout &lt;&lt; i;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    void print(double  f)</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        cout &lt;&lt; f;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    int main(void)</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    {</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        print(5);</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        print(500.263);</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n        return 0;</pre>\r\n	</li>\r\n	<li>\r\n	<pre>\r\n    }</pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>5500.263</p>\r\n', '<p>500.2635</p>\r\n', '<p>500.263</p>\r\n', '<p>None of the above</p>\r\n', '3', 45, 6, '1'),
(624, '<p>Which rule will not affect the friend function?<br />\r\n&nbsp;</p>\r\n', '<p>private and protected members of a class cannot be accessed from outside</p>\r\n', '<p>private and protected member can be accessed anywhere</p>\r\n', '<p>Both A and B&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 30, 6, '1'),
(657, '<p>The DBMS acts as an interface between what two components of an enterprise-class database system?</p>\r\n', '<p>Database application and the database</p>\r\n', '<p>Data and the database</p>\r\n', '<p>The user and the database application</p>\r\n', '<p>Database application and SQL</p>\r\n', '3', 17, 12, '1'),
(658, '<p>Which of the following products was an early implementation of the relational model developed by E.F. Codd of IBM?&nbsp;</p>\r\n', '<p>IDMS</p>\r\n', '<p>DB2</p>\r\n', '<p>dBase-II</p>\r\n', '<p>R:base</p>\r\n', '1', 10, 12, '2'),
(659, '<p>The following are components of a database except ________&nbsp;</p>\r\n', '<p>User data</p>\r\n', '<p>Meta data</p>\r\n', '<p>Reports</p>\r\n', '<p>Indexes</p>\r\n', '1', 10, 12, '3'),
(660, '<p>An application where only one user accesses the database at a given time is an example of a(n) ________</p>\r\n', '<p>single-user database application</p>\r\n', '<p>multiuser database application</p>\r\n', '<p>e-commerce database application</p>\r\n', '<p>data mining database application</p>\r\n', '4', 18, 12, '1'),
(661, '<p>An on-line commercial site such as Amazon.com is an example of a(n) ________</p>\r\n', '<p>single-user database application</p>\r\n', '<p>multiuser database application</p>\r\n', '<p>e-commerce database application</p>\r\n', '<p>data mining database application</p>\r\n', '6', 17, 12, '3'),
(662, '<p>Which of the following products was the first to implement true relational algebra in a PC DBMS?</p>\r\n', '<p>IDMS</p>\r\n', '<p>Oracle</p>\r\n', '<p>dBase-II&nbsp;</p>\r\n', '<p>R:base</p>\r\n', '6', 18, 12, '4'),
(663, '<p>SQL stands for ________</p>\r\n', '<p>Structured Query Language</p>\r\n', '<p>Sequential Query Language</p>\r\n', '<p>Structured Question Language</p>\r\n', '<p>Sequential Question Language</p>\r\n', '1', 14, 12, '1'),
(664, '<p>Because it contains a description of its own structure, a database is considered to be ________ .</p>\r\n', '<p>described</p>\r\n', '<p>metadata compatible</p>\r\n', '<p>self-describing</p>\r\n', '<p>an application program</p>\r\n', '2', 17, 12, '3'),
(665, '<p>The following are functions of a DBMS except ________</p>\r\n', '<p>creating and processing forms</p>\r\n', '<p>creating databases</p>\r\n', '<p>processing data</p>\r\n', '<p>administrating databases</p>\r\n', '2', 15, 12, '1'),
(666, '<p>Helping people keep track of things is the purpose of a(n) ________</p>\r\n', '<p>database</p>\r\n', '<p>table</p>\r\n', '<p>instance</p>\r\n', '<p>relationship</p>\r\n', '6', 14, 12, '1'),
(667, '<p>Which of the following products implemented the CODASYL DBTG model?</p>\r\n', '<p>IDMS</p>\r\n', '<p>DB2</p>\r\n', '<p>dBase-II</p>\r\n', '<p>R:base</p>\r\n', '7', 18, 12, '1'),
(668, '<p>An Enterprise Resource Planning application is an example of a(n) ________ .</p>\r\n', '<p>single-user database application</p>\r\n', '<p>multiuser database application</p>\r\n', '<p>e-commerce database application</p>\r\n', '<p>data mining database application</p>\r\n', '5', 18, 12, '2'),
(669, '<p>A DBMS that combines a DBMS and an application generator is ________</p>\r\n', '<p>Microsoft&#39;s SQL Server</p>\r\n', '<p>Microsoft&#39;s Access</p>\r\n', '<p>Microsoft&#39;s Access</p>\r\n', '<p>Oracle Corporation&#39;s Oracle</p>\r\n', '4', 14, 12, '2'),
(670, '<p>You have run an SQL statement that asked the DBMS to display data in a table named USER_TABLES. The results include columns of data labeled &quot;TableName,&quot; &quot;NumberOfColumns&quot; and &quot;PrimaryKey.&quot; You are looking at ________</p>\r\n', '<p>user data</p>\r\n', '<p>meta data</p>\r\n', '<p>report</p>\r\n', '<p>indexes</p>\r\n', '5', 22, 12, '2'),
(671, '<p>Which of the following is not considered to be a basic element of an enterprise-class database system?</p>\r\n', '<p>Users</p>\r\n', '<p>Database Applications</p>\r\n', '<p>DBMS</p>\r\n', '<p>COBOL programs</p>\r\n', '4', 18, 12, '4'),
(672, '<p>The DBMS that is most difficult to use is ________</p>\r\n', '<p>Microsoft&#39;s SQL Server</p>\r\n', '<p>Microsoft&#39;s Access</p>\r\n', '<p>IBM&#39;s DB2</p>\r\n', '<p>Oracle Corporation&#39;s Oracle</p>\r\n', '3', 14, 12, '4'),
(673, '<p>Which of the following data constraints would be used to specify that the value of cells in a column must be one of a specific set of possible values?</p>\r\n', '<p>A domain constraint</p>\r\n', '<p>A range constraint</p>\r\n', '<p>An intrarelation constraint</p>\r\n', '<p>An interrelation constraint</p>\r\n', '6', 24, 12, '1'),
(674, '<p>In a 1:N relationship, the foreign key is placed in:</p>\r\n', '<p>either table without specifying parent and child tables</p>\r\n', '<p>the parent table</p>\r\n', '<p>the child table.</p>\r\n', '<p>either the parent table or the child table.</p>\r\n', '4', 15, 12, '3'),
(675, '<p>Which of the following column properties specifies whether or not cells in a column must contain a data value?</p>\r\n', '<p>Null status</p>\r\n', '<p>Data type</p>\r\n', '<p>Default value</p>\r\n', '<p>Data constraints</p>\r\n', '5', 20, 12, '1'),
(676, '<p>A primary key should be defined as:</p>\r\n', '<p>NULL</p>\r\n', '<p>Not NULL</p>\r\n', '<p>Either of the above</p>\r\n', '<p>None of the above</p>\r\n', '1', 14, 12, '2'),
(677, '<p>Which of the following column properties would be used to specify that cells in a column must contain a monetary value?</p>\r\n', '<p>Null status</p>\r\n', '<p>Data type</p>\r\n', '<p>Default value</p>\r\n', '<p>Data constraints</p>\r\n', '5', 17, 12, '2'),
(678, '<p>Which of the following situation requires the use of ID-dependent entities?</p>\r\n', '<p>Association relationships only</p>\r\n', '<p>Multivalued attributes only</p>\r\n', '<p>Archetype/instance relationships only</p>\r\n', '<p>All of the above use ID dependent entities</p>\r\n', '5', 18, 12, '4'),
(679, '<p>A foreign key is:</p>\r\n', '<p>a column containing the primary key of another table</p>\r\n', '<p>used to define data types.</p>\r\n', '<p>used to define null status</p>\r\n', '<p>all the above</p>\r\n', '1', 12, 12, '1'),
(680, '<p>Which of the following columns is(are) are required in a table</p>\r\n', '<p>A foreign key</p>\r\n', '<p>An alternate key</p>\r\n', '<p>A primary key</p>\r\n', '<p>A surrogate key</p>\r\n', '1', 14, 12, '3'),
(681, '<p>In a 1:1 relationship, the foreign key is placed in:</p>\r\n', '<p>either table without specifying parent and child tables.</p>\r\n', '<p>the parent table.</p>\r\n', '<p>the child table.</p>\r\n', '<p>either the parent table or the child table.</p>\r\n', '7', 10, 12, '1'),
(682, '<p>Which of the following column properties would be used to specify that cells in a column must be immediately filled with a monetary value of $10,000?</p>\r\n', '<p>Null status</p>\r\n', '<p>Data type</p>\r\n', '<p>Default value</p>\r\n', '<p>Data constraints</p>\r\n', '6', 15, 12, '3'),
(683, '<p>The identifier of an entity will become the ________ of the new table.</p>\r\n', '<p>foreign key</p>\r\n', '<p>main attribute</p>\r\n', '<p>primary key&nbsp;</p>\r\n', '<p>identity key</p>\r\n', '3', 14, 12, '3'),
(684, '<p>Which of the following data constraints would be used to specify that the value of a cell in one column must be less than the value of a cell in another column in the same row of the same table?</p>\r\n', '<p>A domain constraint</p>\r\n', '<p>A range constraint</p>\r\n', '<p>An intrarelation constraint</p>\r\n', '<p>An interrelation constraint</p>\r\n', '3', 20, 12, '3'),
(685, '<p>A unique, DBMS-supplied identifier used as the primary key of a relation is called:</p>\r\n', '<p>primary key</p>\r\n', '<p>foreign key</p>\r\n', '<p>composite key</p>\r\n', '<p>surrogate key</p>\r\n', '2', 10, 12, '4'),
(686, '<p>Which is <strong>not</strong> true about surrogate keys?</p>\r\n', '<p>They are short.</p>\r\n', '<p>They are fixed.</p>\r\n', '<p>They have meaning to the user.</p>\r\n', '<p>They are numeric.</p>\r\n', '3', 10, 12, '3'),
(687, '<p>For every relationship, how many possible types of actions are there when enforcing minimum cardinalities?</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>4</p>\r\n', '<p>6</p>\r\n', '2', 15, 12, '4'),
(688, '<p>Which constraint requires that the binary relationship indicate all combinations that must appear in the ternary relationship?</p>\r\n', '<p>MUST COVER</p>\r\n', '<p>MUST NOT</p>\r\n', '<p>Both the above</p>\r\n', '<p>None of the above</p>\r\n', '4', 20, 12, '1'),
(689, '<p>Each entity is represented as:</p>\r\n', '<p>tuple</p>\r\n', '<p>table</p>\r\n', '<p>attribute</p>\r\n', '<p>file</p>\r\n', '2', 15, 12, '2'),
(690, '<p>For every relationship, how many possible sets of minimum cardinalities are there?</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>4</p>\r\n', '<p>6</p>\r\n', '1', 10, 12, '3'),
(691, '<p>If a relationship has a cascade updates constraint, then if ________ in the parent table is changed, then the same change will automatically be made to any corresponding foreign key value.</p>\r\n', '<p>the primary key</p>\r\n', '<p>any alternate key</p>\r\n', '<p>a surrogate key</p>\r\n', '<p>a foreign key</p>\r\n', '7', 22, 12, '1'),
(692, '<p>Which of the following column properties would be used to specify that cells in a column must contain a monetary value that is less than another monetary value in the same row?</p>\r\n', '<p>Null status</p>\r\n', '<p>Data type</p>\r\n', '<p>Default value</p>\r\n', '<p>Data contraints</p>\r\n', '7', 22, 12, '4'),
(693, '<p>What type of join is needed when you wish to include rows that do not have matching values?</p>\r\n', '<p>Equi-join</p>\r\n', '<p>Natural join</p>\r\n', '<p>Outer join</p>\r\n', '<p>All the above</p>\r\n', '4', 15, 12, '3'),
(694, '<p>What type of join is needed when you wish to return rows that do have matching values?</p>\r\n', '<p>Equi Join</p>\r\n', '<p>Natural join</p>\r\n', '<p>Outer join&nbsp;</p>\r\n', '<p>All the above</p>\r\n', '4', 15, 12, '4'),
(695, '<p>Which of the following is true concerning a procedure?</p>\r\n', '<p>You do not create them with SQL.</p>\r\n', '<p>They do not need to have a unique name.</p>\r\n', '<p>They include procedural and SQL statements</p>\r\n', '<p>They are the same thing as a function</p>\r\n', '3', 15, 12, '3'),
(696, '<p>A CASE SQL statement is which of the following</p>\r\n', '<p>A way to establish an IF-THEN-ELSE in SQL</p>\r\n', '<p>A way to establish a loop in SQL.</p>\r\n', '<p>A way to establish a data definition in SQL.</p>\r\n', '<p>All the above</p>\r\n', '5', 15, 12, '1'),
(697, '<p>Which of the following statements is true concerning routines and triggers?</p>\r\n', '<p>Both consist of procedural code.</p>\r\n', '<p>Both have to be called to operate.</p>\r\n', '<p>Both run automatically.</p>\r\n', '<p>Both are stored in the database.</p>\r\n', '8', 14, 12, '1'),
(698, '<p>Which of the following is one of the basic approaches for joining tables?</p>\r\n', '<p>Subqueries</p>\r\n', '<p>Natural join</p>\r\n', '<p>Union join</p>\r\n', '<p>all the above</p>\r\n', '2', 15, 12, '4'),
(699, '<p>Which of the following is one of the basic approaches for joining tables?</p>\r\n', '<p>Subqueries</p>\r\n', '<p>Natural join</p>\r\n', '<p>Union join</p>\r\n', '<p>all the above</p>\r\n', '1', 10, 12, '4'),
(700, '<p>Which of the following is true concerning systems information in an RDBMS?</p>\r\n', '<p>RDBMS store database definition information in system-created tables.</p>\r\n', '<p>This information can be accessed using SQL</p>\r\n', '<p>This information often cannot be updated by a user</p>\r\n', '<p>All the above</p>\r\n', '3', 16, 12, '4'),
(701, '<p>The following SQL is which type of join: SELECT CUSTOMER_T. CUSTOMER_ID, ORDER_T. CUSTOMER_ID, NAME, ORDER_ID FROM CUSTOMER_T,ORDER_T WHERE CUSTOMER_T. CUSTOMER_ID = ORDER_T. CUSTOMER_ID</p>\r\n', '<p>Equi-join</p>\r\n', '<p>Natural join</p>\r\n', '<p>Outer join</p>\r\n', '<p>Cartesian join</p>\r\n', '8', 22, 12, '1'),
(702, '<p>Embedded SQL is which of the following?</p>\r\n', '<p>Hard-coded SQL statements in a program language such as Java.</p>\r\n', '<p>The process of making an application capable of generating specific SQL code on the fly.</p>\r\n', '<p>Hard-coded SQL statements in a procedure</p>\r\n', '<p>Hard-coded SQL statements in a trigger</p>\r\n', '3', 17, 12, '1'),
(703, '<p>A UNION query is which of the following?</p>\r\n', '<p>Combines the output from no more than two queries and must include the same number of columns.</p>\r\n', '<p>Combines the output from no more than two queries and does not include the same number of columns.</p>\r\n', '<p>Combines the output from multiple queries and must include the same number of columns.</p>\r\n', '<p>Combines the output from multiple queries and does not include the same number of columns.</p>\r\n', '1', 12, 12, '3'),
(704, '<p>Which of the following statements is true concerning subqueries?</p>\r\n', '<p>Involves the use of an inner and outer query.</p>\r\n', '<p>Cannot return the same result as a query that is not a subquery</p>\r\n', '<p>Does not start with the word SELECT.</p>\r\n', '<p>All the above</p>\r\n', '2', 15, 12, '1'),
(705, '<p>Which of the following is a correlated subquery?</p>\r\n', '<p>Uses the result of an inner query to determine the processing of an outer query.</p>\r\n', '<p>Uses the result of an outer query to determine the processing of an inner query</p>\r\n', '<p>Uses the result of an inner query to determine the processing of an inner query.</p>\r\n', '<p>Uses the result of an outer query to determine the processing of an outer query</p>\r\n', '5', 15, 12, '2'),
(706, '<p>How many tables may be included with a join?</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>all the above</p>\r\n', '1', 15, 12, '4'),
(707, '<p>The following SQL is which type of join: SELECT CUSTOMER_T. CUSTOMER_ID, ORDER_T. CUSTOMER_ID, NAME, ORDER_ID FROM CUSTOMER_T,ORDER_T ;</p>\r\n', '<p>Equi join</p>\r\n', '<p>Natural join</p>\r\n', '<p>Outer join&nbsp;</p>\r\n', '<p>Cartesian join</p>\r\n', '7', 25, 12, '4'),
(708, '<p>Which of the following is true concerning triggers?</p>\r\n', '<p>You do not create them with SQL</p>\r\n', '<p>They execute against only some applications that access a database</p>\r\n', '<p>They have an event, condition, and action.</p>\r\n', '<p>They cannot cascade (cause another trigger to fire)</p>\r\n', '6', 16, 12, '3'),
(709, '<p>Every time attribute A appears, it is matched with the same value of attribute B, but not the same value of attribute C. Therefore, it is true that:</p>\r\n', '<p>A &rarr; B</p>\r\n', '<p>A &rarr; C</p>\r\n', '<p>A &rarr; (B,C)</p>\r\n', '<p>(B,C) &rarr; A</p>\r\n', '8', 23, 12, '1'),
(710, '<p>The different classes of relations created by the technique for preventing modification anomalies are called</p>\r\n', '<p>normal forms.</p>\r\n', '<p>referential integrity constraints</p>\r\n', '<p>functional dependencies.</p>\r\n', '<p>none of the above</p>\r\n', '6', 20, 12, '1'),
(711, '<p>A relation is in this form if it is in BCNF and has no multivalued dependencies</p>\r\n', '<p>second normal form</p>\r\n', '<p>third normal form</p>\r\n', '<p>fourth normal form</p>\r\n', '<p>domain/key normal form</p>\r\n', '4', 18, 12, '3'),
(712, '<p>Row is synonymous with the term</p>\r\n', '<p>record</p>\r\n', '<p>realtion</p>\r\n', '<p>column</p>\r\n', '<p>field</p>\r\n', '1', 12, 12, '1'),
(713, '<p>The primary key is selected from the:</p>\r\n', '<p>composite keys</p>\r\n', '<p>determinants</p>\r\n', '<p>candidate keys</p>\r\n', '<p>foreign keys</p>\r\n', '1', 13, 12, '3'),
(714, '<p>Which of the following is a group of one or more attributes that uniquely identifies a row?</p>\r\n', '<p>key</p>\r\n', '<p>determinant</p>\r\n', '<p>tuple</p>\r\n', '<p>realtion</p>\r\n', '2', 17, 12, '1');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(715, '<p>When the values in one or more attributes being used as a foreign key must exist in another set of one or more attributes in another table, we have created:</p>\r\n', '<p>transitive dependency</p>\r\n', '<p>insertion anomaly</p>\r\n', '<p>referential integrity constraint</p>\r\n', '<p>normal form</p>\r\n', '8', 15, 12, '3'),
(716, '<p>A relation is considered a:</p>\r\n', '<p>Column</p>\r\n', '<p>one-dimensional table.</p>\r\n', '<p>two-dimensional table.</p>\r\n', '<p>three-dimensional table.</p>\r\n', '1', 13, 12, '3'),
(717, '<p>In the relational model, relationships between relations or tables are created by using:</p>\r\n', '<p>composite keys.</p>\r\n', '<p>determinants</p>\r\n', '<p>candidate keys</p>\r\n', '<p>foreign keys</p>\r\n', '2', 18, 12, '4'),
(718, '<p>In order to run Java program, we need to install __________application program.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>jdk</p>\r\n', '<p>sdk</p>\r\n', '<p>dbk</p>\r\n', '<p>all of the above</p>\r\n', '1', 15, 17, '1'),
(719, '<p>Which of the following operation(s) is/are required to convert the java source code into output form.</p>\r\n', '<p>Compilation</p>\r\n', '<p>interpretation</p>\r\n', '<p>both a and b</p>\r\n', '<p>none of these</p>\r\n', '1', 18, 17, '3'),
(720, '<p>Previously java was known as ________.</p>\r\n', '<p>Java only</p>\r\n', '<p>apple</p>\r\n', '<p>jdk</p>\r\n', '<p>oak</p>\r\n', '1', 19, 17, '4'),
(721, '<p>Java _________the program first and then __________it.</p>\r\n\r\n<p>1) compile<br />\r\n2) interpret<br />\r\n3) assemble<br />\r\n4) debug</p>\r\n', '<p>1 and 2</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2 and 1</p>\r\n', '<p>3 and 4</p>\r\n', '<p>1 and 4</p>\r\n', '1', 20, 17, '1'),
(722, '<p>Java is developed by___________</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Microsoft</p>\r\n', '<p>Oracle</p>\r\n', '<p>Sun<br />\r\n&nbsp;</p>\r\n', '<p>Google</p>\r\n', '1', 18, 17, '3'),
(723, '<p>What do you mean by JRE?</p>\r\n', '<p>java runtime environment</p>\r\n', '<p>java runtime exception</p>\r\n', '<p>java runtime execution</p>\r\n', '<p>none of these</p>\r\n', '1', 18, 17, '1'),
(724, '<p>Class is a ........ entity.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>logical</p>\r\n', '<p>Physical&nbsp;</p>\r\n', '<p>up normal</p>\r\n', '<p>collection of</p>\r\n', '1', 15, 17, '1'),
(725, '<p>Java has its origin in</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>C programming language</p>\r\n', '<p>PERRL</p>\r\n', '<p>COBOL</p>\r\n', '<p>Oak programming language</p>\r\n', '1', 17, 17, '4'),
(726, '<p>Which one of the following is true for Java?</p>\r\n', '<p>Java is object oriented and interpreted.&nbsp;</p>\r\n', '<p>Java is efficient and faster than C.&nbsp;</p>\r\n', '<p>Java is the choice of everyone.</p>\r\n', '<p>Java is not robust.</p>\r\n', '1', 17, 17, '1'),
(727, '<p>The command javac is used to</p>\r\n', '<p>debug a java program</p>\r\n', '<p>compile a java program</p>\r\n', '<p>interpret a java program</p>\r\n', '<p>execute a java program</p>\r\n', '1', 18, 17, '2'),
(728, '<p>Java servlets are an efficient and powerful solution for creating &hellip;&hellip;&hellip;&hellip;.. for the web.</p>\r\n', '<p>Dynamic content</p>\r\n', '<p>Static content</p>\r\n', '<p>Hardware</p>\r\n', '<p>Both a and b</p>\r\n', '1', 19, 17, '1'),
(729, '<p>Filters were officially introduced in the Servlet &hellip;&hellip;&hellip;&hellip;&hellip;&hellip; specification.</p>\r\n', '<p>2.1</p>\r\n', '<p>2.3</p>\r\n', '<p>2.2</p>\r\n', '<p>2.4</p>\r\n', '1', 18, 17, '2'),
(730, '<p>Which is the root class of all AWT events</p>\r\n', '<p>java.awt.ActionEvent</p>\r\n', '<p>java.awt.AWTEvent</p>\r\n', '<p>java.awt.event.AWTEvent</p>\r\n', '<p>java.awt.event.Event</p>\r\n', '1', 18, 17, '2'),
(731, '<p>OOP features are<br />\r\ni)&nbsp;&nbsp; Increasing productivity&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\nii) Reusability<br />\r\niii) Decreasing maintenance cost&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\niv) High vulnerability</p>\r\n', '<p>1,2 &amp; 4</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1,2 &amp; 3</p>\r\n', '<p>1, 2 &amp; 4</p>\r\n', '<p>none of the above</p>\r\n', '1', 18, 17, '2'),
(732, '<p>break statement is used to<br />\r\ni)&nbsp;&nbsp; get out of method&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\nii) end aprogram<br />\r\niii) get out of a loop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\niv) get out of the system</p>\r\n', '<p>1 &amp; 2</p>\r\n', '<p>1,2 &amp; 3</p>\r\n', '<p>1 &amp; 3</p>\r\n', '<p>3</p>\r\n', '1', 18, 17, '4'),
(733, '<p>&hellip;&hellip;&hellip;&hellip;&hellip;. are not machine instructions and therefore, Java interpreter generates machine code that can be directly executed by the machine that is running the Java program.</p>\r\n', '<p>Compiled Instructions</p>\r\n', '<p>Compiled code</p>\r\n', '<p>byte code</p>\r\n', '<p>Java mid code</p>\r\n', '1', 20, 17, '3'),
(734, '<p>The command javac</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Converts a java program into binary code.&nbsp;</p>\r\n', '<p>Converts a java program into bytecode.&nbsp;</p>\r\n', '<p>Converts a java program into machine language.&nbsp;</p>\r\n', '<p>None of the above.</p>\r\n', '1', 15, 17, '2'),
(735, '<p>Which of the following is not the java primitive type</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Byte</p>\r\n', '<p>Float</p>\r\n', '<p>Character</p>\r\n', '<p>Long double</p>\r\n', '1', 15, 17, '4'),
(736, '<p>Command to execute compiled java program is</p>\r\n', '<p>java</p>\r\n', '<p>javac</p>\r\n', '<p>run</p>\r\n', '<p>javaw</p>\r\n', '1', 17, 17, '1'),
(737, '<p>Java Servlet<br />\r\ni) is key component of server side java development&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\nii) is a small pluggable extension to a server that enhances functionality<br />\r\niii) runs only in Windows Operating System<br />\r\niv) allows developers to customize any java enabled server</p>\r\n', '<pre>\r\ni, ii &amp; iii are ture\r\n</pre>\r\n', '<p>i, iii &amp; iv are true</p>\r\n', '<pre>\r\nii, iii &amp; iv are true\r\n\r\n</pre>\r\n', '<p>i, ii &amp; iv are true</p>\r\n', '1', 20, 17, '4'),
(738, '<p>Inner classes are</p>\r\n', '<p>anonymous classes</p>\r\n', '<p>nested classes</p>\r\n', '<p>sub classes</p>\r\n', '<p>derived classes</p>\r\n', '2', 17, 17, '2'),
(739, '<p>........ class must give a concrete method.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>abstract</p>\r\n', '<p>constructor</p>\r\n', '<p>least</p>\r\n', '<p>program</p>\r\n', '2', 18, 17, '1'),
(740, '<p>AWT stands for&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>abstract window toolkit</p>\r\n', '<p>abstract window toolbar</p>\r\n', '<pre>\r\naccess window toolkit\r\n\r\n\r\n</pre>\r\n', '<p>access window toolbar</p>\r\n', '2', 18, 17, '1'),
(741, '<p>JAR file contains the compressed version of _________ file.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>.java<br />\r\n&nbsp;</p>\r\n', '<p>.class</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>.jsp</p>\r\n', '<p>all of these</p>\r\n', '2', 19, 17, '2'),
(742, '<p>Object which can store group of other objects is known as___________</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Collection Object</p>\r\n', '<p>Java object</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Package</p>\r\n', '<p>none of these</p>\r\n', '2', 20, 17, '1'),
(743, '<p>All collection classes are available in ___________ package.</p>\r\n', '<p>java.io</p>\r\n', '<p>java.lang</p>\r\n', '<p>java.awt</p>\r\n', '<p>java.util</p>\r\n', '2', 18, 17, '4'),
(744, '<p>By default , how many minimum threads are available in program ?</p>\r\n', '<p>Zero</p>\r\n', '<p>One</p>\r\n', '<p>Two</p>\r\n', '<p>uncountable</p>\r\n', '2', 20, 17, '3'),
(745, '<p>Who starts the default thread available in java program?</p>\r\n', '<p>System class</p>\r\n', '<p>main method</p>\r\n', '<p>static keyword</p>\r\n', '<p>none of these</p>\r\n', '2', 20, 17, '2'),
(746, '<p>Runnable is a_______</p>\r\n', '<p>class</p>\r\n', '<p>Method</p>\r\n', '<p>Variable</p>\r\n', '<p>Interface</p>\r\n', '2', 18, 17, '4'),
(747, '<p>Condition which cause run time error in program is known as _______</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error</p>\r\n', '<p>Exception</p>\r\n', '<p>conditional statement</p>\r\n', '<p>none of these</p>\r\n', '2', 18, 17, '2'),
(748, '<p>Exception class available in ___________</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>java.io</p>\r\n', '<p>java.lang</p>\r\n', '<p>java.awt</p>\r\n', '<p>java.util</p>\r\n', '2', 20, 17, '2'),
(749, '<p>Match the following.<br />\r\na) Java &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1) is a tool for debugging java program<br />\r\nb) Javah &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2) is a tool for creating C-like header files<br />\r\nc) Javap &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3) runs java bytecode<br />\r\nd) jdb &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;4) prints java code representation</p>\r\n', '<p>a-3, b-2, c-1, d-4</p>\r\n', '<p>a-3, b-2, c-4, d-1</p>\r\n', '<p>a-1, b-2, c-3, d-4</p>\r\n', '<p>a-2, b-1, c-3, d-4</p>\r\n', '2', 24, 17, '2'),
(750, '<p>State true or false.<br />\r\n<br />\r\ni) init() is called after start() in applet<br />\r\nii) applets are used for networking<br />\r\niii) inheritance is a part of Java Foundation Classes<br />\r\niv) final does not prevent inheritance</p>\r\n', '<p>i-true, ii-true, iii-false, iv-true</p>\r\n', '<p>i-false, ii-false, iii-false, iv-false</p>\r\n', '<p>i-true, ii-true, iii-true, iv-true</p>\r\n', '<p>i-true, ii-false, iii-false, iv-false</p>\r\n', '2', 23, 17, '2'),
(751, '<p>The .................. and .................... classes are abstract classes that support reading and writing of byte streams.</p>\r\n', '<p>reader, writer</p>\r\n', '<p>inputstream, outputstream</p>\r\n', '<p>objectinputstream, objectoutputstream</p>\r\n', '<p>none of these</p>\r\n', '2', 22, 17, '2'),
(752, '<p>What is the error in the following code?<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; class Test<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; abstract void display( );<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>No error</p>\r\n', '<p>Method display( ) should be declared as static</p>\r\n', '<p>Test class should be declared as abstract</p>\r\n', '<p>Test class should be declared as public</p>\r\n', '2', 23, 17, '3'),
(753, '<p>A package is a collection of</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>classes</p>\r\n', '<p>interfaces</p>\r\n', '<p>editing tools</p>\r\n', '<p>classes and interfaces</p>\r\n', '2', 21, 17, '4'),
(754, '<p>Which of the following methods belong to the string class?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>length( )</p>\r\n', '<p>compare To ( )</p>\r\n', '<p>equals ( )</p>\r\n', '<p>All of them</p>\r\n', '2', 21, 17, '4'),
(755, '<p>What will be the output of the following code?<br />\r\n&nbsp;&nbsp;&nbsp; byte x=64, y;<br />\r\n&nbsp;&nbsp;&nbsp; y= (byte) (x&lt;&lt;2);<br />\r\n&nbsp;&nbsp;&nbsp; System.out.println(y);</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>64</p>\r\n', '2', 24, 17, '1'),
(756, '<p>If m and n are int type variables, what will be the result of the expression<br />\r\n&nbsp;&nbsp;&nbsp; m%n<br />\r\n&nbsp;&nbsp;&nbsp; when m=5 and n=2 ?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>None of the above</p>\r\n', '2', 24, 17, '2'),
(757, '<p>Which of the following control expressions are valid for an if statement?</p>\r\n', '<p>An integer expression<br />\r\n&nbsp;</p>\r\n', '<p>A Boolean expression<br />\r\n&nbsp;</p>\r\n', '<p>Either A or B<br />\r\n&nbsp;</p>\r\n', '<p>Neither A nor B</p>\r\n', '2', 23, 17, '2'),
(758, '<p>The concept of multiple inheritance is implemented in Java by</p>\r\n', '<p>extending two or more classes<br />\r\n&nbsp;</p>\r\n', '<p>extending one class and implementing one or more interfaces<br />\r\n&nbsp;</p>\r\n', '<p>implementing two or more interfaces</p>\r\n', '<p>both B and C</p>\r\n', '3', 19, 17, '4'),
(759, '<p>Which of the following do not represent legal flow control statements?</p>\r\n', '<p>break;<br />\r\n&nbsp;</p>\r\n', '<p>return;<br />\r\n&nbsp;</p>\r\n', '<p>exit();<br />\r\n&nbsp;</p>\r\n', '<p>continue outer;</p>\r\n', '3', 23, 17, '3'),
(760, '<p>Data input is</p>\r\n', '<p>an abstract class defined in java.io<br />\r\n&nbsp;</p>\r\n', '<p>a class we can use to read primitive data types<br />\r\n&nbsp;</p>\r\n', '<p>an interface that defines methods to open files.<br />\r\n&nbsp;</p>\r\n', '<p>an interface that defines methods to read primitive data types.</p>\r\n', '3', 20, 17, '4'),
(761, '<p>Using which keyword we can access value of the instance variables and class variables of that class inside the method of that class itself.</p>\r\n', '<p>super</p>\r\n', '<p>final</p>\r\n', '<p>this</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>either super or this</p>\r\n', '3', 23, 17, '3'),
(762, '<p>If a variable is declared final, it must include ...................... value.</p>\r\n', '<p>integer</p>\r\n', '<p>no</p>\r\n', '<p>initial</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>float</p>\r\n', '3', 20, 17, '3'),
(763, '<p>State true or false.</p>\r\n\r\n<p>i) Jpanel is a class included in awt package.</p>\r\n\r\n<p>ii) Anonymous classes are mostly used for event handling.</p>\r\n\r\n<p>iii) Names of anonymous classes must be unique</p>\r\n\r\n<p>iv) JOptionPane is an inner class</p>\r\n', '<p>i-false, ii-false, iii-true, iv-true</p>\r\n', '<p>i-true, ii-false, iii-true, iv-false</p>\r\n', '<p>i-false, ii-true, iii-false, iv-false</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-true, ii-false, iii-false, iv-true</p>\r\n', '3', 23, 17, '2'),
(764, '<p>In java, string is a .............</p>\r\n', '<p>primitive data type</p>\r\n', '<p>abstract data type</p>\r\n', '<p>combination of boolean</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 18, 17, '2'),
(765, '<p>Methods can be overloaded with a difference only in the type of the return value ..</p>\r\n', '<p>Not supported&nbsp;</p>\r\n', '<p>False</p>\r\n', '<p>True</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 20, 17, '2'),
(766, '<p>&nbsp;Each method in a java class must have a unique name .</p>\r\n', '<p>Not necessary</p>\r\n', '<p>True</p>\r\n', '<p>False</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 21, 17, '1'),
(767, '<p>&nbsp;State true or false.</p>\r\n\r\n<p>i) comparisons precede logical operations in java</p>\r\n\r\n<p>ii) assignment operations succeed increment operations</p>\r\n\r\n<p>iii) arithmetic operations succeed comparisons</p>\r\n\r\n<p>iv) x precede +</p>\r\n', '<p>i-true, ii-true, iii-false, iv-true</p>\r\n', '<p>i-true, ii-false, iii-true, iv-false</p>\r\n', '<p>i-false, ii-true, iii-false, iv-false</p>\r\n', '<p>i-true, ii-false, iii-false, iv-true</p>\r\n', '3', 24, 17, '1'),
(768, '<p>&nbsp;It is important feature of java that it always provides a default constructor to a class.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Not supported&nbsp;</p>\r\n', '<p>False</p>\r\n', '<p>True</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 24, 17, '3'),
(769, '<p>In Java variables, if first increment of the variable takes place and then the assignment occurs. This operation is also called ............................. .</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>pre increment<br />\r\n&nbsp;</p>\r\n', '<p>post increment<br />\r\n&nbsp;</p>\r\n', '<p>incrementation<br />\r\n&nbsp;</p>\r\n', '<p>pre incrementation</p>\r\n', '3', 22, 17, '1'),
(770, '<p>When the operators are having the same priority, they are evaluated from .................&nbsp; ............. in the order they appear in the expression.</p>\r\n', '<p>right to left<br />\r\n&nbsp;</p>\r\n', '<p>left to right<br />\r\n&nbsp;</p>\r\n', '<p>any of the order<br />\r\n&nbsp;</p>\r\n', '<p>depends on compiler</p>\r\n', '3', 24, 17, '2'),
(771, '<p>In java,&nbsp; ............. can only test for equality, where as ............ can evaluate any type of the Boolean expression.</p>\r\n', '<p>switch, if<br />\r\n&nbsp;</p>\r\n', '<p>if, switch<br />\r\n&nbsp;</p>\r\n', '<p>if, break<br />\r\n&nbsp;</p>\r\n', '<p>continue, if</p>\r\n', '3', 23, 17, '1'),
(772, '<p>&nbsp;The ....................... looks only for a match between the value of the expression and one of its case constants.</p>\r\n', '<p>if<br />\r\n&nbsp;</p>\r\n', '<p>match<br />\r\n&nbsp;</p>\r\n', '<p>switch<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 24, 17, '3'),
(773, '<p>System.in.read() is being used, the program must specify the .................. clause.</p>\r\n', '<p>throws.java.out.IOException<br />\r\n&nbsp;</p>\r\n', '<p>throws.java.in.IOException<br />\r\n&nbsp;</p>\r\n', '<p>throws.java.io.IOException<br />\r\n&nbsp;</p>\r\n', '<p>throws.java.io.InException</p>\r\n', '3', 23, 17, '3'),
(774, '<p>By using ................... you can force immediate termination of a loop, by passing the conditional expression and any remaining code in the body of the loop.</p>\r\n', '<p>Break<br />\r\n&nbsp;</p>\r\n', '<p>Continue<br />\r\n&nbsp;</p>\r\n', '<p>Terminate<br />\r\n&nbsp;</p>\r\n', '<p>Loop Close</p>\r\n', '3', 24, 17, '1'),
(775, '<p>The out object is an object encapsulated inside the ................. class, and represents the standard output device.</p>\r\n', '<p>standard</p>\r\n', '<p>local</p>\r\n', '<p>globlal</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>system</p>\r\n', '3', 23, 17, '4'),
(776, '<p>The third type of comment is used by a tool called .................. for automatic generation of documentation.</p>\r\n', '<p>Java commenting<br />\r\n&nbsp;</p>\r\n', '<p>Java generator<br />\r\n&nbsp;</p>\r\n', '<p>Java loc</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Java doc</p>\r\n', '3', 23, 17, '3'),
(777, '<p>In the second type the information written in java after // is ignored by the .......................</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Interpreter<br />\r\n&nbsp;</p>\r\n', '<p>Compiler<br />\r\n&nbsp;</p>\r\n', '<p>Programmer<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '3', 23, 17, '2'),
(778, '<p>The compiled java program can run on any ..................... plateform having Java Virtual Machine (JVM) installed on it.</p>\r\n', '<p>program<br />\r\n&nbsp;</p>\r\n', '<p>java<br />\r\n&nbsp;</p>\r\n', '<p>hardware<br />\r\n&nbsp;</p>\r\n', '<p>non java&nbsp;</p>\r\n', '4', 24, 17, '3'),
(779, '<p>JSP embeds in ................ in ......................</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Servlet, HTML<br />\r\n&nbsp;</p>\r\n', '<p>HTML, Java<br />\r\n&nbsp;</p>\r\n', '<p>HTML, Servlet<br />\r\n&nbsp;</p>\r\n', '<p>Java, HTML</p>\r\n', '4', 23, 17, '4'),
(780, '<p>The class at the top of exception class hierarchy is ..........................</p>\r\n', '<p>ArithmeticException</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Throwable<br />\r\n&nbsp;</p>\r\n', '<p>Class<br />\r\n&nbsp;</p>\r\n', '<p>Exception</p>\r\n', '4', 20, 17, '2'),
(781, '<p>&nbsp;In a java program, package declaration .................... import statements.</p>\r\n', '<p>must precede<br />\r\n&nbsp;</p>\r\n', '<p>must succeed<br />\r\n&nbsp;</p>\r\n', '<p>may precede or succeed<br />\r\n&nbsp;</p>\r\n', '<p>none</p>\r\n', '4', 24, 17, '1'),
(782, '<p>The class string belongs to ................... package.</p>\r\n', '<p>java.awt<br />\r\n&nbsp;</p>\r\n', '<p>java.lang<br />\r\n&nbsp;</p>\r\n', '<p>java.applet<br />\r\n&nbsp;</p>\r\n', '<p>java.string</p>\r\n', '4', 24, 17, '2'),
(783, '<p>The class string belongs to ................... package.</p>\r\n', '<p>java.awt<br />\r\n&nbsp;</p>\r\n', '<p>java.lang<br />\r\n&nbsp;</p>\r\n', '<p>java.applet<br />\r\n&nbsp;</p>\r\n', '<p>java.string</p>\r\n', '4', 23, 17, '2'),
(784, '<p>&nbsp;............... package is used by compiler itself. So it does not need to be imported for use.</p>\r\n', '<p>java.math<br />\r\n&nbsp;</p>\r\n', '<p>java.awt<br />\r\n&nbsp;</p>\r\n', '<p>java.applet<br />\r\n&nbsp;</p>\r\n', '<p>java.lang</p>\r\n', '4', 21, 17, '4'),
(785, '<p>State true or false for the following statements in Java.<br />\r\ni) Java beans slow down software development process.<br />\r\nii) Java Servlets do not have built in multithreading feature.</p>\r\n', '<p>i-false, ii-false<br />\r\n&nbsp;</p>\r\n', '<p>i-false, ii-true<br />\r\n&nbsp;</p>\r\n', '<p>i-true, ii-false<br />\r\n&nbsp;</p>\r\n', '<p>i-true, ii-true</p>\r\n', '4', 23, 17, '1'),
(786, '<p>State whether true or false.<br />\r\ni) init( ) of servlet is called after a client request comes in<br />\r\nii) Servlets are ultimately converted into JSP</p>\r\n', '<p>i-false, ii-false<br />\r\n&nbsp;</p>\r\n', '<p>i-false, ii-true<br />\r\n&nbsp;</p>\r\n', '<p>i-true, ii-false<br />\r\n&nbsp;</p>\r\n', '<p>i-true, ii-true</p>\r\n', '4', 25, 17, '1'),
(787, '<p>Which exception is thrown by the read() method of input stream class?</p>\r\n', '<p>Exception</p>\r\n', '<p>FileNotFoundException</p>\r\n', '<p>ReadException</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>IOException&nbsp;</p>\r\n', '4', 21, 17, '4'),
(788, '<p>When a method calls itself, it is called ......</p>\r\n', '<p>recursion&nbsp;</p>\r\n', '<p>distance</p>\r\n', '<p>display</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>problem</p>\r\n', '4', 21, 17, '1'),
(789, '<p>Which of the following statements are true?</p>\r\n\r\n<p>i) An abstract class may not have any final methods.</p>\r\n\r\n<p>ii) A final class may not have any abstract methods</p>\r\n\r\n<p>iii) An inner class may be declared with any accessibility keyword</p>\r\n\r\n<p>iv) Transient variable must be static&nbsp;</p>\r\n', '<p>i and ii</p>\r\n', '<p>ii and iii</p>\r\n', '<p>iii and iv</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All i, ii, iii and iv</p>\r\n', '4', 24, 17, '2'),
(790, '<p>Which of the following statements is/are false?</p>\r\n', '<p>A java monitor must either extend thread or implement runnable</p>\r\n', '<p>The sleep() method should be enclosed in try .... catch block.&nbsp;</p>\r\n', '<p>A thread can be temporarily suspended from running by using the wait() method.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A suspended thread using suspend() method can be received using the resume() method.</p>\r\n', '4', 20, 17, '1'),
(791, '<p>What does J2SE mean?</p>\r\n', '<p>Java 2 Platform Standard Edition</p>\r\n', '<p>Java 2 Internet Standard Edition</p>\r\n', '<p>Java 2 System Edition</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Java 2 Platform Independent Standard Edition</p>\r\n', '4', 20, 17, '1'),
(792, '<p>An ........ is a special kind of Java program that is designed to be transmitted over the Internet.</p>\r\n', '<p>viewlet</p>\r\n', '<p>applet</p>\r\n', '<p>servlet</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>object</p>\r\n', '4', 21, 17, '2'),
(793, '<p>Which are the valid ways to create DataInptStream streams?</p>\r\n', '<p>new DataInputStream();</p>\r\n', '<p>new DataInputStream(&quot;in.dat&#39;, &quot;r&quot;);</p>\r\n', '<p>new DataInputStream(new File(&quot;in.dat&quot;));</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>new DataInputStream(new FileInputStream(&quot;in.dat&quot;);</p>\r\n', '4', 20, 17, '4'),
(794, '<p>finalize() is only called just prior to .....</p>\r\n', '<p>initialization&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>runtime</p>\r\n', '<p>garbage collection</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>destruction&nbsp;</p>\r\n', '4', 22, 17, '3'),
(795, '<p>When we invoke repaint() for a component, the AWT invokes the method&nbsp;</p>\r\n', '<p>draw()</p>\r\n', '<p>show()</p>\r\n', '<p>update()</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>paint()</p>\r\n', '4', 23, 17, '3'),
(796, '<p>What is the use of valueOf() method?</p>\r\n', '<p>It converts data from its internal format into a human-readable form.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>It converts integer value to string&nbsp;</p>\r\n', '<p>It converts string to int value</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>It converts string to float value</p>\r\n', '4', 22, 17, '4'),
(797, '<p>&nbsp;What is the default thread at the time of starting the program?</p>\r\n', '<p>Main thread&nbsp;</p>\r\n', '<p>Thread Group</p>\r\n', '<p>Child Thread&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Thread Pool&nbsp;</p>\r\n', '4', 23, 17, '1'),
(798, '<p>What does the following line of code do?</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TextField text= new TextField(10);</p>\r\n', '<p>Creates text object that can hold 10 rows of text</p>\r\n', '<p>Creates text object that can hold 10 columns of text</p>\r\n', '<p>Creates the object text and initialize it with the value 10</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The code is illegal</p>\r\n', '4', 22, 17, '2'),
(799, '<p>&nbsp;.......... is an applet tag.</p>\r\n', '<p>(applet)</p>\r\n', '<p>&gt;applet&lt;</p>\r\n', '<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '5', 15, 17, '3'),
(800, '<p>&nbsp;In Java thread to thread communication is called ......</p>\r\n', '<p>Passing</p>\r\n', '<p>sending</p>\r\n', '<p>Messaging</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Calling</p>\r\n', '5', 18, 17, '3'),
(801, '<p>&nbsp;The setBackground() method is part of the class&nbsp;</p>\r\n', '<p>Graphics</p>\r\n', '<p>Applet&nbsp;</p>\r\n', '<p>Component</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Container</p>\r\n', '5', 22, 17, '3'),
(802, '<p>&nbsp;Which of the following statement is/are true?<br />\r\ni) The name of a java program file must match the name of the class with the extension .java<br />\r\nii) Two methods cannot have the same name in java&nbsp;</p>\r\n', '<p>i- only</p>\r\n', '<p>ii- only</p>\r\n', '<p>Both i and ii</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 21, 17, '1'),
(803, '<p>Which of the following represent(s) of a hexadecimal number?</p>\r\n', '<p>570</p>\r\n', '<p>(hex)5</p>\r\n', '<p>0X9F</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0X5</p>\r\n', '5', 24, 17, '1'),
(804, '<p>&nbsp;........ can appear only where in the body of a java method.</p>\r\n', '<p>definition&nbsp;</p>\r\n', '<p>declaration</p>\r\n', '<p>determine&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>package</p>\r\n', '5', 23, 17, '2'),
(805, '<p>&nbsp;State whether the following statement are True or False?<br />\r\ni) The modulus operator(%) can be used only with integer operands</p>\r\n\r\n<p>ii) Declarations can appear anywhere in the body of a java method</p>\r\n', '<p>i-True, ii-False</p>\r\n', '<p>i-False, ii-True&nbsp;</p>\r\n', '<p>i-True, ii-True</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-False, ii-False</p>\r\n', '5', 25, 17, '2'),
(806, '<p>&nbsp;Which of the following will produce a value of 22 if x=22.9?</p>\r\n', '<p>ceil(x)</p>\r\n', '<p>round(x)</p>\r\n', '<p>rint(x)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>abs(x)</p>\r\n', '5', 23, 17, '3'),
(807, '<p>........ is passed to a method by use of call by reference.</p>\r\n', '<p>Variables&nbsp;</p>\r\n', '<p>Objects&nbsp;</p>\r\n', '<p>Methods</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Operators</p>\r\n', '5', 23, 17, '2'),
(808, '<p>Using the keyboard interface you can fully abstract a ...</p>\r\n', '<p>Method</p>\r\n', '<p>Keyword</p>\r\n', '<p>Class</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Variables</p>\r\n', '5', 22, 17, '3'),
(809, '<p>State True or False for the following statements in java.<br />\r\ni) All the bitwise operators have same level of precedence in java<br />\r\nii) The default can is always required in the switch selection structure.</p>\r\n', '<p>i-True, ii-False</p>\r\n', '<p>i-False, ii-True&nbsp;</p>\r\n', '<p>i-True, ii-True</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-False, ii-False</p>\r\n', '5', 24, 17, '4'),
(810, '<p>&nbsp;Java is designed for .......... environment of the Internet.</p>\r\n', '<p>Development&nbsp;</p>\r\n', '<p>Deduction&nbsp;</p>\r\n', '<p>Distributed&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Web Design</p>\r\n', '5', 20, 17, '3'),
(811, '<p>Which of the following will produce a value of 10 if x=9.7?</p>\r\n', '<p>floor(x)</p>\r\n', '<p>abs(x)</p>\r\n', '<p>rint(x)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>round(x)</p>\r\n', '5', 23, 17, '4'),
(812, '<p>Variable declared as ......... do not occupy on a per instance basis.</p>\r\n', '<p>Static&nbsp;</p>\r\n', '<p>Final&nbsp;</p>\r\n', '<p>Abstract&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Code</p>\r\n', '5', 20, 17, '2'),
(813, '<p>&nbsp;Which of the following is not keyword?</p>\r\n', '<p>NULL</p>\r\n', '<p>implements</p>\r\n', '<p>protected</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>switch</p>\r\n', '5', 20, 17, '1'),
(814, '<p>&nbsp;The ...... statement is used to terminate a statement sequence.</p>\r\n', '<p>Break&nbsp;</p>\r\n', '<p>Switch&nbsp;</p>\r\n', '<p>Continue</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Wait</p>\r\n', '6', 18, 17, '1'),
(815, '<p>Multidimensional arrays are actually ......</p>\r\n', '<p>Arrays of element&nbsp;</p>\r\n', '<p>Arrays of variable</p>\r\n', '<p>Arrays of arrays</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Arrays of variable</p>\r\n', '6', 20, 17, '3'),
(816, '<p>Which of the following keywords are used to control access to a class member?<br />\r\ni) default ii) abstract iii) protected iv) interface v) public&nbsp;</p>\r\n', '<p>i, ii and iii only&nbsp;</p>\r\n', '<p>ii, iii and iv only</p>\r\n', '<p>iii, iv and v only</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ii, iii and v only</p>\r\n', '6', 23, 17, '4'),
(817, '<p>....... is used for initialize the value to the string object.</p>\r\n', '<p>Character literals</p>\r\n', '<p>String literals</p>\r\n', '<p>String group literals&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Group literals</p>\r\n', '6', 18, 17, '2'),
(818, '<p>Which of the following methods can be used to remove a component from the display?</p>\r\n', '<p>delete()</p>\r\n', '<p>remove()</p>\r\n', '<p>disappear()</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>hide()</p>\r\n', '6', 20, 17, '4'),
(819, '<p>Which of the following statements are valid array declaration?<br />\r\ni) int number(); ii) float average[ ];<br />\r\niii) double[]marks; iv) counter int[];</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i and ii</p>\r\n', '<p>ii and iii</p>\r\n', '<p>iii and iv</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All i, ii, iii and iv</p>\r\n', '6', 20, 17, '2'),
(820, '<p>Which of the following methods belong to the String class?</p>\r\n', '<p>length()</p>\r\n', '<p>CompareTo()</p>\r\n', '<p>equals()</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '6', 23, 17, '4'),
(821, '<p>Which of the following in NOT represent legal flow control statements?</p>\r\n', '<p>break;</p>\r\n', '<p>break();</p>\r\n', '<p>continue outer;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>return;</p>\r\n', '6', 23, 17, '2'),
(822, '<p>....................... is the key to ..................</p>\r\n', '<p>Serialization, persistence</p>\r\n', '<p>Persistence, inheritance</p>\r\n', '<p>Inheritance, object</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Persistence, serialization</p>\r\n', '6', 23, 17, '3'),
(823, '<p>&nbsp;State true of false.</p>\r\n\r\n<p>i) Public can only be assigned to class</p>\r\n\r\n<p>ii) Protected protects a statement</p>\r\n\r\n<p>iii) Protected method is never accessible outside the package</p>\r\n\r\n<p>iv) Friendly variable may be accessible outside class</p>\r\n', '<p>i-true, ii-true, iii-false, iv-true&nbsp;</p>\r\n', '<p>i-true, ii-false, iii-true, iv-false&nbsp;</p>\r\n', '<p>i-false, ii-true, iii-false, iv-false&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-true, ii-false, iii-false, iv-true</p>\r\n', '6', 23, 17, '1'),
(824, '<p>&nbsp;Using which keyword we can access value of the instance variables and class variables of that class inside the method of that class itself.</p>\r\n', '<p>super</p>\r\n', '<p>final</p>\r\n', '<p>this</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>either super or this</p>\r\n', '6', 24, 17, '3'),
(825, '<p>If a variable is declared final, it must include ...................... value.</p>\r\n', '<p>integer</p>\r\n', '<p>no</p>\r\n', '<p>initial</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>float</p>\r\n', '6', 23, 17, '3'),
(826, '<p>State true or false.</p>\r\n\r\n<p>i) Jpanel is a class included in awt package.</p>\r\n\r\n<p>ii) Anonymous classes are mostly used for event handling.</p>\r\n\r\n<p>iii) Names of anonymous classes must be unique</p>\r\n\r\n<p>iv) JOptionPane is an inner class</p>\r\n', '<p>i-false, ii-false, iii-true, iv-true</p>\r\n', '<p>i-true, ii-false, iii-true, iv-false</p>\r\n', '<p>i-false, ii-true, iii-false, iv-false</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-true, ii-false, iii-false, iv-true</p>\r\n', '6', 24, 17, '3'),
(827, '<p>In java, string is a .............</p>\r\n', '<p>primitive data type</p>\r\n', '<p>abstract data type</p>\r\n', '<p>combination of boolean</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '6', 20, 17, '2'),
(828, '<p>&nbsp;Methods can be overloaded with a difference only in the type of the return value ..</p>\r\n', '<p>Not supported&nbsp;</p>\r\n', '<p>False</p>\r\n', '<p>True</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '6', 23, 17, '2'),
(829, '<p>&nbsp;Each method in a java class must have a unique name .</p>\r\n', '<p>Not necessary</p>\r\n', '<p>True</p>\r\n', '<p>False</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '7', 24, 17, '1'),
(830, '<p>State true or false.</p>\r\n\r\n<p>i) comparisons precede logical operations in java</p>\r\n\r\n<p>ii) assignment operations succeed increment operations</p>\r\n\r\n<p>iii) arithmetic operations succeed comparisons</p>\r\n\r\n<p>iv) x precede +</p>\r\n', '<p>i-true, ii-true, iii-false, iv-true</p>\r\n', '<p>i-true, ii-false, iii-true, iv-false</p>\r\n', '<p>i-false, ii-true, iii-false, iv-false</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-true, ii-false, iii-false, iv-true</p>\r\n', '7', 24, 17, '1'),
(831, '<p>It is important feature of java that it always provides a default constructor to a class.</p>\r\n', '<p>Not supported&nbsp;</p>\r\n', '<p>False</p>\r\n', '<p>True</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '7', 24, 17, '3'),
(832, '<p>&nbsp;....................... is the key to ..................</p>\r\n', '<p>Serialization, persistence</p>\r\n', '<p>Persistence, inheritance</p>\r\n', '<p>Inheritance, object</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Persistence, serialization</p>\r\n', '7', 24, 17, '1'),
(833, '<p>&nbsp;State true of false.</p>\r\n\r\n<p>i) Public can only be assigned to class</p>\r\n\r\n<p>ii) Protected protects a statement</p>\r\n\r\n<p>iii) Protected method is never accessible outside the package</p>\r\n\r\n<p>iv) Friendly variable may be accessible outside class</p>\r\n', '<p>i-true, ii-true, iii-false, iv-true&nbsp;</p>\r\n', '<p>i-true, ii-false, iii-true, iv-false&nbsp;</p>\r\n', '<p>i-false, ii-true, iii-false, iv-false&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-true, ii-false, iii-false, iv-true</p>\r\n', '7', 25, 17, '3'),
(834, '<p>&nbsp;If m and n are int type variables, what will be the result of the expression m%n when m=-14 and n=-3?</p>\r\n', '<p>4</p>\r\n', '<p>2</p>\r\n', '<p>-2</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>-4</p>\r\n', '7', 24, 17, '3'),
(835, '<p>&nbsp;Consider the following code</p>\r\n\r\n<p>if(number&gt;=0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if(number&gt;0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; system.out.println(&quot;Number is positive&quot;);</p>\r\n\r\n<p>else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; system.out.println(&quot;Number is negative&quot;);</p>\r\n\r\n<p>What will be the output if number is equal to 0?</p>\r\n', '<p>Number is negative</p>\r\n', '<p>Number is positive</p>\r\n', '<p>Both A and B</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '7', 60, 17, '1'),
(836, '<p>Consider the following code:</p>\r\n\r\n<p>char c=&#39;a&#39;;</p>\r\n\r\n<p>switch (c)</p>\r\n\r\n<p>{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; case &#39;a&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; system.out.println(&quot;A&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; case &#39;b&#39;;&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; system.out.println(&quot;B&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; default;&nbsp;</p>\r\n\r\n<p>system.out.println(&quot;C&quot;);<br />\r\n}&nbsp;</p>\r\n\r\n<p>For this code, which of the following statement is true?</p>\r\n', '<p>Output will be A</p>\r\n', '<p>Output will be A followed by B</p>\r\n', '<p>Output will be A, followed by B, and then followed by C</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Code is illegal and therefore will not compile</p>\r\n', '7', 60, 17, '2'),
(837, '<p>Consider the following class definition.</p>\r\n\r\n<p>class Student extends String</p>\r\n\r\n<p>&nbsp; {<br />\r\n&nbsp; }</p>\r\n\r\n<p>What happens when we try to compile this class?</p>\r\n', '<p>Will not compile because class body is not defined</p>\r\n', '<p>Will not compile because the class in not declared public.</p>\r\n', '<p>Will not compile because string is abstract.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Will not compile because string is final.</p>\r\n', '7', 33, 17, '4'),
(838, '<p>What is wrong in the following class definitions?</p>\r\n\r\n<p>abstract class print</p>\r\n\r\n<p>{<br />\r\n&nbsp; abstract show();<br />\r\n}<br />\r\nclass Display extends Print<br />\r\n{<br />\r\n}</p>\r\n', '<p>Nothing is wrong</p>\r\n', '<p>Wrong. Method show() should have a return type</p>\r\n', '<p>Wrong. Method show() is not implemented in Display</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Wrong. Display does not contain any numbers.</p>\r\n', '7', 60, 17, '3'),
(839, '<p>&nbsp;What is the error in the following class definitions?</p>\r\n\r\n<p>abstract class XY<br />\r\n{<br />\r\n&nbsp; abstract sum(int x, int y){&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n', '<p>Class header is not defined properly</p>\r\n', '<p>Constructor is not defined</p>\r\n', '<p>Method is not defined properly</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>No error</p>\r\n', '8', 33, 17, '3'),
(840, '<p>&nbsp;Which of the following statements are true?</p>\r\n\r\n<p>i) We cannot use abstract classes to instantiate objects directly.</p>\r\n\r\n<p>ii) The abstract methods of an abstract class must be defined in its subclass.</p>\r\n\r\n<p>iii) We cannot declare abstract constructors.</p>\r\n\r\n<p>iv) We may declare abstract static methods.</p>\r\n', '<p>Line i only</p>\r\n', '<p>Line ii only</p>\r\n', '<p>Line i and ii only</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Line i, ii and iii only</p>\r\n', '8', 25, 17, '4'),
(841, '<p>&nbsp;We would like to make a member of a class visible in all subclasses regardless of what package they are in. Which one of the following keywords would archive this?</p>\r\n', '<p>Private</p>\r\n', '<p>Protected</p>\r\n', '<p>Public</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Private Protected</p>\r\n', '8', 23, 17, '4'),
(842, '<p>&nbsp;The use of protected keyword to a member in a class will restrict its visibility as follows:</p>\r\n', '<p>Visible only in the class and its subclass in the same package.</p>\r\n', '<p>Visible only inside the same package.</p>\r\n', '<p>Visible in all classes in the same package and subclasses in other packages</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Visible only in the class where it is declared</p>\r\n', '8', 23, 17, '3'),
(843, '<p>Consider the following code:</p>\r\n\r\n<p>interface Area<br />\r\n{<br />\r\n&nbsp; float compute (float x, float y);<br />\r\n}<br />\r\nclass Room implements Area<br />\r\n{<br />\r\n&nbsp; float compute (float x, float y)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp; return(x&amp;y);<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>What is wrong with the code?</p>\r\n', '<p>Interface definition is incomplete</p>\r\n', '<p>Method compute() in interface Area should be declared public</p>\r\n', '<p>Method compute() in class Room should be declared public</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All the above</p>\r\n', '8', 45, 17, '3'),
(844, '<p>The methods wait() and notify() are defined in&nbsp;</p>\r\n', '<p>java.lang.String</p>\r\n', '<p>java.lang.Runnable</p>\r\n', '<p>java.lang.Object</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>java.lang.Thread&nbsp;</p>\r\n', '8', 23, 17, '3'),
(845, '<p>The data or variables, defined within a class are called ..... variables.</p>\r\n', '<p>object</p>\r\n', '<p>class&nbsp;</p>\r\n', '<p>instance</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>schema</p>\r\n', '8', 24, 17, '3'),
(846, '<p>When we implement the Runnable interface, we must define the method.</p>\r\n', '<p>start()</p>\r\n', '<p>init()</p>\r\n', '<p>run()</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>resume()</p>\r\n', '8', 23, 17, '3'),
(847, '<p>_________________ is the highest class in the event-delegation model.</p>\r\n', '<p>java.awt.AWTEvent<br />\r\n&nbsp;</p>\r\n', '<p>java.util.EventListener<br />\r\n&nbsp;</p>\r\n', '<p>java.awt.event.AWTEvent<br />\r\n&nbsp;</p>\r\n', '<p>java.util.EventObject</p>\r\n', '8', 24, 17, '4'),
(848, '<p>The ________ method helps in clearing the buffer.</p>\r\n', '<p>flush()<br />\r\n&nbsp;</p>\r\n', '<p>clear()<br />\r\n&nbsp;</p>\r\n', '<p>clean()<br />\r\n&nbsp;</p>\r\n', '<p>gc()</p>\r\n', '8', 23, 17, '1'),
(849, '<p>Stateful Session beans contain</p>\r\n', '<p>Home Interface<br />\r\n&nbsp;</p>\r\n', '<p>Remote Interface<br />\r\n&nbsp;</p>\r\n', '<p>Bean Class<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '8', 24, 17, '4'),
(850, '<p>In C++ ..................... operator is used for Dynamic memory allocation.<br />\r\n&nbsp;</p>\r\n', '<p>Scope resolution</p>\r\n', '<p>Conditional</p>\r\n', '<p>New</p>\r\n', '<p>Membership access</p>\r\n', '1', 30, 6, '3'),
(852, '<p>The ...................... objects have values that can be tested for various error conditions.<br />\r\n&nbsp;</p>\r\n', '<p>osstream<br />\r\n&nbsp;</p>\r\n', '<p>ofstream</p>\r\n', '<p>stream</p>\r\n', '<p>ifstream<br />\r\n&nbsp;</p>\r\n', '1', 30, 6, '4'),
(853, '<p>Which function return the current position of the get or put pointer in bytes.<br />\r\n&nbsp;</p>\r\n', '<p>tellg( )</p>\r\n', '<p>tellp( )</p>\r\n', '<p>tell( )</p>\r\n', '<p>Both A and B</p>\r\n', '1', 30, 6, '2'),
(854, '<p>The first index number in an array starts with ............................ and the index number of an array of size n will be ............<br />\r\n&nbsp;</p>\r\n', '<p>0, n-1</p>\r\n', '<p>1, n-1</p>\r\n', '<p>0, n</p>\r\n', '<p>1, n</p>\r\n', '1', 35, 6, '1'),
(855, '<p>What Android resource directory do we use store our .xlm layout file for tablets?<br />\r\n&nbsp;</p>\r\n', '<p>Layout&nbsp;</p>\r\n', '<p>Layout-large&nbsp;</p>\r\n', '<p>Layout-tablet &nbsp;</p>\r\n', '<p>The name does not matter, it can be called anything</p>\r\n', '1', 32, 1, '2'),
(856, '<p>Android is based on Linux for the following reason.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Security</p>\r\n', '<p>Portability</p>\r\n', '<p>Networking</p>\r\n', '<p>All of these</p>\r\n', '1', 32, 1, '4'),
(857, '<p>When developing for the Android OS, Java byte code is compiled into what?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Java source code</p>\r\n', '<p>Dalvik application code</p>\r\n', '<p>Dalvik byte code</p>\r\n', '<p>C source code</p>\r\n', '1', 30, 1, '3'),
(858, '<p>What does the .apk extension stand for?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Application Package</p>\r\n', '<p>Application Package Kit</p>\r\n', '<p>Android Proprietary Kit</p>\r\n', '<p>Android Package</p>\r\n', '1', 30, 1, '1'),
(859, '<p>Which one is not a nickname of a version of Andriod?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;Cupcake &nbsp;</p>\r\n', '<p>Gingerbread &nbsp;</p>\r\n', '<p>Honeycomb&nbsp;</p>\r\n', '<p>Muffin</p>\r\n', '1', 35, 1, '4'),
(860, '<p>What is the use of versionCode attribute in AndroidManifest.xml file?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>It is used to define the current application version.</p>\r\n', '<p>It is used to define the current application name.</p>\r\n', '<p>It is used to define the public version that will be displayed to users.</p>\r\n', '<p>None of the above</p>\r\n', '7', 33, 1, '1'),
(861, '<p>&nbsp;What is used by android for relational data storage?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Tomcat</p>\r\n', '<p>SQL</p>\r\n', '<p>SQLiteDatabase</p>\r\n', '<p>None of the above</p>\r\n', '4', 30, 1, '3'),
(862, '<p>What is true about an Android Virtual Device (AVD)?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>An AVD is an emulator instance that enables you to model an actual device.</p>\r\n', '<p>You can create more than one AVDs in order to test your applications with several different configurations.</p>\r\n', '<p>You cannot create more than one AVDs.</p>\r\n', '<p>A and B both</p>\r\n', '4', 30, 1, '4'),
(863, '<p>In which file, permissions are set in Android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Src</p>\r\n', '<p>AndroidManifest.xml</p>\r\n', '<p>Bin</p>\r\n', '<p>None of the above</p>\r\n', '1', 29, 1, '2'),
(864, '<p>In which file, all string constant should be stored in android?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>AndroidManifest.xml</p>\r\n', '<p>Bin</p>\r\n', '<p>strings.xml</p>\r\n', '<p>None of the above</p>\r\n', '1', 30, 1, '3'),
(865, '<p>&nbsp;Which virtual machine is used by Android to run application?</p>\r\n\r\n<p><br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>JVM</p>\r\n', '<p>Dalvik JVM</p>\r\n', '<p>AVD</p>\r\n', '<p>None of the above</p>\r\n', '1', 30, 1, '2'),
(867, '<p>Choose the correct option regarding activity in android.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Activity is a class.</p>\r\n', '<p>When you create an android application your activity (class) is, by default inherited from Activity class.</p>\r\n', '<p>Both A and B</p>\r\n', '<p>None of the above</p>\r\n', '1', 30, 1, '3'),
(868, '<p>In Android, visual components are called.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Views</p>\r\n', '<p>Components</p>\r\n', '<p>DLL</p>\r\n', '<p>None of the above</p>\r\n', '1', 32, 1, '1'),
(869, '<p>How does Google check for malicious software in the Android Market?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Every new app is scanned by a virus scanner</p>\r\n', '<p>Users report malicious software to Google</p>\r\n', '<p>Google employees verify each new app</p>\r\n', '<p>A seperate company monitors the Android Market for Google</p>\r\n', '3', 33, 1, '2'),
(870, '<p>Which of these are not one of the three main components of the APK?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Dalvik Executable</p>\r\n', '<p>Resources</p>\r\n', '<p>Native Libraries</p>\r\n', '<p>Webkit</p>\r\n', '4', 27, 1, '4'),
(871, '<p>What is the name of the program that converts Java byte code into Dalvik byte code?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Android Interpretive Compiler (AIC)</p>\r\n', '<p>Dalvik Converter</p>\r\n', '<p>Dex compiler</p>\r\n', '<p>Mobile Interpretive Compiler (MIC)</p>\r\n', '1', 33, 1, '3'),
(872, '<p>What was the main reason for replacing the Java VM with the Dalvik VM when the project began?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>There was not enough memory capability</p>\r\n', '<p>Java virtual machine was not free</p>\r\n', '<p>Java VM was too complicated to configure</p>\r\n', '<p>Java VM was too slow</p>\r\n', '1', 30, 1, '2'),
(873, '<p>Android Applications must be signed.</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>After they are installed</p>\r\n', '<p>Before they are installed</p>\r\n', '<p>Never</p>\r\n', '<p>Within two weeks of installation<br />\r\n&nbsp;</p>\r\n', '1', 33, 1, '2'),
(874, '<p>What operating system is used as the base of the Android stack?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>Linux</p>\r\n', '<p>Windows</p>\r\n', '<p>Java</p>\r\n', '<p>XML</p>\r\n', '1', 28, 1, '1'),
(875, '<p>What Android resource directory do we use store our .xlm layout file for smartphones?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>Layout</p>\r\n', '<p>Layout-large</p>\r\n', '<p>Layout-phone</p>\r\n', '<p>The name does not matter, it can be called anything</p>\r\n', '2', 30, 1, '1'),
(876, '<p>What resource directory qualifier do we use for creating layout-large?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Orientation</p>\r\n', '<p>Size</p>\r\n', '<p>UI Mode</p>\r\n', '<p>Ratio</p>\r\n', '2', 30, 1, '2'),
(877, '<p>What class should your view extend so you can draw on it?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>CanvasView</p>\r\n', '<p>SurfaceView</p>\r\n', '<p>PaintView</p>\r\n', '<p>DrawingView</p>\r\n', '5', 32, 1, '2'),
(878, '<p>What listener should your view implement for touch?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>View.OnClickListener</p>\r\n', '<p>View.TouchListener</p>\r\n', '<p>View.OnTouchListner</p>\r\n', '<p>View.OnSwipeListener</p>\r\n', '5', 30, 1, '3'),
(879, '<p>What interface is used to listen for changes in the view&#39;s state?<br />\r\n&nbsp;</p>\r\n', '<p>SurfaceHolder.Callback &nbsp;</p>\r\n', '<p>SurfaceListener.StateChange &nbsp;</p>\r\n', '<p>View.OnChangeListener&nbsp;</p>\r\n', '<p>SurfaceHolder.StateChange</p>\r\n', '5', 33, 1, '1'),
(880, '<p>What Layout should you use in your XML to hold your game view?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>FrameLayout</p>\r\n', '<p>LinearLayout</p>\r\n', '<p>RelativeLayout</p>\r\n', '<p>TableLayout</p>\r\n', '4', 33, 1, '1'),
(881, '<p>Which tool is used to monitor and control the Emulators on which you are debugging your applications.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Android Asset Packaging Tool (AAPT)</p>\r\n', '<p>Dx</p>\r\n', '<p>DDMS</p>\r\n', '<p>None of the above</p>\r\n', '2', 50, 1, '3'),
(882, '<p>Choose the correct option regarding activity in android.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>An activity is a window that contains the user interface of your application.</p>\r\n', '<p>An application can have zero or more activities.</p>\r\n', '<p>An application can have only one activity.</p>\r\n', '<p>Both A and B</p>\r\n', '2', 32, 1, '4'),
(883, '<p>What method do we override when we extend the Thread class?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Main</p>\r\n', '<p>Run</p>\r\n', '<p>Execute</p>\r\n', '<p>Start</p>\r\n', '5', 30, 1, '2');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(884, '<p>What is the name of the object class within your game view that you draw on?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Surface</p>\r\n', '<p>Canvas</p>\r\n', '<p>Table</p>\r\n', '<p>Screen</p>\r\n', '6', 33, 1, '2'),
(885, '<p>What 2 parameters does the method drawRect take?</p>\r\n', '<p>(Rect object, Paint object)</p>\r\n', '<p>(x,y,width,height,color)</p>\r\n', '<p>(Circle object, Paint object)</p>\r\n', '<p>No parameters</p>\r\n', '6', 30, 1, '1'),
(886, '<p>What do we use the surfaceCreated method for?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>To create the surface</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>To manipulate the DOM</p>\r\n', '<p>To start the game thread</p>\r\n', '<p>To change the surface</p>\r\n', '5', 32, 1, '3'),
(887, '<p>What does FCM stand for?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Firebase Cloud Messaging</p>\r\n', '<p>FireBase Cloud Manager</p>\r\n', '<p>FireBase Cloud Mediator</p>\r\n', '<p>None of the above</p>\r\n', '2', 32, 1, '1'),
(888, '<p>What is the predecessor to FCM called?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Android Cloud to Device Messaging (C2DM)</p>\r\n', '<p>Android Cloud Messenger (ADM)</p>\r\n', '<p>Google Cloud Messaging (GCM)</p>\r\n', '<p>Google Cloud Notification System (GCNS)</p>\r\n', '4', 20, 1, '3'),
(889, '<p>Which of the following is not an advantage that FCM has over its predecessors?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>It has built-in analytics.</p>\r\n', '<p>It uses a built-in AES encryption algorithm to encrypt and decrypt messages to and from the FCM servers</p>\r\n', '<p>It handles both registration and retry logic.</p>\r\n', '<p>It allows for server-less solutions</p>\r\n', '4', 20, 1, '2'),
(890, '<p>What best describes a push notification?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>It is an SMS message.</p>\r\n', '<p>Where data is sent to a client by a software application or computing device, without a specific request from the client.</p>\r\n', '<p>Where data is sent to a client by a software application or computing device, after the client has made a request.</p>\r\n', '<p>A form of long-polling.</p>\r\n', '2', 18, 1, '2'),
(891, '<p>What method do we override for the Bluetooth receiver?&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>OnReceive &nbsp;</p>\r\n', '<p>GetReceiver&nbsp;</p>\r\n', '<p>SetReceiver &nbsp;</p>\r\n', '<p>OnBlueToothReceive</p>\r\n', '2', 18, 1, '1'),
(892, '<p>What is used to connect to low energy consumption devices?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>Bluetooth Low Energy</p>\r\n', '<p>Bluetooth Light</p>\r\n', '<p>Greentooth</p>\r\n', '<p>Regular Bluetooth</p>\r\n', '2', 15, 1, '1'),
(893, '<p>Which object stores the Bluetooth object?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>BlueTooth</p>\r\n', '<p>BlueToothReceiver</p>\r\n', '<p>BlueToothAdapter</p>\r\n', '<p>BlueToothObject</p>\r\n', '3', 18, 1, '3'),
(894, '<p>Which Actions are filtered for the receiver??</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ACTION_DISCOVERY_STARTED, ACTION_DISCOVERY_FINISHED, ACTION_FOUND</p>\r\n', '<p>STARTED, FINISHED, FOUND</p>\r\n', '<p>INIT, END, DISCOVER</p>\r\n', '<p>ACTION_DISCOVERY_INIT, ACTION_DISCOVERY_END, ACTION_DISCOVER</p>\r\n', '3', 17, 1, '1'),
(895, '<p>What is the class we used to receive wi-fi scanning result?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>BroadcastReceiver</p>\r\n', '<p>Receiver</p>\r\n', '<p>WiFiScanResult</p>\r\n', '<p>OnReceiver</p>\r\n', '3', 19, 1, '1'),
(896, '<p>What is the method applied to control Wi-Fi in WifiConfiguration class?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>AddNetwork()</p>\r\n', '<p>GetWifiState()</p>\r\n', '<p>UpdateNetwork()</p>\r\n', '<p>All of the above</p>\r\n', '3', 20, 1, '4'),
(897, '<p>What&nbsp;is used to unregisterRecevier()?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>OnPause()</p>\r\n', '<p>OnStop()</p>\r\n', '<p>OnResume()</p>\r\n', '<p>OnUpdate()</p>\r\n', '3', 20, 1, '2'),
(898, '<p>What permission we get to create WI-FI project?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Access Internet</p>\r\n', '<p>ACCESS_WIFI_STATE</p>\r\n', '<p>CHANGE_WIFI_STATE</p>\r\n', '<p>All of the above</p>\r\n', '3', 20, 1, '2'),
(899, '<p>Which library do we import to make application compatible with API 11 and above?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Import android.support.v4.app;</p>\r\n', '<p>Import android.support.v7.app;</p>\r\n', '<p>Import android.support.v4.app.*;</p>\r\n', '<p>Import android.v4.app;</p>\r\n', '3', 48, 1, '3'),
(900, '<p>Which method initiate the fragment?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>OnViewCreate()</p>\r\n', '<p>OnCreateView()</p>\r\n', '<p>OnCreate()</p>\r\n', '<p>OnAttach()</p>\r\n', '3', 42, 1, '2'),
(901, '<p>Why is Fragment Manager used?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>To get activity</p>\r\n', '<p>For transaction between fragments</p>\r\n', '<p>To call fragments</p>\r\n', '<p>To stop activity</p>\r\n', '3', 55, 1, '2'),
(902, '<p>Fragment manager is used for which actions?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Add, remove, delete</p>\r\n', '<p>Add, remove, replace</p>\r\n', '<p>Attach, detach, destroy</p>\r\n', '<p>None of the above</p>\r\n', '3', 46, 1, '1'),
(903, '<p>What are the functionalities in asyncTask in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>OnPreExecute()</p>\r\n', '<p>DoInBackground()</p>\r\n', '<p>OnProgressUpdate()</p>\r\n', '<p>All the above</p>\r\n', '3', 48, 1, '4'),
(904, '<p>Which piece of code used in Android is not open source?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Keypad driver</p>\r\n', '<p>WiFi&nbsp;driver</p>\r\n', '<p>Audio driver</p>\r\n', '<p>Power management</p>\r\n', '3', 35, 1, '2'),
(905, '<p>What is a key difference with the distribution of apps for Android based devices than other mobile device platform applications?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Applications are distributed by Apple App Store only</p>\r\n', '<p>Applications are distributed by multiple vendors with different policies on applications.</p>\r\n', '<p>Applications are distributed by multiple vendors with the exact same policies on applications.</p>\r\n', '<p>Applications are distributed by the Android Market only.</p>\r\n', '3', 40, 1, '2'),
(907, '<p>How to fix crash using log cat in android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Gmail</p>\r\n', '<p>Log cat contains the exception name along with the line number</p>\r\n', '<p>Google search</p>\r\n', '<p>None of the above</p>\r\n', '3', 42, 1, '2'),
(908, '<p>What does the main GamePanel extend?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SurfaceHolder</p>\r\n', '<p>SurfaceView</p>\r\n', '<p>SurfaceTexture</p>\r\n', '<p>Canvas</p>\r\n', '3', 44, 1, '2'),
(909, '<p>In an onTouchEvent, what signifies the user has lifted their finger off the screen?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MotionEvent.ACTION_OFF</p>\r\n', '<p>MotionEvent.ACTION_MOVE</p>\r\n', '<p>Motion.Event.ACTION_DOWN</p>\r\n', '<p>MotionEvent.ACTION_UP</p>\r\n', '3', 50, 1, '4'),
(910, '<p>What two arguments does the MainThread method take?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SurfaceTexture, SurfaceView</p>\r\n', '<p>SurfaceView, SurfaceHolder</p>\r\n', '<p>SurfaceHolder, GamePanel</p>\r\n', '<p>SurfaceView, GamePanel</p>\r\n', '3', 44, 1, '3'),
(911, '<p>When creating a game Obstacles, what arguments does it take?<br />\r\n&nbsp;</p>\r\n', '<p>Height, Colour, Starting X position, Starting Y Position, Player&nbsp;</p>\r\n', '<p>Width, Height, Starting X Position, Starting Y Position, Colour &nbsp;</p>\r\n', '<p>Width, Height, Player Object Size, Colour</p>\r\n', '<p>Player Object Size, Color, Width</p>\r\n', '3', 40, 1, '1'),
(912, '<p>What method is used by the Main Thread to make changes to the Game Panel?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Check()</p>\r\n', '<p>Update()</p>\r\n', '<p>IsChanged()</p>\r\n', '<p>Draw()</p>\r\n', '3', 48, 1, '2'),
(913, '<p>Main Thread uses ________ to lock ?the games framerate to 30 fps:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>System.nanotime()</p>\r\n', '<p>SurfaceView</p>\r\n', '<p>System.Max()</p>\r\n', '<p>Update()</p>\r\n', '4', 60, 1, '1'),
(914, '<p>Which classes implement the GameObject interface?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Rectangle Player</p>\r\n', '<p>Obstacle</p>\r\n', '<p>Both A and B</p>\r\n', '<p>None of the above</p>\r\n', '4', 40, 1, '3'),
(915, '<p>What is the permission for using the camera?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>android.permission.USE_CAMERA</p>\r\n', '<p>android.permission.CAMERA</p>\r\n', '<p>android.permission.hardware.CAMERA</p>\r\n', '<p>none of the above</p>\r\n', '4', 44, 1, '2'),
(916, '<p>What runs in the background and does not have any user interface?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>PendingIntent</p>\r\n', '<p>Service</p>\r\n', '<p>Intent</p>\r\n', '<p>None of the above</p>\r\n', '4', 48, 1, '2'),
(917, '<p>The Log class supports which log types?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error&nbsp;</p>\r\n', '<p>Debug</p>\r\n', '<p>Warning</p>\r\n', '<p>All the above</p>\r\n', '4', 40, 1, '4'),
(918, '<p>For creating Fragments the java class needs to extend which base class?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MainActivity</p>\r\n', '<p>MiniActivity</p>\r\n', '<p>Fragment</p>\r\n', '<p>None of the above</p>\r\n', '2', 48, 1, '3'),
(919, '<p>Which of the following statements is correct?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Permissions are not specified in AndroidManifest.xml.</p>\r\n', '<p>The AndroidManifest.xml is optional.</p>\r\n', '<p>The AndroidManifest.xml must supply a unique Application package name for your App.</p>\r\n', '<p>None of the above</p>\r\n', '4', 40, 1, '3'),
(920, '<p>Which class does SurfaceView implement to listen for changes on the drawable surface?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SurfaceHolder.CallBack()</p>\r\n', '<p>SurfaceHolder.Listener()</p>\r\n', '<p>SurfaceView.CallBack()</p>\r\n', '<p>Surfaceview.Listener()</p>\r\n', '4', 52, 1, '1'),
(921, '<p>&nbsp;What is not an advantage of cloud computing?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Automated back up</p>\r\n', '<p>Required connection</p>\r\n', '<p>Less device storage needed</p>\r\n', '<p>None of the above</p>\r\n', '4', 44, 1, '2'),
(922, '<p>What feature/features makes google drive an ideal choice for small business?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Small user fee</p>\r\n', '<p>Reduced data storage</p>\r\n', '<p>Automated reports on user&rsquo;s data</p>\r\n', '<p>All the above</p>\r\n', '4', 52, 1, '2'),
(923, '<p>It would be a bad idea to store this kind of data on google drive?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Critical app data</p>\r\n', '<p>User login info</p>\r\n', '<p>User payment details</p>\r\n', '<p>All the above</p>\r\n', '1', 44, 1, '4'),
(924, '<p>What is needed to connect to Google API?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Internal storage permissions</p>\r\n', '<p>Key-tool</p>\r\n', '<p>API key</p>\r\n', '<p>All the above</p>\r\n', '4', 40, 1, '3'),
(925, '<p>What permission in the Manifest allows you to enable / disable Wi-Fi?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>ACCESS_WIFI_STATE</p>\r\n', '<p>CHANGE_WIFI_STATE</p>\r\n', '<p>ACCESS_COARSE_LOCATION</p>\r\n', '<p>ACCESS_FINE_LOCATION</p>\r\n', '4', 44, 1, '2'),
(926, '<p>What permission in the manifest allows you to access information about Wi-Fi networks?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ACCESS_WIFI_STATE</p>\r\n', '<p>CHANGE_WIFI_STATE</p>\r\n', '<p>ACCESS_COARSE_LOCATION</p>\r\n', '<p>ACCESS_FINE_LOCATION</p>\r\n', '4', 50, 1, '1'),
(927, '<p>What class is used to perform operations that pertain to network connectivity?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ManageNetwork()</p>\r\n', '<p>NetworkManager()</p>\r\n', '<p>WiFiManager()</p>\r\n', '<p>ManageWifI()</p>\r\n', '4', 48, 1, '3'),
(928, '<p>What method is used to toggle Wi-Fi on/off an android device?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SetWifiEnabled()</p>\r\n', '<p>EnableWifi()</p>\r\n', '<p>ToggleWifi()</p>\r\n', '<p>SetWifiStatus()</p>\r\n', '4', 44, 1, '1'),
(929, '<p>How do we set the wifi password when trying to create a wifi configuration?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Wc.setPassword(Pwd);</p>\r\n', '<p>Wc.setPreSharedKey(Pwd);</p>\r\n', '<p>Wc.preSharedKey = &lsquo;&rdquo;&rsquo; + pwd + &lsquo;&rdquo;&rsquo;;</p>\r\n', '<p>Wc.preSharedKey(&lsquo;&rdquo;&rsquo; + pwd + &lsquo;&rdquo;&rsquo;);</p>\r\n', '4', 50, 1, '3'),
(930, '<p>What method is used to disconnect from the current network?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MyWifiManager.disconnect();</p>\r\n', '<p>MyWifiManager.closeConnection();</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MyWifiManager.close();</p>\r\n', '<p>MyWifiManager.disable();</p>\r\n', '4', 42, 1, '1'),
(931, '<p>What object is returned after scanning for available networks?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>WifiNetwork</p>\r\n', '<p>ScannedNetwork</p>\r\n', '<p>NetworkScan</p>\r\n', '<p>ScanResult</p>\r\n', '4', 50, 1, '4'),
(932, '<p>Which inherited method must be called to Scan for Networks?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ScanResult()</p>\r\n', '<p>OnReceive()</p>\r\n', '<p>OnScanResult()</p>\r\n', '<p>OnReceiveNetwork()</p>\r\n', '5', 45, 1, '2'),
(933, '<p>What services does firebase provide?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hosting websites and web apps</p>\r\n', '<p>Storing large files</p>\r\n', '<p>Test lab</p>\r\n', '<p>All the above</p>\r\n', '5', 44, 1, '4'),
(934, '<p>To write files on the external storage, which permission you will write in AndroidManifest.xml file</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>WRITE_STORAGE</p>\r\n', '<p>WRITE_EXTERNAL_DATA</p>\r\n', '<p>WRITE_EXTERNAL_STORAGE</p>\r\n', '<p>None of the above</p>\r\n', '5', 30, 1, '3'),
(935, '<p>In order to use internal storage to write some data in the file, which method will be used?This method returns FileOutputStream.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>openFileInput()</p>\r\n', '<p>openFileOutput()</p>\r\n', '<p>openForWrite()</p>\r\n', '<p>None of the above</p>\r\n', '5', 40, 1, '2'),
(936, '<p>Which of the following HTTP method is used to delete a record from database?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>PUT</p>\r\n', '<p>DELETE</p>\r\n', '<p>REMOVE</p>\r\n', '<p>PATCH</p>\r\n', '5', 45, 1, '2'),
(937, '<p>Which line in the JSON has an error: {&quot;Id&quot;: &nbsp;0,&quot;Name&quot;: &quot;John Gates&quot;, &quot;Cost&quot;: &quot; $40&quot;,&quot;Address&quot; - &quot;20 Main Street&quot;}</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>4</p>\r\n', '5', 53, 1, '4'),
(938, '<p>What are the functionalities in asyncTask in android??</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>OnPreExecution()</p>\r\n', '<p>DoInBackground()</p>\r\n', '<p>OnProgressUpdate()</p>\r\n', '<p>All the above</p>\r\n', '5', 46, 1, '4'),
(939, '<p>What is the necessary permission for getting the YouTube Android player to work:?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>Android.permission.INTERNET</p>\r\n', '<p>Android.permission.ACCESS_NETWORK_STATE</p>\r\n', '<p>Android.permission.ACCESS_WIFI_STATE</p>\r\n', '<p>Android.permission.READ_CONTACTS</p>\r\n', '5', 52, 1, '1'),
(940, '<p>Restricting an API key for android app requires:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SHA-1 certificate fingerprint</p>\r\n', '<p>MD5 certificate fingerprint</p>\r\n', '<p>Package name &amp; SHA-1 certificate fingerprint</p>\r\n', '<p>Package name &amp; MD5 certificate fingerprint</p>\r\n', '5', 48, 1, '3'),
(941, '<p>What is the name of the task run in Gradle projects that provides you with the certificate fingerprint of your Android app?</p>\r\n', '<p>SourceSets</p>\r\n', '<p>SigningReport</p>\r\n', '<p>AndroidDependencies</p>\r\n', '<p>BuildDependents</p>\r\n', '5', 60, 1, '2'),
(942, '<p>In order to use YouTubePlayerView directly, your activity needs to extend_______.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>YouTubeApiServiceUtil</p>\r\n', '<p>YouTubeIntents</p>\r\n', '<p>YouTubePlayerActivity</p>\r\n', '<p>YouTubeBaseActivity</p>\r\n', '5', 55, 1, '4'),
(943, '<p>What is the necessary permission for getting the YouTube Android player to work:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Android.permission.INTERNET</p>\r\n', '<p>Android.permission.ACCESS_NETWORK_STATE</p>\r\n', '<p>Android.permission.ACCESS_WIFI_STATE</p>\r\n', '<p>Android.permission.READ_CONTACTS</p>\r\n', '5', 60, 1, '1'),
(944, '<p>Firebase is a ______ database?<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;SQL&nbsp;</p>\r\n', '<p>No SQL &nbsp;</p>\r\n', '<p>Oracle</p>\r\n', '<p>None of the above</p>\r\n', '5', 44, 1, '2'),
(945, '<p>What are the steps to connect your app to firebase?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Copy Service json to app folder</p>\r\n', '<p>Add dependencies to gradle file</p>\r\n', '<p>Copy your package name and paste on firebase</p>\r\n', '<p>All the above</p>\r\n', '5', 46, 1, '4'),
(946, '<p>Gradle dependency used for notification in Firebase is?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>Com.google.firebase:firebase-core:9.8.0</p>\r\n', '<p>Com.google.firebase:notification:9.8.0</p>\r\n', '<p>Com.google.firebase:firebase-messaging:9.8.0</p>\r\n', '<p>Com.google.firebase:firebase-pushnotification:9.8.0<br />\r\n&nbsp;</p>\r\n', '5', 50, 1, '3'),
(947, '<p>Which method is used to get root of database?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Root</p>\r\n', '<p>DatabaseRoot</p>\r\n', '<p>DatabaseReference</p>\r\n', '<p>FirebaseRoot</p>\r\n', '5', 42, 1, '3'),
(948, '<p>In which folder is &quot;google-services.json&quot; configuration file is added?<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;Build&nbsp;</p>\r\n', '<p>App</p>\r\n', '<p>Gradle&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '6', 48, 1, '2'),
(949, '<p>Which method is used to add data in list view after clicking button?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>AddValueListener</p>\r\n', '<p>SetOnClickListener</p>\r\n', '<p>AddChildEventListener</p>\r\n', '<p>SetOnItemClickListener</p>\r\n', '6', 50, 1, '1'),
(950, '<p>In Realtime Database, data is stored as _________ and synchronised in real-time to every connected client.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array</p>\r\n', '<p>ArrayList</p>\r\n', '<p>JSON</p>\r\n', '<p>XML</p>\r\n', '6', 52, 1, '3'),
(951, '<p>Firebase is platform open for?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>IOS</p>\r\n', '<p>Android</p>\r\n', '<p>Websites</p>\r\n', '<p>All of these</p>\r\n', '6', 48, 1, '4'),
(952, '<p>Disadvantage of Firebase is?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Complex queries are not possible with firebase</p>\r\n', '<p>Data recovery and migration is impossible</p>\r\n', '<p>All code that would normally runs on server side, will run on client side also</p>\r\n', '<p>All of these</p>\r\n', '6', 42, 1, '4'),
(953, '<p>Google Awareness is _?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>An API used to allow applications to act upon the physical states and changes of the user and the world around them.</p>\r\n', '<p>An artificially intelligent system created by Google to wander the internet observing human behaviour.</p>\r\n', '<p>The theoretical implication that Google is not a company, but in fact technological projection of the collective consciousness and knowledge of the human race.</p>\r\n', '<p>A database containing and storing all Google searches ever made.</p>\r\n', '6', 50, 1, '1'),
(954, '<p>In the Google Awareness API, a Fence is _</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>An API included in Google Awareness used to detect for specific circumstances to be true in order to allow the application to respond to changes in the user&rsquo;s physical world.</p>\r\n', '<p>A white picketed wall surrounding one&rsquo;s front lawn, popular among Colonial era, Caucasian Americans.</p>\r\n', '<p>A sport in which two individual dual with thin flexible swords, known as foils.</p>\r\n', '<p>An individual who knowingly purchases stolen goods, intended for later resale</p>\r\n', '6', 50, 1, '1'),
(955, '<p>Android is licensed under which open source licensing license?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Gnu&#39;s GPL</p>\r\n', '<p>Apache/MIT</p>\r\n', '<p>OSS</p>\r\n', '<p>Sourceforge</p>\r\n', '6', 48, 1, '2'),
(956, '<p>Although most people&#39;s first thought when they think of Android is Google, Android is not actually owned by Google. Who owns the Android platform?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>Oracle Technology</p>\r\n', '<p>Dalvik</p>\r\n', '<p>Open Handset Alliance</p>\r\n', '<p>The above statement is incorrect and Android is owned by Google<br />\r\n&nbsp;</p>\r\n', '6', 60, 1, '3'),
(957, '<p>What was Google&#39;s main business motivation for supporting Android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>To level the playing field for mobile devices</p>\r\n', '<p>To directly compete with the iPhone</p>\r\n', '<p>To corner the mobile device application market for licensing purposes</p>\r\n', '<p>To allow them to advertise more<br />\r\n&nbsp;</p>\r\n', '6', 50, 1, '4'),
(958, '<p>For reading the contacts from the Contacts, Which permission you will set in AndroidManifest.xml file if you are using ContentProvider.</p>\r\n\r\n<p><br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>FIND_CONTACTS</p>\r\n', '<p>GET_CONTACTS</p>\r\n', '<p>READ_CONTACTS</p>\r\n', '<p>None of the above</p>\r\n', '6', 60, 1, '3'),
(959, '<p>SimpleCursorAdapter object maps a cursor to which view, defined in your XML file?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>TextViews</p>\r\n', '<p>ImageViews</p>\r\n', '<p>Both A and B</p>\r\n', '<p>None of the above</p>\r\n', '6', 50, 1, '3'),
(960, '<p>What are the predefined query string constants available in Android?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ContactsContract.Contacts.CONTENT_URI</p>\r\n', '<p>Browser.SEARCHES_URI</p>\r\n', '<p>MediaStore.Images.Media.INTERNAL_CONTENT_URI</p>\r\n', '<p>All the above</p>\r\n', '6', 48, 1, '4'),
(961, '<p>Choose the correct option according to the given option.</p>\r\n\r\n<p><br />\r\nStatement 1: A content provider behaves very much like a database &mdash; you can query it,</p>\r\n\r\n<p>edit its content, as well as add or delete content.</p>\r\n\r\n<p><br />\r\nStatement 2: Content providers let you centralize content in one place and have many</p>\r\n\r\n<p>different applications access it as needed.</p>\r\n\r\n<p><br />\r\nStatement 3: A content provider does not provide the facility to centralize content.</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>Only option 1 is correct.</p>\r\n', '<p>Only option 2&nbsp;is correct.</p>\r\n', '<p>Option 1 and 2 are correct.</p>\r\n', '<p>Option 1 and 3 are correct</p>\r\n', '7', 120, 1, '3'),
(962, '<p>For Creating your own content provider which class you will inherit?</p>\r\n\r\n<p><br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Content</p>\r\n', '<p>ContentProvider</p>\r\n', '<p>Object.</p>\r\n', '<p>None of the above</p>\r\n', '6', 50, 1, '2'),
(963, '<p>&nbsp;From a phone manufacturer&#39;s point of view, what makes Android so great?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Aside from some specific drivers, it provides everything to make a phone work</p>\r\n', '<p>It makes the hardware work better &nbsp;</p>\r\n', '<p>It allows them to compete with Apple&#39;s iPhone&nbsp;</p>\r\n', '<p>It allows users to create apps, generating revenue for the companies &nbsp;<br />\r\n&nbsp;</p>\r\n', '3', 52, 1, '1'),
(964, '<p>Why are the so few users left with versions 1.0 and 1.1?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The first phones were released with version 1.5</p>\r\n', '<p>1.0 and 1.1 had security holes that forced carriers to recall phones using them</p>\r\n', '<p>1.0 and 1.1 are just number designations for the version Apple&#39;s iPhone is running</p>\r\n', '<p>Everyone with 1.0 and 1.1 were upgraded to 1.5 over the air automatically</p>\r\n', '3', 44, 1, '4'),
(965, '<p>Suppose that there are two activities in an application named ActivityOne and ActivityTwo. You want to invoke ActivityTwo from ActivityOne. What code you will write?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Intent intent=new Intent (this, ActivityTwo.class);</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>startActivity(new Intent(this, ActivityTwo.class));</p>\r\n', '<p>Option A and B are correct.</p>\r\n', '<p>&nbsp;None of the above</p>\r\n', '7', 60, 1, '3'),
(966, '<p>If you need to pass data back from an activity, Which method you should use?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>startActivity()</p>\r\n', '<p>startActivityForResult()</p>\r\n', '<p>ActivityForResult()</p>\r\n', '<p>None of the above</p>\r\n', '7', 42, 1, '2'),
(967, '<p>If you want to navigate from one activity to another then android provides you which class?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Object</p>\r\n', '<p>startActivity</p>\r\n', '<p>Intent</p>\r\n', '<p>None of the above.</p>\r\n', '7', 44, 1, '3'),
(968, '<p>The types of intents in android is\\are</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Explicit intents</p>\r\n', '<p>Implicit intents</p>\r\n', '<p>Start intents</p>\r\n', '<p>Option A and B</p>\r\n', '7', 40, 1, '4'),
(969, '<p>In android mini-activities are also known as.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Adapter</p>\r\n', '<p>Activity</p>\r\n', '<p>Fragments</p>\r\n', '<p>None of the above</p>\r\n', '3', 42, 1, '3'),
(970, '<p>What is/are storage option available in android?</p>\r\n\r\n<p><br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>SharedPreferences</p>\r\n', '<p>SQLiteDatabase</p>\r\n', '<p>ContentProvider</p>\r\n', '<p>All the above</p>\r\n', '7', 50, 1, '4'),
(971, '<p>Which objects stores the data only in key-value pair?</p>\r\n\r\n<p><br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>SharedPreferences</p>\r\n', '<p>SQLiteDatabase</p>\r\n', '<p>ContentProvider</p>\r\n', '<p>None of the above</p>\r\n', '7', 44, 1, '1'),
(972, '<p>SharedPreferences stores the data in which format?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>TXT</p>\r\n', '<p>XML</p>\r\n', '<p>DOC</p>\r\n', '<p>None of the above</p>\r\n', '7', 52, 1, '2'),
(973, '<p>Which objects stores only primitive data type?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SharedPreferences</p>\r\n', '<p>SQLiteDatabase</p>\r\n', '<p>ContentProvider</p>\r\n', '<p>None of the above.</p>\r\n', '7', 46, 1, '1'),
(974, '<p>You want to store website name by using SharedPreferences. Choose the correct option for doing this.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SharedPreferences obj=getSharedPreferences(&quot;MySharedFile&quot;, Context.MODE_PRIVATE);</p>\r\n\r\n<p>obj.putString(&ldquo;name&rdquo;, &ldquo;CampusPuppy.com&rdquo;);</p>\r\n\r\n<p>obj.commit();</p>\r\n', '<p>SharedPreferences obj= new SharedPreferences (&quot;MySharedFile&quot;,</p>\r\n\r\n<p>Context.MODE_PRIVATE);</p>\r\n\r\n<p>String n=obj.getString(&quot;name&quot;, null);</p>\r\n', '<p>SharedPreferences obj=getSharedPreferences(&quot;MySharedFile&quot;, Context.MODE_PRIVATE);</p>\r\n\r\n<p>Editor editor=obj.edit();</p>\r\n\r\n<p>editor.putString(&ldquo;name&rdquo;, &ldquo;CampusPuppy.com&rdquo;);</p>\r\n\r\n<p>editor.commit();</p>\r\n', '<p>None of the above.<br />\r\n&nbsp;</p>\r\n', '8', 50, 1, '3'),
(975, '<p>You want to read website name by using SharedPreferences. Choose the correct option for doing this.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SharedPreferences obj=getSharedPreferences(&quot;MySharedFile &quot;, Context.MODE_PRIVATE);</p>\r\n\r\n<p>String n=obj.getString(&quot;name&quot;, null);</p>\r\n', '<p>SharedPreferences obj= new SharedPreferences (&quot;MySharedFile&quot;, Context.MODE_PRIVATE);</p>\r\n\r\n<p>String n=obj.getString(&quot;name&quot;, null);</p>\r\n', '<p>String n=obj.getString(&quot;name&quot;, null);</p>\r\n', '<p>None of the above.</p>\r\n', '8', 60, 1, '1'),
(976, '<p>How will you reference a textbox control in java file, that is available in XML file and the ID is txtName.</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>EditText txtEmpName;</p>\r\n\r\n<p>txtEmpName=findViewById(R.id.txtName);</p>\r\n', '<p>EditText txtEmpName;</p>\r\n\r\n<p>txtEmpName=(EditText)findViewById(R.id.txtName);</p>\r\n', '<p>EditText txtEmpName;</p>\r\n\r\n<p>txtEmpName=(EditText)findViewById(txtName);</p>\r\n', '<p>None of the above.</p>\r\n', '8', 45, 1, '2'),
(977, '<p>Suppose that there are two activities in an application named FirstActivity and SecondActivity. You want to send website name from ActivityOne to ActivityTwo. What code you will write? Suppose that website name is &ldquo;CampusPuppy.com&rdquo;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Intent intent=new Intent (this, SecondActivity.class);</p>\r\n\r\n<p>intent.putExtra(&quot;name&quot;, &ldquo;CampusPuppy.com&rdquo;);</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>Intent intent=new Intent (this, SecondActivity.class);</p>\r\n\r\n<p>intent.putExtra( &ldquo;CampusPuppy.com&rdquo;);</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>&nbsp;Intent intent=new Intent ();</p>\r\n\r\n<p>intent.putExtra(&quot;name&quot;, &ldquo;CampusPuppy.com&rdquo;);</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>None of the above</p>\r\n', '8', 70, 1, '1'),
(978, '<p>How will you get the data in secondActivity?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Intent intent=new Intent;</p>\r\n\r\n<p>String str= intent.getStringExtra(&quot;name&quot;);</p>\r\n\r\n<p>Toast.makeText(this, str , Toast.LENGTH_LONG).show();</p>\r\n', '<p>Intent intent=getIntent();</p>\r\n\r\n<p>String str= intent.getStringExtra(&quot;name&quot;);</p>\r\n\r\n<p>Toast.makeText(this, str , Toast.LENGTH_LONG).show();</p>\r\n', '<p>Intent intent=getIntent();</p>\r\n\r\n<p>String str= intent.getText(&quot;name&quot;);</p>\r\n\r\n<p>Toast.makeText(this, str , Toast.LENGTH_LONG).show();</p>\r\n', '<p>None of the above.</p>\r\n', '8', 44, 1, '2'),
(979, '<p>To check whether the media(external storage) is available, which method of Environment class you will use?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>getExternalStorageState()</p>\r\n', '<p>getExternalStorage()</p>\r\n', '<p>getExternalStateData()</p>\r\n', '<p>None of the above</p>\r\n', '8', 55, 1, '1'),
(980, '<p>&nbsp;If you want to share the data from one application to other applications,&nbsp;which object you will use?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SQLiteDatabases</p>\r\n', '<p>InternalStorage</p>\r\n', '<p>SharedPreferences</p>\r\n', '<p>ContentProvider</p>\r\n', '8', 48, 1, '4'),
(981, '<p>To query a content provider, you specify the query string in the form of a URI. The format of the query URI is as follows:</p>\r\n\r\n<p><br />\r\n:////</p>\r\n\r\n<p><br />\r\nWhat you will write in place of ?</p>\r\n\r\n<p><br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>content</p>\r\n', '<p>object</p>\r\n', '<p>ContentProvider</p>\r\n', '<p>None of the above.</p>\r\n', '8', 55, 1, '1'),
(982, '<p>What is Android Interface Definition Language (AIDL)?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>AIDL does not the Java programming language.</p>\r\n', '<p>It does not define the programming interface.</p>\r\n', '<p>It defines the programming interface that both the client and service agree upon in order to communicate with each other using inter process communication (IPC).</p>\r\n', '<p>None of the above.</p>\r\n', '8', 52, 1, '3'),
(983, '<p>Which permission you need to declare in your AndroidManifest.xml file for sending SMS.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;uses-permission android:name=&quot;android.permission.SEND_SMS&quot;/&gt;</p>\r\n', '<p>&lt;uses-permission android:name=&quot;android.SEND_SMS&quot;/&gt;</p>\r\n', '<p>&lt;uses-permission =&quot;android.permission.SEND_SMS&quot;/&gt;</p>\r\n', '<p>None of the above.</p>\r\n', '8', 10, 1, '1'),
(984, '<p>Which class is used to send SMS programmatically?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SmsSender</p>\r\n', '<p>SmsManager</p>\r\n', '<p>SMS</p>\r\n', '<p>None of the above</p>\r\n', '5', 48, 1, '2'),
(985, '<p>What code you will write to send the SMS to another AVD? Suppose that the AVD no is 5556<br />\r\n&nbsp;</p>\r\n', '<p>SmsManager sms=new SmsManager();</p>\r\n\r\n<p>sms.sendTextMessage(&quot;5556&quot;, null, &quot;Hello Android&quot;, null, null);</p>\r\n', '<p>SmsManager sms=new SmsManager();</p>\r\n\r\n<p>sendSMS(&quot;5556&quot;, null, &quot;Hello Android&quot;, null, null);</p>\r\n', '<p>SmsManager sms=SmsManager.getDefault();</p>\r\n\r\n<p>sms.sendTextMessage(&quot;5556&quot;, null, &quot;Hello Android&quot;, null, null);</p>\r\n', '<p>None of the above</p>\r\n', '8', 52, 1, '3'),
(986, '<p>How to get feedback on message sent?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Use two Intent objects in the sendTextMessage() method.</p>\r\n', '<p>Use two PendingIntent objects in the sendTextMessage() method.<br />\r\n&nbsp;</p>\r\n', '<p>Use two PendingIntent objects in the startActivity() method.</p>\r\n', '<p>None of the above.</p>\r\n', '8', 58, 1, '2'),
(987, '<p>What is the purpose of the ImageSwitcher?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The ImageSwitcher enables images to be displayed with animation.</p>\r\n', '<p>The ImageSwitcher displayed images without animation.</p>\r\n', '<p>An image switcher allows you to add some transitions on the images.</p>\r\n', '<p>Option A and C are correct.</p>\r\n', '8', 60, 1, '4'),
(988, '<p>What types of menus is/are supported by Android?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>Option menu and Context menu</p>\r\n', '<p>Only Option menu</p>\r\n', '<p>Only Context menu</p>\r\n', '<p>None of the above</p>\r\n', '8', 52, 1, '1'),
(989, '<p>Which is Parent class of Activity?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ActivityGroup</p>\r\n', '<p>Context</p>\r\n', '<p>BaseActivity</p>\r\n', '<p>ContextThemeWrapper<br />\r\n&nbsp;</p>\r\n', '8', 48, 1, '4'),
(990, '<p>Which is/are related to fragment class?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>dialogFragment</p>\r\n', '<p>listFragment</p>\r\n', '<p>preferenceFragment</p>\r\n', '<p>All of the above.</p>\r\n', '8', 52, 1, '4'),
(991, '<p>Which permission you need to declare in your AndroidManifest.xml file for initiating a call using the system in-call Activity?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>CALL_NUMBER uses-permission</p>\r\n', '<p>DIAL_PHONE uses-permission</p>\r\n', '<p>CALL_PHONE uses-permission</p>\r\n', '<p>None of the above</p>\r\n', '8', 60, 1, '3'),
(992, '<p>To initate a call using the Intent which code you will write?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Intent intent = new Intent (Intent.ACTION_CALL)&rdquo;);</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>Intent intent = new Intent (Intent.ACTION_CALL, Uri.parse(&ldquo;tel:9923----&rdquo;));</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>Intent intent = new Intent (Uri.parse(&ldquo;tel:9923----&rdquo;));</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>All the above</p>\r\n', '8', 52, 1, '2'),
(993, '<p>For accessing the subscriber identity module (SIM) detail which class you will use?</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>SimManager</p>\r\n', '<p>TelephonyManager</p>\r\n', '<p>MobileManager</p>\r\n', '<p>All the above</p>\r\n', '8', 60, 1, '2'),
(994, '<p>For sending sms through Intent which code is correct?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Intent intent = new Intent();</p>\r\n\r\n<p>intent.putExtra(&quot;sms_body&quot;, &quot;Welcome at CareerRide.com&quot;);</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>Intent intent = new Intent();</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.parse(&quot;sms:9923-----&quot;));</p>\r\n\r\n<p>intent.putExtra(&quot;sms_body&quot;, &quot;Welcome at CareerRide.com&quot;);</p>\r\n\r\n<p>startActivity(intent);</p>\r\n', '<p>None of the above.</p>\r\n', '8', 30, 1, '3'),
(995, '<p>Which classes allow primitive types to be accessed as objects?&nbsp;</p>\r\n', '<p>Storage</p>\r\n', '<p>Virtual</p>\r\n', '<p>Friend</p>\r\n', '<p>Wrapper</p>\r\n', '2', 30, 6, '4'),
(996, '<p>Which one of the following is not a fundamental data type in C++&nbsp;</p>\r\n', '<p>float</p>\r\n', '<p>int</p>\r\n', '<p>string</p>\r\n', '<p>wchar_t</p>\r\n', '1', 25, 6, '1'),
(997, '<p>To output the value of multidimensional array, Console.WriteLines(___)&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>myArray[1][3];</p>\r\n', '<p>myArray[1.3];</p>\r\n', '<p>myArray{1}{3};&nbsp;</p>\r\n', '<p>myArray(1),(3);</p>\r\n', '3', 18, 5, '1'),
(998, '<p>The code public class B : A { }&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Defines a class that inherits all the methods of A&nbsp;</p>\r\n', '<p>Defines a class that inherits the public and protected methods of A only</p>\r\n', '<p>Errors&nbsp;</p>\r\n', '<p>Both&nbsp;a and b</p>\r\n', '3', 19, 5, '2'),
(999, '<p>Correct statement about constructor overloading in C# is?<br />\r\n&nbsp;</p>\r\n', '<p>Overloaded constructors have the same name as the class</p>\r\n', '<p>Overloaded constructors cannot use optional arguments</p>\r\n', '<p>Overloaded constructors can have different type of number of arguments as well as differ in number of arguments</p>\r\n', '<p>All of the above</p>\r\n', '3', 17, 5, '3'),
(1000, '<p>Assuming that public class B : A { public B(int i) :base(i) { } } compiles and runs correctly, what can we conclude about the constructors in the class A?&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>One constructor takes an argument of type i&nbsp;</p>\r\n', '<p>There is only a default constructor&nbsp;</p>\r\n', '<p>One constructor takes an arguments of the type int</p>\r\n', '<p>Both&nbsp;a and b</p>\r\n', '3', 23, 5, '3'),
(1001, '<p>Given class sample is inherited by class sample 1. Which are the correct statements about construction of object of class sample?<br />\r\n&nbsp;</p>\r\n', '<p>While creating the object firstly the constructor of class sample will be called followed by constructor of class sample 1</p>\r\n', '<p>The constructor of only sample class will be called</p>\r\n', '<p>While creating the object firstly constructor of class sample 1 will be called followed by constructor of class sample</p>\r\n', '<p>The order of calling constructors depend on whether constructors in class sample and sample 1 are private or public</p>\r\n', '3', 20, 5, '3'),
(1002, '<p>&nbsp;A method_____an exception when that method detects that a problem has occured.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Trys&nbsp;</p>\r\n', '<p>Catches&nbsp;</p>\r\n', '<p>Throws</p>\r\n', '<p>Both&nbsp; a and b</p>\r\n', '3', 15, 5, '3'),
(1003, '<p>Exception objects are derived from the class.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Try&nbsp;</p>\r\n', '<p>Catch&nbsp;</p>\r\n', '<p>Exception</p>\r\n', '<p>Event&nbsp;</p>\r\n', '3', 15, 5, '3'),
(1004, '<p>An abstract class&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>may contain instance variables&nbsp;</p>\r\n', '<p>may contain constructors&nbsp;</p>\r\n', '<p>may extend another class&nbsp;</p>\r\n', '<p>all of the above&nbsp;</p>\r\n', '3', 14, 5, '4'),
(1005, '<p>In C# variables are categorized into ..........</p>\r\n\r\n<p>i) Value types &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ii) Reference types &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;iii) initial types &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iv) pointer types</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;i, ii and iii only</p>\r\n', '<p>ii, iii and iv only</p>\r\n', '<p>i, ii and iv only</p>\r\n', '<p>All i, ii, iii and iv</p>\r\n', '3', 17, 5, '3'),
(1006, '<p>Value type variables can be assigned a value directly which are derived from the class&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>System.value</p>\r\n', '<p>System.ValueType</p>\r\n', '<p>General.ValueType</p>\r\n', '<p>Variable.ValueType</p>\r\n', '3', 16, 5, '2'),
(1007, '<p>The various data types used in C# are&nbsp;</p>\r\n\r\n<p>i) Integral Type &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ii) Floating point types</p>\r\n\r\n<p>iii) Boolean types &nbsp; &nbsp; &nbsp; iv) Nullable types</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i, ii and iii only</p>\r\n', '<p>ii, iii and iv only</p>\r\n', '<p>i, iii and iv only</p>\r\n', '<p>All i, ii, iii and iv</p>\r\n', '3', 15, 5, '4'),
(1008, '<p>The built-in operators that are provided by C# programming language are...</p>\r\n\r\n<p>i) Arithmetic operators &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ii) Logical operators</p>\r\n\r\n<p>iii) Bitwise operators &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iv) Assignment operators</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>i, ii and iii only</p>\r\n', '<p>ii, iii and iv only</p>\r\n', '<p>i, iii and iv only</p>\r\n', '<p>All i, ii, iii and iv</p>\r\n', '3', 17, 5, '4'),
(1009, '<p>Select the type argument of open constructed type?<br />\r\n&nbsp;</p>\r\n', '<p>Gen</p>\r\n', '<p>Gen&lt;&gt;</p>\r\n', '<p>Gen()</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 17, 5, '2'),
(1010, '<p>A____block enclose the code that could throw an exception.&nbsp;<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Try</p>\r\n', '<p>Catch</p>\r\n', '<p>Exception</p>\r\n', '<p>Both&nbsp;a and b</p>\r\n', '3', 15, 5, '1'),
(1011, '<p>Which among the following is NOT an exception?<br />\r\n&nbsp;</p>\r\n', '<p>Stack Overflow</p>\r\n', '<p>Arithmetic Overflow or underflow</p>\r\n', '<p>Incorrect Arithmetic Expression</p>\r\n', '<p>All of the above mentioned</p>\r\n', '3', 15, 5, '3'),
(1012, '<p>Which among the following is NOT considered as .NET Exception class?<br />\r\n&nbsp;</p>\r\n', '<p>Exception</p>\r\n', '<p>StackUnderflow Exception</p>\r\n', '<p>Divide By zero Exception</p>\r\n', '<p>None of the above</p>\r\n', '3', 17, 5, '2'),
(1013, '<p>State True or False for the difference between classes and structures.</p>\r\n\r\n<p>i) Structures do not support inheritance</p>\r\n\r\n<p>ii) Structure can have default constructor</p>\r\n\r\n<p>iii) Classes are reference types and structures are value types.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i- True, ii- False, iii-True</p>\r\n', '<p>i- False, ii- True, iii-True</p>\r\n', '<p>i-True, ii-True, iii-False</p>\r\n', '<p>i- False, ii- False, iii-True</p>\r\n', '3', 20, 5, '1'),
(1014, '<p>The various techniques provided by C# to implement static polymorphism is/are</p>\r\n\r\n<p>i) Function overloading</p>\r\n\r\n<p>ii) Static overloading</p>\r\n\r\n<p>iii) Operator overloading&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i and ii only</p>\r\n', '<p>i and iii only</p>\r\n', '<p>&nbsp;ii and iii only</p>\r\n', '<p>All i, ii, iii</p>\r\n', '3', 16, 5, '2'),
(1015, '<p>Operator overloading is creating functions with special names, the keyword ........................ operator followed by the symbol for the operator being defined.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Overload</p>\r\n', '<p>Update</p>\r\n', '<p>Operator</p>\r\n', '<p>Implement</p>\r\n', '3', 18, 5, '3'),
(1016, '<p>Match the following operators in C# with their description for the operator overload property.</p>\r\n\r\n<p>i) +, -, !, ~, ++, -- &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;a) cannot be overloaded&nbsp;</p>\r\n\r\n<p>ii) ==, !=, &lt;, &gt;, &lt;=, &gt;= &nbsp; &nbsp;b) cannot be overloaded directly</p>\r\n\r\n<p>iii) &amp;&amp;, || &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c) take one operand and can be overloaded</p>\r\n\r\n<p>iv) =, ., ? :, -&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;d) can be overload&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-d, ii-c, iii-a, iv-b</p>\r\n', '<p>i-b, ii-c, iii-a, iv-d</p>\r\n', '<p>i-c, ii-d, iii-b, iv-a</p>\r\n', '<p>i-a, ii-c, iii-d, iv-b</p>\r\n', '4', 18, 5, '3'),
(1017, '<p>Which among the following is the ordered collection class?<br />\r\n&nbsp;</p>\r\n', '<p>BitArray</p>\r\n', '<p>Queue</p>\r\n', '<p>HashTable</p>\r\n', '<p>None of the above</p>\r\n', '3', 17, 5, '2'),
(1018, '<p>Which among the following is not an interface declared in System.Collection namespace?<br />\r\n&nbsp;</p>\r\n', '<div style="page-break-after: always"><span style="display:none">&nbsp;</span></div>\r\n\r\n<p>IDictionaryComparer</p>\r\n', '<p>IEnumerable</p>\r\n', '<p>IEnumerator</p>\r\n', '<p>Icomparer</p>\r\n', '4', 20, 5, '1'),
(1019, '<p>Which of the following is the object oriented way to handle run time errors?<br />\r\n&nbsp;</p>\r\n', '<p>Error codes</p>\r\n', '<p>HERRESULT</p>\r\n', '<p>OnError</p>\r\n', '<p>Exceptions</p>\r\n', '4', 18, 5, '4'),
(1020, '<p>A Thread is:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>an object that allows computer multitasking</p>\r\n', '<p>an object that wraps itself with other threads&nbsp;</p>\r\n', '<p>a deprecated object that is no longer used</p>\r\n', '<p>all the above</p>\r\n', '4', 17, 5, '1'),
(1021, '<p>Synchronization is:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>the delaying of a thread until there is sufficient memory and work to keep it up&nbsp;</p>\r\n', '<p>making every thread start and end at the same time&nbsp;</p>\r\n', '<p>have each thread start at the same time but not necessarily finish together&nbsp;</p>\r\n', '<p>wait until the required resources, that are used by other threads become available</p>\r\n', '4', 15, 5, '4'),
(1022, '<p>The operator symbols can be used for the conditional directives in C# is/are.</p>\r\n\r\n<p>i) = = (equality) &nbsp; &nbsp; &nbsp; &nbsp; ii) ! = (inequality) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;iii) &amp;&amp; (and)</p>\r\n\r\n<p>iv) || (or) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v) &gt;= (grater than or equal to)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i, ii &nbsp;iii and iv only</p>\r\n', '<p>i, iii and iv only</p>\r\n', '<p>i, ii, iii and v only</p>\r\n', '<p>All i, ii, iii, iv and v&nbsp;</p>\r\n', '4', 18, 5, '1'),
(1023, '<p>Conditional directives are beginning with a ...................... directive and must be terminated with ....................... directive and must be terminated with .............. directive.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>#if, #endif&nbsp;</p>\r\n', '<p>#start, #end</p>\r\n', '<p>#elif, #endelif&nbsp;</p>\r\n', '<p>Both A and B</p>\r\n', '4', 20, 5, '1'),
(1024, '<p>The keywords provided by C# for exception handling are.</p>\r\n\r\n<p>i) try &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ii) catch &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iii) finally &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iv) tryif &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v) throw</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i, ii and iii and iv only</p>\r\n', '<p>ii, iii and iv and v only</p>\r\n', '<p>i, ii and iii and v only<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 15, 5, '3'),
(1025, '<p>The ................... block is used to execute a given set of statement, whether the exception is thrown or not.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>try</p>\r\n', '<p>tryif</p>\r\n', '<p>finally</p>\r\n', '<p>throw</p>\r\n', '4', 15, 5, '3'),
(1026, '<p>Match the different Bitwise operators supported by C# with their descriptions.</p>\r\n\r\n<p>i) &amp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a) Binary Left Shift Operator</p>\r\n\r\n<p>ii) ^ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; b) Binary Right Shift Operator</p>\r\n\r\n<p>iii) &lt;&lt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c) Binary XOR operator</p>\r\n\r\n<p>iv) &gt;&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; d) Binary AND operator</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-d, ii-c, iii-a, iv-b</p>\r\n', '<p>i-b, ii-c, iii-a, iv-d</p>\r\n', '<p>i-c, ii-a, iii-b, iv-d</p>\r\n', '<p>i-a, ii-c, iii-d, iv-b</p>\r\n', '4', 19, 5, '1'),
(1027, '<p>What will be the value of the following expression if x=10?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>25</p>\r\n', '<p>-5</p>\r\n', '<p>10</p>\r\n', '<p>15</p>\r\n', '4', 15, 5, '1'),
(1028, '<p>While passing parameter to a method ................ copies the actual value of an argument into the formal parameter of the function.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Output Parameter</p>\r\n', '<p>Value Parameter</p>\r\n', '<p>Reference Parameter</p>\r\n', '<p>Initial Parameter</p>\r\n', '4', 16, 5, '2'),
(1029, '<p>In C# methods can be defined by using which of the following syntex?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(parameter list) { Method body }</p>\r\n', '<p>(parameter list) { Method body }</p>\r\n', '<p>(parameter list) { Method body }</p>\r\n', '<p>None of the above</p>\r\n', '4', 15, 5, '1'),
(1030, '<p>Which of the following are the methods to assign values to an array?</p>\r\n\r\n<p>i) double [ ] score = {234.0, 214.5, 572.0};</p>\r\n\r\n<p>ii) int [ ] marks = new int [3] {33, 45, 67};</p>\r\n\r\n<p>iii) int [ ] marks = new int [ ] {33, 45, 67};</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i and ii only</p>\r\n', '<p>ii and iii only</p>\r\n', '<p>i and iii only</p>\r\n', '<p>All i, ii, iii</p>\r\n', '4', 20, 5, '4'),
(1031, '<p>State whether the following statements are True or False.</p>\r\n\r\n<p>i) Unlike classes, structures cannot inherit other structures or classes.</p>\r\n\r\n<p>ii) A structure can implement one or more interfaces.</p>\r\n\r\n<p>iii) Structure members can be specified as abstract, virtual or protected.</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>i- True, ii- False, iii-True</p>\r\n', '<p>i- False, ii- True, iii-True</p>\r\n', '<p>i-True, ii-True, iii-False</p>\r\n', '<p>i- False, ii- False, iii-True</p>\r\n', '4', 18, 5, '3'),
(1032, '<p>To apply an attribute to an Assembly, the correct way of implementation is?<br />\r\n&nbsp;</p>\r\n', '<p>[AssemblyInfo: AssemblyDescription (&ldquo;Csharp&rdquo;)]&nbsp;</p>\r\n', '<p>[assembly: AssemblyDescription(&ldquo;Csharp&rdquo;)]&nbsp;</p>\r\n', '<p>[AssemblyDescription(&ldquo;Csharp&rdquo;)]&nbsp;</p>\r\n', '<p>(Assembly:AssemblyDescription(&ldquo;Csharp&rdquo;)]<br />\r\n&nbsp;</p>\r\n', '4', 20, 5, '2'),
(1033, '<p>In C# Thread.Sleep(time) measures time in:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>seconds</p>\r\n', '<p>milliseconds</p>\r\n', '<p>nanoseconds&nbsp;</p>\r\n', '<p>all of the above<br />\r\n&nbsp;</p>\r\n', '4', 15, 5, '2'),
(1034, '<p>Which statement is correct about following c#.NET code ?<br />\r\nint[] a= {11, 3, 5, 9, 6};<br />\r\n&nbsp;</p>\r\n', '<p>&#39;a&rsquo; is a reference to the array created on stack</p>\r\n', '<p>&rsquo;a&rsquo; is a reference to an object created on stack</p>\r\n', '<p>&rsquo;a&rsquo; is a reference to an object of a class that compiler drives from &lsquo;System.Array&rsquo;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 15, 5, '3');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(1035, '<p>Which of the following modifiers is used when an abstract method is redefined by a derived class?<br />\r\n&nbsp;</p>\r\n', '<p>Overloads</p>\r\n', '<p>Override</p>\r\n', '<p>Base</p>\r\n', '<p>Virtual</p>\r\n', '4', 18, 5, '2'),
(1036, '<p>When a thread returns from a WaitSleepJoin or Suspended state it returns to the:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Unstarted state&nbsp;</p>\r\n', '<p>Stopped state&nbsp;</p>\r\n', '<p>Started state (now considering a part of the running state)</p>\r\n', '<p>Resume state</p>\r\n', '5', 18, 5, '3'),
(1037, '<p>&nbsp;What does the given code snippet specify?</p>\r\n\r\n<p>public Thread(ThreadStart start)<br />\r\n&nbsp;</p>\r\n', '<p>Defines a thread</p>\r\n', '<p>Declaration of a thread constructor</p>\r\n', '<p>Only a</p>\r\n', '<p>Only a &amp; b</p>\r\n', '5', 15, 5, '4'),
(1038, '<p>The ThreadPriority enumeration does not contain:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Lowest&nbsp;</p>\r\n', '<p>Highest&nbsp;</p>\r\n', '<p>BelowNormal&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 17, 5, '4'),
(1039, '<p>Choose the correct statements about part of given code defined above?</p>\r\n\r\n<p>&nbsp;public System.Collections.IEnumerator GetEnumerator()<br />\r\n&nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp;foreach (char ch in chrs)<br />\r\n&nbsp; &nbsp; &nbsp;yield return ch;<br />\r\n&nbsp;}<br />\r\n&nbsp;</p>\r\n', '<p>Definition of iterator for MyClass</p>\r\n', '<p>Implements the GetEnumerator() method defined by IEnumerable</p>\r\n', '<p>The yield return statement returns the next object in the collection, which in this case is the next character in chrs</p>\r\n', '<p>All a,b,c</p>\r\n', '5', 33, 5, '4'),
(1040, '<p>The way of returning a thread from s suspended state is:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Pulse&nbsp;</p>\r\n', '<p>PulseAll&nbsp;</p>\r\n', '<p>Interrupt&nbsp;</p>\r\n', '<p>Resume</p>\r\n', '5', 15, 5, '4'),
(1041, '<p>In order to lock/unlock an object use the.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Lock and Unlock methods&nbsp;</p>\r\n', '<p>Enter and Exit methods</p>\r\n', '<p>Close and Open methods&nbsp;</p>\r\n', '<p>Close and Allow methods</p>\r\n', '5', 15, 5, '2'),
(1042, '<p>Class String and the Char structure found in the:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>System.Strings namespace&nbsp;</p>\r\n', '<p>System.Text namespace&nbsp;</p>\r\n', '<p>System.Chars namespace&nbsp;</p>\r\n', '<p>System namespace&nbsp;</p>\r\n', '5', 14, 5, '4'),
(1043, '<p>What is the String in C# meant for?<br />\r\n&nbsp;</p>\r\n', '<p>Variable</p>\r\n', '<p>Character Array</p>\r\n', '<p>Object</p>\r\n', '<p>Class</p>\r\n', '5', 10, 5, '3'),
(1044, '<p>What does the term &lsquo;immutable&rsquo; means in term of string objects?<br />\r\n&nbsp;</p>\r\n', '<p>We can modify characters included in the string</p>\r\n', '<p>We cannot modify characters contained in the string</p>\r\n', '<p>We cannot perform various operation of comparison,inserting,appending etc</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 13, 5, '2'),
(1045, '<p>To create a string literal exclude escape sequence, use:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>!string&nbsp;</p>\r\n', '<p>@string</p>\r\n', '<p>#string&nbsp;</p>\r\n', '<p>$string</p>\r\n', '5', 14, 5, '2'),
(1046, '<p>String indexers treat strings as:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>binary code&nbsp;</p>\r\n', '<p>1 to string Length&nbsp;</p>\r\n', '<p>arrays of characters</p>\r\n', '<p>a character</p>\r\n', '5', 13, 5, '3'),
(1047, '<p>If an IndexofAny method is passed an array of characters it:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>finds the first occurrence of each letter in the string</p>\r\n', '<p>searches for the first occurrence of any of the characters in the string</p>\r\n', '<p>will search for the first occurrence of the sequence of characters&nbsp;</p>\r\n', '<p>generates an error<br />\r\n&nbsp;</p>\r\n', '5', 13, 5, '2'),
(1048, '<p>Concatenating with strings are done with:&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>reserved words&nbsp;</p>\r\n', '<p>method calls</p>\r\n', '<p>operator overloading&nbsp;</p>\r\n', '<p>operator overloading and method calls</p>\r\n', '5', 14, 5, '4'),
(1049, '<p>Choose &ldquo;.NET class&rdquo; name from which datatype &ldquo;UInt&rdquo; is derived ?<br />\r\n&nbsp;</p>\r\n', '<p>System.Int16</p>\r\n', '<p>System.UInt32</p>\r\n', '<p>System.UInt64</p>\r\n', '<p>System.UInt16</p>\r\n', '5', 15, 5, '2'),
(1050, '<p>What will be the output for the given set of code?</p>\r\n\r\n<p>&nbsp;static void Main(string[] args)<br />\r\n&nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp;String a = &quot;Ilove&quot;;<br />\r\n&nbsp; &nbsp; &nbsp;String b = &quot;CSHARP&quot;;<br />\r\n&nbsp; &nbsp; &nbsp;b = string.Concat(a, &#39; &nbsp;&#39;, b);<br />\r\n&nbsp; &nbsp; &nbsp;Console.WriteLine(b);<br />\r\n&nbsp; &nbsp; &nbsp;Console.ReadLine();<br />\r\n&nbsp;}<br />\r\n&nbsp;</p>\r\n', '<p>IloveCSHARP</p>\r\n', '<p>I loveCSHARP</p>\r\n', '<p>Ilove</p>\r\n', '<p>Ilove CSHARP</p>\r\n', '5', 45, 5, '4'),
(1051, '<p>Which among the following is the correct form of applying an attribute?<br />\r\n&nbsp;</p>\r\n', '<p>class sample<br />\r\n{</p>\r\n\r\n<p>}</p>\r\n', '<p>(Serializable())class sample<br />\r\n{</p>\r\n\r\n<p>}</p>\r\n', '<p>[Serializable()] class sample<br />\r\n{</p>\r\n\r\n<p>}</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 15, 5, '3'),
(1052, '<p>In the given constructor declaration for character based file operation what does &lsquo;path&rsquo; and &lsquo;bool specifies?<br />\r\nStreamWriter(string path, bool append)<br />\r\n&nbsp;</p>\r\n', '<p>the name of the file to open</p>\r\n', '<p>specifies the full path of file</p>\r\n', '<p>if append is true, the file is appended to the end of the existing file</p>\r\n', '<p>All the above</p>\r\n', '6', 24, 5, '4'),
(1053, '<p>What is the need for &lsquo;Conversion of data type&rsquo; in C#?<br />\r\n&nbsp;</p>\r\n', '<p>To store a value of one data type into a variable of another data type</p>\r\n', '<p>To get desired data</p>\r\n', '<p>To prevent situations of run time error during change or conversion of data type</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 23, 5, '3'),
(1054, '<p>Types of &lsquo;Data Conversion&rsquo; in C#?<br />\r\n&nbsp;</p>\r\n', '<p>Implicit Conversion</p>\r\n', '<p>Explicit Conversion</p>\r\n', '<p>Implicit Conversion and Explicit Conversion</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 13, 5, '2'),
(1055, '<p>&rsquo;Implicit Conversion&rsquo; follows the order of conversion as per compatibility of datatype as :<br />\r\n&nbsp;</p>\r\n', '<p>float &gt; char &gt; int</p>\r\n', '<p>char &gt; int &gt; float</p>\r\n', '<p>int &gt; char &gt; float</p>\r\n', '<p>float &gt; int &gt; char</p>\r\n', '6', 17, 5, '2'),
(1056, '<p>Choose the correct statements about write-only properties in C#.NET?<br />\r\n&nbsp;</p>\r\n', '<p>Properties which can only be set</p>\r\n', '<p>Properties once set and hence values cannot be read back in nature<br />\r\n&nbsp;</p>\r\n', '<p>Useful for usage in classes which store sensitive information like password of a user</p>\r\n', '<p>None of the above mentioned</p>\r\n', '6', 15, 5, '4'),
(1057, '<p>In which of the following should the methods of a class differ if they are to be treated as overloaded methods?<br />\r\n1. Type of arguments<br />\r\n2. Return type of methods<br />\r\n3. Number of arguments<br />\r\n4. Names of methods<br />\r\n5. Order of arguments<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>2, 4</p>\r\n', '<p>&nbsp;3, 5</p>\r\n', '<p>&nbsp;1, 3, 5</p>\r\n', '<p>&nbsp;3, 4, 5</p>\r\n', '6', 20, 5, '3'),
(1058, '<p>What would be the output of given code snippet?</p>\r\n\r\n<p>&nbsp;static void Main(string[] args)<br />\r\n&nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp;String a =&quot;i love iostream&quot;;<br />\r\n&nbsp; &nbsp; &nbsp;Console.WriteLine(a.IndexOf(&#39;i&#39;) + &quot; &quot; + a.IndexOf(&#39;e&#39;) + &quot; &quot; + a.LastIndexOf(&#39;i&#39;) + &quot; &quot; + a.LastIndexOf(&#39;e&#39;));<br />\r\n&nbsp; &nbsp; &nbsp;Console.ReadLine();<br />\r\n&nbsp;}<br />\r\n&nbsp;</p>\r\n', '<p>0 6 7 8</p>\r\n', '<p>0 5 7 9</p>\r\n', '<p>5 9 0 7</p>\r\n', '<p>0 5 7 12</p>\r\n', '6', 50, 5, '4'),
(1059, '<p>Match the following preprocessor directives in C# with their description?</p>\r\n\r\n<p>i) #elif &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;a) specifies the end of conditional directive</p>\r\n\r\n<p>ii) #endif &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; b) allows to undefine a symbol.</p>\r\n\r\n<p>iii) #undef &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;c) allows creating compound conditional directive</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-b, ii-c, iii-a&nbsp;</p>\r\n', '<p>i-b, ii-c, iii-a&nbsp;</p>\r\n', '<p>i-c, ii-a, iii-b&nbsp;</p>\r\n', '<p>i-a, ii-c, iii-b&nbsp;</p>\r\n', '6', 20, 5, '3'),
(1060, '<p>What is Recursion in CSharp defined as?<br />\r\n&nbsp;</p>\r\n', '<p>Recursion is another form of class</p>\r\n', '<p>Recursion is another process of defining a method that calls other methods repeatedly</p>\r\n', '<p>Recursion is a process of defining a method that calls itself repeatedly</p>\r\n', '<p>Recursion is a process of defining a method that calls other methods which in turn calls this method</p>\r\n', '6', 14, 5, '3'),
(1061, '<p>For the code set given below,which of the following statements are perfectly valid?</p>\r\n\r\n<p>public class MyContainer where T: class, IComparable<br />\r\n{<br />\r\n&nbsp; /* insert code here */<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Class MyConatiner requires that its type argument must implement Icomparable interface</p>\r\n', '<p>There are multiple constraints on type argument to MyConatiner class</p>\r\n', '<p>Compiler will report an error</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 20, 5, '2'),
(1062, '<p>While working with MS-DOS, which command is used to switch to the monochrome display from color display?<br />\r\n&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>MODE BLACK</p>\r\n', '<p>MODE B/W</p>\r\n', '<p>MODE MONO&nbsp;&nbsp; &nbsp;</p>\r\n', '<p>MODE CMODE</p>\r\n', '6', 21, 5, '3'),
(1063, '<p>Block or buffer caches are used<br />\r\n&nbsp; &nbsp;&nbsp;</p>\r\n', '<p>to improve disk performance</p>\r\n', '<p>to handle interrupts&nbsp;&nbsp; &nbsp;</p>\r\n', '<p>to increase the capacity of main memory</p>\r\n', '<p>to speed up main memory read operation</p>\r\n', '6', 20, 5, '1'),
(1064, '<p>What does the following code depicts?<br />\r\n1. System.Nullable count;<br />\r\n2. bool? done;<br />\r\n&nbsp;</p>\r\n', '<p>code 1 declares the objects of nullable of type Nullable defined in the System namespace</p>\r\n', '<p>code 2 declares a nullable type in much shorter and in more commonly used way using &lsquo;?&rsquo;</p>\r\n', '<p>Both a &amp; b</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 19, 5, '3'),
(1065, '<p>Which of the following is a correct statement about the C#.NET code given below?</p>\r\n\r\n<p>struct book<br />\r\n{<br />\r\n&nbsp; &nbsp; private String name;<br />\r\n&nbsp; &nbsp; private int pages;<br />\r\n&nbsp; &nbsp; private Single price;<br />\r\n}<br />\r\nbook b = new book();<br />\r\n&nbsp;</p>\r\n', '<p>New structure can be inherited from struct book</p>\r\n', '<p>When the program terminates, variable b will get garbage collected</p>\r\n', '<p>The structure variable &lsquo;b&rsquo; will be created on the stack</p>\r\n', '<p>When the program terminates, variable b will get garbage collected</p>\r\n', '6', 60, 5, '3'),
(1066, '<p>Choose the correct output for the C#.NET code given below?</p>\r\n\r\n<p>enum days:int<br />\r\n{<br />\r\n&nbsp; &nbsp; sunday = -3,<br />\r\n&nbsp; &nbsp; monday,<br />\r\n&nbsp; &nbsp; tuesday<br />\r\n}<br />\r\nConsole.WriteLine((int)days.sunday);<br />\r\nConsole.WriteLine((int)days.monday);<br />\r\nConsole.WriteLine((int)days.tuesday);<br />\r\n&nbsp;</p>\r\n', '<p>-3 0 1</p>\r\n', '<p>0 1 2</p>\r\n', '<p>-3 -2 -1</p>\r\n', '<p>sunday monday tuesday</p>\r\n', '7', 63, 5, '3'),
(1067, '<p>Which method is called when a thread is blocked from running temporarily?<br />\r\n&nbsp;</p>\r\n', '<p>Pulse()</p>\r\n', '<p>PulseAll()</p>\r\n', '<p>Wait()</p>\r\n', '<p>Both b &amp; c</p>\r\n', '7', 18, 5, '3'),
(1068, '<p>What kind of exception is being thrown if Wait(),Pulse() or PulseAll() iscalled from code that is not within synchronized code?<br />\r\n&nbsp;</p>\r\n', '<p>System I/O Exception</p>\r\n', '<p>DivideByZero Exception</p>\r\n', '<p>SynchronizationLockException</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 18, 5, '3'),
(1069, '<p>Consider an integer pointer . *a.++*a will increment ___________ while *a++ will increment __________<br />\r\n&nbsp;</p>\r\n', '<p>value at a, address contained in a</p>\r\n', '<p>value at a,value at a</p>\r\n', '<p>address contained in a, address contained in a</p>\r\n', '<p>address contained in a, value at a</p>\r\n', '7', 20, 5, '1'),
(1070, '<p>What will be the correct output the for the given code snippet?</p>\r\n\r\n<p>&nbsp;class maths&nbsp;<br />\r\n&nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp;int fact(int n)&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;int result;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (n == 1)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return 1;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;result = fact(n - 1) * n;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return result;<br />\r\n&nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp;}&nbsp;<br />\r\n&nbsp;class Output&nbsp;<br />\r\n&nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp;static void main(String args[])&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;maths obj = new maths() ;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Console.WriteLine(obj.fact(1));<br />\r\n&nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp;}<br />\r\n&nbsp;</p>\r\n', '<p>2</p>\r\n', '<p>10</p>\r\n', '<p>1</p>\r\n', '<p>0</p>\r\n', '7', 63, 5, '3'),
(1071, '<p>What does the following method specify?<br />\r\npublic static WebRequest Create(string requestUriString)<br />\r\n&nbsp;</p>\r\n', '<p>Creates a WebRequest object for the URI specified by the string passed by requestUriString</p>\r\n', '<p>The object returned will implement the protocol specified by the prefix of the URI</p>\r\n', '<p>The object will be an instance of the class that inherits WebRequest</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 24, 5, '4'),
(1072, '<p>Choose the class from which the namespace &lsquo;System.Type&rsquo; is derived:<br />\r\n&nbsp;</p>\r\n', '<p>System.Reflection</p>\r\n', '<p>System.Reflection.MemberInfo</p>\r\n', '<p>Both a &amp; b</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 19, 5, '2'),
(1073, '<p>What does the following property signify?<br />\r\nMemberTypes MemberType<br />\r\n&nbsp;</p>\r\n', '<p>Helps in distinguishing kinds of members</p>\r\n', '<p>Property helps in determining if member is a field, method, property or event</p>\r\n', '<p>Both a &amp; b</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 23, 5, '3'),
(1074, '<p>What does the following declaration specify?<br />\r\nMethodInfo[] GetMethods()<br />\r\n&nbsp;</p>\r\n', '<p>Returns an array of MethodInfo objects</p>\r\n', '<p>Returns a list of the public methods supported by the type by using GetMethods()</p>\r\n', '<p>Both a &amp; b</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 22, 5, '3'),
(1075, '<p>What does the following code specify?<br />\r\nobject Invoke(object obj, object[] parameters)<br />\r\n&nbsp;</p>\r\n', '<p>Calling a type using invoke()</p>\r\n', '<p>Any arguments that need to be passed to the method are specified in the array parameters</p>\r\n', '<p>The value returned by the invoked method is returned by Invoke()</p>\r\n', '<p>All the above</p>\r\n', '7', 20, 5, '4'),
(1076, '<p>Which of the following is the correct way to call the function abc() of the given class csharp given below?</p>\r\n\r\n<p>class csharp<br />\r\n{<br />\r\n&nbsp; &nbsp; public int abc(int a)<br />\r\n&nbsp; &nbsp; {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(&quot;A:Just do it!&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return 0;<br />\r\n&nbsp; &nbsp; }<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>delegate void del(int a);<br />\r\ncsharp s = new csharp();<br />\r\ndel d = new del(ref s.abc);<br />\r\nd(10);</p>\r\n', '<p>csharp s = new csharp();<br />\r\ndelegate void d = new del(ref abc);<br />\r\nd(10);</p>\r\n', '<p>delegate int del(int a);<br />\r\ndel d;<br />\r\ncsharp s = new csharp();<br />\r\nd = new del(ref s.fun);<br />\r\nd(10);</p>\r\n', '<p>none of the mentioned</p>\r\n', '8', 63, 5, '3'),
(1077, '<p>Choose the statement which defines the Nullable type Correctly:<br />\r\n&nbsp;</p>\r\n', '<p>a special version of a value type that is represented by a structure</p>\r\n', '<p>a nullable type can also store the value null</p>\r\n', '<p>Nullable types are objects of System.Nullable, where T must be a non nullable value type</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 16, 5, '4'),
(1078, '<p>What does the following code depicts?<br />\r\n1. System.Nullable count;<br />\r\n2. bool? done;<br />\r\n&nbsp;</p>\r\n', '<p>code 1 declares the objects of nullable of type Nullable defined in the System namespace</p>\r\n', '<p>code 2 declares a nullable type in much shorter and in more commonly used way using &lsquo;?&rsquo;</p>\r\n', '<p>Both a &amp; b</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 22, 5, '3'),
(1079, '<p>Calculate the number of bytes a structure variable s occupies in the memory if it is defined as follows.</p>\r\n\r\n<p>&nbsp; class abc<br />\r\n&nbsp; {<br />\r\n&nbsp; &nbsp; &nbsp; int i;<br />\r\n&nbsp; &nbsp; &nbsp; Decimal d;<br />\r\n&nbsp; }<br />\r\n&nbsp; struct sample<br />\r\n&nbsp; {<br />\r\n&nbsp; &nbsp; &nbsp;private int x;<br />\r\n&nbsp; &nbsp; &nbsp;private Single y;<br />\r\n&nbsp; &nbsp; &nbsp;private trial z;<br />\r\n&nbsp; }<br />\r\n&nbsp; sample s = new sample();<br />\r\n&nbsp;</p>\r\n', '<p>24 bytes</p>\r\n', '<p>8&nbsp;bytes</p>\r\n', '<p>16&nbsp;bytes&nbsp;</p>\r\n', '<p>12&nbsp;bytes</p>\r\n', '8', 60, 5, '4'),
(1080, '<p>The output of code is ?</p>\r\n\r\n<p>&nbsp; &nbsp;class test<br />\r\n&nbsp; &nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;public void print()<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Console.WriteLine(&quot;Csharp:&quot;);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp; &nbsp;}<br />\r\n&nbsp; &nbsp;class Program<br />\r\n&nbsp; &nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;static void Main(string[] args)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;test t;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;t.print();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Console.ReadLine();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp; &nbsp;}<br />\r\n&nbsp;</p>\r\n', '<p>Code runs successfully prints nothing</p>\r\n', '<p>Code runs and prints &ldquo;Csharp&rdquo;</p>\r\n', '<p>Syntax error as t is unassigned variable which is never used</p>\r\n', '<p>None of above mentioned</p>\r\n', '8', 60, 5, '3'),
(1081, '<p>Which among the following is the correct way to find out the number of elements currently present in an ArrayListCollection called arr?<br />\r\n&nbsp;</p>\r\n', '<p>arr.Capacity</p>\r\n', '<p>arr.Count</p>\r\n', '<p>arr.MaxIndex</p>\r\n', '<p>arr.UpperBound</p>\r\n', '8', 25, 5, '2'),
(1082, '<p>What will be the output of the given code snippet?</p>\r\n\r\n<p>&nbsp;static void Main(string[] args)<br />\r\n&nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp;string s = &quot; i love you&quot;;<br />\r\n&nbsp; &nbsp; &nbsp;Console.WriteLine(s.IndexOf(&#39;l&#39;) + &quot; &nbsp;&quot; + s.lastIndexOf(&#39;o&#39;) + &quot; &nbsp;&quot; + s.IndexOf(&#39;e&#39;));<br />\r\n&nbsp; &nbsp; &nbsp;Console.ReadLine();<br />\r\n&nbsp;}<br />\r\n&nbsp;</p>\r\n', '<p>3 5 7</p>\r\n', '<p>4 5 6</p>\r\n', '<p>3 9 6</p>\r\n', '<p>2 4 6</p>\r\n', '8', 38, 5, '3'),
(1083, '<p>What will be the output of the given set of code?</p>\r\n\r\n<p>&nbsp;class maths<br />\r\n&nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp;public maths()<br />\r\n&nbsp; &nbsp; &nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Console.WriteLine(&quot;constructor 1 :&quot;);<br />\r\n&nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp; &nbsp; &nbsp;public maths(int x)<br />\r\n&nbsp; &nbsp; &nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;int p = 2;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;int u;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;u = p + x;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Console.WriteLine(&quot;constructor 2: &quot; +u);<br />\r\n&nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp;}<br />\r\n&nbsp;class Program<br />\r\n&nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp;static void Main(string[] args)<br />\r\n&nbsp; &nbsp; &nbsp;{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;maths k = new maths(4);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;maths t = new maths();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Console.ReadLine();<br />\r\n&nbsp; &nbsp; &nbsp;}<br />\r\n&nbsp;}<br />\r\n&nbsp;</p>\r\n', '<p>constructor 1:<br />\r\nconstructor 2: 6</p>\r\n', '<p>constructor 2: 6<br />\r\nconstructor 2: 6</p>\r\n', '<p>constructor 2: 6<br />\r\nconstructor 1:</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 63, 5, '3'),
(1084, '<p>What will be the output of the given code snippet?</p>\r\n\r\n<p>class Program<br />\r\n{<br />\r\n&nbsp; &nbsp; static void Main(string[] args)<br />\r\n&nbsp; &nbsp; {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; int x, y = 1;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; x = 10;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; if(x != 10 &amp;&amp; x / Convert.ToInt32(0) == 0)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(y);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Console.WriteLine(++y);<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Console.ReadLine();<br />\r\n&nbsp; &nbsp; }<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>Run time error</p>\r\n', '<p>Compile time error</p>\r\n', '8', 63, 5, '2'),
(1085, '<p>Which statement is correct about the C#.NET code snippet given below?</p>\r\n\r\n<p>Stack st = new Stack();<br />\r\nst.Push(&quot;Csharp&quot;);<br />\r\nst.Push(7.3);<br />\r\nst.Push(8);<br />\r\nst.Push(&#39;b&#39;);<br />\r\nst.Push(true);<br />\r\n&nbsp;</p>\r\n', '<p>Unsimilar elements like &ldquo;Csharp&rdquo;,7.3,8 cannot be stored in the same stack collection.</p>\r\n', '<p>Boolean values can never be stored in Stack collection</p>\r\n', '<p>Perfectly workable code</p>\r\n', '<p>All of the mentioned</p>\r\n', '8', 60, 5, '3'),
(1086, '<p>If the class name is X, what is the type of its &ldquo;this&rdquo; pointer (in a nonstatic, non-const member function)?</p>\r\n', '<p>const X* const</p>\r\n', '<p>X* const</p>\r\n', '<p>X*</p>\r\n', '<p>X&amp;</p>\r\n', '5', 30, 6, '4'),
(1087, '<p>Which classes allow primitive types to be accessed as objects?</p>\r\n', '<p>Storage</p>\r\n', '<p>Virtual</p>\r\n', '<p>Friend</p>\r\n', '<p>Wrapper</p>\r\n', '4', 28, 6, '2'),
(1088, '<p>When is std::bad_alloc exception thrown?</p>\r\n', '<p>When new operator cannot allocate memory</p>\r\n', '<p>When alloc function fails</p>\r\n', '<p>When type requested for new operation is considered bad, this exception is thrown</p>\r\n', '<p>When delete operator cannot delete teh allocated (corrupted) object</p>\r\n', '6', 27, 6, '4'),
(1089, '<p>Which one of the following is not a fundamental data type in C++</p>\r\n', '<p>float</p>\r\n', '<p>string</p>\r\n', '<p>int</p>\r\n', '<p>wchar_t</p>\r\n', '1', 30, 6, '1'),
(1090, '<p>Which of the following is a valid destructor of the class name &quot;Country&quot;</p>\r\n', '<p>int ~Country()</p>\r\n', '<p>void Country()</p>\r\n', '<p>int ~Country(Country obj)</p>\r\n', '<p>void ~Country()</p>\r\n', '2', 30, 6, '2'),
(1091, '<p>Which of the following correctly describes C++ language?</p>\r\n', '<p>Statically typed language</p>\r\n', '<p>Dynamically typed language</p>\r\n', '<p>Both Statically and dynamically typed language</p>\r\n', '<p>Type-less language</p>\r\n', '1', 30, 6, '4'),
(1092, '<p>Which of the following keyword supports dynamic method resolution?</p>\r\n', '<p>abstract</p>\r\n', '<p>virtual</p>\r\n', '<p>dynamic</p>\r\n', '<p>typeid</p>\r\n', '2', 30, 6, '1'),
(1093, '<p>Which of the following is the most preferred way of throwing and handling exceptions?</p>\r\n', '<p>Throw by value and catch by reference.</p>\r\n', '<p>Throw by reference and catch by reference.</p>\r\n', '<p>Throw by value and catch by value</p>\r\n', '<p>Throw the pointer value and provide catch for teh pointer type.</p>\r\n', '4', 27, 6, '2'),
(1094, '<p>Which of the following is not true about preprocessor directives</p>\r\n', '<p>They begin with a hash symbol</p>\r\n', '<p>They are processed by a preprocessor</p>\r\n', '<p>They form an integral part of the code</p>\r\n', '<p>They have to end with a semi colon</p>\r\n', '5', 30, 6, '1'),
(1095, '<p>What&#39;s wrong? while((i&lt;10) &amp;&amp; (i&gt;24))</p>\r\n', '<p>the logical operator &amp;&amp; cannot be used in a test condition</p>\r\n', '<p>the while loop is an exit-condition loop</p>\r\n', '<p>the test condition is always false</p>\r\n', '<p>the test condition is always true</p>\r\n', '3', 30, 6, '4'),
(1096, '<p>A continue statement causes execution to skip to</p>\r\n', '<p>the return 0; statement</p>\r\n', '<p>the first statement after the loop</p>\r\n', '<p>the statement following the continue statement</p>\r\n', '<p>the next iteration of the loop</p>\r\n', '2', 30, 6, '3'),
(1097, '<p>What&#39;s wrong? (x=4 &amp;&amp; y=5) ? (a=5) ; (b=6);</p>\r\n', '<p>the question mark should be an equal sign</p>\r\n', '<p>the first semicolon should be a colon</p>\r\n', '<p>there are too many variables in the statement</p>\r\n', '<p>the conditional operator is only used with apstrings</p>\r\n', '4', 30, 6, '4'),
(1098, '<p>What&#39;s wrong? for (int k=2, k&lt;=12, k++)</p>\r\n', '<p>the increment should always be ++k</p>\r\n', '<p>the variable must always be the letter i when using a for loop</p>\r\n', '<p>there should be a semicolon at the end of the statement</p>\r\n', '<p>the commas should be semicolons</p>\r\n', '3', 30, 6, '2'),
(1099, '<p>Which of the following is not recommended in a header file?</p>\r\n', '<p>Type definitions (typedefs)</p>\r\n', '<p>Class definitions</p>\r\n', '<p>Function definitions</p>\r\n', '<p>Template definitions</p>\r\n', '3', 34, 6, '4'),
(1100, '<p>Which of the STL containers store the elements contiguously (in adjecent memory locations)?</p>\r\n', '<p>std::vector</p>\r\n', '<p>std::list<br />\r\n&nbsp;</p>\r\n', '<p>std::map</p>\r\n', '<p>std::set</p>\r\n', '5', 36, 6, '3'),
(1101, '<p>Which of the following is not a standard exception built in C++.</p>\r\n', '<p>std::bad_creat</p>\r\n', '<p>std::bad_alloc</p>\r\n', '<p>std::bad_cast</p>\r\n', '<p>std::bad_typeid</p>\r\n', '5', 32, 6, '1'),
(1102, '<p>What does STL stand for?</p>\r\n', '<p>Simple Template Library</p>\r\n', '<p>Standard Template Library</p>\r\n', '<p>Static Type Library</p>\r\n', '<p>Single Type-based Library</p>\r\n', '4', 30, 6, '1'),
(1103, '<p>What is the difference between overloaded functions and overridden functions?</p>\r\n', '<p>Overloading is a dynamic or run-time binding and Overriding is static or compile-time binding</p>\r\n', '<p>Redefining a function in a friend class is called function overriding while Redefining a function in a derived class is called a overloaded fucntion.</p>\r\n', '<p>Overloading is a static or compile-time binding and Overriding is dynamic or run-time binding</p>\r\n', '<p>Redefining a function in a friend class is called function overloading while Redefining a function in a derived class is called as overridden fucnion.</p>\r\n', '2', 36, 6, '2'),
(1104, '<p>C language has been developed by<br />\r\n&nbsp;</p>\r\n', '<p>Martin Richards</p>\r\n', '<p>Bijarne Stroustrup</p>\r\n', '<p>Dennis Ritche</p>\r\n', '<p>Ken Thompson</p>\r\n', '1', 10, 4, '3'),
(1105, '<p>int[ ] ={5,6,7,8,9} What is the value of a[3]?<br />\r\n&nbsp;</p>\r\n', '<p>9</p>\r\n', '<p>8</p>\r\n', '<p>7</p>\r\n', '<p>6</p>\r\n', '1', 10, 4, '2'),
(1106, '<p>Which one of the following is not a valid reserved keyword in C++</p>\r\n', '<p>Explicit</p>\r\n', '<p>Public</p>\r\n', '<p>Implicit</p>\r\n', '<p>Private</p>\r\n', '2', 30, 6, '3'),
(1107, '<p>C can be used on<br />\r\n&nbsp;</p>\r\n', '<p>Only MS-Dos operating System</p>\r\n', '<p>Only Linux operating system</p>\r\n', '<p>Only Windows operating system</p>\r\n', '<p>All the above</p>\r\n', '1', 10, 4, '4'),
(1108, '<p>Each pass through a loop is called a/an</p>\r\n', '<p>enumeration</p>\r\n', '<p>iteration</p>\r\n', '<p>culmination</p>\r\n', '<p>pass through</p>\r\n', '3', 28, 6, '3'),
(1109, '<p>Float a[15], what is the size of array?<br />\r\n&nbsp;</p>\r\n', '<p>17</p>\r\n', '<p>14</p>\r\n', '<p>15</p>\r\n', '<p>16</p>\r\n', '1', 10, 4, '3'),
(1110, '<p>C programs are converted into machine language with the help of<br />\r\n&nbsp;</p>\r\n', '<p>An Editor</p>\r\n', '<p>A complier</p>\r\n', '<p>An operating system</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 4, '2'),
(1111, '<p>Which of the following is true about const member functions?</p>\r\n', '<p>const members can be invoked on both const as well as nonconst objects</p>\r\n', '<p>const members can be invoked only on const objects and not on nonconst objects</p>\r\n', '<p>nonconst members can be invoked on const objects as well as nonconst objects</p>\r\n', '<p>none of the above</p>\r\n', '3', 36, 6, '2'),
(1112, '<p>Array is<br />\r\n&nbsp;</p>\r\n', '<p>Primary data type</p>\r\n', '<p>Pointer data type</p>\r\n', '<p>Heterogeneous data type</p>\r\n', '<p>Homogenous data type</p>\r\n', '1', 10, 4, '4'),
(1113, '<p>Which of the following relationship is known as inheritance relationship?</p>\r\n', '<p>&lsquo;has-a&rsquo; relationship</p>\r\n', '<p>&lsquo;is-a&rsquo; relationship</p>\r\n', '<p>association relationship</p>\r\n', '<p>none of the above</p>\r\n', '2', 33, 6, '1'),
(1114, '<p>Which of the following is allowed in a C Arithmetic Instruction?<br />\r\n&nbsp;</p>\r\n', '<p>[ ]</p>\r\n', '<p>{ }</p>\r\n', '<p>( )</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 4, '1'),
(1115, '<p>To accept 100 different values into the array we require<br />\r\n&nbsp;</p>\r\n', '<p>Loop</p>\r\n', '<p>If condition</p>\r\n', '<p>Function</p>\r\n', '<p>Structure</p>\r\n', '1', 10, 4, '1'),
(1116, '<p>If a is an integer variable, a=7/3; will return a value<br />\r\n&nbsp;</p>\r\n', '<p>2.5</p>\r\n', '<p>3</p>\r\n', '<p>0</p>\r\n', '<p>2</p>\r\n', '1', 10, 4, '4'),
(1117, '<p>Pointer holds<br />\r\n&nbsp;</p>\r\n', '<p>Value of variable</p>\r\n', '<p>Address of variable</p>\r\n', '<p>Value and address of variable</p>\r\n', '<p>Always null</p>\r\n', '1', 10, 4, '2'),
(1118, '<p>If class A is friend of class B and if class B is friend of class C, which of the following is true?</p>\r\n', '<p>Class C is friend of class A</p>\r\n', '<p>Class A is friend of class C</p>\r\n', '<p>Class A and Class C do not have any friend relationship</p>\r\n', '<p>None of the Above</p>\r\n', '3', 30, 6, '2'),
(1119, '<p>A direct access file is:</p>\r\n', '<p>A file in which recoreds are arranged in a way they are inserted in a file</p>\r\n', '<p>A file in which records are arranged in a particular order</p>\r\n', '<p>Files which are stored on a direct access storage medium</p>\r\n', '<p>None of the above</p>\r\n', '4', 30, 6, '3'),
(1120, '<p>Which of the following is not a characteristic of a good programming language?<br />\r\n&nbsp;</p>\r\n', '<p>Simplicity</p>\r\n', '<p>Natural</p>\r\n', '<p>Locality</p>\r\n', '<p>Complexity</p>\r\n', '1', 10, 4, '3'),
(1121, '<p>Which of the following is not related to machine language?<br />\r\n&nbsp;</p>\r\n', '<p>Opcode</p>\r\n', '<p>Data movement operations</p>\r\n', '<p>Instruction set</p>\r\n', '<p>None</p>\r\n', '1', 10, 4, '4'),
(1122, '<p>Which of the following is not case sensitive language?<br />\r\n&nbsp;</p>\r\n', '<p>C</p>\r\n', '<p>C++</p>\r\n', '<p>JAVA</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 4, '4'),
(1123, '<p>Which of the following is not a component of file system</p>\r\n', '<p>Access method</p>\r\n', '<p>Auxiliary storage management</p>\r\n', '<p>Free integrity mechanism</p>\r\n', '<p>None of the Above</p>\r\n', '3', 32, 6, '3'),
(1124, '<p>Seek time is</p>\r\n', '<p>time taken to retrieve a data</p>\r\n', '<p>time taken by read/write head mechanism to position itself over appropriate cylinder</p>\r\n', '<p>time taken by appropriate sector to come under read/write</p>\r\n', '<p>None of the above</p>\r\n', '1', 30, 6, '4'),
(1125, '<p>&lsquo;Prime area&rsquo; in context of file system is defined as</p>\r\n', '<p>It is memory area created by operating system</p>\r\n', '<p>It is an area into which data records are written</p>\r\n', '<p>It is the main area of a web page</p>\r\n', '<p>None of the Above</p>\r\n', '1', 30, 1, '2'),
(1126, '<p>In mulit-list organization</p>\r\n', '<p>Records that have equivalent value for a given secondary index item are linked together to form a list.</p>\r\n', '<p>Records are loaded in ordered sequence defined by collating sequence by content of the key</p>\r\n', '<p>Records are directly accessed by record key field</p>\r\n', '<p>None of the Above</p>\r\n', '2', 30, 6, '2'),
(1127, '<p>Which of the following is/are advantages of cellular partitioned structure:</p>\r\n', '<p>Simultaneous read operations can be overlapped</p>\r\n', '<p>Search time is reduced</p>\r\n', '<p>Both A &amp; B</p>\r\n', '<p>None of the above</p>\r\n', '4', 32, 6, '1'),
(1128, '<p>*ptr++ is equivalenet to:</p>\r\n', '<p>ptr++</p>\r\n', '<p>*ptr</p>\r\n', '<p>++*ptr</p>\r\n', '<p>None of the Above</p>\r\n', '4', 34, 6, '3'),
(1129, '<p>The conditional compilation</p>\r\n', '<p>It is taken care of by the compiler</p>\r\n', '<p>It is setting the compiler option conditionally</p>\r\n', '<p>It is compiling a program based on a condition</p>\r\n', '<p>None of Above</p>\r\n', '4', 32, 6, '4'),
(1130, '<p>In which of the following language the &#39;opcode&#39; is used?<br />\r\n&nbsp;</p>\r\n', '<p>Assembly language</p>\r\n', '<p>Machine language</p>\r\n', '<p>High-level language</p>\r\n', '<p>None of these</p>\r\n', '1', 10, 4, '2'),
(1131, '<p>In which of the following language a program can be written using symbolic names?<br />\r\n&nbsp;</p>\r\n', '<p>Assembly language</p>\r\n', '<p>High-level language</p>\r\n', '<p>Machine language</p>\r\n', '<p>All the above</p>\r\n', '1', 10, 4, '1'),
(1132, '<p>Originally &lsquo;C&rsquo; was developed as:</p>\r\n', '<p>System programming language</p>\r\n', '<p>General purpose language</p>\r\n', '<p>Data processing language</p>\r\n', '<p>None of Above</p>\r\n', '2', 30, 6, '1'),
(1133, '<p>We can insert pre written code in a C program by using<br />\r\n&nbsp;</p>\r\n', '<p>#read</p>\r\n', '<p>#get</p>\r\n', '<p>#include</p>\r\n', '<p>#put</p>\r\n', '1', 10, 4, '3'),
(1134, '<p>An inverted file</p>\r\n', '<p>Locates information about data in small files that are maintained apart from actual data record</p>\r\n', '<p>A file which stores opposite records</p>\r\n', '<p>A file which stores information about records of a system</p>\r\n', '<p>None of Above</p>\r\n', '6', 25, 6, '2'),
(1135, '<p>Which of the following is not a file operation:</p>\r\n', '<p>Repositioning</p>\r\n', '<p>Truncating</p>\r\n', '<p>Appending</p>\r\n', '<p>None of Above</p>\r\n', '7', 30, 6, '1'),
(1136, '<p>The first expression in a for loop is<br />\r\n&nbsp;</p>\r\n', '<p>Step value of loop</p>\r\n', '<p>Value of the counter variable</p>\r\n', '<p>Any of above</p>\r\n', '<p>None of the above</p>\r\n', '1', 10, 4, '2'),
(1137, '<p>Break statement is used for<br />\r\n&nbsp;</p>\r\n', '<p>Quit a program</p>\r\n', '<p>Quit the current iteration</p>\r\n', '<p>Both of above</p>\r\n', '<p>None of above</p>\r\n', '1', 10, 4, '2'),
(1138, '<p>Continue statement used for</p>\r\n', '<p>To continue to the next line of code</p>\r\n', '<p>To stop the current iteration and begin the next iteration from the beginning<br />\r\n&nbsp;</p>\r\n', '<p>To handle run time error</p>\r\n', '<p>None of above</p>\r\n', '1', 10, 4, '2'),
(1139, '<p>Hierarchy decides which operator</p>\r\n\r\n<p>&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>is most important</p>\r\n', '<p>is used first</p>\r\n', '<p>is fastest</p>\r\n', '<p>Operates on largest numbers</p>\r\n', '1', 10, 4, '2'),
(1140, '<p>A pointer can hold<br />\r\n&nbsp;</p>\r\n', '<p>Single address at a time</p>\r\n', '<p>Two addresses at a time</p>\r\n', '<p>Number of addresses at a time</p>\r\n', '<p>No address</p>\r\n', '1', 10, 4, '1'),
(1141, '<p>An integer constant in C must have<br />\r\n&nbsp;</p>\r\n', '<p>At least one digit</p>\r\n', '<p>At least one decimal point</p>\r\n', '<p>A comma along with digits</p>\r\n', '<p>Digits separated by commas</p>\r\n', '2', 10, 4, '1'),
(1142, '<p>Which of the following are tokens in C?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Keywords</p>\r\n', '<p>Variables</p>\r\n', '<p>Constraints</p>\r\n', '<p>All of the above</p>\r\n', '2', 10, 4, '4'),
(1143, '<p>Which escape character can be used to beep from speaker in C?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>\\a</p>\r\n', '<p>\\b</p>\r\n', '<p>\\m</p>\r\n', '<p>\\n</p>\r\n', '2', 10, 4, '1'),
(1144, '<p>Which of the following is a keyword is used for storage class?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>printf</p>\r\n', '<p>external</p>\r\n', '<p>auto</p>\r\n', '<p>scanf</p>\r\n', '2', 10, 4, '3'),
(1145, '<p>How will you write comment in a C? Program?<br />\r\n&nbsp;</p>\r\n', '<p>//</p>\r\n', '<p>// &nbsp;//</p>\r\n', '<p>/* */</p>\r\n', '<p>/*&nbsp;</p>\r\n', '2', 10, 4, '1'),
(1146, '<p>Which of the following is FALSE in C?<br />\r\n&nbsp;</p>\r\n', '<p>Keyword can be used as variable names</p>\r\n', '<p>Variable names can contain a digit</p>\r\n', '<p>Variable names do not contain a blank space<br />\r\n&nbsp;</p>\r\n', '<p>Capital letters can be used in variable names</p>\r\n', '2', 10, 4, '1'),
(1147, '<p>In C&nbsp;arithmetic instruction cannot contain<br />\r\n&nbsp;</p>\r\n', '<p>Variables</p>\r\n', '<p>Constants</p>\r\n', '<p>Variable names on right side of =</p>\r\n', '<p>Constants on left side of =</p>\r\n', '2', 10, 4, '4'),
(1148, '<p>An expression contains relational operators, assignment operators and arithmetic operators. In the<br />\r\nabsence of parentheses, they will be evaluated in which of the following order<br />\r\n&nbsp;</p>\r\n', '<p>Assignment, Relational, Arithmetic</p>\r\n', '<p>Assignment, Relational, Assignment</p>\r\n', '<p>Relational, Arithmetic, Assignment</p>\r\n', '<p>Assignment, Arithmetic, Relational</p>\r\n', '2', 10, 4, '2'),
(1149, '<p>Continue statement is used .............</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>to go to the next iteration in a loop</p>\r\n', '<p>come out of a loop</p>\r\n', '<p>exit and return to the main function</p>\r\n', '<p>restarts iteration from beginning of loop</p>\r\n', '2', 10, 4, '1'),
(1150, '<p>File manipulation functions in C are available in which header file?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>streams.h</p>\r\n', '<p>stdio.h</p>\r\n', '<p>stdlib.h</p>\r\n', '<p>files.h</p>\r\n', '2', 10, 4, '2'),
(1151, '<p>A compiler ................</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>is a computer program</p>\r\n', '<p>translates a high level language into machine language</p>\r\n', '<p>is a part of software</p>\r\n', '<p>editor</p>\r\n', '2', 10, 4, '2'),
(1152, '<p>Which among the following is not a structured data type in C?<br />\r\n&nbsp;</p>\r\n', '<p>Union<br />\r\n&nbsp;</p>\r\n', '<p>Pointer</p>\r\n', '<p>String</p>\r\n', '<p>Structure</p>\r\n', '2', 10, 4, '2'),
(1153, '<p>Which of the following operator is used to write expression in C?<br />\r\n&nbsp;</p>\r\n', '<p>{ }</p>\r\n', '<p>( )</p>\r\n', '<p>[ ]</p>\r\n', '<p>None of the above</p>\r\n', '2', 10, 4, '2'),
(1154, '<p>The general form of printf statement is<br />\r\n&nbsp;</p>\r\n', '<p>printf (\\&rdquo; format string \\&rdquo; list of variables )</p>\r\n', '<p>print (\\&rdquo;list of variables\\&rdquo; format sting)</p>\r\n', '<p>printf (\\&rdquo;format string list of variables \\&rdquo;)</p>\r\n', '<p>print (\\&rdquo; format sting \\&rdquo; list of variables )<br />\r\n&nbsp;</p>\r\n', '2', 10, 4, '1'),
(1155, '<p>Values of data items of types int, float, char are displayed by writing ___________ in printf statement in C<br />\r\n&nbsp;</p>\r\n', '<p>%d, %f, %s</p>\r\n', '<p>%f, %d, %c</p>\r\n', '<p>%d, %d, %c</p>\r\n', '<p>%d, %f, %c</p>\r\n', '2', 10, 4, '4'),
(1156, '<p>Explicit type conversion is known as ....................</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>casting</p>\r\n', '<p>conversion</p>\r\n', '<p>disjunction</p>\r\n', '<p>separation</p>\r\n', '2', 10, 4, '1'),
(1157, '<p>A function popularly used C input function</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>scanf</p>\r\n', '<p>printf</p>\r\n', '<p>getch</p>\r\n', '<p>Char</p>\r\n', '2', 10, 4, '1'),
(1158, '<p>&#39;C&#39; is often called a ....</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Object oriented language</p>\r\n', '<p>High level language</p>\r\n', '<p>Assembly language</p>\r\n', '<p>Machine level language</p>\r\n', '3', 10, 4, '2'),
(1159, '<p>Each C preprocessor directive begins with ....</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>#</p>\r\n', '<p>include</p>\r\n', '<p>main()</p>\r\n', '<p>{</p>\r\n', '3', 10, 4, '1'),
(1160, '<p>C allows arrays of greater than two dimensions, who will determine this?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>programmer</p>\r\n', '<p>compiler</p>\r\n', '<p>parameter</p>\r\n', '<p>None of the above</p>\r\n', '3', 10, 4, '2'),
(1161, '<p>The &lt;&lt; operator is used for</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Right shifting&nbsp;</p>\r\n', '<p>Left shifting</p>\r\n', '<p>Bitwise shifting</p>\r\n', '<p>Bitwise complement</p>\r\n', '3', 10, 4, '2'),
(1162, '<p>Set of values of the same type, which have a single name followed by an index is called</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>function</p>\r\n', '<p>structure</p>\r\n', '<p>array</p>\r\n', '<p>union</p>\r\n', '3', 10, 4, '3'),
(1163, '<p>Which of the following header file is required for strcpy() function?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>String.h</p>\r\n', '<p>Strings.h</p>\r\n', '<p>file.h</p>\r\n', '<p>strcpy()</p>\r\n', '3', 10, 4, '1'),
(1164, '<p>scanf() can be used for reading ...</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>double character</p>\r\n', '<p>single character</p>\r\n', '<p>multiple characters</p>\r\n', '<p>no character</p>\r\n', '3', 10, 4, '3'),
(1165, '<p>A variable which is visible only in the function in which it is defined is called</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Static variable</p>\r\n', '<p>auto variable</p>\r\n', '<p>external variable</p>\r\n', '<p>local variable</p>\r\n', '3', 10, 4, '4'),
(1166, '<p>In the loop structure logical expression is checked at the ....................of the loop.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>first</p>\r\n', '<p>end</p>\r\n', '<p>middle</p>\r\n', '<p>second</p>\r\n', '3', 10, 4, '1'),
(1167, '<p>If an array is used as function argument, the array is passed</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>by value</p>\r\n', '<p>by reference</p>\r\n', '<p>by name</p>\r\n', '<p>the array cannot be used as function argument</p>\r\n', '3', 10, 4, '2'),
(1168, '<p>If is necessary to declare the type of function in the calling program if&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Function returns an integer</p>\r\n', '<p>Function returns a non-integer value</p>\r\n', '<p>Function is not defined in the same file</p>\r\n', '<p>Function is called number of times</p>\r\n', '3', 10, 4, '2'),
(1169, '<p>Look at this series: 2, 1, (1/2), (1/4), ... What number should come next?</p>\r\n', '<p>1/3</p>\r\n', '<p>1/8</p>\r\n', '<p>2/8</p>\r\n', '<p>1/16</p>\r\n', '1', 12, 25, '2'),
(1170, '<p>Look at this series: 36, 34, 30, 28, 24, ... What number should come next?</p>\r\n', '<p>20</p>\r\n', '<p>22</p>\r\n', '<p>23</p>\r\n', '<p>26</p>\r\n', '1', 12, 25, '2'),
(1171, '<p>Odometer is to mileage as compass is to</p>\r\n', '<p>speed</p>\r\n', '<p>hiking</p>\r\n', '<p>needle</p>\r\n', '<p>direction</p>\r\n', '2', 10, 25, '4'),
(1172, '<p>Marathon is to race as hibernation is to</p>\r\n', '<p>winter</p>\r\n', '<p>bear</p>\r\n', '<p>dream</p>\r\n', '<p>sleep</p>\r\n', '1', 10, 25, '4'),
(1173, '<p>Cup is to coffee as bowl is to</p>\r\n', '<p>dish</p>\r\n', '<p>soup</p>\r\n', '<p>spoon</p>\r\n', '<p>food</p>\r\n', '1', 10, 25, '2'),
(1174, '<p>SCD, TEF, UGH, ____, WKL</p>\r\n', '<p>CMN</p>\r\n', '<p>UJI</p>\r\n', '<p>VIJ</p>\r\n', '<p>IJT</p>\r\n', '1', 13, 25, '3'),
(1175, '<p>ELFA, GLHA, ILJA, _____, MLNA</p>\r\n', '<p>OLPA</p>\r\n', '<p>KLMA</p>\r\n', '<p>LLMA</p>\r\n', '<p>KLLA</p>\r\n', '2', 16, 25, '4'),
(1176, '<p>Which word does NOT belong with the others?</p>\r\n', '<p>parsley</p>\r\n', '<p>basil</p>\r\n', '<p>dill</p>\r\n', '<p>mayonnaise</p>\r\n', '3', 14, 25, '4'),
(1177, '<p>Which word does NOT belong with the others?</p>\r\n', '<p>inch</p>\r\n', '<p>ounce</p>\r\n', '<p>centimeter</p>\r\n', '<p>yard</p>\r\n', '1', 11, 25, '2'),
(1178, '<p>Here are some words translated from an artificial language.<br />\r\n<em>gorblflur</em>&nbsp;means fan belt<br />\r\n<em>pixngorbl</em>&nbsp;means ceiling fan<br />\r\n<em>arthtusl</em>&nbsp;means tile roof<br />\r\nWhich word could mean &quot;ceiling tile&quot;?</p>\r\n', '<p>gorbltusl</p>\r\n', '<p>flurgorbl</p>\r\n', '<p>arthflur</p>\r\n', '<p>pixnarth</p>\r\n', '7', 38, 25, '4'),
(1179, '<p>Here are some words translated from an artificial language.<br />\r\n<em>hapllesh</em>&nbsp;means cloudburst<br />\r\n<em>srenchoch</em>&nbsp;means pinball<br />\r\n<em>resbosrench</em>&nbsp;means ninepin<br />\r\nWhich word could mean &quot;cloud nine&quot;?</p>\r\n', '<p>leshsrench</p>\r\n', '<p>ochhapl</p>\r\n', '<p>haploch</p>\r\n', '<p>haplresbo</p>\r\n', '8', 38, 25, '4'),
(1180, '<p>Tanya is older than Eric.<br />\r\nCliff is older than Tanya.<br />\r\nEric is older than Cliff.<br />\r\nIf the first two statements are true, the third statement is</p>\r\n', '<p>true</p>\r\n', '<p>false</p>\r\n', '<p>uncertain</p>\r\n', '<p>data incomplete</p>\r\n', '6', 26, 25, '2'),
(1181, '<p>Blueberries cost more than strawberries.<br />\r\nBlueberries cost less than raspberries.<br />\r\nRaspberries cost more than strawberries and blueberries.<br />\r\nIf the first two statements are true, the third statement is</p>\r\n', '<p>true</p>\r\n', '<p>false</p>\r\n', '<p>uncetain</p>\r\n', '<p>data incomplete</p>\r\n', '6', 24, 25, '1'),
(1182, '<p>All the trees in the park are flowering trees.<br />\r\nSome of the trees in the park are dogwoods.<br />\r\nAll dogwoods in the park are flowering trees.<br />\r\nIf the first two statements are true, the third statement is</p>\r\n', '<p>true</p>\r\n', '<p>false</p>\r\n', '<p>uncertain</p>\r\n', '<p>data incomplete</p>\r\n', '5', 25, 25, '1'),
(1183, '<p>Look at this series: 21, 9, 21, 11, 21, 13, 21, ... What number should come next?</p>\r\n', '<p>14</p>\r\n', '<p>15</p>\r\n', '<p>21</p>\r\n', '<p>23</p>\r\n', '1', 11, 25, '2'),
(1184, '<p>Look at this series: 3, 4, 7, 8, 11, 12, ... What number should come next?</p>\r\n', '<p>7</p>\r\n', '<p>10</p>\r\n', '<p>14</p>\r\n', '<p>15</p>\r\n', '1', 12, 25, '4'),
(1185, '<p>ZA5, Y4B, XC6, W3D, _____</p>\r\n', '<p>E7V</p>\r\n', '<p>V2E</p>\r\n', '<p>VE5</p>\r\n', '<p>VE7</p>\r\n', '1', 14, 25, '4'),
(1186, '<p>P5QR, P4QS, P3QT, _____, P1QV</p>\r\n', '<p>PQW</p>\r\n', '<p>PQV2</p>\r\n', '<p>P2QU</p>\r\n', '<p>PQ3U</p>\r\n', '1', 14, 25, '3'),
(1187, '<p>Elated is to despondent as enlightened is to</p>\r\n', '<p>aware</p>\r\n', '<p>ignorant</p>\r\n', '<p>miserable</p>\r\n', '<p>tolerant</p>\r\n', '3', 16, 25, '2'),
(1188, '<p>Optimist is to cheerful as pessimist is to</p>\r\n', '<p>gloomy</p>\r\n', '<p>mean</p>\r\n', '<p>petty</p>\r\n', '<p>helpful</p>\r\n', '3', 14, 25, '1'),
(1189, '<p>Reptile is to lizard as flower is to</p>\r\n', '<p>petal</p>\r\n', '<p>stem</p>\r\n', '<p>daisy</p>\r\n', '<p>alligator</p>\r\n', '2', 14, 25, '3'),
(1190, '<p>Play is to actor as concert is to</p>\r\n', '<p>piano</p>\r\n', '<p>percussion</p>\r\n', '<p>symphony</p>\r\n', '<p>musician</p>\r\n', '1', 14, 25, '4'),
(1191, '<p>Sponge is to porous as rubber is to</p>\r\n', '<p>massive</p>\r\n', '<p>solid</p>\r\n', '<p>elastic</p>\r\n', '<p>inflexible</p>\r\n', '2', 14, 25, '3'),
(1192, '<p>The Kingston Mall has more stores than the Galleria.<br />\r\nThe Four Corners Mall has fewer stores than the Galleria.<br />\r\nThe Kingston Mall has more stores than the Four Corners Mall.<br />\r\nIf the first two statements are true, the third statement is</p>\r\n', '<p>true</p>\r\n', '<p>false</p>\r\n', '<p>uncertain</p>\r\n', '<p>data incomplete</p>\r\n', '5', 32, 25, '1'),
(1193, '<p>All the tulips in Zoe&#39;s garden are white.<br />\r\nAll the pansies in Zoe&#39;s garden are yellow.<br />\r\nAll the flowers in Zoe&#39;s garden are either white or yellow<br />\r\nIf the first two statements are true, the third statement is</p>\r\n', '<p>true</p>\r\n', '<p>false</p>\r\n', '<p>uncertain</p>\r\n', '<p>data incomplete</p>\r\n', '6', 30, 25, '3'),
(1194, '<p>Look at this series: 80, 10, 70, 15, 60, ... What number should come next?</p>\r\n', '<p>20</p>\r\n', '<p>35</p>\r\n', '<p>30</p>\r\n', '<p>50</p>\r\n', '1', 14, 25, '1'),
(1195, '<p>Look at this series: 2, 6, 18, 54, ... What number should come next?</p>\r\n', '<p>108</p>\r\n', '<p>142</p>\r\n', '<p>144</p>\r\n', '<p>162</p>\r\n', '1', 10, 25, '4'),
(1196, '<p>Look at this series: 5.2, 4.8, 4.4, 4, ... What number should come next?</p>\r\n', '<p>3</p>\r\n', '<p>3.3</p>\r\n', '<p>3.5</p>\r\n', '<p>3.6</p>\r\n', '1', 12, 25, '4'),
(1197, '<p>Which word does NOT belong with the others?</p>\r\n', '<p>book</p>\r\n', '<p>index</p>\r\n', '<p>glossary</p>\r\n', '<p>chapter</p>\r\n', '1', 12, 25, '1'),
(1198, '<p>Which word does NOT belong with the others?</p>\r\n', '<p>unimportant</p>\r\n', '<p>trivial</p>\r\n', '<p>insignificant</p>\r\n', '<p>familier</p>\r\n', '1', 10, 25, '4');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(1199, '<p>Arrange the words given below in a meaningful sequence. 1. Key 2. Door 3. Lock 4. Room 5. Switch on</p>\r\n', '<p>5, 1, 2, 4, 3</p>\r\n', '<p>4, 2, 1, 5, 3</p>\r\n', '<p>1, 3, 2, 4, 5</p>\r\n', '<p>1, 2, 3, 5, 4</p>\r\n', '2', 16, 25, '3'),
(1200, '<p>Arrange the words given below in a meaningful sequence. 1. Word 2. Paragraph 3. Sentence 4. Letters 5. Phrase</p>\r\n', '<p>4, 1, 5, 2, 3</p>\r\n', '<p>4, 1, 3, 5, 2</p>\r\n', '<p>4, 2, 5, 1, 3</p>\r\n', '<p>4, 1, 5, 3, 2</p>\r\n', '2', 18, 25, '4'),
(1201, '<p>Arrange the words given below in a meaningful sequence. 1. Police 2. Punishment 3. Crime 4. Judge 5. Judgement</p>\r\n', '<p>3, 1, 2, 4, 5</p>\r\n', '<p>1, 2, 4, 3, 5</p>\r\n', '<p>5, 4, 3, 2, 1</p>\r\n', '<p>3, 1, 4, 5, 2</p>\r\n', '4', 10, 25, '4'),
(1202, '<p>Arrange the words given below in a meaningful sequence. 1. Family 2. Community 3. Member 4. Locality 5. Country</p>\r\n', '<p>3, 1, 2, 4, 5</p>\r\n', '<p>3, 1, 2, 5, 4</p>\r\n', '<p>3, 1, 4, 2, 5</p>\r\n', '<p>3, 1, 4, 5, 2</p>\r\n', '2', 18, 25, '1'),
(1203, '<p>Arrange the words given below in a meaningful sequence. 1. Poverty 2. Population 3. Death 4. Unemployment 5. Disease</p>\r\n', '<p>2, 3, 4, 5, 1</p>\r\n', '<p>3, 4, 2, 5, 1</p>\r\n', '<p>2, 4, 1, 5, 3</p>\r\n', '<p>1, 2, 3, 4, 5</p>\r\n', '1', 15, 25, '3'),
(1204, '<p>Pointing to a photograph of a boy Suresh said, &quot;He is the son of the only son of my mother.&quot; How is Suresh related to that boy?</p>\r\n', '<p>Brother</p>\r\n', '<p>Uncle</p>\r\n', '<p>Cousin</p>\r\n', '<p>Father</p>\r\n', '3', 24, 25, '4'),
(1205, '<p>If A + B means A is the mother of B; A - B means A is the brother B; A % B means A is the father of B and A x B means A is the sister of B, which of the following shows that P is the maternal uncle of Q?</p>\r\n', '<p>Q - N + M x P</p>\r\n', '<p>P + S x N - Q</p>\r\n', '<p>P - M + N x Q</p>\r\n', '<p>Q - S % P</p>\r\n', '6', 32, 25, '3'),
(1206, '<p>If A is the brother of B; B is the sister of C; and C is the father of D, how D is related to A?</p>\r\n', '<p>Brother</p>\r\n', '<p>Sister</p>\r\n', '<p>Nephew</p>\r\n', '<p>Can&#39;t be determined</p>\r\n', '3', 30, 25, '4'),
(1207, '<p>If A + B means A is the brother of B; A - B means A is the sister of B and A x B means A is the father of B. Which of the following means that C is the son of M?</p>\r\n', '<p>M - N x C + F</p>\r\n', '<p>F - C + N x M</p>\r\n', '<p>N + M - F x C</p>\r\n', '<p>M x N - C + F</p>\r\n', '4', 32, 25, '4'),
(1208, '<p>Introducing a boy, a girl said, &quot;He is the son of the daughter of the father of my uncle.&quot; How is the boy related to the girl?</p>\r\n', '<p>Brother</p>\r\n', '<p>Nephew</p>\r\n', '<p>Uncle</p>\r\n', '<p>Son-in-law</p>\r\n', '2', 25, 25, '1'),
(1209, '<p>In the series 2, 6, 18, 54, ...... what will be the 8th term ?</p>\r\n', '<p>4370</p>\r\n', '<p>4374</p>\r\n', '<p>7443</p>\r\n', '<p>7434</p>\r\n', '3', 25, 25, '2'),
(1210, '<p>Which number will replace the question mark?<br />\r\n125,80,45,20,?</p>\r\n', '<p>5</p>\r\n', '<p>8</p>\r\n', '<p>10</p>\r\n', '<p>12</p>\r\n', '1', 12, 25, '1'),
(1216, '<p>CUP : LIP :: BIRD : ?</p>\r\n', '<p>BUSH</p>\r\n', '<p>GRASS</p>\r\n', '<p>FOREST</p>\r\n', '<p>BEAK</p>\r\n', '1', 12, 25, '4'),
(1217, '<p>Flow : River :: Stagnant : ?</p>\r\n', '<p>Rain</p>\r\n', '<p>Stream</p>\r\n', '<p>Pool</p>\r\n', '<p>Canal</p>\r\n', '2', 10, 25, '3'),
(1218, '<p>Paw : Cat :: Hoof : ?</p>\r\n', '<p>Lamb</p>\r\n', '<p>Elephant</p>\r\n', '<p>Lion</p>\r\n', '<p>Horse</p>\r\n', '1', 10, 25, '4'),
(1219, '<p>Ornithologist : Bird :: Archealogist : ?</p>\r\n', '<p>Islands</p>\r\n', '<p>Mediators</p>\r\n', '<p>Archealogy</p>\r\n', '<p>Aquatic</p>\r\n', '2', 11, 25, '3'),
(1220, '<p>Carbon : Diamond :: Corundum : ?</p>\r\n', '<p>Garnet</p>\r\n', '<p>Ruby</p>\r\n', '<p>Pukhraj</p>\r\n', '<p>Pearl</p>\r\n', '2', 14, 25, '2'),
(1221, '<p>A, P, R, X, S and Z are sitting in a row. S and Z are in the centre. A and P are at the ends. R is sitting to the left of A. Who is to the right of P ?</p>\r\n', '<p>A</p>\r\n', '<p>X</p>\r\n', '<p>S</p>\r\n', '<p>Z</p>\r\n', '7', 35, 25, '2'),
(1222, '<p>There are 8 houses in a line and in each house only one boy lives with the conditions as given below:<br />\r\n<br />\r\nJack is not the neighbour Siman.<br />\r\nHarry is just next to the left of Larry.<br />\r\nThere is at least one to the left of Larry.<br />\r\nPaul lives in one of the two houses in the middle.<br />\r\nMike lives in between Paul and Larry.<br />\r\n<br />\r\nIf at least one lives to the right of Robert and Harry is not between Taud and Larry, then which one of the following statement is not correct ?</p>\r\n', '<p>Robert is not at the left end.</p>\r\n', '<p>Robert is in between Simon and Taud.</p>\r\n', '<p>Taud is in between Paul and Jack.</p>\r\n', '<p>There are three persons to the right of Paul.</p>\r\n', '8', 60, 25, '3'),
(1223, '<p>A, B, C, D and E are sitting on a bench. A is sitting next to B, C is sitting next to D, D is not sitting with E who is on the left end of the bench. C is on the second position from the right. A is to the right of B and E. A and C are sitting together. In which position A is sitting?</p>\r\n', '<p>Between B and D</p>\r\n', '<p>Between B and C</p>\r\n', '<p>Between E and D</p>\r\n', '<p>Between C and E</p>\r\n', '5', 35, 25, '2'),
(1227, '<p>One morning Udai and Vishal were talking to each other face to face at a crossing. If Vishal&#39;s shadow was exactly to the left of Udai, which direction was Udai facing?</p>\r\n', '<p>East</p>\r\n', '<p>West</p>\r\n', '<p>North</p>\r\n', '<p>South</p>\r\n', '1', 12, 25, '3'),
(1228, '<p>Y is in the East of X which is in the North of Z. If P is in the South of Z, then in which direction of Y, is P?</p>\r\n', '<p>North</p>\r\n', '<p>South</p>\r\n', '<p>South-East</p>\r\n', '<p>None of these</p>\r\n', '5', 35, 25, '4'),
(1229, '<p>The perimeter of a sector of a circle of radius 5.7m is 27.2m. Find&nbsp;the area of the sector.</p>\r\n', '<p>80.06 cm-sq</p>\r\n', '<p>135.09 cm-sq</p>\r\n', '<p>50 cm-sq</p>\r\n', '<p>None of these</p>\r\n', '3', 27, 25, '4'),
(1230, '<p>The sides of a triangle are 21, 20 and 13cm. Find the area of the larger triangle into which the given triangle is divided by the perpendicular upon the longest side from the opposite vertex.</p>\r\n', '<p>168 cm-sq</p>\r\n', '<p>144 cm-sq</p>\r\n', '<p>96 cm-sq</p>\r\n', '<p>144 cm-sq</p>\r\n', '4', 32, 25, '3'),
(1231, '<p>A cylinder and a cone having equal diameter of their bases are placed in the Qutub Minar one on the other, with the cylinder placed in the bottom. If their curved surface area are in the ratio 8:5,find the &nbsp;ratio of their heights. Assume the height of the cylinder to be equal to the radius of Qutub Minar.(Assume Qutub Minar having same radius throughout).</p>\r\n', '<p>3:4</p>\r\n', '<p>2:3</p>\r\n', '<p>1:4</p>\r\n', '<p>4:3</p>\r\n', '6', 54, 25, '1'),
(1232, '<p>The minute hand of a clock is 10cm long. Find the area of the face of the clock described by the minute hand between 9 a.m. and 9:35 a.m.</p>\r\n', '<p>244.4 cm-sq</p>\r\n', '<p>183.3 cm-sq</p>\r\n', '<p>366.6 cm-sq</p>\r\n', '<p>188.39 cm-sq</p>\r\n', '7', 35, 25, '2'),
(1233, '<p>A toy is in shape of a right circular cylinder with a hemisphere on one end and a cone on the other.The height and radius of the cylindrical part are 13 cm and 5 cm respectively.The radii of the hemispherical and conical parts are the same as that of the cylindrical part. Calculate the surface area of the toy if the height of conical part is 12 cm.</p>\r\n', '<p>1440 cm-sq</p>\r\n', '<p>1580 cm-sq</p>\r\n', '<p>385 cm-sq</p>\r\n', '<p>770 cm-sq</p>\r\n', '7', 52, 25, '4'),
(1234, '<p>A cylindrical container whose diameter is 12 cm and height is 15 cm, is filled with ice cream. The whole ice cream is distributed to 10 children in equal cones having hemispherical tops. If the height of the conical portion is twice the diameter of its base, find the diameter of the ice-cream cone.</p>\r\n', '<p>3 cm</p>\r\n', '<p>12 cm</p>\r\n', '<p>6 cm</p>\r\n', '<p>18 cm</p>\r\n', '7', 50, 25, '3'),
(1235, '<p>A cone, a hemisphere and a cylinder stand on equal bases and have the same height. What is the ratio of their volumes?</p>\r\n', '<p>2.5:1:3</p>\r\n', '<p>1.5:2:3</p>\r\n', '<p>2:1:3</p>\r\n', '<p>1:2:3</p>\r\n', '4', 33, 25, '4'),
(1236, '<p>A right elliptical cylinder full of petrol has its width elliptical side 2.4m and the shortest 1.6m. Its height is 7m.Find the time required to empty half the tank through a hose of diameter 4 cm if the rate of flow of petrol is 120 m/min.</p>\r\n', '<p>60 min</p>\r\n', '<p>70 min</p>\r\n', '<p>75 min</p>\r\n', '<p>90 min</p>\r\n', '7', 44, 25, '2'),
(1237, '<p>The dimensions of a field are 20 m by 9 m. A pit 10 m long, 4.5m wide and 3m deep is dug in one corner of the field and the earth removed has been evenly spread over the remaining area of the field. What will be the rise in the height of field as a result of this operation?</p>\r\n', '<p>4 m</p>\r\n', '<p>2 m</p>\r\n', '<p>1 m</p>\r\n', '<p>3 m</p>\r\n', '7', 42, 25, '1'),
(1238, '<p>A steel sphere of radius &nbsp;4 cm is drawn into a wire of diameter 4 mm. Find &nbsp;the length of the wire.</p>\r\n', '<p>42,660 mm</p>\r\n', '<p>10,665 mm</p>\r\n', '<p>14,220 mm</p>\r\n', '<p>21,3333 mm</p>\r\n', '6', 30, 25, '4'),
(1239, '<p>Three equal cubes are placed adjacently in a row. Find the ratio of total surface area of the new cuboid to that of the sum of the surface areas of the three cubes.</p>\r\n', '<p>7:9</p>\r\n', '<p>49:81</p>\r\n', '<p>27:23</p>\r\n', '<p>9:7</p>\r\n', '7', 40, 25, '1'),
(1240, '<p>Two circles touch internally. The sum of their areas in 116pie cm-sq and the distance between their centres is 6 cm. Find the radii of the circles.<br />\r\n&nbsp;</p>\r\n', '<p>9 cm,5 cm</p>\r\n', '<p>10 cm,5 cm</p>\r\n', '<p>10 cm,4 cm</p>\r\n', '<p>11 cm,4 cm</p>\r\n', '4', 25, 25, '3'),
(1241, '<p>The internal and external diameters of a hollow hemispherical vessel are 24 cm and 25 cm respectively. The cost of painting 1 cm-sq of the surface is Rs 0.05.find the total cost of painting the vessel all over.</p>\r\n', '<p>Rs 86.4</p>\r\n', '<p>Rs 184</p>\r\n', '<p>Rs 97.65</p>\r\n', '<p>Rs 96.28</p>\r\n', '4', 29, 25, '4'),
(1242, '<p>A solid sphere of radius 6 cm is melted into a hollow cylinder of uniform thickness.If the external radius of the base of the cylinder is 5 cm and its height is 32 cm, find the uniform thickness of the cylinder.</p>\r\n', '<p>3 cm</p>\r\n', '<p>3.5 cm</p>\r\n', '<p>1 cm</p>\r\n', '<p>2 cm</p>\r\n', '5', 33, 25, '3'),
(1243, '<p>If the curved surface area of a cone is thrice that of another cone and slant height of the second cone is thrice that of the first, find the ratio of the area of their base.<br />\r\n&nbsp;</p>\r\n', '<p>3:1</p>\r\n', '<p>81:1</p>\r\n', '<p>9:1</p>\r\n', '<p>27:1</p>\r\n', '5', 34, 25, '2'),
(1244, '<p>A circular tent is cylindrical to a height of 3mtrs and conical above it. If its diameter is 105 m and the slant height of the conical portion is 53m, calculate the length of the canvas 5 m wide to make the required tent.</p>\r\n', '<p>973.5 m</p>\r\n', '<p>3894 m</p>\r\n', '<p>1800 m</p>\r\n', '<p>1947 m</p>\r\n', '6', 35, 25, '4'),
(1245, '<p>Find the radius of the circle inscribed in a triangle whose sides are 8 cm,15 cm and 17 cm.</p>\r\n', '<p>4 cm</p>\r\n', '<p>3 cm</p>\r\n', '<p>7 cm</p>\r\n', '<p>5 cm</p>\r\n', '7', 37, 25, '2'),
(1246, '<p>A cuboid of dimension 24 cm x 9 cm x 8 cm is melted and smaller cubes of side 3 cm is formed. Find how many such cubes can be formed.</p>\r\n', '<p>54</p>\r\n', '<p>32</p>\r\n', '<p>64</p>\r\n', '<p>27</p>\r\n', '4', 30, 25, '3'),
(1247, '<p>A road that is 7 m wide surrounds a circular path whose circumference is 352 m.What will be the area of the road?</p>\r\n', '<p>2618 cm-sq</p>\r\n', '<p>1309 cm-sq</p>\r\n', '<p>5236 cm-sq</p>\r\n', '<p>654.5 cm-sq</p>\r\n', '4', 33, 25, '1'),
(1248, '<p>A cube whose edge is 20 cm long has circle on each of its faces painted black. What is the total area of the unpainted surface of the cube if the circles are of the largest area possible?</p>\r\n', '<p>331.33 cm-sq</p>\r\n', '<p>514.28 cm-sq</p>\r\n', '<p>85.71 cm-sq</p>\r\n', '<p>257.14 cm-sq</p>\r\n', '5', 35, 25, '2'),
(1249, '<p>A sphere of radius r has the same volume as that of a cone with a circular base of radius r. Find the height of cone.</p>\r\n', '<p>2r</p>\r\n', '<p>r/3</p>\r\n', '<p>(2/3)r</p>\r\n', '<p>4r</p>\r\n', '4', 23, 25, '4'),
(1250, '<p>A bicycle wheel makes 5000 revolutions in moving 11 km. What is the radius of the wheel?</p>\r\n', '<p>35 cm</p>\r\n', '<p>70 cm</p>\r\n', '<p>135 cm</p>\r\n', '<p>17.5 cm</p>\r\n', '3', 30, 25, '1'),
(1251, '<p>How many metres of cloth 5 m wide will be required to make a conical tent, the radius of whose base is 7 m and height is 24 m?</p>\r\n', '<p>220 m</p>\r\n', '<p>330 m</p>\r\n', '<p>55 m</p>\r\n', '<p>110 m</p>\r\n', '5', 33, 25, '4'),
(1252, '<p>A hollow spherical shell is made of a metal of density 4.9 g/cm cube.If &nbsp;its internal and external radii are 10 cm and 12 cm respectively, find the weight of the shell.</p>\r\n', '<p>14942.28 cm</p>\r\n', '<p>5016 cm</p>\r\n', '<p>1416.8 cm</p>\r\n', '<p>5667.1 cm</p>\r\n', '6', 36, 25, '1'),
(1253, '<p>A conical tent is to accommodate 10 persons. Each person must have 6m-sq space to sit and 30 m-cube of air to breath. What will be the height of the cone?</p>\r\n', '<p>75 m</p>\r\n', '<p>150 m</p>\r\n', '<p>37.5 m</p>\r\n', '<p>None of these</p>\r\n', '6', 34, 25, '4'),
(1254, '<p>In a swimming pool measuring 90m by 40 m, 150 men take a dip.If the average displacement of water by a man is 88 cubic metres, what will be the rise in water level?</p>\r\n', '<p>50 cm</p>\r\n', '<p>20 cm</p>\r\n', '<p>33.33 cm</p>\r\n', '<p>30 cm</p>\r\n', '5', 32, 25, '3'),
(1255, '<p>Three cubes each of volume of 216 m-cube are joined end to end. Find the surface area of the resulting figure.</p>\r\n', '<p>432 m-sq</p>\r\n', '<p>216 m-sq</p>\r\n', '<p>480 m-sq</p>\r\n', '<p>504 m-sq</p>\r\n', '7', 37, 25, '4'),
(1256, '<p>The length breadth and height of a room are in the ratio of 3:2:1.If its volume be 1296 m cube, find its breadth.</p>\r\n', '<p>18 m</p>\r\n', '<p>16 m</p>\r\n', '<p>12 m</p>\r\n', '<p>10 m</p>\r\n', '4', 28, 25, '3'),
(1257, '<p>If f(x)=1/x, g(x)=1/(1-x) and h(x)=x<sup>2</sup>, then find fogoh(2).</p>\r\n', '<p>1</p>\r\n', '<p>-1</p>\r\n', '<p>1/2</p>\r\n', '<p>None of these</p>\r\n', '2', 24, 25, '4'),
(1259, '<p>If f(x) is an odd function, then the graph y = f(x) will be symmetrical about?</p>\r\n', '<p>Origin</p>\r\n', '<p>x- axis</p>\r\n', '<p>y- axis</p>\r\n', '<p>Both axes</p>\r\n', '6', 13, 25, '1'),
(1260, '<p>Ten new television shows appeared during the month of September. Five of the shows were sitcoms, three were hour-long dramas, and two were news-magazine shows. By January, only seven of these new shows were still on the air. Five of the shows that remained were sitcoms.<br />\r\n<br />\r\nWhich is the correct statement of the following?</p>\r\n', '<p>Only one of the news-magazine shows remained on the air.</p>\r\n', '<p>Only one of the hour-long dramas remained on the air.</p>\r\n', '<p>At least one of the shows that was cancelled was an hour-long drama.</p>\r\n', '<p>Television viewers prefer sitcoms over hour-long dramas.</p>\r\n', '4', 32, 25, '3'),
(1261, '<p>56% of Y is 182. What is Y?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>350</p>\r\n', '<p>364</p>\r\n', '<p>325</p>\r\n', '<p>330</p>\r\n', '1', 19, 25, '3'),
(1262, '<p>Y has to score 40% marks to pass. He gets 20 marks and fails by 40 marks. The maximum marks of the exam are?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>100</p>\r\n', '<p>200</p>\r\n', '<p>150</p>\r\n', '<p>250</p>\r\n', '4', 26, 25, '3'),
(1263, '<p>Which of the following two ratios is greater 17:18 and 10:11?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>17/18</p>\r\n', '<p>10/11</p>\r\n', '<p>Both are same</p>\r\n', '<p>Cant be determined</p>\r\n', '1', 20, 25, '1'),
(1264, '<p>285 is summation of 3 numbers. Ratio between 2<sup>nd</sup>&nbsp;and 3<sup>rd</sup>&nbsp;numbers is 6:5. Ratio between 1<sup>st</sup>&nbsp;and 2<sup>nd</sup>&nbsp;numbers is 3:7. The 3<sup>rd</sup>&nbsp;number is?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>135</p>\r\n', '<p>150</p>\r\n', '<p>124</p>\r\n', '<p>105</p>\r\n', '3', 33, 25, '4'),
(1265, '<p>A man got Rs. 130 less, as simple interest, when he invested Rs. 2000 for 4 years as compared to investing Rs. 2250 for same duration. What is the rate of interest?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>12%</p>\r\n', '<p>13%</p>\r\n', '<p>12.5%</p>\r\n', '<p>14.5%</p>\r\n', '2', 26, 25, '2'),
(1266, '<p>&nbsp;In 3 years by compound interest, a sum becomes Rs. 900. But in 4 years by compound interest, the same sum becomes Rs. 1000. What is the sum and the rate of interest?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Rs. 625.20, 12.50%</p>\r\n', '<p>Rs. 656.10, 11.11%</p>\r\n', '<p>Rs. 686.50, 12.50%</p>\r\n', '<p>Rs. 695.80, 11.11%</p>\r\n', '4', 30, 25, '2'),
(1267, '<p>A walks from points Jammu to Delhi and at the same time B starts walking from Delhi to Jammu. After passing each other, they complete their journeys in 361 hours and 289 hours, respectively. Find the ratio of speed of A to that of B?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>17:19</p>\r\n', '<p>&nbsp;289:361</p>\r\n', '<p>361:289</p>\r\n', '<p>19:17</p>\r\n', '4', 35, 25, '1'),
(1268, '<p>Amit covers a distance at a speed of 24 km/hr in 6 min. If he wants to cover the same distance in 8 min, what should be his speed?<br />\r\n&nbsp;</p>\r\n', '<p>18 km/hr</p>\r\n', '<p>21 km/hr</p>\r\n', '<p>30 km/hr</p>\r\n', '<p>15 km/hr</p>\r\n', '2', 24, 25, '1'),
(1269, '<p>Ram is three times as old as his Sam. 2 years ago he was five times as old as Sam. What is the present age of Ram?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>12&nbsp;years</p>\r\n', '<p>14&nbsp;years</p>\r\n', '<p>18&nbsp;years</p>\r\n', '<p>24&nbsp;years</p>\r\n', '2', 24, 25, '1'),
(1270, '<p>The average age of a group of 4 friends is 36 years. The youngest friend amongst them is 6 years old. What was the average age of the group at the time of the birth of the youngest friend?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>36&nbsp;years</p>\r\n', '<p>38&nbsp;years</p>\r\n', '<p>28&nbsp;years</p>\r\n', '<p>40&nbsp;years</p>\r\n', '1', 23, 25, '4'),
(1271, '<p>If 12 men or 16 women can do a work in 172 days, how long will 21 men and 15 women to do the same work?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>64&nbsp;days</p>\r\n', '<p>60&nbsp;days</p>\r\n', '<p>84&nbsp;days</p>\r\n', '<p>92&nbsp;days</p>\r\n', '5', 34, 25, '1'),
(1272, '<p>Two pipes M and N can fill a tank in 22 hours and 33 hours respectively. In how much time will the tank be full, if both the pipes are opened simultaneously?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>18 hours</p>\r\n', '<p>19/22 hours</p>\r\n', '<p>1(1/11) hours</p>\r\n', '<p>3(1/5) hours</p>\r\n', '5', 30, 25, '4'),
(1273, '<p>3 pipes have diameters 2 cms, 3 cms and 4 cms. The ratio of water flowing through them is equal to ratio of the square of their diameters. The biggest pipe when open alone, can fill the entire pool in just 126 minutes. When all the pipes are opened together, the pool would be filled in how much time?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>2016/29 minutes</p>\r\n', '<p>2111/126 minutes</p>\r\n', '<p>215/63 minutes</p>\r\n', '<p>155 minutes</p>\r\n', '5', 33, 25, '1'),
(1274, '<p>Two trains A and B leave Kolkata for Sikkim at 8:00 pm and 8:30 pm respectively and run at 90 km/hr and 120 km/hr, respectively. At what distance from Kolkata, will the two trains meet?<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;450 kms</p>\r\n', '<p>180 kms</p>\r\n', '<p>150 kms</p>\r\n', '<p>&nbsp;360 kms</p>\r\n', '4', 28, 25, '2'),
(1275, '<p>Simran takes twice as long to swim up as to swim down the river and has a speed of 12 km/hr in still water. What is river&rsquo;s speed?<br />\r\n&nbsp;</p>\r\n', '<p>6 km/hr</p>\r\n', '<p>3&nbsp;km/hr</p>\r\n', '<p>8&nbsp;km/hr</p>\r\n', '<p>4&nbsp;km/hr</p>\r\n', '3', 27, 25, '4'),
(1276, '<p>&nbsp;Find average of natural numbers from 1 to 65?<br />\r\n&nbsp;</p>\r\n', '<p>33</p>\r\n', '<p>&nbsp;32.5</p>\r\n', '<p>130</p>\r\n', '<p>65</p>\r\n', '1', 16, 25, '1'),
(1277, '<p>In a race, average speed of total 75 bikes (red and green) is 35km/hr. The average speed of red bikes is 55 km/hr. If average speed of green bikes is 30km/hr, then how many green bikes are there?<br />\r\n&nbsp;</p>\r\n', '<p>70</p>\r\n', '<p>60</p>\r\n', '<p>45</p>\r\n', '<p>50</p>\r\n', '4', 30, 25, '2'),
(1278, '<p>In a palace, supplies are available for 35 days for only 75 people. 15 Guests arrive in the palace for vacation on day 1 itself. For how many days will these supplies be sufficient for all these people?<br />\r\n&nbsp;</p>\r\n', '<p>90 days</p>\r\n', '<p>&nbsp;11.25</p>\r\n', '<p>42 days</p>\r\n', '<p>22.5 days</p>\r\n', '4', 30, 25, '3'),
(1280, '<p>Ramesh can do a work in 15 days. Vijay and Ramesh together do the same work in 10days. They received Rs. 1155 for that work. What is share of Ramesh and Vijay?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Ramesh = Rs. 770; Vijay = Rs. 385</p>\r\n', '<p>Ramesh = Rs. 605; Vijay = Rs. 550</p>\r\n', '<p>Ramesh = Rs. 550; Vijay = Rs. 605</p>\r\n', '<p>Ramesh = Rs. 385; Vijay = Rs. 770</p>\r\n', '5', 30, 25, '1'),
(1281, '<p>&nbsp;Only if business continues to expand can it ___ enough new jobs to make up for those that will be ___ by automation.&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>produce, required</p>\r\n', '<p>invent, introduced</p>\r\n', '<p>create, eliminated</p>\r\n', '<p>repeal, reduced</p>\r\n', '2', 15, 25, '3'),
(1282, '<p>The officer has stayed away from _____ populism such as raising the income tax exemption limit.&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>restricted</p>\r\n', '<p>classified</p>\r\n', '<p>overt</p>\r\n', '<p>furtive</p>\r\n', '2', 15, 25, '3'),
(1283, '<p>&nbsp;The government must now _________ its seriousness by moving away from the _________ policies of the past.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>ensconce, conscientious</p>\r\n', '<p>masquerade, equitable</p>\r\n', '<p>shelter, scrupulous</p>\r\n', '<p>demonstrate, flawed</p>\r\n', '3', 12, 25, '4'),
(1284, '<p>We are witnessing an industry that is__________ on poverty, mostly.&nbsp;<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>leading</p>\r\n', '<p>superior</p>\r\n', '<p>thriving</p>\r\n', '<p>discord</p>\r\n', '2', 10, 25, '3'),
(1285, '<p>What is the angle between the hands of the clock at 3:40?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>240&deg;</p>\r\n', '<p>110&deg;</p>\r\n', '<p>130&deg;</p>\r\n', '<p>190&deg;</p>\r\n', '4', 15, 25, '3'),
(1286, '<p>A person sold a stove for Rs. 423 and incurred a loss of 6%. At what price would it be sold so as to earn a profit of 8%?&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Rs. 525</p>\r\n', '<p>Rs. 500</p>\r\n', '<p>Rs. 490</p>\r\n', '<p>Rs. 486</p>\r\n', '3', 30, 25, '4'),
(1287, '<p>A fruit seller buys lemons at 2 for a rupee and sells then at 5 for three rupees. His gain percent is&nbsp;<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>10%</p>\r\n', '<p>15%</p>\r\n', '<p>20%</p>\r\n', '<p>25%</p>\r\n', '2', 24, 25, '3'),
(1288, '<p>A sells a car to B at 10% loss. If B sells it for Rs. 54000 and gains 20%, the cost price of the car for A was&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;Rs. 25000</p>\r\n', '<p>Rs. 50000</p>\r\n', '<p>Rs. 37500</p>\r\n', '<p>Rs. 60000</p>\r\n', '4', 33, 25, '2'),
(1289, '<p>By what least number should we multiply 1008 to make it a perfect square?&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>8</p>\r\n', '<p>7</p>\r\n', '<p>2</p>\r\n', '<p>5</p>\r\n', '3', 20, 25, '2'),
(1291, '<p>Choose the correct alternative which can be substituted for the below given word/ sentence.<br />\r\n<br />\r\nThe life history of a person written by an author is called as ___________&nbsp;<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Autobiography</p>\r\n', '<p>History</p>\r\n', '<p>&nbsp;Bibliography</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Biography</p>\r\n', '1', 10, 25, '4'),
(1292, '<p>&nbsp;Choose the correct alternative which can be substituted for the below given word/ sentence.<br />\r\n<br />\r\nA person who eats too much is called as _______&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Glutton</p>\r\n', '<p>Nibbler</p>\r\n', '<p>Cannibal</p>\r\n', '<p>Omnivore</p>\r\n', '1', 15, 25, '1'),
(1293, '<p>Author&nbsp;is related to&nbsp;Book&nbsp;as&nbsp;Choreographer&nbsp;is related to _____?&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Drama</p>\r\n', '<p>Ballet</p>\r\n', '<p>Masque</p>\r\n', '<p>Opera</p>\r\n', '2', 12, 25, '2'),
(1294, '<p>Labourer&nbsp;is related to&nbsp;Wages&nbsp;as&nbsp;Entrepreneur&nbsp;is related to _____?&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Loan</p>\r\n', '<p>Interest</p>\r\n', '<p>Profit</p>\r\n', '<p>Taxes</p>\r\n', '2', 12, 25, '3'),
(1295, '<p>Kindle&nbsp;is related to&nbsp;Burn&nbsp;as&nbsp;Anger&nbsp;is related to _____?&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Resentful</p>\r\n', '<p>Determined</p>\r\n', '<p>Annoyed</p>\r\n', '<p>Furious</p>\r\n', '3', 12, 25, '4'),
(1296, '<p>&nbsp;<em>Jade</em>&nbsp;is related to&nbsp;<em>Green</em>&nbsp;as&nbsp;<em>Garnet</em>&nbsp;is related to _____?&nbsp;<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Blue</p>\r\n', '<p>Red</p>\r\n', '<p>Orange</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Yellow</p>\r\n', '3', 12, 25, '2'),
(1297, '<p>Find the least number which is exactly divisible by 12, 15, and 20.&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>40</p>\r\n', '<p>50</p>\r\n', '<p>60</p>\r\n', '<p>80</p>\r\n', '1', 30, 25, '3'),
(1298, '<p>Find H.C.F. of 0.63 and 1.05<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>0.21&nbsp;</p>\r\n', '<p>0.28&nbsp;</p>\r\n', '<p>0.56</p>\r\n', '<p>0.84</p>\r\n', '3', 30, 25, '1'),
(1299, '<p><strong>&nbsp;</strong>Find L.C.M. of 1.05 and 2.1&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>1.3</p>\r\n', '<p>1.25</p>\r\n', '<p>2.1</p>\r\n', '<p>4.30</p>\r\n', '3', 33, 25, '3'),
(1300, '<p>In C++ ..................... operator is used for Dynamic memory allocation.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Scope resolution<br />\r\n&nbsp;</p>\r\n', '<p>Conditional<br />\r\n&nbsp;</p>\r\n', '<p>New<br />\r\n&nbsp;</p>\r\n', '<p>Membership access</p>\r\n', '4', 32, 6, '3'),
(1301, '<p>Operators such as ...................... cannot be overloaded.<br />\r\n&nbsp;</p>\r\n', '<p>+<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>++<br />\r\n&nbsp;</p>\r\n', '<p>: :<br />\r\n&nbsp;</p>\r\n', '<p>= =</p>\r\n', '1', 32, 6, '3'),
(1302, '<p>The ...................... objects have values that can be tested for various error conditions.<br />\r\n&nbsp;</p>\r\n', '<p>osstream</p>\r\n', '<p>ofstream</p>\r\n', '<p>stream</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ifstream</p>\r\n', '6', 32, 6, '4'),
(1303, '<p>&nbsp;The first index number in an array starts with ............................ and the index number of an array of size n will be ............<br />\r\n&nbsp;</p>\r\n', '<p>0, n-1</p>\r\n', '<p>1, n-1</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0, n<br />\r\n&nbsp;</p>\r\n', '<p>1, n</p>\r\n', '1', 30, 6, '1'),
(1304, '<p>Which allows you to create a derived class that inherits properties from more than one base class?<br />\r\n&nbsp;</p>\r\n', '<p>Multilevel inheritance&nbsp;</p>\r\n', '<p>Multiple inheritance&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hybrid Inheritance&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Hierarchical Inheritance&nbsp;</p>\r\n', '3', 28, 6, '2'),
(1305, '<p>Which feature in OOP allows reusing code?&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Polymorphism&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Inheritance&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Encapsulation&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Data hiding&nbsp;</p>\r\n', '5', 28, 6, '2'),
(1306, '<p>What does C++ append to the end of a string literal constant?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a space&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>a number sign (#)<br />\r\n&nbsp;</p>\r\n', '<p>an asterisk (*)&nbsp;<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>a null character&nbsp;</p>\r\n', '4', 25, 6, '4'),
(1307, '<p>Which of the following operators could be overloaded?<br />\r\n&nbsp;</p>\r\n', '<p>Size of<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;+<br />\r\n&nbsp;</p>\r\n', '<p>+=<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>::</p>\r\n', '2', 34, 6, '2'),
(1308, '<p>Which of the following keywords are used to control access to a class member?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>default<br />\r\n&nbsp;</p>\r\n', '<p>break<br />\r\n&nbsp;</p>\r\n', '<p>protected<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>goto</p>\r\n', '1', 30, 6, '3'),
(1309, '<p>There is a unique function in C++ program by where all C++ programs start their execution with ........</p>\r\n', '<p>start()</p>\r\n', '<p>begin()</p>\r\n', '<p>main()</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>output()</p>\r\n', '5', 30, 6, '3'),
(1310, '<p>Which of the following is not a jump statement in C++?</p>\r\n', '<p>break</p>\r\n', '<p>Goto</p>\r\n', '<p>Exit</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Switch&nbsp;</p>\r\n', '1', 26, 6, '4'),
(1311, '<p>The memory address of the first element of an array is called ...................</p>\r\n', '<p>floor address</p>\r\n', '<p>foundation address</p>\r\n', '<p>first address</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>base address</p>\r\n', '1', 25, 6, '4'),
(1312, '<p>In C++ Program, inline functions In CPP, members of a class are ______ by default.&nbsp;</p>\r\n', '<p>Public<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Private<br />\r\n&nbsp;</p>\r\n', '<p>Protected<br />\r\n&nbsp;</p>\r\n', '<p>Static</p>\r\n', '2', 33, 6, '2'),
(1313, '<p>Which of the following is not a looping statement in C?<br />\r\n&nbsp;</p>\r\n', '<p>while<br />\r\n&nbsp;</p>\r\n', '<p>until<br />\r\n&nbsp;</p>\r\n', '<p>do<br />\r\n&nbsp;</p>\r\n', '<p>for</p>\r\n', '2', 27, 6, '2'),
(1315, '<p>Which of the following is selection statement in C++?<br />\r\n&nbsp;</p>\r\n', '<p>break<br />\r\n&nbsp;</p>\r\n', '<p>goto<br />\r\n&nbsp;</p>\r\n', '<p>exit<br />\r\n&nbsp;</p>\r\n', '<p>switch</p>\r\n', '2', 29, 6, '4'),
(1316, '<p>The continue statement<br />\r\n&nbsp;</p>\r\n', '<p>resumes the program if it is hanged<br />\r\n&nbsp;</p>\r\n', '<p>resumes the program if it was break was applied<br />\r\n&nbsp;</p>\r\n', '<p>skips the rest of the loop in current iteration<br />\r\n&nbsp;</p>\r\n', '<p>all of above</p>\r\n', '3', 30, 6, '3'),
(1317, '<p>Which of the following header file does not exist?<br />\r\n&nbsp;</p>\r\n', '<p>&lt;iostream&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;string&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;sstring&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;sstream&gt;</p>\r\n', '1', 30, 6, '3'),
(1318, '<p>Which of the following is not a valid relational operator?<br />\r\n&nbsp;</p>\r\n', '<p>==<br />\r\n&nbsp;</p>\r\n', '<p>=&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&gt;=<br />\r\n&nbsp;</p>\r\n', '<p>&gt;=</p>\r\n', '1', 28, 6, '2'),
(1320, '<p>The body of a C++ function is surrounded by _____&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>parentheses&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>angle brackets&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>curly brackets&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>square brackets<br />\r\n&nbsp;</p>\r\n', '2', 25, 6, '3'),
(1321, '<p>The major goal of inheritance in C++ is<br />\r\n&nbsp;</p>\r\n', '<p>To facilitate the conversion of data types<br />\r\n&nbsp;</p>\r\n', '<p>To help modular programming<br />\r\n&nbsp;</p>\r\n', '<p>To facilitate the re usability of code<br />\r\n&nbsp;</p>\r\n', '<p>To extend the capabilities of a class</p>\r\n', '2', 32, 6, '3'),
(1322, '<p>Which of the following is not a reserve keyword in C++?<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>mutable<br />\r\n&nbsp;</p>\r\n', '<p>default<br />\r\n&nbsp;</p>\r\n', '<p>readable<br />\r\n&nbsp;</p>\r\n', '<p>volatile</p>\r\n', '2', 32, 6, '3'),
(1323, '<p>The size of the following variable is not 4 bytes in 32 bit systems<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>int<br />\r\n&nbsp;</p>\r\n', '<p>long int<br />\r\n&nbsp;</p>\r\n', '<p>short int<br />\r\n&nbsp;</p>\r\n', '<p>float</p>\r\n', '2', 32, 6, '3'),
(1324, '<p>To increase the value of c by one which of the following statement is wrong?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>c++;<br />\r\n&nbsp;</p>\r\n', '<p>c = c + 1;<br />\r\n&nbsp;</p>\r\n', '<p>c + 1 =&gt; c;<br />\r\n&nbsp;</p>\r\n', '<p>c += 1</p>\r\n', '2', 33, 6, '3'),
(1325, '<p>The result of a Relational operation is always<br />\r\n&nbsp;</p>\r\n', '<p>either True or False<br />\r\n&nbsp;</p>\r\n', '<p>is less than or is more than<br />\r\n&nbsp;</p>\r\n', '<p>is equal or less or more<br />\r\n&nbsp;</p>\r\n', '<p>All of these</p>\r\n', '2', 28, 6, '1'),
(1326, '<p>When does the code block following while(x&lt;100) execute?<br />\r\n&nbsp;</p>\r\n', '<p>When x is less than one hundred<br />\r\n&nbsp;</p>\r\n', '<p>When x is greater than one hundred<br />\r\n&nbsp;</p>\r\n', '<p>When x is equal to one hundred<br />\r\n&nbsp;</p>\r\n', '<p>While it wishes</p>\r\n', '2', 29, 6, '1'),
(1327, '<p>Scope resolution operator is used______</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>to resolve the scope of global variables only&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>to resolve the scope of functions of the classes only<br />\r\n&nbsp;</p>\r\n', '<p>to resolve the scope of global variables as well as functions of the classes<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '2', 25, 6, '3'),
(1328, '<p>What is the correct value to return to the operating system upon the successful completion of a program?<br />\r\n&nbsp;</p>\r\n', '<p>-1<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>Programs do not return a value</p>\r\n', '2', 30, 6, '3'),
(1329, '<p>What is the only function all C++ programs must contain?<br />\r\n&nbsp;</p>\r\n', '<p>start()<br />\r\n&nbsp;</p>\r\n', '<p>system()<br />\r\n&nbsp;</p>\r\n', '<p>main()<br />\r\n&nbsp;</p>\r\n', '<p>program()</p>\r\n', '2', 30, 6, '3'),
(1331, '<p>What punctuation ends most lines of C++ code?<br />\r\n&nbsp;</p>\r\n', '<p>. (dot)<br />\r\n&nbsp;</p>\r\n', '<p>; (semi-colon)<br />\r\n&nbsp;</p>\r\n', '<p>: (colon)<br />\r\n&nbsp;</p>\r\n', '<p>&#39; (single quote)</p>\r\n', '2', 20, 6, '2'),
(1332, '<p>Which of the following is a correct comment?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;*/ Comments */<br />\r\n&nbsp;</p>\r\n', '<p>** Comment **<br />\r\n&nbsp;</p>\r\n', '<p>/* Comment */<br />\r\n&nbsp;</p>\r\n', '<p>{ Comment }</p>\r\n', '2', 30, 6, '3'),
(1333, '<p>Which of the following is not a correct variable type?<br />\r\n&nbsp;</p>\r\n', '<p>float<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>real<br />\r\n&nbsp;</p>\r\n', '<p>int<br />\r\n&nbsp;</p>\r\n', '<p>double</p>\r\n', '2', 30, 6, '2'),
(1334, '<p>Which of the following is the correct operator to compare two variables?<br />\r\n&nbsp;</p>\r\n', '<p>:=<br />\r\n&nbsp;</p>\r\n', '<p>=<br />\r\n&nbsp;</p>\r\n', '<p>equal<br />\r\n&nbsp;</p>\r\n', '<p>==</p>\r\n', '2', 30, 6, '4'),
(1335, '<p>Which of the following is the boolean operator for logical-and?<br />\r\n&nbsp;</p>\r\n', '<p>&amp;<br />\r\n&nbsp;</p>\r\n', '<p>&amp;&amp;<br />\r\n&nbsp;</p>\r\n', '<p>|<br />\r\n&nbsp;</p>\r\n', '<p>|&amp;</p>\r\n', '2', 28, 6, '2'),
(1337, '<p>Which of the following is false for switch statement in C++?<br />\r\n&nbsp;</p>\r\n', '<p>It uses labels instead of blocks<br />\r\n&nbsp;</p>\r\n', '<p>we need to put break statement at the end of the group of statement of a condition<br />\r\n&nbsp;</p>\r\n', '<p>we can put range for case such as case 1..3<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '2', 32, 6, '3'),
(1338, '<p>The &ldquo;return 0;&rdquo; statement in main function indicates</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The program did nothing; completed 0 tasks<br />\r\n&nbsp;</p>\r\n', '<p>The program worked as expected without any errors during its execution<br />\r\n&nbsp;</p>\r\n', '<p>not to end the program yet.<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '2', 28, 6, '2'),
(1339, '<p>Looping in a program means<br />\r\n&nbsp;</p>\r\n', '<p>Jumping to the specified branch of program<br />\r\n&nbsp;</p>\r\n', '<p>Repeat the specified lines of code<br />\r\n&nbsp;</p>\r\n', '<p>Both of above<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '2', 30, 6, '2'),
(1340, '<p>In case of pass by reference<br />\r\n&nbsp;</p>\r\n', '<p>The values of those variables are passed to the function so that it can manipulate them<br />\r\n&nbsp;</p>\r\n', '<p>The location of variable in memory is passed to the function so that it can use the same memory area for its processing<br />\r\n&nbsp;</p>\r\n', '<p>The function declaration should contain ampersand (&amp; &nbsp;in its type declaration)<br />\r\n&nbsp;</p>\r\n', '<p>All of above</p>\r\n', '2', 31, 6, '2'),
(1341, '<p>Overloaded functions are<br />\r\n&nbsp;</p>\r\n', '<p>Very long functions that can hardly run<br />\r\n&nbsp;</p>\r\n', '<p>One function containing another one or more functions inside it.<br />\r\n&nbsp;</p>\r\n', '<p>Two or more functions with the same name but different number of parameters or type.<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '2', 30, 6, '4'),
(1343, '<p>What is purpose of abstract class ?<br />\r\n&nbsp;</p>\r\n', '<p>to provide help with database connectivity.<br />\r\n&nbsp;</p>\r\n', '<p>to provide data input to other classes.<br />\r\n&nbsp;</p>\r\n', '<p>to provide security to other classes.<br />\r\n&nbsp;</p>\r\n', '<p>to provide an appropriate base class from which other classes can inherit.</p>\r\n', '2', 25, 6, '4'),
(1344, '<p>How we can define member function outside the class ?<br />\r\n&nbsp;</p>\r\n', '<p>Using union<br />\r\n&nbsp;</p>\r\n', '<p>Using structure<br />\r\n&nbsp;</p>\r\n', '<p>Using pointers<br />\r\n&nbsp;</p>\r\n', '<p>Using scope resolution</p>\r\n', '3', 30, 6, '4'),
(1345, '<p>Which among following is correct way of declaring object of a class ?<br />\r\n&nbsp;</p>\r\n', '<p>Classname Objectname;<br />\r\n&nbsp;</p>\r\n', '<p>Class Classname Objectname;<br />\r\n&nbsp;</p>\r\n', '<p>Class Classname Object Objectname;<br />\r\n&nbsp;</p>\r\n', '<p>Classname Object Objectname;</p>\r\n', '3', 33, 6, '1'),
(1346, '<p>How we can access data members using objects ?<br />\r\n&nbsp;</p>\r\n', '<p>object@datamember<br />\r\n&nbsp;</p>\r\n', '<p>object*datamember<br />\r\n&nbsp;</p>\r\n', '<p>object-&gt;datamember<br />\r\n&nbsp;</p>\r\n', '<p>object.datamember</p>\r\n', '3', 32, 6, '4'),
(1347, '<p>What is true about Constructor ?<br />\r\n&nbsp;</p>\r\n', '<p>Its name is plural of class name.<br />\r\n&nbsp;</p>\r\n', '<p>Its name has * symbol before it.<br />\r\n&nbsp;</p>\r\n', '<p>Its name is same as of class name.<br />\r\n&nbsp;</p>\r\n', '<p>Its name has # symbol before it.</p>\r\n', '3', 27, 6, '3'),
(1348, '<p>&nbsp;A variable is defined within a block in a body of a function. Which of the following are true ?<br />\r\n&nbsp;</p>\r\n', '<p>It is visible from the point of definition to the end of the program.<br />\r\n&nbsp;</p>\r\n', '<p>It is visible throughout the function.<br />\r\n&nbsp;</p>\r\n', '<p>It is visible from the point of definition to the end of the block.<br />\r\n&nbsp;</p>\r\n', '<p>It is visible throughout the block.</p>\r\n', '3', 34, 6, '2'),
(1349, '<p>The major goal of inheritance in C++ is ?<br />\r\n&nbsp;</p>\r\n', '<p>To facilitate the reusability of code<br />\r\n&nbsp;</p>\r\n', '<p>To help modular programming<br />\r\n&nbsp;</p>\r\n', '<p>To facilitate the conversion of data types<br />\r\n&nbsp;</p>\r\n', '<p>To extend the capabilities of a class</p>\r\n', '3', 30, 6, '1'),
(1350, '<p>Which of the following keywords are used to control access to a class member ?<br />\r\n&nbsp;</p>\r\n', '<p>protected<br />\r\n&nbsp;</p>\r\n', '<p>switch<br />\r\n&nbsp;</p>\r\n', '<p>goto<br />\r\n&nbsp;</p>\r\n', '<p>for</p>\r\n', '3', 30, 6, '1'),
(1351, '<p>Which of the following cannot be passed to a function ?<br />\r\n&nbsp;</p>\r\n', '<p>Array</p>\r\n', '<p>Reference variable</p>\r\n', '<p>Object</p>\r\n', '<p>File</p>\r\n', '3', 30, 6, '4'),
(1352, '<p>Among following which will give the size of object or type ?<br />\r\n&nbsp;</p>\r\n', '<p>Calloc<br />\r\n&nbsp;</p>\r\n', '<p>Malloc<br />\r\n&nbsp;</p>\r\n', '<p>Sizeof<br />\r\n&nbsp;</p>\r\n', '<p>Realloc</p>\r\n', '3', 30, 6, '3'),
(1353, '<p>Enumerators are stored by the compiler in ?<br />\r\n&nbsp;</p>\r\n', '<p>string<br />\r\n&nbsp;</p>\r\n', '<p>integer<br />\r\n&nbsp;</p>\r\n', '<p>float<br />\r\n&nbsp;</p>\r\n', '<p>any of above</p>\r\n', '3', 30, 6, '2'),
(1354, '<p>&amp; operator is ?<br />\r\n&nbsp;</p>\r\n', '<p>address operator<br />\r\n&nbsp;</p>\r\n', '<p>indirection operator<br />\r\n&nbsp;</p>\r\n', '<p>logical and<br />\r\n&nbsp;</p>\r\n', '<p>logical or</p>\r\n', '3', 30, 6, '1'),
(1355, '<p>Inheritance is referred to as<br />\r\n&nbsp;</p>\r\n', '<p>&ldquo;is a&rdquo; relationship<br />\r\n&nbsp;</p>\r\n', '<p>&quot;have a&quot; relationship<br />\r\n&nbsp;</p>\r\n', '<p>both of above<br />\r\n&nbsp;</p>\r\n', '<p>none of above</p>\r\n', '3', 30, 6, '1'),
(1356, '<p>An explicitly defined destructor function<br />\r\n&nbsp;</p>\r\n', '<p>may be virtual<br />\r\n&nbsp;</p>\r\n', '<p>may not be virtual<br />\r\n&nbsp;</p>\r\n', '<p>will always be virtual<br />\r\n&nbsp;</p>\r\n', '<p>will never be virtual</p>\r\n', '3', 30, 6, '1'),
(1359, '<p>The function used to define the task assigned to an operator is ?<br />\r\n&nbsp;</p>\r\n', '<p>Virtual function<br />\r\n&nbsp;</p>\r\n', '<p>Static function<br />\r\n&nbsp;</p>\r\n', '<p>Operator function<br />\r\n&nbsp;</p>\r\n', '<p>Friend function</p>\r\n', '3', 30, 6, '3'),
(1360, '<p>Which operators can not be overloaded ?<br />\r\n&nbsp;</p>\r\n', '<p>Binary operator<br />\r\n&nbsp;</p>\r\n', '<p>Ternary operator<br />\r\n&nbsp;</p>\r\n', '<p>Unary operator<br />\r\n&nbsp;</p>\r\n', '<p>All can be overloaded</p>\r\n', '3', 30, 6, '2'),
(1361, '<p>Classes in c++ are ?<br />\r\n&nbsp;</p>\r\n', '<p>Fundamental data type<br />\r\n&nbsp;</p>\r\n', '<p>Primitive data type<br />\r\n&nbsp;</p>\r\n', '<p>Desired data type<br />\r\n&nbsp;</p>\r\n', '<p>Not defined</p>\r\n', '3', 30, 6, '3'),
(1362, '<p>Which of the following statements is false ?<br />\r\n&nbsp;</p>\r\n', '<p>Using typedef does not replace the standard C++ data type name with the new name<br />\r\n&nbsp;</p>\r\n', '<p>The new name defined by typedef, can be used as a type for another typedef<br />\r\n&nbsp;</p>\r\n', '<p>typedef defines new data types<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 32, 6, '3'),
(1363, '<p>&nbsp;A constructor function is generally defined&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>In the private section of a class<br />\r\n&nbsp;</p>\r\n', '<p>In the public section of a class<br />\r\n&nbsp;</p>\r\n', '<p>In the protected section of a class<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 32, 6, '2'),
(1366, '<p>To perfor file input / output operation in C++, we must include which header file ?&nbsp;</p>\r\n', '<p>&lt;fiostream&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;ifstream&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;ofstream&gt;<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>&lt;fstream&gt;</p>\r\n', '3', 30, 6, '4'),
(1367, '<p>&nbsp;An exceptio in C++ can be generated using which keywords.&nbsp;</p>\r\n', '<p>thrown<br />\r\n&nbsp;</p>\r\n', '<p>threw<br />\r\n&nbsp;</p>\r\n', '<p>throw<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>throws</p>\r\n', '3', 36, 6, '3'),
(1368, '<p>Which of the following statement is correct?<br />\r\n&nbsp;</p>\r\n', '<p>Overloaded functions can have at most one default argument.<br />\r\n&nbsp;</p>\r\n', '<p>An overloaded function cannot have default argument.<br />\r\n&nbsp;</p>\r\n', '<p>All arguments of an overloaded function can be default.<br />\r\n&nbsp;</p>\r\n', '<p>A function if overloaded more than once cannot have default argument.</p>\r\n', '4', 32, 6, '3'),
(1369, '<p>Which of the following statement will be correct if the function has three arguments passed to it?<br />\r\n&nbsp;</p>\r\n', '<p>The trailing argument will be the default argument.<br />\r\n&nbsp;</p>\r\n', '<p>The first argument will be the default argument.<br />\r\n&nbsp;</p>\r\n', '<p>The middle argument will be the default argument.<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>All the argument will be the default argument.</p>\r\n', '4', 33, 6, '1'),
(1370, '<p>Which of the followings is/are pointer&ndash;to-member declarator ?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>-&gt;*&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>.*&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>::*&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>both a and b&nbsp;</p>\r\n', '4', 28, 6, '3'),
(1371, '<p>&nbsp;Logical expressions produce ____________ type results.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>explicit&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>garbage&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>bool&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>static</p>\r\n', '4', 30, 6, '3'),
(1372, '<p>A class can contain objects of other classes and this phenomenon is called__________</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Relationship&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Object Association&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Containership&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>None of these&nbsp;</p>\r\n', '4', 33, 6, '3'),
(1373, '<p>Find out the error in following block of code.<br />\r\nIf (x = 100)<br />\r\nCout &lt;&lt; &ldquo;x is 100&rdquo;;<br />\r\n&nbsp;</p>\r\n', '<p>100 should be enclosed in quotations<br />\r\n&nbsp;</p>\r\n', '<p>There is no semicolon at the end of first line<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Equals to operator mistake<br />\r\n&nbsp;</p>\r\n', '<p>Variable x should not be inside quotation</p>\r\n', '4', 32, 6, '3'),
(1374, '<p>&nbsp;A virtual base class ?<br />\r\n&nbsp;</p>\r\n', '<p>is qualified as virtual in base class definition.<br />\r\n&nbsp;</p>\r\n', '<p>do not qualified as virtual in base class definition.<br />\r\n&nbsp;</p>\r\n', '<p>allows to inherit more than one copy of the base class members.<br />\r\n&nbsp;</p>\r\n', '<p>strict the path of inheritance.<br />\r\n&nbsp;</p>\r\n', '4', 27, 6, '1'),
(1375, '<p>A class having no public constructors is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A public protected class<br />\r\n&nbsp;</p>\r\n', '<p>A public class<br />\r\n&nbsp;</p>\r\n', '<p>A protected class<br />\r\n&nbsp;</p>\r\n', '<p>A private class</p>\r\n', '4', 32, 6, '4'),
(1376, '<p>&lt;&lt; operator is ?<br />\r\n&nbsp;</p>\r\n', '<p>stream extraction operator<br />\r\n&nbsp;</p>\r\n', '<p>stream insertion operator<br />\r\n&nbsp;</p>\r\n', '<p>left shift operator<br />\r\n&nbsp;</p>\r\n', '<p>right shift operator</p>\r\n', '4', 22, 6, '2'),
(1377, '<p>In C++ Functions can returns ?<br />\r\n&nbsp;</p>\r\n', '<p>arrays<br />\r\n&nbsp;</p>\r\n', '<p>reference<br />\r\n&nbsp;</p>\r\n', '<p>objects<br />\r\n&nbsp;</p>\r\n', '<p>all of above</p>\r\n', '4', 28, 6, '4'),
(1378, '<p>What among following is a generic class ?<br />\r\n&nbsp;</p>\r\n', '<p>Function Template<br />\r\n&nbsp;</p>\r\n', '<p>Class Template<br />\r\n&nbsp;</p>\r\n', '<p>Inherited Template<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '4', 28, 6, '2'),
(1379, '<p>When a copy of an entire object is passed to a function, then it is referred to as</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Pass-by-reference<br />\r\n&nbsp;</p>\r\n', '<p>Pass-by-pointer<br />\r\n&nbsp;</p>\r\n', '<p>Pass-by-value<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 32, 6, '3'),
(1380, '<p>Consider the statements a = 13 ; c = a&lt;&lt; 3 ; (a and c are integers). The result assigned to the integer c is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>104<br />\r\n&nbsp;</p>\r\n', '<p>114<br />\r\n&nbsp;</p>\r\n', '<p>140<br />\r\n&nbsp;</p>\r\n', '<p>14</p>\r\n', '4', 34, 6, '1'),
(1381, '<p>What does C++ append to the end of a string literal constant?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a space<br />\r\n&nbsp;</p>\r\n', '<p>a number sign (#)<br />\r\n&nbsp;</p>\r\n', '<p>an asterisk (*)<br />\r\n&nbsp;</p>\r\n', '<p>a null character</p>\r\n', '4', 25, 6, '4'),
(1382, '<p>The statement int num[2][3]={ {1,2}, {3,4}, {5, 6} };</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>assigns a value 2 to num[1][2]<br />\r\n&nbsp;</p>\r\n', '<p>assigns a value 4 to num[1][2]<br />\r\n&nbsp;</p>\r\n', '<p>gives an error message<br />\r\n&nbsp;</p>\r\n', '<p>assigns a value 3 to num[1][2]</p>\r\n', '4', 35, 6, '3'),
(1383, '<p>The statement fwrite ( (char*)&amp;objl, sizeof(objl) );</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>writes the member functions of objl to fl<br />\r\n&nbsp;</p>\r\n', '<p>writes the data in objl to fl<br />\r\n&nbsp;</p>\r\n', '<p>writes the member functions and me data of obj 1 to fl<br />\r\n&nbsp;</p>\r\n', '<p>writes the address of objl to fl</p>\r\n', '4', 36, 6, '2'),
(1384, '<p>Which of the following type casts will convert an Integer variable named amount to a Double type?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(double) amount<br />\r\n&nbsp;</p>\r\n', '<p>(int to double) amount<br />\r\n&nbsp;</p>\r\n', '<p>int to double(amount)<br />\r\n&nbsp;</p>\r\n', '<p>int (amount) to double</p>\r\n', '4', 38, 6, '1'),
(1385, '<p>You have assigned the address of Value to the pointer P, Which statement will display the value stored in Value?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>cout &lt;&lt; P;<br />\r\n&nbsp;</p>\r\n', '<p>cout &lt;&lt; *Value;<br />\r\n&nbsp;</p>\r\n', '<p>cout &lt;&lt; &amp;P;<br />\r\n&nbsp;</p>\r\n', '<p>cout &lt;&lt; * &lt; P;</p>\r\n', '4', 40, 6, '4');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(1386, '<p>&nbsp;Regarding following statement which of the statements is true?</p>\r\n\r\n<p>const int pathwidth=100;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Declares a variable pathwidth with 100 as its initial value<br />\r\n&nbsp;</p>\r\n', '<p>Declares a construction pathwidth with 100 as its initial value<br />\r\n&nbsp;</p>\r\n', '<p>Declares a constant pathwidth whose value will be 100<br />\r\n&nbsp;</p>\r\n', '<p>Constructs an integer type variable with pathwidth as identifier and 100 as value</p>\r\n', '4', 36, 6, '3'),
(1387, '<p>Observe following function declaration and choose the best answer:</p>\r\n\r\n<p>int divide ( int a, int b = 2 )</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Variable b is of integer type and will always have value 2<br />\r\n&nbsp;</p>\r\n', '<p>Variable a and b are of int type and the initial value of both variables is 2<br />\r\n&nbsp;</p>\r\n', '<p>Variable b is international scope and will have value 2<br />\r\n&nbsp;</p>\r\n', '<p>Variable b will have value 2 if not specified when calling function</p>\r\n', '4', 35, 6, '4'),
(1388, '<p>Variables inside parenthesis of functions declarations have _____ level access.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Local<br />\r\n&nbsp;</p>\r\n', '<p>Global<br />\r\n&nbsp;</p>\r\n', '<p>Module<br />\r\n&nbsp;</p>\r\n', '<p>Universal</p>\r\n', '4', 28, 6, '1'),
(1389, '<p>Strings are character arrays. The last index of it contains the null-terminated character</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>\\n<br />\r\n&nbsp;</p>\r\n', '<p>\\t<br />\r\n&nbsp;</p>\r\n', '<p>\\0<br />\r\n&nbsp;</p>\r\n', '<p>\\1</p>\r\n', '4', 27, 6, '3'),
(1390, '<p>&nbsp;Which of the following identifiers is invalid?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>papername<br />\r\n&nbsp;</p>\r\n', '<p>writername<br />\r\n&nbsp;</p>\r\n', '<p>typename<br />\r\n&nbsp;</p>\r\n', '<p>printname</p>\r\n', '4', 25, 6, '3'),
(1391, '<p>Regarding following statement which of the statements is true?</p>\r\n\r\n<p>const int pathwidth=100;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Declares a variable pathwidth with 100 as its initial value<br />\r\n&nbsp;</p>\r\n', '<p>Declares a construction pathwidth with 100 as its initial value<br />\r\n&nbsp;</p>\r\n', '<p>Declares a constant pathwidth whose value will be 100<br />\r\n&nbsp;</p>\r\n', '<p>Constructs an integer type variable with pathwidth as identifier and 100 as value</p>\r\n', '5', 33, 6, '3'),
(1392, '<p>&nbsp;In an assignment statement</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The lvalue must always be a variable<br />\r\n&nbsp;</p>\r\n', '<p>The rvalue might be a constant, a variable, an expression or any combination of these<br />\r\n&nbsp;</p>\r\n', '<p>The assignment always takes place from right to left and never the other way<br />\r\n&nbsp;</p>\r\n', '<p>All of above</p>\r\n', '5', 25, 6, '4'),
(1393, '<p>Regarding #define which of the following statement is false?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>It is not C++ statement but the directive for the preprocessor<br />\r\n&nbsp;</p>\r\n', '<p>This does not require a semicolon at the end of line<br />\r\n&nbsp;</p>\r\n', '<p>It is a C++ statement that declares a constant in C++<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 32, 6, '3'),
(1394, '<p>Additional information sent when an exception is thrown may be placed in&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>the throw keyword.<br />\r\n&nbsp;</p>\r\n', '<p>the function that caused the error.<br />\r\n&nbsp;</p>\r\n', '<p>the catch block.<br />\r\n&nbsp;</p>\r\n', '<p>an object of the exception class.</p>\r\n', '5', 32, 6, '3'),
(1395, '<p>&nbsp;A struct is the same as a class except that</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>there are no member functions.<br />\r\n&nbsp;</p>\r\n', '<p>all members are public.<br />\r\n&nbsp;</p>\r\n', '<p>cannot be used in inheritance hierarchy<br />\r\n&nbsp;</p>\r\n', '<p>it does have a this pointer.</p>\r\n', '5', 28, 6, '3'),
(1396, '<p>Which statement gets affected when i++ is changed to ++i?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i = 20; i++;<br />\r\n&nbsp;</p>\r\n', '<p>for (i = 0; i&lt;20; i++) { }<br />\r\n&nbsp;</p>\r\n', '<p>a = i++;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>while (i++ = 20) cout &lt;&lt; i;</p>\r\n', '5', 28, 6, '1'),
(1397, '<p>If you wanted to sort many large objects or structures, it would be most efficient to</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>place them in an array and sort the array.<br />\r\n&nbsp;</p>\r\n', '<p>place pointers to them in an array andg sort the array<br />\r\n&nbsp;</p>\r\n', '<p>place them in a linked list and sort the linked list.<br />\r\n&nbsp;</p>\r\n', '<p>place references to them in an array and sort the array.</p>\r\n', '5', 33, 6, '3'),
(1398, '<p>The keyword friend does not appear in</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>the class allowing access to another class.<br />\r\n&nbsp;</p>\r\n', '<p>the class desiring access to another class<br />\r\n&nbsp;</p>\r\n', '<p>the private section of a class.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>the public section of a class.</p>\r\n', '5', 33, 6, '3'),
(1399, '<p>You can read input that consists of multiple lines of text using</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>the normal cout &lt;&lt; combination<br />\r\n&nbsp;</p>\r\n', '<p>the cin.get( ) function with one argument<br />\r\n&nbsp;</p>\r\n', '<p>the cin.get( ) function with two arguments.<br />\r\n&nbsp;</p>\r\n', '<p>the cin.get( ) function with three arguments.<br />\r\n&nbsp;</p>\r\n', '5', 30, 6, '2'),
(1400, '<p>&nbsp;A property which is not true for classes is that they</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>are removed from memory when not in use<br />\r\n&nbsp;</p>\r\n', '<p>permit data to be hidden from other classes.<br />\r\n&nbsp;</p>\r\n', '<p>bring together all aspects of an entity in one place.<br />\r\n&nbsp;</p>\r\n', '<p>Can closely model objects in the real world.</p>\r\n', '5', 34, 6, '3'),
(1401, '<p>Which of the following cannot be legitimately passed to a function</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A constant<br />\r\n&nbsp;</p>\r\n', '<p>A variable.<br />\r\n&nbsp;</p>\r\n', '<p>A structure<br />\r\n&nbsp;</p>\r\n', '<p>A header file.</p>\r\n', '5', 33, 6, '4'),
(1402, '<p>If we create a file by ifstream , then the default mode of the file is _________</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ios :: out<br />\r\n&nbsp;</p>\r\n', '<p>ios :: in<br />\r\n&nbsp;</p>\r\n', '<p>ios :: app<br />\r\n&nbsp;</p>\r\n', '<p>ios :: binary</p>\r\n', '5', 34, 6, '2'),
(1403, '<p>Use of virtual functions implies</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>overloading<br />\r\n&nbsp;</p>\r\n', '<p>overriding<br />\r\n&nbsp;</p>\r\n', '<p>static binding<br />\r\n&nbsp;</p>\r\n', '<p>dynamic binding</p>\r\n', '5', 28, 6, '4'),
(1404, '<p>this pointer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>implicitly points to an object<br />\r\n&nbsp;</p>\r\n', '<p>can be explicitly used in a class.<br />\r\n&nbsp;</p>\r\n', '<p>can be used to return an object.<br />\r\n&nbsp;</p>\r\n', '<p>All of the above.</p>\r\n', '5', 25, 6, '4'),
(1405, '<p>Data members which are static</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>cannot be assigned a value<br />\r\n&nbsp;</p>\r\n', '<p>can only be used in static functions<br />\r\n&nbsp;</p>\r\n', '<p>cannot be defined in a Union&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>can be accessed outside the class</p>\r\n', '5', 28, 6, '2'),
(1406, '<p>Declaration of a pointer reserves memory space</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>for the object.<br />\r\n&nbsp;</p>\r\n', '<p>for the pointer.<br />\r\n&nbsp;</p>\r\n', '<p>both for the object and the pointer<br />\r\n&nbsp;</p>\r\n', '<p>none of these.</p>\r\n', '5', 32, 6, '2'),
(1407, '<p>Consider the following statements</p>\r\n\r\n<p>char *ptr;<br />\r\nptr = hello;<br />\r\ncout &lt;&lt; *ptr;</p>\r\n\r\n<p>What will be printed?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>first letter<br />\r\n&nbsp;</p>\r\n', '<p>entire string<br />\r\n&nbsp;</p>\r\n', '<p>it is a syntax error<br />\r\n&nbsp;</p>\r\n', '<p>last letter</p>\r\n', '5', 55, 6, '1'),
(1408, '<p>To perform stream I/O with disk files in C++, you should</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>open and close files as in procedural languages.<br />\r\n&nbsp;</p>\r\n', '<p>use classes derived from ios.<br />\r\n&nbsp;</p>\r\n', '<p>use C language library functions to read and write data.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>include the IOSTREAM.H header file.</p>\r\n', '6', 32, 6, '2'),
(1409, '<p>&nbsp;RunTime Polymorphism is achieved by ______</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>friend function<br />\r\n&nbsp;</p>\r\n', '<p>virtual function<br />\r\n&nbsp;</p>\r\n', '<p>operator overloading<br />\r\n&nbsp;</p>\r\n', '<p>function overloading</p>\r\n', '6', 28, 6, '2'),
(1410, '<p>In C++, dynamic memory allocation is accomplished with the operator ____</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>new<br />\r\n&nbsp;</p>\r\n', '<p>this<br />\r\n&nbsp;</p>\r\n', '<p>malloc( )<br />\r\n&nbsp;</p>\r\n', '<p>delete</p>\r\n', '6', 33, 6, '1'),
(1411, '<p>&nbsp;_________________are used for generic programming</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Inheritance&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Virtual Functions&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>templates&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '6', 34, 6, '3'),
(1412, '<p>Which of the following best defines the syntax for template function ?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>template return_type Function_Name(Parameters)<br />\r\n&nbsp;</p>\r\n', '<p>template return_type Function_Name(Parameters)<br />\r\n&nbsp;</p>\r\n', '<p>both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '6', 35, 6, '3'),
(1413, '<p>Which one is suitable syntax for function template?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>template&lt; class T&gt; return_type&nbsp;&nbsp; &nbsp;Function_Name(parameters)<br />\r\n&nbsp;</p>\r\n', '<p>template&lt; typename T&gt; return_type&nbsp;&nbsp; &nbsp;Function_Name(parameters)<br />\r\n&nbsp;</p>\r\n', '<p>both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '6', 33, 6, '3'),
(1414, '<p>In a program, If there exists a function template with two parameters and normal function say void add(int , int), so add(3,4) will_____________________&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Invoke function template body as it is generic one<br />\r\n&nbsp;</p>\r\n', '<p>Invokes normal function as it exactly matches with its prototype<br />\r\n&nbsp;</p>\r\n', '<p>Not be called and Compiler issues warning<br />\r\n&nbsp;</p>\r\n', '<p>Not be called and Compiler issues ambiguity in calling add()</p>\r\n', '6', 40, 6, '2'),
(1415, '<p>The difference between while structure and do structure for looping is<br />\r\n&nbsp;</p>\r\n', '<p>In while statement the condition is tested at the end of first iteration<br />\r\n&nbsp;</p>\r\n', '<p>In do structure the condition is tested at the beginning of first iteration<br />\r\n&nbsp;</p>\r\n', '<p>The do structure decides whether to start the loop code or not whereas while statement decides whether to repeat the code or not<br />\r\n&nbsp;</p>\r\n', '<p>In while structure condition is tested before executing statements inside loop whereas in do structure condition is tested before repeating the statements inside loop</p>\r\n', '6', 33, 6, '4'),
(1416, '<p>Which class allows only one object to be created.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Nuclear Family Class<br />\r\n&nbsp;</p>\r\n', '<p>Abstruct Class</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Sigleton Class<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Numero Uno Class</p>\r\n', '6', 35, 6, '3'),
(1417, '<p>Reusability of code in C++ is achieved through ____&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Polymorphism<br />\r\n&nbsp;</p>\r\n', '<p>Inheritance</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Encapsulation<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Both A and B</p>\r\n', '6', 33, 6, '2'),
(1418, '<p>In C++ Program, inline fuctions are expanded during ____&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Run Time<br />\r\n&nbsp;</p>\r\n', '<p>Compile Time</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Debug Time<br />\r\n&nbsp;</p>\r\n', '<p>Coding Time</p>\r\n', '6', 34, 6, '1'),
(1419, '<p>In case of arguments passed by values when calling a function such as z=addidion(x,y),<br />\r\n&nbsp;</p>\r\n', '<p>Any modifications to the variables x &amp; y from inside the function will not have any effect outside the function.<br />\r\n&nbsp;</p>\r\n', '<p>The variables x and y will be updated when any modification is done in the function<br />\r\n&nbsp;</p>\r\n', '<p>The variables x and y are passed to the function addition<br />\r\n&nbsp;</p>\r\n', '<p>None of above are valid.</p>\r\n', '6', 45, 6, '1'),
(1420, '<p>Which function return the current position of the get or put pointer in bytes.<br />\r\n&nbsp;</p>\r\n', '<p>tellg( )<br />\r\n&nbsp;</p>\r\n', '<p>tellp( )<br />\r\n&nbsp;</p>\r\n', '<p>tell( )<br />\r\n&nbsp;</p>\r\n', '<p>Both A and B</p>\r\n', '6', 40, 6, '2'),
(1421, '<p>&nbsp;What is the output of the program<br />\r\n#include</p>\r\n\r\n<p>void main()<br />\r\n{<br />\r\n&nbsp; &nbsp; &nbsp;int n=1;<br />\r\n&nbsp; &nbsp; &nbsp;cout&lt; &nbsp; &nbsp; &nbsp;do<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</p>\r\n\r\n<p>cout &lt; n++;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} while (n&lt;=100);<br />\r\n&nbsp; &nbsp; &nbsp;cout &lt; &nbsp;}</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Print natural numbers 0 to 99<br />\r\n&nbsp;</p>\r\n', '<p>Print natural numbers 1 to 99<br />\r\n&nbsp;</p>\r\n', '<p>Print natural numbers 0 to 100<br />\r\n&nbsp;</p>\r\n', '<p>Print natural numbers 1 to 100</p>\r\n', '6', 64, 6, '4'),
(1422, '<p>Because the lifetime of a local variable is limited and determined automatically, these variables are also called ............................<br />\r\n&nbsp;</p>\r\n', '<p>automator<br />\r\n&nbsp;</p>\r\n', '<p>automatic<br />\r\n&nbsp;</p>\r\n', '<p>dynamic<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>static</p>\r\n', '6', 50, 6, '2'),
(1423, '<p>................ allows that a section of a program is compiled only if the defined constant that is specified as the parameter has been defined, independently of its value.<br />\r\n&nbsp;</p>\r\n', '<p>#ifdef<br />\r\n&nbsp;</p>\r\n', '<p>#if<br />\r\n&nbsp;</p>\r\n', '<p>#define<br />\r\n&nbsp;</p>\r\n', '<p>#ifd</p>\r\n', '6', 50, 6, '1'),
(1424, '<p>&nbsp;A function that changes the state of the cout object is called a(n) _____&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>member&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>adjuster&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>manipulator&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>operator</p>\r\n', '5', 40, 6, '3'),
(1425, '<p>External documentation includes&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>a printout of the program&#39;s code<br />\r\n&nbsp;</p>\r\n', '<p>flowcharts&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>IPO charts&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>pseudo code</p>\r\n', '6', 32, 6, '1'),
(1426, '<p>The function whose prototype is void getData(Item *thing); receives</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a pointer to a structure<br />\r\n&nbsp;</p>\r\n', '<p>a reference to a structure<br />\r\n&nbsp;</p>\r\n', '<p>a copy of a structure&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '6', 38, 6, '2'),
(1427, '<p>Null character needs a space of&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>zero bytes&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>one byte&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>three bytes&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>four bytes&nbsp;</p>\r\n', '6', 26, 6, '2'),
(1428, '<p>The number of structures than can be declared in a single statement is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>one&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>two&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>three&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>unlimited</p>\r\n', '7', 30, 6, '4'),
(1429, '<p>Which of the following formulas can be used to generate random integers between 1 and 10?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1 + rand() % (10 - 1 + 1)&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>1 + (10 - 1 + 1) % rand()&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>10 + rand() % (10 - 1 + 1)&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>10 + rand() % (10 + 1)&nbsp;</p>\r\n', '7', 34, 6, '1'),
(1430, '<p>Format flags may be combined using the _____&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>bitwise OR operator (|)&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>logical OR operator (||)&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>bitwise AND operator (&amp;)<br />\r\n&nbsp;</p>\r\n', '<p>logical AND operator (&amp;&amp;)&nbsp;</p>\r\n', '7', 33, 6, '1'),
(1431, '<p>Which of the following will store the number 320000 as a Float number?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>counPop = (float) 3.2e5;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>counPop = (float) 3.2e6;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>counPop = (float) .32e5;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>counPop = (float) .32e7;</p>\r\n', '7', 35, 6, '1'),
(1432, '<p>The arguments that determine the state of the cout object are called&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>classes<br />\r\n&nbsp;</p>\r\n', '<p>manipulators&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>format flags or state flags&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>state controllers&nbsp;</p>\r\n', '7', 33, 6, '3'),
(1433, '<p>The following statement where T is true and F is false T&amp;&amp;T||F&amp;&amp;T&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>is true&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>is false&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>is wrong&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>not applicable in C language&nbsp;</p>\r\n', '7', 40, 6, '1'),
(1434, '<p>Which of the following statements declares a variable that can contain a decimal number?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>dec payRate;<br />\r\n&nbsp;</p>\r\n', '<p>dec hourlyPay&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>float payRate&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>float hourlyPay;&nbsp;</p>\r\n', '7', 38, 6, '4'),
(1435, '<p>The statement int num[2][3]={ {1,2}, {3,4}, {5, 6} };&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>assigns a value 2 to num[1][2]&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>assigns a value 4 to num[1][2]&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>gives an error message&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>assigns a value 3 to num[1][2]&nbsp;</p>\r\n', '7', 40, 6, '3'),
(1436, '<p>The statement fwrite ( (char*)&amp;objl, sizeof(objl) );&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>writes the member functions of objl to fl&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>writes the data in objl to fl&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>writes the member functions and me data of obj 1 to fl&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>writes the address of objl to fl&nbsp;</p>\r\n', '7', 42, 6, '2'),
(1437, '<p>The loosest type of coupling is&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>data coupling&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>control coupling&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>external coupling&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>pathological coupling&nbsp;</p>\r\n', '7', 30, 6, '1'),
(1438, '<p>Which of the following is a string literal constant?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&ldquo;Visual C++&rdquo;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>&ldquo;137.45&rdquo;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>&ldquo;A&rdquo;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>All of the above&nbsp;</p>\r\n', '7', 38, 6, '4'),
(1439, '<p>A file stream refers to the flow of data between a ...............</p>\r\n', '<p>Program and object</p>\r\n', '<p>Program and stream</p>\r\n', '<p>Program and file</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '7', 35, 6, '3'),
(1440, '<p>Examine the following program and determine the output<br />\r\n#include &lt;iostream&gt;<br />\r\nusing namespace std;<br />\r\nint operate (int a, int b)<br />\r\n{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (a * b);<br />\r\n}<br />\r\nfloat operate (float a, float b)<br />\r\n{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (a/b);<br />\r\n}<br />\r\nint main()<br />\r\n{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int x=5, y=2;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float n=5.0, m=2.0;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; operate(x,y) &lt;&lt;&quot;\\t&quot;;<br />\r\ncout &lt;&lt; operate (n,m);<br />\r\nreturn 0;<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>10.0 &nbsp; &nbsp; &nbsp;5.0<br />\r\n&nbsp;</p>\r\n', '<p>5.0 &nbsp; &nbsp; &nbsp; &nbsp; 2.5<br />\r\n&nbsp;</p>\r\n', '<p>10.0 &nbsp; &nbsp; &nbsp;5<br />\r\n&nbsp;</p>\r\n', '<p>10 &nbsp; &nbsp; &nbsp; &nbsp; 2.5</p>\r\n', '8', 30, 6, '4'),
(1441, '<p>Find out the error in following block of code.<br />\r\nIf (x = 100)<br />\r\nCout &lt;&lt; &ldquo;x is 100&rdquo;;<br />\r\n&nbsp;</p>\r\n', '<p>100 should be enclosed in quotations<br />\r\n&nbsp;</p>\r\n', '<p>There is no semicolon at the end of first line<br />\r\n&nbsp;</p>\r\n', '<p>Equals to operator mistake<br />\r\n&nbsp;</p>\r\n', '<p>Variable x should not be inside quotation</p>\r\n', '8', 48, 6, '3'),
(1442, '<p>Consider the following two pieces of codes and choose the best answer<br />\r\nCODE 1:<br />\r\nswitch (x) {<br />\r\ncase &nbsp;1:&nbsp;&nbsp; &nbsp;<br />\r\ncout &lt;&lt;&rdquo;x is 1&rdquo;;<br />\r\nbreak;<br />\r\ncase 2:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt;&rdquo;x is 2&rdquo;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;<br />\r\ndefault:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt;&rdquo;value of x unknown&rdquo;;<br />\r\n}<br />\r\n&nbsp;<br />\r\nCODE 2<br />\r\nIf (x==1){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Cout &lt;&lt;&rdquo;x is 1&rdquo;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\nElse if (x==2){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Cout &lt;&lt; &ldquo;x is 2&rdquo;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\nElse{<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Cout &lt;&lt;&rdquo;value of x unknown&rdquo;;<br />\r\n} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Both of the above code fragments have the same behaviour<br />\r\n&nbsp;</p>\r\n', '<p>Both of the above code fragments produce different effects<br />\r\n&nbsp;</p>\r\n', '<p>The first code produces more results than second<br />\r\n&nbsp;</p>\r\n', '<p>The second code produces more results than first.</p>\r\n', '8', 75, 6, '1'),
(1443, '<p>Observe the following block of code and determine what happens when x=2?<br />\r\nswitch (x){<br />\r\ncase 1:<br />\r\ncase 2:<br />\r\ncase 3:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout&lt;&lt; &quot;x is 3, so jumping to third branch&quot;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; goto thirdBranch;<br />\r\ndefault:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout&lt;&lt;&quot;x is not within the range, so need to say Thank You!&quot;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Program jumps to the end of switch statement since there is nothing to do for x=2<br />\r\n&nbsp;</p>\r\n', '<p>The code inside default will run since there is no task for x=2, so, default task is run<br />\r\n&nbsp;</p>\r\n', '<p>Will display x is 3, so jumping to third branch and jumps to thirdBranch.<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '8', 80, 6, '3'),
(1444, '<p>Observe the following statements and decide what do they do.<br />\r\n&nbsp;<br />\r\nstring mystring;<br />\r\n&nbsp;<br />\r\ngetline(cin, mystring);<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>reads a line of string from cin into mystring<br />\r\n&nbsp;</p>\r\n', '<p>reads a line of string from mystring into cin<br />\r\n&nbsp;</p>\r\n', '<p>cin can&rsquo;t be used this way<br />\r\n&nbsp;</p>\r\n', '<p>none of above</p>\r\n', '8', 48, 6, '1'),
(1445, '<p>In an assignment statement<br />\r\na=b;<br />\r\nWhich of the following statement is true?<br />\r\n&nbsp;</p>\r\n', '<p>The variable a and the variable b are equal.<br />\r\n&nbsp;</p>\r\n', '<p>The value of b is assigned to variable a but the later changes on variable b will not effect the value of variable a<br />\r\n&nbsp;</p>\r\n', '<p>The value of b is assigned to variable a and the later changes on variable b will effect the value of variable a<br />\r\n&nbsp;</p>\r\n', '<p>The value of variable a is assigned to variable b and the value of variable b is assigned to variable a.</p>\r\n', '8', 38, 6, '2'),
(1446, '<p>Which of the following is CPP style type-casting?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>per = total/(float)m&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>per = total/float(m)&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>per = (float)total/m&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '8', 30, 6, '2'),
(1447, '<p>Which of the following is not a casting operator in CPP?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>explicit_cast&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>static_cast&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>dynamic_cast&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>reinterpret_cast</p>\r\n', '8', 30, 6, '1'),
(1449, '<p>A binary search tree whose left subtree and right subtree differ in hight by at most 1 unit is called ??</p>\r\n', '<p>AVL tree</p>\r\n', '<p>Red-black tree</p>\r\n', '<p>Lemma tree</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 20, 11, '4'),
(1450, '<p>which is not the component of data structure.</p>\r\n', '<p>Operations</p>\r\n', '<p>Storage Structures</p>\r\n', '<p>Algorithms</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '1', 18, 11, '4'),
(1451, '<p>Inserting an item into the stack when stack is not full is called ............. Operation and deletion of item form the stack, when stack is not empty is called ..............operation.</p>\r\n', '<p>push, pop</p>\r\n', '<p>pop, push</p>\r\n', '<p>insert, delete</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>delete, insert</p>\r\n', '1', 18, 11, '1'),
(1452, '<p>........... Is a pile in which items are added at one end and removed from the other.</p>\r\n', '<p>Stack</p>\r\n', '<p>Queue</p>\r\n', '<p>List</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 20, 11, '2'),
(1453, '<p>........... is very useful in situation when data have to stored and then retrieved in reverse order.</p>\r\n', '<p>Stack</p>\r\n', '<p>Queue</p>\r\n', '<p>List</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Link list</p>\r\n', '1', 25, 11, '1'),
(1454, '<p>&nbsp;Which data structure allows deleting data elements from and inserting at rear?</p>\r\n', '<p>Stacks</p>\r\n', '<p>Queues</p>\r\n', '<p>Dequeues</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Binary search tree</p>\r\n', '1', 18, 11, '2'),
(1455, '<p>Which of the following data structure can&#39;t store the non-homogeneous data elements?</p>\r\n', '<p>Arrays</p>\r\n', '<p>Records</p>\r\n', '<p>Pointers</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Stacks</p>\r\n', '1', 20, 11, '1'),
(1456, '<p>A ....... is a data structure that organizes data similar to a line in the supermarket, where the first one in line is the first one out.</p>\r\n', '<p>Queue linked list</p>\r\n', '<p>Stacks linked list</p>\r\n', '<p>Both of them</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Neither of them</p>\r\n', '1', 20, 11, '1'),
(1457, '<p>Which of the following is non-liner data structure?</p>\r\n', '<p>Stacks</p>\r\n', '<p>List</p>\r\n', '<p>Strings</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Trees</p>\r\n', '1', 20, 11, '4'),
(1458, '<p>Herder node is used as sentinel in .....</p>\r\n', '<p>Graphs</p>\r\n', '<p>Stacks</p>\r\n', '<p>Binary tree</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Queues</p>\r\n', '1', 18, 11, '3'),
(1459, '<p>Which data structure is used in breadth first search of a graph to hold nodes?</p>\r\n', '<p>Stack&nbsp;</p>\r\n', '<p>queue</p>\r\n', '<p>Tree</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array</p>\r\n', '1', 20, 11, '2'),
(1460, '<p>Identify the data structure which allows deletions at both ends of the list but insertion at only one end.</p>\r\n', '<p>Input restricted dequeue</p>\r\n', '<p>Output restricted qequeue</p>\r\n', '<p>Priority queues</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Stack</p>\r\n', '1', 23, 11, '1'),
(1461, '<p>To represent hierarchical relationship between elements, Which data structure is suitable?</p>\r\n', '<p>Dequeue</p>\r\n', '<p>Priority</p>\r\n', '<p>Tree</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Graph</p>\r\n', '1', 23, 11, '3'),
(1462, '<p>The smallest element of an array?s index is called its<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>lower bound</p>\r\n', '<p>upper bound</p>\r\n', '<p>range</p>\r\n', '<p>&nbsp;extraction</p>\r\n', '1', 20, 11, '1'),
(1463, '<p>In a circular linked list</p>\r\n', '<p>components are all linked together in some sequential manner.<br />\r\n&nbsp;</p>\r\n', '<p>there is no beginning and no end.<br />\r\n&nbsp;</p>\r\n', '<p>components are arranged hierarchically.<br />\r\n&nbsp;</p>\r\n', '<p>forward and backward traversal within the list is permitted.</p>\r\n', '1', 22, 11, '2'),
(1464, '<p>A directed graph is ........... if there is a path from each vertex to every other vertex in the digraph.<br />\r\n&nbsp;</p>\r\n', '<p>Weakly connected</p>\r\n', '<p>Strongly Connected</p>\r\n', '<p>Tightly Connected</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Linearly Connected</p>\r\n', '1', 24, 11, '2'),
(1465, '<p>In the ........ traversal we process all of a vertexs descendants before we move to an adjacent vertex.</p>\r\n', '<p>Depth First</p>\r\n', '<p>Breadth First</p>\r\n', '<p>With First</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Depth Limited</p>\r\n', '1', 14, 11, '1'),
(1466, '<p>State True of False.</p>\r\n\r\n<p>i) Network is a graph that has weights or costs associated with it.</p>\r\n\r\n<p>ii) An undirected graph which contains no cycles is called a forest.</p>\r\n\r\n<p>iii) A graph is said to be complete if there is no edge between every pair of vertices.</p>\r\n', '<p>True, False, True</p>\r\n', '<p>True, True, False</p>\r\n', '<p>True, True, True</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>False, True, True</p>\r\n', '1', 25, 11, '2'),
(1467, '<p>Match the following.</p>\r\n\r\n<p>a) Completeness&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i) How long does it take to find a solution</p>\r\n\r\n<p>b) Time Complexity &nbsp; &nbsp; &nbsp;ii) How much memory need to perform the search.<br />\r\nc) Space Complexity &nbsp;&nbsp;iii) Is the strategy guaranteed to find the solution when there in one.</p>\r\n', '<p>a-iii, b-ii, c-i</p>\r\n', '<p>a-i, b-ii, c-iii</p>\r\n', '<p>a-iii, b-i, c-ii&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a-i, b-iii, c-ii</p>\r\n', '1', 30, 11, '3'),
(1468, '<p>The number of comparisons done by sequential search is ?</p>\r\n', '<p>(N/2)+1</p>\r\n', '<p>(N+1)/2</p>\r\n', '<p>(N-1)/2</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(N+2)/2</p>\r\n', '2', 20, 11, '2'),
(1469, '<p>The number of comparisons done by sequential search is ?</p>\r\n', '<p>(N/2)+1</p>\r\n', '<p>(N+1)/2</p>\r\n', '<p>(N-1)/2</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(N+2)/2</p>\r\n', '2', 20, 11, '2'),
(1470, '<p>In ........, search start at the beginning of the list and check every element in the list.</p>\r\n', '<p>Linear search</p>\r\n', '<p>Binary search</p>\r\n', '<p>Hash Search</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Binary Tree search</p>\r\n', '2', 25, 11, '1'),
(1471, '<p>&nbsp;State True or False.</p>\r\n\r\n<p>i) Binary search is used for searching in a sorted array.</p>\r\n\r\n<p>ii) The time complexity of binary search is O(logn).</p>\r\n', '<p>True, False</p>\r\n', '<p>False, True</p>\r\n', '<p>False, False</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>True, True</p>\r\n', '2', 30, 11, '4'),
(1472, '<p>Which of the following is not the internal sort?</p>\r\n', '<p>Insertion Sort</p>\r\n', '<p>Bubble Sort</p>\r\n', '<p>Merge Sort</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Heap Sort</p>\r\n', '2', 20, 11, '3'),
(1473, '<p>State True or False.</p>\r\n\r\n<p>i) An undirected graph which contains no cycles is called forest.</p>\r\n\r\n<p>ii) A graph is said to be complete if there is an edge between every pair of vertices.</p>\r\n', '<p>True, True</p>\r\n', '<p>False, True</p>\r\n', '<p>False, False</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>True, False</p>\r\n', '2', 25, 11, '1'),
(1474, '<p>A graph is said to be ...............&nbsp;if the vertices can be split into two sets V1 and V2 such there are no edges between two vertices of V1 or two vertices of V2.</p>\r\n', '<p>Partite</p>\r\n', '<p>Bipartite</p>\r\n', '<p>Rooted</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Bisects</p>\r\n', '2', 21, 11, '2'),
(1475, '<p>In a queue, the initial values of front pointer f rare pointer r should be ??.. and ???.. respectively.</p>\r\n', '<p>0 and 1</p>\r\n', '<p>0 and -1</p>\r\n', '<p>-1 and 0</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1 and 0</p>\r\n', '2', 23, 11, '2'),
(1476, '<p>In a circular queue the value of r will be ..</p>\r\n', '<p>r=r+1</p>\r\n', '<p>r=(r+1)% [QUEUE_SIZE ? 1]</p>\r\n', '<p>r=(r+1)% QUEUE_SIZE</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>r=(r-1)% QUEUE_SIZE</p>\r\n', '2', 26, 11, '3'),
(1477, '<p>Which of the following statement is true?</p>\r\n\r\n<p>i) Using singly linked lists and circular list, it is not possible to traverse the list backwards.</p>\r\n\r\n<p>ii) To find the predecessor, it is required to traverse the list from the first node in case of singly linked list.</p>\r\n', '<p>i-only</p>\r\n', '<p>ii-only</p>\r\n', '<p>Both i and ii</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of both</p>\r\n', '2', 27, 11, '3'),
(1478, '<p>The advantage of .............. is that they solve the problem if sequential storage representation. But disadvantage in that is they are sequential lists.</p>\r\n', '<p>Lists</p>\r\n', '<p>Linked Lists</p>\r\n', '<p>Trees</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Queues</p>\r\n', '2', 20, 11, '2'),
(1479, '<p>What will be the value of top, if there is a size of stack STACK_SIZE is 5</p>\r\n', '<p>5</p>\r\n', '<p>6</p>\r\n', '<p>4</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None</p>\r\n', '2', 22, 11, '3'),
(1480, '<p>........... is not the operation that can be performed on queue.</p>\r\n', '<p>Insertion</p>\r\n', '<p>Deletion</p>\r\n', '<p>Retrieval</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Traversal</p>\r\n', '2', 21, 11, '4'),
(1481, '<p>There is an extra element at the head of the list called a ???.</p>\r\n', '<p>Antinel</p>\r\n', '<p>Sentinel</p>\r\n', '<p>List header</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>List head</p>\r\n', '2', 20, 11, '2'),
(1482, '<p>A ............... is a graph that has weights of costs associated with its edges.</p>\r\n', '<p>Network</p>\r\n', '<p>Weighted graph</p>\r\n', '<p>Both A and B</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None A and B</p>\r\n', '2', 22, 11, '1'),
(1483, '<p>In general, the binary search method needs no more than ?????. comparisons.</p>\r\n', '<p>[log2n]-1</p>\r\n', '<p>[logn]+1</p>\r\n', '<p>[log2n]</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>[log2n]+1</p>\r\n', '2', 19, 11, '4'),
(1484, '<p>&nbsp;A technique for direct search is</p>\r\n', '<p>Binary Search</p>\r\n', '<p>Linear Search<br />\r\n&nbsp;</p>\r\n', '<p>Tree Search</p>\r\n', '<p>Hashing</p>\r\n', '2', 21, 11, '4'),
(1485, '<p>............ is not an operation performed on linear list</p>\r\n\r\n<p>a) Insertion<br />\r\nb) Deletion<br />\r\nc) Retrieval<br />\r\nd) Traversal</p>\r\n', '<p>only a,b and c</p>\r\n', '<p>only a and b</p>\r\n', '<p>All of the above</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 26, 11, '4'),
(1486, '<p>Which is/are the application(s) of stack</p>\r\n', '<p>Function calls</p>\r\n', '<p>Large number Arithmetic</p>\r\n', '<p>Evaluation of arithmetic expressions</p>\r\n', '<p>All of the above</p>\r\n', '2', 22, 11, '1'),
(1487, '<p>A ????? is an acyclic digraph, which has only one node with indegree 0, and other nodes have in-degree 1.</p>\r\n', '<p>Directed tree</p>\r\n', '<p>Undirected tree</p>\r\n', '<p>Dis-joint tree</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Direction oriented tree</p>\r\n', '2', 23, 11, '1'),
(1488, '<p>???????. Is a directed tree in which outdegree of each node is less than or equal to two.</p>\r\n', '<p>Unary tree</p>\r\n', '<p>Binary tree</p>\r\n', '<p>Trinary tree</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both B and C</p>\r\n', '2', 22, 11, '2'),
(1489, '<p>&nbsp;State true or false.</p>\r\n\r\n<p>i) An empty tree is also a binary tree.</p>\r\n\r\n<p>ii) In strictly binary tree, the out-degree of every node is either o or 2.</p>\r\n', '<p>True, False</p>\r\n', '<p>False, True</p>\r\n', '<p>True, True</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>False, False</p>\r\n', '3', 21, 11, '1'),
(1490, '<p>Which of the following data structures are indexed structures?</p>\r\n', '<p>Linear arrays</p>\r\n', '<p>Linked lists</p>\r\n', '<p>Queue</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Stack</p>\r\n', '3', 22, 11, '1'),
(1491, '<p>Which of the following data structure store the homogeneous data elements?</p>\r\n', '<p>Arrays</p>\r\n', '<p>Records</p>\r\n', '<p>Pointers</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Lists</p>\r\n', '2', 21, 11, '2'),
(1492, '<p>When new data are to be inserted into a data structure, but there is not available space; this situation is usually called ....</p>\r\n', '<p>Underflow</p>\r\n', '<p>overflow</p>\r\n', '<p>houseful</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>saturated</p>\r\n', '3', 22, 11, '2'),
(1493, '<p>&nbsp;A data structure where elements can be added or removed at either end but not in the middle is called ...</p>\r\n', '<p>linked lists</p>\r\n', '<p>stacks</p>\r\n', '<p>queues</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>dequeue</p>\r\n', '3', 20, 11, '4'),
(1494, '<p>Operations on a data structure may be .....</p>\r\n', '<p>creation&nbsp;</p>\r\n', '<p>destruction</p>\r\n', '<p>selection</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '3', 19, 11, '4'),
(1495, '<p>The way in which the data item or items are logically related defines .....</p>\r\n', '<p>storage structure</p>\r\n', '<p>data structure</p>\r\n', '<p>data relationship</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>data operation&nbsp;</p>\r\n', '3', 21, 11, '2'),
(1496, '<p>Which of the following are the operations applicable an primitive data structures?</p>\r\n', '<p>create</p>\r\n', '<p>destroy</p>\r\n', '<p>update</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '3', 22, 11, '4'),
(1497, '<p>The use of pointers to refer elements of a data structure in which elements are logically adjacent is ....</p>\r\n', '<p>pointers</p>\r\n', '<p>linked allocation</p>\r\n', '<p>stack&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>queue</p>\r\n', '3', 21, 11, '2'),
(1498, '<p>Which of the following statement is false?</p>\r\n', '<p>Arrays are dense lists and static data structure.</p>\r\n', '<p>Data elements in linked list need not be stored in adjacent space in memory</p>\r\n', '<p>Pointers store the next data element of a list.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Linked lists are collection of the nodes that contain information part and next pointer.</p>\r\n', '3', 24, 11, '3'),
(1499, '<p>If a node having two children is deleted from a binary tree, it is replaced by its</p>\r\n', '<p>Inorder predecessor</p>\r\n', '<p>Inorder successor<br />\r\n&nbsp;</p>\r\n', '<p>Preorder predecessor</p>\r\n', '<p>None of the above</p>\r\n', '3', 23, 11, '2'),
(1500, '<p>&nbsp;You have to sort a list L consisting of a sorted list followed by a few &ocirc;random&ouml; elements.<br />\r\nWhich of the following sorting methods would be especially suitable for such a task?</p>\r\n', '<p>Bubble sort &nbsp;</p>\r\n', '<p>Selection sort<br />\r\n&nbsp;</p>\r\n', '<p>Quick sort</p>\r\n', '<p>Insertion sort</p>\r\n', '3', 26, 11, '4'),
(1501, '<p>The searching technique that takes O (1) time to find a data is</p>\r\n', '<p>&nbsp;Linear Search &nbsp;</p>\r\n', '<p>Binary Search<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;Hashing</p>\r\n', '<p>&nbsp;Tree Search</p>\r\n', '3', 22, 11, '3'),
(1502, '<p>A mathematical-model with a collection of operations defined on that model is called</p>\r\n', '<p>Data Structure Abstract</p>\r\n', '<p>Data Type<br />\r\n&nbsp;</p>\r\n', '<p>Primitive Data Type &nbsp;</p>\r\n', '<p>Algorithm</p>\r\n', '3', 23, 11, '2'),
(1503, '<p>The number of interchanges required to sort 5, 1, 6, 2 4 in ascending order using Bubble Sort<br />\r\nis<br />\r\n&nbsp;</p>\r\n', '<p>6</p>\r\n', '<p>5</p>\r\n', '<p>7</p>\r\n', '<p>8</p>\r\n', '3', 23, 11, '2'),
(1504, '<p>&nbsp;The postfix form of the expression (A + B)*(C*D - E)*F / G is</p>\r\n', '<p>AB + CD*E - FG /** &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>&nbsp;/ AB + CD * E - F **G<br />\r\n&nbsp;</p>\r\n', '<p>/ AB + CD * E - *F * G &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;/ AB + CDE * - * F * G</p>\r\n', '3', 40, 11, '1'),
(1505, '<p>&nbsp;The postfix form of the expression (A + B)*(C*D - E)*F / G is</p>\r\n', '<p>AB + CD*E - FG /** &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>&nbsp;/ AB + CD * E - F **G<br />\r\n&nbsp;</p>\r\n', '<p>/ AB + CD * E - *F * G &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;/ AB + CDE * - * F * G</p>\r\n', '3', 40, 11, '1'),
(1506, '<p>The complexity of multiplying two matrices of order m*n and n*p is</p>\r\n', '<p>&nbsp;mnp &nbsp; &nbsp;</p>\r\n', '<p>mp<br />\r\n&nbsp;</p>\r\n', '<p>mn &nbsp;</p>\r\n', '<p>&nbsp;np</p>\r\n', '3', 25, 11, '1'),
(1507, '<p>Merging 4 sorted files containing 50, 10, 25 and 15 records will take____time</p>\r\n', '<p>O (100) &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O (200)<br />\r\n&nbsp;</p>\r\n', '<p>O (175) &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O (125)</p>\r\n', '3', 26, 11, '1'),
(1508, '<p>In worst case Quick Sort has order</p>\r\n', '<p>O (n log n) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O (n2/2)<br />\r\n&nbsp;</p>\r\n', '<p>O (log n) &nbsp; &nbsp; &nbsp; &nbsp; )</p>\r\n', '<p>O (n2/4</p>\r\n', '4', 24, 11, '2'),
(1509, '<p>A full binary tree with 2n+1 nodes contain<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;n leaf nodes &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>n non-leaf nodes</p>\r\n', '<p>n-1 leaf nodes &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>n-1 non-leaf nodes</p>\r\n', '4', 26, 11, '2'),
(1510, '<p>If a node in a BST has two children, then its inorder predecessor has</p>\r\n', '<p>no left child &nbsp; &nbsp;</p>\r\n', '<p>no right child<br />\r\n&nbsp;</p>\r\n', '<p>two children &nbsp;</p>\r\n', '<p>&nbsp;no child</p>\r\n', '4', 26, 11, '2'),
(1511, '<p>A binary tree in which if all its levels except possibly the last, have the maximum number of<br />\r\nnodes and all the nodes at the last level appear as far left as possible, is known as</p>\r\n', '<p>full binary tree&nbsp; &nbsp;</p>\r\n', '<p>AVL tree<br />\r\n&nbsp;</p>\r\n', '<p>threaded tree&nbsp; &nbsp;</p>\r\n', '<p>complete binary tree</p>\r\n', '4', 30, 11, '1'),
(1512, '<p>What is the postfix form of the following prefix expression -A/B*C$DE</p>\r\n', '<p>ABCDE$*/- &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;A-BCDE$*/-<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;ABC$ED*/- &nbsp;</p>\r\n', '<p>&nbsp; &nbsp;A-BCDE$*/</p>\r\n', '4', 26, 11, '1'),
(1513, '<p>A full binary tree with n leaves contains</p>\r\n', '<p>n nodes&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>log n2nodes<br />\r\n&nbsp;</p>\r\n', '<p>2n ?1 nodes&nbsp; &nbsp;</p>\r\n', '<p>n2 nodes</p>\r\n', '4', 24, 11, '3'),
(1514, '<p>Which of the following sorting algorithm is stable</p>\r\n', '<p>insertion sort &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>bubble sort<br />\r\n&nbsp;</p>\r\n', '<p>quick sort &nbsp;&nbsp;</p>\r\n', '<p>heap sort</p>\r\n', '4', 22, 11, '4'),
(1515, '<p>A queue is a,</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;FIFO (First In First Out) list</p>\r\n', '<p>&nbsp; LIFO (Last In First Out) list<br />\r\n&nbsp;</p>\r\n', '<p>Ordered array</p>\r\n', '<p>&nbsp; Linear tree</p>\r\n', '4', 20, 11, '1'),
(1516, '<p>Which data structure is needed to convert infix notation to postfix notation?</p>\r\n', '<p>&nbsp;Branch &nbsp;</p>\r\n', '<p>&nbsp;Queue<br />\r\n&nbsp;</p>\r\n', '<p>Tree &nbsp;</p>\r\n', '<p>Stack</p>\r\n', '4', 21, 11, '4'),
(1517, '<p>Which of the following operations is performed more efficiently by doubly linked list than<br />\r\nby singly linked list?</p>\r\n', '<p>Deleting a node whose location in given<br />\r\n&nbsp;</p>\r\n', '<p>Searching of an unsorted list for a given item<br />\r\n&nbsp;</p>\r\n', '<p>Inverting a node after the node with given location<br />\r\n&nbsp;</p>\r\n', '<p>Traversing a list to process each node</p>\r\n', '4', 27, 11, '1'),
(1518, '<p>The extra key inserted at the end of the array is called a,</p>\r\n', '<p>End key&nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Stop key<br />\r\n&nbsp;</p>\r\n', '<p>Sentinel&nbsp; &nbsp;</p>\r\n', '<p>Transposition</p>\r\n', '4', 21, 11, '3'),
(1519, '<p>The prefix form of A-B/ (C * D ^ E) is,</p>\r\n', '<p>-/*^ACBDE &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>-ABCD*^DE<br />\r\n&nbsp;</p>\r\n', '<p>-A/B*C^DE &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>-A/BC*^DE</p>\r\n', '4', 30, 11, '3'),
(1520, '<p>Consider that n elements are to be sorted. What is the worst case time complexity of Bubble<br />\r\nsort?</p>\r\n', '<p>O(1) &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;O(log2n)<br />\r\n&nbsp;</p>\r\n', '<p>O(n) &nbsp; &nbsp;</p>\r\n', '<p>O(n2)</p>\r\n', '4', 28, 11, '4'),
(1521, '<p>A characteristic of the data that binary search uses but the linear search ignores is the___________.</p>\r\n', '<p>Order of the elements of the&nbsp;list<br />\r\n&nbsp;</p>\r\n', '<p>Length of the list<br />\r\n&nbsp;</p>\r\n', '<p>Maximum value in list<br />\r\n&nbsp;</p>\r\n', '<p>Type of elements of the list</p>\r\n', '4', 28, 11, '1'),
(1522, '<p>A sort which relatively passes through a list to exchange the first element with any element<br />\r\nless than it and then repeats with a new first element is called</p>\r\n', '<p>insertion sort &nbsp;</p>\r\n', '<p>&nbsp;selection sort<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;heap sort &nbsp;</p>\r\n', '<p>&nbsp;quick sort</p>\r\n', '4', 24, 11, '4'),
(1523, '<p>An undirected graph G with n vertices and e edges is represented by adjacency list. What is<br />\r\nthe time required to generate all the connected components?</p>\r\n', '<p>&nbsp;O (n) &nbsp; &nbsp;</p>\r\n', '<p>O (e)<br />\r\n&nbsp;</p>\r\n', '<p>O (e+n) &nbsp;</p>\r\n', '<p>O (2e)</p>\r\n', '4', 23, 11, '3'),
(1524, '<p>Which data structure is used for implementing recursion?</p>\r\n', '<p>Queue&nbsp;</p>\r\n', '<p>Stack<br />\r\n&nbsp;</p>\r\n', '<p>Arrays</p>\r\n', '<p>&nbsp;List</p>\r\n', '4', 22, 11, '2'),
(1525, '<p>In binary search, average number of comparison required for searching an element in a list if n<br />\r\nnumbers is</p>\r\n', '<p>log2 n . &nbsp;</p>\r\n', '<p>n . 2/</p>\r\n', '<p>n. &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>&nbsp; n ? 1.</p>\r\n', '4', 22, 11, '1'),
(1526, '<p>In order to get the information stored in a Binary Search Tree in the descending order, one<br />\r\nshould traverse it in which of the following order?</p>\r\n', '<p>left, root, right &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>root, left, right<br />\r\n&nbsp;</p>\r\n', '<p>right, root, left &nbsp; &nbsp;</p>\r\n', '<p>right, left, root</p>\r\n', '4', 25, 11, '3'),
(1527, '<p>Consider a linked list of n elements. What is the time taken to insert an element after an<br />\r\nelement pointed by some pointer?</p>\r\n', '<p>&nbsp;O (1) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;O (log n) 2<br />\r\n&nbsp;</p>\r\n', '<p>O (n) &nbsp; &nbsp;&nbsp;&nbsp;</p>\r\n', '<p>O (n log n) 2</p>\r\n', '4', 28, 11, '1'),
(1528, '<p>A graph with n vertices will definitely have a parallel edge or self loop of the total number of<br />\r\nedges are</p>\r\n', '<p>more than n &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>more than n+1<br />\r\n&nbsp;</p>\r\n', '<p>more than (n+1)/2 &nbsp;</p>\r\n', '<p>&nbsp;more than n(n-1)/2</p>\r\n', '4', 23, 11, '1'),
(1529, '<p>The minimum number of multiplications and additions required to evaluate the polynomial<br />\r\nP = 4x3+3x2-15x+45 is</p>\r\n', '<p>6 &amp; 3 &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>4 &amp; 2<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;3 &amp; 3 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>8 &amp; 3</p>\r\n', '5', 24, 11, '3'),
(1530, '<p>The maximum degree of any vertex in a simple graph with n vertices is</p>\r\n', '<p>&nbsp;n?1 &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>n+1<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;2n?1 &nbsp; &nbsp;</p>\r\n', '<p>n</p>\r\n', '5', 21, 11, '1'),
(1531, '<p>The data structure required for Breadth First Traversal on a graph is</p>\r\n', '<p>queue &nbsp; &nbsp;</p>\r\n', '<p>stack<br />\r\n&nbsp;</p>\r\n', '<p>array &nbsp;</p>\r\n', '<p>tree</p>\r\n', '5', 20, 11, '1'),
(1532, '<p>The worst case of quick sort has order</p>\r\n', '<p>O(n2)<br />\r\n&nbsp;</p>\r\n', '<p>O(n)<br />\r\n&nbsp;</p>\r\n', '<p>O (n log2 n)<br />\r\n&nbsp;</p>\r\n', '<p>O (log2 n)</p>\r\n', '5', 21, 11, '1'),
(1533, '<p>For an undirected graph G with n vertices and e edges, the sum of the degrees of each vertex is</p>\r\n', '<p>ne &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>2n<br />\r\n&nbsp;</p>\r\n', '<p>2e &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>en</p>\r\n', '5', 21, 11, '3'),
(1534, '<p>The time required to delete a node x from a doubly linked list having n nodes is</p>\r\n', '<p>O (n) &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O (log n)<br />\r\n&nbsp;</p>\r\n', '<p>O (1) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O (n log n)</p>\r\n', '5', 23, 11, '3'),
(1535, '<p>The quick sort algorithm exploit _________ design technique</p>\r\n', '<p>Greedy &nbsp;</p>\r\n', '<p>Dynamic programming<br />\r\n&nbsp;</p>\r\n', '<p>Divide and Conquer &nbsp; &nbsp;</p>\r\n', '<p>Backtracking</p>\r\n', '5', 26, 11, '3'),
(1536, '<p>The number of different directed trees with 3 nodes are</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>4</p>\r\n', '<p>5</p>\r\n', '5', 21, 11, '2'),
(1537, '<p>One can convert a binary tree into its mirror image by traversing it in<br />\r\n&nbsp;</p>\r\n', '<p>inorder</p>\r\n', '<p>preorder<br />\r\n&nbsp;</p>\r\n', '<p>postorder &nbsp;</p>\r\n', '<p>any order</p>\r\n', '5', 22, 11, '3');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(1538, '<p>The total number of companions required to merge 4 sorted files containing 15, 3, 9 and 8<br />\r\nrecords into a single sorted file is</p>\r\n', '<p>66 &nbsp;</p>\r\n', '<p>39<br />\r\n&nbsp;</p>\r\n', '<p>15 &nbsp; &nbsp;</p>\r\n', '<p>33</p>\r\n', '5', 23, 11, '4'),
(1539, '<p>In a linked list with n nodes, the time taken to insert an element after an element pointed by<br />\r\nsome pointer is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0 (1) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>0 (log n)<br />\r\n&nbsp;</p>\r\n', '<p>0 (n) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;0 (n 1og n)</p>\r\n', '5', 21, 11, '1'),
(1540, '<p>The data structure required to evaluate a postfix expression is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>queue &nbsp; &nbsp;</p>\r\n', '<p>stack<br />\r\n&nbsp;</p>\r\n', '<p>array &nbsp; &nbsp;</p>\r\n', '<p>linked-list</p>\r\n', '5', 20, 11, '2'),
(1541, '<p>The data structure required to check whether an expression contains balanced parenthesis is</p>\r\n', '<p>Stack &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Queue<br />\r\n&nbsp;</p>\r\n', '<p>Tree</p>\r\n', '<p>Array</p>\r\n', '5', 22, 11, '1'),
(1542, '<p>The complexity of searching an element from a set of n elements using Binary search<br />\r\nalgorithm is</p>\r\n', '<p>O(n) &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O(log n)<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;O(n2)</p>\r\n', '<p>O(n log n)</p>\r\n', '5', 23, 11, '2'),
(1543, '<p>The number of leaf nodes in a complete binary tree of depth d is</p>\r\n', '<p>2d<br />\r\n&nbsp;</p>\r\n', '<p>2d?1+1<br />\r\n&nbsp;</p>\r\n', '<p>2d+1+1 &nbsp;</p>\r\n', '<p>2d+1</p>\r\n', '6', 24, 11, '1'),
(1544, '<p>What data structure would you mostly likely see in a nonrecursive implementation of a<br />\r\nrecursive algorithm?</p>\r\n', '<p>Stack</p>\r\n', '<p>Linked list<br />\r\n&nbsp;</p>\r\n', '<p>Queue</p>\r\n', '<p>Trees&nbsp;</p>\r\n', '6', 26, 11, '1'),
(1545, '<p>Which of the following sorting methods would be most suitable for sorting a list which is<br />\r\nalmost sorted</p>\r\n', '<p>Bubble Sort &nbsp; &nbsp;</p>\r\n', '<p>Insertion Sort<br />\r\n&nbsp;</p>\r\n', '<p>Selection Sort &nbsp; &nbsp;</p>\r\n', '<p>Quick Sort</p>\r\n', '6', 23, 11, '1'),
(1546, '<p>A B-tree of minimum degree t can maximum _____ pointers in a node.</p>\r\n', '<p>t?1 &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>2t?1<br />\r\n&nbsp;</p>\r\n', '<p>2t &nbsp; &nbsp;</p>\r\n', '<p>t</p>\r\n', '6', 22, 11, '4'),
(1547, '<p>The process of accessing data stored in a serial access memory is similar to manipulating data<br />\r\non a</p>\r\n', '<p>heap &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>queue<br />\r\n&nbsp;</p>\r\n', '<p>stack</p>\r\n', '<p>binary tree</p>\r\n', '6', 24, 11, '3'),
(1548, '<p>A graph with n vertices will definitely have a parallel edge or self loop if the total number of<br />\r\nedges are</p>\r\n', '<p>greater than n?1 &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>less than n(n?1)<br />\r\n&nbsp;</p>\r\n', '<p>greater than n(n?1)/2 &nbsp; &nbsp;</p>\r\n', '<p>less than n2/2</p>\r\n', '6', 22, 11, '1'),
(1549, '<p>A BST is traversed in the following order recursively: Right, root, left<br />\r\nThe output sequence will be in</p>\r\n', '<p>Ascending order</p>\r\n', '<p>Descending order<br />\r\n&nbsp;</p>\r\n', '<p>Bitomic sequence &nbsp; &nbsp;</p>\r\n', '<p>No specific order</p>\r\n', '6', 26, 11, '2'),
(1550, '<p>The pre-order and post order traversal of a Binary Tree generates the same output. The tree can<br />\r\nhave maximum</p>\r\n', '<p>Three nodes</p>\r\n', '<p>Two nodes</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>One node &nbsp; &nbsp;</p>\r\n', '<p>Any number of nodes</p>\r\n', '6', 23, 11, '3'),
(1551, '<p>The postfix form of A*B+C/D is</p>\r\n', '<p>*AB/CD+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>AB*CD/+<br />\r\n&nbsp;</p>\r\n', '<p>A*BC+/D &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>&nbsp;ABCD+/*</p>\r\n', '6', 30, 11, '2'),
(1552, '<p>Let the following circular queue can accommodate maximum six elements with the<br />\r\nfollowing data<br />\r\nfront = 2 rear = 4<br />\r\nqueue = _______; L, M, N, ___, ___<br />\r\nWhat will happen after ADD O operation takes place?</p>\r\n', '<p>front = 2 rear = 5<br />\r\nqueue = ______; L, M, N, O, ___</p>\r\n', '<p>front = 3 rear = 5<br />\r\nqueue = L, M, N, O, ___<br />\r\n&nbsp;</p>\r\n', '<p>front = 3 rear = 4<br />\r\nqueue = ______; L, M, N, O, ___<br />\r\n&nbsp;</p>\r\n', '<p>front = 2 rear = 4<br />\r\nqueue = L, M, N, O, ___</p>\r\n', '6', 40, 11, '1'),
(1553, '<p>Computer Network is</p>\r\n', '<p>Collection of hardware components and computers</p>\r\n', '<p>Interconnected by communication channels</p>\r\n', '<p>Sharing of resources and information</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of the Above</p>\r\n', '1', 23, 7, '4'),
(1554, '<p>A binary tree of depth &ocirc;d&ouml; is an almost complete binary tree if</p>\r\n', '<p>Each leaf in the tree is either at level &ocirc;d&ouml; or at level &ocirc;d?1&ouml;<br />\r\n&nbsp;</p>\r\n', '<p>For any node &ocirc;n&ouml; in the tree with a right descendent at level &ocirc;d&ouml; all the left descendents of &ocirc;n&ouml; that are leaves, are also at level &ocirc;d&ouml;<br />\r\n&nbsp;</p>\r\n', '<p>Both (A) &amp; (B)<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '6', 52, 1, '3'),
(1555, '<p>What is a Firewall in Computer Network?</p>\r\n', '<p>The physical boundary of Network</p>\r\n', '<p>&nbsp;An operating System of Computer Network</p>\r\n', '<p>A system designed to prevent unauthorized access</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A web browsing Software</p>\r\n', '1', 23, 8, '3'),
(1556, '<p>A linear collection of data elements where the linear node is given by means of pointer is<br />\r\ncalled</p>\r\n', '<p>linked list &nbsp; &nbsp;</p>\r\n', '<p>node list<br />\r\n&nbsp;</p>\r\n', '<p>primitive list &nbsp;</p>\r\n', '<p>None of these</p>\r\n', '6', 24, 11, '1'),
(1557, '<p>Representation of data structure in memory is known as:</p>\r\n', '<p>recursive &nbsp; &nbsp;</p>\r\n', '<p>abstract data type<br />\r\n&nbsp;</p>\r\n', '<p>storage structure &nbsp; &nbsp;</p>\r\n', '<p>file structure</p>\r\n', '6', 21, 11, '2'),
(1558, '<p>If the address of A[1][1] and A[2][1] are 1000 and 1010 respectively and each element<br />\r\noccupies 2 bytes then the array has been stored in _________ order.</p>\r\n', '<p>row major &nbsp; &nbsp;</p>\r\n', '<p>column major<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;matix major &nbsp; &nbsp;</p>\r\n', '<p>none of these</p>\r\n', '6', 75, 11, '1'),
(1559, '<p>How many layers does OSI Reference Model has?</p>\r\n', '<p>4</p>\r\n', '<p>5</p>\r\n', '<p>6</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>7</p>\r\n', '1', 23, 7, '4'),
(1560, '<p>An adjacency matrix representation of a graph cannot contain information of :</p>\r\n', '<p>nodes &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;edges<br />\r\n&nbsp;</p>\r\n', '<p>direction of edges &nbsp;</p>\r\n', '<p>parallel edges</p>\r\n', '6', 21, 11, '4'),
(1561, '<p>Quick sort is also known as</p>\r\n', '<p>merge sort</p>\r\n', '<p>heap sort<br />\r\n&nbsp;</p>\r\n', '<p>bubble sort &nbsp; &nbsp;</p>\r\n', '<p>none of these</p>\r\n', '7', 22, 11, '4'),
(1562, '<p>An ADT is defined to be a mathematical model of a user-defined type along with the collection<br />\r\nof all ____________ operations on that model.</p>\r\n', '<p>Cardinality &nbsp;</p>\r\n', '<p>Assignment<br />\r\n&nbsp;</p>\r\n', '<p>Primitive &nbsp; &nbsp;</p>\r\n', '<p>Structured</p>\r\n', '7', 23, 11, '3'),
(1563, '<p>DHCP is the abbreviation of</p>\r\n', '<p>Dynamic Host Control Protocol</p>\r\n', '<p>Dynamic Host Configuration Protocol</p>\r\n', '<p>Dynamic Hyper Control Protocol</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Dynamic Hyper Configuration Protocol</p>\r\n', '1', 26, 7, '2'),
(1564, '<p>An algorithm is made up of two independent time complexities f (n) and g (n). Then the<br />\r\ncomplexities of the algorithm is in the order of</p>\r\n', '<p>f(n) x g(n) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Max ( f(n),g(n))<br />\r\n&nbsp;</p>\r\n', '<p>Min (f(n),g(n)) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>f(n) + g(n)</p>\r\n', '7', 30, 11, '2'),
(1565, '<p>The goal of hashing is to produce a search that takes</p>\r\n', '<p>O(1) time &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O(n2 ) time<br />\r\n&nbsp;</p>\r\n', '<p>O(log n ) time &nbsp;</p>\r\n', '<p>O(n log n ) time</p>\r\n', '7', 26, 11, '1'),
(1566, '<p>IPV4 Address is<br />\r\n&nbsp;</p>\r\n', '<p>8 bit</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>16 bit</p>\r\n', '<p>32 bit</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>64 bit</p>\r\n', '1', 23, 7, '3'),
(1567, '<p>The best average behaviour is shown by</p>\r\n', '<p>Quick Sort &nbsp; &nbsp;</p>\r\n', '<p>Merge Sort<br />\r\n&nbsp;</p>\r\n', '<p>Insertion Sort &nbsp;</p>\r\n', '<p>Heap Sort</p>\r\n', '7', 22, 11, '1'),
(1568, '<p>What is the postfix form of the following prefix *+ab?cd</p>\r\n', '<p>ab+cd?* &nbsp;</p>\r\n', '<p>abc+*?<br />\r\n&nbsp;</p>\r\n', '<p>ab+*cd? &nbsp; &nbsp;</p>\r\n', '<p>ab+*cd?</p>\r\n', '7', 26, 11, '1'),
(1569, '<p>Time complexities of three algorithms are given. Which should execute the slowest for large<br />\r\nvalues of N?</p>\r\n', '<p>O(2N )</p>\r\n', '<p>O(N)<br />\r\n&nbsp;</p>\r\n', '<p>O(log N) &nbsp;</p>\r\n', '<p>None of these</p>\r\n', '7', 23, 11, '2'),
(1570, '<p>If h is any hashing function and is used to hash n keys in to a table of size m, where n&lt;=m, the<br />\r\nexpected number of collisions involving a particular key x is :</p>\r\n', '<p>less than 1 &nbsp;</p>\r\n', '<p>less than n.<br />\r\n&nbsp;</p>\r\n', '<p>less than m &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>less than n/2</p>\r\n', '7', 36, 11, '1'),
(1571, '<p>DNS is the abbreviation of</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Dynamic Name System</p>\r\n', '<p>Dynamic Network System</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Domain Name System</p>\r\n', '<p>Domain Network Service</p>\r\n', '1', 26, 7, '3'),
(1572, '<p>Let A be an adjacency matrix of a graph G. The th ij entry in the matrix K A , gives</p>\r\n', '<p>The number of paths of length K from vertex Vi to vertex Vj.<br />\r\n&nbsp;</p>\r\n', '<p>Shortest path of K edges from vertex Vi to vertex Vj.<br />\r\n&nbsp;</p>\r\n', '<p>Length of a Eulerian path from vertex Vi to vertex Vj.<br />\r\n&nbsp;</p>\r\n', '<p>Length of a Hamiltonian cycle from vertex Vi to vertex Vj.</p>\r\n', '8', 26, 11, '2'),
(1573, '<p>The OS of a computer may periodically collect all the free memory space to form contiguous<br />\r\nblock of free space. This is called</p>\r\n', '<p>Concatenation &nbsp;</p>\r\n', '<p>Garbage collection</p>\r\n', '<p>Collision &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Dynamic Memory Allocation</p>\r\n', '8', 24, 11, '2'),
(1574, '<p>What is the meaning of Bandwidth in Network?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Transmission capacity of a communication channels</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Connected Computers in the Network</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Class of IP used in Network</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of Above</p>\r\n', '1', 28, 7, '1'),
(1575, '<p>ADSL is the abbreviation of</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Asymmetric Dual Subscriber Line</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Asymmetric Digital System Line</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Asymmetric Dual System Line</p>\r\n', '<p>Asymmetric Digital Subscriber Line</p>\r\n', '1', 30, 7, '4'),
(1576, '<p>&nbsp;What is the following code segment doing?<br />\r\nvoid fn( ){<br />\r\nchar c;<br />\r\ncin.get(c);<br />\r\nif (c != ?\\n?) {<br />\r\nfn( );<br />\r\ncout.put(c);<br />\r\n}<br />\r\n}</p>\r\n', '<p>The string entered is printed as it is.<br />\r\n&nbsp;</p>\r\n', '<p>The string entered is printed in reverse order.<br />\r\n&nbsp;</p>\r\n', '<p>It will go in an infinite loop.<br />\r\n&nbsp;</p>\r\n', '<p>It will print an empty line.</p>\r\n', '8', 50, 11, '2'),
(1577, '<p>In Breadth First Search of Graph, which of the following data structure is used?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Stack&nbsp;&nbsp;</p>\r\n', '<p>Queue<br />\r\n&nbsp;</p>\r\n', '<p>Linked List&nbsp;&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '8', 21, 11, '2'),
(1578, '<p>What is the use of Bridge in Network?</p>\r\n', '<p>to connect LANs</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>to separate LANs</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>to control Network Speed</p>\r\n', '<p>All of the above</p>\r\n', '1', 23, 7, '1'),
(1579, '<p>What is the result of the following operation<br />\r\nTop (Push (S, X))</p>\r\n', '<p>X &nbsp;</p>\r\n', '<p>null<br />\r\n&nbsp;</p>\r\n', '<p>S &nbsp; &nbsp;</p>\r\n', '<p>None of these</p>\r\n', '8', 26, 11, '1'),
(1580, '<p>How many nodes in a tree have no ancestors.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>n</p>\r\n', '8', 24, 11, '2'),
(1581, '<p>In order to get the contents of a Binary search tree in ascending order, one has to traverse it in</p>\r\n', '<p>pre-order &nbsp;&nbsp;</p>\r\n', '<p>in-order<br />\r\n&nbsp;</p>\r\n', '<p>post order&nbsp;</p>\r\n', '<p>not possible</p>\r\n', '8', 22, 11, '2'),
(1582, '<p>Router operates in which layer of OSI Reference Model?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Layer 1 (Physical Layer)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Layer 3 (Network Layer)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Layer 4 (Transport Layer)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Layer 7 (Application Layer)</p>\r\n', '1', 21, 7, '2'),
(1583, '<p>The prefix form of an infix expression p + q - r t* is<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;+ pq - rt*&nbsp;</p>\r\n', '<p>- +pqr t*&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>rt* - +pq</p>\r\n', '<p>pqrt - + *</p>\r\n', '8', 30, 11, '3'),
(1584, '<p>The equivalent prefix expression for the following infix expression (A+B)-(C+D*E)/F*G is</p>\r\n', '<p>-+AB*/+C*DEFG &nbsp;</p>\r\n', '<p>/-+AB*+C*DEFG<br />\r\n&nbsp;</p>\r\n', '<p>-/+AB*+CDE*FG &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>-+AB*/+CDE*FG</p>\r\n', '8', 30, 11, '1'),
(1585, '<p>The time required to delete a node x from a doubly linked list having n nodes is</p>\r\n', '<p>O (n) &nbsp;</p>\r\n', '<p>O (log n)<br />\r\n&nbsp;</p>\r\n', '<p>O (1) &nbsp; &nbsp;</p>\r\n', '<p>O (n log n)</p>\r\n', '8', 26, 11, '3'),
(1586, '<p>protocols are?</p>\r\n', '<p>Agreements on how communication components and DTE&#39;s are to communicate</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Logical communication channels for transferring data</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Physical communication channels sued for transferring data</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '1', 23, 7, '1'),
(1587, '<p>Ackerman?s function is defined on the non-negative integers as follows<br />\r\na (m,n) = n+1 if m=0<br />\r\n= a (m-1, 1) if m ? 0, n=0<br />\r\n= a (m-1, a(m, n-1)) if m ? 0, n ? 0<br />\r\nThe value of a (1, 3) is<br />\r\n&nbsp;</p>\r\n', '<p>4</p>\r\n', '<p>5</p>\r\n', '<p>6</p>\r\n', '<p>7</p>\r\n', '8', 60, 11, '2'),
(1588, '<p>The result of evaluating the postfix expression 5, 4, 6, +, *, 4, 9, 3, /, +, * is</p>\r\n', '<p>600&nbsp; &nbsp; &nbsp;</p>\r\n', '<p>350<br />\r\n&nbsp;</p>\r\n', '<p>650&nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>588</p>\r\n', '8', 50, 11, '2'),
(1589, '<p>Which data communication method is used to transmit the data over a serial communication link?</p>\r\n', '<p>Simplex</p>\r\n', '<p>Half-duplex</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Full duplex</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of above</p>\r\n', '1', 21, 7, '3'),
(1590, '<p>The method of communication in which transaction takes place in both directions,but only in one direction at a time, is called ?</p>\r\n', '<p>Simplex</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Four wire circuit</p>\r\n', '<p>Full duplex</p>\r\n', '<p>Half-duplex</p>\r\n', '1', 28, 7, '4'),
(1591, '<p>In communication satellite, multiple repeaters are known as?</p>\r\n', '<p>Detectors</p>\r\n', '<p>Modulators</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Stations</p>\r\n', '<p>Transponders</p>\r\n', '1', 27, 7, '4'),
(1592, '<p>Error detection at the data link layer is achieved by?</p>\r\n', '<p>Bit stuffing</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Cyclic redundancy codes</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hamming codes</p>\r\n', '<p>Equalization</p>\r\n', '1', 30, 7, '2'),
(1593, '<p>Loss in signal power as light travels down the fiber is called?</p>\r\n', '<p>Attenuation</p>\r\n', '<p>Propagation</p>\r\n', '<p>Scattering</p>\r\n', '<p>Interruption</p>\r\n', '1', 22, 7, '1'),
(1594, '<p>The topology with highest reliability is ?<br />\r\n&nbsp;</p>\r\n', '<p>Bus topology</p>\r\n', '<p>Star topology</p>\r\n', '<p>Ring Topology</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Mesh Topology</p>\r\n', '1', 24, 7, '4'),
(1595, '<p>Baud means?</p>\r\n', '<p>The number of bits transmitted per unit time</p>\r\n', '<p>The number of byted transmitted per unit time</p>\r\n', '<p>The rate at which the signal changes</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '1', 30, 7, '3'),
(1596, '<p>In OSI model dialogue control and token management are responsibilities of ?<br />\r\n&nbsp;</p>\r\n', '<p>Session Layer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Network layer</p>\r\n', '<p>Transport layer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Data link layer</p>\r\n', '1', 26, 7, '1'),
(1597, '<p>Under mark parity,each parity bit is?</p>\r\n', '<p>Alternated between 0 and 1</p>\r\n', '<p>Always set to 0</p>\r\n', '<p>Always set to 1</p>\r\n', '<p>Not used</p>\r\n', '1', 24, 7, '3'),
(1598, '<p>Physical or logical arrangement of network is</p>\r\n', '<p>Topology</p>\r\n', '<p>Routing</p>\r\n', '<p>Networking</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 26, 7, '1'),
(1599, '<p>In this topology there is a central controller or hub&nbsp;</p>\r\n', '<p>Star</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Mesh &nbsp;</p>\r\n', '<p>Ring&nbsp;</p>\r\n', '<p>Bus</p>\r\n', '2', 24, 7, '1'),
(1600, '<p>This topology requires multipoint connection</p>\r\n', '<p>Star</p>\r\n', '<p>Mesh &nbsp;</p>\r\n', '<p>Ring&nbsp;</p>\r\n', '<p>bus</p>\r\n', '2', 26, 7, '4'),
(1601, '<p>Data communication system spanning states, countries, or the whole world is</p>\r\n', '<p>LAN</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>WAN</p>\r\n', '<p>MAN</p>\r\n', '<p>None of the above</p>\r\n', '2', 28, 7, '2'),
(1602, '<p>Data communication system within a building or campus is</p>\r\n', '<p>LAN</p>\r\n', '<p>WAN</p>\r\n', '<p>MAN</p>\r\n', '<p>None of the above</p>\r\n', '2', 30, 7, '1'),
(1603, '<p>Expand WAN</p>\r\n', '<p>World area network</p>\r\n', '<p>Wide area network</p>\r\n', '<p>Web area network</p>\r\n', '<p>None of the above</p>\r\n', '2', 26, 7, '2'),
(1604, '<p>What is internet?</p>\r\n', '<p>a single network</p>\r\n', '<p>a vast collection of different networks</p>\r\n', '<p>interconnection of local area networks</p>\r\n', '<p>none of the mentioned</p>\r\n', '2', 24, 7, '2'),
(1605, '<p>To&nbsp;join the&nbsp;internet,the computer has&nbsp;to be&nbsp;connected to a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>internet&nbsp;architecture board<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>internet society</p>\r\n', '<p>internet&nbsp;service&nbsp;provider<br />\r\n&nbsp;</p>\r\n', '<p>none&nbsp;of the above</p>\r\n', '2', 30, 7, '3'),
(1606, '<p>Internet access by transmitting digital data over the wires of a local telephone network is provided by</p>\r\n', '<p>leased&nbsp;line<br />\r\n&nbsp;</p>\r\n', '<p>digital&nbsp;subscriber line<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>digital signal line&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '2', 30, 7, '2'),
(1607, '<p>The physical&nbsp;layer concerns&nbsp;with</p>\r\n', '<p>bit-by-bit delivery</p>\r\n', '<p>&nbsp;process&nbsp;to&nbsp;process delivery</p>\r\n', '<p>application to&nbsp;application delivery</p>\r\n', '<p>none&nbsp;of&nbsp;the above</p>\r\n', '2', 29, 7, '1'),
(1608, '<p>Application developer has permission to decide the following on transport layer side</p>\r\n', '<p>Transport layer protocol</p>\r\n', '<p>Maximum buffer size &nbsp; &nbsp;</p>\r\n', '<p>Both of the mentioned</p>\r\n', '<p>None of the above</p>\r\n', '2', 26, 7, '3'),
(1609, '<p>Application layer offers _______ service</p>\r\n', '<p>End to end</p>\r\n', '<p>Process to process</p>\r\n', '<p>Both of the mentioned</p>\r\n', '<p>None of the above</p>\r\n', '2', 24, 7, '1'),
(1610, '<p>E-mail is</p>\r\n', '<p>Loss-tolerant application</p>\r\n', '<p>Bandwidth-sensitive application</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Elastic application</p>\r\n', '<p>None of the above</p>\r\n', '2', 25, 7, '3'),
(1611, '<p>Pick the odd one out</p>\r\n', '<p>File transfer</p>\r\n', '<p>File download&nbsp;</p>\r\n', '<p>E-mail</p>\r\n', '<p>Interactive games</p>\r\n', '2', 23, 7, '4'),
(1612, '<p>Which of the following is an application layer service ?</p>\r\n', '<p>Network virtual terminal</p>\r\n', '<p>File transfer, access, and management</p>\r\n', '<p>Mail service</p>\r\n', '<p>All of the above&nbsp;</p>\r\n', '2', 26, 7, '4'),
(1613, '<p>To deliver a message to the correct application program running on a host, the _______ address must be consulted</p>\r\n', '<p>IP</p>\r\n', '<p>MAC</p>\r\n', '<p>Port</p>\r\n', '<p>None of the above</p>\r\n', '2', 30, 7, '3'),
(1614, '<p>Which one&nbsp;of the following&nbsp;is&nbsp;not&nbsp;a function of network layer?</p>\r\n', '<p>routing</p>\r\n', '<p>inter-networking</p>\r\n', '<p>congestion control<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '2', 27, 7, '4'),
(1615, '<p>The 4 byte IP address consists of</p>\r\n', '<p>network address</p>\r\n', '<p>host address</p>\r\n', '<p>both (a) and (b)</p>\r\n', '<p>none of the above</p>\r\n', '2', 29, 7, '3'),
(1616, '<p>In virtual circuit network each packet contains<br />\r\n&nbsp; &nbsp;&nbsp;</p>\r\n', '<p>full source and destination address<br />\r\n&nbsp;</p>\r\n', '<p>a short VC number<br />\r\n&nbsp;</p>\r\n', '<p>both (a) and (b)<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '1', 23, 7, '2'),
(1617, '<p>Electronic mail uses this Application layer protocol<br />\r\n&nbsp;</p>\r\n', '<p>SMTP<br />\r\n&nbsp;</p>\r\n', '<p>HTTP</p>\r\n', '<p>FTP</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SIP</p>\r\n', '2', 23, 7, '1'),
(1618, '<p>The number of objects in a Web page which consists of 4 jpeg images and HTML text is ______</p>\r\n', '<p>4</p>\r\n', '<p>1</p>\r\n', '<p>5</p>\r\n', '<p>none of the above</p>\r\n', '3', 25, 7, '3'),
(1619, '<p>The default connection type used by HTTP is _____</p>\r\n', '<p>Persistent&nbsp;</p>\r\n', '<p>Non-persistent</p>\r\n', '<p>Either of the mentioned</p>\r\n', '<p>none of the above</p>\r\n', '3', 26, 7, '1'),
(1620, '<p>Bits can be send over guided and unguided media as analog signal by</p>\r\n', '<p>digital modulation<br />\r\n&nbsp;</p>\r\n', '<p>amplitude modulation</p>\r\n', '<p>frequency&nbsp;modulation<br />\r\n&nbsp;</p>\r\n', '<p>phase modulation</p>\r\n', '3', 24, 7, '1'),
(1621, '<p>The&nbsp;portion of &nbsp;physical layer that interfaces with the&nbsp;media&nbsp;access control sublayer is&nbsp;called</p>\r\n', '<p>physical signalling sublayer<br />\r\n&nbsp;</p>\r\n', '<p>physical data sublayer</p>\r\n', '<p>physical address sublayer</p>\r\n', '<p>none of the above&nbsp;</p>\r\n', '3', 26, 7, '1'),
(1622, '<p>physical layer provides<br />\r\n&nbsp;</p>\r\n', '<p>mechanical specifications of electrical connectors and cables</p>\r\n', '<p>&nbsp;electrical specification of transmission line signal level</p>\r\n', '<p>specification for IR over optical fiber<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '3', 28, 7, '4'),
(1623, '<p>In asynchronous serial communication the physical layer provides</p>\r\n', '<p>start and stop signalling</p>\r\n', '<p>flow control</p>\r\n', '<p>both (a) and (b)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 30, 7, '3'),
(1624, '<p>The physical&nbsp;layer is responsible for</p>\r\n', '<p>line coding<br />\r\n&nbsp;</p>\r\n', '<p>channel coding<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>modulation<br />\r\n&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '3', 28, 7, '4'),
(1625, '<p>The physical layer translates logical communication requests from the ______ into hardware specific operations.</p>\r\n', '<p>data&nbsp;link layer</p>\r\n', '<p>network layer</p>\r\n', '<p>trasnport layer</p>\r\n', '<p>application layer</p>\r\n', '3', 24, 7, '1'),
(1626, '<p>Which one of the following&nbsp;protocol is&nbsp;not&nbsp;used&nbsp;in internet?</p>\r\n', '<p>HTTP</p>\r\n', '<p>DHCP&nbsp;</p>\r\n', '<p>DNS&nbsp;</p>\r\n', '<p>none of the following</p>\r\n', '3', 27, 7, '4'),
(1627, '<p>IPv6 addressed have a size of<br />\r\n&nbsp;</p>\r\n', '<p>32 bits</p>\r\n', '<p>64 bits</p>\r\n', '<p>128 bits</p>\r\n\r\n<p>&nbsp; &nbsp;</p>\r\n', '<p>265 bits</p>\r\n', '3', 22, 7, '3'),
(1628, '<p>Internet works on</p>\r\n', '<p>packet switching</p>\r\n', '<p>circuit switching<br />\r\n&nbsp;</p>\r\n', '<p>both (a) and (b)<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 23, 7, '1'),
(1629, '<p>Each IP packet must contain</p>\r\n', '<p>Only Source address</p>\r\n', '<p>Only Destination address<br />\r\n&nbsp;</p>\r\n', '<p>Source and Destination address</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Source or Destination address</p>\r\n', '3', 23, 7, '3'),
(1630, '<p>Bridge works in which layer of the OSI model?</p>\r\n', '<p>Appliation layer</p>\r\n', '<p>Transport layer</p>\r\n', '<p>Network layer<br />\r\n&nbsp;</p>\r\n', '<p>Datalink layer</p>\r\n', '3', 23, 7, '4'),
(1631, '<p>HTTP&nbsp;is&nbsp;_______ protocol.</p>\r\n', '<p>application&nbsp;layer</p>\r\n', '<p>transport layer</p>\r\n', '<p>network layer<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 26, 7, '1'),
(1632, '<p>There are ______steps to solve the problem</p>\r\n', '<p>Seven</p>\r\n', '<p>Four</p>\r\n', '<p>Six</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Two</p>\r\n', '1', 15, 13, '3'),
(1633, '<p>&nbsp;______is the first step in solving the problem</p>\r\n', '<p>Understanding the Problem</p>\r\n', '<p>Identify the Problem</p>\r\n', '<p>Evaluate the Solution</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '1', 13, 13, '2'),
(1634, '<p>______is the last step in solving the problem</p>\r\n', '<p>Understanding the Problem</p>\r\n', '<p>Identify the Problem</p>\r\n', '<p>Evaluate the Solution</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '1', 12, 13, '3'),
(1635, '<p>Following is true for understanding of a problem</p>\r\n', '<p>Knowing the knowledgebase</p>\r\n', '<p>Understanding the subject on which the problem is based</p>\r\n', '<p>Communication with the client</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '1', 15, 13, '4'),
(1636, '<p>MAC&nbsp;address is of<br />\r\n&nbsp;</p>\r\n', '<p>24 bits<br />\r\n&nbsp;</p>\r\n', '<p>36 bits<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>42 bits<br />\r\n&nbsp;48&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;bits<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>48 bits<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n', '3', 27, 7, '4'),
(1637, '<p>The amount of memory needs to run to completion is known as_____________</p>\r\n', '<p>Space complexity</p>\r\n', '<p>Worst case<br />\r\n&nbsp;</p>\r\n', '<p>Time complexity</p>\r\n', '<p>Best case</p>\r\n', '2', 12, 13, '1'),
(1638, '<p>The amount of time needs to run to completion is known as____________</p>\r\n', '<p>Space complexity<br />\r\n&nbsp;</p>\r\n', '<p>Time complexity</p>\r\n', '<p>Worst case</p>\r\n', '<p>Best case</p>\r\n', '1', 22, 8, '2'),
(1639, '<p>&nbsp;__________ is the minimum number of steps that can executed for the given<br />\r\nparameters</p>\r\n', '<p>Average case &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Worst case<br />\r\n&nbsp;</p>\r\n', '<p>Time complexity &nbsp;</p>\r\n', '<p>Best case</p>\r\n', '1', 38, 1, '4'),
(1640, '<p>Ethernet in metropolitan area network (MAN) can be used as</p>\r\n', '<p>pure ethernet</p>\r\n', '<p>ethernet over SDH<br />\r\n&nbsp;</p>\r\n', '<p>ethernet over MPLS</p>\r\n', '<p>all of the above</p>\r\n', '3', 30, 7, '4'),
(1641, '<p>__________ is the maximum number of steps that can executed for the given parameters</p>\r\n', '<p>Average case &nbsp; &nbsp;</p>\r\n', '<p>Time complexity &nbsp;</p>\r\n', '<p>Worst case</p>\r\n', '<p>Best case</p>\r\n', '1', 14, 13, '3'),
(1642, '<p>&nbsp;The six-step solution for the problem can be applied to</p>\r\n\r\n<p>I. Problems with Algorithmic Solution</p>\r\n\r\n<p>II. Problems with Heuristic Solution</p>\r\n', '<p>Only I</p>\r\n', '<p>Only II</p>\r\n', '<p>Both I and II</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Neither I nor II</p>\r\n', '3', 15, 13, '3'),
(1643, '<p>&nbsp;______ solution requires reasoning built on knowledge and experience</p>\r\n', '<p>Algorithmic Solution</p>\r\n', '<p>Heuristic Solution</p>\r\n', '<p>Random Solution</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '2', 13, 13, '2'),
(1644, '<p>While solving the problem with computer the most difficult step is __________.</p>\r\n', '<p>describing the problem</p>\r\n', '<p>finding out the cost of the software</p>\r\n', '<p>writing the computer instructions</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>testing the solution</p>\r\n', '2', 14, 13, '3'),
(1645, '<p>A point-to-point protocol over ethernet is a network protocol for<br />\r\n&nbsp;</p>\r\n', '<p>encapsulating PPP frames inside ethernet frames</p>\r\n', '<p>encapsulating ehternet framse inside&nbsp;PPP frames<br />\r\n&nbsp;</p>\r\n', '<p>for security of ethernet frames</p>\r\n', '<p>for&nbsp;security of PPP frames</p>\r\n', '3', 32, 7, '1'),
(1646, '<p>The time complexity of binary search is________.</p>\r\n', '<p>O(1)</p>\r\n', '<p>O(log n)</p>\r\n', '<p>O(n)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>O(n logn)</p>\r\n', '2', 13, 13, '2'),
(1647, '<p>The time complexity of linear search is________.</p>\r\n', '<p>O(1)</p>\r\n', '<p>O(log n)</p>\r\n', '<p>O(n)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>O(n logn)</p>\r\n', '2', 13, 13, '3'),
(1648, '<p>The Sorting method which is used for external sort is</p>\r\n', '<p>Bubble sort</p>\r\n', '<p>Quick sort</p>\r\n', '<p>Merge sort<br />\r\n&nbsp;</p>\r\n', '<p>Radix sort</p>\r\n', '3', 13, 13, '4'),
(1649, '<p>In analysis of algorithm, approximate relationship between the size of the job and the amount of work required to do is expressed by using _________</p>\r\n', '<p>Central tendency &nbsp;</p>\r\n', '<p>Differential equation &nbsp;</p>\r\n', '<p>Order of execution&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Order of magnitude</p>\r\n', '4', 18, 13, '3'),
(1650, '<p>Worst case efficiency of binary search is</p>\r\n', '<p>log2 n + 1<br />\r\n&nbsp;</p>\r\n', '<p>n<br />\r\n&nbsp;</p>\r\n', '<p>N2<br />\r\n&nbsp;</p>\r\n', '<p>2n</p>\r\n', '3', 13, 13, '1'),
(1651, '<p>High speed ethernet works&nbsp;on<br />\r\n&nbsp;</p>\r\n', '<p>coaxial&nbsp;cable<br />\r\n&nbsp;</p>\r\n', '<p>twisted pair cable<br />\r\n&nbsp;</p>\r\n', '<p>optical fiber<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 26, 7, '3'),
(1652, '<p>In quick sort, the number of partitions into which the file of size n is divided by a selected record is</p>\r\n', '<p>n</p>\r\n', '<p>n - 1</p>\r\n', '<p>2</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>n/2</p>\r\n', '5', 18, 13, '3'),
(1653, '<p>How many passes are required to sort a file of size n by bubble sort method?</p>\r\n', '<p>N2</p>\r\n', '<p>N</p>\r\n', '<p>N-1</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>N/2</p>\r\n', '3', 14, 13, '3'),
(1654, '<p>Method(s) to move data through a network of links and switches</p>\r\n', '<p>Packet switching</p>\r\n', '<p>Circuit switching</p>\r\n', '<p>Line switching</p>\r\n', '<p>Both (a) and (b)</p>\r\n', '3', 24, 7, '4'),
(1655, '<p>The worst-case time complexity of Selection Exchange Sort is________.</p>\r\n', '<p>O(n2)</p>\r\n', '<p>O(log n)</p>\r\n', '<p>O(n)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>O(n logn)</p>\r\n', '2', 22, 13, '1'),
(1656, '<p>The size of IP address in IPv6 is</p>\r\n', '<p>4bytes</p>\r\n', '<p>128bits</p>\r\n', '<p>8bytes</p>\r\n', '<p>100bits</p>\r\n', '3', 24, 7, '2'),
(1657, '<p>The worst-case time complexity of Merge Sort is________.</p>\r\n', '<p>O(n2)</p>\r\n', '<p>O(log n)</p>\r\n', '<p>O(n)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>O(n logn)</p>\r\n', '2', 10, 13, '4'),
(1658, '<p>The algorithm like Quick sort does not require extra memory for carrying out the sorting procedure. This technique is called __________.</p>\r\n', '<p>in-place</p>\r\n', '<p>stable</p>\r\n', '<p>unstable</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>in-partition</p>\r\n', '2', 15, 13, '1'),
(1659, '<p>The header length of an IPv6 datagram is _____</p>\r\n', '<p>10bytes</p>\r\n', '<p>25bytes</p>\r\n', '<p>30bytes&nbsp;</p>\r\n', '<p>40bytes</p>\r\n', '4', 25, 7, '4'),
(1660, '<p>Which of the following sorting procedures is the slowest?</p>\r\n', '<p>Quick sort</p>\r\n', '<p>Heap sort</p>\r\n', '<p>Shell sort</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Bubble sort</p>\r\n', '2', 13, 13, '4'),
(1661, '<p>Two main measures for the efficiency of an algorithm are</p>\r\n', '<p>Processor and memory</p>\r\n', '<p>Complexity and capacity</p>\r\n', '<p>Time and space</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Data and space</p>\r\n', '2', 13, 13, '3'),
(1662, '<p>The space factor when determining the efficiency of algorithm is measured by</p>\r\n', '<p>Counting the maximum memory needed by the algorithm</p>\r\n', '<p>Counting the minimum memory needed by the algorithm</p>\r\n', '<p>Counting the average memory needed by the algorithm</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Counting the maximum disk space needed by the algorithm</p>\r\n', '2', 14, 13, '1'),
(1663, '<p>The space factor when determining the efficiency of algorithm is measured by</p>\r\n', '<p>Counting the maximum memory needed by the algorithm</p>\r\n', '<p>Counting the minimum memory needed by the algorithm</p>\r\n', '<p>Counting the average memory needed by the algorithm</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Counting the maximum disk space needed by the algorithm</p>\r\n', '2', 15, 13, '1'),
(1664, '<p>IPv6 doesnot use ______ type of address</p>\r\n', '<p>Broadcast</p>\r\n', '<p>Multicast</p>\r\n', '<p>Anycast</p>\r\n', '<p>None of the above</p>\r\n', '4', 26, 7, '1'),
(1665, '<p>The number of possible ordered trees with three nodes A,B,C is?</p>\r\n', '<p>16</p>\r\n', '<p>12</p>\r\n', '<p>6</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>10</p>\r\n', '2', 22, 13, '2'),
(1666, '<p>Which one of the below is not divide and conquer approach?</p>\r\n', '<p>Insertion Sort</p>\r\n', '<p>Merge Sort</p>\r\n', '<p>Shell Sort</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Heap Sort</p>\r\n', '2', 22, 13, '2'),
(1667, '<p>push() and pop() functions are found in</p>\r\n', '<p>queues</p>\r\n', '<p>lists</p>\r\n', '<p>stacks</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>trees</p>\r\n', '2', 21, 13, '3'),
(1668, '<p>Minimum number of spanning tree in a connected graph is</p>\r\n', '<p>n</p>\r\n', '<p>nn - 1</p>\r\n', '<p>1</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '2', 20, 13, '3'),
(1669, '<p>Which layers of the OSI model are host-to-host layers?</p>\r\n', '<p>Transport, Session, Persentation, Application</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Network, Transport, Session, Presentation</p>\r\n', '<p>Datalink, Network, Transport, Session</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Physical, Datalink, Network, Transport</p>\r\n', '4', 23, 7, '1'),
(1670, '<p>Which layers of the OSI model are host-to-host layers?</p>\r\n', '<p>Transport, Session, Persentation, Application</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Network, Transport, Session, Presentation</p>\r\n', '<p>Datalink, Network, Transport, Session</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Physical, Datalink, Network, Transport</p>\r\n', '4', 23, 7, '1'),
(1671, '<p>An algorithm is</p>\r\n', '<p>a piece of code to be executed.</p>\r\n', '<p>a loosely written code to make final code.</p>\r\n', '<p>a step by step procedure to solve problem.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above.</p>\r\n', '2', 21, 13, '3'),
(1672, '<p>Quick sort running time depends on the selection of</p>\r\n', '<p>size of array</p>\r\n', '<p>pivot element</p>\r\n', '<p>sequence of values</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '2', 24, 13, '2'),
(1673, '<p>Which of the following IP address class is Multicast<br />\r\n&nbsp;</p>\r\n', '<p>Class A</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Class B</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Class C</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Class D</p>\r\n', '4', 22, 7, '4'),
(1674, '<p>Index of arrays in C programming langauge starts from</p>\r\n', '<p>0</p>\r\n', '<p>1</p>\r\n', '<p>either 0 or 1</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>undefined</p>\r\n', '2', 26, 13, '1'),
(1675, '<p>In the deletion operation of max heap, the root is replaced by</p>\r\n', '<p>next available value in the left sub-tree.</p>\r\n', '<p>next available value in the right sub-tree.</p>\r\n', '<p>any random value from the heap.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>last element of the last level</p>\r\n', '2', 27, 13, '4'),
(1676, '<p>The following sorting algorithms maintain two sub-lists, one sorted and one to be sorted -</p>\r\n', '<p>Selection Sort</p>\r\n', '<p>Insertion Sort</p>\r\n', '<p>Merge Sort</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>both A &amp; B</p>\r\n', '2', 25, 13, '4'),
(1677, '<p>Project scheduling is an example of</p>\r\n', '<p>greedy programming</p>\r\n', '<p>dynamic programming</p>\r\n', '<p>divide and conquer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '2', 24, 13, '2'),
(1678, '<p>What is the benefit of the Networking?</p>\r\n', '<p>File Sharing</p>\r\n', '<p>Easier access to Resources<br />\r\n&nbsp;</p>\r\n', '<p>Easier Backups</p>\r\n', '<p>All of the Above</p>\r\n', '4', 23, 7, '4'),
(1679, '<p>Linked list are not suitable data structure of which one of the following problems ?</p>\r\n', '<p>Insertion sort</p>\r\n', '<p>Binary search</p>\r\n', '<p>Radix sort</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Polynomial manipulation</p>\r\n', '2', 22, 13, '2'),
(1680, '<p>Which of this is not a guided media ?</p>\r\n', '<p>Fiber optical cable</p>\r\n', '<p>Coaxial cable&nbsp;</p>\r\n', '<p>Wireless LAN&nbsp;</p>\r\n', '<p>Copper wire</p>\r\n', '4', 24, 7, '3'),
(1681, '<p>Which of the following algorithm design technique is used in the quick sort algorithm?</p>\r\n', '<p>Dynamic programming</p>\r\n', '<p>Backtracking</p>\r\n', '<p>Divide and conquer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Greedy method</p>\r\n', '2', 24, 13, '3'),
(1682, '<p>UTP is commonly used in</p>\r\n', '<p>DSL</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>FTTP&nbsp;</p>\r\n', '<p>HTTP</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of the following</p>\r\n', '4', 22, 7, '1'),
(1683, '<p>Which of the following statement is true ?</p>\r\n', '<p>Optimal binary search tree construction can be performed efficiently using dynamic programming.</p>\r\n', '<p>Breath first search cannot be used to find converted components of a graph.</p>\r\n', '<p>Given the prefix and post fix walks over a binary tree.The binary tree cannot be uniquely constructe</p>\r\n', '<p>&nbsp;</p>\r\n\r\n<p>Depth first search can be used to find connected components of a graph.</p>\r\n', '2', 60, 1, '1'),
(1684, '<p>Coaxial cable consists of _______ concentric copper conductors.</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>4</p>\r\n', '4', 22, 7, '2'),
(1685, '<p>Fiber optics posses following properties</p>\r\n', '<p>Immune electromagnetic interference</p>\r\n', '<p>Very less signal attenuation</p>\r\n', '<p>Very hard to tap</p>\r\n', '<p>All of the above</p>\r\n', '4', 28, 7, '4'),
(1686, '<p>DHCP (dynamic host configuration protocol) provides _____&nbsp;to&nbsp;the client.</p>\r\n', '<p>IP&nbsp;address</p>\r\n', '<p>MAC address<br />\r\n&nbsp;</p>\r\n', '<p>url<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '4', 26, 7, '1'),
(1687, '<p>DHCP is&nbsp;used for<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>IPv6</p>\r\n', '<p>IPv4</p>\r\n', '<p>both (a) and (b)</p>\r\n', '<p>none of the above</p>\r\n', '4', 32, 7, '3'),
(1688, '<p>Which of the following is not the Networking Devices?<br />\r\n&nbsp;</p>\r\n', '<p>Gateways</p>\r\n', '<p>Linux</p>\r\n', '<p>&nbsp;Routers</p>\r\n', '<p>Firewalls</p>\r\n', '4', 22, 7, '2'),
(1689, '<p>What is the size of MAC Address?<br />\r\n&nbsp;</p>\r\n', '<p>16-bits<br />\r\n&nbsp;</p>\r\n', '<p>32-bits</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>48-bits</p>\r\n', '<p>64-bits</p>\r\n', '4', 19, 7, '3'),
(1690, '<p>Which of the following can be Software?<br />\r\n&nbsp;</p>\r\n', '<p>Routers</p>\r\n', '<p>Firewalls</p>\r\n', '<p>Gateway</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Modems</p>\r\n', '4', 19, 7, '2'),
(1691, '<p>What is the use of Ping command?</p>\r\n', '<p>To test a device on the network is reachable</p>\r\n', '<p>To test a hard disk fault<br />\r\n&nbsp;</p>\r\n', '<p>To test a bug in a Application</p>\r\n', '<p>To test a Pinter Quality</p>\r\n', '4', 16, 7, '1'),
(1692, '<p>MAC Address is the example of</p>\r\n', '<p>Transport Layer</p>\r\n', '<p>Data Link Layer</p>\r\n', '<p>Application Layer<br />\r\n&nbsp;</p>\r\n', '<p>Physical Layer</p>\r\n', '4', 22, 7, '2'),
(1693, '<p>Given two sorted lists of size m and n respectively.The number of comparisons needed in the worst case by the merge sort algorithm will be?</p>\r\n', '<p>mn</p>\r\n', '<p>max(m,n)</p>\r\n', '<p>min(m,n)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>m+n-1</p>\r\n', '2', 24, 13, '4'),
(1694, '<p>Merge sort uses ?</p>\r\n', '<p>Divide and conquer strategy</p>\r\n', '<p>Backtracking approach</p>\r\n', '<p>Heuristic search</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Greedy approach</p>\r\n', '2', 23, 13, '1'),
(1695, '<p>Which of the following algorithm design technique is used in the quick sort algorithm?</p>\r\n', '<p>Dynamic programming</p>\r\n', '<p>Backtracking</p>\r\n', '<p>Divide and conquer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Greedy method</p>\r\n', '2', 27, 13, '3'),
(1696, '<p>Which of the following is useful in traversing a given graph by breadth first search?</p>\r\n', '<p>Stack</p>\r\n', '<p>Set</p>\r\n', '<p>List</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Queue</p>\r\n', '2', 22, 13, '4'),
(1697, '<p>Which of the following is not the External Security Threats?</p>\r\n', '<p>Front-door Threats</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Back-door Threats</p>\r\n', '<p>Underground Threats</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Denial of Service (DoS)</p>\r\n', '4', 23, 7, '3'),
(1698, '<p>Which of the following is useful in implementing quick sort?</p>\r\n', '<p>Stack</p>\r\n', '<p>Set</p>\r\n', '<p>List</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Queue</p>\r\n', '2', 26, 13, '1'),
(1699, '<p>What is the full form of RAID ?<br />\r\n&nbsp;</p>\r\n', '<p>Redundant Array of Independent Disks</p>\r\n', '<p>Redundant Array of Important Disks</p>\r\n', '<p>Random Access of Independent Disks</p>\r\n', '<p>Random Access of Important Disks</p>\r\n', '4', 24, 7, '1'),
(1700, '<p>When determining the efficiency of algorithm, the space factor is measured by</p>\r\n', '<p>Counting the maximum memory needed by the algorithm<br />\r\n&nbsp;</p>\r\n', '<p>Counting the minimum memory needed by the algorithm<br />\r\n&nbsp;</p>\r\n', '<p>Counting the average memory needed by the algorithm<br />\r\n&nbsp;</p>\r\n', '<p>Counting the maximum disk space needed by the algorithm</p>\r\n', '2', 25, 13, '1'),
(1701, '<p>What do you mean by broadcasting in Networking?</p>\r\n', '<p>It means addressing a packet to all machine</p>\r\n', '<p>It means addressing a packet to some machine</p>\r\n', '<p>It means addressing a packet to a particular machine</p>\r\n', '<p>It means addressing a packet to except a particular machine</p>\r\n', '4', 29, 7, '1'),
(1702, '<p>The complexity of Bubble sort algorithm is</p>\r\n', '<p>O(n)<br />\r\n&nbsp;</p>\r\n', '<p>O(log n)<br />\r\n&nbsp;</p>\r\n', '<p>O(n2)<br />\r\n&nbsp;</p>\r\n', '<p>O(n log n)</p>\r\n', '2', 22, 13, '2'),
(1703, '<p>Which of the following is/are Protocols of Application?<br />\r\n&nbsp;</p>\r\n', '<p>FTP</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>DNS<br />\r\n&nbsp;</p>\r\n', '<p>Telnet</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 23, 7, '4'),
(1704, '<p>Linked lists are best suited</p>\r\n', '<p>for relatively permanent collections of data<br />\r\n&nbsp;</p>\r\n', '<p>for the size of the structure and the data in the structure are constantly changing<br />\r\n&nbsp;</p>\r\n', '<p>for both of above situation<br />\r\n&nbsp;</p>\r\n', '<p>for none of above situation</p>\r\n', '2', 26, 13, '2'),
(1705, '<p>Which of the following protocol is/are defined in Transport layer?<br />\r\n&nbsp;</p>\r\n', '<p>FTP<br />\r\n&nbsp;</p>\r\n', '<p>TCP<br />\r\n&nbsp;</p>\r\n', '<p>UDP</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>B &amp; C</p>\r\n', '5', 24, 7, '4'),
(1706, '<p>If the values of a variable in one module is indirectly changed by another module, this situation is called</p>\r\n', '<p>internal change<br />\r\n&nbsp;</p>\r\n', '<p>inter-module change<br />\r\n&nbsp;</p>\r\n', '<p>side effect<br />\r\n&nbsp;</p>\r\n', '<p>side-module update</p>\r\n', '2', 25, 13, '3'),
(1707, '<p>In linear search algorithm the Worst case occurs when</p>\r\n', '<p>The item is somewhere in the middle of the array<br />\r\n&nbsp;</p>\r\n', '<p>The item is not in the array at all<br />\r\n&nbsp;</p>\r\n', '<p>The item is the last element in the array<br />\r\n&nbsp;</p>\r\n', '<p>The item is the last element in the array or is not there at all</p>\r\n', '2', 27, 13, '4'),
(1708, '<p>For an algorithm the complexity of the average case is</p>\r\n', '<p>Much more complicated to analyze than that of worst case<br />\r\n&nbsp;</p>\r\n', '<p>Much more simpler to analyze than that of worst case<br />\r\n&nbsp;</p>\r\n', '<p>Sometimes more complicated and some other times simpler than that of worst case<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 24, 13, '1'),
(1709, '<p>The complexity of merge sort algorithm is</p>\r\n', '<p>O(n)<br />\r\n&nbsp;</p>\r\n', '<p>O(log n)<br />\r\n&nbsp;</p>\r\n', '<p>O(n2)<br />\r\n&nbsp;</p>\r\n', '<p>O(n log n)</p>\r\n', '2', 23, 13, '4'),
(1710, '<p>A local telephone network is an example of a _______ network&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Packet switched</p>\r\n', '<p>Circuit switched</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>both (a) and (b)</p>\r\n', '<p>none of the above</p>\r\n', '5', 27, 7, '1'),
(1711, '<p>The complexity of linear search algorithm is</p>\r\n', '<p>O(n)<br />\r\n&nbsp;</p>\r\n', '<p>O(log n)<br />\r\n&nbsp;</p>\r\n', '<p>O(n2)<br />\r\n&nbsp;</p>\r\n', '<p>O(n log n)</p>\r\n', '2', 22, 13, '1'),
(1712, '<p>When determining the efficiency of algorithm the time factor is measured by</p>\r\n', '<p>Counting microseconds<br />\r\n&nbsp;</p>\r\n', '<p>Counting the number of key operations<br />\r\n&nbsp;</p>\r\n', '<p>Counting the number of statements<br />\r\n&nbsp;</p>\r\n', '<p>Counting the kilobytes of algorithm</p>\r\n', '2', 27, 13, '2'),
(1713, '<p>Most packet switches use this principle&nbsp;</p>\r\n', '<p>Stop and wait</p>\r\n', '<p>Store and forward</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both (a) and (b)</p>\r\n', '<p>None of the above</p>\r\n', '5', 24, 7, '2'),
(1714, '<p>Which of the following data structure is linear data structure?</p>\r\n', '<p>Trees<br />\r\n&nbsp;</p>\r\n', '<p>Graphs<br />\r\n&nbsp;</p>\r\n', '<p>Arrays<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 19, 13, '3'),
(1715, '<p>The elements of an array are stored successively in memory cells because</p>\r\n', '<p>by this way computer can keep track only the address of the first element and the addresses of other elements can be calculated<br />\r\n&nbsp;</p>\r\n', '<p>the architecture of computer memory does not allow arrays to store other than serially<br />\r\n&nbsp;</p>\r\n', '<p>both of above<br />\r\n&nbsp;</p>\r\n', '<p>none of above</p>\r\n', '2', 27, 13, '1'),
(1716, '<p>Which of the following is not applicable for IP?</p>\r\n', '<p>Error reporting</p>\r\n', '<p>Handle addressing conventions</p>\r\n', '<p>Datagram format</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Packet handling conventions</p>\r\n', '5', 27, 7, '1'),
(1717, '<p>Which of the following data structure is not linear data structure?</p>\r\n', '<p>Arrays<br />\r\n&nbsp;</p>\r\n', '<p>Linked lists<br />\r\n&nbsp;</p>\r\n', '<p>Both of above<br />\r\n&nbsp;</p>\r\n', '<p>None of &nbsp;the above</p>\r\n', '3', 20, 13, '4'),
(1718, '<p>Which of the following field in IPv4 datagram is not related to fragmentation?</p>\r\n', '<p>Flags</p>\r\n', '<p>Offset</p>\r\n', '<p>TOS</p>\r\n', '<p>Identifier</p>\r\n', '5', 21, 7, '3'),
(1719, '<p>The Average case occur in linear search algorithm</p>\r\n', '<p>When Item is somewhere in the middle of the array<br />\r\n&nbsp;</p>\r\n', '<p>When Item is not in the array at all<br />\r\n&nbsp;</p>\r\n', '<p>When Item is the last element in the array<br />\r\n&nbsp;</p>\r\n', '<p>When Item is the last element in the array or is not there at all</p>\r\n', '3', 20, 13, '1'),
(1720, '<p>Two main measures for the efficiency of an algorithm are</p>\r\n', '<p>Processor and memory</p>\r\n', '<p>Complexity and capacity</p>\r\n', '<p>Time and space</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Data and space</p>\r\n', '3', 20, 13, '3'),
(1721, '<p>Finding the location of the element with a given value is:</p>\r\n', '<p>Traversal<br />\r\n&nbsp;</p>\r\n', '<p>Search<br />\r\n&nbsp;</p>\r\n', '<p>Sort<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 22, 13, '2'),
(1722, '<p>The maximum size of&nbsp;payload field in ethernet frame is<br />\r\n&nbsp;</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n', '<p>1000 bytes<br />\r\n&nbsp;</p>\r\n', '<p>1200 bytes<br />\r\n&nbsp;</p>\r\n', '<p>1300&nbsp;bytes<br />\r\n&nbsp;</p>\r\n', '<p>1500 bytes</p>\r\n', '5', 24, 7, '4'),
(1723, '<p>Which of the following case does not exist in complexity theory</p>\r\n', '<p>Best case<br />\r\n&nbsp;</p>\r\n', '<p>Worst case<br />\r\n&nbsp;</p>\r\n', '<p>Average case<br />\r\n&nbsp;</p>\r\n', '<p>Null case</p>\r\n', '4', 24, 13, '4');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(1724, '<p>The operation of processing each element in the list is known as</p>\r\n', '<p>Sorting<br />\r\n&nbsp;</p>\r\n', '<p>\\Merging</p>\r\n', '<p>Inserting<br />\r\n&nbsp;</p>\r\n', '<p>Traversal</p>\r\n', '4', 23, 13, '4'),
(1725, '<p>Arrays are best data structures</p>\r\n', '<p>for relatively permanent collections of data<br />\r\n&nbsp;</p>\r\n', '<p>for the size of the structure and the data in the structure are constantly changing<br />\r\n&nbsp;</p>\r\n', '<p>for both of above situation<br />\r\n&nbsp;</p>\r\n', '<p>for none of above situation</p>\r\n', '4', 24, 13, '1'),
(1726, '<p>Each array declaration need not give, implicitly or explicitly, the information about</p>\r\n', '<p>the name of array<br />\r\n&nbsp;</p>\r\n', '<p>the data type of array<br />\r\n&nbsp;</p>\r\n', '<p>the first data from the set to be stored<br />\r\n&nbsp;</p>\r\n', '<p>the index set of the array</p>\r\n', '4', 25, 13, '3'),
(1727, '<p>Dijkstra&rsquo;s algorithm :</p>\r\n', '<p>Has greedy approach to find all shortest paths<br />\r\n&nbsp;</p>\r\n', '<p>Has both greedy and Dynamic approach to find all shortest paths<br />\r\n&nbsp;</p>\r\n', '<p>Has greedy approach to compute single source shortest paths to all other vertices<br />\r\n&nbsp;</p>\r\n', '<p>Has both greedy and dynamic approach to compute single source shortest paths to all<br />\r\nother vertices.&nbsp;</p>\r\n', '7', 27, 13, '3'),
(1728, '<p>The complexity of Binary search algorithm is</p>\r\n', '<p>O(n)<br />\r\n&nbsp;</p>\r\n', '<p>O(log )<br />\r\n&nbsp;</p>\r\n', '<p>O(n2)<br />\r\n&nbsp;</p>\r\n', '<p>O(n log n)</p>\r\n', '4', 19, 13, '2'),
(1729, '<p>&nbsp;What algorithm technique is used in the implementation of Kruskal&rsquo;ssolution for<br />\r\ntheMST?</p>\r\n', '<p>Greedy Technique<br />\r\n&nbsp;</p>\r\n', '<p>Divide-and-ConquerTechnique</p>\r\n', '<p><br />\r\nDynamic Programming Technique</p>\r\n', '<p><br />\r\nThe algorithm combines more than one of the above techniques</p>\r\n', '7', 22, 13, '1'),
(1730, '<p>Each data item in a record may be a group item composed of sub-items; those items which are indecomposable are called</p>\r\n', '<p>elementary items</p>\r\n', '<p>atoms</p>\r\n', '<p>scalars</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of above</p>\r\n', '4', 25, 13, '4'),
(1731, '<p>Which of the following is two way list?</p>\r\n', '<p>grounded header list</p>\r\n', '<p>circular header list</p>\r\n', '<p>linked list with header and trailer nodes</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of above</p>\r\n', '4', 22, 13, '4'),
(1732, '<p>Which of the following statement is false?</p>\r\n', '<p>Arrays are dense lists and static data structure</p>\r\n', '<p>data elements in linked list need not be stored in adjacent space in memory</p>\r\n', '<p>pointers store the next data element of a list</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>linked lists are collection of the nodes that contain information part and next pointer</p>\r\n', '4', 28, 13, '3'),
(1733, '<p>By Strassen&#39;s equation what is wrong in the following equation</p>\r\n', '<p>p1=(a+d)(e+h)</p>\r\n', '<pre>\r\np2=(-e+g)d</pre>\r\n', '<p>p3=(a-c)(e+f)</p>\r\n', '<p>&nbsp; p4=(a+b)h</p>\r\n', '7', 32, 13, '2'),
(1734, '<p>When inorder traversing a tree resulted E A C K F H D B G; the preorder traversal would return</p>\r\n', '<p>FAEKCDBHG</p>\r\n', '<p>FAEKCDHGB</p>\r\n', '<p>EAFKHDCBG</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>FEAKDCHBG</p>\r\n', '4', 33, 13, '2'),
(1735, '<p>The memory address of the first element of an array is called</p>\r\n', '<p>floor address</p>\r\n', '<p>foundation address</p>\r\n', '<p>first address</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>base address</p>\r\n', '4', 20, 13, '2'),
(1736, '<p>The difference between linear array and a record is</p>\r\n', '<p>An array is suitable for homogeneous data but the data items in a record may have different data type</p>\r\n', '<p>In a record, there may not be a natural ordering in opposed to linear array.</p>\r\n', '<p>A record form a hierarchical structure but a linear array does not</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of above</p>\r\n', '4', 28, 13, '4'),
(1737, '<p>By Strassen&#39;s equation what is wrong in the following equation</p>\r\n', '<p>p1=(a+d)(e+h) &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;</p>\r\n\r\n<p>p7=(-e+g)d &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>p3=(a-c)(e+f)</p>\r\n', '<p>p4=(a-b)h</p>\r\n', '7', 33, 13, '4'),
(1738, '<p>Which of the following name does not relate to stacks?</p>\r\n', '<p>FIFO lists</p>\r\n', '<p>LIFO list</p>\r\n', '<p>Piles</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Push-down lists</p>\r\n', '4', 21, 13, '1'),
(1739, '<p>Which of the following data structures are indexed structures?</p>\r\n', '<p>linear arrays</p>\r\n', '<p>linked lists</p>\r\n', '<p>both of above</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of above</p>\r\n', '4', 24, 13, '1'),
(1740, '<p>The term &ldquo;push&rdquo; and &ldquo;pop&rdquo; is related to the</p>\r\n', '<p>array</p>\r\n', '<p>lists</p>\r\n', '<p>stacks</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '4', 22, 13, '3'),
(1741, '<p>The advantage of selecting maxmin algorithm using divide and conquer<br />\r\nmethod compared to staightmaxmin algorithm is _____<br />\r\n&nbsp;</p>\r\n', '<p>Less time complexity</p>\r\n', '<p>Less space complexity&nbsp;</p>\r\n', '<p>High accuracy</p>\r\n', '<p>High time complexity</p>\r\n', '7', 22, 13, '1'),
(1742, '<p>The memory address of fifth element of an array can be calculated by the formula</p>\r\n', '<p>LOC(Array[5]=Base(Array)+w(5-lower bound), where w is the number of words per memory cell for the array</p>\r\n', '<p>LOC(Array[5])=Base(Array[5])+(5-lower bound), where w is the number of words per memory cell for the array</p>\r\n', '<p>LOC(Array[5])=Base(Array[4])+(5-Upper bound), where w is the number of words per memory cell for the array</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '4', 36, 13, '1'),
(1743, '<p>Two dimensional arrays are also called</p>\r\n', '<p>tables arrays</p>\r\n', '<p>matrix arrays</p>\r\n', '<p>both of above</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of above</p>\r\n', '4', 23, 13, '3'),
(1744, '<p>When new data are to be inserted into a data structure, but there is no available space; this situation is usually called</p>\r\n', '<p>underflow</p>\r\n', '<p>overflow</p>\r\n', '<p>housefull</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>saturated</p>\r\n', '4', 32, 13, '2'),
(1745, '<p>In Knapsack problem, the best strategy to get the optimal solution, where Pi, Wi is the<br />\r\nProfit, Weight associated with each of the Xi<br />\r\nth object respectively is to</p>\r\n', '<p>Arrange the values Pi/Wi in ascending order</p>\r\n', '<p>Arrange the values Pi/Xi in ascending order</p>\r\n', '<p><br />\r\nArrange the values Pi/Wi in descending order</p>\r\n', '<p><br />\r\nArrange the values Pi/Xi in descending order</p>\r\n', '7', 32, 13, '4'),
(1746, '<p>The situation when in a linked list START=NULL is</p>\r\n', '<p>underflow</p>\r\n', '<p>overflow</p>\r\n', '<p>housefull</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>saturated</p>\r\n', '4', 22, 13, '1'),
(1747, '<p>The mathematical definition for Omega can be defined as, provided f,g:N?R+ and c<br />\r\nis a positive constant and n &gt; n0,</p>\r\n', '<p>f(n)= c. g(n) n<br />\r\n&nbsp;</p>\r\n', '<p>f(n) &pound; c. g(n) n<br />\r\n&nbsp;</p>\r\n', '<p>f(n) = c + g(n) n<br />\r\n&nbsp;</p>\r\n', '<p>f(n) &pound; c + g(n) n</p>\r\n', '7', 30, 13, '1'),
(1748, '<p>A variable P is called pointer if</p>\r\n', '<p>P contains the address of an element in DATA.</p>\r\n', '<p>P points to the address of first element in DATA</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>P can store only memory addresses</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>P contain the DATA and the address of DATA</p>\r\n', '4', 23, 13, '1'),
(1749, '<p>Which of the following data structure can&rsquo;t store the non-homogeneous data elements?</p>\r\n', '<p>Arrays</p>\r\n', '<p>Records</p>\r\n', '<p>Pointers</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None</p>\r\n', '4', 24, 13, '1'),
(1750, '<p>Which of the following data structure store the homogeneous data elements?</p>\r\n', '<p>Arrays</p>\r\n', '<p>Records</p>\r\n', '<p>Pointers</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None</p>\r\n', '4', 20, 13, '1'),
(1751, '<p>Which of the following is not a limitation of binary search algorithm?</p>\r\n', '<p>must use a sorted array</p>\r\n', '<p>requirement of sorted array is expensive when a lot of insertion and deletions are needed</p>\r\n', '<p>there must be a mechanism to access middle element directly</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>binary search algorithm is not efficient when the data elements are more than 1000.</p>\r\n', '4', 28, 13, '4'),
(1752, '<p>Binary search algorithm can not be applied to</p>\r\n', '<p>sorted linked list</p>\r\n', '<p>sorted binary trees</p>\r\n', '<p>sorted linear array</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>pointer array</p>\r\n', '4', 25, 13, '1'),
(1753, '<p>A data structure where elements can be added or removed at either end but not in the middle</p>\r\n', '<p>Linked lists</p>\r\n', '<p>Stacks</p>\r\n', '<p>Queues</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Deque</p>\r\n', '4', 22, 13, '4'),
(1754, '<p>Which of the following is not the required condition for binary search algorithm?</p>\r\n', '<p>The list must be sorted</p>\r\n', '<p>there should be the direct access to the middle element in any sublist</p>\r\n', '<p>There must be mechanism to delete and/or insert elements in list</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '4', 27, 13, '3'),
(1755, '<p>The OBST algorithm in worst case takes _______ time if all c(i, j )&rsquo;s and r(i, j)&rsquo;s are<br />\r\ncalculated.</p>\r\n', '<pre>\r\nO(log n) </pre>\r\n\r\n<pre>\r\n\r\n&nbsp;</pre>\r\n', '<pre>\r\nO(n4)</pre>\r\n', '<p>O(n3)</p>\r\n', '<pre>\r\nO(n log n)</pre>\r\n', '7', 20, 13, '3'),
(1756, '<p>What is the result of the following operation Top (Push (S, X))</p>\r\n', '<p>X</p>\r\n', '<p>null</p>\r\n', '<p>s</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of these</p>\r\n', '4', 24, 13, '1'),
(1757, '<p>Queue can be used to implement ?</p>\r\n', '<p>quick sort</p>\r\n', '<p>merge sort</p>\r\n', '<p>heap sort</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>insertion sort</p>\r\n', '4', 23, 13, '1'),
(1758, '<p>Testing of a program consists of 2 phases which are ______________________<br />\r\nand ____________</p>\r\n', '<p><br />\r\nAverage case &amp; Worst case</p>\r\n', '<p>Time complexity &amp; Space complexity<br />\r\n&nbsp;</p>\r\n', '<p>Validation and checking errors</p>\r\n', '<p>Debugging and profiling</p>\r\n', '7', 20, 13, '4'),
(1759, '<p>The number of binary trees with 3 nodes which when traversed in post order gives the sequence A,B,C is ?</p>\r\n', '<p>3</p>\r\n', '<p>9</p>\r\n', '<p>7</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>5</p>\r\n', '4', 22, 13, '4'),
(1760, '<p>Sparse matrices have ?</p>\r\n', '<p>no zero</p>\r\n', '<p>many zero</p>\r\n', '<p>higher dimenstion</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none</p>\r\n', '4', 22, 13, '2'),
(1761, '<p>A procedure that calls itself is called</p>\r\n', '<p>illegal call</p>\r\n', '<p>reverse polish</p>\r\n', '<p>recursive</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '4', 22, 13, '3'),
(1762, '<p>Travelling salesman problem is an example of</p>\r\n', '<p>Dynamic Algorithm</p>\r\n', '<p>Greedy Algorithm</p>\r\n', '<p>Recursive Approach</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Divide &amp; Conquer</p>\r\n', '4', 20, 13, '2'),
(1763, '<p>&nbsp;___________ is the process of executing a correct program on data sets and<br />\r\nmeasuring the time and space it takes tocompute the results.</p>\r\n', '<p>Debugging<br />\r\n&nbsp;</p>\r\n', '<p>Profiling</p>\r\n', '<p>Combining</p>\r\n', '<p>Conqure</p>\r\n', '7', 22, 13, '2'),
(1764, '<p>In the network HTTP resources are located by<br />\r\n&nbsp;</p>\r\n', '<p>uniform resource identifier</p>\r\n', '<p>unique resource locator</p>\r\n', '<p>unique resource identifier</p>\r\n', '<p>none of the above&nbsp;</p>\r\n', '5', 27, 7, '1'),
(1765, '<p>What is not true about insertion sort?</p>\r\n', '<p>Exhibits the worst case performance when the initial array is sorted in reverse order.</p>\r\n', '<p>Worst case and average case performance is ?(n2)</p>\r\n', '<p>Can be compared to the way a card player arranges his card from a card deck.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 21, 13, '4'),
(1766, '<p>Graph traversal is different from a tree traversal, because</p>\r\n', '<p>trees are not connected.</p>\r\n', '<p>graphs may have loops..</p>\r\n', '<p>trees have root.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None is true as tree is a subset of graph</p>\r\n', '4', 22, 13, '3'),
(1767, '<p>In context with time-complexity, find the odd out -</p>\r\n', '<p>Deletion from Linked List.</p>\r\n', '<p>Searching in Hash Table</p>\r\n', '<p>Adding edge in Adjacency Matrix</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Heapify a Binary Heap</p>\r\n', '4', 24, 13, '4'),
(1768, '<p>Which of the following is not possible with an array in C programming langauge -</p>\r\n', '<p>Declaration</p>\r\n', '<p>Definition</p>\r\n', '<p>Dynamic Allocation</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array of strings</p>\r\n', '4', 27, 13, '3'),
(1769, '<p>In Algorithm Specification the blockes are indicated with matching _______</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Braces</p>\r\n', '<p><br />\r\nParenthesis&nbsp;</p>\r\n', '<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Square Brackets</p>\r\n', '<p>Slashes</p>\r\n', '7', 24, 13, '1'),
(1770, '<p>Recursion uses more memory space than iteration because</p>\r\n', '<p>it uses stack instead of queue.</p>\r\n', '<p>every recursive call has to be stored.</p>\r\n', '<p>both A &amp; B are true.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above are true.</p>\r\n', '4', 27, 13, '2'),
(1771, '<p>The following sorting algorithms maintain two sub-lists, one sorted and one to be sorted -</p>\r\n', '<p>Selection Sort</p>\r\n', '<p>Insertion Sort</p>\r\n', '<p>Merge Sort</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>both A &amp;&nbsp;B</p>\r\n', '4', 23, 13, '4'),
(1772, '<p>Huffmancodes are the applications of _________ with minimal weighted external<br />\r\npath length obtained by an optimal set.</p>\r\n', '<p>BST</p>\r\n', '<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />\r\nBinary tree &nbsp;</p>\r\n', '<p>&nbsp; &nbsp;MST</p>\r\n', '<p>&nbsp;Weighted Graph</p>\r\n', '7', 21, 13, '2'),
(1773, '<p>Suppose we are sorting an array of eight integers using some quadratic sorting algorithm. After four iterations of the algorithm&rsquo;s main loop, the array elements are ordered as shown here:</p>\r\n\r\n<p>2 4 5 7 8 1 3 6</p>\r\n', '<p>Insertion sort</p>\r\n', '<p>Selection sort</p>\r\n', '<p>Either of a and b</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 26, 13, '1'),
(1774, '<p>The running time of insertion sort is</p>\r\n', '<p>O(n^2)</p>\r\n', '<p>O(n)</p>\r\n', '<p>O(log n)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>O(n log n)</p>\r\n', '4', 20, 13, '1'),
(1775, '<p>A vertex of degree one is called</p>\r\n', '<p>padent</p>\r\n', '<p>isolated vertex</p>\r\n', '<p>null vertex</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>colored vertex</p>\r\n', '4', 15, 13, '1'),
(1776, '<p>A sort which compares adjacent elements in a list and switches where necessary is ____.</p>\r\n', '<p>insertion sort</p>\r\n', '<p>heap sort</p>\r\n', '<p>quick sort</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>bubble sort</p>\r\n', '4', 19, 13, '1'),
(1777, '<p>The Hamiltonian cycles problem uses the following line of code to generate a<br />\r\nnext vertex, provided x[ ] is a global array and kth vertex is under consideration:</p>\r\n', '<p>x[k] ? (x[k] + 1) mod n</p>\r\n', '<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; x[k] ? (x[k]) mod (n)<br />\r\n&nbsp;</p>\r\n', '<p>x[k] ? (x[k] + 1) mod (n+1)</p>\r\n', '<p>&nbsp; &nbsp; &nbsp; x[k] ? x[k+1] mod n</p>\r\n', '7', 32, 13, '3'),
(1778, '<p>The upper bound on the time complexity of the nondeterministic<br />\r\nsorting algorithm is<br />\r\n&nbsp;</p>\r\n', '<p>O(n) &nbsp; &nbsp;</p>\r\n', '<p>O(n log n) &nbsp;</p>\r\n', '<p>O(1) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O( log n)</p>\r\n', '4', 24, 13, '1'),
(1779, '<p>The DHCP server</p>\r\n', '<p>maintains a database&nbsp;of&nbsp;available IP addresses</p>\r\n', '<p>maintains the information about client configuration parameters</p>\r\n', '<p>grants a IP address when receives a request from a client<br />\r\n&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '5', 28, 7, '4'),
(1780, '<p>Which of the following is correct regarding Class B Address of IP address<br />\r\n&nbsp;</p>\r\n', '<p>Network bit &ndash; 14, Host bit &ndash; 16</p>\r\n', '<p>Network bit &ndash; 16, Host bit &ndash; 14</p>\r\n', '<p>Network bit &ndash; 18, Host bit &ndash; 16</p>\r\n', '<p>Network bit &ndash; 12, Host bit &ndash; 14</p>\r\n', '5', 26, 7, '1'),
(1781, '<p>&nbsp;The graph colouringalgorithm&rsquo;s time can be bounded by _________</p>\r\n', '<p>O(mnm)</p>\r\n', '<p>O(nm)</p>\r\n', '<p>O(nm. 2n)</p>\r\n', '<p>O(nmn)</p>\r\n', '7', 20, 13, '4'),
(1782, '<p>The worst case time complexity of the nondeterministic dynamic knapsack<br />\r\nalgorithm is</p>\r\n', '<p>O(n log n) &nbsp;</p>\r\n', '<p>O( log n) &nbsp;</p>\r\n', '<p>O(n2) &nbsp;</p>\r\n', '<p>O(n)</p>\r\n', '4', 20, 13, '4'),
(1783, '<p>Recursive algorithms are based on</p>\r\n', '<p>Divideand conquer approach &nbsp; &nbsp;</p>\r\n', '<p>Top-down approach<br />\r\n&nbsp;</p>\r\n', '<p>Bottom-up approach &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Hierarchical approach</p>\r\n', '4', 22, 13, '3'),
(1784, '<p>What do you call the selected keys in the quick sort method?</p>\r\n', '<p>Outer key &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Inner Key &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Partition key &nbsp; &nbsp;</p>\r\n', '<p>Pivot key</p>\r\n', '4', 10, 13, '4'),
(1785, '<p>How do you determine the cost of a spanning tree?</p>\r\n', '<p>By the sum of the costs of the edges of the tree<br />\r\n&nbsp;</p>\r\n', '<p>By the sum of the costs of the edges and vertices of the tree<br />\r\n&nbsp;</p>\r\n', '<p>By the sum of the costs of the vertices of the tree<br />\r\n&nbsp;</p>\r\n', '<p>By the sum of the costs of the edges of the graph</p>\r\n', '4', 26, 13, '1'),
(1786, '<p>The time complexity of the normal quick sort, randomized quick sort algorithms in the<br />\r\nworst case is</p>\r\n', '<p>O(n2), O(n log n) &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O(n2), O(n2) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O(n log n), O(n2) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O(n log n), O(n log n)</p>\r\n', '4', 26, 13, '2'),
(1787, '<p>&nbsp;For 0/1 KNAPSACK problem, the algorithm takes ________ amount of time for<br />\r\nmemory table, and ______time to determine the optimal load, for N objects and<br />\r\nW as the capacity of KNAPSACK.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>O(N+W), O(NW)</p>\r\n', '<p>&nbsp; &nbsp;?(NW),O(N+W)</p>\r\n', '<p>&nbsp; &nbsp; O(N),O(NW)</p>\r\n', '<p>&nbsp; &nbsp; O(NW),O(N)</p>\r\n', '8', 28, 13, '2'),
(1788, '<p>Let there be an array of length &lsquo;N&rsquo;, and the selection sort algorithm is used to sort it,<br />\r\nhow many times a swap function is called to complete the execution?</p>\r\n', '<p>N log N times &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;log N times &nbsp;</p>\r\n', '<p>N2 times<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;N-1 times</p>\r\n', '4', 20, 13, '4'),
(1789, '<p>Breadth first search __________</p>\r\n', '<p>Scans each incident node along with its children.<br />\r\n&nbsp;</p>\r\n', '<p>Scans all incident edges before moving to other node.<br />\r\n&nbsp;</p>\r\n', '<p>Is same as backtracking<br />\r\n&nbsp;</p>\r\n', '<p>Scans all the nodes in random order.</p>\r\n', '4', 23, 13, '2'),
(1790, '<p>Which method of traversal does not use stack to hold nodes that are waiting to be<br />\r\nprocessed?</p>\r\n', '<p>Dept First &nbsp; &nbsp;</p>\r\n', '<p>D-search</p>\r\n', '<p>Breadth first<br />\r\n&nbsp;</p>\r\n', '<p>Back-tracking</p>\r\n', '4', 26, 13, '3'),
(1791, '<p>The last address of IP address represents</p>\r\n', '<p>Unicast address<br />\r\n&nbsp;</p>\r\n', '<p>Network address</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Broadcast address</p>\r\n', '<p>none of the above&nbsp;</p>\r\n', '5', 23, 7, '3'),
(1792, '<p>The Knapsack problem where the objective function is to minimize the profit is<br />\r\n______</p>\r\n', '<p>Greedy &nbsp;</p>\r\n', '<p>Dynamic 0 / 1</p>\r\n', '<p>Back tracking</p>\r\n', '<p>Branch &amp; Bound 0/1</p>\r\n', '4', 22, 13, '4'),
(1793, '<p>Time complexity of given algorithm<br />\r\nAlgorithm Display (A)<br />\r\n{<br />\r\nFor I:=0 to n-1<br />\r\n{<br />\r\nFor J:=0 to n-1<br />\r\n{<br />\r\nWrite A;<br />\r\n}<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2n2+4n+4</p>\r\n', '<p>2n2+4n+2</p>\r\n', '<p>2n2+n</p>\r\n', '<p>2n2-1</p>\r\n', '8', 55, 13, '2'),
(1794, '<p>For analyzing an algorithm, which is better computing time?</p>\r\n', '<p>O (100 Log N) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O (N) &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>O (2N) &nbsp; &nbsp;</p>\r\n', '<p>O (N logN)</p>\r\n', '5', 23, 13, '1'),
(1795, '<p>Time complexity of given algorithm<br />\r\nAlgorithmSum(A,S)<br />\r\n{<br />\r\nfor i:=1 to n-1<br />\r\n{<br />\r\nfor j:=2 to n-1<br />\r\n{<br />\r\nS:=S+i+j;<br />\r\nreturn S;<br />\r\n}<br />\r\n}<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>6n2-14n+4</p>\r\n', '<p>6n2+14n+10</p>\r\n', '<p>4n2+6n+12<br />\r\n&nbsp;</p>\r\n', '<p>6n2-14n+10</p>\r\n', '8', 60, 13, '4'),
(1796, '<p>Let f, t: N?R ? 0, and t (n) ?O (f (n)) iff t(n)= c.f (n) where c is positive real<br />\r\nconstant and n= no, then no is ___________</p>\r\n', '<p>Upper bound &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Lower bound &nbsp;</p>\r\n', '<p>Duality value<br />\r\n&nbsp;</p>\r\n', '<p>Threshold value</p>\r\n', '5', 30, 13, '2'),
(1797, '<p>Choose the correct answer for the following statements:<br />\r\nI. The theory of NP&ndash;completeness provides a method of obtaining a<br />\r\npolynomial time for NPalgorithms.<br />\r\nII. All NP-complete problem are NP-Hard.</p>\r\n', '<p>I is FALSE and II is TRUE &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;I is TRUE and II is FALSE<br />\r\n&nbsp;</p>\r\n', '<p>Both are TRUE &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Both are FALSE</p>\r\n', '5', 26, 13, '1'),
(1798, '<p>which is not feasible solution in the case of job sequence problem<br />\r\nitem : 1 2 3 4<br />\r\nprofit : 100 10 15 27<br />\r\ndeadline : 2 1 2 1</p>\r\n', '<p>(1,4)</p>\r\n', '<p>(2,4)</p>\r\n', '<p>&nbsp; &nbsp;(4,3)</p>\r\n', '<p>&nbsp; &nbsp;(1,2)</p>\r\n', '8', 80, 13, '2'),
(1799, '<p>Sorting is not possible by using which of the following methods?</p>\r\n', '<p>Insertion &nbsp;</p>\r\n', '<p>Selection &nbsp;</p>\r\n', '<p>Deletion &nbsp;</p>\r\n', '<p>Exchange</p>\r\n', '5', 15, 13, '3'),
(1800, '<p>What is the type of the algorithm used in solving the 8 Queens problem?</p>\r\n', '<p>Backtracking &nbsp; &nbsp;</p>\r\n', '<p>Dynamic &nbsp;</p>\r\n', '<p>Branch and Bound &nbsp;</p>\r\n', '<p>DandC</p>\r\n', '5', 22, 13, '1'),
(1801, '<p>The following are the statements regarding the NP problems. Chose the right option<br />\r\nfrom the following options:<br />\r\nI. All NP-complete problems are not NP-hard.<br />\r\nII. SomeNP-hard problems are not known to be NP-complete.</p>\r\n', '<p>Both (I) and (II) are true<br />\r\n&nbsp;</p>\r\n', '<p>Both (I) and (II) are false<br />\r\n&nbsp;</p>\r\n', '<p>Only (I) is true<br />\r\n&nbsp;</p>\r\n', '<p>Only (II) is true</p>\r\n', '5', 32, 13, '4'),
(1802, '<p>Let G be a graph with &lsquo;n&rsquo; nodes and let &lsquo;m&rsquo; be the chromatic number of the graph.<br />\r\nThen the time taken by the backtracking algorithm to color it is</p>\r\n', '<p>O(nm)<br />\r\n&nbsp;</p>\r\n', '<p>O(n+m)<br />\r\n&nbsp;</p>\r\n', '<p>O(mnm)<br />\r\n&nbsp;</p>\r\n', '<p>O(nmn)</p>\r\n', '5', 23, 13, '4'),
(1803, '<p>which is optimal value in the case of job sequence problem<br />\r\nitem : 1 2 3 4 5<br />\r\nprofit : 20 15 10 5 1<br />\r\ndeadline : 2 2 3 3 3</p>\r\n', '<p>(1,3,4)</p>\r\n', '<p>&nbsp;(1,2,4) &nbsp; &nbsp;</p>\r\n', '<p>&nbsp; (4,2,3)</p>\r\n', '<p>(1,5,2)</p>\r\n', '8', 33, 13, '2'),
(1804, '<p>The time complexity of the shortest path algorithm can be bounded by</p>\r\n', '<p>O(n2)<br />\r\n&nbsp;</p>\r\n', '<p>O(n4)<br />\r\n&nbsp;</p>\r\n', '<p>O(n3)<br />\r\n&nbsp;</p>\r\n', '<p>O(n)</p>\r\n', '5', 21, 13, '3'),
(1805, '<p>Read the following statements carefully and pick the correct option:<br />\r\nI. The worst time complexity of the Floyd&rsquo;s algorithm is O(n3). II.<br />\r\nThe worst time complexity of the Warshall&rsquo;s algorithm is O(n3).</p>\r\n', '<p>(I) is false but (II) is true<br />\r\n&nbsp;</p>\r\n', '<p>(I) is true but (II) is false<br />\r\n&nbsp;</p>\r\n', '<p>Both (I) and (II) are true<br />\r\n&nbsp;</p>\r\n', '<p>(I) is true and (II) is not true always&nbsp;</p>\r\n', '5', 31, 13, '3'),
(1806, '<p>Theasymptotic notation for defining the average time complexity is</p>\r\n', '<p>Equivalence<br />\r\n&nbsp;</p>\r\n', '<p>Symmetric<br />\r\n&nbsp;</p>\r\n', '<p>Reflexive<br />\r\n&nbsp;</p>\r\n', '<p>Both (A) and (B) above</p>\r\n', '5', 21, 13, '1'),
(1807, '<p>which is optimal value in the case of fractional knapsack problem, capacity of<br />\r\nknapsack is 20<br />\r\nitem : 1 2 3<br />\r\nprofit : 25 24 15<br />\r\nweight : 18 15 10</p>\r\n', '<p>498</p>\r\n', '<p>499</p>\r\n', '<p>480</p>\r\n', '<p>485</p>\r\n', '8', 110, 13, '1'),
(1808, '<p>For the bubble sort algorithm, what is the time complexity of the best/worst case?<br />\r\n(assume that the computation stops as soon as no more swaps in one pass)</p>\r\n', '<p>best case: O(n) worst case: O(n*n)<br />\r\n&nbsp;</p>\r\n', '<p>best case: O(n) worst case: O(n*log(n))<br />\r\n&nbsp;</p>\r\n', '<p>best case: O(n*log(n)) worst case: O(n*log(n))<br />\r\n&nbsp;</p>\r\n', '<p>best case: O(n*log(n)) worst case: O(n*n)</p>\r\n', '5', 32, 13, '1'),
(1809, '<p>For the quick sort algorithm, what is the time complexity of the best/worst case?</p>\r\n', '<p>best case: O(n) worst case: O(n*n)<br />\r\n&nbsp;</p>\r\n', '<p>best case: O(n) worst case: O(n*log(n))<br />\r\n&nbsp;</p>\r\n', '<p>best case: O(n*log(n)) worst case: O(n*log(n))<br />\r\n&nbsp;</p>\r\n', '<p>best case: O(n*log(n)) worst case: O(n*n)</p>\r\n', '5', 26, 13, '4'),
(1810, '<p>In an arbitrary tree ( not a search tree) of order M. Its size is N, and its height is K.<br />\r\nThe computation time needed to find a data item on T is</p>\r\n', '<p>O(K*K)<br />\r\n&nbsp;</p>\r\n', '<p>O(M*M)<br />\r\n&nbsp;</p>\r\n', '<p>O(N)<br />\r\n&nbsp;</p>\r\n', '<p>O(K)</p>\r\n', '5', 24, 13, '3'),
(1811, '<p>When we say an algorithm has a time complexity of O (n), what does it mean?</p>\r\n', '<p>The algorithm has &lsquo;n&rsquo; nested loops<br />\r\n&nbsp;</p>\r\n', '<p>The computation time taken by the algorithm is proportional to n<br />\r\n&nbsp;</p>\r\n', '<p>The algorithm is &lsquo;n&rsquo; times slower than a standard algorithm</p>\r\n', '<p><br />\r\nThere are &lsquo;n&rsquo; number of statements in the algorithm</p>\r\n', '8', 29, 13, '2'),
(1812, '<p>Which of the following belongs to the algorithm paradigm?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Minimum &amp; Maximum problem</p>\r\n', '<p>Knapsack problem</p>\r\n', '<p>Selection problem</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Merge sort</p>\r\n', '5', 23, 13, '2'),
(1813, '<p>The time taken by NP-class sorting algorithm is</p>\r\n', '<p>O(1)<br />\r\n&nbsp;</p>\r\n', '<p>O(log n)<br />\r\n&nbsp;</p>\r\n', '<p>O(n2)<br />\r\n&nbsp;</p>\r\n', '<p>O(n)</p>\r\n', '5', 15, 13, '4'),
(1814, '<p>Find the odd one out from the following categories of algorithms.</p>\r\n', '<p>TVSP<br />\r\n&nbsp;</p>\r\n', '<p>N-Queens<br />\r\n&nbsp;</p>\r\n', '<p>15-Puzzle<br />\r\n&nbsp;</p>\r\n', '<p>Bin-Packing</p>\r\n', '5', 19, 13, '4'),
(1815, '<p>The time complexity of binary search in best, worst cases for an array of size N is</p>\r\n', '<p>N, N2<br />\r\n&nbsp;</p>\r\n', '<p>1, Log N<br />\r\n&nbsp;</p>\r\n', '<p>Log N, N2<br />\r\n&nbsp;</p>\r\n', '<p>1, N log N</p>\r\n', '5', 18, 13, '2'),
(1816, '<p>kruskal algorithm is based on ___________method</p>\r\n', '<p>Divide and conquer method &nbsp; &nbsp;</p>\r\n', '<p>Greedy method<br />\r\n&nbsp;</p>\r\n', '<p>Dynamic programming &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Branch and bound</p>\r\n', '5', 16, 13, '2'),
(1817, '<p>Prims algorithm is based on _____________ method</p>\r\n', '<p>&nbsp;Divide and conquer method &nbsp;</p>\r\n', '<p>Greedy method &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Dynamic programming</p>\r\n', '<p>Branch and bound</p>\r\n', '5', 19, 13, '2'),
(1818, '<p>Which of following algorithm scans the list by swapping the entries whenever pair of adjacent keys are out of desired order?</p>\r\n', '<p>Insertion sort<br />\r\n&nbsp;</p>\r\n', '<p>Quick sort<br />\r\n&nbsp;</p>\r\n', '<p>Shell sort<br />\r\n&nbsp;</p>\r\n', '<p>Bubble sort</p>\r\n', '5', 15, 13, '4'),
(1819, '<p>The ? notation is</p>\r\n', '<p>Symmetric<br />\r\n&nbsp;</p>\r\n', '<p>Reflexive<br />\r\n&nbsp;</p>\r\n', '<p>Transitive<br />\r\n&nbsp;</p>\r\n', '<p>(a), (b) and (c) above</p>\r\n', '6', 21, 13, '4'),
(1820, '<p>How many bits are there in the Ethernet address?</p>\r\n', '<p>64 bits</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>48 bits</p>\r\n', '<p>32 bits</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>16 bits</p>\r\n', '5', 26, 7, '2'),
(1821, '<p>From the following choose the one which belongs to the algorithm paradigm other than to which others from the following belongs to.</p>\r\n', '<p>Minimum &amp; Maximum problem<br />\r\n&nbsp;</p>\r\n', '<p>Knapsack problem<br />\r\n&nbsp;</p>\r\n', '<p>Selection problem<br />\r\n&nbsp;</p>\r\n', '<p>Merge sort</p>\r\n', '6', 23, 13, '2'),
(1822, '<p>Identify the name of the sorting in which time is not proportional to n2.</p>\r\n', '<p>Selection sort<br />\r\n&nbsp;</p>\r\n', '<p>Bubble sort<br />\r\n&nbsp;</p>\r\n', '<p>Qucik sort<br />\r\n&nbsp;</p>\r\n', '<p>Insertion sort</p>\r\n', '6', 22, 13, '4'),
(1823, '<p>How many layers are in the TCP/IP model?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>4 layers</p>\r\n', '<p>5 layers<br />\r\n&nbsp;</p>\r\n', '<p>6 layers</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>7 layers</p>\r\n', '5', 22, 7, '1'),
(1824, '<p>The optimal solution to a problem is a combination of optimal solutions to its subproblems. This is known as</p>\r\n', '<p>Principleof Duality<br />\r\n&nbsp;</p>\r\n', '<p>Principle of Feasibility<br />\r\n&nbsp;</p>\r\n', '<p>Principle of Optimality<br />\r\n&nbsp;</p>\r\n', '<p>Principle of Dynamicity</p>\r\n', '6', 26, 13, '3'),
(1825, '<p>Which of the following versions of merge sort algorithm does uses space efficiently?</p>\r\n', '<p>Contiguous version<br />\r\n&nbsp;</p>\r\n', '<p>Array version<br />\r\n&nbsp;</p>\r\n', '<p>Linked version<br />\r\n&nbsp;</p>\r\n', '<p>Structure version</p>\r\n', '6', 26, 13, '3'),
(1826, '<p>Identify the correct problem for multistage graph from the list given below.</p>\r\n', '<p>Resource allocation problem<br />\r\n&nbsp;</p>\r\n', '<p>Traveling salesperson problem<br />\r\n&nbsp;</p>\r\n', '<p>Producer consumer problem<br />\r\n&nbsp;</p>\r\n', '<p>Barber&rsquo;s problem</p>\r\n', '6', 26, 13, '1'),
(1827, '<p>Which of the following layer of OSI model also called end-to-end layer?</p>\r\n', '<p>Presentation layer</p>\r\n', '<p>Network layer</p>\r\n', '<p>Session layer</p>\r\n', '<p>Transport layer</p>\r\n', '5', 24, 7, '4'),
(1828, '<p>How many edges are there in a Hamiltonian cycle if the edge cost is &lsquo;c&rsquo; and the cost of cycle is &lsquo;cn&rsquo;</p>\r\n', '<p>c &nbsp; &nbsp;&nbsp;&nbsp;</p>\r\n', '<p>cn<br />\r\n&nbsp;</p>\r\n', '<p>n &nbsp; &nbsp;</p>\r\n', '<p>2c</p>\r\n', '6', 21, 13, '3'),
(1829, '<p>Which of the following is correct regarding Class B Address of IP address<br />\r\n&nbsp;</p>\r\n', '<p>Network bit &ndash; 14, Host bit &ndash; 16<br />\r\n&nbsp;</p>\r\n', '<p>Network bit &ndash; 16, Host bit &ndash; 14</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Network bit &ndash; 18, Host bit &ndash; 16<br />\r\n&nbsp;</p>\r\n', '<p>Network bit &ndash; 12, Host bit &ndash; 14</p>\r\n', '5', 24, 7, '1'),
(1830, '<p>A problem L is NP-complete iff L is NP-hard and</p>\r\n', '<p>L &tilde; NP<br />\r\n&nbsp;</p>\r\n', '<p>L a NP<br />\r\n&nbsp;</p>\r\n', '<p>L e NP<br />\r\n&nbsp;</p>\r\n', '<p>L = NP</p>\r\n', '6', 19, 13, '3'),
(1831, '<p>The last address of IP address represents<br />\r\n&nbsp;</p>\r\n', '<p>Unicast address</p>\r\n', '<p>Network address</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Broadcast address<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '6', 22, 7, '3'),
(1832, '<p>What would be the cost value for any answering node of a sub tree with root &lsquo;r&rsquo;<br />\r\nusing branch-bound algorithm?</p>\r\n', '<p>Maximum<br />\r\n&nbsp;</p>\r\n', '<p>Minimum<br />\r\n&nbsp;</p>\r\n', '<p>Optimal<br />\r\n&nbsp;</p>\r\n', '<p>Average</p>\r\n', '6', 18, 13, '2'),
(1833, '<p>Name the node which has been generated but none of its children nodes have been generated in state space tree of backtracking method.</p>\r\n', '<p>Dead node<br />\r\n&nbsp;</p>\r\n', '<p>Live node<br />\r\n&nbsp;</p>\r\n', '<p>E-Node<br />\r\n&nbsp;</p>\r\n', '<p>State Node</p>\r\n', '6', 24, 13, '2'),
(1834, '<p>Which one of the following permutations can be obtained the output using stack assuming that the input is the sequence 1,2,3,4,5 in that order ?</p>\r\n', '<p>3,4,5,1,2</p>\r\n', '<p>3,4,5,2,1</p>\r\n', '<p>1,5,2,3,4</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>5,4,3,1,2</p>\r\n', '6', 26, 13, '2'),
(1835, '<p>How many bits are there in the Ethernet address?<br />\r\n&nbsp;</p>\r\n', '<p>64 bits</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>48 bits</p>\r\n', '<p>32 bits</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>16 bits</p>\r\n', '6', 22, 7, '2'),
(1836, '<p>The initial configuration of the queue is a,b,c,d (a is the front end). To get the configuration d,c,b,a one needs a minimum of ?</p>\r\n', '<p>2 deletions and 3 additions</p>\r\n', '<p>3 additions and 2 deletions</p>\r\n', '<p>3 deletions and 3 additions</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>3 deletions and 4 additions</p>\r\n', '6', 23, 13, '3'),
(1837, '<p>The number of swapping needed to sort numbers 8,22,7,9,31,19,5,13 in ascending order using bubble sort is ?</p>\r\n', '<p>11</p>\r\n', '<p>12</p>\r\n', '<p>13</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>14</p>\r\n', '6', 21, 13, '4'),
(1838, '<p>The following sequence of operation is performed on stack : push(1),push(2),pop,push(1),push(2),pop,pop,pop,push(2),pop. The sequence of popped out values are ?</p>\r\n', '<p>2,2,1,1,2</p>\r\n', '<p>2,2,1,2,2</p>\r\n', '<p>2,1,2,2,1</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2,1,2,2,2</p>\r\n', '6', 25, 13, '1'),
(1839, '<p>How many layers are in the TCP/IP model?</p>\r\n', '<p>4 layers</p>\r\n', '<p>5 layers<br />\r\n&nbsp;</p>\r\n', '<p>6 layers</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>7 layers</p>\r\n', '6', 23, 7, '1'),
(1840, '<p>How many nodes are there in a full state space tree with n = 6?</p>\r\n', '<p>65<br />\r\n&nbsp;</p>\r\n', '<p>64<br />\r\n&nbsp;</p>\r\n', '<p>63<br />\r\n&nbsp;</p>\r\n', '<p>32</p>\r\n', '6', 16, 13, '3'),
(1841, '<p>&nbsp;A __________ is a round trip path along n edges of G that visits every vertex once and returns to its starting position.</p>\r\n', '<p>MST &nbsp;&nbsp;&nbsp;</p>\r\n', '<p>TSP<br />\r\n&nbsp;</p>\r\n', '<p>Multistage Graph &nbsp; &nbsp;</p>\r\n', '<p>Hamiltonian Cycle</p>\r\n', '6', 22, 13, '4'),
(1842, '<p>Graph Coloring is which type of algorithm design strategy</p>\r\n', '<p>Backtracking &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Greedy<br />\r\n&nbsp;</p>\r\n', '<p>Branch and Bound &nbsp;</p>\r\n', '<p>Dynamic programming</p>\r\n', '6', 17, 13, '1'),
(1843, '<p>Which of the following layer of OSI model also called end-to-end layer?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Presentation layer</p>\r\n', '<p>Network layer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Session layer</p>\r\n', '<p>Transport layer</p>\r\n', '6', 25, 7, '4'),
(1844, '<p>Quick sort is based on divide and conquer paradigm; we divide the problem on base of pivotelementand:</p>\r\n', '<p>There is explicit combine process as well to conquer the solution.<br />\r\n&nbsp;</p>\r\n', '<p>No work is needed to combine the sub-arrays, the array is already sorted<br />\r\n&nbsp;</p>\r\n', '<p>Merging the subarrays<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '6', 22, 13, '1'),
(1845, '<p>You have 10 users plugged into a hub running 10Mbps half-duplex. There is a server connected to the switch running 10Mbps half-duplex as well. How much bandwidth does each host have to the server?<br />\r\n&nbsp;</p>\r\n', '<p>100 kbps</p>\r\n', '<p>10 Mbps</p>\r\n', '<p>1 Mbps</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2 Mbps</p>\r\n', '6', 30, 7, '2'),
(1846, '<p>How often are BPDUs sent from a layer 2 device?<br />\r\n&nbsp;</p>\r\n', '<p>Every 2 seconds</p>\r\n', '<p>Never</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Every 10 minutes</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Every 30 seconds</p>\r\n', '6', 25, 7, '1'),
(1847, '<p>Can we read a data item at any location of a list within a constant time (i.e. O(1))?</p>\r\n', '<p>Yes<br />\r\n&nbsp;</p>\r\n', '<p>Yes, only if the list is implemented by pointers (i.e. linked-list)<br />\r\n&nbsp;</p>\r\n', '<p>Yes, only if the list is implemented by an array<br />\r\n&nbsp;</p>\r\n', '<p>No, we need O(n) computation steps no matter what kind of implementation is used&nbsp;</p>\r\n', '8', 33, 13, '3'),
(1848, '<p>Which router command allows you to view the entire contents of all access lists?</p>\r\n', '<p>show all access-lists</p>\r\n', '<p>show access-lists</p>\r\n', '<p>show ip interface</p>\r\n', '<p>show interface</p>\r\n', '6', 32, 7, '2'),
(1849, '<p>Sequential search has a time complexity of O(n), and binary search has a time complexity of O(log(n)). What difference will it make when the size n is 1000?</p>\r\n', '<p>You would not notice much difference because computers run very fast anyway<br />\r\n&nbsp;</p>\r\n', '<p>As n is 1000, binary search is twice as fast as sequential search<br />\r\n&nbsp;</p>\r\n', '<p>As n is 1000, binary search is 10 times as fast as sequential search<br />\r\n&nbsp;</p>\r\n', '<p>As n is 1000, binary search is 100 times as fast as sequential search</p>\r\n', '8', 38, 13, '4'),
(1850, '<p>Readthe following statements carefully, and choose the correct answer.<br />\r\nI. The O notation is Anti Symmetric.<br />\r\nII. The big Oh notation is Semi Equivalence.</p>\r\n', '<p>(I) is FALSE but (II) is TRUE &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Both (I), (II) are TRUE<br />\r\n&nbsp;</p>\r\n', '<p>(I) is TRUE but(II) is FALSE &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Both (I), (II) are FALSE</p>\r\n', '8', 36, 13, '2'),
(1851, '<p>How many minimum number of spanning trees, one can have from a given connected graph with N nodes is having different weights for the edges.</p>\r\n', '<p>N-1 &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>One &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>1/(N+1) 2NCN &nbsp; &nbsp;</p>\r\n', '<p>2NCN</p>\r\n', '8', 28, 13, '2'),
(1852, '<p>The number of comparisons of elements for best case is ____________ in the case of maxmin algorithm based on divide and conquer method</p>\r\n', '<p>3n/2 &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>n/4<br />\r\n&nbsp;</p>\r\n', '<p>n/2 &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>n-1</p>\r\n', '8', 19, 13, '1'),
(1853, '<p>What protocols are used to configure trunking on a switch?</p>\r\n', '<p>VLAN Trunking Protocol</p>\r\n', '<p>VLAN</p>\r\n', '<p>802.1Q</p>\r\n', '<p>ISL</p>\r\n', '6', 27, 7, '2'),
(1854, '<p>How many collision domains are created when you segment a network with a 12-port switch?<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>12</p>\r\n', '<p>5</p>\r\n', '<p>2</p>\r\n', '6', 24, 7, '2'),
(1855, '<p>What PPP protocol provides dynamic addressing, authentication, and multilink?<br />\r\n&nbsp;</p>\r\n', '<p>NCP</p>\r\n', '<p>HDLC</p>\r\n', '<p>X.25</p>\r\n', '<p>LCP</p>\r\n', '6', 25, 7, '4'),
(1856, '<p>What is a stub network?<br />\r\n&nbsp;</p>\r\n', '<p>A network that has only one entry and exit point.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A network with only one entry and no exit point.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A network with more than one exit point.</p>\r\n', '<p>A network with more than one exit and entry point.</p>\r\n', '6', 27, 7, '1'),
(1857, '<p>Which of the following terms is used to describe a hardware- or software-based device that protects networks from outside threats?<br />\r\n&nbsp;</p>\r\n', '<p>NIC</p>\r\n', '<p>Gateway</p>\r\n', '<p>Firewall</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hub</p>\r\n', '6', 29, 7, '3'),
(1858, '<p>Which of the following devices assigns IP address to devices connected to a network that uses TCP/IP?<br />\r\n&nbsp;</p>\r\n', '<p>DHCP Server</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>NIC</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Gatewa</p>\r\n', '<p>Hub</p>\r\n', '6', 32, 7, '1'),
(1859, '<p>Which&nbsp;one of the following routing algorithm can be used for network layer design?</p>\r\n', '<p>shortest path algorithm</p>\r\n', '<p>distance vector routing</p>\r\n', '<p>link state routing<br />\r\n&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '7', 29, 7, '4'),
(1860, '<p>Multidestination routing<br />\r\n&nbsp;</p>\r\n', '<p>is same as broadcast routing</p>\r\n', '<p>contains the list of all destinations</p>\r\n', '<p>data is not sent by packets<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '7', 30, 7, '3'),
(1861, '<p>A subset of&nbsp;a network thatincludes all&nbsp;the routers&nbsp;but contains no loops&nbsp;is called<br />\r\n&nbsp;</p>\r\n', '<p>spanning tree<br />\r\n&nbsp;</p>\r\n', '<p>spider structure<br />\r\n&nbsp;</p>\r\n', '<p>spider tree<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '7', 27, 7, '1'),
(1862, '<p>Which one&nbsp;of the&nbsp;following algorithm is&nbsp;not used for congestion control?<br />\r\n&nbsp;</p>\r\n', '<p>traffic aware routing<br />\r\n&nbsp;</p>\r\n', '<p>admission &nbsp;control</p>\r\n', '<p>load&nbsp;shedding<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '7', 25, 7, '4'),
(1863, '<p>User&nbsp;datagram protocol is called connectionless because<br />\r\n&nbsp;</p>\r\n', '<p>all UDP packets are treated independently by transport layer</p>\r\n', '<p>it sends data as a stream of related packets<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;both (a) and (b)</p>\r\n', '<p>none of the above<br />\r\n&nbsp;</p>\r\n', '7', 27, 7, '1'),
(1864, '<p>An endpoint of an inter-process communication&nbsp;flow across&nbsp;a computer network&nbsp;is called<br />\r\n&nbsp;</p>\r\n', '<p>socket</p>\r\n', '<p>pipe<br />\r\n&nbsp;</p>\r\n', '<p>port</p>\r\n', '<p>none of the above</p>\r\n', '7', 28, 7, '1'),
(1865, '<p>Socket-style API for windows is called<br />\r\n&nbsp;</p>\r\n', '<p>wsock</p>\r\n', '<p>winsock</p>\r\n', '<p>wins</p>\r\n', '<p>none of the above</p>\r\n\r\n<p>&nbsp;</p>\r\n', '7', 22, 7, '2'),
(1866, '<p>Which one of thefollowing is a version of UDP with congestion control?<br />\r\n&nbsp;</p>\r\n', '<p>datagram congestion control protocol</p>\r\n', '<p>stream control transmission protocol<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>structured stream transport</p>\r\n', '<p>none of the above</p>\r\n', '7', 24, 7, '1'),
(1867, '<p>Which one of the following allows a user at one site to establish a connection to another site and then pass keystrokes from local host to remote host?</p>\r\n', '<p>HTTP</p>\r\n', '<p>FTP</p>\r\n', '<p>telnet</p>\r\n', '<p>none of the above</p>\r\n', '7', 27, 7, '3'),
(1868, '<p>Which one of the following is an internet &nbsp;standard protocol for managing devices on IP network?</p>\r\n', '<p>dynamic host configuration protocol</p>\r\n', '<p>simple newtwork management protocol</p>\r\n', '<p>internet message access protocol</p>\r\n', '<p>media gateway protocol</p>\r\n', '7', 26, 7, '2'),
(1869, '<p>Which protocol is a signalling communication protocol used for controlling multimedia communication sessions?</p>\r\n', '<p>session initiation protocol</p>\r\n', '<p>session modelling protocol<br />\r\n&nbsp;</p>\r\n', '<p>session maintenance protocol&nbsp;</p>\r\n', '<p>none of the above<br />\r\n&nbsp;</p>\r\n', '8', 28, 7, '1'),
(1870, '<p>In tunne mode IPsec protects the<br />\r\n&nbsp;</p>\r\n', '<p>entire IP packet</p>\r\n', '<p>IP header</p>\r\n', '<p>&nbsp;IP payload</p>\r\n', '<p>none of the above<br />\r\n&nbsp;</p>\r\n', '8', 23, 7, '1'),
(1871, '<p>Network layer firewall has two sub-categories as</p>\r\n', '<p>stateful firewall and stateless firewall<br />\r\n&nbsp;</p>\r\n', '<p>bit oriented firewall and byte oriented firewall</p>\r\n', '<p>frame firewall and packet firewall</p>\r\n', '<p>none of the above</p>\r\n', '8', 23, 7, '1'),
(1872, '<p>PGP encrypts data by using a block cipher called<br />\r\n&nbsp;</p>\r\n', '<p>international data encryption algorithm<br />\r\n&nbsp;</p>\r\n', '<p>private data encryption algorithm</p>\r\n', '<p>intrenet data encryption algorithm</p>\r\n', '<p>none of the above</p>\r\n', '8', 22, 7, '1'),
(1873, '<p>When a DNS server accepts and uses incorrect information from a host that has no authority giving that information, then it is called<br />\r\n&nbsp;</p>\r\n', '<p>DNS lookup</p>\r\n', '<p>DNS hijacking<br />\r\n&nbsp;</p>\r\n', '<p>DNS spoofing</p>\r\n', '<p>none of the above<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '8', 19, 7, '3'),
(1874, '<p>Your router has the following IP address on Ethernet0: 172.16.2.1/23. Which of the following can be valid host IDs on the LAN interface attached to the router?<br />\r\n172.16.1.100<br />\r\n172.16.1.198<br />\r\n172.16.2.255<br />\r\n172.16.3.0<br />\r\n&nbsp;</p>\r\n', '<p>1 only</p>\r\n', '<p>2 and 3 only</p>\r\n', '<p>3 and 4 only<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '8', 30, 7, '3'),
(1875, '<p>Which two statements describe the IP address 10.16.3.65/23?<br />\r\nThe subnet address is 10.16.3.0 255.255.254.0.<br />\r\nThe lowest host address in the subnet is 10.16.2.1 255.255.254.0.<br />\r\nThe last valid host address in the subnet is 10.16.2.254 255.255.254.0.<br />\r\nThe broadcast address of the subnet is 10.16.3.255 255.255.254.0.</p>\r\n', '<p>1 and 3</p>\r\n', '<p>2 and 4<br />\r\n&nbsp;</p>\r\n', '<p>1, 2 and 4<br />\r\n&nbsp;</p>\r\n', '<p>2, 3 and 4</p>\r\n', '8', 30, 7, '2'),
(1876, '<p>What is the maximum number of IP addresses that can be assigned to hosts on a local subnet that uses the 255.255.255.224 subnet mask?<br />\r\n&nbsp;</p>\r\n', '<p>14<br />\r\n&nbsp;</p>\r\n', '<p>15<br />\r\n&nbsp;</p>\r\n', '<p>16<br />\r\n&nbsp;</p>\r\n', '<p>30</p>\r\n', '8', 28, 7, '4'),
(1877, '<p>You need to subnet a network that has 5 subnets, each with at least 16 hosts. Which classful subnet mask would you use?<br />\r\n&nbsp;</p>\r\n', '<p>255.255.255.192<br />\r\n&nbsp;</p>\r\n', '<p>255.255.255.224<br />\r\n&nbsp;</p>\r\n', '<p>255.255.255.240</p>\r\n', '<p>255.255.255.248<br />\r\n&nbsp;</p>\r\n', '8', 28, 7, '2'),
(1878, '<p>You type debug ip rip on your router console and see that 172.16.10.0 is being advertised to you with a metric of 16. What does this mean?<br />\r\n&nbsp;</p>\r\n', '<p>The route is 16 hops away.</p>\r\n', '<p>The route has a delay of 16 microseconds.<br />\r\n&nbsp;</p>\r\n', '<p>The route is inaccessible.<br />\r\n&nbsp;</p>\r\n', '<p>The route is queued at 16 messages a second.</p>\r\n', '8', 24, 7, '1'),
(1879, '<p>If your routing table has a static, a RIP, and an IGRP route to the same network, which route will be used to route packets by default?<br />\r\nA.&nbsp;&nbsp; &nbsp;Any available route<br />\r\nB.&nbsp;&nbsp; &nbsp;RIP route<br />\r\nC.&nbsp;&nbsp; &nbsp;Static route<br />\r\nD.&nbsp;&nbsp; &nbsp;IGRP route<br />\r\nE.&nbsp;&nbsp; &nbsp;They will all load-balance.</p>\r\n', '<p>Any available route<br />\r\n&nbsp;</p>\r\n', '<p>RIP route</p>\r\n', '<p>Static route<br />\r\n&nbsp;</p>\r\n', '<p>IGRP route<br />\r\n&nbsp;</p>\r\n', '8', 23, 7, '3'),
(1880, '<p>The level of data abstraction which describes how the data is actually stored is?</p>\r\n', '<p>Physical level</p>\r\n', '<p>Conceptual level</p>\r\n', '<p>Storage Level</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>File level</p>\r\n', '2', 17, 12, '1'),
(1881, '<p>The level of abstraction describes only part of the entire database is called?</p>\r\n', '<p>Conceptual level</p>\r\n', '<p>View Level</p>\r\n', '<p>Procedural Level</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '3', 15, 12, '2'),
(1882, '<p>Object based data models are used in describing the abstraction of the following levels?</p>\r\n', '<p>Conceptual and viewl</p>\r\n', '<p>Only physical</p>\r\n', '<p>Physical and conceptual</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Only conceptua</p>\r\n', '4', 18, 12, '1'),
(1883, '<p>An association of several structure of a data base can be expressed graphically by?</p>\r\n', '<p>Tuple</p>\r\n', '<p>Record</p>\r\n', '<p>Relationship</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Field</p>\r\n', '5', 17, 12, '3'),
(1884, '<p>The overall logical structure of data base can be expressed graphically by?</p>\r\n', '<p>Data flow chart</p>\r\n', '<p>Flow chart</p>\r\n', '<p>Directed Graph</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Entity relationship diagram</p>\r\n', '4', 17, 12, '4'),
(1885, '<p>In an object oriented model, one object can access data of another object by passing?</p>\r\n', '<p>Instance variable</p>\r\n', '<p>Variable</p>\r\n', '<p>Message</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Function</p>\r\n', '6', 21, 12, '3'),
(1886, '<p>What is Artificial intelligence?<br />\r\n&nbsp;</p>\r\n', '<p>Putting your intelligence into Computer</p>\r\n', '<p>Programming with your own intelligence<br />\r\n&nbsp;</p>\r\n', '<p>Making a Machine intelligent<br />\r\n&nbsp;</p>\r\n', '<p>Playing a Game<br />\r\n&nbsp;</p>\r\n', '1', 18, 2, '3'),
(1887, '<p>The collection of information stored in a database at a particular moment is?</p>\r\n', '<p>View</p>\r\n', '<p>Instance</p>\r\n', '<p>Scheme</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '3', 22, 12, '2');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(1888, '<p>The overall design of a database is called?</p>\r\n', '<p>Scheme of the database</p>\r\n', '<p>The screen of database</p>\r\n', '<p>Structure of the database</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>View of the database</p>\r\n', '1', 13, 12, '1'),
(1889, '<p>The ________ states that a foreign key must either match a primary key value in another relation or it must be null.</p>\r\n', '<p>entity integrity rule</p>\r\n', '<p>referential integrity constraint</p>\r\n', '<p>action assertion</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>composite attribute</p>\r\n', '3', 20, 12, '1'),
(1890, '<p>Which is not the commonly used programming language for AI?<br />\r\n&nbsp;</p>\r\n', '<p>PROLOG &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Java &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>LISP &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Perl &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '1', 19, 2, '4'),
(1891, '<p>Three SQL, DDL, CREATE commands are ________ .</p>\r\n', '<p>Schema, Base and Table</p>\r\n', '<p>Key, Base and Table</p>\r\n', '<p>Base, Table and Schema</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Schema, Table and View</p>\r\n', '2', 15, 12, '4'),
(1892, '<p>Data are ________ in client/server computing.</p>\r\n', '<p>never sent to the client machine</p>\r\n', '<p>sent in complete copies for the client to filter and sort</p>\r\n', '<p>sent only upon the client&#39;s request</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>sent in very large sections to save processing time</p>\r\n', '2', 13, 12, '3'),
(1893, '<p>Which of the following will NOT eliminates the ambiguities of a null value?</p>\r\n', '<p>Define the attribute as required</p>\r\n', '<p>Define subtypes</p>\r\n', '<p>Define each attribute as having an initial value that is recognized as blank</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Define supertypes</p>\r\n', '4', 15, 12, '4'),
(1894, '<p>Which of the following statements is not true about two tier client server database architecture?</p>\r\n', '<p>SQL statements are processed on tier server</p>\r\n', '<p>SQL statements may be processed on some of the clients</p>\r\n', '<p>Business logic is mostly processed on clients</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Business logic may be processed on the server</p>\r\n', '5', 18, 12, '3'),
(1895, '<p>What is state space?<br />\r\n&nbsp;</p>\r\n', '<p>The whole problem<br />\r\n&nbsp;</p>\r\n', '<p>Your Definition to a problem</p>\r\n', '<p>Problem you design<br />\r\n&nbsp;</p>\r\n', '<p>Representing your problem with variable and parameter<br />\r\n&nbsp;</p>\r\n', '1', 23, 2, '4'),
(1896, '<p>The process by which the structure of the database is modified to eliminate hidden dependencies and replacing groups is _________</p>\r\n', '<p>Normalization</p>\r\n', '<p>Indexing</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Enforcing referential integrity</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Enforcing data integrity</p>\r\n', '5', 20, 12, '1'),
(1897, '<p>Which one of the following is provided by a data dictionary ?</p>\r\n', '<p>User data</p>\r\n', '<p>Database structure data</p>\r\n', '<p>Sorted data</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Functional data</p>\r\n', '6', 16, 12, '2'),
(1898, '<p>Which one of the following is a direct benefit of databse normalization?</p>\r\n', '<p>higher query processing efficiency</p>\r\n', '<p>smaller number of tables</p>\r\n', '<p>reduced I/O for most queries</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>reduced data redundancy</p>\r\n', '4', 17, 12, '4'),
(1899, '<p>A production rule consists of<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>A set of Rule &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>A sequence of steps<br />\r\n&nbsp;</p>\r\n', '<p>Both (a) and (b) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Arbitrary representation to problem</p>\r\n', '1', 23, 2, '3'),
(1900, '<p>The ability to modify the conceptual schema without causing any change to the application program is known as :</p>\r\n', '<p>Physical data independence</p>\r\n', '<p>Logical data independence</p>\r\n', '<p>External data independence</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Static data</p>\r\n', '6', 20, 12, '2'),
(1901, '<p>A field or a combination of fields that has a unique value is called :</p>\r\n', '<p>Foreign key</p>\r\n', '<p>Secondary key</p>\r\n', '<p>Primary key</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Alternate key</p>\r\n', '3', 15, 12, '3'),
(1902, '<p>Which search method takes less memory?<br />\r\n&nbsp;</p>\r\n', '<p>Depth-First Search &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Breadth-First search<br />\r\n&nbsp;</p>\r\n', '<p>Both (a) and (b) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Linear Search</p>\r\n', '1', 16, 2, '1'),
(1903, '<p>Referential integrity controls relationships between :</p>\r\n', '<p>attributes in a table</p>\r\n', '<p>operations of an object</p>\r\n', '<p>instances of a class</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>tables in a database</p>\r\n', '5', 15, 12, '4'),
(1904, '<p>In the relational modes, cardinality is termed as:</p>\r\n', '<p>Number of tuples&nbsp; &nbsp;</p>\r\n', '<p>Number of attributes<br />\r\n&nbsp;</p>\r\n', '<p>Number of tables</p>\r\n', '<p>Number of constraints</p>\r\n', '2', 15, 12, '1'),
(1905, '<p>A heuristic is a way of trying<br />\r\n&nbsp;</p>\r\n', '<p>To discover something or an idea embedded in a program<br />\r\n&nbsp;</p>\r\n', '<p>To search and measure how far a node in a search tree seems to be from a goal<br />\r\n&nbsp;</p>\r\n', '<p>To compare two nodes in a search tree to see if one is better than the other<br />\r\n&nbsp;</p>\r\n', '<p>Only (a), (b) and (c)<br />\r\n&nbsp;</p>\r\n', '1', 23, 2, '4'),
(1906, '<p>Relational calculus is a</p>\r\n', '<p>Procedural language &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n', '<p>Non- Procedural language.<br />\r\n&nbsp;</p>\r\n', '<p>Data definition language&nbsp;&nbsp; &nbsp;</p>\r\n', '<p>High level language</p>\r\n', '2', 15, 12, '2'),
(1907, '<p>A* algorithm is based on<br />\r\n&nbsp;</p>\r\n', '<p>Breadth-First-Search &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Depth-First &ndash;Search<br />\r\n&nbsp;</p>\r\n', '<p>Best-First-Search &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Hill climbing<br />\r\n&nbsp;</p>\r\n', '1', 20, 2, '3'),
(1908, '<p>The view of total database content is</p>\r\n', '<p>Conceptual view&nbsp;&nbsp; &nbsp;</p>\r\n', '<p>Internal view<br />\r\n&nbsp;</p>\r\n', '<p>External view &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;</p>\r\n', '<p>Physical View</p>\r\n', '2', 16, 12, '1'),
(1909, '<p>Cartesian product in relational algebra is</p>\r\n', '<p>a Unary operator&nbsp; &nbsp;</p>\r\n', '<p>a Binary operator&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>a Ternary operator&nbsp; &nbsp;</p>\r\n', '<p>not defined</p>\r\n', '2', 16, 12, '2'),
(1910, '<p>Which is the best way to go for Game playing problem?<br />\r\n&nbsp;</p>\r\n', '<p>Linear approach &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Heuristic approach</p>\r\n', '<p>Random approach &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Optimal approach<br />\r\n&nbsp;</p>\r\n', '1', 24, 2, '2'),
(1911, '<p>DML is provided for</p>\r\n', '<p>Description of logical structure of database.<br />\r\n&nbsp;</p>\r\n', '<p>Addition of new structures in the database system.<br />\r\n&nbsp;</p>\r\n', '<p>Manipulation &amp; processing of database.<br />\r\n&nbsp;</p>\r\n', '<p>Definition of physical structure of database system</p>\r\n', '2', 16, 12, '3'),
(1912, '<p>&lsquo;AS&rsquo; clause is used in SQL for</p>\r\n', '<p>Selection operation. &nbsp;</p>\r\n', '<p>Rename operation.<br />\r\n&nbsp;</p>\r\n', '<p>Join operation. &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Projection operation</p>\r\n', '2', 14, 12, '2'),
(1913, '<p>How do you represent &ldquo;All dogs have tails&rdquo;.<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>?x: dog(x)&agrave;hastail(x) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>?x: dog(x)&agrave;hastail(y)<br />\r\n&nbsp;</p>\r\n', '<p>?x: dog(y)&agrave;hastail(x) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>?x: dog(x)&agrave;has&agrave;tail(x)<br />\r\n&nbsp;</p>\r\n', '1', 30, 2, '1'),
(1914, '<p>ODBC stands for</p>\r\n', '<p>Object Database Connectivity.<br />\r\n&nbsp;</p>\r\n', '<p>Oral Database Connectivity.<br />\r\n&nbsp;</p>\r\n', '<p>Oracle Database Connectivity.<br />\r\n&nbsp;</p>\r\n', '<p>Open Database Connectivity</p>\r\n', '2', 14, 12, '4'),
(1915, '<p>Architecture of the database can be viewed as</p>\r\n', '<p>two levels&nbsp; &nbsp;</p>\r\n', '<p>four levels<br />\r\n&nbsp;</p>\r\n', '<p>three levels</p>\r\n', '<p>one level</p>\r\n', '2', 14, 12, '3'),
(1916, '<p>Which is not a property of representation of knowledge?<br />\r\n&nbsp;</p>\r\n', '<p>Representational Verification &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Representational Adequacy</p>\r\n', '<p>Inferential Adequacy &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Inferential Efficiency<br />\r\n&nbsp;</p>\r\n', '1', 29, 2, '1'),
(1917, '<p>In a relational model, relations are termed as</p>\r\n', '<p>Tuples&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Attributes<br />\r\n&nbsp;</p>\r\n', '<p>Tables&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Rows</p>\r\n', '2', 14, 12, '3'),
(1918, '<p>The database schema is written in</p>\r\n', '<p>HLL&nbsp;&nbsp;&nbsp;</p>\r\n', '<p>DML<br />\r\n&nbsp;</p>\r\n', '<p>DDL &nbsp;</p>\r\n', '<p>DCL</p>\r\n', '2', 14, 12, '3'),
(1919, '<p>In the architecture of a database system external level is the</p>\r\n', '<p>physical level.&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>logical level.<br />\r\n&nbsp;</p>\r\n', '<p>conceptual level&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>view level</p>\r\n', '2', 35, 12, '4'),
(1920, '<p>An entity set that does not have sufficient attributes to form a primary key is a</p>\r\n', '<p>strong entity set.&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>weak entity set.<br />\r\n&nbsp;</p>\r\n', '<p>simple entity set.&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>primary entity set</p>\r\n', '2', 16, 12, '2'),
(1921, '<p>In a Hierarchical model records are organized as</p>\r\n', '<p>Graph&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>List<br />\r\n&nbsp;</p>\r\n', '<p>Links&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Tree</p>\r\n', '2', 15, 12, '4'),
(1922, '<p>In an E-R diagram attributes are represented by</p>\r\n', '<p>rectangle&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>square<br />\r\n&nbsp;</p>\r\n', '<p>ellipse&nbsp; &nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>triangle</p>\r\n', '2', 15, 12, '3'),
(1923, '<p>In case of entity integrity, the primary key may be</p>\r\n', '<p>not Null&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Null<br />\r\n&nbsp;</p>\r\n', '<p>both Null &amp; not Null&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>any value</p>\r\n', '2', 16, 12, '1'),
(1924, '<p>To invoke the LISP system, you must enter</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>AI</p>\r\n', '<p>LISP</p>\r\n', '<p>CL (Common Lisp)</p>\r\n', '<p>both b and c</p>\r\n', '1', 17, 2, '4'),
(1925, '<p>What rows will this select statement return ?<br />\r\nSELECT * FROM products WHERE ordernumber &gt; = 1000</p>\r\n', '<p>All rows in the products table whose order number is greater than or equal to 1000</p>\r\n', '<p>All rows in the products table whose order number is less than or equal to 1000</p>\r\n', '<p>The first 1000 rows of the product table</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All rows in the products table whose order number is greater than 1000</p>\r\n', '2', 22, 12, '1'),
(1926, '<p>The concept of data independence is similar to the concept of ?</p>\r\n', '<p>Data Type</p>\r\n', '<p>Abstract data type</p>\r\n', '<p>Consolidation</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Isolation</p>\r\n', '2', 16, 12, '2'),
(1927, '<p>The tables generated on compilation of data definition language are stored in?</p>\r\n', '<p>Data abstraction</p>\r\n', '<p>Data dictionary</p>\r\n', '<p>Data File</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Meta data</p>\r\n', '2', 15, 12, '2'),
(1928, '<p>Prior to the invention of time sharing, the prevalent method of computer access was</p>\r\n', '<p>batch processing</p>\r\n', '<p>telecommunication<br />\r\n&nbsp;</p>\r\n', '<p>remote access<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '1', 17, 2, '1'),
(1929, '<p>The code that relational database management systems use to perform their database task is referred to as ...</p>\r\n', '<p>QBE<br />\r\n&nbsp;</p>\r\n', '<p>SQL<br />\r\n&nbsp;</p>\r\n', '<p>OLAP<br />\r\n&nbsp;</p>\r\n', '<p>Sequel Server</p>\r\n', '2', 17, 12, '2'),
(1930, '<p>How is it possible that both programs and data can be stored on the same floppy disk?</p>\r\n', '<p>Floppy disks can only store data, not programs</p>\r\n', '<p>Programs and data are both software, and both can be stored on any memory device</p>\r\n', '<p>A floppy disk has to be formatted for one or for the other</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A floppy disks has two sides, one for data and one for program</p>\r\n', '2', 27, 12, '2'),
(1931, '<p>What is the term used for describing the judgmental or commonsense part of problem solving?</p>\r\n', '<p>Heuristic<br />\r\n&nbsp;</p>\r\n', '<p>Critical</p>\r\n', '<p>Value based<br />\r\n&nbsp;</p>\r\n', '<p>Analytical<br />\r\n<br />\r\n&nbsp;</p>\r\n', '1', 20, 2, '1'),
(1932, '<p>What stage of the manufacturing process has been described as &quot;the mapping of function onto form&quot;?</p>\r\n', '<p>Design<br />\r\n&nbsp;</p>\r\n', '<p>Distribution</p>\r\n', '<p>project management</p>\r\n', '<p>field service<br />\r\n&nbsp;</p>\r\n', '1', 23, 2, '1'),
(1933, '<p>A transparent DBMS ?</p>\r\n', '<p>Keeps its physical structure hidden from users</p>\r\n', '<p>Keep its logical structure hidden from users</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Can not hide sensitive information from users</p>\r\n', '<p>Can hide sensitive information from users</p>\r\n', '3', 20, 12, '1'),
(1934, '<p>A trigger is ?</p>\r\n', '<p>A statement that is executed automatically by the system as a side effect of modification to the database</p>\r\n', '<p>A statement that enables to start any DBMS</p>\r\n', '<p>A statement that is executed by the user when debugging an application program&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A condition the system tests for the validity of the database user&nbsp;</p>\r\n', '3', 15, 12, '1'),
(1935, '<p>Which kind of planning consists of successive representations of different levels of a plan?<br />\r\n&nbsp;</p>\r\n', '<p>hierarchical planning<br />\r\n&nbsp;</p>\r\n', '<p>non-hierarchical planning<br />\r\n&nbsp;</p>\r\n', '<p>All of the above<br />\r\n&nbsp;</p>\r\n', '<p>project planning</p>\r\n', '1', 26, 2, '1'),
(1936, '<p>Versatile report generator can provide ?</p>\r\n', '<p>Columnar totals</p>\r\n', '<p>Subtotal</p>\r\n', '<p>Calculation</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ALL</p>\r\n', '3', 16, 12, '4'),
(1937, '<p>Related fields in a database are grouped to form ?</p>\r\n', '<p>Data Field</p>\r\n', '<p>Data Record</p>\r\n', '<p>Menu</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Bank</p>\r\n', '3', 16, 12, '2'),
(1938, '<p>What was originally called the &quot;imitation game&quot; by its creator?<br />\r\n&nbsp;</p>\r\n', '<p>The Turing Test<br />\r\n&nbsp;</p>\r\n', '<p>LISP<br />\r\n&nbsp;</p>\r\n', '<p>The Logic Theorist<br />\r\n&nbsp;</p>\r\n', '<p>Cybernetics</p>\r\n', '1', 24, 2, '1'),
(1939, '<p>.................. clause is an additional filter that is applied to the result.</p>\r\n', '<p>select</p>\r\n', '<p>Having</p>\r\n', '<p>order by</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Group by</p>\r\n', '3', 15, 12, '2'),
(1940, '<p>..............defines the structure of a relation which consists of a fixed set of attribute-domain pairs.</p>\r\n', '<p>Schema</p>\r\n', '<p>Program</p>\r\n', '<p>Instance</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none</p>\r\n', '3', 20, 12, '1'),
(1941, '<p>.................. table store information about database or about the system</p>\r\n', '<p>SQL</p>\r\n', '<p>nested</p>\r\n', '<p>system</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none</p>\r\n', '3', 18, 12, '3'),
(1942, '<p>Most popular commersial Database</p>\r\n', '<p>Oracle</p>\r\n', '<p>MY SQL</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MS Access</p>\r\n', '<p>none</p>\r\n', '3', 16, 12, '1'),
(1943, '<p>17. What are you predicating by the logic: ?x: &euro;y: loyalto(x, y).<br />\r\n&nbsp;</p>\r\n', '<p>Everyone is loyal to some one &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Everyone is loyal to all</p>\r\n', '<p>Everyone is not loyal to someone &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Everyone is loyal<br />\r\n&nbsp;</p>\r\n', '1', 32, 2, '1'),
(1944, '<p>DFD stands for</p>\r\n', '<p>Data flow diagram</p>\r\n', '<p>data field diagram</p>\r\n', '<p>distribute flow diagram</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>disk flow diagram</p>\r\n', '3', 14, 12, '1'),
(1945, '<p>In an ER model, ................ is described in the database by storing its data.</p>\r\n', '<p>Entity</p>\r\n', '<p>Attribute</p>\r\n', '<p>Relationship</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Notation</p>\r\n', '3', 15, 12, '1'),
(1946, '<p>Which is not Familiar Connectives in First Order Logic?<br />\r\n&nbsp;</p>\r\n', '<p>and &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>iff &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>or &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>not &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '1', 20, 2, '4'),
(1947, '<p>In a relational schema, each tuple is divided into fields called</p>\r\n', '<p>Relation</p>\r\n', '<p>Domain</p>\r\n', '<p>Query</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ALL</p>\r\n', '3', 16, 12, '2'),
(1948, '<p>............... joins are SQL server default</p>\r\n', '<p>outer</p>\r\n', '<p>inner</p>\r\n', '<p>equi</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none</p>\r\n', '3', 15, 12, '2'),
(1949, '<p>Which is not a type of First Order Logic (FOL) Sentence?<br />\r\n&nbsp;</p>\r\n', '<p>Atomic sentences &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Complex sentences<br />\r\n&nbsp;</p>\r\n', '<p>Quantified sentence &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Quality Sentence</p>\r\n', '1', 23, 2, '4'),
(1950, '<p>................. allows individual row operation to be performed on a given result set or on the generated by a selected by a selected statement.</p>\r\n', '<p>Procedure</p>\r\n', '<p>Trigger</p>\r\n', '<p>Cursor</p>\r\n', '<p>none</p>\r\n', '3', 20, 12, '3'),
(1951, '<p>................. requires that data should be made available to only authorized users.</p>\r\n', '<p>Security</p>\r\n', '<p>Data integrity</p>\r\n', '<p>Privacy</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none</p>\r\n', '3', 20, 12, '1'),
(1952, '<p>............. is a special type of stored procedure that is automatically invoked whenever the data in the table is modified</p>\r\n', '<p>Procedure</p>\r\n', '<p>Trigger</p>\r\n', '<p>cursor</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none</p>\r\n', '3', 22, 12, '2'),
(1953, '<p>Which is not a Goal-based agent?<br />\r\n&nbsp;</p>\r\n', '<p>Inference &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Search &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Planning</p>\r\n', '<p>Conclusion &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '1', 20, 2, '4'),
(1954, '<p>Which of the following is not the function of client?</p>\r\n', '<p>Compile queries</p>\r\n', '<p>Query optimization</p>\r\n', '<p>Receive queries</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Result formatting and presentation</p>\r\n', '3', 21, 12, '2'),
(1955, '<p>The ..................... is essentially used to search for patterns in target string.</p>\r\n', '<p>Like predicate</p>\r\n', '<p>Null predicate</p>\r\n', '<p>in predicate</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>out predicate</p>\r\n', '3', 22, 12, '1'),
(1956, '<p>A plan that describe how to take actions in levels of increasing refinement and specificity is</p>\r\n', '<p>&nbsp;Problem solving &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Planning<br />\r\n&nbsp;</p>\r\n', '<p>Non-hierarchical plan &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Hierarchical plan</p>\r\n', '2', 28, 2, '4'),
(1957, '<p>The DBMS acts as an interface between what two components of an enterprise-class database system?</p>\r\n', '<p>Database application and the database</p>\r\n', '<p>Data and the database</p>\r\n', '<p>The user and the database application</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Database application and SQL</p>\r\n', '3', 25, 12, '1'),
(1958, '<p>A constructive approach in which no commitment is made unless it is necessary to do so, is<br />\r\n&nbsp;</p>\r\n', '<p>Least commitment approach &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Most commitment approach<br />\r\n&nbsp;</p>\r\n', '<p>Nonlinear planning &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Opportunistic planning<br />\r\n&nbsp;</p>\r\n', '2', 28, 2, '1'),
(1959, '<p>Partial order planning involves<br />\r\n&nbsp;</p>\r\n', '<p>Searching over the space of possible plans<br />\r\n&nbsp;</p>\r\n', '<p>Searching over possible situations<br />\r\n&nbsp;</p>\r\n', '<p>Searching the whole problem at once<br />\r\n&nbsp;</p>\r\n', '<p>Searching the best</p>\r\n', '2', 26, 2, '1'),
(1960, '<p>Which is true for Decision theory?</p>\r\n', '<p>Decision Theory = Probability theory + utility theory<br />\r\n&nbsp;</p>\r\n', '<p>Decision Theory = Inference theory + utility theory<br />\r\n&nbsp;</p>\r\n', '<p>Decision Theory = Uncertainty + utility theory</p>\r\n', '<p>Decision Theory = Probability theory + preference</p>\r\n', '2', 30, 2, '1'),
(1961, '<p>Uncertainty arises in the wumpus world because the agent&rsquo;s sensors give only<br />\r\n&nbsp;</p>\r\n', '<p>Full &amp; Global information &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Partial &amp; Global Information<br />\r\n&nbsp;</p>\r\n', '<p>Partial &amp; local Information &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Full &amp; local information</p>\r\n', '2', 25, 2, '3'),
(1962, '<p>Which of the following products was the first to implement true relational algebra in a PC DBMS?</p>\r\n', '<p>Oracle</p>\r\n', '<p>R:base</p>\r\n', '<p>IDMS</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>dBase-II</p>\r\n', '3', 25, 12, '2'),
(1963, '<p>The language which has recently become the defacto standard for interfacing application programs with relational database system is</p>\r\n', '<p>Oracle&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>SQL<br />\r\n&nbsp;</p>\r\n', '<p>DBase&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>4GL</p>\r\n', '3', 24, 12, '2'),
(1964, '<p>The way a particular application views the data from the database that the application uses is a</p>\r\n', '<p>module&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>relational model&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>schema&nbsp; &nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>sub schema</p>\r\n', '4', 20, 12, '4'),
(1965, '<p>In an E-R diagram an entity set is represent by a</p>\r\n', '<p>rectangle.&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>ellipse.<br />\r\n&nbsp;</p>\r\n', '<p>diamond box.&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>circle</p>\r\n', '4', 17, 12, '1'),
(1966, '<p>A report generator is used to</p>\r\n', '<p>update files.&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>print files on paper.<br />\r\n&nbsp;</p>\r\n', '<p>data entry.&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>delete files</p>\r\n', '4', 15, 12, '2'),
(1967, '<p>The property / properties of a database is / are :</p>\r\n', '<p>It is an integrated collection of logically related records.<br />\r\n&nbsp;</p>\r\n', '<p>It consolidates separate files into a common pool of data records.<br />\r\n&nbsp;</p>\r\n', '<p>Data stored in a database is independent of the application programs using it.<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '4', 20, 12, '4'),
(1968, '<p>A Hybrid Bayesian network contains</p>\r\n', '<p>Both discrete and continuous variables<br />\r\n&nbsp;</p>\r\n', '<p>Only Discrete variables<br />\r\n&nbsp;</p>\r\n', '<p>Only Discontinuous variable</p>\r\n', '<p>Both Discrete and Discontinuous variable</p>\r\n', '2', 24, 2, '1'),
(1969, '<p>The DBMS language component which can be embedded in a program is</p>\r\n', '<p>The data definition language (DDL).<br />\r\n&nbsp;</p>\r\n', '<p>The data manipulation language (DML).<br />\r\n&nbsp;</p>\r\n', '<p>The database administrator (DBA).<br />\r\n&nbsp;</p>\r\n', '<p>A query language</p>\r\n', '4', 22, 12, '2'),
(1970, '<p>A relational database developer refers to a record as</p>\r\n', '<p>a criteria<br />\r\n&nbsp;</p>\r\n', '<p>a relation<br />\r\n&nbsp;</p>\r\n', '<p>a tuple<br />\r\n&nbsp;</p>\r\n', '<p>an attribute</p>\r\n', '4', 16, 12, '3'),
(1971, '<p>What SQL command can be used to delete columns from a table?</p>\r\n', '<p>MODIFY TABLE TableName DROP COLUMN ColumnName</p>\r\n', '<p>MODIFY TABLE TableName DROP ColumnName</p>\r\n', '<p>ALTER TABLE TableName DROP COLUMN ColumnName</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ALTER TABLE TableName DROP ColumnName</p>\r\n', '4', 22, 12, '3'),
(1972, '<p>Weak AI is</p>\r\n', '<p>the embodiment of human intellectual capabilities within a computer.<br />\r\n&nbsp;</p>\r\n', '<p>a set of computer programs that produce output that would be considered to reflect intelligence if it were generated by humans.<br />\r\n&nbsp;</p>\r\n', '<p>the study of mental faculties through the use of mental models implemented on a computer.<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '2', 27, 2, '3'),
(1973, '<p>Database redesign is not terribly difficult if the:</p>\r\n', '<p>database is structured.</p>\r\n', '<p>database is well-designed.</p>\r\n', '<p>database has no data.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>database is relatively small.</p>\r\n', '4', 20, 12, '3'),
(1974, '<p>The relational model feature is that there</p>\r\n', '<p>is no need for primary key data.<br />\r\n&nbsp;</p>\r\n', '<p>is much more data independence than some other database models.<br />\r\n&nbsp;</p>\r\n', '<p>are explicit relationships among records.<br />\r\n&nbsp;</p>\r\n', '<p>are tables with many dimensions.</p>\r\n', '4', 16, 12, '2'),
(1975, '<p>Conceptual design</p>\r\n', '<p>is a documentation technique.<br />\r\n&nbsp;</p>\r\n', '<p>needs data volume and processing frequencies to determine the size of the database.<br />\r\n&nbsp;</p>\r\n', '<p>involves modelling independent of the DBMS.<br />\r\n&nbsp;</p>\r\n', '<p>is designing the relational model</p>\r\n', '4', 14, 12, '3'),
(1976, '<p>Strong AI is ?<br />\r\n&nbsp;</p>\r\n', '<p>The embodiment of human intellectual capabilities within a computer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A set of computer programs that produce output that would be consider to reflect intelligence if it</p>\r\n', '<p>The study of mental faculties through the use of mental models implemented on a computer</p>\r\n', '<p>All of above</p>\r\n', '2', 25, 2, '1'),
(1977, '<p>The method in which records are physically stored in a specified order according to a key &nbsp;field in each record is</p>\r\n', '<p>hash. &nbsp; &nbsp;</p>\r\n', '<p>direct.<br />\r\n&nbsp;</p>\r\n', '<p>sequential. &nbsp; &nbsp;</p>\r\n', '<p>all of the above.</p>\r\n', '4', 23, 12, '1'),
(1978, '<p>A subschema expresses</p>\r\n', '<p>the logical view. &nbsp; &nbsp;</p>\r\n', '<p>the physical view.<br />\r\n&nbsp;</p>\r\n', '<p>the external view. &nbsp; &nbsp;</p>\r\n', '<p>all of the above.</p>\r\n', '4', 15, 12, '3'),
(1979, '<p>Input segments of AI programming contains ?<br />\r\n&nbsp;</p>\r\n', '<p>Sound and smell</p>\r\n', '<p>Touch</p>\r\n', '<p>Sight and taste</p>\r\n', '<p>All of the above</p>\r\n', '2', 20, 2, '4'),
(1980, '<p>Output segments of AI programming contains ?</p>\r\n', '<p>Printed language and synthesized</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Manipulation of physical object</p>\r\n', '<p>Locomotion</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of above</p>\r\n', '2', 22, 2, '4'),
(1981, '<p>Count function in SQL returns the number of</p>\r\n', '<p>values.&nbsp;&nbsp;&nbsp;</p>\r\n', '<p>distinct values.<br />\r\n&nbsp;</p>\r\n', '<p>groups. &nbsp;</p>\r\n', '<p>columns.</p>\r\n', '4', 17, 12, '1'),
(1982, '<p>Which kind of planning consists of successive representations of different levels of plan ?<br />\r\n&nbsp;</p>\r\n', '<p>Hierarchical planning</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Non hierarchical planning</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Project planning</p>\r\n', '<p>All of above</p>\r\n', '2', 23, 2, '1'),
(1983, '<p>Which one of the following statements is false?</p>\r\n', '<p>The data dictionary is normally maintained by the database &nbsp;administrator.<br />\r\n&nbsp;</p>\r\n', '<p>Data elements in the database can be modified by changing the data dictionary.<br />\r\n&nbsp;</p>\r\n', '<p>The data dictionary contains the name and description of each data element.<br />\r\n&nbsp;</p>\r\n', '<p>The data dictionary is a tool used exclusively by the database administrator</p>\r\n', '4', 18, 12, '2'),
(1984, '<p>An advantage of the database management approach is</p>\r\n', '<p>data is dependent on programs.<br />\r\n&nbsp;</p>\r\n', '<p>data redundancy increases.<br />\r\n&nbsp;</p>\r\n', '<p>data is integrated and can be accessed by multiple programs.<br />\r\n&nbsp;</p>\r\n', '<p>none of the above.</p>\r\n', '4', 18, 12, '3'),
(1985, '<p>A DBMS query language is designed to</p>\r\n', '<p>support end users who use English-like commands.<br />\r\n&nbsp;</p>\r\n', '<p>support in the development of complex applications software.<br />\r\n&nbsp;</p>\r\n', '<p>specify the structure of a database.<br />\r\n&nbsp;</p>\r\n', '<p>all of the above.</p>\r\n', '1', 16, 12, '4'),
(1986, '<p>The component of an ICAI (Intelligent Computer Assisted Instruction) presenting information to the student is the?<br />\r\n&nbsp;</p>\r\n', '<p>Student model</p>\r\n', '<p>Problem solving expertise</p>\r\n', '<p>Tutoring module</p>\r\n', '<p>All of above</p>\r\n', '2', 25, 2, '3'),
(1987, '<p>Transaction saction processing is associated with everything below except</p>\r\n', '<p>producing detail, summary, or exception reports.<br />\r\n&nbsp;</p>\r\n', '<p>recording a business activity.<br />\r\n&nbsp;</p>\r\n', '<p>confirming an action or triggering a response.<br />\r\n&nbsp;</p>\r\n', '<p>maintaining data.</p>\r\n', '4', 20, 12, '3'),
(1988, '<p>It is possible to define a schema completely using</p>\r\n', '<p>VDL and DDL. &nbsp; &nbsp;</p>\r\n', '<p>DDL and DML.<br />\r\n&nbsp;</p>\r\n', '<p>SDL and DDL. &nbsp; &nbsp;</p>\r\n', '<p>VDL and DML.</p>\r\n', '4', 15, 12, '2'),
(1989, '<p>A.M. turing developed a technique for determining whether a computer could or could not demonstrate the artificial Intelligence,, Presently, this technique is called<br />\r\n&nbsp;</p>\r\n', '<p>Turing Test<br />\r\n&nbsp;</p>\r\n', '<p>Algorithm</p>\r\n', '<p>Boolean Algebra<br />\r\n&nbsp;</p>\r\n', '<p>Logarithm</p>\r\n', '2', 24, 2, '1'),
(1990, '<p>The method of access which uses key transformation is known as</p>\r\n', '<p>direct. &nbsp;</p>\r\n', '<p>hash.<br />\r\n&nbsp;</p>\r\n', '<p>random. &nbsp;</p>\r\n', '<p>sequential.</p>\r\n', '4', 15, 12, '2'),
(1991, '<p>Data independence means</p>\r\n', '<p>data is defined separately and not included in programs.<br />\r\n&nbsp;</p>\r\n', '<p>programs are not dependent on the physical attributes of data.<br />\r\n&nbsp;</p>\r\n', '<p>programs are not dependent on the logical attributes of data.<br />\r\n&nbsp;</p>\r\n', '<p>both (B) and (C)</p>\r\n', '1', 15, 12, '4'),
(1992, '<p>The turing machine showed that you could use a/an .............. system to program any algorithmic task ?<br />\r\n&nbsp;</p>\r\n', '<p>Binary</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Electrochemical</p>\r\n', '<p>Recursive</p>\r\n', '<p>Semantic</p>\r\n', '2', 20, 2, '1'),
(1993, '<p>The statement in SQL which allows to change the definition of a table is</p>\r\n', '<p>Alter.&nbsp;&nbsp;</p>\r\n', '<p>Update.<br />\r\n&nbsp;</p>\r\n', '<p>Create. &nbsp;</p>\r\n', '<p>select.</p>\r\n', '5', 14, 12, '1'),
(1994, '<p>E-R model uses this symbol to represent weak entity set ?</p>\r\n', '<p>Dotted rectangle.<br />\r\n&nbsp;</p>\r\n', '<p>Diamond<br />\r\n&nbsp;</p>\r\n', '<p>Doubly outlined rectangle<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 14, 12, '3'),
(1995, '<p>SET concept is used in :</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Network Model<br />\r\n&nbsp;</p>\r\n', '<p>Hierarchical Model<br />\r\n&nbsp;</p>\r\n', '<p>Relational Model<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 14, 12, '1'),
(1996, '<p>Relational Algebra is</p>\r\n', '<p>Data Definition Language .<br />\r\n&nbsp;</p>\r\n', '<p>Meta Language<br />\r\n&nbsp;</p>\r\n', '<p>Procedural query Language<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 15, 12, '3'),
(1997, '<p>Key to represent relationship between tables is called<br />\r\n&nbsp;</p>\r\n', '<p>Primary key &nbsp; &nbsp;</p>\r\n', '<p>Secondary Key<br />\r\n&nbsp;</p>\r\n', '<p>Foreign Key &nbsp; &nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 14, 12, '3'),
(1998, '<p>&nbsp;_______ produces the relation that has attributes of R1 and R2</p>\r\n', '<p>Cartesian product &nbsp; &nbsp;</p>\r\n', '<p>Difference<br />\r\n&nbsp;</p>\r\n', '<p>Intersection &nbsp;</p>\r\n', '<p>Product</p>\r\n', '5', 16, 12, '1'),
(1999, '<p>The file organization that provides very fast access to any arbitrary record of a file is</p>\r\n', '<p>Ordered file &nbsp; &nbsp;</p>\r\n', '<p>Unordered file<br />\r\n&nbsp;</p>\r\n', '<p>Hashed file&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n', '<p>B-tree</p>\r\n', '5', 18, 12, '3'),
(2000, '<p>DBMS helps achieve</p>\r\n', '<p>Data independence &nbsp;</p>\r\n', '<p>Centralized control of data<br />\r\n&nbsp;</p>\r\n', '<p>Neither (A) nor (B)</p>\r\n', '<p>both (A) and (B)&nbsp;</p>\r\n', '5', 16, 12, '4'),
(2001, '<p>Which of the following are the properties of entities?</p>\r\n', '<p>Groups &nbsp; &nbsp;</p>\r\n', '<p>Table<br />\r\n&nbsp;</p>\r\n', '<p>Attributes &nbsp; &nbsp;</p>\r\n', '<p>Switchboards&nbsp;</p>\r\n', '5', 16, 12, '3'),
(2002, '<p>In a relation</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ordering of rows is immaterial<br />\r\n&nbsp;</p>\r\n', '<p>No two rows are identical<br />\r\n&nbsp;</p>\r\n', '<p>(A) and (B) both are true<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 14, 12, '3'),
(2003, '<p>Which of the following is correct:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a SQL query automatically eliminates duplicates.<br />\r\n&nbsp;</p>\r\n', '<p>SQL permits attribute names to be repeated in the same relation.<br />\r\n&nbsp;</p>\r\n', '<p>a SQL query will not work if there are no indexes on the relations<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 20, 12, '4'),
(2004, '<p>It is better to use files than a DBMS when there are</p>\r\n', '<p>Stringent real-time requirements.<br />\r\n&nbsp;</p>\r\n', '<p>Multiple users wish to access the data.<br />\r\n&nbsp;</p>\r\n', '<p>Complex relationships among data.<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 20, 12, '2'),
(2005, '<p>The conceptual model is</p>\r\n', '<p>dependent on hardware.<br />\r\n&nbsp;</p>\r\n', '<p>dependent on software.<br />\r\n&nbsp;</p>\r\n', '<p>dependent on both hardware and software .<br />\r\n&nbsp;</p>\r\n', '<p>independent of both hardware and software</p>\r\n', '5', 16, 12, '4'),
(2006, '<p>What is a relationship called when it is maintained between two entities?</p>\r\n', '<p>Unary&nbsp;&nbsp;</p>\r\n', '<p>Binary<br />\r\n&nbsp;</p>\r\n', '<p>Ternary&nbsp;&nbsp;</p>\r\n', '<p>Quaternary</p>\r\n', '5', 17, 12, '2'),
(2007, '<p>Which of the following operation is used if we are interested in only certain columns of a table?</p>\r\n', '<p>PROJECTION&nbsp;&nbsp;</p>\r\n', '<p>SELECTION<br />\r\n&nbsp;</p>\r\n', '<p>UNION&nbsp;&nbsp;&nbsp;</p>\r\n', '<p>JOIN</p>\r\n', '5', 16, 12, '1'),
(2008, '<p>Which of the following is a valid SQL type?<br />\r\n&nbsp;</p>\r\n', '<p>CHARACTER&nbsp;</p>\r\n', '<p>NUMERIC<br />\r\n&nbsp;</p>\r\n', '<p>FLOAT&nbsp;&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '1', 15, 12, '4'),
(2009, '<p>The RDBMS terminology for a row is</p>\r\n', '<p>tuple. &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>relation.<br />\r\n&nbsp;</p>\r\n', '<p>attribute. &nbsp; &nbsp;</p>\r\n', '<p>degree.</p>\r\n', '6', 15, 12, '1'),
(2010, '<p>The raw facts and figures are:</p>\r\n', '<p>Data</p>\r\n', '<p>Data field</p>\r\n', '<p>DBMS</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>DBASE</p>\r\n', '1', 15, 12, '1'),
(2011, '<p>The ............ operator preserves unmatched rows of the relations being joined.</p>\r\n', '<p>Inner join</p>\r\n', '<p>Outer join</p>\r\n', '<p>union</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Union join</p>\r\n', '1', 15, 12, '2'),
(2012, '<p>If an attribute of a composite key is dependent on an attribute of the other composite key, a normalization called ................ is needed.</p>\r\n', '<p>DKNF</p>\r\n', '<p>BCNF</p>\r\n', '<p>third</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>fourth</p>\r\n', '6', 18, 12, '2'),
(2013, '<p>To select all column from the table the syntax is:</p>\r\n', '<p>select all from table_name</p>\r\n', '<p>select * from table_name</p>\r\n', '<p>select from table_name</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>none</p>\r\n', '1', 15, 12, '2'),
(2014, '<p>&nbsp;A .................. normal form normalization will be needed where all attributes in a relation tuple are not functionally dependent only on the key attribute.</p>\r\n', '<p>first</p>\r\n', '<p>second</p>\r\n', '<p>third</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>fourth</p>\r\n', '6', 24, 12, '3'),
(2015, '<p>In RDBMS, Data is presented as a collection of ............</p>\r\n', '<p>Relation</p>\r\n', '<p>Table</p>\r\n', '<p>Attribute</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Entity</p>\r\n', '6', 17, 12, '1'),
(2016, '<p>In the ........... normal form, a composite attribute is converted to individual attributes.</p>\r\n', '<p>first</p>\r\n', '<p>Second</p>\r\n', '<p>third</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>fourth</p>\r\n', '6', 16, 12, '1'),
(2017, '<p>The DBMS utility, ...................... allows to reconstruct the correct state of database from the backup and history of transactions.</p>\r\n', '<p>Backup</p>\r\n', '<p>Recovery</p>\r\n', '<p>Monitering</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Data loading</p>\r\n', '6', 20, 12, '2'),
(2018, '<p>The number of attributes in relation is called as its .....................</p>\r\n', '<p>Cardinality</p>\r\n', '<p>Degree</p>\r\n', '<p>Tuple</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Row</p>\r\n', '6', 16, 12, '2'),
(2019, '<p>DBMS is a collection of .............. that enables user to create and maintain a database.</p>\r\n', '<p>Key</p>\r\n', '<p>Program</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Translator<br />\r\n&nbsp;</p>\r\n', '<p>none</p>\r\n', '6', 16, 12, '2'),
(2020, '<p>Which of the following operations need the participating relations to be union compatible?</p>\r\n', '<p>UNION &nbsp;</p>\r\n', '<p>INTERSECTION<br />\r\n&nbsp;</p>\r\n', '<p>DIFFERENCE&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '6', 16, 12, '4'),
(2021, '<p>The full form of DDL is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Dynamic Data Language &nbsp; &nbsp;</p>\r\n', '<p>Detailed Data Language<br />\r\n&nbsp;</p>\r\n', '<p>Data Definition Language&nbsp;&nbsp;</p>\r\n', '<p>Data Derivation Language</p>\r\n', '6', 15, 12, '3'),
(2022, '<p>Which of the following is an advantage of view?</p>\r\n', '<p>Data security &nbsp;</p>\r\n', '<p>Derived columns<br />\r\n&nbsp;</p>\r\n', '<p>Hiding of complex queries &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '6', 16, 12, '4'),
(2023, '<p>Which of the following is a legal expression in SQL?</p>\r\n', '<p>SELECT NULL FROM EMPLOYEE;<br />\r\n&nbsp;</p>\r\n', '<p>SELECT NAME FROM EMPLOYEE;<br />\r\n&nbsp;</p>\r\n', '<p>SELECT NAME FROM EMPLOYEE WHERE SALARY = NULL;<br />\r\n&nbsp;</p>\r\n', '<p>None of the above&nbsp;</p>\r\n', '7', 17, 12, '2'),
(2024, '<p>The users who use easy-to-use menu are called<br />\r\n&nbsp;</p>\r\n', '<p>Sophisticated end users.&nbsp;&nbsp;&nbsp;</p>\r\n', '<p>Na&iuml;ve users.<br />\r\n&nbsp;</p>\r\n', '<p>Stand-alone users.&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n', '<p>Casual end users.</p>\r\n', '7', 17, 12, '2'),
(2025, '<p>Which database level is closest to the users?</p>\r\n', '<p>External&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n', '<p>Internal<br />\r\n&nbsp;</p>\r\n', '<p>Physical&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n', '<p>Conceptual</p>\r\n', '7', 15, 12, '1'),
(2026, '<p>Which are the two ways in which entities can participate in a relationship?</p>\r\n', '<p>Passive and active &nbsp; &nbsp;</p>\r\n', '<p>Total and partial<br />\r\n&nbsp;</p>\r\n', '<p>Simple and Complex &nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '7', 15, 12, '2'),
(2027, '<p>The result of the UNION operation between R1 and R2 is a relation that includes</p>\r\n', '<p>all the tuples of R1<br />\r\n&nbsp;</p>\r\n', '<p>all the tuples of R2<br />\r\n&nbsp;</p>\r\n', '<p>all the tuples of R1 and R2<br />\r\n&nbsp;</p>\r\n', '<p>all the tuples of R1 and R2 which have common columns&nbsp;</p>\r\n', '7', 18, 12, '4'),
(2028, '<p>Which of the following is a comparison operator in SQL?</p>\r\n', '<p>= &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>LIKE<br />\r\n&nbsp;</p>\r\n', '<p>BETWEEN &nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '7', 14, 12, '4'),
(2029, '<p>A set of possible data values is called</p>\r\n', '<p>attribute.&nbsp;&nbsp;</p>\r\n', '<p>degree.<br />\r\n&nbsp;</p>\r\n', '<p>tuple. &nbsp; &nbsp;</p>\r\n', '<p>domain.</p>\r\n', '7', 14, 12, '4'),
(2030, '<p>Which of the operations constitute a basic set of operations for manipulating relational data?</p>\r\n', '<p>Predicate calculus &nbsp;</p>\r\n', '<p>Relational calculus<br />\r\n&nbsp;</p>\r\n', '<p>Relational algebra &nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '7', 18, 12, '3'),
(2031, '<p>Which of the following is another name for weak entity?</p>\r\n', '<p>Child &nbsp;</p>\r\n', '<p>Owner<br />\r\n&nbsp;</p>\r\n', '<p>Dominant &nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '1', 15, 12, '1'),
(2033, '<p>&nbsp;Which of the following database object does not physically exist?</p>\r\n', '<p>base table &nbsp;</p>\r\n', '<p>index<br />\r\n&nbsp;</p>\r\n', '<p>view&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>none of the above&nbsp;</p>\r\n', '1', 14, 12, '3'),
(2034, '<p>NULL is</p>\r\n', '<p>the same as 0 for integer<br />\r\n&nbsp;</p>\r\n', '<p>the same as blank for character<br />\r\n&nbsp;</p>\r\n', '<p>the same as 0 for integer and blank for character<br />\r\n&nbsp;</p>\r\n', '<p>not a value&nbsp;</p>\r\n', '2', 15, 12, '4'),
(2035, '<p>Which of the following is record based logical model?<br />\r\n&nbsp;</p>\r\n', '<p>Network Model</p>\r\n', '<p>Object oriented model<br />\r\n&nbsp;</p>\r\n', '<p>E-R Model<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '8', 14, 12, '1'),
(2036, '<p>A data dictionary is a special file that contains:</p>\r\n', '<p>The name of all fields in all files.<br />\r\n&nbsp;</p>\r\n', '<p>The width of all fields in all files.<br />\r\n&nbsp;</p>\r\n', '<p>The data type of all fields in all files.<br />\r\n.&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '8', 15, 12, '4'),
(2037, '<p>A file manipulation command that extracts some of the records from a file is called</p>\r\n', '<p>SELECT &nbsp;</p>\r\n', '<p>PROJECT<br />\r\n&nbsp;</p>\r\n', '<p>JOIN &nbsp; &nbsp;</p>\r\n', '<p>PRODUCT&nbsp;</p>\r\n', '8', 15, 12, '1'),
(2038, '<p>The physical location of a record is determined by a mathematical formula that transforms &nbsp;a file key into a record location is :</p>\r\n', '<p>B-Tree File &nbsp; &nbsp;</p>\r\n', '<p>Hashed File<br />\r\n&nbsp;</p>\r\n', '<p>Indexed File &nbsp; &nbsp;</p>\r\n', '<p>Sequential file.</p>\r\n', '8', 20, 12, '2'),
(2039, '<p>Using Relational Algebra the query that finds customers, who have a balance of over &nbsp;1000 is</p>\r\n', '<p>PCustomer_name(s balance &gt;1000(Deposit))<br />\r\n&nbsp;</p>\r\n', '<p>s Customer_name(Pbalance &gt;1000(Deposit))<br />\r\n&nbsp;</p>\r\n', '<p>PCustomer_name(s balance &gt;1000(Borrow))<br />\r\n&nbsp;</p>\r\n', '<p>s Customer_name(Pbalance &gt;1000(Borrow))</p>\r\n', '8', 20, 12, '1'),
(2040, '<p>A primary key is combined with a foreign key creates</p>\r\n', '<p>Parent-Child relation ship between the tables that connect them.<br />\r\n&nbsp;</p>\r\n', '<p>Many to many relationship between the tables that connect them.<br />\r\n&nbsp;</p>\r\n', '<p>Network model between the tables that connect them.<br />\r\n&nbsp;</p>\r\n', '<p>None of the above.&nbsp;</p>\r\n', '8', 15, 12, '1'),
(2041, '<p>In E-R Diagram derived attribute are represented by<br />\r\n&nbsp;</p>\r\n', '<p>Ellipse &nbsp;</p>\r\n', '<p>Dashed ellipse<br />\r\n&nbsp;</p>\r\n', '<p>Rectangle &nbsp;</p>\r\n', '<p>Triangle</p>\r\n', '8', 14, 12, '2'),
(2042, '<p>Cross Product is a:<br />\r\n&nbsp;</p>\r\n', '<p>Unary Operator &nbsp;</p>\r\n', '<p>Ternary Operator<br />\r\n&nbsp;</p>\r\n', '<p>Binary Operator &nbsp;</p>\r\n', '<p>Not an operator</p>\r\n', '2', 16, 12, '3'),
(2043, '<p>An instance of relational schema R (A, B, C) has distinct values of A including NULL &nbsp;values. Which one of the following is true?</p>\r\n', '<p>A is a candidate key &nbsp;</p>\r\n', '<p>A is not a candidate key<br />\r\n&nbsp;</p>\r\n', '<p>A is a primary Key &nbsp;</p>\r\n', '<p>Both (A) and (C)</p>\r\n', '8', 18, 12, '2'),
(2044, '<p>Consider the join of a relation R with relation S. If R has m tuples and S has n tuples, &nbsp;then the maximum size of join is:</p>\r\n', '<p>mn&nbsp;&nbsp;&nbsp;</p>\r\n', '<p>m+n<br />\r\n&nbsp;</p>\r\n', '<p>m+n)/2 &nbsp; &nbsp;</p>\r\n', '<p>2(m+n)&nbsp;</p>\r\n', '8', 20, 12, '1'),
(2045, '<p>The natural join is equal to :</p>\r\n', '<p>Cartesian Product<br />\r\n&nbsp;</p>\r\n', '<p>Combination of Union and Cartesian product<br />\r\n&nbsp;</p>\r\n', '<p>Combination of selection and Cartesian product<br />\r\n&nbsp;</p>\r\n', '<p>Combination of projection and Cartesian product</p>\r\n', '8', 16, 12, '4'),
(2046, '<p>Which one of the following is not true for a view:</p>\r\n', '<p>View is derived from other tables.<br />\r\n&nbsp;</p>\r\n', '<p>View is a virtual table.<br />\r\n&nbsp;</p>\r\n', '<p>A view definition is permanently stored as part of the database.<br />\r\n&nbsp;</p>\r\n', '<p>View never contains derived columns.&nbsp;</p>\r\n', '8', 16, 12, '3'),
(2047, '<p>A primary key if combined with a foreign key creates</p>\r\n', '<p>Parent-Child relationship between the tables that connect them.<br />\r\n&nbsp;</p>\r\n', '<p>Many to many relationship between the tables that connect them.<br />\r\n&nbsp;</p>\r\n', '<p>Network model between the tables that connect them.<br />\r\n&nbsp;</p>\r\n', '<p>None of the above.</p>\r\n', '8', 15, 12, '1'),
(2048, '<p>In which of the following situations might a blind search be acceptable</p>\r\n', '<p>Real life situation</p>\r\n', '<p>Complex game</p>\r\n', '<p>Small search space</p>\r\n', '<p>All of above</p>\r\n', '2', 23, 2, '3'),
(2049, '<p>In LISP, the addition 3 + 2 is entered as</p>\r\n', '<p>3 + 2</p>\r\n', '<p>3 add 2</p>\r\n', '<p>3 + 2 =</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(+ 3 2)</p>\r\n', '8', 18, 2, '4'),
(2050, '<p>In LISP, the function assigns the symbol x to y is</p>\r\n', '<p>(setq y x)</p>\r\n', '<p>(set y = &#39;x&#39;)<br />\r\n&nbsp;</p>\r\n', '<p>(setq y = &#39;x&#39;)<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(setq y &#39;x&#39;)</p>\r\n', '8', 26, 2, '4'),
(2051, '<p>In a rule-based system, procedural domain knowledge is in the form of:</p>\r\n', '<p>production rules</p>\r\n', '<p>rule interpreters</p>\r\n', '<p>meta-rules</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>control rules</p>\r\n', '8', 23, 2, '1'),
(2052, '<p>In which of the following situations might a blind search be acceptable<br />\r\n&nbsp;</p>\r\n', '<p>Real life situation</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Complex game</p>\r\n', '<p>Small search space</p>\r\n', '<p>All of above</p>\r\n', '2', 23, 2, '3'),
(2053, '<p>The hardware feature of LISP machines generally include ?<br />\r\n&nbsp;</p>\r\n', '<p>Large memory and high speed processor</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Letter quality printers and 8 -inch disk drives</p>\r\n', '<p>A mouse and specialized keyboard</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both A and C</p>\r\n', '2', 22, 2, '4');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(2054, '<p>NLMenu, a natural language interface for the TI Explorer, is similar to ?</p>\r\n', '<p>Ethernet</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>NaturalLink</p>\r\n', '<p>PROLOG</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The personal Consultant</p>\r\n', '2', 20, 2, '2'),
(2055, '<p>If a robot can alter its own trajectory in response to external conditions, it is considered to be:</p>\r\n', '<p>intelligent</p>\r\n', '<p>mobile</p>\r\n', '<p>open loop</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>non-servo</p>\r\n', '8', 22, 2, '1'),
(2056, '<p>In LISP, the function returns the first element of a list Is</p>\r\n', '<p>set</p>\r\n', '<p>car<br />\r\n&nbsp;</p>\r\n', '<p>first<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>second</p>\r\n', '8', 22, 2, '2'),
(2057, '<p>A mouse device may be ?<br />\r\n&nbsp;</p>\r\n', '<p>Electrochemical</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Mechanical</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Optical</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both B and C</p>\r\n', '2', 15, 2, '4'),
(2058, '<p>A process that is repeated, evaluated, and refined is called:</p>\r\n', '<p>diagnostic</p>\r\n', '<p>descriptive</p>\r\n', '<p>interpretive</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>iterative</p>\r\n', '8', 23, 2, '4'),
(2059, '<p>Visual clues that are helpful in computer vision include:</p>\r\n', '<p>colour and motion</p>\r\n', '<p>depth and texture<br />\r\n&nbsp;</p>\r\n', '<p>height and weight</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a and b above</p>\r\n', '8', 24, 2, '4'),
(2060, '<p>The characteristics of the computer system capable of thinking,reasoning and learning is called ?<br />\r\n&nbsp;</p>\r\n', '<p>Machine intelligence</p>\r\n', '<p>Human intelligence</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Artificial intelligence</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Virtual intelligence</p>\r\n', '2', 20, 2, '3'),
(2061, '<p>Visual clues that are helpful in computer vision include:</p>\r\n', '<p>colour and motion</p>\r\n', '<p>depth and texture<br />\r\n&nbsp;</p>\r\n', '<p>height and weight</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a and b above</p>\r\n', '8', 24, 2, '4'),
(2062, '<p>In LISP, the function X (x). (2x+l) would be rendered as</p>\r\n', '<p>(lambda (x) (+(*2 x)l))</p>\r\n', '<p>(lambda (x) (+1 (* 2x)</p>\r\n', '<p>(+ lambda (x) 1 (*2x))</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(* lambda(x) (+2x1)</p>\r\n', '8', 29, 2, '1'),
(2063, '<p>A natural language generation program must decide:</p>\r\n', '<p>what to say</p>\r\n', '<p>when to say something</p>\r\n', '<p>why it is being used</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>both (a) and (b)</p>\r\n', '8', 19, 2, '4'),
(2064, '<p>Turing developed a technique for determining whether a computer could or could not demonstrate the artificial intelligence.Presently this technique is called ?</p>\r\n', '<p>Turing test</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Algorithm</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Boolean algebra</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Logarithm</p>\r\n', '3', 21, 2, '1'),
(2065, '<p>How can you evaluate 1.25 + sqrt(144) in LISP</p>\r\n', '<p>1.25+sqrt(1.44)</p>\r\n', '<p>(1.25+sqrt(1.44))</p>\r\n', '<p>(+1.25 sqrt(1.44)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '8', 25, 2, '3'),
(2066, '<p>When talking to a speech recognition program, the program divides each second of your speech into 100 separate</p>\r\n', '<p>Codes</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Phonemes</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Samples</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Words</p>\r\n', '3', 20, 2, '3'),
(2067, '<p>What is the term used for describing the judgmental or commonsense part of problem solving?<br />\r\n&nbsp;</p>\r\n', '<p>Heuristic</p>\r\n', '<p>Critical</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Value based</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Analytical</p>\r\n', '3', 23, 2, '1'),
(2068, '<p>What stage of the manufacturing process has been described as &quot;the mapping of function onto form&quot;?<br />\r\n&nbsp;</p>\r\n', '<p>Design</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Distribution</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>project management</p>\r\n', '<p>field service</p>\r\n', '3', 21, 2, '1'),
(2069, '<p>Which kind of planning consists of successive representations of different levels of a plan?</p>\r\n', '<p>hierarchical planning</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>non-hierarchical planning</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>project planning</p>\r\n', '<p>all of the above</p>\r\n', '3', 25, 2, '1'),
(2070, '<p>What was originally called the &quot;imitation game&quot; by its creator?</p>\r\n', '<p>The Turing Test</p>\r\n', '<p>LISP</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The Logic Theorist</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Cybernetics</p>\r\n', '3', 24, 2, '1'),
(2071, '<p>Decision support programs are designed to help managers make</p>\r\n', '<p>budget projections</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>visual presentations</p>\r\n', '<p>business decisions</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>vacation schedules</p>\r\n', '3', 22, 2, '3'),
(2072, '<p>Which is not a desirable property of a logical rule-based system?</p>\r\n', '<p>Locality &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;Attachment &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Detachment<br />\r\n&nbsp;</p>\r\n', '<p>Truth-Functionality &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '3', 23, 2, '2'),
(2073, '<p>How is Fuzzy Logic different from conventional control methods?<br />\r\n&nbsp;</p>\r\n', '<p>IF and THEN Approach &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>FOR Approach<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;WHILE Approach &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>DO Approach<br />\r\n&nbsp;</p>\r\n', '3', 25, 2, '1'),
(2074, '<p>In an Unsupervised learning<br />\r\n&nbsp;</p>\r\n', '<p>Specific output values are given<br />\r\n&nbsp;</p>\r\n', '<p>Specific output values are not given</p>\r\n', '<p>No specific Inputs are given</p>\r\n', '<p>Both inputs and outputs are given</p>\r\n', '3', 22, 2, '2'),
(2075, '<p>Inductive learning involves finding a<br />\r\n&nbsp;</p>\r\n', '<p>Consistent Hypothesis &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Inconsistent Hypothesis<br />\r\n&nbsp;</p>\r\n', '<p>Regular Hypothesis &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Irregular Hypothesis</p>\r\n', '3', 24, 2, '1'),
(2076, '<p>Computational learning theory analyzes the sample complexity and computational complexity of<br />\r\n&nbsp;</p>\r\n', '<p>UnSupervised Learning &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Inductive learning<br />\r\n&nbsp;</p>\r\n', '<p>Forced based learning &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Weak learning</p>\r\n', '3', 26, 2, '2'),
(2077, '<p>If a hypothesis says it should be positive, but in fact it is negative, we call it<br />\r\n&nbsp;</p>\r\n', '<p>A consistent hypothesis &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>A false negative hypothesis<br />\r\n&nbsp;</p>\r\n', '<p>A false positive hypothesis &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>&nbsp;A specialized hypothesis<br />\r\n&nbsp;</p>\r\n', '3', 28, 2, '3'),
(2078, '<p>Neural Networks are complex -----------------------with many parameters.<br />\r\n&nbsp;</p>\r\n', '<p>Linear Functions &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Nonlinear Functions<br />\r\n&nbsp;</p>\r\n', '<p>Discrete Functions &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Exponential Functions<br />\r\n&nbsp;</p>\r\n', '3', 26, 2, '2'),
(2079, '<p>A perceptron is a --------------------------------.<br />\r\n&nbsp;</p>\r\n', '<p>Feed-forward neural network &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n', '<p>Back-propagation alogorithm<br />\r\n&nbsp;</p>\r\n', '<p>Back-tracking algorithm &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n', '<p>Feed Forward-backward algorithm</p>\r\n', '3', 25, 2, '1'),
(2080, '<p>Which is true?</p>\r\n', '<p>Not all formal languages are context-free</p>\r\n', '<p>All formal languages are Context free<br />\r\n&nbsp;</p>\r\n', '<p>All formal languages are like natural language<br />\r\n&nbsp;</p>\r\n', '<p>Natural languages are context-oriented free</p>\r\n', '3', 21, 2, '1'),
(2081, '<p>Which is not true?<br />\r\n&nbsp;</p>\r\n', '<p>The union and concatenation of two context-free languages is context-free<br />\r\n&nbsp;</p>\r\n', '<p>The reverse of a context-free language is context-free, but the complement need not be<br />\r\n&nbsp;</p>\r\n', '<p>Every regular language is context-free because it can be described by a regular grammar</p>\r\n', '<p>The intersection two context-free languages is context-free</p>\r\n', '3', 26, 2, '4'),
(2082, '<p>What is a Cybernetics?<br />\r\n&nbsp;</p>\r\n', '<p>Study of communication between two machines</p>\r\n', '<p>Study of communication between human and machine<br />\r\n&nbsp;</p>\r\n', '<p>Study of communication between two humans<br />\r\n&nbsp;</p>\r\n', '<p>Study of Boolean values</p>\r\n', '3', 25, 2, '2'),
(2083, '<p>What is the goal of artificial intelligence?<br />\r\n&nbsp;</p>\r\n', '<p>To solve real-world problems<br />\r\n&nbsp;</p>\r\n', '<p>To solve artificial problems<br />\r\n&nbsp;</p>\r\n', '<p>To explain various sorts of intelligence<br />\r\n&nbsp;</p>\r\n', '<p>To extract scientific causes</p>\r\n', '3', 24, 2, '3'),
(2084, '<p>An algorithm is complete if<br />\r\n&nbsp;</p>\r\n', '<p>It terminates with a solution when one exists<br />\r\n&nbsp;</p>\r\n', '<p>It starts with a solution<br />\r\n&nbsp;</p>\r\n', '<p>It does not terminate with a solution<br />\r\n&nbsp;</p>\r\n', '<p>It has a loop</p>\r\n', '3', 24, 2, '1'),
(2085, '<p>Which is true regarding BFS?<br />\r\n&nbsp;</p>\r\n', '<p>BFS will get trapped exploring a single path<br />\r\n&nbsp;</p>\r\n', '<p>The entire tree so far been generated must be stored in BFS<br />\r\n&nbsp;</p>\r\n', '<p>BFS is not guaranteed to find a solution, if exists<br />\r\n&nbsp;</p>\r\n', '<p>BFS is nothing but Binary First Search</p>\r\n', '4', 20, 2, '2'),
(2086, '<p>What is a heuristic function?</p>\r\n', '<p>A function to solve mathematical problems</p>\r\n', '<p>A function which takes parameters of type string and returns an integer value<br />\r\n&nbsp;</p>\r\n', '<p>A function whose return type is nothing<br />\r\n&nbsp;</p>\r\n', '<p>A function that maps from problem state descriptions to measures of desirability</p>\r\n', '4', 21, 2, '4'),
(2087, '<p>The traveling salesman problem involves n cities with paths connecting the cities. The time taken for traversing through all the cities, without knowing in advance the length of a minimum tour, is<br />\r\n&nbsp;</p>\r\n', '<p>O(n)<br />\r\n&nbsp;</p>\r\n', '<p>O(n2)</p>\r\n', '<p>O(n!)<br />\r\n&nbsp;</p>\r\n', '<p>O(n/2)</p>\r\n', '4', 21, 2, '3'),
(2088, '<p>The problem space of means-end analysis has<br />\r\n&nbsp;</p>\r\n', '<p>An initial state and one or more goal states<br />\r\n&nbsp;</p>\r\n', '<p>One or more initial states and one goal state<br />\r\n&nbsp;</p>\r\n', '<p>One or more initial states and one or more goal state<br />\r\n&nbsp;</p>\r\n', '<p>One initial state and one goal state</p>\r\n', '4', 26, 2, '1'),
(2089, '<p>An algorithm A is admissible if</p>\r\n', '<p>It is not guaranteed to return an optimal solution when one exists<br />\r\n&nbsp;</p>\r\n', '<p>It is guaranteed to return an optimal solution when one exists<br />\r\n&nbsp;</p>\r\n', '<p>It returns more solutions, but not an optimal one<br />\r\n&nbsp;</p>\r\n', '<p>It guarantees to return more optimal solutions</p>\r\n', '4', 27, 2, '2'),
(2090, '<p>An AI technique that allows computers to understand associations and relationships between objects and events is called</p>\r\n', '<p>heuristic processing</p>\r\n', '<p>cognitive science</p>\r\n', '<p>relative symbolism</p>\r\n', '<p>pattern matching<br />\r\n&nbsp;</p>\r\n', '4', 24, 2, '4'),
(2091, '<p>The field that investigates the mechanics of human intelligence is</p>\r\n', '<p>history</p>\r\n', '<p>cognitive science<br />\r\n&nbsp;</p>\r\n', '<p>psychology<br />\r\n&nbsp;</p>\r\n', '<p>sociology</p>\r\n', '4', 23, 2, '2'),
(2092, '<p>A problem is first connected to its proposed solution during the _____ stage.<br />\r\n&nbsp;</p>\r\n', '<p>conceptualization<br />\r\n&nbsp;</p>\r\n', '<p>identification<br />\r\n&nbsp;</p>\r\n', '<p>formalization<br />\r\n&nbsp;</p>\r\n', '<p>implementation</p>\r\n', '4', 24, 2, '3'),
(2093, '<p>What is the name of the computer program that simulates the thought processes of human beings?<br />\r\n&nbsp;</p>\r\n', '<p>Human logic<br />\r\n&nbsp;</p>\r\n', '<p>Expert reason<br />\r\n&nbsp;</p>\r\n', '<p>Expert system</p>\r\n', '<p>Personal information</p>\r\n', '4', 22, 2, '3'),
(2094, '<p>Which of the following have people traditionally done better than computers?<br />\r\n&nbsp;</p>\r\n', '<p>recognizing relative importance</p>\r\n', '<p>finding similarities<br />\r\n&nbsp;</p>\r\n', '<p>resolving ambiguity<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '4', 23, 2, '4'),
(2095, '<p>Which type of actuator generates a good deal of power but tends to be messy?<br />\r\n&nbsp;</p>\r\n', '<p>electric<br />\r\n&nbsp;</p>\r\n', '<p>hydraulic<br />\r\n&nbsp;</p>\r\n', '<p>pneumatic<br />\r\n&nbsp;</p>\r\n', '<p>both (b) and (c)&nbsp;</p>\r\n', '4', 24, 2, '2'),
(2096, '<p>Research scientists all over the world are taking steps towards building computers with circuits patterned after the complex inter connections existing among the human brain&#39;s nerve cells. What name is given to such type of computers?</p>\r\n', '<p>Intelligent computers<br />\r\n&nbsp;</p>\r\n', '<p>Supercomputers<br />\r\n&nbsp;</p>\r\n', '<p>Neural network computers<br />\r\n&nbsp;</p>\r\n', '<p>Smart computers</p>\r\n', '4', 29, 2, '3'),
(2097, '<p>Which of the following have computers traditionally done better than people?<br />\r\n&nbsp;</p>\r\n', '<p>storing information<br />\r\n&nbsp;</p>\r\n', '<p>responding flexibly</p>\r\n', '<p>computing numerically</p>\r\n', '<p>both (a) and (c)</p>\r\n', '4', 24, 2, '4'),
(2098, '<p>The characteristics of the computer system capable of thinking, reasoning and learning is known is</p>\r\n', '<p>machine intelligence<br />\r\n&nbsp;</p>\r\n', '<p>human intelligence</p>\r\n', '<p>artificial intelligence<br />\r\n&nbsp;</p>\r\n', '<p>virtual intelligence<br />\r\n&nbsp;</p>\r\n', '4', 26, 2, '3'),
(2099, '<p>What part of the manufacturing process relate to each stage of the process and to the process as a whole?<br />\r\n&nbsp;</p>\r\n', '<p>field service<br />\r\n&nbsp;</p>\r\n', '<p>design<br />\r\n&nbsp;</p>\r\n', '<p>distribution<br />\r\n&nbsp;</p>\r\n', '<p>project management</p>\r\n', '4', 23, 2, '4'),
(2100, '<p>The area of AI that investigates methods of facilitating communication between people and computers is:<br />\r\n&nbsp;</p>\r\n', '<p>natural language processing</p>\r\n', '<p>symbolic processing<br />\r\n&nbsp;</p>\r\n', '<p>decision support<br />\r\n&nbsp;</p>\r\n', '<p>robotics</p>\r\n', '4', 28, 2, '1'),
(2101, '<p>What is the name of the computer program that contains the distilled knowledge of an expert?<br />\r\n&nbsp;</p>\r\n', '<p>Data base management system<br />\r\n&nbsp;</p>\r\n', '<p>Management information System<br />\r\n&nbsp;</p>\r\n', '<p>Expert system<br />\r\n&nbsp;</p>\r\n', '<p>Artificial intelligence</p>\r\n', '4', 30, 2, '3'),
(2102, '<p>Claude Shannon described the operation of electronic switching circuits with a system of mathematical logic called:<br />\r\n&nbsp;</p>\r\n', '<p>LISP<br />\r\n&nbsp;</p>\r\n', '<p>XLISP<br />\r\n&nbsp;</p>\r\n', '<p>Boolean algebra<br />\r\n&nbsp;</p>\r\n', '<p>neural networking</p>\r\n', '4', 23, 2, '3'),
(2103, '<p>A computer program that contains expertise in a particular domain is called an:<br />\r\n&nbsp;</p>\r\n', '<p>intelligent planner</p>\r\n', '<p>automatic processor<br />\r\n&nbsp;</p>\r\n', '<p>expert system</p>\r\n', '<p>operational symbolizer</p>\r\n', '4', 24, 2, '3'),
(2104, '<p>Ambiguity may be caused by:</p>\r\n', '<p>syntactic ambiguity<br />\r\n&nbsp;</p>\r\n', '<p>multiple word meanings</p>\r\n', '<p>unclear antecedents<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 21, 2, '4'),
(2105, '<p>Natural language processing is divided into the two subfields of:<br />\r\n&nbsp;</p>\r\n', '<p>symbolic and numeric</p>\r\n', '<p>time and motion</p>\r\n', '<p>algorithmic and heuristic<br />\r\n&nbsp;</p>\r\n', '<p>understanding and generation</p>\r\n', '5', 26, 2, '4'),
(2106, '<p>Decision support programs are designed to help managers make:<br />\r\n&nbsp;</p>\r\n', '<p>budget projections</p>\r\n', '<p>visual presentations</p>\r\n', '<p>business decisions</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>vacation schedules</p>\r\n', '5', 21, 2, '3'),
(2107, '<p>DEC advertises that it helped to create &quot;the world&#39;s first expert system routinely used in an industrial environment,&quot; called XCON or:<br />\r\n&nbsp;</p>\r\n', '<p>PDP-11</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Rl</p>\r\n', '<p>VAX</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MAGNOM</p>\r\n', '5', 22, 2, '2'),
(2108, '<p>Prior to the invention of time sharing, the prevalent method of computer access was:<br />\r\n&nbsp;</p>\r\n', '<p>batch processing</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>telecommunication</p>\r\n', '<p>remote access</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 26, 2, '1'),
(2109, '<p>Seymour Papert of the MIT AI lab created a programming environment for children called:<br />\r\n&nbsp;</p>\r\n', '<p>BASIC</p>\r\n', '<p>LOGO</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MYCIN</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>FORTRAN</p>\r\n', '5', 24, 2, '2'),
(2110, '<p>Seymour Papert of the MIT AI lab created a programming environment for children called:<br />\r\n&nbsp;</p>\r\n', '<p>BASIC</p>\r\n', '<p>LOGO</p>\r\n', '<p>MYCIN</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>FORTRAN</p>\r\n', '5', 24, 2, '2'),
(2111, '<p>High-resolution, bit-mapped displays are useful for displaying</p>\r\n', '<p>clearer characters</p>\r\n', '<p>graphics<br />\r\n&nbsp;</p>\r\n', '<p>more characters<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 19, 2, '4'),
(2112, '<p>A bidirectional feedback loop links computer modelling with</p>\r\n', '<p>artificial science</p>\r\n', '<p>heuristic processing</p>\r\n', '<p>human intelligence<br />\r\nD.</p>\r\n\r\n<p>cognitive science</p>\r\n', '<p>cognitive science</p>\r\n', '5', 18, 2, '4'),
(2113, '<p>A Personal Consultant knowledge base contain information in the form of</p>\r\n', '<p>parameters<br />\r\n&nbsp;</p>\r\n', '<p>contexts<br />\r\n&nbsp;</p>\r\n', '<p>production rules<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 20, 2, '4'),
(2114, '<p>Which approach to speech recognition avoids the problem caused by the variation in speech patterns among different speakers?<br />\r\n&nbsp;</p>\r\n', '<p>Continuous speech recognition</p>\r\n', '<p>Isolated word recognition<br />\r\n&nbsp;</p>\r\n', '<p>Connected word recognition</p>\r\n', '<p>Speaker-dependent recognition</p>\r\n', '5', 26, 2, '4'),
(2115, '<p>Which of the following, is a component of an expert system?<br />\r\n&nbsp;</p>\r\n', '<p>inference engine</p>\r\n', '<p>knowledge base<br />\r\n&nbsp;</p>\r\n', '<p>user interface<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 25, 2, '4'),
(2116, '<p>A computer vision technique that relies on image templates is</p>\r\n', '<p>edge detection<br />\r\n&nbsp;</p>\r\n', '<p>binocular vision<br />\r\n&nbsp;</p>\r\n', '<p>model-based vision<br />\r\n&nbsp;</p>\r\n', '<p>robot vision</p>\r\n', '5', 24, 2, '3'),
(2117, '<p>In LISP, the function (copy-list)<br />\r\n&nbsp;</p>\r\n', '<p>returns a new list that is equal to by copying the top-level element of</p>\r\n', '<p>returns the length of<br />\r\n&nbsp;</p>\r\n', '<p>returns t if is empty<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 24, 2, '1'),
(2118, '<p>In LISP, the square root of X is referenced as ?<br />\r\n&nbsp;</p>\r\n', '<p>sqrt(x)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(sqrt x)</p>\r\n', '<p>x/2</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>x/3</p>\r\n', '5', 24, 2, '2'),
(2119, '<p>LISP machines also are known as:<br />\r\n&nbsp;</p>\r\n', '<p>AI workstations<br />\r\n&nbsp;</p>\r\n', '<p>time-sharing terminals</p>\r\n', '<p>super mini computers</p>\r\n', '<p>All of the above</p>\r\n', '6', 24, 2, '1'),
(2120, '<p>Which of the following is true related to &lsquo;Satisfiable&rsquo; property?<br />\r\n&nbsp;</p>\r\n', '<p>A statement is satisfiable if there is some interpretation for which it is false<br />\r\n&nbsp;</p>\r\n', '<p>A statement is satisfiable if there is some interpretation for which it is true<br />\r\n&nbsp;</p>\r\n', '<p>A statement is satisfiable if there is no interpretation for which it is true<br />\r\n&nbsp;</p>\r\n', '<p>A statement is satisfiable if there is no interpretation for which it is false</p>\r\n', '6', 25, 2, '2'),
(2121, '<p>Two literals are complementary if</p>\r\n', '<p>They are equal<br />\r\n&nbsp;</p>\r\n', '<p>They are identical and of equal sign<br />\r\n&nbsp;</p>\r\n', '<p>They are identical but of opposite sign<br />\r\n&nbsp;</p>\r\n', '<p>They are unequal but of equal sign<br />\r\n&nbsp;</p>\r\n', '6', 24, 2, '3'),
(2122, '<p>Consider a good system for the representation of knowledge in a particular domain. What property should it possess?<br />\r\n&nbsp;</p>\r\n', '<p>Representational Adequacy<br />\r\n&nbsp;</p>\r\n', '<p>Inferential Adequacy<br />\r\n&nbsp;</p>\r\n', '<p>Inferential Efficiency<br />\r\n&nbsp;</p>\r\n', '<p>All of the&nbsp;above.<br />\r\n&nbsp;</p>\r\n', '6', 32, 2, '4'),
(2123, '<p>What is Transposition rule?<br />\r\n&nbsp;</p>\r\n', '<p>From P ? Q, infer ~Q ? P<br />\r\n&nbsp;</p>\r\n', '<p>From P ? Q, infer Q ? ~P<br />\r\n&nbsp;</p>\r\n', '<p>From P ? Q, infer Q ? P<br />\r\n&nbsp;</p>\r\n', '<p>From P ? Q, infer ~Q ? ~P</p>\r\n', '6', 24, 2, '4'),
(2124, '<p>Third component of a planning system is to<br />\r\n&nbsp;</p>\r\n', '<p>Detect when a solution has been found<br />\r\n&nbsp;</p>\r\n', '<p>Detect when solution will be found<br />\r\n&nbsp;</p>\r\n', '<p>Detect whether solution exists or not<br />\r\n&nbsp;</p>\r\n', '<p>Detect whether multiple solutions exist</p>\r\n', '6', 28, 2, '1'),
(2125, '<p>In default logic, we allow inference rules of the form</p>\r\n', '<p>(A : B) / C<br />\r\n&nbsp;</p>\r\n', '<p>A / (B : C)</p>\r\n', '<p>A / B<br />\r\n&nbsp;</p>\r\n', '<p>A / B : C</p>\r\n', '6', 24, 2, '1'),
(2126, '<p>In Baye&rsquo;s theorem, what is the meant by P(Hi|E)?<br />\r\n&nbsp;</p>\r\n', '<p>The probability that hypotheses Hi is true given evidence E<br />\r\n&nbsp;</p>\r\n', '<p>The probability that hypotheses Hi is false given evidence E<br />\r\n&nbsp;</p>\r\n', '<p>The probability that hypotheses Hi is true given false evidence E<br />\r\n&nbsp;</p>\r\n', '<p>The probability that hypotheses Hi is false given false evidence E</p>\r\n', '6', 32, 2, '1'),
(2127, '<p>Default reasoning is another type of<br />\r\n&nbsp;</p>\r\n', '<p>Monotonic reasoning<br />\r\n&nbsp;</p>\r\n', '<p>Analogical reasoning<br />\r\n&nbsp;</p>\r\n', '<p>Bitonic reasoning<br />\r\n&nbsp;</p>\r\n', '<p>Non-monotonic reasoning</p>\r\n', '6', 21, 2, '4'),
(2128, '<p>Generality is the measure of<br />\r\n&nbsp;</p>\r\n', '<p>Ease with which the method can be adapted to different domains of application<br />\r\n&nbsp;</p>\r\n', '<p>The average time required to construct the target knowledge structures from some specified initial structures<br />\r\n&nbsp;</p>\r\n', '<p>A learning system to function with unreliable feedback and with a variety of training examples<br />\r\n&nbsp;</p>\r\n', '<p>The overall power of the system</p>\r\n', '6', 24, 2, '1'),
(2129, '<p>Machine learning is<br />\r\n&nbsp;</p>\r\n', '<p>The autonomous acquisition of knowledge through the use of computer programs<br />\r\n&nbsp;</p>\r\n', '<p>The autonomous acquisition of knowledge through the use of manual programs<br />\r\n&nbsp;</p>\r\n', '<p>The selective acquisition of knowledge through the use of computer programs<br />\r\n&nbsp;</p>\r\n', '<p>The selective acquisition of knowledge through the use of manual programs<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '6', 27, 2, '1'),
(2130, '<p>Factors which affect the performance of learner system does not include<br />\r\n&nbsp;</p>\r\n', '<p>Representation scheme used<br />\r\n&nbsp;</p>\r\n', '<p>Training scenario<br />\r\n&nbsp;</p>\r\n', '<p>Type of feedback<br />\r\n&nbsp;</p>\r\n', '<p>Good data structures</p>\r\n', '6', 26, 2, '4'),
(2131, '<p>Different learning methods does not include<br />\r\n&nbsp;</p>\r\n', '<p>Memorization<br />\r\n&nbsp;</p>\r\n', '<p>Analogy<br />\r\n&nbsp;</p>\r\n', '<p>Deduction<br />\r\n&nbsp;</p>\r\n', '<p>Introduction</p>\r\n', '6', 22, 2, '4'),
(2132, '<p>In language understanding, the levels of knowledge that does not include<br />\r\n&nbsp;</p>\r\n', '<p>Phonological</p>\r\n', '<p>Syntactic<br />\r\n&nbsp;</p>\r\n', '<p>Semantic<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Empirical.<br />\r\n&nbsp;</p>\r\n', '6', 26, 2, '4'),
(2133, '<p>A model of language consists of the categories which does not include<br />\r\n&nbsp;</p>\r\n', '<p>Language units<br />\r\n&nbsp;</p>\r\n', '<p>Role structure of units<br />\r\n&nbsp;</p>\r\n', '<p>System constraints</p>\r\n', '<p>Structural units</p>\r\n', '7', 24, 2, '4'),
(2134, '<p>Semantic grammars<br />\r\n&nbsp;</p>\r\n', '<p>Encode semantic information into a syntactic grammar<br />\r\n&nbsp;</p>\r\n', '<p>Decode semantic information into a syntactic grammar<br />\r\n&nbsp;</p>\r\n', '<p>Encode syntactic information into a semantic grammar<br />\r\n&nbsp;</p>\r\n', '<p>Decode syntactic information into a semantic grammar</p>\r\n', '7', 27, 2, '1'),
(2135, '<p>What is a top-down parser?</p>\r\n', '<p>Begins by hypothesizing a sentence (the symbol S) and successively predicting lower level constituents until individual preterminal symbols are written</p>\r\n', '<p>Begins by hypothesizing a sentence (the symbol S) and successively predicting upper level constituents until individual preterminal symbols are written<br />\r\n&nbsp;</p>\r\n', '<p>Begins by hypothesizing lower level constituents and successively predicting a sentence (the symbol S)</p>\r\n', '<p>Begins by hypothesizing upper level constituents and successively predicting a sentence (the symbol S)</p>\r\n', '7', 29, 2, '1'),
(2136, '<p>Perception involves<br />\r\n&nbsp;</p>\r\n', '<p>Sights, sounds, smell and touch<br />\r\n&nbsp;</p>\r\n', '<p>Hitting<br />\r\n&nbsp;</p>\r\n', '<p>Boxing<br />\r\n&nbsp;</p>\r\n', '<p>Dancing</p>\r\n', '7', 22, 2, '1'),
(2137, '<p>Among the following which is not a horn clause?</p>\r\n', '<p>p<br />\r\n&nbsp;</p>\r\n', '<p>&Oslash;p V q<br />\r\n&nbsp;</p>\r\n', '<p>p ? q<br />\r\n&nbsp;</p>\r\n', '<p>p ? &Oslash;q</p>\r\n', '7', 23, 2, '4'),
(2138, '<p>The action &lsquo;STACK(A, B)&rsquo; of a robot arm specify to<br />\r\n&nbsp;</p>\r\n', '<p>Place block B on Block A<br />\r\n&nbsp;</p>\r\n', '<p>Place blocks A, B on the table in that order<br />\r\n&nbsp;</p>\r\n', '<p>Place blocks B, A on the table in that order<br />\r\n&nbsp;</p>\r\n', '<p>Place block A on block B</p>\r\n', '7', 22, 2, '4'),
(2139, '<p>Programming a robot by physically moving it through the trajectory you want it to follow is called:<br />\r\n&nbsp;</p>\r\n', '<p>contact sensing control</p>\r\n', '<p>continuous-path control<br />\r\n&nbsp;</p>\r\n', '<p>robot vision control</p>\r\n', '<p>pick-and-place control</p>\r\n', '7', 24, 2, '2'),
(2140, '<p>Knowledge may be<br />\r\nI. &nbsp; &nbsp; Declarative.<br />\r\nII. &nbsp; &nbsp; Procedural.<br />\r\nIII. &nbsp; &nbsp;Non-procedural.<br />\r\n&nbsp;</p>\r\n', '<p>Only (I) above<br />\r\n&nbsp;</p>\r\n', '<p>Only (II) above<br />\r\n&nbsp;</p>\r\n', '<p>Only (III) above<br />\r\n&nbsp;</p>\r\n', '<p>Both (I) and (II) above</p>\r\n', '7', 27, 2, '4'),
(2141, '<p>Idempotency law is<br />\r\nI. &nbsp; &nbsp; P &Uacute; P = P.<br />\r\nII. &nbsp; &nbsp; P &Ugrave; P = P.<br />\r\nIII. &nbsp; &nbsp;P + P = P.<br />\r\n&nbsp;</p>\r\n', '<p>Only (I) above<br />\r\n&nbsp;</p>\r\n', '<p>Only (II) above<br />\r\n&nbsp;</p>\r\n', '<p>Only (III) above<br />\r\n&nbsp;</p>\r\n', '<p>Both (I) and (II) above</p>\r\n', '7', 26, 2, '1'),
(2142, '<p>A network with named nodes and labeled arcs that can be used to represent certain natural language grammars to facilitate parsing.<br />\r\n&nbsp;</p>\r\n', '<p>Tree Network</p>\r\n', '<p>Star Network<br />\r\n&nbsp;</p>\r\n', '<p>Transition Network</p>\r\n', '<p>Complete Network</p>\r\n', '7', 19, 2, '3'),
(2143, '<p>Assume the R is a relation on a set A, aRb is partially ordered such that a and b are _____________</p>\r\n', '<p>reflexive<br />\r\n&nbsp;</p>\r\n', '<p>transitive<br />\r\n&nbsp;</p>\r\n', '<p>symmetric</p>\r\n', '<p>reflexive and transitive</p>\r\n', '1', 20, 3, '4'),
(2144, '<p>Which of the following a turing machine does not consist of?</p>\r\n', '<p>input tape</p>\r\n', '<p>head<br />\r\n&nbsp;</p>\r\n', '<p>state register<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '1', 24, 3, '4'),
(2145, '<p>The value of n if turing machine is defined using n-tuples:<br />\r\n&nbsp;</p>\r\n', '<p>6</p>\r\n', '<p>7</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>5</p>\r\n', '1', 13, 3, '2'),
(2146, '<p>If d is not defined on the current state and the current tape symbol, then the machine ______<br />\r\n&nbsp;</p>\r\n', '<p>does not halts<br />\r\n&nbsp;</p>\r\n', '<p>halts<br />\r\n&nbsp;</p>\r\n', '<p>goes into loop forever</p>\r\n', '<p>none of the above</p>\r\n', '1', 14, 3, '2'),
(2147, '<p>Statement 1: A Finite automata can be represented graphically; Statement 2: The nodes can be its states; Statement 3: The edges or arcs can be used for transitions<br />\r\nHint: Nodes and Edges are for trees and forests too.<br />\r\nWhich of the following make the correct combination?<br />\r\n&nbsp;</p>\r\n', '<p>Statement 1 is false but Statement 2 and 3 are correct<br />\r\n&nbsp;</p>\r\n', '<p>Statement 1 and 2 are correct while 3 is wrong.<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned statements are correct.<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned statements are correct.</p>\r\n', '1', 30, 3, '4'),
(2148, '<p>The minimum number of states required to recognize an octal number divisible by 3 are/is</p>\r\n', '<p>1</p>\r\n', '<p>3</p>\r\n', '<p>5<br />\r\n&nbsp;</p>\r\n', '<p>7</p>\r\n', '1', 20, 2, '2'),
(2149, '<p>Which of the following is a not a part of 5-tuple finite automata?</p>\r\n', '<p>Input alphabet<br />\r\n&nbsp;</p>\r\n', '<p>Transition function<br />\r\n&nbsp;</p>\r\n', '<p>Initial State</p>\r\n', '<p>Output Alphabet</p>\r\n', '1', 19, 3, '4'),
(2150, '<p>If an Infinite language is passed to Machine M, the subsidiary which gives a finite solution to the infinite input tape is ______________<br />\r\n&nbsp;</p>\r\n', '<p>Compiler<br />\r\n&nbsp;</p>\r\n', '<p>Interpreter</p>\r\n', '<p>Loader and Linkers</p>\r\n', '<p>None of the above</p>\r\n', '1', 19, 3, '1'),
(2151, '<p>The number of elements in the set for the Language L={x?(?r) *|length if x is at most 2} and ?={0,1} is_________<br />\r\n&nbsp;</p>\r\n', '<p>7</p>\r\n', '<p>6<br />\r\n&nbsp;</p>\r\n', '<p>8</p>\r\n', '<p>5</p>\r\n', '1', 25, 3, '1'),
(2152, '<p>For the following change of state in FA, which of the following codes is an incorrect option?<br />\r\n&nbsp;</p>\r\n', '<p>d (m, 1) =n</p>\r\n', '<p>d (0, n) =m<br />\r\n&nbsp;</p>\r\n', '<p>d (m,0) =e<br />\r\n&nbsp;</p>\r\n', '<p>s: accept = false; cin &gt;&gt; char;<br />\r\nif char = &ldquo;0&rdquo; goto n;</p>\r\n', '1', 24, 3, '2'),
(2153, '<p>Given: ?= {a, b}<br />\r\nL= {x??*|x is a string combination}<br />\r\n?4 represents which among the following?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>{aa, ab, ba, bb}<br />\r\n&nbsp;</p>\r\n', '<p>{aaaa, abab, e, abaa, aabb}</p>\r\n', '<p>{aaa, aab, aba, bbb}<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '1', 26, 3, '2'),
(2154, '<p>Moore Machine is an application of:<br />\r\n&nbsp;</p>\r\n', '<p>Finite automata without input</p>\r\n', '<p>Finite automata with output</p>\r\n', '<p>Non- Finite automata with output<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 18, 3, '2'),
(2155, '<p>In Moore machine, output is produced over the change of:<br />\r\n&nbsp;</p>\r\n', '<p>transitions<br />\r\n&nbsp;</p>\r\n', '<p>states<br />\r\n&nbsp;</p>\r\n', '<p>Both<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 21, 3, '2'),
(2156, '<p>For a give Moore Machine, Given Input=&rsquo;101010&rsquo;, thus the output would be of length</p>\r\n', '<p>|Input|+1<br />\r\n&nbsp;</p>\r\n', '<p>|Input|</p>\r\n', '<p>|Input-1|<br />\r\n&nbsp;</p>\r\n', '<p>Cannot be predicted</p>\r\n', '1', 25, 3, '1'),
(2157, '<p>Statement 1: Null string is accepted in Moore Machine.<br />\r\nStatement 2: There are more than 5-Tuples in the definition of Moore Machine.</p>\r\n', '<p>Statement 1 is true and Statement 2 is true<br />\r\n&nbsp;</p>\r\n', '<p>Statement 1 is true while Statement 2 is false<br />\r\n&nbsp;</p>\r\n', '<p>Statement 1 is false while Statement 2 is true</p>\r\n', '<p>Statement 1 and Statement 2, both are false</p>\r\n', '1', 28, 2, '1'),
(2158, '<p>The total number of states and transitions required to form a moore machine that will produce residue mod 3.<br />\r\n&nbsp;</p>\r\n', '<p>3 and 6<br />\r\n&nbsp;</p>\r\n', '<p>3 and 5<br />\r\n&nbsp;</p>\r\n', '<p>2 and 4<br />\r\n&nbsp;</p>\r\n', '<p>2 and 5</p>\r\n', '1', 24, 3, '1'),
(2159, '<p>Which of the following is a correct statement?</p>\r\n', '<p>Moore machine has no accepting states<br />\r\n&nbsp;</p>\r\n', '<p>Mealy machine has no accepting states<br />\r\n&nbsp;</p>\r\n', '<p>We can convert Mealy to Moore but not vice versa<br />\r\n&nbsp;</p>\r\n', '<p>Not all of the mentioned are correct</p>\r\n', '1', 24, 3, '4'),
(2160, '<p>In mealy machine, the O/P depends upon?<br />\r\n&nbsp;</p>\r\n', '<p>State<br />\r\n&nbsp;</p>\r\n', '<p>Previous State<br />\r\n&nbsp;</p>\r\n', '<p>State and Input<br />\r\n&nbsp;</p>\r\n', '<p>Only Input</p>\r\n', '1', 15, 3, '3'),
(2161, '<p>Which of the given are correct?<br />\r\n&nbsp;</p>\r\n', '<p>Moore machine has 6-tuples<br />\r\n&nbsp;</p>\r\n', '<p>Mealy machine has 6-tuples<br />\r\n&nbsp;</p>\r\n', '<p>Both Mealy and Moore has 6-tuples</p>\r\n', '<p>None of the above</p>\r\n', '1', 17, 3, '3'),
(2162, '<p>Mealy and Moore machine can be categorized as:<br />\r\n&nbsp;</p>\r\n', '<p>Inducers<br />\r\n&nbsp;</p>\r\n', '<p>Transducers<br />\r\n&nbsp;</p>\r\n', '<p>Turing Machines<br />\r\n&nbsp;</p>\r\n', '<p>Linearly Bounder Automata</p>\r\n', '2', 16, 3, '2'),
(2163, '<p>The major difference between Mealy and Moore machine is about:<br />\r\n&nbsp;</p>\r\n', '<p>Output Variations</p>\r\n', '<p>Input Variations<br />\r\n&nbsp;</p>\r\n', '<p>Both<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 18, 3, '1'),
(2164, '<p>Which of the following not an example Bounded Information?</p>\r\n', '<p>fan switch outputs {on, off}<br />\r\n&nbsp;</p>\r\n', '<p>electricity meter reading<br />\r\n&nbsp;</p>\r\n', '<p>colour of the traffic light at the moment</p>\r\n', '<p>none of the above</p>\r\n', '2', 21, 3, '2'),
(2165, '<p>A Language for which no DFA exist is a________<br />\r\n&nbsp;</p>\r\n', '<p>Regular Language<br />\r\n&nbsp;</p>\r\n', '<p>Non-Regular Language<br />\r\n&nbsp;</p>\r\n', '<p>May be Regular<br />\r\n&nbsp;</p>\r\n', '<p>Cannot be said</p>\r\n', '2', 21, 3, '2'),
(2166, '<p>A DFA cannot be represented in the following format<br />\r\n&nbsp;</p>\r\n', '<p>Transition graph</p>\r\n', '<p>Transition Table</p>\r\n', '<p>C code<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 18, 3, '4'),
(2167, '<p>Can a DFA recognize a palindrome number?</p>\r\n', '<p>Yes</p>\r\n', '<p>No</p>\r\n', '<p>Yes, with input alphabet as ?*</p>\r\n', '<p>Can&rsquo;t be determined</p>\r\n', '2', 24, 3, '2'),
(2168, '<p>Which of the following is not an example of finite state machine system?<br />\r\n&nbsp;</p>\r\n', '<p>Control Mechanism of an elevator<br />\r\n&nbsp;</p>\r\n', '<p>Combinational Locks<br />\r\n&nbsp;</p>\r\n', '<p>Traffic Lights</p>\r\n', '<p>Digital Watches</p>\r\n', '2', 23, 3, '4'),
(2169, '<p>The password to the admins account=&rdquo;administrator&rdquo;. The total number of states required to make a password-pass system using DFA would be __________<br />\r\n&nbsp;</p>\r\n', '<p>14 states</p>\r\n', '<p>13 states<br />\r\n&nbsp;</p>\r\n', '<p>12 states<br />\r\n&nbsp;</p>\r\n', '<p>A password pass system cannot be created using DFA</p>\r\n', '2', 19, 3, '1'),
(2170, '<p>Let ?= {a, b, &hellip;. z} and A = {Hello, World}, B= {Input, Output}, then (A*nB) U (B*nA) can be represented as</p>\r\n', '<p>{Hello, World, Input, Output, e}</p>\r\n', '<p>{Hello, World, e}<br />\r\n&nbsp;</p>\r\n', '<p>{Input, Output, e}</p>\r\n', '<p>{}</p>\r\n', '2', 28, 3, '4'),
(2171, '<p>There are ________ tuples in finite state machine.</p>\r\n', '<p>4</p>\r\n', '<p>5<br />\r\n&nbsp;</p>\r\n', '<p>6<br />\r\n&nbsp;</p>\r\n', '<p>unlimited</p>\r\n', '2', 12, 3, '2'),
(2172, '<p>Transition function maps.</p>\r\n', '<p>S * Q -&gt; S</p>\r\n', '<p>Q * Q -&gt; S<br />\r\n&nbsp;</p>\r\n', '<p>S * S -&gt; Q</p>\r\n', '<p>Q * S -&gt; Q</p>\r\n', '2', 17, 3, '4'),
(2173, '<p>Number of states require to accept string ends with 10.<br />\r\n&nbsp;</p>\r\n', '<p>3</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>can&rsquo;t be represented.<br />\r\n&nbsp;</p>\r\n', '2', 13, 3, '1'),
(2174, '<p>Extended transition function is .<br />\r\n&nbsp;</p>\r\n', '<p>Q * S* -&gt; Q<br />\r\n&nbsp;</p>\r\n', '<p>Q * S -&gt; Q<br />\r\n&nbsp;</p>\r\n', '<p>Q* * S* -&gt; S<br />\r\n&nbsp;</p>\r\n', '<p>Q * S -&gt; S</p>\r\n', '2', 19, 3, '1'),
(2175, '<p>d*(q,ya) is equivalent to&nbsp;</p>\r\n', '<p>d((q,y),a)<br />\r\n&nbsp;</p>\r\n', '<p>d(d*(q,y),a)<br />\r\n&nbsp;</p>\r\n', '<p>d(q,ya)<br />\r\n&nbsp;</p>\r\n', '<p>independent from d notation<br />\r\n&nbsp;</p>\r\n', '2', 19, 3, '2'),
(2176, '<p>String X is accepted by finite automata if&nbsp;</p>\r\n', '<p>d*(q,x) E A</p>\r\n', '<p>d(q,x) E A<br />\r\n&nbsp;</p>\r\n', '<p>d*(Q0,x) E A</p>\r\n', '<p>d(Q0,x) E A</p>\r\n', '2', 26, 3, '3'),
(2177, '<p>Languages of a automata is<br />\r\n&nbsp;</p>\r\n', '<p>If it is accepted by automata</p>\r\n', '<p>If it halts<br />\r\n&nbsp;</p>\r\n', '<p>If automata touch final state in its life time<br />\r\n&nbsp;</p>\r\n', '<p>All language are language of automata</p>\r\n', '2', 17, 3, '1'),
(2178, '<p>Language of finite automata is</p>\r\n', '<p>Type 0<br />\r\n&nbsp;</p>\r\n', '<p>Type 1<br />\r\n&nbsp;</p>\r\n', '<p>Type 2<br />\r\n&nbsp;</p>\r\n', '<p>Type 3</p>\r\n', '2', 14, 3, '4'),
(2179, '<p>Finite automata requires minimum _______ number of stacks.<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 12, 3, '2'),
(2180, '<p>Number of final state require to accept F in minimal finite automata.<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 14, 3, '4'),
(2181, '<p>Regular expression for all strings starts with ab and ends with bba is.<br />\r\n&nbsp;</p>\r\n', '<p>aba*b*bba<br />\r\n&nbsp;</p>\r\n', '<p>ab(ab)*bba<br />\r\n&nbsp;</p>\r\n', '<p>ab(a+b)*bba<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '2', 50, 3, '3'),
(2182, '<p>How many DFA&rsquo;s exits with two states over input alphabet {0,1} ?</p>\r\n', '<p>16</p>\r\n', '<p>26<br />\r\n&nbsp;</p>\r\n', '<p>32<br />\r\n&nbsp;</p>\r\n', '<p>64</p>\r\n', '3', 17, 3, '4'),
(2183, '<p>The basic limitation of finite automata is that<br />\r\n&nbsp;</p>\r\n', '<p>It can&rsquo;t remember arbitrary large amount of information.</p>\r\n', '<p>It sometimes recognize grammar that are not regular.</p>\r\n', '<p>It sometimes fails to recognize regular grammar.<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '3', 26, 3, '1'),
(2184, '<p>Number of states require to simulate a computer with memory capable of storing &lsquo;3&rsquo; words each of length &lsquo;8&rsquo;.<br />\r\n&nbsp;</p>\r\n', '<p>3 * 2^8</p>\r\n', '<p>2^(3*8)</p>\r\n', '<p>2^(3+8)<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 31, 3, '2'),
(2185, '<p>FSM with output capability can be used to add two given integer in binary representation. This is<br />\r\n&nbsp;</p>\r\n', '<p>True</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>May be true</p>\r\n', '<p>None of the above</p>\r\n', '3', 24, 3, '1'),
(2186, '<p>Which of the following options is correct?<br />\r\nStatement 1: Initial State of NFA is Initial State of DFA.<br />\r\nStatement 2: The final state of DFA will be every combination of final state of NFA.<br />\r\n&nbsp;</p>\r\n', '<p>Statement 1 is true and Statement 2 is true<br />\r\n&nbsp;</p>\r\n', '<p>Statement 1 is true and Statement 2 is false<br />\r\n&nbsp;</p>\r\n', '<p>Statement 1 can be true and Statement 2 is true</p>\r\n', '<p>Statement 1 is false and Statement 2 is also false</p>\r\n', '3', 27, 3, '1'),
(2187, '<p>Given Language: L= {ab U aba}*<br />\r\nIf X is the minimum number of states for a DFA and Y is the number of states to construct the NFA,<br />\r\n|X-Y|=?<br />\r\n&nbsp;</p>\r\n', '<p>2</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '3', 45, 3, '1'),
(2188, '<p>An automaton that presents output based on previous state or current input<br />\r\n&nbsp;</p>\r\n', '<p>Acceptor<br />\r\n&nbsp;</p>\r\n', '<p>Classifier<br />\r\n&nbsp;</p>\r\n', '<p>Transducer<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 26, 3, '3'),
(2189, '<p>If NFA of 6 states excluding the initial state is converted into DFA, maximum possible number of states for the DFA is ?<br />\r\n&nbsp;</p>\r\n', '<p>64<br />\r\n&nbsp;</p>\r\n', '<p>32</p>\r\n', '<p>128</p>\r\n', '<p>127</p>\r\n', '3', 28, 3, '3'),
(2190, '<p>NFA, in its name has &rsquo;non-deterministic&rsquo; because of&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>The result is undetermined<br />\r\n&nbsp;</p>\r\n', '<p>The choice of path is non-deterministic<br />\r\n&nbsp;</p>\r\n', '<p>The state to be transited next is non-deterministic<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '3', 23, 3, '2'),
(2191, '<p>Which of the following is correct proposition?<br />\r\nStatement 1: Non determinism is a generalization of Determinism.<br />\r\nStatement 2: Every DFA is automatically an NFA</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Statement 1 is correct because Statement 2 is correct<br />\r\nStatement 2 is correct because Statement 2 is correct<br />\r\nc) Statement 2 is false and Statement 1 is false<br />\r\nd) Statement 1 is false because Statement 2 is false</p>\r\n', '<p>Statement 2 is correct because Statement 2 is correct<br />\r\n&nbsp;</p>\r\n', '<p>Statement 2 is false and Statement 1 is false<br />\r\n&nbsp;</p>\r\n', '<p>Statement 1 is false because Statement 2 is false</p>\r\n', '3', 33, 3, '2'),
(2192, '<p>Given Language L= {x? {a, b}*|x contains aba as its substring}<br />\r\nFind the difference of transitions made in constructing a DFA and an equivalent NFA?<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>4</p>\r\n', '<p>cannot be determined</p>\r\n', '3', 30, 3, '1'),
(2193, '<p>The construction time for DFA from an equivalent NFA (m number of node)is</p>\r\n', '<p>O(m2)<br />\r\n&nbsp;</p>\r\n', '<p>O(2m)<br />\r\n&nbsp;</p>\r\n', '<p>O(m)</p>\r\n', '<p>O(log m)</p>\r\n', '3', 19, 3, '2'),
(2194, '<p>If n is the length of Input string and m is the number of nodes, the running time of DFA is x that of NFA.Find x?<br />\r\n&nbsp;</p>\r\n', '<p>1/m2<br />\r\n&nbsp;</p>\r\n', '<p>2m<br />\r\n&nbsp;</p>\r\n', '<p>1/m<br />\r\n&nbsp;</p>\r\n', '<p>log m</p>\r\n', '3', 24, 3, '1'),
(2195, '<p>If n is the length of Input string and m is the number of nodes, the running time of DFA is x that of NFA.Find x?<br />\r\n&nbsp;</p>\r\n', '<p>1/m2<br />\r\n&nbsp;</p>\r\n', '<p>2m</p>\r\n', '<p>1/m</p>\r\n', '<p>log m</p>\r\n', '3', 24, 3, '1'),
(2196, '<p>Which of the following option is correct?<br />\r\n&nbsp;</p>\r\n', '<p>NFA is slower to process and its representation uses more memory than DFA<br />\r\n&nbsp;</p>\r\n', '<p>DFA is faster to process and its representation uses less memory than NFA<br />\r\n&nbsp;</p>\r\n', '<p>NFA is slower to process and its representation uses less memory than DFA<br />\r\n&nbsp;</p>\r\n', '<p>DFA is slower to process and its representation uses less memory</p>\r\n', '3', 30, 3, '3'),
(2197, '<p>The number of tuples in an extended Non Deterministic Finite Automaton</p>\r\n', '<p>5<br />\r\n&nbsp;</p>\r\n', '<p>6<br />\r\n&nbsp;</p>\r\n', '<p>7</p>\r\n', '<p>4</p>\r\n', '3', 13, 3, '1'),
(2198, '<p>What is wrong in the given definition?<br />\r\nDef: ({q0, q1, q2}, {0,1}, d, q3, {q3})<br />\r\n&nbsp;</p>\r\n', '<p>The definition does not satisfy 5 Tuple definition of NFA.<br />\r\n&nbsp;</p>\r\n', '<p>There are no transition definition.<br />\r\n&nbsp;</p>\r\n', '<p>Initial and Final states do not belong to the Graph.<br />\r\n&nbsp;</p>\r\n', '<p>Initial and final states can&rsquo;t be same.</p>\r\n', '3', 20, 3, '3'),
(2199, '<p>If d is the transition function for a given NFA, then we define the d&rsquo; for the DFA accepting the same language would be:<br />\r\nNote: S is a subset of Q and a is a symbol.<br />\r\n&nbsp;</p>\r\n', '<p>d&rsquo; (S, a) =Up?s d (p, a)<br />\r\n&nbsp;</p>\r\n', '<p>d&rsquo; (S, a) =Up?s d (p, a)<br />\r\n&nbsp;</p>\r\n', '<p>d&rsquo; (S, a) =Up?s d(p)<br />\r\n&nbsp;</p>\r\n', '<p>d&rsquo; (S) =Up?s d(p)</p>\r\n', '3', 30, 3, '1'),
(2200, '<p>What is the relation between DFA and NFA on the basis of computational power?<br />\r\n&nbsp;</p>\r\n', '<p>DFA &gt; NFA<br />\r\n&nbsp;</p>\r\n', '<p>NFA &gt; DFA<br />\r\n&nbsp;</p>\r\n', '<p>Equal<br />\r\n&nbsp;</p>\r\n', '<p>Can&rsquo;t be said</p>\r\n', '3', 22, 3, '1'),
(2201, '<p>If a string S is accepted by a finite state automaton, S=s1s2s3&hellip;&hellip;sn where si?? and there exists a sequence of states r0, r1, r2&hellip;&hellip; rn such that d(r(i), si+1) =ri+1 for each 0, 1, &hellip;n-1, then r(n) is</p>\r\n', '<p>initial state</p>\r\n', '<p>transition symbol<br />\r\n&nbsp;</p>\r\n', '<p>accepting state<br />\r\n&nbsp;</p>\r\n', '<p>intermediate state</p>\r\n', '3', 30, 3, '3'),
(2202, '<p>Under which of the following operation, NFA is not closed?<br />\r\n&nbsp;</p>\r\n', '<p>Negation<br />\r\n&nbsp;</p>\r\n', '<p>Kleene</p>\r\n', '<p>Concatenation<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 15, 3, '4'),
(2203, '<p>It is less complex to prove the closure properties over regular languages using<br />\r\n&nbsp;</p>\r\n', '<p>NFA<br />\r\n&nbsp;</p>\r\n', '<p>DFA<br />\r\n&nbsp;</p>\r\n', '<p>PDA<br />\r\n&nbsp;</p>\r\n', '<p>Can&rsquo;t be said</p>\r\n', '4', 17, 3, '1'),
(2204, '<p>Which of the following is an application of Finite Automaton?<br />\r\n&nbsp;</p>\r\n', '<p>Compiler Design<br />\r\n&nbsp;</p>\r\n', '<p>Grammar Parsers<br />\r\n&nbsp;</p>\r\n', '<p>Text Search<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '4', 15, 3, '4'),
(2205, '<p>Regular sets are closed under union,concatenation and kleene closure.<br />\r\n&nbsp;</p>\r\n', '<p>True</p>\r\n', '<p>False</p>\r\n', '<p>Depends on regular set<br />\r\n&nbsp;</p>\r\n', '<p>Can&rsquo;t say</p>\r\n', '4', 16, 3, '1'),
(2206, '<p>Complement of a DFA can be obtained by<br />\r\n&nbsp;</p>\r\n', '<p>making starting state as final state.<br />\r\n&nbsp;</p>\r\n', '<p>no trival method.<br />\r\n&nbsp;</p>\r\n', '<p>making final states non-final and non-final to final</p>\r\n', '<p>make final as a starting state</p>\r\n', '4', 22, 3, '3'),
(2207, '<p>Complement of regular sets are _________ .<br />\r\n&nbsp;</p>\r\n', '<p>Regular<br />\r\n&nbsp;</p>\r\n', '<p>CFG<br />\r\n&nbsp;</p>\r\n', '<p>CSG<br />\r\n&nbsp;</p>\r\n', '<p>RE</p>\r\n', '4', 18, 3, '1'),
(2208, '<p>If L1 and L2 are regular sets then intersection of these two will be<br />\r\n&nbsp;</p>\r\n', '<p>Regular<br />\r\n&nbsp;</p>\r\n', '<p>Non Regular<br />\r\n&nbsp;</p>\r\n', '<p>Recursive<br />\r\n&nbsp;</p>\r\n', '<p>Non Recursive</p>\r\n', '4', 17, 3, '1'),
(2209, '<p>If L1 is regular L2 is unknown but L1-L2 is regular ,then L2 must be<br />\r\n&nbsp;</p>\r\n', '<p>Empty set<br />\r\n&nbsp;</p>\r\n', '<p>CFG<br />\r\n&nbsp;</p>\r\n', '<p>Decidable<br />\r\n&nbsp;</p>\r\n', '<p>Regular</p>\r\n', '4', 24, 3, '4'),
(2210, '<p>Reverse of a DFA can be formed by<br />\r\n&nbsp;</p>\r\n', '<p>using PDA<br />\r\n&nbsp;</p>\r\n', '<p>making final state as non-final<br />\r\n&nbsp;</p>\r\n', '<p>making final as starting state and starting state as final state<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 18, 3, '3'),
(2211, '<p>A ___________ is a substitution such that h(a) contains a string for each a.<br />\r\n&nbsp;</p>\r\n', '<p>Closure</p>\r\n', '<p>Interchange<br />\r\n&nbsp;</p>\r\n', '<p>Homomorphism<br />\r\n&nbsp;</p>\r\n', '<p>Inverse Homomorphism</p>\r\n', '4', 22, 3, '3');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(2212, '<p>Homomorphism of a regular set is _______&nbsp;</p>\r\n', '<p>Universal set<br />\r\n&nbsp;</p>\r\n', '<p>Null set<br />\r\n&nbsp;</p>\r\n', '<p>Regular set<br />\r\n&nbsp;</p>\r\n', '<p>Non regular set</p>\r\n', '4', 19, 3, '3'),
(2213, '<p>Which of the following is type 3 language ?</p>\r\n', '<p>Strings of 0&rsquo;s whose length is perfect square<br />\r\n&nbsp;</p>\r\n', '<p>Palindromes string<br />\r\n&nbsp;</p>\r\n', '<p>Strings of 0&rsquo;s having length prime number<br />\r\n&nbsp;</p>\r\n', '<p>String of odd number of 0&rsquo;s</p>\r\n', '4', 17, 3, '4'),
(2214, '<p>Complement of (a + b)* will be<br />\r\n&nbsp;</p>\r\n', '<p>phi</p>\r\n', '<p>null</p>\r\n', '<p>a<br />\r\n&nbsp;</p>\r\n', '<p>b</p>\r\n', '4', 18, 3, '1'),
(2215, '<p>Concatenation Operation refers to which of the following set operation<br />\r\n&nbsp;</p>\r\n', '<p>Union<br />\r\n&nbsp;</p>\r\n', '<p>Dot<br />\r\n&nbsp;</p>\r\n', '<p>Kleene<br />\r\n&nbsp;</p>\r\n', '<p>Two of the options are correct</p>\r\n', '4', 15, 3, '2'),
(2216, '<p>Concatenation of R with ? outputs:<br />\r\n&nbsp;</p>\r\n', '<p>R</p>\r\n', '<p>?<br />\r\n&nbsp;</p>\r\n', '<p>R.?<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 17, 3, '2'),
(2217, '<p>RR* can be expressed in which of the forms:<br />\r\n&nbsp;</p>\r\n', '<p>R+<br />\r\n&nbsp;</p>\r\n', '<p>R-<br />\r\n&nbsp;</p>\r\n', '<p>R+ U R-<br />\r\n&nbsp;</p>\r\n', '<p>R</p>\r\n', '4', 16, 3, '1'),
(2218, '<p>A finite automaton accepts which type of language:<br />\r\n&nbsp;</p>\r\n', '<p>Type 0<br />\r\n&nbsp;</p>\r\n', '<p>Type 1<br />\r\n&nbsp;</p>\r\n', '<p>Type 2<br />\r\n&nbsp;</p>\r\n', '<p>Type 3</p>\r\n', '4', 18, 3, '4'),
(2219, '<p>Which among the following are incorrect regular identities?<br />\r\n&nbsp;</p>\r\n', '<p>eR=R<br />\r\n&nbsp;</p>\r\n', '<p>e*=e<br />\r\n&nbsp;</p>\r\n', '<p>?*=eR?=R</p>\r\n', '<p>R?=R</p>\r\n', '4', 26, 3, '4'),
(2220, '<p>Arden&rsquo;s theorem is true for:<br />\r\n&nbsp;</p>\r\n', '<p>More than one initial states<br />\r\n&nbsp;</p>\r\n', '<p>Null transitions</p>\r\n', '<p>Non-null transitions<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 23, 3, '3'),
(2221, '<p>In order to represent a regular expression, the first step to create the transition diagram is:<br />\r\n&nbsp;</p>\r\n', '<p>Create the NFA using Null moves<br />\r\n&nbsp;</p>\r\n', '<p>Null moves are not acceptable, thus should not be used</p>\r\n', '<p>Predict the number of states to be used in order to construct the Regular expression<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned<br />\r\n&nbsp;</p>\r\n', '4', 27, 3, '1'),
(2222, '<p>The context free languages are closed under:<br />\r\n&nbsp;</p>\r\n', '<p>Intersection</p>\r\n', '<p>Complement<br />\r\n&nbsp;</p>\r\n', '<p>Kleene</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 20, 3, '3'),
(2223, '<p>Which of the following is incorrect?<br />\r\nThere exists algorithms to decide if:<br />\r\n&nbsp;</p>\r\n', '<p>String w is in CFL L<br />\r\n&nbsp;</p>\r\n', '<p>CFL L is empty<br />\r\n&nbsp;</p>\r\n', '<p>CFL L is infinite<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '5', 24, 3, '4'),
(2224, '<p>If the start symbol is one of those symbols which produce no terminal through any sequence, the CFL is said to be</p>\r\n', '<p>nullable<br />\r\n&nbsp;</p>\r\n', '<p>empty<br />\r\n&nbsp;</p>\r\n', '<p>eliminated</p>\r\n', '<p>none of the mentioned</p>\r\n', '5', 25, 3, '2'),
(2225, '<p>Using the pumping constant n, If there is a string in the language of length between _____ and ____ then the language is infite else not.<br />\r\n&nbsp;</p>\r\n', '<p>n, 2n-1<br />\r\n&nbsp;</p>\r\n', '<p>2n, n<br />\r\n&nbsp;</p>\r\n', '<p>n+1, 3n+6<br />\r\n&nbsp;</p>\r\n', '<p>0, n+1</p>\r\n', '5', 33, 3, '1'),
(2226, '<p>Which of the following is/are CFL not closed under?</p>\r\n', '<p>Reverse</p>\r\n', '<p>Homomorphism<br />\r\n&nbsp;</p>\r\n', '<p>Inverse Homomorphism</p>\r\n', '<p>All of the mentioned</p>\r\n', '5', 21, 3, '4'),
(2227, '<p>If L1 and L2 are context free languages, L1-L2 are context free:<br />\r\n&nbsp;</p>\r\n', '<p>always<br />\r\n&nbsp;</p>\r\n', '<p>sometimes<br />\r\n&nbsp;</p>\r\n', '<p>never</p>\r\n', '<p>none of the above</p>\r\n', '5', 18, 3, '3'),
(2228, '<p>The minimum number of states required to automate the following Regular Expression:<br />\r\n(1) *(01+10) (1) *<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>5</p>\r\n', '5', 33, 3, '1'),
(2229, '<p>Regular Expression denote precisely the ________ of Regular Language.<br />\r\n&nbsp;</p>\r\n', '<p>Class<br />\r\n&nbsp;</p>\r\n', '<p>Power Set<br />\r\n&nbsp;</p>\r\n', '<p>Super Set<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 23, 3, '1'),
(2230, '<p>Relate the following statement:<br />\r\nStatement: All sufficiently long words in a regular language can have a middle section of words repeated a number of times to produce a new word which also lies within the same language.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Turing Machine<br />\r\n&nbsp;</p>\r\n', '<p>Pumping Lemma<br />\r\n&nbsp;</p>\r\n', '<p>Arden&rsquo;s theorem<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 22, 3, '2'),
(2231, '<p>While applying Pumping lemma over a language, we consider a string w that belong to L and fragment it into _________ parts.</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>5<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>6</p>\r\n', '5', 17, 3, '3'),
(2232, '<p>If we select a string w such that w?L, and w=xyz. Which of the following portions cannot be an empty string?<br />\r\n&nbsp;</p>\r\n', '<p>x</p>\r\n', '<p>y<br />\r\n&nbsp;</p>\r\n', '<p>z</p>\r\n', '<p>all of the mentioned</p>\r\n', '5', 21, 3, '2'),
(2233, '<p>Let w= xyz and y refers to the middle portion and |y|&gt;0.What do we call the process of repeating y 0 or more times before checking that they still belong to the language L or not?<br />\r\n&nbsp;</p>\r\n', '<p>Generating<br />\r\n&nbsp;</p>\r\n', '<p>Pumping<br />\r\n&nbsp;</p>\r\n', '<p>Producing<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 33, 3, '2'),
(2234, '<p>There exists a language L. We define a string w such that w?L and w=xyz and |w| &gt;=n for some constant integer n.What can be the maximum length of the substring xy i.e. |xy|&lt;=?<br />\r\n&nbsp;</p>\r\n', '<p>n</p>\r\n', '<p>|y|<br />\r\n&nbsp;</p>\r\n', '<p>|x|</p>\r\n', '<p>none of the mentioned</p>\r\n', '5', 35, 3, '1'),
(2235, '<p>Fill in the blank in terms of p, where p is the maximum string length in L.<br />\r\nStatement: Finite languages trivially satisfy the pumping lemma by having n = ______.<br />\r\n&nbsp;</p>\r\n', '<p>p*1</p>\r\n', '<p>p+1<br />\r\n&nbsp;</p>\r\n', '<p>p-1<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 33, 3, '2'),
(2236, '<p>Answer in accordance to the third and last statement in pumping lemma:<br />\r\nFor all _______, xyiz ?<br />\r\n&nbsp;</p>\r\n', '<p>i&gt;0</p>\r\n', '<p>i&lt;0<br />\r\n&nbsp;</p>\r\n', '<p>i&lt;=0<br />\r\n&nbsp;</p>\r\n', '<p>i&gt;=0</p>\r\n', '6', 33, 3, '4'),
(2237, '<p>All the regular languages can have one or more of the following descriptions:<br />\r\ni) DFA ii) NFA iii) e-NFA iv) Regular Expressions<br />\r\nWhich of the following are correct?</p>\r\n', '<p>i, ii, iv<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, iii<br />\r\n&nbsp;</p>\r\n', '<p>i, iv<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, iii, iv</p>\r\n', '6', 25, 3, '4'),
(2238, '<p>Which of the technique can be used to prove that a language is non regular?</p>\r\n', '<p>Ardens theorem<br />\r\n&nbsp;</p>\r\n', '<p>Pumping Lemma<br />\r\n&nbsp;</p>\r\n', '<p>Ogden&rsquo;s Lemma<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 23, 3, '2'),
(2239, '<p>Which of the following are non regular?<br />\r\n&nbsp;</p>\r\n', '<p>The set of strings in {a,b}* with an even number of b&rsquo;s<br />\r\n&nbsp;</p>\r\n', '<p>The set of strings in {a, b, c}* where there is no c anywhere to the left of a<br />\r\n&nbsp;</p>\r\n', '<p>The set of strings in {0, 1}* that encode, in binary, an integer w that is a multiple of 3. Interpret the empty strings e as the number 0.<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 31, 3, '4'),
(2240, '<p>If L is DFA-regular, L&rsquo; is<br />\r\n&nbsp;</p>\r\n', '<p>Non regular<br />\r\n&nbsp;</p>\r\n', '<p>DFA-regular<br />\r\n&nbsp;</p>\r\n', '<p>Non-finite<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 15, 3, '2'),
(2241, '<p>Which of the following options is incorrect?<br />\r\n&nbsp;</p>\r\n', '<p>A language L is regular if and only if ~L has finite number of equivalent classes.<br />\r\n&nbsp;</p>\r\n', '<p>Let L be a regular language. If ~L has k equivalent classes, then any DFA that recognizes L must have atmost k states.<br />\r\n&nbsp;</p>\r\n', '<p>A language L is NFA-regular if and only if it is DFA-regular.</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 36, 3, '2'),
(2242, '<p>Myphill Nerode does the following:<br />\r\n&nbsp;</p>\r\n', '<p>Minimization of DFA<br />\r\n&nbsp;</p>\r\n', '<p>Tells us exactly when a language is regular<br />\r\n&nbsp;</p>\r\n', '<p>Both (a) and (b)<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 23, 3, '3'),
(2243, '<p>Which of the following are related to tree automaton?</p>\r\n', '<p>Myphill Nerode Theorem<br />\r\n&nbsp;</p>\r\n', '<p>State machine<br />\r\n&nbsp;</p>\r\n', '<p>Courcelle&rsquo;s Theorem</p>\r\n', '<p>All of the mentioned</p>\r\n', '6', 19, 3, '4'),
(2244, '<p>Given languages:<br />\r\ni) {anbn|n&gt;=0}<br />\r\nii)&lt;div&gt;n&lt;/div&gt;n<br />\r\niii) {w?{a,b}*| #a(w)=#b(w)}, # represents occurrences<br />\r\nWhich of the following is/are non regular?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i, iii</p>\r\n', '<p>i</p>\r\n', '<p>iii<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, iii</p>\r\n', '6', 55, 3, '4'),
(2245, '<p>Finite state machine are not able to recognize Palindromes because:<br />\r\n&nbsp;</p>\r\n', '<p>Finite automata cannot deterministically find the midpoint<br />\r\n&nbsp;</p>\r\n', '<p>Finite automata cannot remember arbitarily large amount of data<br />\r\n&nbsp;</p>\r\n', '<p>Even if the mid point is known, it cannot find whether the second half matches the first<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned<br />\r\n&nbsp;</p>\r\n', '6', 24, 3, '4'),
(2246, '<p>If L1, L2 are regular and op(L1, L2) is also regular, then L1 and L2 are said to be ____________ under an operation op.<br />\r\n&nbsp;</p>\r\n', '<p>open</p>\r\n', '<p>closed<br />\r\n&nbsp;</p>\r\n', '<p>decidable<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '6', 17, 3, '2'),
(2247, '<p>Suppose a regular language L is closed under the operation halving, then the result would be:<br />\r\n&nbsp;</p>\r\n', '<p>1/4 L will be regular<br />\r\n&nbsp;</p>\r\n', '<p>1/2 L will be regular<br />\r\n&nbsp;</p>\r\n', '<p>1/8 L will be regular<br />\r\n&nbsp;</p>\r\n', '<p>All&nbsp;of the mentioned</p>\r\n', '6', 30, 3, '4'),
(2248, '<p>If L1&#39; and L2&#39; are regular languages, then L1.L2 will be<br />\r\n&nbsp;</p>\r\n', '<p>regular<br />\r\n&nbsp;</p>\r\n', '<p>non regular<br />\r\n&nbsp;</p>\r\n', '<p>may be regular<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '6', 20, 3, '1'),
(2249, '<p>If L1 and L2&#39; are regular languages, L1 n (L2&#39; U L1&#39;)&rsquo; will be<br />\r\n&nbsp;</p>\r\n', '<p>regular<br />\r\n&nbsp;</p>\r\n', '<p>non regular<br />\r\n&nbsp;</p>\r\n', '<p>may be regular<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '7', 28, 3, '1'),
(2250, '<p>If A and B are regular languages, !(A&rsquo; U B&rsquo;) is:<br />\r\n&nbsp;</p>\r\n', '<p>regular<br />\r\n&nbsp;</p>\r\n', '<p>non regular<br />\r\n&nbsp;</p>\r\n', '<p>may be regular<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '7', 24, 3, '1'),
(2251, '<p>Which among the following are the boolean operations that under which regular languages are closed?<br />\r\n&nbsp;</p>\r\n', '<p>Union<br />\r\n&nbsp;</p>\r\n', '<p>Intersection<br />\r\n&nbsp;</p>\r\n', '<p>Complement<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 23, 3, '4'),
(2252, '<p>Suppose a language L1 has 2 states and L2 has 2 states. After using the cross product construction method,&nbsp;&nbsp; &nbsp;we have a machine M that accepts L1 n L2. The total number of states in M:<br />\r\n&nbsp;</p>\r\n', '<p>6</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>8</p>\r\n', '7', 13, 3, '2'),
(2253, '<p>If L is a regular language, then (L&rsquo;)&rsquo; U L will be :<br />\r\n&nbsp;</p>\r\n', '<p>L<br />\r\n&nbsp;</p>\r\n', '<p>L&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>f<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '7', 23, 3, '1'),
(2254, '<p>If L is a regular language, then (((L&rsquo;)r)&rsquo;)* is:<br />\r\n&nbsp;</p>\r\n', '<p>regular</p>\r\n', '<p>non regular<br />\r\n&nbsp;</p>\r\n', '<p>may be regular<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '7', 30, 3, '1'),
(2255, '<p>Which among the following is the closure property of a regular language?<br />\r\n&nbsp;</p>\r\n', '<p>Emptiness<br />\r\n&nbsp;</p>\r\n', '<p>Universality</p>\r\n', '<p>Membership</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 20, 3, '4'),
(2256, '<p>Which of the following are the models equivalent to Turing machine?</p>\r\n', '<p>Multi tape turing machine</p>\r\n', '<p>Multi track turing machine<br />\r\n&nbsp;</p>\r\n', '<p>Register machine</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 18, 3, '4'),
(2257, '<p>Which among the following is incorrect for o-machines?<br />\r\n&nbsp;</p>\r\n', '<p>Oracle Turing machines<br />\r\n&nbsp;</p>\r\n', '<p>Can be used to study decision problems<br />\r\n&nbsp;</p>\r\n', '<p>Visualizes Turing machine with a black box which is able to decide cerain decion problems in one operation<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 25, 3, '4'),
(2258, '<p>Which of the following does not have left recursions?<br />\r\n&nbsp;</p>\r\n', '<p>Chomsky Normal Form<br />\r\n&nbsp;</p>\r\n', '<p>Greibach Normal Form<br />\r\n&nbsp;</p>\r\n', '<p>Backus Naur Form<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 24, 3, '2'),
(2259, '<p>Every grammar in Chomsky Normal Form is:<br />\r\n&nbsp;</p>\r\n', '<p>Regular<br />\r\n&nbsp;</p>\r\n', '<p>context sensitive<br />\r\n&nbsp;</p>\r\n', '<p>context free<br />\r\n&nbsp;</p>\r\n', '<p>all of the mentioned</p>\r\n', '8', 20, 3, '3'),
(2260, '<p>Which of the production rule can be accepted by Chomsky grammar?<br />\r\n&nbsp;</p>\r\n', '<p>A-&gt;BC<br />\r\n&nbsp;</p>\r\n', '<p>A-&gt;a<br />\r\n&nbsp;</p>\r\n', '<p>S-&gt;e<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '8', 40, 3, '4'),
(2261, '<p>Reverse of (0+1)* will be</p>\r\n', '<p>Phi<br />\r\n&nbsp;</p>\r\n', '<p>Null</p>\r\n', '<p>(0+1)*</p>\r\n', '<p>(0+1)</p>\r\n', '8', 28, 3, '3'),
(2262, '<p>Simplify the following regular expression:<br />\r\ne+1*(011) *(1*(011) *) *<br />\r\n&nbsp;</p>\r\n', '<p>(1+011) *<br />\r\n&nbsp;</p>\r\n', '<p>(1*(011) *)</p>\r\n', '<p>(1+(011) *) *<br />\r\n&nbsp;</p>\r\n', '<p>(1011) *</p>\r\n', '8', 36, 3, '1'),
(2263, '<p>Complement of a ^ nb ^ m where n &gt;= 4 and m &lt;= 3 is example of a) Type 0 b) Type 1 c) Type 2 d) Type 3 [expand title=&quot;View Answer&quot;] Answer:d Explanation: It is a regular expression. [/expand] 14. a ^ nb ^ m where n &gt;= 1, m &gt;= 1, nm &gt;= 3 is example of<br />\r\n&nbsp;</p>\r\n', '<p>Type 0</p>\r\n', '<p>Type 1<br />\r\n&nbsp;</p>\r\n', '<p>Type 2<br />\r\n&nbsp;</p>\r\n', '<p>Type 3</p>\r\n', '8', 55, 3, '4'),
(2264, '<p>d(A,1) = B, d(A,0) =A<br />\r\n? (B, (0,1)) =C<br />\r\nd(C,0) = A (Initial state =A)<br />\r\nString=&rdquo;011001&rdquo; is transit at which of the states?</p>\r\n', '<p>A</p>\r\n', '<p>C<br />\r\n&nbsp;</p>\r\n', '<p>B<br />\r\n&nbsp;</p>\r\n', '<p>Invalid String</p>\r\n', '8', 60, 3, '1'),
(2265, '<p>What is the output for the given language?<br />\r\nLanguage: A set of strings over ?= {a, b} is taken as input and it prints 1 as an output &ldquo;for every occurrence of a, b as its substring. (INPUT: abaaab)<br />\r\n&nbsp;</p>\r\n', '<p>0010001<br />\r\n&nbsp;</p>\r\n', '<p>0101010<br />\r\n&nbsp;</p>\r\n', '<p>0111010</p>\r\n', '<p>0010000</p>\r\n', '8', 33, 3, '1'),
(2266, '<p>The O/P of Moore machine can be represented in the following format:<br />\r\n&nbsp;</p>\r\n', '<p>Op(t)=d(Op(t))<br />\r\n&nbsp;</p>\r\n', '<p>Op(t)=d(Op(t)i(t))<br />\r\n&nbsp;</p>\r\n', '<p>Op(t): ?<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 38, 3, '1'),
(2267, '<p>Given L= {X??*= {a, b} |x has equal number of a, s and b&rsquo;s}.<br />\r\nWhich of the following property satisfy the regularity of the given language?</p>\r\n', '<p>Regularity is dependent upon the length of the string<br />\r\n&nbsp;</p>\r\n', '<p>Regularity is not dependent upon the length of the string<br />\r\n&nbsp;</p>\r\n', '<p>Can&rsquo;t be said for a particular string of a language<br />\r\n&nbsp;</p>\r\n', '<p>It may depend on the length of the string</p>\r\n', '8', 33, 3, '2'),
(2268, '<p>A collection of lines that connects several devices is called ..............</p>\r\n', '<p>bus</p>\r\n', '<p>peripheral connection wires</p>\r\n', '<p>Both a and b</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>internal wires</p>\r\n', '1', 20, 8, '1'),
(2269, '<p>A complete microcomputer system consist of ...........</p>\r\n', '<p>microprocessor</p>\r\n', '<p>memory</p>\r\n', '<p>peripheral equipment</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '1', 21, 8, '4'),
(2270, '<p>PC Program Counter is also called ...................</p>\r\n', '<p>instruction pointer</p>\r\n', '<p>memory pointer</p>\r\n', '<p>data counter</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>file pointer</p>\r\n', '1', 23, 8, '1'),
(2271, '<p>In a single byte how many bits will be there?</p>\r\n', '<p>8</p>\r\n', '<p>16</p>\r\n', '<p>4</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>32</p>\r\n', '1', 15, 8, '1'),
(2272, '<p>CPU does not perform the operation ..................</p>\r\n', '<p>data transfer</p>\r\n', '<p>logic operation</p>\r\n', '<p>arithmetic operation</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '1', 18, 8, '1'),
(2273, '<p>The access time of memory is ............... the time required for performing any single CPU operation.</p>\r\n', '<p>Longer than</p>\r\n', '<p>Shorter than</p>\r\n', '<p>Negligible than</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Same as</p>\r\n', '1', 18, 8, '1'),
(2274, '<p>Memory address refers to the successive memory words and the machine is called as ............</p>\r\n', '<p>word addressable</p>\r\n', '<p>byte addressable</p>\r\n', '<p>bit addressable</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Terra byte addressable</p>\r\n', '1', 21, 8, '1'),
(2275, '<p>A microprogram written as string of 0&#39;s and 1&#39;s is a .............</p>\r\n', '<p>Symbolic microinstruction</p>\r\n', '<p>binary microinstruction</p>\r\n', '<p>symbolic microinstruction</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>binary micro-program</p>\r\n', '1', 23, 8, '4'),
(2276, '<p>A pipeline is like ....................</p>\r\n', '<p>an automobile assembly line</p>\r\n', '<p>house pipeline</p>\r\n', '<p>both a and b</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a gas line</p>\r\n', '1', 24, 8, '1'),
(2277, '<p>Data hazards occur when .....................</p>\r\n', '<p>Greater performance loss</p>\r\n', '<p>Pipeline changes the order of read/write access to operands</p>\r\n', '<p>Some functional unit is not fully pipelined</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Machine size is limited</p>\r\n', '1', 25, 8, '2'),
(2278, '<p>To convert octal code to binary code which of the following digital functions should be used?</p>\r\n', '<p>Decoder<br />\r\n&nbsp;</p>\r\n', '<p>Encoder<br />\r\n&nbsp;</p>\r\n', '<p>Multiplexer<br />\r\n&nbsp;</p>\r\n', '<p>Demultiplexer</p>\r\n', '1', 18, 8, '1'),
(2279, '<p>A full-adder is simply a connection of two half-adders joined by a,</p>\r\n', '<p>AND gate<br />\r\n&nbsp;</p>\r\n', '<p>OR gate<br />\r\n&nbsp;</p>\r\n', '<p>NAND gate<br />\r\n&nbsp;</p>\r\n', '<p>NOR gate</p>\r\n', '1', 20, 8, '2'),
(2280, '<p>The correspondence between the main memory blocks and those in the cache is specified by a</p>\r\n', '<p>Miss penalty</p>\r\n', '<p>Replacement algorithms</p>\r\n', '<p>Hit rate</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Mapping functions</p>\r\n', '1', 18, 8, '4'),
(2281, '<p>The number of 256*4 RAM chips required to construct 2KB CACHE is</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>16</p>\r\n', '1', 23, 8, '4'),
(2282, '<p>The set of physical addresses is called</p>\r\n', '<p>Disk Space<br />\r\n&nbsp;</p>\r\n', '<p>Address Space<br />\r\n&nbsp;</p>\r\n', '<p>Pages<br />\r\n&nbsp;</p>\r\n', '<p>Frames</p>\r\n', '1', 15, 8, '2'),
(2283, '<p>What is the name of device that is allowed to initiate data transfer on the bus?</p>\r\n', '<p>Bus Master<br />\r\n&nbsp;</p>\r\n', '<p>Bus Arbitration<br />\r\n&nbsp;</p>\r\n', '<p>Bus Cycle<br />\r\n&nbsp;</p>\r\n', '<p>Bus Request</p>\r\n', '1', 16, 8, '1'),
(2284, '<p>The DMA transfer technique where transfer of one word data at a time is called</p>\r\n', '<p>Cycle stealing<br />\r\n&nbsp;</p>\r\n', '<p>Memory stealing<br />\r\n&nbsp;</p>\r\n', '<p>Hand-shaking<br />\r\n&nbsp;</p>\r\n', '<p>Inter-leaving</p>\r\n', '1', 19, 8, '1'),
(2285, '<p>What interface is used to connect the processor to I/O devices that require transmission of data one bit at a time?</p>\r\n', '<p>Parallel<br />\r\n&nbsp;</p>\r\n', '<p>Serial<br />\r\n&nbsp;</p>\r\n', '<p>Output<br />\r\n&nbsp;</p>\r\n', '<p>Input</p>\r\n', '1', 21, 8, '2'),
(2286, '<p>What are the building blocks of combinational circuits?</p>\r\n', '<p>Flip-flops<br />\r\n&nbsp;</p>\r\n', '<p>Logic gates<br />\r\n&nbsp;</p>\r\n', '<p>Latches<br />\r\n&nbsp;</p>\r\n', '<p>Registers</p>\r\n', '1', 18, 8, '2'),
(2287, '<p>The transfer of new information into the register is called</p>\r\n', '<p>Execution<br />\r\n&nbsp;</p>\r\n', '<p>Loading<br />\r\n&nbsp;</p>\r\n', '<p>Shifting<br />\r\n&nbsp;</p>\r\n', '<p>Configuring</p>\r\n', '1', 21, 8, '2'),
(2288, '<p>For two variables, n=2 , the number of possible Boolean functions is</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>16<br />\r\n&nbsp;</p>\r\n', '<p>12</p>\r\n', '2', 22, 8, '1'),
(2289, '<p>The one major advantage of CMOS is its</p>\r\n', '<p>Low propagation delay<br />\r\n&nbsp;</p>\r\n', '<p>High propagation delay<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Very low propagation delay<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Very high propagation delay</p>\r\n', '2', 23, 8, '1'),
(2290, '<p>64K memory contains how many words of 8 bits each?<br />\r\n&nbsp;</p>\r\n', '<p>65,536<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>64,536<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>65,436<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>65,546</p>\r\n', '2', 24, 8, '1'),
(2291, '<p>The simplest way to determine cache locations in which to store memory blocks is the,<br />\r\n&nbsp;</p>\r\n', '<p>Associative Mapping technique<br />\r\n&nbsp;</p>\r\n', '<p>Direct Mapping technique<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Set-Associative Mapping technique<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Indirect Mapping technique</p>\r\n', '2', 23, 8, '2'),
(2292, '<p>The sum of -6 and -13 using 2&rsquo;s complement addition is</p>\r\n', '<p>11100011<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>11110011<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>11001100<br />\r\n&nbsp;</p>\r\n', '<p>11101101</p>\r\n', '2', 30, 8, '4'),
(2293, '<p>Which one of the following CPU registers holds the address of the instructions (instructions in the program stored in memory) to be executed next?</p>\r\n', '<p>MAR (Memory address register)<br />\r\n&nbsp;</p>\r\n', '<p><br />\r\nMBR (Memory Buffer Register)<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>AC (Accumulator)<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>PC (Program Counter)</p>\r\n', '2', 24, 8, '4'),
(2294, '<p>What are the major components of a CPU?</p>\r\n', '<p>Control Unit, Register Set, Arithmetic Logic Unit<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Control Unit, Memory Unit, Arithmetic Logic Unit<br />\r\n&nbsp;</p>\r\n', '<p>Memory Unit, Arithmetic Logic Unit, Auxiliary Memory<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Register Set, Control Unit, Memory Unit</p>\r\n', '2', 23, 8, '1'),
(2295, '<p>Given the characteristic table of a JK flip-flop, find the missing output value.<br />\r\nJ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; K&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q(t+1)<br />\r\n0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q(t)<br />\r\n0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0<br />\r\n1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1<br />\r\n1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ---<br />\r\n&nbsp;</p>\r\n', '<p>Q(t)<br />\r\n&nbsp;</p>\r\n', '<p>Q&rsquo;(t+1)<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Q&rsquo;(t)</p>\r\n', '2', 125, 8, '4'),
(2296, '<p>What does T stands for in T flip-flop?</p>\r\n', '<p>Top<br />\r\n&nbsp;</p>\r\n', '<p>Type<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Toggle<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Tickle</p>\r\n', '2', 35, 8, '3'),
(2297, '<p>What is Q, when S = 1 and R = 1 for SR flip-flop?<br />\r\n&nbsp;</p>\r\n', '<p>No Change<br />\r\n&nbsp;</p>\r\n', '<p>Clear to 0<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Set to 1<br />\r\n&nbsp;</p>\r\n', '<p>Indeterminate</p>\r\n', '2', 35, 8, '4'),
(2298, '<p>The time that elapses between the initiation of an operation and completion of that operation is called.....</p>\r\n', '<p>throughput</p>\r\n', '<p>memory response time</p>\r\n', '<p>memory access time</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>execution time</p>\r\n', '2', 28, 8, '3'),
(2299, '<p>Interrupts which are initiated by an instruction are ............</p>\r\n', '<p>internal<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>external</p>\r\n', '<p>hardware</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>software</p>\r\n', '2', 25, 8, '2'),
(2300, '<p>A semiconductor memory constructed using bipolar transistors or MOS transistor stores information in the form of a ......................</p>\r\n', '<p>Flip-flop voltage levels</p>\r\n', '<p>bit</p>\r\n', '<p>byte</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>opcodes values</p>\r\n', '2', 23, 8, '1'),
(2301, '<p>A simple way of performing I/O tasks is to use a method known as ......................</p>\r\n', '<p>program-controlled I/O</p>\r\n', '<p>program-controlled input&nbsp;</p>\r\n', '<p>program-controlled output</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>I/O operation</p>\r\n', '2', 25, 8, '1'),
(2302, '<p>Memory access in RISC architecture is limited to instructions ........</p>\r\n', '<p>CALL and RET</p>\r\n', '<p>PUSH and POP</p>\r\n', '<p>STA and LDA</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MOV and JMP&nbsp;</p>\r\n', '2', 28, 8, '3'),
(2303, '<p>Striking key stores the corresponding character code in a 8-bit buffer register associated with the keyboard. This register is called as ........................</p>\r\n', '<p>DATAINOUT</p>\r\n', '<p>DATAOUT</p>\r\n', '<p>DATAIN</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both A and B</p>\r\n', '2', 23, 8, '3'),
(2304, '<p>When the character is transferred to the processor, status control flag SIN is automatically cleared to ............................</p>\r\n', '<p>zero</p>\r\n', '<p>one</p>\r\n', '<p>two</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>yes</p>\r\n', '2', 26, 8, '1'),
(2305, '<p>A microprogram written as string of 0&#39;s and 1&#39;s is a ...</p>\r\n', '<p>symbolic micro-instruction</p>\r\n', '<p>binary micro-instruction</p>\r\n', '<p>symbolic micro-instruction</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>binary microprogram</p>\r\n', '2', 23, 8, '4'),
(2306, '<p>An exception conditions in a computer system by an event external to the CPU is called .........</p>\r\n', '<p>Interrupt</p>\r\n', '<p>halt</p>\r\n', '<p>wait</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>process</p>\r\n', '2', 30, 8, '1'),
(2307, '<p>When the CPU detects an interrupt, it then saves its ...................</p>\r\n', '<p>Previous state</p>\r\n', '<p>Next state</p>\r\n', '<p>Current state</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both A and B</p>\r\n', '2', 33, 8, '3'),
(2308, '<p>In which type of flip-flop the indeterminate condition of the SR flip-flop (when S=R=1) is eliminated?<br />\r\n&nbsp;</p>\r\n', '<p>Edge-triggered flip-flop<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>JK flip-flop<br />\r\n&nbsp;</p>\r\n', '<p>D flip-flop<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>T flip-flop</p>\r\n', '3', 32, 8, '2'),
(2309, '<p>The bulk of the binary information in a digital computer is stored in memory, but all computations are done in</p>\r\n', '<p>Timing Control<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Memory Registers<br />\r\n&nbsp;</p>\r\n', '<p>Processor Registers<br />\r\n&nbsp;</p>\r\n', '<p>Program Control</p>\r\n', '3', 27, 8, '3'),
(2310, '<p>Information transfer from one register to another is designated in symbolic form by means of<br />\r\n&nbsp;</p>\r\n', '<p>Control Function<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Op Code<br />\r\n&nbsp;</p>\r\n', '<p>Registers<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Replacement Operator</p>\r\n', '3', 24, 8, '4'),
(2311, '<p>The registers found in the processor unit are<br />\r\n&nbsp;</p>\r\n', '<p>Operational registers<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Memory registers<br />\r\n&nbsp;</p>\r\n', '<p>Storage registers<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Binary registers</p>\r\n', '3', 23, 8, '1'),
(2312, '<p>Techniques that automatically move program and data blocks into the physical main memory when they are required for execution are called<br />\r\n&nbsp;</p>\r\n', '<p>Associative-Mapping techniques<br />\r\n&nbsp;</p>\r\n', '<p>Main Memory techniques<br />\r\n&nbsp;</p>\r\n', '<p>Virtual Memory techniques<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Cache Memory techniques</p>\r\n', '3', 32, 8, '3'),
(2313, '<p>What digit is added to the Excess-3 code generation?<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '3', 40, 8, '1'),
(2314, '<p>The processor, ---------- and I/O Devices are interconnected by means of a common bus.<br />\r\n&nbsp;</p>\r\n', '<p>Cache Memory<br />\r\n&nbsp;</p>\r\n', '<p>Auxiliary Memory<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Virtual Memory<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Main Memory</p>\r\n', '3', 28, 8, '1'),
(2315, '<p>System Software usually includes a program called a --------, which helps the programmer find errors in a program.<br />\r\n&nbsp;</p>\r\n', '<p>Write Buffer<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Read Buffer<br />\r\n&nbsp;</p>\r\n', '<p>Debugger<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Both (a) and (c) above</p>\r\n', '3', 31, 8, '3'),
(2316, '<p>To convert octal code to binary code which of the following digital functions should be used?<br />\r\n&nbsp;</p>\r\n', '<p>Decoder<br />\r\n&nbsp;</p>\r\n', '<p>Encoder<br />\r\n&nbsp;</p>\r\n', '<p>Multiplexer<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Demultiplexer</p>\r\n', '3', 29, 8, '1'),
(2317, '<p>A full-adder is simply a connection of two half-adders joined by</p>\r\n', '<p>AND gate<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>OR gate<br />\r\n&nbsp;</p>\r\n', '<p>NAND gate<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>NOR gate</p>\r\n', '3', 30, 8, '2'),
(2318, '<p>A combinational circuit that converts binary information from n input lines to a maximum of&nbsp; unique output lines is,<br />\r\n&nbsp;</p>\r\n', '<p>Decoder<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Encoder<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Full-adder<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Full-subtractor</p>\r\n', '4', 25, 8, '1'),
(2319, '<p>The correspondence between the main memory blocks and those in the cache is specified by</p>\r\n', '<p>Mapping function<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Replacement algorithm<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Hit rate<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Miss penalty</p>\r\n', '4', 28, 8, '1'),
(2320, '<p>The CPU nearly delays its operation for one memory cycle, to allow direct memory I/O transfer. This process is called,<br />\r\n&nbsp;</p>\r\n', '<p>Burst transfer<br />\r\n&nbsp;</p>\r\n', '<p>Cycle waiting<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Cycle stealing<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Cycle interrupting</p>\r\n', '4', 29, 8, '3'),
(2321, '<p>The control condition is terminated with<br />\r\n&nbsp;</p>\r\n', '<p>Comma<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Semicolon<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Colon<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Hash</p>\r\n', '4', 23, 8, '3'),
(2322, '<p>What are the missing values in the truth table of a half-adder given below?<br />\r\nx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S<br />\r\n0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --<br />\r\n0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1<br />\r\n1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1<br />\r\n1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0<br />\r\n&nbsp;</p>\r\n', '<p>x<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>y<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '4', 130, 8, '3'),
(2323, '<p>What are the building blocks of combinational circuits?<br />\r\n&nbsp;</p>\r\n', '<p>Flip-flops<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Logical gates<br />\r\n&nbsp;</p>\r\n', '<p>Latches<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Registers</p>\r\n', '4', 27, 8, '2'),
(2324, '<p>x + xy = x is called,<br />\r\n&nbsp;</p>\r\n', '<p>Commutative Law<br />\r\n&nbsp;</p>\r\n', '<p>Associative Law<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Distributive Law<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Absorption Law</p>\r\n', '4', 41, 8, '4'),
(2325, '<p>What is BCO equivalent of 011111000?<br />\r\n&nbsp;</p>\r\n', '<p>370<br />\r\n&nbsp;</p>\r\n', '<p>307<br />\r\n&nbsp;</p>\r\n', '<p>703<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>730</p>\r\n', '4', 28, 8, '1'),
(2326, '<p>Boolean functions expressed as a --------- of minterms or ---------- of maxterms are said to be in a canonical form.<br />\r\n&nbsp;</p>\r\n', '<p>Product, Sum<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Sum, Product<br />\r\n&nbsp;</p>\r\n', '<p>Subtract, Divide<br />\r\n&nbsp;</p>\r\n', '<p>Divide, Subtract</p>\r\n', '4', 32, 8, '2'),
(2327, '<p>Which of the following modes are used to handle data transfer to and from peripherals?<br />\r\n&nbsp;</p>\r\n', '<p>Programmed I/O<br />\r\n&nbsp;</p>\r\n', '<p>Interrupted-initiated I/O<br />\r\n&nbsp;</p>\r\n', '<p>Direct memory access<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Programmed I/O, Interrupted-initiated I/O, Direct memory access</p>\r\n', '4', 33, 8, '4'),
(2328, '<p>An exception condition in a computer system caused by an event external to the CPU is called ........</p>\r\n', '<p>Interrupt</p>\r\n', '<p>Halt</p>\r\n', '<p>Wait</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Process</p>\r\n', '4', 22, 8, '1'),
(2329, '<p>When the CPU detects an interrupt, it then saves its .............</p>\r\n', '<p>Previous State</p>\r\n', '<p>Next State</p>\r\n', '<p>Current State</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both A and B</p>\r\n', '4', 18, 8, '3'),
(2330, '<p>A computer program that converts an entire program into machine language at one time is called</p>\r\n', '<p>interpreter</p>\r\n', '<p>simulator</p>\r\n', '<p>compiler</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>commander</p>\r\n', '4', 25, 8, '3'),
(2331, '<p>A microprogram is sequencer perform the operation...</p>\r\n', '<p>read</p>\r\n', '<p>write</p>\r\n', '<p>read and write</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>read and execute</p>\r\n', '4', 22, 8, '4'),
(2332, '<p>The unit which decodes and translates each instruction and generates the necessary enable signals for ALU and other units is called ..</p>\r\n', '<p>arithmetic unit</p>\r\n', '<p>logical unit</p>\r\n', '<p>control unit</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>CPU</p>\r\n', '4', 26, 8, '3'),
(2333, '<p>State whether the following statement is True or False for cache memory.</p>\r\n\r\n<p>i) Cache memories are high-speed buffers which are inserted between the processors and main memory.</p>\r\n\r\n<p>ii) They can also be inserted between main memory and mass storage.</p>\r\n\r\n<p>iii) It can be used as secondary memory.</p>\r\n', '<p>i- True, ii- False, iii-True</p>\r\n', '<p>i- False, ii- True, iii-True</p>\r\n', '<p>i-True, ii-True, iii-False</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i- False, ii- False, iii-True</p>\r\n', '4', 27, 8, '3'),
(2334, '<p>The channel which handles the multiple requests and multiplexes the data transfers from these devices a byte at a time is known as .....</p>\r\n', '<p>multiplexor channel</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>the selector channel</p>\r\n', '<p>block multiplex channel</p>\r\n', '<p>both A and C</p>\r\n', '4', 24, 8, '1'),
(2335, '<p>The address mapping is done, when the program is initially loaded is called ......</p>\r\n', '<p>dynamic relocation</p>\r\n', '<p>relocation</p>\r\n', '<p>static relocation</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>dynamic as well as static relocation</p>\r\n', '4', 25, 8, '3'),
(2336, '<p>State whether the following statement is True or False for PCI bus.</p>\r\n\r\n<p>i) The PCI bus tuns at 33 MHZ and can transfer 32-bits of data(four bytes) every clock tick.</p>\r\n\r\n<p>ii) The PCI interface chip may support the video adapter, the EIDE disk controller chip and may be two external adapter cards.</p>\r\n\r\n<p>iii) PCI bus deliver the different throughout only on a 32-bit interface that other parts of the machine deliver through a 64-bit path.</p>\r\n', '<p>i- True, ii- False, iii-True</p>\r\n', '<p>i- False, ii- True, iii-True</p>\r\n', '<p>i-True, ii-True, iii-False</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i- False, ii- False, iii-True</p>\r\n', '4', 31, 8, '3'),
(2337, '<p>The I/O processor has a direct access to ....................... and contains a number of independent data channels.</p>\r\n', '<p>main memory</p>\r\n', '<p>secondary memory</p>\r\n', '<p>cache</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>flash memory</p>\r\n', '4', 23, 8, '1'),
(2338, '<p>The computer code for the interchange of information between terminal is ..</p>\r\n', '<p>ASCII</p>\r\n', '<p>BCD</p>\r\n', '<p>EBCDIC</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 23, 8, '1'),
(2339, '<p>SIMD stands for ....</p>\r\n', '<p>Single Instruction Stream Over Multiple Data Streams</p>\r\n', '<p>Single Instruction Stream Over Minimum Data Streams</p>\r\n', '<p>Single Instruction Stream Over Media Data Streams</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Multiple Instruction Streams and Single Data Stream</p>\r\n', '5', 29, 8, '1'),
(2340, '<p>The NOR gate is complement of ..</p>\r\n', '<p>AND gate&nbsp;</p>\r\n', '<p>OR gate</p>\r\n', '<p>NAND gate</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>NOT gate</p>\r\n', '5', 20, 8, '2'),
(2341, '<p>A .............. is a digital circuit that performs the inverse operation of decodes.</p>\r\n', '<p>multiplexer</p>\r\n', '<p>adder</p>\r\n', '<p>subtractor</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>encoder</p>\r\n', '5', 18, 8, '4'),
(2342, '<p>Pipelining increases the CPU instruction ..........</p>\r\n', '<p>efficiency</p>\r\n', '<p>latency</p>\r\n', '<p>throughput</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both a and c</p>\r\n', '5', 17, 8, '3'),
(2343, '<p>The ............... is a program whose function is to start the computer software operating when power is turned on.&nbsp;</p>\r\n', '<p>Bootstrap loader</p>\r\n', '<p>Multi programming</p>\r\n', '<p>Loader</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 18, 8, '1'),
(2344, '<p>.................. is concerned with the way the hardware components operate to form computer system.</p>\r\n', '<p>Computer organization</p>\r\n', '<p>Computer design</p>\r\n', '<p>Computer architecture</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Computer implementation</p>\r\n', '5', 15, 8, '1'),
(2345, '<p>Devices that are used primarily to transport data between the processor and the user are known as ....</p>\r\n', '<p>Networking devices</p>\r\n', '<p>Basic storage devices</p>\r\n', '<p>Data presentation device</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Data transfer device</p>\r\n', '5', 24, 8, '3'),
(2346, '<p>Which statement is valid about computer program?</p>\r\n', '<p>It is understood by a computer</p>\r\n', '<p>It is understood by programmer</p>\r\n', '<p>It is understood to use</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 23, 8, '4'),
(2347, '<p>Access time is&nbsp;</p>\r\n', '<p>Time to position the head over proper track</p>\r\n', '<p>Time to position the head over proper sector</p>\r\n', '<p>Time to position the head over proper cylinder</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '5', 17, 8, '1'),
(2348, '<p>Memory unit that communicates directly with the CPU is called the ...............</p>\r\n', '<p>Main memory</p>\r\n', '<p>Secondary memory</p>\r\n', '<p>Auxiliary memory</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Register</p>\r\n', '5', 20, 8, '1'),
(2349, '<p>CISC stands for ................</p>\r\n', '<p>Common Instruction Set Computers</p>\r\n', '<p>Complex Instruction Set Compilers</p>\r\n', '<p>Complex Instruction Set Computers</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Compound Instruction Set Computers</p>\r\n', '5', 15, 8, '3'),
(2350, '<p>The communication between central system and the outside environment is done by&nbsp;</p>\r\n', '<p>Input-output subsystem</p>\r\n', '<p>Control system</p>\r\n', '<p>Memory system</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Logic system</p>\r\n', '5', 18, 8, '1'),
(2351, '<p>The register that keeps track of the instructions in the program stored in memory is ..</p>\r\n', '<p>Control register</p>\r\n', '<p>Program counter</p>\r\n', '<p>Status register</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Direct register</p>\r\n', '5', 23, 8, '2'),
(2352, '<p>................ is a small very speed register file maintained by the instruction fetch segment of the pipeline.</p>\r\n', '<p>Branch Target Buffer</p>\r\n', '<p>Loop buffer</p>\r\n', '<p>Branch loop buffer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Target register</p>\r\n', '5', 24, 8, '2'),
(2353, '<p>In case of only one memory operand, when a second operand is needed, as in the case of an Add instruction, we use processor register called .........</p>\r\n', '<p>accumulator</p>\r\n', '<p>register</p>\r\n', '<p>operand</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>source</p>\r\n', '6', 20, 8, '1'),
(2354, '<p>Data transfer between the main memory and the CPU register takes place through two registers namely .......</p>\r\n', '<p>general purpose register and MDR</p>\r\n', '<p>accumulator and program counter</p>\r\n', '<p>MAR and MDR</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MAR and Accumulator</p>\r\n', '6', 28, 8, '3'),
(2355, '<p>The pipeline operates on a stream of instruction by overlapping the phases of instruction cycle is ........</p>\r\n', '<p>Arithmetic pipeline</p>\r\n', '<p>Instruction pipeline</p>\r\n', '<p>Parallel pipeline</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Multiple pipeline</p>\r\n', '6', 23, 8, '2'),
(2356, '<p>The instruction that cause transfer of data from one location to another without changing the binary information content are ...</p>\r\n', '<p>Data transfer instruction</p>\r\n', '<p>Data manipulation instruction</p>\r\n', '<p>Register transfer instruction</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Program control instruction</p>\r\n', '6', 25, 8, '1'),
(2357, '<p>Which of the following representation requires the least number of bits to store the number +255?<br />\r\n&nbsp;</p>\r\n', '<p>BCD<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>2&rsquo;s complement<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>1&rsquo;s complement<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Unsigned binary</p>\r\n', '6', 30, 8, '4'),
(2358, '<p>The gray code of a given binary number 1001 is<br />\r\n&nbsp;</p>\r\n', '<p>1110<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>0110<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>1101<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>1111</p>\r\n', '6', 20, 8, '3'),
(2359, '<p>For two variables, n=2 , the number of possible Boolean functions is<br />\r\n&nbsp;</p>\r\n', '<p>4</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>8<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>16<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>12</p>\r\n', '6', 25, 8, '3'),
(2360, '<p>The one major advantage of CMOS is its,<br />\r\n&nbsp;</p>\r\n', '<p>Low propagation delay<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>High propagation delay<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Very low propagation delay<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Very high propagation delay</p>\r\n', '6', 25, 8, '2'),
(2361, '<p>64K memory contains how many words of 8 bits each?<br />\r\n&nbsp;</p>\r\n', '<p>65,536<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>64,536<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>65,436<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>65,546</p>\r\n', '6', 3283, 8, '1'),
(2362, '<p>The simplest way to determine cache locations in which to store memory blocks is the,<br />\r\n&nbsp;</p>\r\n', '<p>Associative Mapping technique<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Direct Mapping technique<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Set-Associative Mapping technique</p>\r\n', '<p>Indirect Mapping technique</p>\r\n', '6', 31, 8, '2'),
(2363, '<p>The sum of -6 and -13 using 2&rsquo;s complement addition is,<br />\r\n&nbsp;</p>\r\n', '<p>11100011<br />\r\n&nbsp;</p>\r\n', '<p>11110011<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>11001100<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>11101101</p>\r\n', '6', 37, 8, '4'),
(2364, '<p>Which one of the following CPU registers holds the address of the instructions (instructions in the program stored in memory) to be executed next?<br />\r\n&nbsp;</p>\r\n', '<p>MAR (Memory address register)<br />\r\n&nbsp;</p>\r\n', '<p>MBR (Memory Buffer Register)<br />\r\n&nbsp;</p>\r\n', '<p>AC (Accumulator)<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>PC (Program Counter)</p>\r\n', '6', 25, 8, '4'),
(2365, '<p>What are the major components of a CPU?<br />\r\n&nbsp;</p>\r\n', '<p>Control Unit, Register Set, Arithmetic Logic Unit<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Control Unit, Memory Unit, Arithmetic Logic Unit<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Memory Unit, Arithmetic Logic Unit, Auxiliary Memory<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Register Set, Control Unit, Memory Unit</p>\r\n', '6', 26, 8, '1'),
(2366, '<p>Given the characteristic table of a JK flip-flop, find the missing output value.<br />\r\nJ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; K&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q(t+1)<br />\r\n0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q(t)<br />\r\n0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0<br />\r\n1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1<br />\r\n1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ---<br />\r\n&nbsp;</p>\r\n', '<p>Q(t)<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Q&rsquo;(t+1)<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Q&rsquo;(t)</p>\r\n', '1', 130, 8, '4'),
(2367, '<p>&nbsp;Convert decimal value (888)10 to base-5.</p>\r\n', '<p>(444)5<br />\r\n&nbsp;</p>\r\n', '<p>(12023)5<br />\r\n&nbsp;</p>\r\n', '<p>(131313)5<br />\r\n&nbsp;</p>\r\n', '<p>(12021)5</p>\r\n', '7', 20, 8, '2'),
(2368, '<p>Consider the following logic function f(ABC).<br />\r\nf(A,B,C) =&nbsp; ( A + B + C&rsquo;) . (A + B&rsquo;+ C&rsquo;)<br />\r\nWhich of the following would be the result if the above logic function is to be simplified using k-maps?</p>\r\n', '<p>C&rsquo; + A<br />\r\n&nbsp;</p>\r\n', '<p>C + C&rsquo;A&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>C.A&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>C&rsquo;.A</p>\r\n', '7', 30, 8, '1'),
(2369, '<p>What is the equivalent in hexadecimal for the decimal number 973?<br />\r\n&nbsp;</p>\r\n', '<p>4BC<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>CB4<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>6D<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>3CD</p>\r\n', '7', 28, 8, '4'),
(2370, '<p>What is the word size of a 8086 processor?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>8 bits<br />\r\n&nbsp;</p>\r\n', '<p>16 bits<br />\r\n&nbsp;</p>\r\n', '<p>32 bits<br />\r\n&nbsp;</p>\r\n', '<p>64 bits</p>\r\n', '7', 31, 8, '2'),
(2371, '<p>What kind of Information is stored inside the computer?<br />\r\n&nbsp;</p>\r\n', '<p>Binary form<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>ASCII code form<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Decimal form<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Alpha numeric</p>\r\n', '7', 27, 8, '1');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(2372, '<p>What is a parity bit?<br />\r\n&nbsp;</p>\r\n', '<p>It is used to indicate uppercase letters<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>It is used to detect errors<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>It is the first bit in a byte<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>It is the last bit in a byte</p>\r\n', '7', 17, 8, '2'),
(2373, '<p>What is the minimum number of bits required to store the Hexadecimal number FF?</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>16</p>\r\n', '7', 23, 8, '2'),
(2374, '<p>What is the purpose of the floating point unit(FPU)?<br />\r\n&nbsp;</p>\r\n', '<p>Makes integer arithmetic faster<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Makes pipelining efficient<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Increases RAM capacity<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Makes some arithmetic calculations faster</p>\r\n', '7', 27, 8, '4'),
(2375, '<p>Which of the following is not a type of processor?<br />\r\n&nbsp;</p>\r\n', '<p>PowerPC 601<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Motorola 8086<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Motorola 68000<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Intel Pentium</p>\r\n', '7', 18, 8, '4'),
(2376, '<p>Cycle stealing is/are used in which concept?<br />\r\n&nbsp;</p>\r\n', '<p>Programmed I/O<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>DMA<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Interrupts<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Memory mapped I/O</p>\r\n', '7', 18, 8, '2'),
(2377, '<p>What is Q, when S = 1 and R = 1 for SR flip-flop?<br />\r\n&nbsp;</p>\r\n', '<p>No Change<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Clear to 0<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Set to 1<br />\r\n&nbsp;</p>\r\n', '<p>Indeterminate</p>\r\n', '8', 17, 8, '4'),
(2378, '<p>What does T stands for in T flip-flop?<br />\r\n&nbsp;</p>\r\n', '<p>Top<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Type<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Toggle<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Tickle</p>\r\n', '8', 20, 8, '3'),
(2379, '<p>In which type of flip-flop the indeterminate condition of the SR flip-flop (when S=R=1) is eliminated?<br />\r\n&nbsp;</p>\r\n', '<p>Edge-triggered flip-flop<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>JK flip-flop<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>D flip-flop<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>T flip-flop</p>\r\n', '8', 28, 8, '2'),
(2380, '<p>The bulk of the binary information in a digital computer is stored in memory, but all computations are done in<br />\r\n&nbsp;</p>\r\n', '<p>Timing Control<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Memory Registers<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Processor Registers<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Program Control</p>\r\n', '8', 17, 8, '3'),
(2381, '<p>Information transfer from one register to another is designated in symbolic form by means of a<br />\r\n&nbsp;</p>\r\n', '<p>Control Function<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Op Code<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Registers<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Replacement Operator</p>\r\n', '8', 23, 8, '4'),
(2382, '<p>The registers found in the processor unit are<br />\r\n&nbsp;</p>\r\n', '<p>Operational registers<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Memory registers<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Storage registers<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Binary registers</p>\r\n', '8', 20, 8, '1'),
(2383, '<p>Techniques that automatically move program and data blocks into the physical main memory when they are required for execution are called&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Associative-Mapping techniques<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Main Memory techniques<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Virtual Memory techniques<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Cache Memory techniques</p>\r\n', '8', 25, 8, '3'),
(2384, '<p>Given below are the octal numbers and their Binary Coded Decimal (BCD) equivalents, which are not in order. Match the following octal numbers with their respective BCD equivalents and select the correct sequence.<br />\r\nOctal number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BCD equivalent<br />\r\n10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 111111<br />\r\n&nbsp; 9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ii.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 110010<br />\r\n20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iii.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 001001<br />\r\n50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iv.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 010100<br />\r\n77&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 001010</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>iii, ii, i, iv, v<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>v, iv, ii, iii, i<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>v, iv, i, iii, ii<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, iv, v, iii</p>\r\n', '8', 38, 8, '2'),
(2385, '<p>The processor, _________ and I/O Devices are interconnected by means of a common bus.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Cache Memory<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Auxiliary Memory<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Virtual Memory<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Main Memory</p>\r\n', '8', 11, 8, '1'),
(2386, '<p>System Software usually includes a program called a _______ , which helps the programmer to find errors in a program.<br />\r\n&nbsp;</p>\r\n', '<p>Write Buffer<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Read Buffer<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Debugger<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Both (a) and (c) above</p>\r\n', '8', 18, 8, '3'),
(2387, '<p>What does PHP stand for?<br />\r\ni) Personal Home Page<br />\r\nii) Hypertext Preprocessor<br />\r\niii) Pretext Hypertext Processor<br />\r\niv) Preprocessor Home Page<br />\r\n&nbsp;</p>\r\n', '<p>Both i) and iii)</p>\r\n', '<p>Both ii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>Only ii)<br />\r\n&nbsp;</p>\r\n', '<p>Both i) and ii)</p>\r\n', '1', 20, 20, '4'),
(2388, '<p>PHP files have a default file extension of<br />\r\n&nbsp;</p>\r\n', '<p>.html</p>\r\n', '<p>.xml<br />\r\n&nbsp;</p>\r\n', '<p>.php<br />\r\n&nbsp;</p>\r\n', '<p>.ph</p>\r\n', '1', 20, 20, '3'),
(2389, '<p>Which of the following is/are a PHP code editor?<br />\r\ni) Notepad<br />\r\nii) Notepad++<br />\r\niii) Adobe Dreamweaver<br />\r\niv) PDT<br />\r\n&nbsp;</p>\r\n', '<p>Only iv)</p>\r\n', '<p>All of the mentioned.<br />\r\n&nbsp;</p>\r\n', '<p>i), ii) and iii)</p>\r\n', '<p>Only iii)</p>\r\n', '1', 20, 20, '2'),
(2390, '<p>Which of the following must be installed on your computer so as to run PHP script?<br />\r\ni) Adobe Dreamweaver<br />\r\nii) PHP<br />\r\niii) Apache<br />\r\niv) IIS</p>\r\n', '<p>All of the mentioned.<br />\r\n&nbsp;</p>\r\n', '<p>Only ii)<br />\r\n&nbsp;</p>\r\n', '<p>ii) and iii)<br />\r\n&nbsp;</p>\r\n', '<p>ii), iii) and iv)</p>\r\n', '1', 20, 20, '4'),
(2391, '<p>Which version of PHP introduced Try/catch Exception?</p>\r\n', '<p>PHP 4</p>\r\n', '<p>PHP 5</p>\r\n', '<p>PHP 5.3<br />\r\n&nbsp;</p>\r\n', '<p>PHP 6</p>\r\n', '1', 20, 20, '2'),
(2392, '<p>We can use ___ to comment a single line?<br />\r\ni) /?<br />\r\nii) //<br />\r\niii) #<br />\r\niv) /* */<br />\r\n&nbsp;</p>\r\n', '<p>Only ii)</p>\r\n', '<p>i), iii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>ii), iii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>Both ii) and iv)</p>\r\n', '1', 20, 20, '3'),
(2393, '<p>Which of the following php statement/statements will store 111 in variable num?<br />\r\ni) int $num = 111;<br />\r\nii) int mum = 111;<br />\r\niii) $num = 111;<br />\r\niv) 111 = $num;<br />\r\n&nbsp;</p>\r\n', '<p>Both i) and ii)<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned.</p>\r\n', '<p>Only iii)</p>\r\n', '<p>Only i)</p>\r\n', '1', 20, 20, '3'),
(2394, '<p>What will be the output of the following php code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$num = 1;<br />\r\n$num1 = 2;<br />\r\nprint $num . &quot;+&quot;. $num1;<br />\r\n?&gt;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>1+2<br />\r\n&nbsp;</p>\r\n', '<p>1.+.2<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '1', 20, 20, '2'),
(2395, '<p>What will be the output of the following php code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$num = &quot;1&quot;;<br />\r\n$num1 = &quot;2&quot;;<br />\r\nprint $num+$num1;<br />\r\n?&gt;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>1+2</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>12</p>\r\n', '1', 20, 20, '1'),
(2396, '<p>This set of PHP multiple choice questions and answers focuses on PHP basics. It will be useful for anyone learning PHP Basics and Fundamentals.</p>\r\n\r\n<p>Which of following variables can be assigned a value to it?<br />\r\ni) $3hello<br />\r\nii) $_hello<br />\r\niii) $this<br />\r\niv) $This<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned<br />\r\n&nbsp;</p>\r\n', '<p>Only ii)<br />\r\n&nbsp;</p>\r\n', '<p>ii), iii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>ii) and iv)</p>\r\n', '1', 20, 20, '4'),
(2397, '<p>&nbsp;What will be the output of the following code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$foo = &#39;Bob&#39;;<br />\r\n$bar = &amp;$foo;<br />\r\n$bar = &quot;My name is $bar&quot;;<br />\r\necho $bar;<br />\r\necho $foo;<br />\r\n?&gt;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>My name is BobBob<br />\r\n&nbsp;</p>\r\n', '<p>My name is BobMy name is Bob</p>\r\n', '<p>My name is Bob Bob</p>\r\n', '1', 20, 20, '3'),
(2398, '<p>Which of the following PHP statements will output Hello World on the screen?<br />\r\ni) echo (&ldquo;Hello World&rdquo;);<br />\r\nii) print (&ldquo;Hello World&rdquo;);<br />\r\niii) printf (&ldquo;Hello World&rdquo;);<br />\r\niv) sprintf (&ldquo;Hello World&rdquo;);<br />\r\n&nbsp;</p>\r\n', '<p>i) and ii)<br />\r\n&nbsp;</p>\r\n', '<p>i), ii) and iii)<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned<br />\r\n&nbsp;</p>\r\n', '<p>i), ii) and iv)</p>\r\n', '1', 20, 20, '2'),
(2399, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$color = &quot;maroon&quot;;<br />\r\n$var = $color[2];<br />\r\necho &quot;$var&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>$var</p>\r\n', '<p>r</p>\r\n', '1', 20, 20, '4'),
(2400, '<p>Who is the father of C Language?</p>\r\n', '<p>Bjarne Stroustrup<br />\r\n&nbsp;</p>\r\n', '<p>James A. Gosling</p>\r\n', '<p>Dennis Ritchie</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Dr. E.F. Codd</p>\r\n', '1', 35, 4, '3'),
(2401, '<p>For 16-bit compiler allowable range for integer constants is ________?</p>\r\n', '<p>-3.4e38 to 3.4e38</p>\r\n', '<p>-32767 to 32768</p>\r\n', '<p>-32668 to 32667</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>-32768 to 32767</p>\r\n', '1', 55, 1, '4'),
(2402, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$score = 1234;<br />\r\n$scoreboard = (array) $score;<br />\r\necho $scoreboard[0];<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>1234<br />\r\n&nbsp;</p>\r\n', '<p>2</p>\r\n', '1', 20, 20, '3'),
(2403, '<p>C programs are converted into machine language with the help of</p>\r\n', '<p>An Editor<br />\r\n&nbsp;</p>\r\n', '<p>A compiler<br />\r\n&nbsp;</p>\r\n', '<p>An operating system<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '1', 45, 4, '2'),
(2404, '<p>C was primarily developed as<br />\r\n&nbsp;</p>\r\n', '<p>System programming language</p>\r\n', '<p>General purpose language</p>\r\n', '<p>Data processing language</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 46, 4, '1'),
(2405, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$total = &quot;25 students&quot;;<br />\r\n$more = 10;<br />\r\n$total = $total + $more;<br />\r\necho &quot;$total&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>35 students<br />\r\n&nbsp;</p>\r\n', '<p>35<br />\r\n&nbsp;</p>\r\n', '<p>25 students</p>\r\n', '1', 20, 20, '3'),
(2406, '<p>Which one of the following is not a reserved keyword for C?</p>\r\n', '<p>auto<br />\r\n&nbsp;</p>\r\n', '<p>case<br />\r\n&nbsp;</p>\r\n', '<p>main<br />\r\n&nbsp;</p>\r\n', '<p>default</p>\r\n', '1', 44, 4, '3'),
(2407, '<p>Which of the below statements is equivalent to $add += $add ?<br />\r\n&nbsp;</p>\r\n', '<p>$add = $add<br />\r\n&nbsp;</p>\r\n', '<p>$add = $add +$add<br />\r\n&nbsp;</p>\r\n', '<p>$add = $add + 1<br />\r\n&nbsp;</p>\r\n', '<p>$add = $add + $add + 1</p>\r\n', '1', 20, 20, '2'),
(2408, '<p>A C variable cannot start with</p>\r\n', '<p>A number</p>\r\n', '<p>A special symbol other than underscore</p>\r\n', '<p>Both of the above</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>An alphabet</p>\r\n', '1', 46, 4, '3'),
(2409, '<p>Which statement will output $x on the screen?<br />\r\n&nbsp;</p>\r\n', '<p>echo &ldquo;\\$x&rdquo;;<br />\r\n&nbsp;</p>\r\n', '<p>echo &ldquo;$$x&rdquo;;<br />\r\n&nbsp;</p>\r\n', '<p>echo &ldquo;/$x&rdquo;;<br />\r\n&nbsp;</p>\r\n', '<p>echo &ldquo;$x;&rdquo;;</p>\r\n', '1', 20, 20, '1'),
(2410, '<p>Which one of the following is not a valid identifier?</p>\r\n', '<p>_computer</p>\r\n', '<p>1computer</p>\r\n', '<p>comp_uter</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>computer1</p>\r\n', '1', 42, 4, '2'),
(2411, '<p>What will be printed after execution of the following program code?<br />\r\nmain()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;\\\\nab&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;\\\\bsi&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;\\\\rha&quot;);<br />\r\n}</p>\r\n', '<p>absiha</p>\r\n', '<p>asiha</p>\r\n', '<p>haasi</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>hai</p>\r\n', '1', 55, 4, '4'),
(2412, '<p>What will be the output of the following code?</p>\r\n\r\n<p>&lt;?php<br />\r\nfunction track() {<br />\r\nstatic $count = 0;<br />\r\n$count++;<br />\r\necho $count;<br />\r\n}<br />\r\ntrack();<br />\r\ntrack();<br />\r\ntrack();<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>123</p>\r\n', '<p>111</p>\r\n', '<p>000<br />\r\n&nbsp;</p>\r\n', '<p>011</p>\r\n', '1', 20, 20, '1'),
(2413, '<p>If integer needs two bytes of storage, then maximum value of an unsigned integer is</p>\r\n', '<p>216 &ndash; 1</p>\r\n', '<p>215 &ndash; 1</p>\r\n', '<p>216</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>215</p>\r\n', '1', 46, 4, '1'),
(2414, '<p>What is the correct value to return to the operating system upon the successful completion of a program?</p>\r\n', '<p>1</p>\r\n', '<p>-1</p>\r\n', '<p>0</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Program do no return a value</p>\r\n', '1', 44, 4, '3'),
(2415, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a = &quot;clue&quot;;<br />\r\n$a .= &quot;get&quot;;<br />\r\necho &quot;$a&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>get<br />\r\n&nbsp;</p>\r\n', '<p>true<br />\r\n&nbsp;</p>\r\n', '<p>false</p>\r\n', '<p>clueget</p>\r\n', '1', 20, 20, '4'),
(2416, '<p>Which is the only function all C programs must contain?<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>start()<br />\r\n&nbsp;</p>\r\n', '<p>system()<br />\r\n&nbsp;</p>\r\n', '<p>main()<br />\r\n&nbsp;</p>\r\n', '<p>printf()</p>\r\n', '1', 44, 4, '3'),
(2417, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\necho &quot;Hello world &lt;/br&gt; I am learning PHP&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hello world</p>\r\n', '<p>Hello world I am learning PHP<br />\r\n&nbsp;</p>\r\n', '<p>Hello world<br />\r\nI am learning PHP<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '1', 20, 20, '3'),
(2418, '<p>Which of the following is not a correct variable type?</p>\r\n', '<p>float</p>\r\n', '<p>real<br />\r\n&nbsp;</p>\r\n', '<p>int</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>double</p>\r\n', '1', 40, 4, '2'),
(2419, '<p>What number would be shown on the screen after the following statements of C are executed?<br />\r\nchar ch;<br />\r\nint i;<br />\r\nch = &#39;G&#39;;<br />\r\ni = ch-&#39;A&#39;;<br />\r\nprintf(&quot;%d&quot;, i);<br />\r\n&nbsp;</p>\r\n', '<p>5<br />\r\n&nbsp;</p>\r\n', '<p>6</p>\r\n', '<p>7</p>\r\n', '<p>8</p>\r\n', '1', 60, 4, '2'),
(2420, '<p>Which of following is not a valid name for a C variable?</p>\r\n', '<p>Computer<br />\r\n&nbsp;</p>\r\n', '<p>Comp_uter</p>\r\n', '<p>Comp uter<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Both A and B</p>\r\n', '1', 48, 4, '3'),
(2421, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\necho &quot;Hello world &lt;strong&gt;I am learning PHP&lt;/strong&gt;&quot;<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hello world</p>\r\n', '<p>Hello world I am learning PHP<br />\r\n&nbsp;</p>\r\n', '<p>Hello world<br />\r\nI am learning PHP</p>\r\n', '<p>Error</p>\r\n', '1', 20, 20, '2'),
(2422, '<p>Find the output of the following program.<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; int i=065, j=65;<br />\r\n&nbsp;&nbsp; printf(&quot;%d %d&quot;, i, j);<br />\r\n}</p>\r\n', '<p>53 65<br />\r\n&nbsp;</p>\r\n', '<p>65 65<br />\r\n&nbsp;</p>\r\n', '<p>065 65<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>053 65</p>\r\n', '1', 64, 4, '1'),
(2423, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<pre>\r\n&lt;?php\r\necho &quot;This&quot;, &quot;was&quot;, &quot;a&quot;, &quot;bad&quot;, &quot;idea&quot;;\r\n?&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>This, was, a, bad, idea</p>\r\n', '<p>This was a bad idea<br />\r\n&nbsp;</p>\r\n', '<p>Thiswasabadidea</p>\r\n', '<p>Error</p>\r\n', '1', 20, 20, '3'),
(2424, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<pre>\r\n&lt;?php\r\necho &quot;This&quot;,&quot;was&quot;|&quot;a&quot;,&quot;bad&quot;.&quot;idea&quot;;\r\n?&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Thiswasabadidea<br />\r\n&nbsp;</p>\r\n', '<p>Thiswasbadidea<br />\r\n&nbsp;</p>\r\n', '<p>Thiswas a badidea<br />\r\n&nbsp;</p>\r\n', '<p>Thiswas abadidea</p>\r\n', '1', 20, 20, '2'),
(2425, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<pre>\r\n&lt;?php\r\n$one = &quot;Hello&quot;;\r\n$two = &quot;World&quot;;\r\necho $one, $two;\r\n????????&gt;\r\n</pre>\r\n', '<p>Hello World</p>\r\n', '<p>Hello<br />\r\n&nbsp;</p>\r\n', '<p>World<br />\r\n&nbsp;</p>\r\n', '<p>HelloWorld</p>\r\n', '1', 20, 20, '4'),
(2426, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$one = &quot;Hello&quot;;<br />\r\n$two = &quot;World&quot;;<br />\r\necho &quot;$one$two&quot;;<br />\r\n?&gt;</p>\r\n', '<p>HelloWorld<br />\r\n&nbsp;</p>\r\n', '<p>$one$two<br />\r\n&nbsp;</p>\r\n', '<p>Hello</p>\r\n', '<p>Error</p>\r\n', '1', 20, 20, '1'),
(2427, '<p>If ASCII value of &#39;x&#39; is 120, then what is the value of the H, if<br />\r\nH = (&#39;x&#39; &ndash; &#39;w&#39; ) / 3;<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>0</p>\r\n', '1', 60, 4, '4'),
(2428, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$one = &quot;Hello&quot;;<br />\r\n$two = &quot;World&quot;;<br />\r\necho &quot;$one&quot;+&quot;$two&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>HelloWorld</p>\r\n', '<p>Hello+World<br />\r\n&nbsp;</p>\r\n', '<p>0</p>\r\n', '<p>Error</p>\r\n', '1', 20, 20, '3'),
(2429, '<p>What is the difference between a declaration and a definition of a variable?</p>\r\n', '<p>Both can occur multiple times, but a declaration must occur first.<br />\r\n&nbsp;</p>\r\n', '<p>A definition occurs once, but a declaration may occur many times.<br />\r\n&nbsp;</p>\r\n', '<p>Both can occur multiple times, but a definition must occur first.<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A declaration occurs once, but a definition may occur many times.</p>\r\n', '1', 70, 4, '4'),
(2430, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\necho &quot;This is &lt;i&gt;India&lt;/i&gt;&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>This is India.</p>\r\n', '<p>This is India<br />\r\n&nbsp;</p>\r\n', '<p>This is<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '1', 20, 20, '2'),
(2431, '<p>&quot;My salary was increased by 15%&quot; Select the statement, which will EXACTLY reproduce the line of text above.<br />\r\n&nbsp;</p>\r\n', '<p>printf(&quot;My salary was increased by 15/%!&quot;);<br />\r\n&nbsp;</p>\r\n', '<p>printf(&quot;My salary was increased by 15%!&quot;);<br />\r\n&nbsp;</p>\r\n', '<p>printf(&quot;My salary was increased by 15&#39;%&#39;!&quot;);<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>printf(&quot;My salary was increased by 15%%!&quot;);</p>\r\n', '1', 46, 4, '4'),
(2432, '<p>short testarray[4][3] = { {1}, {2,3}, {4,5,6}};<br />\r\nprintf(&quot;%d&quot;, sizeof(testarray));<br />\r\nAssuming a short is two bytes long, what will be printed by the above code?<br />\r\n&nbsp;</p>\r\n', '<p>6<br />\r\n&nbsp;</p>\r\n', '<p>7<br />\r\n&nbsp;</p>\r\n', '<p>12<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>24</p>\r\n', '1', 55, 4, '4'),
(2433, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$cars = array(&quot;Volvo&quot;, &quot;BMW&quot;, &quot;Toyota&quot;);<br />\r\necho &quot;My car is a {$cars[0]}&quot;;<br />\r\n?&gt;</p>\r\n', '<p>My car is a Volvo<br />\r\n&nbsp;</p>\r\n', '<p>My car is a BMW<br />\r\n&nbsp;</p>\r\n', '<p>My car is a Toyota<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '1', 20, 20, '1'),
(2434, '<p>What is right way to Initialize array?</p>\r\n', '<p>int num[6] = { 2, 4, 12, 5, 45, 5 };<br />\r\n&nbsp;</p>\r\n', '<p>int n{} = { 2, 4, 12, 5, 45, 5 };<br />\r\n&nbsp;</p>\r\n', '<p>int n{6} = { 2, 4, 12 };<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>int n(6) = { 2, 4, 12, 5, 45, 5 };</p>\r\n', '2', 55, 4, '1'),
(2435, '<p>What will be the output of the program ?<br />\r\n#include&lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; int a[5] = {5, 1, 15, 20, 25};<br />\r\n&nbsp;&nbsp;&nbsp; int i, j, m;<br />\r\n&nbsp;&nbsp;&nbsp; i = ++a[1];<br />\r\n&nbsp;&nbsp;&nbsp; j = a[1]++;<br />\r\n&nbsp;&nbsp;&nbsp; m = a[i++];<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%d, %d, %d&quot;, i, j, m);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>3, 2, 15<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2, 3, 20<br />\r\n&nbsp;</p>\r\n', '<p>2, 1, 15<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1, 2, 5</p>\r\n', '2', 65, 4, '1'),
(2436, '<p>What will be the output of the following PHP code?&nbsp;</p>\r\n\r\n<p>&lt;?php<br />\r\n$a = 5;<br />\r\n$b = 5;<br />\r\necho ($a === $b);<br />\r\n???????&gt;</p>\r\n', '<p>5 === 5<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>False</p>\r\n', '1', 20, 20, '4'),
(2437, '<p>Which of the below symbols is a newline character?<br />\r\n&nbsp;</p>\r\n', '<p>\\r<br />\r\n&nbsp;</p>\r\n', '<p>\\n<br />\r\n&nbsp;</p>\r\n', '<p>/n</p>\r\n', '<p>/r</p>\r\n', '1', 20, 20, '2'),
(2438, '<p>What will be the output of following program code?<br />\r\n#include &lt;stdio.h&gt;<br />\r\nint main(void)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; char p;<br />\r\n&nbsp;&nbsp;&nbsp; char buf[10] = {1, 2, 3, 4, 5, 6, 9, 8};<br />\r\n&nbsp;&nbsp;&nbsp; p = (buf + 1)[5];<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, p);<br />\r\n&nbsp;&nbsp;&nbsp; return 0;<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>5<br />\r\n&nbsp;</p>\r\n', '<p>6<br />\r\n&nbsp;</p>\r\n', '<p>9<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error</p>\r\n', '2', 65, 4, '3'),
(2439, '<p>An array elements are always stored in ________ memory locations.</p>\r\n', '<p>Sequential<br />\r\n&nbsp;</p>\r\n', '<p>Random<br />\r\n&nbsp;</p>\r\n', '<p>Sequential and Random<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 50, 4, '1'),
(2440, '<p>Let x be an array. Which of the following operations are illegal?<br />\r\nI.&nbsp;&nbsp; ++x<br />\r\nII. x+1<br />\r\nIII. x++<br />\r\nIV. x*2</p>\r\n', '<p>I and II<br />\r\n&nbsp;</p>\r\n', '<p>I, II and III<br />\r\n&nbsp;</p>\r\n', '<p>II and III<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>I, III and IV</p>\r\n', '2', 55, 4, '4'),
(2441, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$num = 10;<br />\r\necho &#39;What is her age? \\n She is $num years old&#39;;<br />\r\n?&gt;</p>\r\n', '<p>What is her age? \\n She is $num years old<br />\r\n&nbsp;</p>\r\n', '<p>What is her age?<br />\r\nShe is $num years old<br />\r\n&nbsp;</p>\r\n', '<p>What is her age? She is 10 years old<br />\r\n&nbsp;</p>\r\n', '<p>What is her age?<br />\r\nShe is 10 years old</p>\r\n', '1', 20, 20, '1'),
(2442, '<p>What is the maximum number of dimensions an array in C may have?</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>20<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Theoratically no limit. The only practical limits are memory size and compilers.</p>\r\n', '2', 40, 4, '4'),
(2443, '<p>Size of the array need not be specified, when</p>\r\n', '<p>Initialization is a part of definition<br />\r\n&nbsp;</p>\r\n', '<p>It is a declaratrion</p>\r\n', '<p>It is a formal parameter<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of these</p>\r\n', '2', 46, 4, '4'),
(2444, '<p>Consider the following type definition.<br />\r\ntypedef char x[10];<br />\r\nx myArray[5];<br />\r\nWhat will sizeof(myArray) be ? (Assume one character occupies 1 byte)<br />\r\n&nbsp;</p>\r\n', '<p>15<br />\r\n&nbsp;</p>\r\n', '<p>10</p>\r\n', '<p>50<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>30</p>\r\n', '2', 50, 4, '3'),
(2445, '<p>What will be printed after execution of the following code?<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int arr[10] = {1,2,3,4,5};<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, arr[5]);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Garbage Value<br />\r\n&nbsp;</p>\r\n', '<p>5</p>\r\n', '<p>6<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '2', 65, 4, '4'),
(2446, '<p>What will be the output of the following program?<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char str1[] = &quot;abcd&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char str2[] = &quot;abcd&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(str1==str2)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;Equal&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;Unequal&quot;);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Equal</p>\r\n', '<p>Unequal<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '2', 62, 4, '2'),
(2447, '<p>What will be the output of the following code?<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a[10];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d %d&quot;, a[-1], a[12]);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>0 0<br />\r\n&nbsp;</p>\r\n', '<p>Garbage value 0<br />\r\n&nbsp;</p>\r\n', '<p>0 Garbage Value<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Garbage vlaue Garbage Value</p>\r\n', '2', 44, 4, '4'),
(2448, '<p>What does the following declaration mean?<br />\r\nint (*ptr)[10];<br />\r\n&nbsp;</p>\r\n', '<p>ptr is array of pointers to 10 integers<br />\r\n&nbsp;</p>\r\n', '<p>ptr is a pointer to an array of 10 integers<br />\r\n&nbsp;</p>\r\n', '<p>ptr is an array of 10 integers<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ptr is an pointer to array</p>\r\n', '2', 46, 4, '2'),
(2449, '<p>Array passed as an argument to a function is interpreted as</p>\r\n', '<p>Address of the array.<br />\r\n&nbsp;</p>\r\n', '<p>Values of the first elements of the array.<br />\r\n&nbsp;</p>\r\n', '<p>Address of the first element of the array.<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Number of element of the array.</p>\r\n', '2', 50, 4, '3'),
(2450, '<p>What will be the output of the program if the array begins at 65472 and each integer occupies 2 bytes?<br />\r\n#include<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; int a[3][4] = {1, 2, 3, 4, 4, 3, 2, 1, 7, 8, 9, 0};<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%u, %u&quot;, a+1, &amp;a+1);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>65474, 65488<br />\r\n&nbsp;</p>\r\n', '<p>65480, 65488<br />\r\n&nbsp;</p>\r\n', '<p>65480, 65496</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>65474, 65476</p>\r\n', '2', 72, 4, '3'),
(2451, '<p>What will be the output of the program ?<br />\r\n#include<br />\r\nint main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; int arr[1] = {10};<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, 0[arr]);<br />\r\n&nbsp;&nbsp;&nbsp; return 0;<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>10<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>6</p>\r\n', '2', 68, 4, '3'),
(2452, '<p>Which of the conditional statements is/are supported by PHP?<br />\r\ni) if statements<br />\r\nii) if-else statements<br />\r\niii) if-elseif statements<br />\r\niv) switch statements<br />\r\n&nbsp;</p>\r\n', '<p>Only i)</p>\r\n', '<p>i), ii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>ii), iii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '1', 20, 20, '4'),
(2453, '<p>What will be the output of the program if the array begins at address 65486?<br />\r\n#include<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; int arr[] = {12, 14, 15, 23, 45};<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%u, %u&quot;, arr, &amp;arr);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>65486, 65488<br />\r\n&nbsp;</p>\r\n', '<p>65486, 65490<br />\r\n&nbsp;</p>\r\n', '<p>65486, 65487<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>65486, 65486</p>\r\n', '2', 68, 4, '4'),
(2454, '<p>What will be the output of the program ?<br />\r\n#include<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; float arr[] = {12.4, 2.3, 4.5, 6.7};<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, sizeof(arr)/sizeof(arr[0]));<br />\r\n}</p>\r\n', '<p>5</p>\r\n', '<p>4</p>\r\n', '<p>6</p>\r\n', '<p>7</p>\r\n', '2', 72, 4, '2'),
(2455, '<p>Which of the following is correct way to define the function fun() in the below program?<br />\r\n#include&lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; int a[3][4];<br />\r\n&nbsp;&nbsp;&nbsp; fun(a);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>void fun(int p[][4]){}<br />\r\n&nbsp;</p>\r\n', '<p>void fun(int *p[4]){}<br />\r\n&nbsp;</p>\r\n', '<p>void fun(int *p[][4]){}<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>void fun(int *p[3][4]){}</p>\r\n', '2', 50, 4, '1'),
(2456, '<p>Which of the following statements are correct about the program below?<br />\r\n#include&lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; int size, i;<br />\r\n&nbsp;&nbsp;&nbsp; scanf(&quot;%d&quot;, &amp;size);<br />\r\n&nbsp;&nbsp;&nbsp; int arr[size];<br />\r\n&nbsp;&nbsp;&nbsp; for(i=1; i&lt;=size; i++)<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; scanf(&quot;%d&quot;, arr[i]);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, arr[i]);<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>The code is erroneous since the statement declaring array is invalid.<br />\r\n&nbsp;</p>\r\n', '<p>The code is erroneous since the subscript for array used in for loop is in the range 1 to size.<br />\r\n&nbsp;</p>\r\n', '<p>The code is correct and runs successfully.<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The code is erroneous since the values of array are getting scanned through the loop.</p>\r\n', '2', 65, 4, '1'),
(2457, '<p>Which of the following statements are correct about an array?<br />\r\n1. The array int num[26]; can store 26 elements.<br />\r\n2. The expression num[1] designates the very first element in the array.<br />\r\n3. It is necessary to initialize the array at the time of declaration.<br />\r\n4. The declaration num[SIZE] is allowed if SIZE is a macro.<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>1, 4</p>\r\n', '<p>2, 3<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2, 4</p>\r\n', '2', 62, 4, '2'),
(2458, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php</p>\r\n\r\n<p>$team = &quot;arsenal&quot;;</p>\r\n\r\n<p>switch ($team) {</p>\r\n\r\n<p>case &quot;manu&quot;:</p>\r\n\r\n<p>echo &quot;I love man u&quot;;</p>\r\n\r\n<p>case &quot;arsenal&quot;:</p>\r\n\r\n<p>echo &quot;I love arsenal&quot;;</p>\r\n\r\n<p>case &quot;manc&quot;:</p>\r\n\r\n<p>echo &quot;I love manc&quot;; }</p>\r\n\r\n<p>?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>I love arsenal</p>\r\n', '<p>Error</p>\r\n', '<p>I love arsenalI love manc</p>\r\n', '<p>I love arsenalI love mancI love manu</p>\r\n', '1', 20, 20, '3'),
(2459, '<p>Which of the looping statements is/are supported by PHP?<br />\r\ni) for loop<br />\r\nii) while loop<br />\r\niii) do-while loop<br />\r\niv) foreach loop<br />\r\n&nbsp;</p>\r\n', '<p>i) and ii)<br />\r\n&nbsp;</p>\r\n', '<p>i), ii) and iii)<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '1', 20, 20, '3'),
(2460, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$user = array(&quot;Ashley&quot;, &quot;Bale&quot;, &quot;Shrek&quot;, &quot;Blank&quot;);<br />\r\nfor ($x=0; $x &lt; count($user); $x++) {<br />\r\nif ($user[$x] == &quot;Shrek&quot;) continue;<br />\r\nprintf ($user[$x]);<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>AshleyBale<br />\r\n&nbsp;</p>\r\n', '<p>AshleyBaleBlank<br />\r\n&nbsp;</p>\r\n', '<p>ShrekBlank<br />\r\n&nbsp;</p>\r\n', '<p>Shrek</p>\r\n', '1', 20, 20, '2'),
(2461, '<p>If $a = 12 what will be returned when ($a == 12) ? 5 : 1 is executed?</p>\r\n', '<p>12<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>5</p>\r\n', '1', 20, 20, '4'),
(2462, '<p>What is the value of $a and $b after the function call?</p>\r\n\r\n<p>&lt;?php<br />\r\nfunction doSomething( &amp;$arg ) {<br />\r\n$return = $arg;<br />\r\n$arg += 1;<br />\r\nreturn $return;<br />\r\n}<br />\r\n$a = 3;<br />\r\n$b = doSomething( $a );<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a is 3 and b is 4</p>\r\n', '<p>a is 4 and b is 3.<br />\r\n&nbsp;</p>\r\n', '<p>Both are 3.<br />\r\n&nbsp;</p>\r\n', '<p>Both are 4.</p>\r\n', '1', 20, 20, '2'),
(2463, '<p>Who is the father of PHP?<br />\r\n&nbsp;</p>\r\n', '<p>Rasmus Lerdorf<br />\r\n&nbsp;</p>\r\n', '<p>Willam Makepiece<br />\r\n&nbsp;</p>\r\n', '<p>Drek Kolkevi<br />\r\n&nbsp;</p>\r\n', '<p>List Barely</p>\r\n', '1', 20, 20, '1'),
(2464, '<p>Which one of the following is the right way of defining a function in PHP?<br />\r\n&nbsp;</p>\r\n', '<p>function { function body }<br />\r\n&nbsp;</p>\r\n', '<p>data type functionName(parameters) { function body }</p>\r\n', '<p>functionName(parameters) { function body }<br />\r\n&nbsp;</p>\r\n', '<p>function fumctionName(parameters) { function body }<br />\r\n&nbsp;</p>\r\n', '2', 25, 20, '4'),
(2465, '<p>Type Hinting was introduced in which version of PHP?<br />\r\n&nbsp;</p>\r\n', '<p>PHP 4<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.3</p>\r\n', '<p>PHP 6</p>\r\n', '2', 25, 20, '2'),
(2466, '<p>What will happen in this function call?</p>\r\n\r\n<p>&lt;?php<br />\r\nfunction calc($price, $tax)<br />\r\n{<br />\r\n$total = $price + $tax;<br />\r\n}<br />\r\n$pricetag = 15;<br />\r\n$taxtag = 3;<br />\r\ncalc($pricetag, $taxtag);<br />\r\n?&gt;</p>\r\n', '<p>Call By Value<br />\r\n&nbsp;</p>\r\n', '<p>Call By Reference<br />\r\n&nbsp;</p>\r\n', '<p>Default Argument Value<br />\r\n&nbsp;</p>\r\n', '<p>Type Hinting</p>\r\n', '2', 25, 20, '1'),
(2467, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\nfunction calc($price, $tax=&quot;&quot;)<br />\r\n{<br />\r\n$total = $price + ($price * $tax);<br />\r\necho &quot;$total&quot;;<br />\r\n}<br />\r\ncalc(42);<br />\r\n?&gt;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>42<br />\r\n&nbsp;</p>\r\n', '<p>84</p>\r\n', '2', 25, 20, '3'),
(2468, '<p>Which of the following are valid function names?<br />\r\ni) function()<br />\r\nii) &euro;()<br />\r\niii) .function()<br />\r\niv) $function()<br />\r\n&nbsp;</p>\r\n', '<p>Only ii)<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned.<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned.</p>\r\n', '<p>iii) and iv)</p>\r\n', '2', 25, 20, '1'),
(2469, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\nfunction a()<br />\r\n{<br />\r\nfunction b()<br />\r\n{<br />\r\necho &#39;I am b&#39;;<br />\r\n}<br />\r\necho &#39;I am a&#39;;<br />\r\n}<br />\r\na();<br />\r\na();<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>I am b<br />\r\n&nbsp;</p>\r\n', '<p>I am bI am a</p>\r\n', '<p>Error</p>\r\n', '<p>I am a Error</p>\r\n', '2', 25, 20, '4'),
(2470, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$op2 = &quot;blabla&quot;;<br />\r\nfunction foo($op1)<br />\r\n{<br />\r\necho $op1;<br />\r\necho $op2;<br />\r\n}<br />\r\nfoo(&quot;hello&quot;);<br />\r\n?&gt;</p>\r\n', '<p>helloblabla</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>hello<br />\r\n&nbsp;</p>\r\n', '<p>helloblablablabla</p>\r\n', '2', 25, 20, '3'),
(2471, '<p>A function in PHP which starts with __ (double underscore) is know as..<br />\r\n&nbsp;</p>\r\n', '<p>Magic Function</p>\r\n', '<p>Inbuilt Function<br />\r\n&nbsp;</p>\r\n', '<p>Default Function<br />\r\n&nbsp;</p>\r\n', '<p>User Defined Function</p>\r\n', '2', 25, 20, '1'),
(2472, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\nfunction foo($msg)<br />\r\n{<br />\r\necho &quot;$msg&quot;;<br />\r\n}<br />\r\n$var1 = &quot;foo&quot;;<br />\r\n$var1(&quot;will this work&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error.<br />\r\n&nbsp;</p>\r\n', '<p>$msg<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>will this work</p>\r\n', '2', 25, 20, '4'),
(2473, '<p>Which one of the following PHP functions can be used to build a function that accepts any number of arguments?<br />\r\n&nbsp;</p>\r\n', '<p>func_get_argv()<br />\r\n&nbsp;</p>\r\n', '<p>func_get_argc()<br />\r\n&nbsp;</p>\r\n', '<p>get_argv()<br />\r\n&nbsp;</p>\r\n', '<p>get_argc()</p>\r\n', '2', 25, 20, '2'),
(2474, '<p>Which one of the following PHP functions can be used to find files?<br />\r\n&nbsp;</p>\r\n', '<p>glob()</p>\r\n', '<p>file()<br />\r\n&nbsp;</p>\r\n', '<p>fold()<br />\r\n&nbsp;</p>\r\n', '<p>get_file()</p>\r\n', '2', 25, 20, '1'),
(2475, '<p>Which of the following PHP functions can be used to get the current memory usage?<br />\r\n&nbsp;</p>\r\n', '<p>get_usage()<br />\r\n&nbsp;</p>\r\n', '<p>get_peak_usage()<br />\r\n&nbsp;</p>\r\n', '<p>get_memory_usage()<br />\r\n&nbsp;</p>\r\n', '<p>get_memory_peak_usage()</p>\r\n', '2', 25, 20, '3'),
(2476, '<p>Which of the following PHP functions can be used for generating unique id&rsquo;s?<br />\r\n&nbsp;</p>\r\n', '<p>uniqueid()<br />\r\n&nbsp;</p>\r\n', '<p>id()<br />\r\n&nbsp;</p>\r\n', '<p>md5()</p>\r\n', '<p>mdid()</p>\r\n', '2', 25, 20, '1'),
(2477, '<p>Which one of the following functions can be used to compress a string?<br />\r\n&nbsp;</p>\r\n', '<p>zip_compress()<br />\r\n&nbsp;</p>\r\n', '<p>zip()<br />\r\n&nbsp;</p>\r\n', '<p>compress()</p>\r\n', '<p>gzcompress()</p>\r\n', '2', 25, 20, '4'),
(2478, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\necho &quot;chr(52)&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>4</p>\r\n', '2', 25, 20, '4'),
(2479, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\necho ord (&quot;hi&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>106<br />\r\n&nbsp;</p>\r\n', '<p>103<br />\r\n&nbsp;</p>\r\n', '<p>104<br />\r\n&nbsp;</p>\r\n', '<p>209</p>\r\n', '2', 25, 20, '3'),
(2480, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$str = &quot;Hello World&quot;<br />\r\necho wordwrap($str,5,&quot;&lt;br&gt;\\n&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hello World<br />\r\n&nbsp;</p>\r\n', '<p>Hello<br />\r\nWorld<br />\r\n&nbsp;</p>\r\n', '<p>Hell<br />\r\no wo<br />\r\nrld<br />\r\n&nbsp;</p>\r\n', '<p>World</p>\r\n', '2', 25, 20, '2'),
(2481, '<p>&nbsp;What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\necho ucwords(&quot;i love my country&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>I love my country</p>\r\n', '<p>i love my Country<br />\r\n&nbsp;</p>\r\n', '<p>I love my Country<br />\r\n&nbsp;</p>\r\n', '<p>I Love My Country</p>\r\n', '2', 25, 20, '4'),
(2482, '<p>&nbsp;What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\necho lcfirst(&quot;welcome to India&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>welcome to India<br />\r\n&nbsp;</p>\r\n', '<p>welcome to india<br />\r\n&nbsp;</p>\r\n', '<p>Welcome to India<br />\r\n&nbsp;</p>\r\n', '<p>Welcome to india</p>\r\n', '2', 25, 20, '1'),
(2483, '<p>PHP&rsquo;s numerically indexed array begin with position __.<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>2</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>-1</p>\r\n', '2', 25, 20, '3'),
(2484, '<p>Which of the following are correct ways of creating an array?<br />\r\ni) state[0] = &ldquo;karnataka&rdquo;;<br />\r\nii) $state[] = array(&ldquo;karnataka&rdquo;);<br />\r\niii) $state[0] = &ldquo;karnataka&rdquo;;<br />\r\niv) $state = array(&ldquo;karnataka&rdquo;);<br />\r\n&nbsp;</p>\r\n', '<p>iii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>ii) and iii)<br />\r\n&nbsp;</p>\r\n', '<p>Only i)<br />\r\n&nbsp;</p>\r\n', '<p>ii), iii) and iv)</p>\r\n', '2', 25, 20, '1'),
(2485, '<p>What will be the output of the following php code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$states = array(&quot;karnataka&quot; =&gt; array<br />\r\n( &quot;population&quot; =&gt; &quot;11,35,000&quot;, &quot;captial&quot; =&gt; &quot;Bangalore&quot;),<br />\r\n&quot;Tamil Nadu&quot; =&gt; array( &quot;population&quot; =&gt; &quot;17,90,000&quot;,<br />\r\n&quot;captial&quot; =&gt; &quot;Chennai&quot;) );<br />\r\necho $states[&quot;karnataka&quot;][&quot;population&quot;];<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>karnataka 11,35,000</p>\r\n', '<p>11,35,000<br />\r\n&nbsp;</p>\r\n', '<p>population 11,35,000<br />\r\n&nbsp;</p>\r\n', '<p>karnataka population</p>\r\n', '2', 25, 20, '2'),
(2486, '<p>Which function will return true if a variable is an array or false if it is not?<br />\r\n&nbsp;</p>\r\n', '<p>this_array()<br />\r\n&nbsp;</p>\r\n', '<p>is_array()<br />\r\n&nbsp;</p>\r\n', '<p>do_array()</p>\r\n', '<p>in_array()</p>\r\n', '2', 25, 20, '2'),
(2487, '<p>Which in-built function will add a value to the end of an array?<br />\r\n&nbsp;</p>\r\n', '<p>array_unshift()</p>\r\n', '<p>into_array()</p>\r\n', '<p>inend_array()<br />\r\n&nbsp;</p>\r\n', '<p>array_push()</p>\r\n', '2', 25, 20, '4'),
(2488, '<p>&nbsp;What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$state = array (&quot;Karnataka&quot;, &quot;Goa&quot;, &quot;Tamil Nadu&quot;,<br />\r\n&quot;Andhra Pradesh&quot;);<br />\r\necho (array_search (&quot;Tamil Nadu&quot;, $state) );<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>2</p>\r\n', '2', 25, 20, '4'),
(2489, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p><!--?php<br /-->$fruits = array (&quot;apple&quot;, &quot;orange&quot;, &quot;banana&quot;);<br />\r\necho (next($fruits));<br />\r\necho (next($fruits));<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>orangebanana</p>\r\n', '<p>appleorange<br />\r\n&nbsp;</p>\r\n', '<p>orangeorange<br />\r\n&nbsp;</p>\r\n', '<p>appleapple</p>\r\n', '2', 25, 20, '1'),
(2490, '<p>Which function can be used to move the pointer to the previous array position?<br />\r\n&nbsp;</p>\r\n', '<p>last()<br />\r\n&nbsp;</p>\r\n', '<p>before()<br />\r\n&nbsp;</p>\r\n', '<p>prev()<br />\r\n&nbsp;</p>\r\n', '<p>previous()</p>\r\n', '2', 25, 20, '3'),
(2491, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fruits = array (&quot;apple&quot;, &quot;orange&quot;, array (&quot;pear&quot;, &quot;mango&quot;),<br />\r\n&quot;banana&quot;);<br />\r\necho (count($fruits, 1));<br />\r\n?&gt;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>5</p>\r\n', '<p>6</p>\r\n', '2', 25, 20, '4'),
(2492, '<p>Which function returns an array consisting of associative key/value pairs?<br />\r\n&nbsp;</p>\r\n', '<p>count()<br />\r\n&nbsp;</p>\r\n', '<p>array_count()<br />\r\n&nbsp;</p>\r\n', '<p>array_count_values()<br />\r\n&nbsp;</p>\r\n', '<p>count_values()</p>\r\n', '2', 25, 20, '3'),
(2493, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fruits = array (&quot;mango&quot;, &quot;apple&quot;, &quot;pear&quot;, &quot;peach&quot;);<br />\r\n$fruits = array_flip($fruits);<br />\r\necho ($fruits[0]);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>mango<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>peach<br />\r\n&nbsp;</p>\r\n', '<p>v</p>\r\n', '2', 25, 20, '2'),
(2494, '<p>Which of the functions is used to sort an array in descending order?<br />\r\n&nbsp;</p>\r\n', '<p>sort()<br />\r\n&nbsp;</p>\r\n', '<p>asort()<br />\r\n&nbsp;</p>\r\n', '<p>rsort()<br />\r\n&nbsp;</p>\r\n', '<p>dsort()</p>\r\n', '2', 25, 20, '3'),
(2495, '<p>&nbsp;What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fruits = array (&quot;mango&quot;, &quot;apple&quot;, &quot;peach&quot;, &quot;pear&quot;);<br />\r\n$fruits = asort ($fruits);<br />\r\nprintr ($fruits);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [1] =&gt; apple [0] =&gt; mango [2] =&gt; peach [3] =&gt; pear )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango [2] =&gt; peach [3] =&gt; pear )<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [1] =&gt; apple [0] =&gt; mango [3] =&gt; peach [2] =&gt; pear )</p>\r\n', '2', 25, 20, '1'),
(2496, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$arr = array (&quot;picture1.JPG&quot;, &quot;picture2.jpg&quot;,<br />\r\n&quot;Picture10.jpg&quot;, &quot;picture20.jpg&quot;);<br />\r\nsort($arr);<br />\r\nprint_r($arr);<br />\r\n?&gt;</p>\r\n', '<p>Array ( [0] =&gt; picture1.JPG [1] =&gt; Picture10.jpg [2] =&gt; picture2.jpg [3] =&gt; picture20.jpg )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; picture1.JPG [1] =&gt; picture2.jpg [2] =&gt; Picture10.jpg [3] =&gt; picture20.jpg )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; Picture10.jpg [1] =&gt; picture1.JPG [2] =&gt; picture2.jpg [3] =&gt; picture20.jpg )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; Picture10.jpg [1] =&gt; picture1.JPG [2] =&gt; picture20.jpg [3] =&gt; picture2.jpg )</p>\r\n', '2', 25, 20, '3'),
(2497, '<p>Which of the following function should be used?</p>\r\n', '<p>dsort()<br />\r\n&nbsp;</p>\r\n', '<p>casesort()<br />\r\n&nbsp;</p>\r\n', '<p>natcasesort()</p>\r\n', '<p>naturalsort()</p>\r\n', '2', 25, 20, '3'),
(2498, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$face = array (&quot;A&quot;, &quot;J&quot;, &quot;Q&quot;, &quot;K&quot;);<br />\r\n$number = array (&quot;2&quot;,&quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;);<br />\r\n$cards = array_merge ($face, $number);<br />\r\nprint_r ($cards);</p>\r\n\r\n<p>?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; A [1] =&gt; J [2] =&gt; Q [3] =&gt; K [4] =&gt; 2 [5] =&gt; 3 [6] =&gt; 4 [7] =&gt; 5 [8] =&gt; 6 [9] =&gt; 7 [10] =&gt; 8 [11] =&gt; 9 [12] =&gt; 10 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; A [1] =&gt; 2 [2] =&gt; J [3] =&gt; 3 [4] =&gt; Q [5] =&gt; 4 [6] =&gt; K [7] =&gt; 5 [8] =&gt; 6 [9] =&gt; 7 [10] =&gt; 8 [11] =&gt; 9 [12] =&gt; 10 )<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; 2 [1] =&gt; 3 [2] =&gt; 4 [3] =&gt; 5 [4] =&gt; 6 [5] =&gt; 7 [6] =&gt; 8 [7] =&gt; 9 [8] =&gt; 10 [9] =&gt; A [10] =&gt; J [11] =&gt; Q [12] =&gt; K )</p>\r\n', '2', 25, 20, '1');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(2499, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fruits = array (&quot;apple&quot;, &quot;mango&quot;, &quot;peach&quot;, &quot;pear&quot;,<br />\r\n&quot;orange&quot;);<br />\r\n$subset = array_slice ($fruits, 2);<br />\r\nprint_r ($subset);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; peach )</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango [2] =&gt; peach )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango )</p>\r\n', '<p>Array ( [0] =&gt; peach [1] =&gt; pear [2] =&gt; orange )</p>\r\n', '2', 25, 20, '4'),
(2500, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fruits = array (&quot;apple&quot;, &quot;mango&quot;, &quot;peach&quot;, &quot;pear&quot;,<br />\r\n&quot;orange&quot;);<br />\r\n$subset = array_splice ($fruits, 2);<br />\r\nprint_r ($fruits);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango [2] =&gt; peach )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; pear [1] =&gt; orange )</p>\r\n', '2', 25, 20, '3'),
(2501, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$number = array (&quot;4&quot;, &quot;hello&quot;, 2);<br />\r\necho (array_sum ($number));<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>4hello2<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>6</p>\r\n', '2', 25, 20, '4'),
(2502, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$array1 = array (&quot;KA&quot;, &quot;LA&quot;, &quot;CA&quot;, &quot;MA&quot;, &quot;TA&quot;);<br />\r\n$array2 = array (&quot;KA&quot;, &quot;IA&quot;, &quot;CA&quot;, &quot;GA&quot;, &quot;TA&quot;);<br />\r\n$inter = array_intersect ($array1, $array2);<br />\r\nprint_r ($inter);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; KA [1] =&gt; LA [2] =&gt; CA [3] =&gt; MA [4] =&gt; TA [5] =&gt; IA [6] =&gt; GA )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; KA [2] =&gt; CA [4] =&gt; TA )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [1] =&gt; IA [3] =&gt; GA )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [1] =&gt; LA [3] =&gt; MA )</p>\r\n', '2', 25, 20, '2'),
(2503, '<p>The practice of separating the user from the true inner workings of an application through well-known interfaces is known as..<br />\r\n&nbsp;</p>\r\n', '<p>Polymorphism<br />\r\n&nbsp;</p>\r\n', '<p>Inheritance<br />\r\n&nbsp;</p>\r\n', '<p>Encapsulation<br />\r\n&nbsp;</p>\r\n', '<p>Abstraction</p>\r\n', '3', 35, 20, '3'),
(2504, '<p>Which of the following term originates from the Greek language that means &ldquo;having multiple forms,&rdquo; defines OOP&rsquo;s ability to redefine, a class&rsquo;s characteristics?<br />\r\n&nbsp;</p>\r\n', '<p>Abstraction<br />\r\n&nbsp;</p>\r\n', '<p>Polymorphism</p>\r\n', '<p>Inheritance</p>\r\n', '<p>Differential</p>\r\n', '3', 35, 20, '2'),
(2505, '<p>The practice of creating objects based on predefined classes is often referred to as..</p>\r\n', '<p>class creation</p>\r\n', '<p>object creation<br />\r\n&nbsp;</p>\r\n', '<p>object instantiation<br />\r\n&nbsp;</p>\r\n', '<p>class instantiation</p>\r\n', '3', 35, 20, '4'),
(2506, '<p>Which one of the following property scopes is not supported by PHP?<br />\r\n&nbsp;</p>\r\n', '<p>friendly</p>\r\n', '<p>final<br />\r\n&nbsp;</p>\r\n', '<p>public<br />\r\n&nbsp;</p>\r\n', '<p>static</p>\r\n', '3', 35, 20, '1'),
(2507, '<p>Which one of the following can be used to instantiate an object in PHP assuming class name to be Foo?<br />\r\n&nbsp;</p>\r\n', '<p>$obj = new $foo;<br />\r\n&nbsp;</p>\r\n', '<p>$obj = new foo;<br />\r\n&nbsp;</p>\r\n', '<p>$obj = new foo ();<br />\r\n&nbsp;</p>\r\n', '<p>obj = new foo ();</p>\r\n', '3', 35, 20, '3'),
(2508, '<p>Which one of the following is the right way to define a constant?<br />\r\n&nbsp;</p>\r\n', '<p>constant PI = &ldquo;3.1415&rdquo;;<br />\r\n&nbsp;</p>\r\n', '<p>const $PI = &ldquo;3.1415&rdquo;;<br />\r\n&nbsp;</p>\r\n', '<p>constant PI = &lsquo;3.1415&rsquo;;<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>const PI = &lsquo;3.1415&rsquo;;</p>\r\n', '3', 35, 20, '4'),
(2509, '<p>Which one of the following is the right way to call a class constant, given that the class is mathFunction?<br />\r\n&nbsp;</p>\r\n', '<p>echo PI;<br />\r\n&nbsp;</p>\r\n', '<p>echo mathFunction-&gt;PI;<br />\r\n&nbsp;</p>\r\n', '<p>echo mathFunction::PI;<br />\r\n&nbsp;</p>\r\n', '<p>echo mathFunction=PI;</p>\r\n', '3', 35, 20, '3'),
(2510, '<p>Which one of the following is the right way to invoke a method?</p>\r\n', '<p>$object-&gt;methodName();<br />\r\n&nbsp;</p>\r\n', '<p>object-&gt;methodName();<br />\r\n&nbsp;</p>\r\n', '<p>object::methodName();<br />\r\n$object::methodName();</p>\r\n', '<p>$object::methodName();</p>\r\n', '3', 35, 20, '1'),
(2511, '<p>Which of the following is/are the right way to declare a method?<br />\r\ni) function functionName() { function body }<br />\r\nii) scope function functionName() { function body }<br />\r\niii) method methodName() { method body }<br />\r\niv) scope method methodName() { method body }<br />\r\n&nbsp;</p>\r\n', '<p>Only ii)<br />\r\n&nbsp;</p>\r\n', '<p>Only iv)</p>\r\n', '<p>i) and ii)<br />\r\n&nbsp;</p>\r\n', '<p>iii) and iv)</p>\r\n', '3', 35, 20, '3'),
(2512, '<p>Which of the following method scopes is/are not supported by PHP?<br />\r\ni) private<br />\r\nii) final<br />\r\niii) static<br />\r\niv) abstract<br />\r\n&nbsp;</p>\r\n', '<p>Only ii)<br />\r\n&nbsp;</p>\r\n', '<p>Only iv)</p>\r\n', '<p>ii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 35, 20, '4'),
(2513, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$cars = array(&quot;Volvo&quot;, &quot;BMW&quot;, &quot;Toyota&quot;);<br />\r\necho &quot;I like &quot; . $cars[0] . &quot;, &quot; . $cars[1] . &quot; and &quot; . $cars[2] . &quot;.&quot;;<br />\r\n?&gt;</p>\r\n', '<p>I like Volvo BMW and Toyota)<br />\r\n&nbsp;</p>\r\n', '<p>I like Volvo, BMW and Toyota)<br />\r\n&nbsp;</p>\r\n', '<p>I like Volvo, BMW and Toyota<br />\r\n&nbsp;</p>\r\n', '<p>I like. Volvo.,. BMW. and) Toyota)</p>\r\n', '3', 35, 20, '2'),
(2514, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$age = array(&quot;Peter&quot;=&gt;&quot;35&quot;, &quot;Ben&quot;=&gt;&quot;37&quot;, &quot;Joe&quot;=&gt;&quot;43&quot;);<br />\r\nprint_r(array_change_key_case($age, CASE_UPPER));<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [Peter] =&gt; 35 [Ben] =&gt; 37 [Joe] =&gt; 43 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [peter] =&gt; 35 [ben] =&gt; 37 [joe] =&gt; 43 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [PETER] =&gt; 35 [BEN] =&gt; 37 [JOE] =&gt; 43 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [PeTeR] =&gt; 35 [BeN] =&gt; 37 [Joe] =&gt; 43 )</p>\r\n', '3', 35, 20, '3'),
(2515, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$cars = array(&quot;Volvo&quot;, &quot;BMW&quot;, &quot;Toyota&quot;, &quot;Honda&quot;, &quot;Mercedes&quot;, &quot;Opel&quot;);<br />\r\nprint_r(array_chunk($cars, 2));<br />\r\n????????&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; Array ( [1] =&gt; Volvo [2] =&gt; BMW ) [1] =&gt; Array ( [1] =&gt; Toyota [2] =&gt; Honda ) [2] =&gt; Array ( [1] =&gt; Mercedes [2] =&gt; Opel ) )</p>\r\n', '<p>Array ( [1] =&gt; Array ( [1] =&gt; Volvo [2] =&gt; BMW ) [2] =&gt; Array ( [1] =&gt; Toyota [2] =&gt; Honda ) [3] =&gt; Array ( [1] =&gt; Mercedes [2] =&gt; Opel ) )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; Array ( [0] =&gt; Volvo [1] =&gt; Volvo ) [1] =&gt; Array ( [0] =&gt; BMW [1] =&gt; BMW ) [2] =&gt; Array ( [0] =&gt; Toyota [1] =&gt; Toyota ) )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; Array ( [0] =&gt; Volvo [1] =&gt; BMW ) [1] =&gt; Array ( [0] =&gt; Toyota [1] =&gt; Honda ) [2] =&gt; Array ( [0] =&gt; Mercedes [1] =&gt; Opel ) )</p>\r\n', '3', 35, 20, '4'),
(2516, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fname = array(&quot;Peter&quot;, &quot;Ben&quot;, &quot;Joe&quot;);<br />\r\n$age = array(&quot;35&quot;, &quot;37&quot;, &quot;43&quot;);<br />\r\n$c = array_combine($fname, $age);<br />\r\nprint_r($c);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( Peter Ben Joe )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [Peter] =&gt; 35 [Ben] =&gt; 37 [Joe] =&gt; 43 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( 35 37 43 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( &ldquo;[Peter] =&gt; 35&rdquo; &ldquo;[Ben] =&gt; 37&rdquo; &ldquo;[Joe] =&gt; 43&rdquo; )<br />\r\n&nbsp;</p>\r\n', '3', 35, 20, '2'),
(2517, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fname = array(&quot;Peter&quot;, &quot;Ben&quot;, &quot;Joe&quot;);<br />\r\n$age = array(&quot;35&quot;, &quot;37&quot;, &quot;43&quot;);<br />\r\n$c = array_combine($fname, $age);<br />\r\nprint_r($c);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( Peter Ben Joe )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [Peter] =&gt; 35 [Ben] =&gt; 37 [Joe] =&gt; 43 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( 35 37 43 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( &ldquo;[Peter] =&gt; 35&rdquo; &ldquo;[Ben] =&gt; 37&rdquo; &ldquo;[Joe] =&gt; 43&rdquo; )<br />\r\n&nbsp;</p>\r\n', '3', 35, 20, '2'),
(2518, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a = array(&quot;A&quot;, &quot;Cat&quot;, &quot;Dog&quot;, &quot;A&quot;, &quot;Dog&quot;);<br />\r\nprint_r(array_count_values($a));<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [A] =&gt; 2 [Cat] =&gt; 1 [Dog] =&gt; 2 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [A] =&gt; 2 [Cat] =&gt; 2 [Dog] =&gt; 1 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [A] =&gt; 1 [Cat] =&gt; 1 [Dog] =&gt; 2 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [A] =&gt; 2 [Cat] =&gt; 1 [Dog] =&gt; 1)</p>\r\n', '3', 35, 20, '1'),
(2519, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a1 = array(&quot;a&quot;=&gt;&quot;red&quot;, &quot;b&quot;=&gt;&quot;green&quot;, &quot;c&quot;=&gt;&quot;blue&quot;, &quot;d&quot;=&gt;&quot;yellow&quot;);<br />\r\n$a2 = array(&quot;e&quot;=&gt;&quot;red&quot;, &quot;f&quot;=&gt;&quot;green&quot;, &quot;g&quot;=&gt;&quot;blue&quot;);<br />\r\n$result = array_diff($a1, $a2);<br />\r\nprint_r($result);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [d] =&gt; yellow )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [c] =&gt; blue )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [a] =&gt; red )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [e] =&gt; yellow )</p>\r\n', '3', 35, 20, '1'),
(2520, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a1 = array_fill(3, 4, &quot;blue&quot;);<br />\r\n$b1 = array_fill(0, 1, &quot;red&quot;);<br />\r\nprint_r($a1);<br />\r\necho &quot;&lt;br&gt;&quot;;<br />\r\nprint_r($b1);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [3] =&gt; blue [4] =&gt; blue)<br />\r\nArray ( [0] =&gt; red )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [4] =&gt; blue [5] =&gt; blue [6] =&gt; blue)<br />\r\nArray ( [0] =&gt; red )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [3] =&gt; blue [4] =&gt; blue [5] =&gt; blue [6] =&gt; blue )<br />\r\nArray ()<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [3] =&gt; blue [4] =&gt; blue [5] =&gt; blue [6] =&gt; blue )<br />\r\nArray ( [0] =&gt; red )</p>\r\n', '3', 35, 20, '4'),
(2521, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a1 = array(&quot;red&quot;, &quot;green&quot;);<br />\r\n$a2 = array(&quot;blue&quot;, &quot;yellow&quot;);<br />\r\nprint_r(array_merge($a1, $a2));<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; red [1] =&gt; green)<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; blue [1] =&gt; yellow [2] =&gt; red [3] =&gt; green )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; red [1] =&gt; green [2] =&gt; blue [3] =&gt; yellow )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; blue [1] =&gt; yellow )</p>\r\n', '3', 35, 20, '3'),
(2522, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a = array(&quot;a&quot;=&gt;&quot;red&quot;, &quot;b&quot;=&gt;&quot;green&quot;, &quot;c&quot;=&gt;&quot;blue&quot;);<br />\r\necho array_shift($a);<br />\r\nprint_r ($a);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>green<br />\r\n&nbsp;</p>\r\n', '<p>red<br />\r\n&nbsp;</p>\r\n', '<p>blue<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 35, 20, '2'),
(2523, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a = array(&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;);<br />\r\narray_pop($a);<br />\r\nprint_r($a);<br />\r\n?&gt;</p>\r\n', '<p>Array ( [0] =&gt; red [1] =&gt; green )</p>\r\n', '<p>Array ( [0] =&gt; green [1] =&gt; blue )</p>\r\n', '<p>Array ( [0] =&gt; red [1] =&gt; blue )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; blue [1] =&gt; blue )</p>\r\n', '3', 35, 20, '1'),
(2524, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$age = array(&quot;Harry&quot; =&gt; &quot;21&quot;, &quot;Ron&quot; =&gt; &quot;23&quot;,&quot;Malfoy&quot; =&gt; &quot;21&quot;);<br />\r\narray_change_key_case($age, CASE_UPPER);<br />\r\narray_pop($age);<br />\r\nprint_r($age);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [Harry] =&gt; 21 [Ron] =&gt; 23 [Malfoy] =&gt; 21 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [HARRY] =&gt; 21 [RON] =&gt; 23 [MALFOY] =&gt; 21 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [HARRY] =&gt; 21 [RON] =&gt; 23 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [Harry] =&gt; 21 [Ron] =&gt; 23 )</p>\r\n', '3', 35, 20, '3'),
(2525, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a1 = array(&quot;a&quot; =&gt; &quot;red&quot;, &quot;b&quot; =&gt; &quot;green&quot;, &quot;c&quot; =&gt; &quot;blue&quot;, &quot;d&quot; =&gt; &quot;yellow&quot;);<br />\r\n$result = array_flip($a1);<br />\r\nprint_r($result);<br />\r\n?&gt;</p>\r\n', '<p>Array ( [red] =&gt; red [green] =&gt; green [blue] =&gt; blue [yellow] =&gt; yellow )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [a] =&gt; a [b] =&gt; b [c] =&gt; c [d] =&gt; d )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [red] =&gt; a [green] =&gt; b [blue] =&gt; c [yellow] =&gt; d )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [a] =&gt; red [b] =&gt; green [c] =&gt; blue [d] =&gt; yellow )</p>\r\n', '3', 35, 20, '3'),
(2526, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a1 = array(&quot;a&quot; =&gt; &quot;red&quot;, &quot;b&quot; =&gt; &quot;green&quot;, &quot;c&quot; =&gt; &quot;blue&quot;, &quot;d&quot; =&gt; &quot;yellow&quot;);<br />\r\n$a2 = array(&quot;e&quot; =&gt; &quot;red&quot;,&quot;f&quot; =&gt; &quot;green&quot;, &quot;g&quot; =&gt; &quot;blue&quot;);<br />\r\n$result = array_intersect($a1, $a2);<br />\r\nprint_r($result);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [a] =&gt; red [b] =&gt; green [c] =&gt; blue )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [a] =&gt; red [b] =&gt; green [c] =&gt; blue [d] =&gt; yellow )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [e] =&gt; red [f] =&gt; green [g] =&gt; blue )</p>\r\n', '<p>Array ( [a] =&gt; red [b] =&gt; green [c] =&gt; blue [d] =&gt; yellow [e] =&gt; red [f] =&gt; green [g] =&gt; blue )</p>\r\n', '3', 35, 20, '1'),
(2527, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a = array(12, 5, 2);<br />\r\necho(array_product($a));<br />\r\n?&gt;</p>\r\n', '<p>024<br />\r\n&nbsp;</p>\r\n', '<p>120<br />\r\n&nbsp;</p>\r\n', '<p>010<br />\r\n&nbsp;</p>\r\n', '<p>060</p>\r\n', '3', 35, 20, '2'),
(2528, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$a = array(&quot;a&quot; =&gt; &quot;Jaguar&quot;, &quot;b&quot; =&gt; &quot;Land Rover&quot;, &quot;c&quot; =&gt; &quot;Audi&quot;, &quot;d&quot; =&gt; &quot;Maseratti&quot;);<br />\r\necho array_search(&quot;Audi&quot;, $a);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a</p>\r\n', '<p>b<br />\r\n&nbsp;</p>\r\n', '<p>c<br />\r\n&nbsp;</p>\r\n', '<p>d</p>\r\n', '3', 35, 20, '3'),
(2529, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$city_west = array(&quot;NYC&quot;, &quot;London&quot;);<br />\r\n$city_east = array(&quot;Mumbai&quot;, &quot;Beijing&quot;);<br />\r\nprint_r(array_replace($city_west, $city_east));<br />\r\n?&gt;</p>\r\n', '<p>Array ( [1] =&gt; Mumbai [0] =&gt; Beijing )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; NYC [1] =&gt; London )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [1] =&gt; NYC [0] =&gt; London )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; Mumbai [1] =&gt; Beijing )</p>\r\n', '3', 35, 20, '4'),
(2530, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<p>&lt;?php<br />\r\n$people = array(&quot;Peter&quot;, &quot;Susan&quot;, &quot;Edmund&quot;, &quot;Lucy&quot;);<br />\r\necho pos($people);<br />\r\n?&gt;</p>\r\n', '<p>Lucy<br />\r\n&nbsp;</p>\r\n', '<p>Peter</p>\r\n', '<p>Susan</p>\r\n', '<p>Edmund</p>\r\n', '3', 35, 20, '2'),
(2531, '<p>What will be the output of the following PHP code ?</p>\r\n\r\n<pre>\r\n&lt;?php\r\n$age = array(&quot;Harry&quot; =&gt; &quot;21&quot;, &quot;Ron&quot; =&gt; &quot;19&quot;, &quot;Malfoy&quot; =&gt; &quot;23&quot;);\r\nksort($age);\r\nforeach($age as $x =&gt; $x_value)\r\n{\r\necho &quot;Key=&quot; . $x . &quot;, Value=&quot; . $x_value;\r\necho &quot;&lt;br&gt;&quot;;\r\n}\r\n?&gt;</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Key = Harry, Value = 21<br />\r\nKey = Ron, Value = 21<br />\r\nKey = Malfoy, Value = 23</p>\r\n', '<p>Key = Harry, Value = 21<br />\r\nKey = Ron, Value = 19<br />\r\nKey = Malfoy, Value = 23<br />\r\n&nbsp;</p>\r\n', '<p>Key = Harry, Value = 21<br />\r\nKey = Malfoy, Value = 23<br />\r\nKey = Ron, Value = 19<br />\r\n&nbsp;</p>\r\n', '<p>Key = Ron, Value = 19<br />\r\nKey = Harry, Value = 21<br />\r\nKey = Malfoy, Value = 23</p>\r\n', '3', 35, 20, '3'),
(2532, '<p>Which method scope prevents a method from being overridden by a subclass?</p>\r\n', '<p>Abstract</p>\r\n', '<p>Protected<br />\r\n&nbsp;</p>\r\n', '<p>Final</p>\r\n', '<p>Static</p>\r\n', '4', 50, 20, '3'),
(2533, '<p>Which of the following statements is/are true about Constructors in PHP?<br />\r\ni) PHP 4 introduced class constructors.<br />\r\nii) Constructors can accept parameters.<br />\r\niii) Constructors can call class methods or other functions.<br />\r\niv) Class constructors can call on other constructors.<br />\r\n&nbsp;</p>\r\n', '<p>ii) and iii)<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned<br />\r\n&nbsp;</p>\r\n', '<p>ii), iii) and iv)</p>\r\n', '4', 50, 20, '2'),
(2534, '<p>PHP recognizes constructors by the name..<br />\r\n&nbsp;</p>\r\n', '<p>classname()</p>\r\n', '<p>_construct()<br />\r\n&nbsp;</p>\r\n', '<p>function _construct()<br />\r\n&nbsp;</p>\r\n', '<p>function __construct()</p>\r\n', '4', 50, 20, '4'),
(2535, '<p>Which version of PHP introduced the instanceof keyword?</p>\r\n', '<p>PHP 4<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.3<br />\r\n&nbsp;</p>\r\n', '<p>PHP 6</p>\r\n', '4', 50, 20, '2'),
(2536, '<p>Which one of the following functions is used to determine whether a class exists?<br />\r\n&nbsp;</p>\r\n', '<p>exist()</p>\r\n', '<p>exist_class()<br />\r\n&nbsp;</p>\r\n', '<p>class_exist()<br />\r\n&nbsp;</p>\r\n', '<p>__exist()</p>\r\n', '4', 50, 20, '3'),
(2537, '<p>Which one of the following functions is used to determine object type?<br />\r\n&nbsp;</p>\r\n', '<p>obj_type()</p>\r\n', '<p>type()</p>\r\n', '<p>is_a()</p>\r\n', '<p>is_obj()</p>\r\n', '4', 50, 20, '3'),
(2538, '<p>Which one of the following keyword is used to inherit our subclass into a superclass?<br />\r\n&nbsp;</p>\r\n', '<p>extends</p>\r\n', '<p>implements<br />\r\n&nbsp;</p>\r\n', '<p>inherit</p>\r\n', '<p>include</p>\r\n', '4', 50, 20, '1'),
(2539, '<p>In the PHP code given below, what is/are the properties?</p>\r\n\r\n<p>&lt;?php<br />\r\nclass Example<br />\r\n{<br />\r\npublic $name;<br />\r\nfunction Sample()<br />\r\n{<br />\r\necho &quot;This is an example&quot;;<br />\r\n}<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>echo &ldquo;This is an example&rdquo;;<br />\r\n&nbsp;</p>\r\n', '<p>public $name;<br />\r\n&nbsp;</p>\r\n', '<p>class Example<br />\r\n&nbsp;</p>\r\n', '<p>function sample()</p>\r\n', '4', 50, 20, '2'),
(2540, '<p>Which keyword is used to refer to properties or methods within the class itself?<br />\r\n&nbsp;</p>\r\n', '<p>private<br />\r\n&nbsp;</p>\r\n', '<p>public<br />\r\n&nbsp;</p>\r\n', '<p>protected<br />\r\n&nbsp;</p>\r\n', '<p>$this</p>\r\n', '4', 50, 20, '4'),
(2541, '<p>Which keyword allows class members (methods and properties) to be used without needing to instantiate a new instance of the class?</p>\r\n', '<p>protected<br />\r\n&nbsp;</p>\r\n', '<p>final<br />\r\n&nbsp;</p>\r\n', '<p>static<br />\r\n&nbsp;</p>\r\n', '<p>private</p>\r\n', '4', 50, 20, '3'),
(2542, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fruits = array (&quot;mango&quot;, &quot;apple&quot;, &quot;pear&quot;, &quot;peach&quot;);<br />\r\n$fruits = array_flip($fruits);<br />\r\necho ($fruits[0]);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>mango<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '<p>peach</p>\r\n', '<p>0</p>\r\n', '4', 50, 20, '2'),
(2543, '<p>Which of the functions is used to sort an array in descending order?<br />\r\n&nbsp;</p>\r\n', '<p>sort()<br />\r\n&nbsp;</p>\r\n', '<p>asort()<br />\r\n&nbsp;</p>\r\n', '<p>rsort()<br />\r\n&nbsp;</p>\r\n', '<p>dsort()</p>\r\n', '4', 50, 20, '3'),
(2544, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fruits = array (&quot;mango&quot;, &quot;apple&quot;, &quot;peach&quot;, &quot;pear&quot;);<br />\r\n$fruits = asort ($fruits);<br />\r\nprintr ($fruits);<br />\r\n?&gt;</p>\r\n', '<p>Array ( [1] =&gt; apple [0] =&gt; mango [2] =&gt; peach [3] =&gt; pear )</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango [2] =&gt; peach [3] =&gt; pear )<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '<p>Array ( [1] =&gt; apple [0] =&gt; mango [3] =&gt; peach [2] =&gt; pear )</p>\r\n', '4', 50, 20, '1'),
(2545, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$arr = array (&quot;picture1.JPG&quot;, &quot;picture2.jpg&quot;,<br />\r\n&quot;Picture10.jpg&quot;, &quot;picture20.jpg&quot;);<br />\r\nsort($arr);<br />\r\nprint_r($arr);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; picture1.JPG [1] =&gt; Picture10.jpg [2] =&gt; picture2.jpg [3] =&gt; picture20.jpg )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; picture1.JPG [1] =&gt; picture2.jpg [2] =&gt; Picture10.jpg [3] =&gt; picture20.jpg )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; Picture10.jpg [1] =&gt; picture1.JPG [2] =&gt; picture2.jpg [3] =&gt; picture20.jpg )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; Picture10.jpg [1] =&gt; picture1.JPG [2] =&gt; picture20.jpg [3] =&gt; picture2.jpg )</p>\r\n', '4', 50, 20, '3'),
(2546, '<p>Which of the following function should be used?<br />\r\n&nbsp;</p>\r\n', '<p>dsort()<br />\r\n&nbsp;</p>\r\n', '<p>casesort()<br />\r\n&nbsp;</p>\r\n', '<p>natcasesort()<br />\r\n&nbsp;</p>\r\n', '<p>naturalsort()</p>\r\n', '4', 50, 20, '3'),
(2547, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$face = array (&quot;A&quot;, &quot;J&quot;, &quot;Q&quot;, &quot;K&quot;);<br />\r\n$number = array (&quot;2&quot;,&quot;3&quot;,&quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;);<br />\r\n$cards = array_merge ($face, $number);<br />\r\nprint_r ($cards);<br />\r\n?&gt;</p>\r\n', '<p>Array ( [0] =&gt; A [1] =&gt; J [2] =&gt; Q [3] =&gt; K [4] =&gt; 2 [5] =&gt; 3 [6] =&gt; 4 [7] =&gt; 5 [8] =&gt; 6 [9] =&gt; 7 [10] =&gt; 8 [11] =&gt; 9 [12] =&gt; 10 )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; A [1] =&gt; 2 [2] =&gt; J [3] =&gt; 3 [4] =&gt; Q [5] =&gt; 4 [6] =&gt; K [7] =&gt; 5 [8] =&gt; 6 [9] =&gt; 7 [10] =&gt; 8 [11] =&gt; 9 [12] =&gt; 10 )<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; 2 [1] =&gt; 3 [2] =&gt; 4 [3] =&gt; 5 [4] =&gt; 6 [5] =&gt; 7 [6] =&gt; 8 [7] =&gt; 9 [8] =&gt; 10 [9] =&gt; A [10] =&gt; J [11] =&gt; Q [12] =&gt; K )</p>\r\n', '4', 50, 20, '1'),
(2548, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fruits = array (&quot;apple&quot;, &quot;mango&quot;, &quot;peach&quot;, &quot;pear&quot;,<br />\r\n&quot;orange&quot;);<br />\r\n$subset = array_slice ($fruits, 2);<br />\r\nprint_r ($subset);<br />\r\n?&gt;</p>\r\n', '<p>Array ( [0] =&gt; peach )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango [2] =&gt; peach )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; peach [1] =&gt; pear [2] =&gt; orange )</p>\r\n', '4', 50, 20, '4'),
(2549, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$fruits = array (&quot;apple&quot;, &quot;mango&quot;, &quot;peach&quot;, &quot;pear&quot;,<br />\r\n&quot;orange&quot;);<br />\r\n$subset = array_splice ($fruits, 2);<br />\r\nprint_r ($fruits);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango [2] =&gt; peach )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; apple [1] =&gt; mango )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; pear [1] =&gt; orange )</p>\r\n', '4', 50, 20, '3'),
(2550, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$number = array (&quot;4&quot;, &quot;hello&quot;, 2);<br />\r\necho (array_sum ($number));<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>4hello2</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>6</p>\r\n', '4', 50, 20, '4'),
(2551, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$array1 = array (&quot;KA&quot;, &quot;LA&quot;, &quot;CA&quot;, &quot;MA&quot;, &quot;TA&quot;);<br />\r\n$array2 = array (&quot;KA&quot;, &quot;IA&quot;, &quot;CA&quot;, &quot;GA&quot;, &quot;TA&quot;);<br />\r\n$inter = array_intersect ($array1, $array2);<br />\r\nprint_r ($inter);<br />\r\n?&gt;</p>\r\n', '<p>Array ( [0] =&gt; KA [1] =&gt; LA [2] =&gt; CA [3] =&gt; MA [4] =&gt; TA [5] =&gt; IA [6] =&gt; GA )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; KA [2] =&gt; CA [4] =&gt; TA )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [1] =&gt; IA [3] =&gt; GA )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [1] =&gt; LA [3] =&gt; MA )</p>\r\n', '4', 50, 20, '2'),
(2552, '<p>How many error levels are available in PHP?<br />\r\n&nbsp;</p>\r\n', '<p>14<br />\r\n&nbsp;</p>\r\n', '<p>15<br />\r\n&nbsp;</p>\r\n', '<p>16<br />\r\n&nbsp;</p>\r\n', '<p>17</p>\r\n', '5', 65, 20, '3'),
(2553, '<p>What is the description of Error level E_ERROR?</p>\r\n', '<p>Fatal run-time error<br />\r\n&nbsp;</p>\r\n', '<p>Near-fatal error<br />\r\n&nbsp;</p>\r\n', '<p>Compile-time error<br />\r\n&nbsp;</p>\r\n', '<p>Fatal Compile-time error</p>\r\n', '5', 65, 20, '1'),
(2554, '<p>Which version of PHP introduced E_STRICT Error level?<br />\r\n&nbsp;</p>\r\n', '<p>PHP 4<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.2<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.3</p>\r\n', '5', 65, 20, '2'),
(2555, '<p>Which character do the error_reporting directive use to represent the logical operator NOT?<br />\r\n&nbsp;</p>\r\n', '<p>/</p>\r\n', '<p>!</p>\r\n', '<p>~<br />\r\n&nbsp;</p>\r\n', '<p>^</p>\r\n', '5', 65, 20, '3'),
(2556, '<p>Say you want to report error concerned about fatal run-time, fatal compile-time error and core error which statement would you use?<br />\r\n&nbsp;</p>\r\n', '<p>error_reporting = E_ALL<br />\r\n&nbsp;</p>\r\n', '<p>error_reporting = E_ERROR | E_PARSE | E_CORE_ERROR</p>\r\n', '<p>error_reporting = E_ERROR | E_COMPILE_WARNING | E_CORE_ERROR<br />\r\n&nbsp;</p>\r\n', '<p>error_reporting = E_ERROR | E_COMPILE_ERROR | E_CORE_ERROR</p>\r\n', '5', 65, 20, '4'),
(2557, '<p>Which version introduced the function error_get_last()?<br />\r\n&nbsp;</p>\r\n', '<p>PHP 4<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.2</p>\r\n', '<p>PHP 5.3</p>\r\n', '5', 65, 20, '3'),
(2558, '<p>Which of the following statements causes PHP to disregard repeated error messages that occur within the same file and on the same line?</p>\r\n', '<p>ignore_repeated_errors</p>\r\n', '<p>ignore_repeat_error<br />\r\n&nbsp;</p>\r\n', '<p>repeatedly_ignore_error</p>\r\n', '<p>repeated_error_ignore</p>\r\n', '5', 65, 20, '1'),
(2559, '<p>Which function initializes the constants necessary for using the openlog(), clodelog(), and syslog() functions?<br />\r\n&nbsp;</p>\r\n', '<p>define_variable()</p>\r\n', '<p>define_log_variable()<br />\r\n&nbsp;</p>\r\n', '<p>log_variable()<br />\r\n&nbsp;</p>\r\n', '<p>define_syslog_variable()</p>\r\n', '5', 65, 20, '4'),
(2560, '<p>Which logging option&rsquo;s description is, if an error occurs when writing to the syslog, send output to the system console?<br />\r\n&nbsp;</p>\r\n', '<p>LOG_CONS<br />\r\n&nbsp;</p>\r\n', '<p>LOG_NDELAY</p>\r\n', '<p>LOG_ODELAY<br />\r\n&nbsp;</p>\r\n', '<p>LOG_PERROR</p>\r\n', '5', 65, 20, '1'),
(2561, '<p>Which function is responsible for sending a custom message to the system log?<br />\r\n&nbsp;</p>\r\n', '<p>systemlog()<br />\r\n&nbsp;</p>\r\n', '<p>syslog()<br />\r\n&nbsp;</p>\r\n', '<p>log_system()<br />\r\n&nbsp;</p>\r\n', '<p>sys_log()</p>\r\n', '5', 65, 20, '2'),
(2562, '<p>Which version of PHP was added with Exception handling?<br />\r\n&nbsp;</p>\r\n', '<p>PHP 4<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.3<br />\r\n&nbsp;</p>\r\n', '<p>PHP 6</p>\r\n', '5', 65, 20, '2'),
(2563, '<p>How many methods are available for the exception class?<br />\r\n&nbsp;</p>\r\n', '<p>5<br />\r\n&nbsp;</p>\r\n', '<p>6<br />\r\n&nbsp;</p>\r\n', '<p>7</p>\r\n', '<p>8</p>\r\n', '5', 65, 20, '3'),
(2564, '<p>Which version added the method getPrevious()?<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>PHP 4<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.1<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.3</p>\r\n', '5', 65, 20, '4'),
(2565, '<p>Which of the following statements invoke the exception class?<br />\r\n&nbsp;</p>\r\n', '<p>throws new Exception();</p>\r\n', '<p>throw new Exception();<br />\r\n&nbsp;</p>\r\n', '<p>new Exception();<br />\r\n&nbsp;</p>\r\n', '<p>new throws Exception();</p>\r\n', '5', 65, 20, '2'),
(2566, '<p>Which one of the following is the right description for the method getMessage() ?<br />\r\n&nbsp;</p>\r\n', '<p>Returns the message if it is passed to the constructor.</p>\r\n', '<p>Returns the message if it is passed to the class.<br />\r\n&nbsp;</p>\r\n', '<p>Returns the message if it is passed to the file.<br />\r\n&nbsp;</p>\r\n', '<p>Returns the message if it is passed to the object</p>\r\n', '5', 65, 20, '1'),
(2567, '<p>You can extend the exception base class, but you cannot override any of the preceding methods because the are declared as..</p>\r\n', '<p>protected<br />\r\nfinal<br />\r\nc) static<br />\r\nd) private</p>\r\n', '<p>final<br />\r\n&nbsp;</p>\r\n', '<p>static<br />\r\n&nbsp;</p>\r\n', '<p>private</p>\r\n', '5', 65, 20, '2'),
(2568, '<p>What does SPL stand for?<br />\r\n&nbsp;</p>\r\n', '<p>Standard PHP Library<br />\r\n&nbsp;</p>\r\n', '<p>Source PHP Library<br />\r\n&nbsp;</p>\r\n', '<p>Standard PHP List</p>\r\n', '<p>Source PHP List</p>\r\n', '5', 65, 20, '1'),
(2569, '<p>How many predefined exceptions does SPL provide access to?<br />\r\n&nbsp;</p>\r\n', '<p>13<br />\r\n&nbsp;</p>\r\n', '<p>14<br />\r\n&nbsp;</p>\r\n', '<p>15<br />\r\n&nbsp;</p>\r\n', '<p>16</p>\r\n', '5', 65, 20, '1'),
(2570, '<p>Which of the following is/are not an exception?<br />\r\ni) BadFunctionCallException<br />\r\nii) BadMethodCallException<br />\r\niii) LogicException<br />\r\niv) DomainException<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned<br />\r\n&nbsp;</p>\r\n', '<p>Only iv)<br />\r\n&nbsp;</p>\r\n', '<p>iii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 65, 20, '4'),
(2571, '<p>which of the following is/are an exception?<br />\r\ni) OutOfBoundException<br />\r\nii) OutOfRangeException<br />\r\niii) OverflowException<br />\r\niv) UnderflowException<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned<br />\r\n&nbsp;</p>\r\n', '<p>i) and iii)</p>\r\n', '<p>i) and ii)<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 65, 20, '1'),
(2572, '<p>PHP has long supported two regular expression implementations known as ___ and ___.<br />\r\ni) Perl<br />\r\nii) PEAR<br />\r\niii) Pearl<br />\r\niv) POSIX</p>\r\n', '<p>i) and ii)<br />\r\n&nbsp;</p>\r\n', '<p>ii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>i) and iv)</p>\r\n', '<p>ii) and iii)</p>\r\n', '6', 70, 20, '3'),
(2573, '<p>Which one of the following regular expression matches any string containing zero or one p?<br />\r\n&nbsp;</p>\r\n', '<p>p+<br />\r\n&nbsp;</p>\r\n', '<p>p*<br />\r\n&nbsp;</p>\r\n', '<p>P?</p>\r\n', '<p>p#</p>\r\n', '6', 70, 20, '3'),
(2574, '<p>[:alpha:] can also be specified as..<br />\r\n&nbsp;</p>\r\n', '<p>[A-Za-z0-9]&nbsp;</p>\r\n', '<p>[A-za-z]</p>\r\n', '<p>[A-z]&nbsp;</p>\r\n', '<p>[a-z]&nbsp;</p>\r\n', '6', 70, 20, '2'),
(2575, '<p>How many functions does PHP offer for searching strings using POSIX style regular expression?<br />\r\n&nbsp;</p>\r\n', '<p>7<br />\r\n&nbsp;</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>9</p>\r\n', '<p>10</p>\r\n', '6', 70, 20, '1'),
(2576, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$username = &quot;jasoN&quot;;<br />\r\nif (ereg(&quot;([^a-z])&quot;,$username))<br />\r\necho &quot;Username must be all lowercase!&quot;;<br />\r\nelse<br />\r\necho &quot;Username is all lowercase!&quot;;<br />\r\n?&gt;</p>\r\n', '<p>Error</p>\r\n', '<p>Username must be all lowercase!<br />\r\n&nbsp;</p>\r\n', '<p>Username is all lowercase!<br />\r\n&nbsp;</p>\r\n', '<p>No Output is returned</p>\r\n', '6', 70, 20, '2'),
(2577, '<p>POSIX implementation was deprecated in which version of PHP?<br />\r\n&nbsp;</p>\r\n', '<p>PHP 4<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.2<br />\r\n&nbsp;</p>\r\n', '<p>PHP 5.3<br />\r\n&nbsp;</p>\r\n', '6', 70, 20, '4'),
(2578, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$text = &quot;this is\\tsome text that\\nwe might like to parse.&quot;;<br />\r\nprint_r(split(&quot;[\\n\\t]&quot;,$text));<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>this is some text that we might like to parse.<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; some text that [1] =&gt; we might like to parse. )</p>\r\n', '<p>Array ( [0] =&gt; this is [1] =&gt; some text that [2] =&gt; we might like to parse. )</p>\r\n', '<p>[0] =&gt; this is [1] =&gt; some text that [2] =&gt; we might like to parse.<br />\r\n&nbsp;</p>\r\n', '6', 70, 20, '4'),
(2579, '<p>Which of the following would be a potential match for the Perl-based regular expression /fo{2,4}/ ?<br />\r\ni) fol<br />\r\nii) fool<br />\r\niii) fooool<br />\r\niv) fooooool<br />\r\n&nbsp;</p>\r\n', '<p>Only i)<br />\r\n&nbsp;</p>\r\n', '<p>ii) and iii)<br />\r\n&nbsp;</p>\r\n', '<p>i), iii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>i) and iv)</p>\r\n', '6', 70, 20, '2'),
(2580, '<p>Which among the following is/are not a metacharacter?<br />\r\ni)/a<br />\r\nii)/A<br />\r\niii)/b<br />\r\niv)/B<br />\r\n&nbsp;</p>\r\n', '<p>Only i)<br />\r\n&nbsp;</p>\r\n', '<p>i) and iii)<br />\r\n&nbsp;</p>\r\n', '<p>ii), iii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>ii) and iv)</p>\r\n', '6', 70, 20, '1'),
(2581, '<p>How many functions does PHP offer for searching and modifying strings using Perl-compatible regular expressions.<br />\r\n&nbsp;</p>\r\n', '<p>7</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>9<br />\r\n&nbsp;</p>\r\n', '<p>10</p>\r\n', '7', 75, 20, '2'),
(2582, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$foods = array(&quot;pasta&quot;, &quot;steak&quot;, &quot;fish&quot;, &quot;potatoes&quot;);<br />\r\n$food = preg_grep(&quot;/^s/&quot;, $foods);<br />\r\nprint_r($food);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; pasta [1] =&gt; steak [2] =&gt; fish [3] =&gt; potatoes )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [3] =&gt; potatoes )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [1] =&gt; steak )<br />\r\n&nbsp;</p>\r\n', '<p>Array ( [0] =&gt; potatoes )</p>\r\n', '7', 75, 20, '3'),
(2583, '<p>Say we have two compare two strings which of the following function/functions can you use?<br />\r\ni) strcmp()<br />\r\nii) strcasecmp()<br />\r\niii) strspn()<br />\r\niv) strcspn()<br />\r\n&nbsp;</p>\r\n', '<p>i) and ii)</p>\r\n', '<p>iii) and iv)<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 75, 20, '4'),
(2584, '<p>Which one of the following functions will convert a string to all uppercase?<br />\r\n&nbsp;</p>\r\n', '<p>strtoupper()</p>\r\n', '<p>uppercase()<br />\r\n&nbsp;</p>\r\n', '<p>str_uppercase()<br />\r\n&nbsp;</p>\r\n', '<p>struppercase()</p>\r\n', '7', 75, 20, '1'),
(2585, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$title = &quot;O&#39;malley wins the heavyweight championship!&quot;;<br />\r\necho ucwords($title);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>O&rsquo;Malley Wins The Heavyweight Championship!<br />\r\n&nbsp;</p>\r\n', '<p>O&rsquo;malley Wins The Heavyweight Championship!<br />\r\n&nbsp;</p>\r\n', '<p>O&rsquo;Malley wins the heavyweight championship!<br />\r\n&nbsp;</p>\r\n', '<p>o&rsquo;malley wins the heavyweight championship!</p>\r\n', '7', 75, 20, '4'),
(2586, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\necho str_pad(&quot;Salad&quot;, 5).&quot; is good.&quot;;<br />\r\n?&gt;</p>\r\n', '<p>SaladSaladSaladSaladSalad is good</p>\r\n', '<p>is good SaladSaladSaladSaladSalad<br />\r\n&nbsp;</p>\r\n', '<p>is good Salad<br />\r\n&nbsp;</p>\r\n', '<p>Salad is good</p>\r\n', '7', 75, 20, '4'),
(2587, '<p>Which one of the following functions can be used to concatenate array elements to form a single delimited string?<br />\r\n&nbsp;</p>\r\n', '<p>explode()<br />\r\n&nbsp;</p>\r\n', '<p>implode()<br />\r\n&nbsp;</p>\r\n', '<p>concat()</p>\r\n', '<p>concatenate()</p>\r\n', '7', 75, 20, '2'),
(2588, '<p>Which one of the following functions finds the last occurrence of a string, returning its numerical position?</p>\r\n', '<p>strlastpos()<br />\r\n&nbsp;</p>\r\n', '<p>strpos()<br />\r\n&nbsp;</p>\r\n', '<p>strlast()<br />\r\n&nbsp;</p>\r\n', '<p>strrpos()</p>\r\n', '7', 75, 20, '4'),
(2589, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$author = &quot;nachiketh@example.com&quot;;<br />\r\n$author = str_replace(&quot;a&quot;,&quot;@&quot;,$author);<br />\r\necho &quot;Contact the author of this article at $author.&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Contact the author of this article at&nbsp;nachiketh@ex@mple.com<br />\r\n&nbsp;</p>\r\n', '<p>Cont@ct&nbsp;the @uthor of this @rticle @t&nbsp;n@chiketh@ex@mple.com<br />\r\n&nbsp;</p>\r\n', '<p>Contact the author of this article at&nbsp;n@chiketh@ex@mple.com<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '7', 75, 20, '3'),
(2590, '<p>What will be the output of the following PHP code?</p>\r\n\r\n<p>&lt;?php<br />\r\n$url = &quot;nachiketh@example.com&quot;;<br />\r\necho ltrim(strstr($url, &quot;@&quot;),&quot;@&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>nachiketh@example.com<br />\r\n&nbsp;</p>\r\n', '<p>nachiketh<br />\r\n&nbsp;</p>\r\n', '<p>nachiketh@<br />\r\n&nbsp;</p>\r\n', '<p>example.com</p>\r\n', '7', 75, 20, '4'),
(2591, '<p>The filesize() function returns the file size in ___.<br />\r\n&nbsp;</p>\r\n', '<p>bits<br />\r\n&nbsp;</p>\r\n', '<p>bytes<br />\r\n&nbsp;</p>\r\n', '<p>kilobytes<br />\r\n&nbsp;</p>\r\n', '<p>gigabytes</p>\r\n', '8', 80, 20, '2'),
(2592, '<p>Which one of the following PHP function is used to determine a file&rsquo;s last access time?<br />\r\n&nbsp;</p>\r\n', '<p>fileltime()</p>\r\n', '<p>filectime()<br />\r\n&nbsp;</p>\r\n', '<p>fileatime()<br />\r\n&nbsp;</p>\r\n', '<p>filetime()</p>\r\n', '8', 80, 20, '3'),
(2593, '<p>Which one of the following function is capable of reading a file into an array?</p>\r\n', '<p>file()<br />\r\n&nbsp;</p>\r\n', '<p>arrfile()<br />\r\n&nbsp;</p>\r\n', '<p>arr_file()<br />\r\n&nbsp;</p>\r\n', '<p>file_arr()</p>\r\n', '8', 80, 20, '1'),
(2594, '<p>Which one of the following function is capable of reading a file into a string variable?<br />\r\n&nbsp;</p>\r\n', '<p>file_contents()<br />\r\n&nbsp;</p>\r\n', '<p>file_get_contents()<br />\r\n&nbsp;</p>\r\n', '<p>file_content()<br />\r\n&nbsp;</p>\r\n', '<p>file_get_content()</p>\r\n', '8', 80, 20, '2'),
(2595, '<p>Which one of the following function is capable of reading a specific number of characters form a file?<br />\r\n&nbsp;</p>\r\n', '<p>fgets()<br />\r\n&nbsp;</p>\r\n', '<p>fget()<br />\r\n&nbsp;</p>\r\n', '<p>fileget()<br />\r\n&nbsp;</p>\r\n', '<p>filegets()</p>\r\n', '8', 80, 20, '1'),
(2596, '<p>Which one of the following function operates similarly to fgets(), except that it also strips any HTML and PHP tags form the input?<br />\r\n&nbsp;</p>\r\n', '<p>fgetsh()<br />\r\n&nbsp;</p>\r\n', '<p>fgetsp()<br />\r\n&nbsp;</p>\r\n', '<p>fgetsa()</p>\r\n', '<p>fgetss()</p>\r\n', '8', 80, 20, '4'),
(2597, '<p>Which one of the following function outputs the contents of a string variable to the specified resource?<br />\r\n&nbsp;</p>\r\n', '<p>filewrite()</p>\r\n', '<p>fwrite()<br />\r\n&nbsp;</p>\r\n', '<p>filewrites()</p>\r\n', '<p>fwrites()</p>\r\n', '8', 80, 20, '2'),
(2598, '<p>Which function sets the file filename&rsquo;s last-modified and last-accessed times?<br />\r\n&nbsp;</p>\r\n', '<p>sets()<br />\r\n&nbsp;</p>\r\n', '<p>set()<br />\r\n&nbsp;</p>\r\n', '<p>touch()<br />\r\n&nbsp;</p>\r\n', '<p>touched()</p>\r\n', '8', 80, 20, '3'),
(2599, '<p>Which function is useful when you want to output the executed command&rsquo;s result?<br />\r\n&nbsp;</p>\r\n', '<p>out_cmm()<br />\r\n&nbsp;</p>\r\n', '<p>out_system()<br />\r\n&nbsp;</p>\r\n', '<p>cmm()<br />\r\n&nbsp;</p>\r\n', '<p>system()</p>\r\n', '8', 80, 20, '4'),
(2600, '<p>Which one of the following function reads a directory into an Array?<br />\r\n&nbsp;</p>\r\n', '<p>scandir()<br />\r\n&nbsp;</p>\r\n', '<p>readdir()<br />\r\n&nbsp;</p>\r\n', '<p>scandirectory()<br />\r\n&nbsp;</p>\r\n', '<p>readdirectory()</p>\r\n', '8', 80, 20, '1'),
(2601, '<p>HTML is what type of language ?&nbsp;</p>\r\n', '<p>Scripting Language</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Markup Language</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Programming Language</p>\r\n', '<p>Network Protocol</p>\r\n', '1', 20, 15, '2'),
(2602, '<p>HTML uses&nbsp;</p>\r\n', '<p>User defined tags</p>\r\n', '<p>Pre-specified tags</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Fixed tags defined by the language</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Tags only for linking</p>\r\n', '1', 20, 15, '3'),
(2603, '<p>The year in which HTML was first proposed _______.<strong>&nbsp;</strong></p>\r\n', '<p>1990</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1980</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2000</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1995</p>\r\n', '1', 20, 15, '1'),
(2604, '<p>&nbsp;</p>\r\n\r\n<p>Fundamental HTML Block is known as ___________.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>HTML Body</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>HTML Tag</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>HTML Attribute</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>HTML Element</p>\r\n', '1', 20, 15, '2'),
(2605, '<p>&nbsp;</p>\r\n\r\n<p>Apart from &lt;b&gt; tag, what other tag makes text bold ?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;fat&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;strong&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;black&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;emp&gt;</p>\r\n', '1', 20, 15, '2'),
(2606, '<p>What is the full form of HTML?&nbsp;</p>\r\n', '<p>HyperText Markup Language</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hyper Teach Markup Language</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hyper Tech Markup Language</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '1', 20, 15, '1'),
(2607, '<p>Who is Known as the father of World Wide Web (WWW)?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Robert Cailliau</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Tim Thompson</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Charles Darwin</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Tim Berners-Lee</p>\r\n', '1', 20, 15, '4'),
(2608, '<p>What should be the first tag in any HTML document?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;head&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;title&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;html&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;document&gt;</p>\r\n', '1', 20, 15, '3'),
(2609, '<p>How can you make a bulleted list with numbers?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;dl&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;ol&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;list&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;ul&gt;</p>\r\n', '1', 20, 15, '2'),
(2610, '<p>&nbsp;</p>\r\n\r\n<p>What tag is used to display a picture in a HTML page?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>picture</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>image</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>img</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>src</p>\r\n', '1', 20, 15, '3'),
(2611, '<p>&nbsp;</p>\r\n\r\n<p>HTML web pages can be read and rendered by _________.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Compiler</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Server</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Web Browser</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Interpreter</p>\r\n', '1', 20, 15, '3'),
(2612, '<p>&nbsp;</p>\r\n\r\n<p>Which of the following is not a browser ?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Microsofts Bing</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Netscape Navigator</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Mozilla Firefox</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Opera</p>\r\n', '1', 20, 15, '1'),
(2613, '<p>&nbsp;</p>\r\n\r\n<p>Which HTML tag produces the biggest heading?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;h7&gt;</p>\r\n', '<p>&lt;h9&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;h4&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;h1&gt;</p>\r\n', '1', 20, 15, '4'),
(2614, '<p>&nbsp;</p>\r\n\r\n<p>HTML tags are surrounded by which type of brackets.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Curly</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Round</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Squart</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Angle</p>\r\n', '1', 20, 15, '4'),
(2615, '<p>&nbsp;</p>\r\n\r\n<p>Tags and test that are not directly displayed on the page are written in _____ section.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;head&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;title&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;body&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;html&gt;</p>\r\n', '1', 20, 15, '1'),
(2616, '<p>The common element which describe the web page, is ?</p>\r\n\r\n<p>&nbsp;\r\n<p>&nbsp;</p>\r\n</p>\r\n', '<p>heading</p>\r\n', '<p>paragraph</p>\r\n', '<p>list</p>\r\n', '<p>all of these</p>\r\n', '2', 30, 15, '4'),
(2617, '<p>HTML stands for?</p>\r\n', '<p>Hyper Text Markup Language</p>\r\n', '<p>High Text Markup Language</p>\r\n', '<p>Hyper Tabular Markup Language</p>\r\n', '<p>None of these</p>\r\n', '2', 30, 15, '1'),
(2618, '<p>which of the following tag is used to mark a begining of paragraph ?</p>\r\n', '<p>&lt;TD&gt;</p>\r\n', '<p>&lt;br&gt;</p>\r\n', '<p>&lt;P&gt;</p>\r\n', '<p>&lt;TR&gt;</p>\r\n', '2', 30, 15, '3'),
(2619, '<p>From which tag descriptive list starts ?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;LL&gt;</p>\r\n', '<p>&lt;DD&gt;</p>\r\n', '<p>&lt;DL&gt;</p>\r\n', '<p>&lt;DS&gt;</p>\r\n', '2', 30, 15, '3'),
(2620, '<p>Correct HTML tag for the largest heading is</p>\r\n', '<p>&lt;head&gt;</p>\r\n', '<p>&lt;h6&gt;</p>\r\n', '<p>&lt;heading&gt;</p>\r\n', '<p>&lt;h1&gt;</p>\r\n', '2', 30, 15, '4'),
(2621, '<p>The attribute of &lt;form&gt; tag</p>\r\n', '<p>Method</p>\r\n', '<p>Action</p>\r\n', '<p>Both (a)&amp;(b)</p>\r\n', '<p>None of these</p>\r\n', '2', 30, 15, '3'),
(2622, '<p>Markup tags tell the web browser</p>\r\n', '<p>How to organise the page</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>How to display the page</p>\r\n', '<p>How to display message box on page</p>\r\n', '<p>None of these</p>\r\n', '2', 30, 15, '2'),
(2623, '<p>www is based on which model?</p>\r\n', '<p>Local-server</p>\r\n', '<p>Client-server</p>\r\n', '<p>3-tier</p>\r\n', '<p>None of these</p>\r\n', '2', 30, 15, '2'),
(2624, '<p>What are Empty elements and is it valid?</p>\r\n', '<p>No, there is no such terms as Empty Element</p>\r\n', '<p>Empty elements are element with no data</p>\r\n', '<p>No, it is not valid to use Empty Element</p>\r\n', '<p>None of these</p>\r\n', '2', 30, 15, '2'),
(2625, '<p>Which of the following attributes of text box control allow to limit the maximum character?</p>\r\n', '<p>size</p>\r\n', '<p>len</p>\r\n', '<p>maxlength</p>\r\n', '<p>all of these</p>\r\n', '2', 30, 15, '3');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(2626, '<p>Web pages starts with which ofthe following tag?</p>\r\n', '<p>&lt;Body&gt;</p>\r\n', '<p>&lt;Title&gt;</p>\r\n', '<p>&lt;HTML&gt;</p>\r\n', '<p>&lt;Form&gt;</p>\r\n', '2', 30, 15, '3'),
(2627, '<p>HTML is a subset of</p>\r\n', '<p>SGMT</p>\r\n', '<p>SGML</p>\r\n', '<p>SGMD</p>\r\n', '<p>None of these</p>\r\n', '2', 30, 15, '2'),
(2628, '<p>Which of the following is a container?</p>\r\n', '<p>&lt;SELECT&gt;</p>\r\n', '<p>&lt;Value&gt;</p>\r\n', '<p>&lt;INPUT&gt;</p>\r\n', '<p>&lt;BODY&gt;</p>\r\n', '2', 30, 15, '1'),
(2629, '<p>The attribute, which define the relationship between current document and HREF&#39;ed URL is</p>\r\n', '<p>REL</p>\r\n', '<p>URL</p>\r\n', '<p>REV</p>\r\n', '<p>all of these</p>\r\n', '2', 30, 15, '1'),
(2630, '<p>&lt;DT&gt; tag is designed to fit a single line of our web page but &lt;DD&gt; tag will accept a</p>\r\n', '<p>line of text</p>\r\n', '<p>full paragraph</p>\r\n', '<p>word</p>\r\n', '<p>request</p>\r\n', '2', 30, 15, '2'),
(2631, '<p>Character encoding is</p>\r\n', '<p>method used to represent numbers in a&nbsp;character</p>\r\n', '<p>method used to represent character in a&nbsp;number</p>\r\n', '<p>a system that consists of a code which pairs each character with a&nbsp;pattern,sequence of natural numbers or electrical pulse in order to transmit the data</p>\r\n', '<p>none of these</p>\r\n', '2', 30, 15, '3'),
(2632, '<p>From which tag the descriptive list starts?</p>\r\n', '<p>&lt;LL&gt;</p>\r\n', '<p>&lt;DD&gt;</p>\r\n', '<p>&lt;DL&gt;</p>\r\n', '<p>&lt;DS&gt;</p>\r\n', '2', 30, 15, '3'),
(2633, '<p>Correct HTML to left align the content inside a table cell is</p>\r\n', '<p>&lt;tdleft&gt;</p>\r\n', '<p>&lt;td raligh = &quot;left&quot; &gt;</p>\r\n', '<p>&lt;td align = &quot;left&quot;&gt;</p>\r\n', '<p>&lt;td leftalign&gt;</p>\r\n', '2', 30, 15, '3'),
(2634, '<p>The tag which allows you to rest other HTML tags within the description is</p>\r\n', '<p>&lt;TH&gt;</p>\r\n', '<p>&lt;TD&gt;</p>\r\n', '<p>&lt;TR&gt;</p>\r\n', '<p>&lt;CAPTION&gt;</p>\r\n', '2', 30, 15, '4'),
(2635, '<p>&lt;Base&gt; tag is designed to appear only between</p>\r\n', '<p>&lt;HEAD&gt;</p>\r\n', '<p>&lt;TITLE&gt;</p>\r\n', '<p>&lt;BODY&gt;</p>\r\n', '<p>&lt;FORM&gt;</p>\r\n', '2', 30, 15, '1'),
(2636, '<p>If the two strings are identical, then strcmp() function returns<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>-1<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>true</p>\r\n', '3', 62, 4, '2'),
(2637, '<p>What will be the output?<br />\r\nvoid main(){<br />\r\n&nbsp;&nbsp;&nbsp; int a=10, b=20;<br />\r\n&nbsp;&nbsp;&nbsp; char x=1, y=0;<br />\r\n&nbsp;&nbsp;&nbsp; if(a,b,x,y){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;EXAM&quot;);<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n', '<p>XAM is printed</p>\r\n', '<p>exam is printed</p>\r\n', '<p>Compiler Error</p>\r\n', '<p>Nothing is printed</p>\r\n', '4', 72, 4, '4'),
(2638, '<p>The library function used to find the last occurrence of a character in a string is<br />\r\n&nbsp;</p>\r\n', '<p>laststr()<br />\r\n&nbsp;</p>\r\n', '<p>strstr()</p>\r\n', '<p>strnstr()<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>strrchr()</p>\r\n', '3', 45, 4, '4'),
(2639, '<p>Which of the following function is used to find the first occurrence of a given string in another string?<br />\r\n&nbsp;</p>\r\n', '<p>strchr()<br />\r\n&nbsp;</p>\r\n', '<p>strrchr()<br />\r\n&nbsp;</p>\r\n', '<p>strstr()<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>strnset()</p>\r\n', '3', 48, 4, '3'),
(2640, '<p>Which of the following function is more appropriate for reading in a multi-word string?</p>\r\n', '<p>scanf()<br />\r\n&nbsp;</p>\r\n', '<p>gets()<br />\r\n&nbsp;</p>\r\n', '<p>printf()<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>puts()</p>\r\n', '3', 46, 4, '2'),
(2642, '<p>What will be the output of the program ?<br />\r\n#include&lt;stdio.h&gt;<br />\r\n#include&lt;string.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; char str1[20] = &quot;Hello&quot;, str2[20] = &quot; World&quot;;<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%sn&quot;, strcpy(str2, strcat(str1, str2)));<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Hello World<br />\r\n&nbsp;</p>\r\n', '<p>World<br />\r\n&nbsp;</p>\r\n', '<p>WorldHello<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Hello</p>\r\n', '3', 62, 4, '1'),
(2643, '<p>What will be the output of the program ?</p>\r\n\r\n<p>include&lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; printf(5+&quot;Good Morningn&quot;);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Good Morning<br />\r\n&nbsp;</p>\r\n', '<p>Good<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Morning</p>\r\n', '<p>None of these</p>\r\n', '3', 63, 4, '3'),
(2644, '<p>What will be the output of the program ?<br />\r\n#include<br />\r\n#include<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; char str[] = &quot;Compu\\0Veda&quot;;<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%s&quot;, str);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Compu<br />\r\n&nbsp;</p>\r\n', '<p>Compu Veda</p>\r\n', '<p>Compu\\0Veda<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Veda</p>\r\n', '3', 65, 4, '1'),
(2645, '<p>What number will z in the sample code given below?<br />\r\nint z, x=5, y= -10, a=4, b=2;<br />\r\nz = x++ - --y*b/a;</p>\r\n', '<p>5</p>\r\n', '<p>6</p>\r\n', '<p>9</p>\r\n', '<p>10</p>\r\n', '4', 65, 4, '4'),
(2646, '<p>Which of the following correctly accesses the seventh element stored in arr, an array with 100 elements?<br />\r\n&nbsp;</p>\r\n', '<p>arr[6]<br />\r\n&nbsp;</p>\r\n', '<p>arr[7]<br />\r\n&nbsp;</p>\r\n', '<p>arr{6}<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>arr{7}</p>\r\n', '3', 50, 4, '1'),
(2647, '<p>What is the output of the following statements?<br />\r\nint i = 0;<br />\r\nprintf(&quot;%d %d&quot;, i, i++);</p>\r\n', '<p>0 1</p>\r\n', '<p>1 0</p>\r\n', '<p>0 0</p>\r\n', '<p>1 1</p>\r\n', '4', 65, 4, '2'),
(2648, '<p>What is the return value of the following statement if it is placed in C program? strcmp(&quot;ABC&quot;, &quot;ABC&quot;);<br />\r\n&nbsp;</p>\r\n', '<p>33<br />\r\n&nbsp;</p>\r\n', '<p>-1<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '3', 58, 4, '4'),
(2649, '<p>int a[5] = {1,2,3}<br />\r\nWhat is the value of a[4]?<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0</p>\r\n', '3', 65, 4, '4'),
(2650, '<p>What is the output of the following statements?<br />\r\nint b=15, c=5, d=8, e=8, a;<br />\r\na = b&gt;c ? c&gt;d ? 12 : d&gt;e ? 13 : 14 : 15;<br />\r\nprintf(&quot;%d&quot;, a);</p>\r\n', '<p>13</p>\r\n', '<p>14</p>\r\n', '<p>15</p>\r\n', '<p>12</p>\r\n', '4', 64, 4, '2'),
(2651, '<p>Which of the following operator takes only integer operands?<br />\r\n&nbsp;</p>\r\n', '<p>+<br />\r\n&nbsp;</p>\r\n', '<p>*<br />\r\n&nbsp;</p>\r\n', '<p>/<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>%</p>\r\n', '3', 46, 4, '4'),
(2652, '<p>What will be the output of the following code fragment?<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; printf(&quot;%x&quot;,-1&lt;&lt;4);<br />\r\n}</p>\r\n', '<p>fff0</p>\r\n', '<p>fff1</p>\r\n', '<p>fff2</p>\r\n', '<p>fff3</p>\r\n', '4', 63, 4, '1'),
(2653, '<p>In an expression involving || operator, evaluation<br />\r\nI.&nbsp;&nbsp; Will be stopped if one of its components evaluates to false<br />\r\nII.&nbsp; Will be stopped if one of its components evaluates to true<br />\r\nIII. Takes place from right to left<br />\r\nIV.&nbsp; Takes place from left to right<br />\r\n&nbsp;</p>\r\n', '<p>I and II<br />\r\n&nbsp;</p>\r\n', '<p>I and III<br />\r\n&nbsp;</p>\r\n', '<p>II and III<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>II and IV</p>\r\n', '3', 52, 4, '4'),
(2654, '<p>Determine output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=0, j=1, k=2, m;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m = i++ || j++ || k++;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d %d %d %d&quot;, m, i, j, k);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>1 1 2 3<br />\r\n&nbsp;</p>\r\n', '<p>1 1 2 2<br />\r\n&nbsp;</p>\r\n', '<p>0 1 2 2<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0 1 2 3</p>\r\n', '3', 56, 4, '2'),
(2655, '<p>Find the output of the following program.<br />\r\n#include<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; int y=10;<br />\r\n&nbsp;&nbsp; if(y++&gt;9 &amp;&amp; y++!=10 &amp;&amp; y++&gt;11)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, y);<br />\r\n&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, y);<br />\r\n}</p>\r\n', '<p>11</p>\r\n', '<p>12</p>\r\n', '<p>13</p>\r\n', '<p>14</p>\r\n', '4', 75, 4, '3'),
(2656, '<p>Determine output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int c = - -2;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;c=%d&quot;, c);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>-2<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error</p>\r\n', '3', 75, 4, '3'),
(2657, '<p>Determine output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=10;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = !i&gt;14;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;i=%d&quot;, i);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>10<br />\r\n&nbsp;</p>\r\n', '<p>14<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1</p>\r\n', '3', 58, 4, '3'),
(2658, '<p>Find the output of the following program.<br />\r\n#include&lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; int y=10;<br />\r\n&nbsp;&nbsp; if(y++&gt;9 &amp;&amp; y++!=11 &amp;&amp; y++&gt;11)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, y);<br />\r\n&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, y);<br />\r\n}</p>\r\n', '<p>11</p>\r\n', '<p>12</p>\r\n', '<p>13</p>\r\n', '<p>14</p>\r\n', '4', 65, 4, '2'),
(2659, '<p>In C programming language, which of the following type of operators have the highest precedence<br />\r\n&nbsp;</p>\r\n', '<p>Relational operators<br />\r\n&nbsp;</p>\r\n', '<p>Equality operators<br />\r\n&nbsp;</p>\r\n', '<p>Logical operators<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Arithmetic operators</p>\r\n', '3', 50, 4, '4'),
(2660, '<p>Determine output of the following program code.<br />\r\n#include&lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; int a, b=7;<br />\r\n&nbsp;&nbsp; a = b&lt;4 ? b&lt;&lt;1 : ++b&gt;4 ? 7&gt;&gt;1 : a;<br />\r\n&nbsp;&nbsp; printf(&quot;%d %d&quot;, a, b);<br />\r\n}</p>\r\n', '<p>3 7</p>\r\n', '<p>7 3</p>\r\n', '<p>8 3</p>\r\n', '<p>3 8</p>\r\n', '4', 70, 4, '4'),
(2661, '<p>What will be the output of the following program?<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a, b, c, d;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = 3;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b = 5;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c = a, b;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d = (a, b);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;c=%d d=%d&quot;, c, d);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>c=3 d=3<br />\r\n&nbsp;</p>\r\n', '<p>c=3 d=5</p>\r\n', '<p>c=5 d=3<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>c=5 d=5</p>\r\n', '3', 85, 4, '2'),
(2662, '<p>Which of the following comments about the ++ operator are correct?<br />\r\n&nbsp;</p>\r\n', '<p>It is a unary operator<br />\r\n&nbsp;</p>\r\n', '<p>The operand can come before or after the operator<br />\r\n&nbsp;</p>\r\n', '<p>It cannot be applied to an expression<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '3', 48, 4, '4'),
(2663, '<p>Choose the correct output for the following program.<br />\r\n#include&lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; int a=10, b=11, c=13, d;<br />\r\n&nbsp;&nbsp; d = (a=c, b+=a, c=a+b+c);<br />\r\n&nbsp;&nbsp; printf(&quot;%d %d %d %d&quot;, d, a, b, c);<br />\r\n}</p>\r\n', '<p>50, 13, 11, 13</p>\r\n', '<p>50, 13, 24, 50</p>\r\n', '<p>13, 10, 24, 50</p>\r\n', '<p>50, 13, 24, 13</p>\r\n', '4', 60, 4, '2'),
(2664, '<p>What will be the output of this program on an implementation where int occupies 2 bytes?<br />\r\n#include &lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i = 3;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int j;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = sizeof(++i + ++i);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;i=%d j=%d&quot;, i, j);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>i=4 j=2<br />\r\n&nbsp;</p>\r\n', '<p>i=3 j=2<br />\r\n&nbsp;</p>\r\n', '<p>i=5 j=2<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>the behavior is undefined</p>\r\n', '3', 65, 4, '2'),
(2665, '<p>Which operator has the lowest priority?<br />\r\n&nbsp;</p>\r\n', '<p>++<br />\r\n&nbsp;</p>\r\n', '<p>%<br />\r\n&nbsp;</p>\r\n', '<p>+<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>||</p>\r\n', '3', 35, 4, '4'),
(2666, '<p>Consider the following program fragment, and choose the correct one<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; int a, b = 2, c;<br />\r\n&nbsp;&nbsp; a = 2 * (b++);<br />\r\n&nbsp;&nbsp; c = 2 * (++b);<br />\r\n}</p>\r\n', '<p>a = 4, c = 8</p>\r\n', '<p>a = 3, c = 8</p>\r\n', '<p>b = 3, c = 6</p>\r\n', '<p>a = 4, c = 6</p>\r\n', '4', 75, 4, '1'),
(2667, '<p>Which of the following is a complete function?<br />\r\n&nbsp;</p>\r\n', '<p>int funct();<br />\r\n&nbsp;</p>\r\n', '<p>int funct(int x) { return x=x+1; }<br />\r\n&nbsp;</p>\r\n', '<p>void funct(int) { printf(&ldquo;Hello&quot;); }<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>void funct(x) { printf(&ldquo;Hello&quot;); }</p>\r\n', '5', 63, 4, '2'),
(2668, '<p>What will be printed when this program is executed?<br />\r\nint f(int x)<br />\r\n{<br />\r\n&nbsp;&nbsp; if(x &lt;= 4)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return x;<br />\r\n&nbsp;&nbsp; return f(--x);<br />\r\n}<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; printf(&quot;%d &quot;, f(7));<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>4 5 6 7<br />\r\n&nbsp;</p>\r\n', '<p>1 2 3 4</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Syntax error</p>\r\n', '5', 65, 4, '3'),
(2669, '<p>&nbsp;Which operator from the following has the lowest priority?<br />\r\n&nbsp;</p>\r\n', '<p>Assignment operator<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Division operator<br />\r\n&nbsp;</p>\r\n', '<p>Comma operator<br />\r\n&nbsp;</p>\r\n', '<p>Conditional operator</p>\r\n', '4', 30, 4, '3'),
(2670, '<p>The recursive functions are executed in a ...........<br />\r\n&nbsp;</p>\r\n', '<p>Parallel order<br />\r\n&nbsp;</p>\r\n', '<p>First In First Out order<br />\r\n&nbsp;</p>\r\n', '<p>Last In First Out order<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Iterative order</p>\r\n', '5', 62, 4, '3'),
(2671, '<p>The function scanf() returns .........<br />\r\n&nbsp;</p>\r\n', '<p>The actual values read for each argument.<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The number of successful read input values.</p>\r\n', '5', 50, 4, '4'),
(2672, '<p>Functions have ..........<br />\r\n&nbsp;</p>\r\n', '<p>Local scope<br />\r\n&nbsp;</p>\r\n', '<p>Block scope<br />\r\n&nbsp;</p>\r\n', '<p>File scope<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Function scope</p>\r\n', '5', 46, 4, '3'),
(2673, '<p>What will happen after compiling and running following code?<br />\r\nmain()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%p&quot;, main);<br />\r\n}</p>\r\n', '<p>Error</p>\r\n', '<p>Will make an infinite loop.</p>\r\n', '<p>Some address will be printed.</p>\r\n', '<p>None of these.</p>\r\n', '4', 75, 4, '3'),
(2674, '<p>Which of the following function calculates the square of &#39;x&#39; in C?<br />\r\n&nbsp;</p>\r\n', '<p>sqr(x)<br />\r\n&nbsp;</p>\r\n', '<p>pow(2, x)</p>\r\n', '<p>pow(x, 2)<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>power(2, x)</p>\r\n', '5', 47, 4, '3'),
(2675, '<p>When a function is recursively called all the automatic variables are stored in a ..........<br />\r\n&nbsp;</p>\r\n', '<p>Stack<br />\r\n&nbsp;</p>\r\n', '<p>Queue<br />\r\n&nbsp;</p>\r\n', '<p>Array<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Linked list</p>\r\n', '5', 47, 4, '1'),
(2676, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char far *farther, *farthest;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d..%d&quot;, sizeof(farther), sizeof(farthest));<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>4..2<br />\r\n&nbsp;</p>\r\n', '<p>2..2</p>\r\n', '<p>4..4<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2..4</p>\r\n', '5', 60, 4, '1'),
(2677, '<p>Use of functions</p>\r\n', '<p>Helps to avoid repeating a set of statements many times.<br />\r\n&nbsp;</p>\r\n', '<p>Enhances the logical clarity of the program.<br />\r\n&nbsp;</p>\r\n', '<p>Helps to avoid repeated programming across programs.<br />\r\n&nbsp;</p>\r\n', '<p>All of the above.</p>\r\n', '4', 50, 4, '4'),
(2678, '<p>Determine Output:<br />\r\nmain()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char *str1 = &quot;abcd&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char str2[] = &quot;abcd&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d %d %d&quot;, sizeof(str1), sizeof(str2), sizeof(&quot;abcd&quot;));<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>2 5 5<br />\r\n&nbsp;</p>\r\n', '<p>2 4 4<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>8 5 5<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2 4 5</p>\r\n', '5', 72, 4, '3'),
(2679, '<p>Choose the best answer.<br />\r\nPrior to using a pointer variable<br />\r\n&nbsp;</p>\r\n', '<p>It should be declared.</p>\r\n', '<p>It should be initialized.<br />\r\n&nbsp;</p>\r\n', '<p>It should be both declared and initialized.<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these.</p>\r\n', '5', 64, 4, '3'),
(2680, '<p>Any C program</p>\r\n', '<p>Must contain at least one function.<br />\r\n&nbsp;</p>\r\n', '<p>Need not contain any function.<br />\r\n&nbsp;</p>\r\n', '<p>Needs input data.<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '4', 33, 4, '1'),
(2681, '<p>Comment on the following pointer declaration?<br />\r\nint *ptr, p;<br />\r\n&nbsp;</p>\r\n', '<p>ptr is a pointer to integer, p is not.</p>\r\n', '<p>ptr and p, both are pointers to integer.<br />\r\n&nbsp;</p>\r\n', '<p>ptr is pointer to integer, p may or may not be.<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>ptr and p both are not pointers to integer.</p>\r\n', '5', 66, 4, '1'),
(2682, '<p>What will be the output?<br />\r\nmain()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char *p;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = &quot;Hello&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%cn&quot;,*&amp;*p);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Hello<br />\r\n&nbsp;</p>\r\n', '<p>H<br />\r\n&nbsp;</p>\r\n', '<p>Some address will be printed<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 77, 4, '2'),
(2683, '<p>What is function?</p>\r\n', '<p>Function is a block of statements that perform some specific task.<br />\r\n&nbsp;</p>\r\n', '<p>Function is the fundamental modular unit. A function is usually designed to perform a specific task.<br />\r\n&nbsp;</p>\r\n', '<p>Function is a block of code that performs a specific task. It has a name and it is reusable.<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '4', 50, 4, '4'),
(2684, '<p>Determine output:<br />\r\n#include &lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char *p = NULL;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char *q = 0;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(p)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot; p &quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;nullp&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(q)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;q&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot; nullq&quot;);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>p q<br />\r\n&nbsp;</p>\r\n', '<p>Depends on the compiler<br />\r\n&nbsp;</p>\r\n', '<p>x nullq where x can be p or nullp depending on the value of NULL<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>nullp nullq</p>\r\n', '5', 68, 4, '4'),
(2685, '<p>The address operator &amp;, cannot act on<br />\r\n&nbsp;</p>\r\n', '<p>R-values<br />\r\n&nbsp;</p>\r\n', '<p>Arithmetic expressions<br />\r\n&nbsp;</p>\r\n', '<p>Both of the above<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Local variables</p>\r\n', '5', 45, 4, '3'),
(2686, '<p>Determine output:<br />\r\nmain()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i = abc(10);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, --i);<br />\r\n}</p>\r\n\r\n<p>int abc(int i)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return(i++);<br />\r\n}</p>\r\n', '<p>10</p>\r\n', '<p>9</p>\r\n', '<p>11</p>\r\n', '<p>none of these</p>\r\n', '4', 65, 4, '2'),
(2687, '<p>The statement int **a;<br />\r\n&nbsp;</p>\r\n', '<p>is illegal<br />\r\n&nbsp;</p>\r\n', '<p>is legal but meaningless<br />\r\n&nbsp;</p>\r\n', '<p>is syntactically and semantically correct<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 50, 4, '3'),
(2688, '<p>The default parameter passing mechanism is</p>\r\n', '<p>call by value<br />\r\n&nbsp;</p>\r\n', '<p>call by reference<br />\r\n&nbsp;</p>\r\n', '<p>call by value result<br />\r\n&nbsp;</p>\r\n', '<p>None of these.</p>\r\n', '4', 40, 4, '1'),
(2689, '<p>What will be the output of the following program?<br />\r\n#include&lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i = 10;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void *p = &amp;i;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d\\n&quot;, (int)*p);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Compiler time error<br />\r\n&nbsp;</p>\r\n', '<p>Segmentation fault/runtime crash<br />\r\n&nbsp;</p>\r\n', '<p>10<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Undefined behavior</p>\r\n', '6', 60, 4, '1'),
(2690, '<p>What will be the output of the following program code?<br />\r\n#include<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i = 10;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void *p = &amp;i;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%f\\\\n&quot;, *(float *)p);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>10<br />\r\n&nbsp;</p>\r\n', '<p>0.000000<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '6', 65, 4, '3'),
(2691, '<p>What is the result of compiling and running this code?<br />\r\nmain()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char string[] = &quot;Hello World&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; display(string);<br />\r\n}</p>\r\n\r\n<p>void display(char *string)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%s&quot;, string);<br />\r\n}</p>\r\n', '<p>will print Hello World</p>\r\n', '<p>Compilation Error<br />\r\n&nbsp;</p>\r\n', '<p>will print garbage value<br />\r\n&nbsp;</p>\r\n', '<p>None of these.</p>\r\n', '4', 50, 4, '2'),
(2692, '<p>The operator &gt; and &lt; are meaningful when used with pointers, if<br />\r\n&nbsp;</p>\r\n', '<p>The pointers point to data of similar type.<br />\r\n&nbsp;</p>\r\n', '<p>The pointers point to structure of similar data type.<br />\r\n&nbsp;</p>\r\n', '<p>The pointers point to elements of the same array.<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these.</p>\r\n', '6', 48, 4, '3'),
(2693, '<p>Determine output:<br />\r\nmain()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i = 5;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d%d%d%d%d&quot;, i++, i--, ++i, --i, i);<br />\r\n}</p>\r\n', '<p>54544</p>\r\n', '<p>45445<br />\r\n&nbsp;</p>\r\n', '<p>54554<br />\r\n&nbsp;</p>\r\n', '<p>45545</p>\r\n', '4', 60, 4, '4'),
(2694, '<p>The declaration<br />\r\nint (*p) [5];<br />\r\nmeans<br />\r\n&nbsp;</p>\r\n', '<p>p is one dimensional array of size 5, of pointers to integers.<br />\r\n&nbsp;</p>\r\n', '<p>p is a pointer to a 5 elements integer array.</p>\r\n', '<p>The same as int *p[</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these.</p>\r\n', '6', 50, 4, '2'),
(2695, '<p>Comment on the following?<br />\r\nconst int *ptr;<br />\r\n&nbsp;</p>\r\n', '<p>We cannot change the value pointed by ptr.<br />\r\n&nbsp;</p>\r\n', '<p>We cannot change the pointer ptr itself.</p>\r\n', '<p>Both of the above<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>We can change the pointer as well as the value pointed by it.</p>\r\n', '6', 48, 4, '1'),
(2696, '<p>Pick the correct statements.<br />\r\nI.&nbsp;&nbsp; The body of a function should have only one return statement.<br />\r\nII.&nbsp; The body of a function may have many return statements.<br />\r\nIII. A function can return only one value to the calling environment.<br />\r\nIV. If return statement is omitted, then the function does its job but returns no value to the calling environment.</p>\r\n', '<p>I and II</p>\r\n', '<p>I and III<br />\r\n&nbsp;</p>\r\n', '<p>II and III<br />\r\n&nbsp;</p>\r\n', '<p>II and IV</p>\r\n', '4', 60, 4, '3'),
(2697, '<p>#include&lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int *ptr, a=10;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ptr = &amp;a;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *ptr += 1;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d, %d&quot;, *ptr, a);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>10, 10<br />\r\n&nbsp;</p>\r\n', '<p>10, 11</p>\r\n', '<p>11, 10<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>11, 11</p>\r\n', '6', 76, 4, '4'),
(2698, '<p>A function &#39;p&#39; that accepts a pointer to a character as argument and returns a pointer to an array of integer can be declared as<br />\r\n&nbsp;</p>\r\n', '<p>int(*p(char *))[]<br />\r\n&nbsp;</p>\r\n', '<p>int *p(char *)[]<br />\r\n&nbsp;</p>\r\n', '<p>int (*p) (char *)[]<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of these.</p>\r\n', '6', 50, 4, '1'),
(2699, '<p>What will be printed after compiling and running the following code?<br />\r\nmain()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; char *p;<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%d %d&quot;,sizeof(*p), sizeof(p));<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>1 1<br />\r\n&nbsp;</p>\r\n', '<p>1 2<br />\r\n&nbsp;</p>\r\n', '<p>2 1<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2 2</p>\r\n', '6', 65, 4, '2'),
(2700, '<p>Determine output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int const *p=5;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, ++(*p));<br />\r\n}</p>\r\n', '<p>6<br />\r\n&nbsp;</p>\r\n', '<p>5<br />\r\n&nbsp;</p>\r\n', '<p>Garbage Value<br />\r\n&nbsp;</p>\r\n', '<p>Compiler Error</p>\r\n', '7', 75, 4, '4'),
(2701, '<p>What will be the output of the following program code?<br />\r\n#include &lt;stdio.h&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; int i=3, *j, **k;<br />\r\n&nbsp;&nbsp;&nbsp; j = &amp;i;<br />\r\n&nbsp;&nbsp;&nbsp; k = &amp;j;<br />\r\n&nbsp;&nbsp;&nbsp; printf(&quot;%d%d%d&quot;, *j, **k, *(*k));<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>444<br />\r\n&nbsp;</p>\r\n', '<p>000<br />\r\n&nbsp;</p>\r\n', '<p>333<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>433</p>\r\n', '6', 75, 4, '3'),
(2702, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char s[]=&quot;man&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(i=0; s[i]; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%c%c%c%c &quot;, s[i], *(s+i), *(i+s), i[s]);<br />\r\n}</p>\r\n', '<p>mmm nnn aaa<br />\r\n&nbsp;</p>\r\n', '<p>mmmm nnnn aaaa<br />\r\n&nbsp;</p>\r\n', '<p>Compiler Error</p>\r\n', '<p>None of These</p>\r\n', '7', 78, 4, '2'),
(2703, '<p>Which of the following is the correct way of declaring a float pointer:</p>\r\n', '<p>float ptr;<br />\r\n&nbsp;</p>\r\n', '<p>float *ptr;<br />\r\n&nbsp;</p>\r\n', '<p>*float ptr;<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '6', 40, 4, '2'),
(2704, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static int var = 5;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d &quot;, var--);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(var)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; main();<br />\r\n}</p>\r\n', '<p>5 5 5 5 5<br />\r\n&nbsp;</p>\r\n', '<p>5 4 3 2 1<br />\r\n&nbsp;</p>\r\n', '<p>Infinite Loop<br />\r\n&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '7', 72, 4, '2'),
(2705, '<p>Find the output of the following program.<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; char *msg = &quot;hi&quot;;<br />\r\n&nbsp;&nbsp; printf(msg);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>hi<br />\r\n&nbsp;</p>\r\n', '<p>h</p>\r\n', '<p>hi followed by garbage value<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error</p>\r\n', '6', 66, 4, '1'),
(2706, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char *p;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d %d&quot;, sizeof(*p), sizeof(p));<br />\r\n}</p>\r\n', '<p>1 1<br />\r\n&nbsp;</p>\r\n', '<p>1 2<br />\r\n&nbsp;</p>\r\n', '<p>2 1<br />\r\n&nbsp;</p>\r\n', '<p>2 2</p>\r\n', '7', 74, 1, '2'),
(2707, '<p>Find the output of the following program.<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; int array[10];<br />\r\n&nbsp;&nbsp; int *i = &amp;array[2], *j = &amp;array[5];<br />\r\n&nbsp;&nbsp; int diff = j-i;<br />\r\n&nbsp;&nbsp; printf(&quot;%d&quot;, diff);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>6<br />\r\n&nbsp;</p>\r\n', '<p>Garbage value<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error</p>\r\n', '6', 70, 4, '1'),
(2708, '<p>Which of the following statements are true after execution of the program.<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; int a[10], i, *p;<br />\r\n&nbsp;&nbsp; a[0] = 1;<br />\r\n&nbsp;&nbsp; a[1] = 2;<br />\r\n&nbsp;&nbsp; p = a;<br />\r\n&nbsp;&nbsp; (*p)++;<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>a[1] = 3<br />\r\n&nbsp;</p>\r\n', '<p>a[0] = 2</p>\r\n', '<p>a[1] = 2<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a[0] = 3</p>\r\n', '6', 80, 4, '2'),
(2709, '<p>Determine the Final Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;\\nab&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;\\bsi&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;\\rha&quot;);<br />\r\n}</p>\r\n', '<p>absiha</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>asiha<br />\r\n&nbsp;</p>\r\n', '<p>haasi<br />\r\n&nbsp;</p>\r\n', '<p>hai</p>\r\n', '7', 78, 4, '4'),
(2710, '<p>What is the base data type of a pointer variable by which the memory would be allocated to it?<br />\r\n&nbsp;</p>\r\n', '<p>int<br />\r\n&nbsp;</p>\r\n', '<p>float</p>\r\n', '<p>No data type<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>unsigned int</p>\r\n', '6', 30, 4, '4'),
(2711, '<p>What would be the output for the following Turbo C code?<br />\r\n#include&lt;stdioh&gt;<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp; int a[]={ 1, 2, 3, 4, 5 }, *p;<br />\r\n&nbsp;&nbsp; p=a;<br />\r\n&nbsp;&nbsp; ++*p;<br />\r\n&nbsp;&nbsp; printf(&quot;%d &quot;, *p);<br />\r\n&nbsp;&nbsp; p += 2;<br />\r\n&nbsp;&nbsp; printf(&quot;%d&quot;, *p);<br />\r\n}</p>\r\n', '<p>2 4<br />\r\n&nbsp;</p>\r\n', '<p>3 4<br />\r\n&nbsp;</p>\r\n', '<p>2 2<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2 3</p>\r\n', '6', 80, 4, '4'),
(2712, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=10;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i=!i&gt;14;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;i=%d&quot;, i);<br />\r\n}</p>\r\n', '<p>10</p>\r\n', '<p>14</p>\r\n', '<p>0</p>\r\n', '<p>1</p>\r\n', '7', 72, 4, '3'),
(2713, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=5;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d%d%d%d%d&quot;, i++, i--, ++i, --i, i);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>45545<br />\r\n&nbsp;</p>\r\n', '<p>54544<br />\r\n&nbsp;</p>\r\n', '<p>55445<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>54554</p>\r\n', '8', 75, 4, '1'),
(2714, '<p>Determine Output:<br />\r\n#define square(x) x*x<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = 64/square(4);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, i);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>64<br />\r\n&nbsp;</p>\r\n', '<p>16<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '8', 68, 4, '2'),
(2715, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int c = - -2;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;c=%d&quot;, c);<br />\r\n}</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>-2<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '7', 63, 4, '3'),
(2716, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char *p=&quot;hi friends&quot;, *p1;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p1=p;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(*p!=&#39;\\0&#39;) ++*p++;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%s&quot;, p1);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>hi friends<br />\r\n&nbsp;</p>\r\n', '<p>ij!gsjfoet<br />\r\n&nbsp;</p>\r\n', '<p>hj grjeodt<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '8', 70, 4, '2'),
(2717, '<p>Determine Output:<br />\r\n#define int char<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i = 65;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;sizeof(i)=%d&quot;, sizeof(i));<br />\r\n}</p>\r\n', '<p>sizeof(i)=2<br />\r\n&nbsp;</p>\r\n', '<p>sizeof(i)=1<br />\r\n&nbsp;</p>\r\n', '<p>Compiler Error<br />\r\n&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '7', 68, 4, '2'),
(2718, '<p>Determine Output:<br />\r\n#include&lt;stdio.h&gt;<br />\r\n#define a 10<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #define a 50<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, a);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>50<br />\r\n&nbsp;</p>\r\n', '<p>10</p>\r\n', '<p>Compiler Error</p>\r\n', '<p>None of These</p>\r\n', '8', 80, 4, '1'),
(2719, '<p>Determine Output:<br />\r\n#define clrscr() 100<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; clrscr();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, clrscr());<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>100</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error</p>\r\n', '8', 60, 4, '3'),
(2720, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%p&quot;, main);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>make an infinite loop<br />\r\n&nbsp;</p>\r\n', '<p>Some address will be printed<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '8', 70, 4, '3'),
(2721, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char far *farther, *farthest;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d..%d&quot;, sizeof(farther), sizeof(farthest));<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>4..2<br />\r\n&nbsp;</p>\r\n', '<p>2..2<br />\r\n&nbsp;</p>\r\n', '<p>4..4<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2..4</p>\r\n', '8', 80, 4, '1'),
(2722, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char *p;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p=&quot;Hello&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%c&quot;, *&amp;*p);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>Hello<br />\r\n&nbsp;</p>\r\n', '<p>H<br />\r\n&nbsp;</p>\r\n', '<p>Some Address will be printed<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '8', 90, 4, '2'),
(2723, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=1;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(i&lt;=5)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, i);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(i&gt;2)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; goto here;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n}<br />\r\nfun()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; here:&nbsp; printf(&quot;PP&quot;);<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>12PP<br />\r\n&nbsp;</p>\r\n', '<p>12PP345<br />\r\n&nbsp;</p>\r\n', '<p>Compiler Error<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '8', 75, 4, '3'),
(2724, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=1, j=2;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch(i)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 1: printf(&quot;GOOD&quot;); break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case j: printf(&quot;BAD&quot;); break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>GOOD BAD<br />\r\n&nbsp;</p>\r\n', '<p>GOOD<br />\r\n&nbsp;</p>\r\n', '<p>Compiler Error<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '8', 90, 4, '3'),
(2725, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;, scanf(&quot;%d&quot;, &amp;i)); // value 10 is given as input here<br />\r\n}<br />\r\n&nbsp;</p>\r\n', '<p>10<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>Garbage Value<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '8', 80, 4, '2'),
(2726, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i=3;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch(i)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; default: printf(&quot;zero&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 1: printf(&quot;one&quot;); break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 2: printf(&quot;two&quot;); break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 3: printf(&quot;three&quot;); break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n', '<p>zero</p>\r\n', '<p>three<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '7', 72, 4, '2'),
(2727, '<p>Determine Output:<br />\r\nvoid main()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char string[]=&quot;Hello World&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; display(string);<br />\r\n}<br />\r\nvoid display(char *string)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%s&quot;, string);<br />\r\n}</p>\r\n', '<p>will print Hello World<br />\r\n&nbsp;</p>\r\n', '<p>Compiler Error<br />\r\n&nbsp;</p>\r\n', '<p>Can&#39;t Say<br />\r\n&nbsp;</p>\r\n', '<p>None of These</p>\r\n', '7', 72, 4, '2'),
(2728, '<p>If a directory does not include a default Web page, most Web servers will ______.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>display an error message<br />\r\n&nbsp;</p>\r\n', '<p>display a list of the directory&#39;s contents<br />\r\n&nbsp;</p>\r\n', '<p>display the web site&#39;s homepage<br />\r\n&nbsp;</p>\r\n', '<p>(a) or (b) depends on permissions set by web administrator</p>\r\n', '3', 30, 15, '4'),
(2729, '<p>Which is not a property of attribute Behaviour of &lt;Marquee&gt; tag?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>alternate<br />\r\n&nbsp;</p>\r\n', '<p>blur<br />\r\n&nbsp;</p>\r\n', '<p>scroll</p>\r\n', '<p>slide</p>\r\n', '3', 30, 15, '2'),
(2730, '<p>How can you create an e-mail link?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;mail href=&quot;a@b&quot;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;mail&gt;a@b&lt;/mail&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;a href=&quot;a@b&quot;&gt;</p>\r\n', '<p>&lt;a href=&quot;mailto:a@b.com&quot;&gt;</p>\r\n', '3', 30, 15, '4'),
(2731, '<p>Which of the following statement is / are true about a canvas?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>It is a rectangular area on an HTML page<br />\r\n&nbsp;</p>\r\n', '<p>By default it does have no borders and content</p>\r\n', '<p>Always specify the height and the width to define the size</p>\r\n', '<p>All of the above</p>\r\n', '3', 30, 15, '4'),
(2732, '<p>Which attribute is used to start a video automatically?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>submit<br />\r\n&nbsp;</p>\r\n', '<p>select<br />\r\n&nbsp;</p>\r\n', '<p>&lt;video&gt;<br />\r\n&nbsp;</p>\r\n', '<p>autoplay</p>\r\n', '3', 30, 15, '4'),
(2733, '<p>Which of the following is correct commenting form in HTML?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;&shy;&shy; and &shy;&shy;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;!&shy; and &shy;&shy;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;&shy;&shy; and &shy;!&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;&shy;! and &shy;&shy;&gt;</p>\r\n', '3', 30, 15, '2'),
(2734, '<p>What is empty element in HTML?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>An element with no tag<br />\r\n&nbsp;</p>\r\n', '<p>An element with no type<br />\r\n&nbsp;</p>\r\n', '<p>An element with no content</p>\r\n', '<p>An element with no comment</p>\r\n', '3', 30, 15, '3'),
(2735, '<p>What is the use of alt atribute in HTML?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>alt atribute specifies an alternate text for an image<br />\r\n&nbsp;</p>\r\n', '<p>alt atribute specifies an alternate link for an image<br />\r\n&nbsp;</p>\r\n', '<p>alt atribute specifies an alternate image for an image<br />\r\n&nbsp;</p>\r\n', '<p>alt atribute specifies an alternate source for an image</p>\r\n', '3', 30, 15, '1'),
(2736, '<p>What is CSS stands for?</p>\r\n', '<p>Color Style Sheets</p>\r\n', '<p>Cascade Sheets Style</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Cascade Style Sheet<br />\r\n&nbsp;</p>\r\n', '<p>Cascading Style Sheets</p>\r\n', '1', 15, 9, '4'),
(2737, '<p>In css what does &ldquo;font-size&rdquo; can be called as</p>\r\n', '<p>Selector<br />\r\n&nbsp;</p>\r\n', '<p>Rule<br />\r\n&nbsp;</p>\r\n', '<p>Property<br />\r\n&nbsp;</p>\r\n', '<p>Property-Name</p>\r\n', '1', 15, 9, '4'),
(2738, '<p>Which of the following tag is used to embed css in html page?</p>\r\n', '<p>&lt;script&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;style&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;css&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;!DOCTYPE html&gt;</p>\r\n', '1', 15, 9, '2'),
(2739, '<p>__________ implementation that introduced text, list, box, margin, border, color, and background properties.</p>\r\n', '<p>css<br />\r\n&nbsp;</p>\r\n', '<p>html<br />\r\n&nbsp;</p>\r\n', '<p>ajax<br />\r\n&nbsp;</p>\r\n', '<p>php</p>\r\n', '1', 15, 9, '1'),
(2740, '<p>&nbsp;___________ has a grammar but unlike traditional (X)HTML it is not defined with a document type definition.</p>\r\n', '<p>CSS 1<br />\r\n&nbsp;</p>\r\n', '<p>CSS 2<br />\r\n&nbsp;</p>\r\n', '<p>CSS 2.1<br />\r\n&nbsp;</p>\r\n', '<p>CSS 3</p>\r\n', '1', 15, 9, '3'),
(2741, '<p>What tag is used to link stylesheet to a html document?</p>\r\n', '<p>&lt;style&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;script&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;link&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;css&gt;</p>\r\n', '1', 15, 9, '3'),
(2742, '<p>What are the ways to apply CSS in a web page?</p>\r\n', '<p>Inline Styling<br />\r\n&nbsp;</p>\r\n', '<p>External Styling<br />\r\n&nbsp;</p>\r\n', '<p>Internal Styling<br />\r\n&nbsp;</p>\r\n', '<p>All of these</p>\r\n', '1', 15, 9, '4'),
(2743, '<p>What are the ways to define a color in html&nbsp;?</p>\r\n', '<p>Hex<br />\r\n&nbsp;</p>\r\n', '<p>RGB<br />\r\n&nbsp;</p>\r\n', '<p>Name<br />\r\n&nbsp;</p>\r\n', '<p>All of These</p>\r\n', '1', 15, 9, '4'),
(2744, '<p>Which of the following tag is used to linked information should be placed inside?</p>\r\n', '<p>&lt;head&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;html&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;div&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;body&gt;</p>\r\n', '1', 15, 9, '1'),
(2745, '<p>Which of the following tag can be used to embed a Document-wide styles in a document&rsquo;s head element?</p>\r\n', '<p>&lt;head&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;style&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;script&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;html&gt;</p>\r\n', '1', 15, 9, '2'),
(2746, '<p>Which of the following property sets the font size of text?</p>\r\n', '<p>Text-size<br />\r\n&nbsp;</p>\r\n', '<p>Font-size<br />\r\n&nbsp;</p>\r\n', '<p>Size<br />\r\n&nbsp;</p>\r\n', '<p>Text</p>\r\n', '1', 15, 9, '2'),
(2747, '<p>Which of the following is not a value for font-style property?</p>\r\n', '<p>Normal<br />\r\n&nbsp;</p>\r\n', '<p>Italic<br />\r\n&nbsp;</p>\r\n', '<p>Oblique<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 15, 9, '4'),
(2748, '<p>Which of the following CSS property is used to set the text formatting?</p>\r\n', '<p>Font<br />\r\n&nbsp;</p>\r\n', '<p>Font-style<br />\r\n&nbsp;</p>\r\n', '<p>Text-decoration<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '1', 15, 9, '3'),
(2749, '<p>Which of the following property adds padding to the top of an element?</p>\r\n', '<p>Height<br />\r\n&nbsp;</p>\r\n', '<p>Padding-height<br />\r\n&nbsp;</p>\r\n', '<p>Top<br />\r\n&nbsp;</p>\r\n', '<p>Padding-top</p>\r\n', '1', 15, 9, '4'),
(2750, '<p>Which of the following display property value treats the element as inline?</p>\r\n', '<p>Inline-block<br />\r\n&nbsp;</p>\r\n', '<p>List-item<br />\r\n&nbsp;</p>\r\n', '<p>Block<br />\r\n&nbsp;</p>\r\n', '<p>Inline&nbsp;</p>\r\n', '1', 15, 9, '4'),
(2751, '<p>Which of the following property sets a consistent margin on all four sides of the affected element?</p>\r\n', '<p>Border<br />\r\n&nbsp;</p>\r\n', '<p>Margin<br />\r\n&nbsp;</p>\r\n', '<p>Padding<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 15, 9, '2'),
(2752, '<p>What is the CSS Property Equivalent for the align attribute?</p>\r\n', '<p>float<br />\r\n&nbsp;</p>\r\n', '<p>text-align<br />\r\n&nbsp;</p>\r\n', '<p>centre<br />\r\n&nbsp;</p>\r\n', '<p>both (a) and (b)</p>\r\n', '1', 15, 9, '1'),
(2753, '<p>What is the latest version of css available?</p>\r\n', '<p>CSS2</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>CSS3<br />\r\n&nbsp;</p>\r\n', '<p>CSS3.1<br />\r\n&nbsp;</p>\r\n', '<p>CSS4</p>\r\n', '1', 15, 9, '2'),
(2754, '<p>Which of the following CSS property sets the opacity level for an element?</p>\r\n', '<p>opacity<br />\r\n&nbsp;</p>\r\n', '<p>transparency<br />\r\n&nbsp;</p>\r\n', '<p>transparent<br />\r\n&nbsp;</p>\r\n', '<p>all of the mentioned</p>\r\n', '1', 15, 9, '1'),
(2755, '<p>Which of the following property is used to draw a line around elements outside the borders?</p>\r\n', '<p>line<br />\r\n&nbsp;</p>\r\n', '<p>padding<br />\r\n&nbsp;</p>\r\n', '<p>outline<br />\r\n&nbsp;</p>\r\n', '<p>border</p>\r\n', '1', 15, 9, '3'),
(2756, '<p>Which of the following measurement defines a measurement in centimeters?</p>\r\n', '<p>c<br />\r\n&nbsp;</p>\r\n', '<p>cm<br />\r\n&nbsp;</p>\r\n', '<p>centi<br />\r\n&nbsp;</p>\r\n', '<p>centimeter</p>\r\n', '1', 15, 9, '2'),
(2757, '<p>Which of the following measurement defines a measurement relative to the height of a font?</p>\r\n', '<p>px<br />\r\n&nbsp;</p>\r\n', '<p>in<br />\r\n&nbsp;</p>\r\n', '<p>em<br />\r\n&nbsp;</p>\r\n', '<p>pt</p>\r\n', '1', 15, 9, '3'),
(2758, '<p>Which of the following measurement defines a measurement in points?</p>\r\n', '<p>px<br />\r\n&nbsp;</p>\r\n', '<p>in<br />\r\n&nbsp;</p>\r\n', '<p>em<br />\r\n&nbsp;</p>\r\n', '<p>pt</p>\r\n', '1', 15, 9, '4'),
(2759, '<p>Which of the following measurement defines a measurement in inches?</p>\r\n', '<p>px<br />\r\n&nbsp;</p>\r\n', '<p>in<br />\r\n&nbsp;</p>\r\n', '<p>em<br />\r\n&nbsp;</p>\r\n', '<p>pt</p>\r\n', '1', 15, 9, '2'),
(2760, '<p>Which of the following is the correct way to applying style to a document?</p>\r\n', '<p>Use an external style sheet, either by importing it or by linking to it<br />\r\n&nbsp;</p>\r\n', '<p>Directly embed a document-wide style in the head element of the document<br />\r\n&nbsp;</p>\r\n', '<p>Set an inline style rule using the style attribute directly on an element<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '1', 15, 9, '4'),
(2761, '<p>&lt;p style=&quot;color: red&quot;&gt;text&lt;/p&gt;</p>\r\n\r\n<p>What will happen in this case?</p>\r\n', '<p>make that specific paragraph red.<br />\r\n&nbsp;</p>\r\n', '<p>error<br />\r\n&nbsp;</p>\r\n', '<p>nothing happens<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '1', 15, 9, '1');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(2762, '<p>The _______property is used to set the color of the text.</p>\r\n', '<p>pallet<br />\r\n&nbsp;</p>\r\n', '<p>colour<br />\r\n&nbsp;</p>\r\n', '<p>color<br />\r\n&nbsp;</p>\r\n', '<p>text-decoration</p>\r\n', '1', 15, 9, '3'),
(2763, '<p>&lt;body style=&quot;background-color: lightcyan&quot;&gt;</p>\r\n\r\n<p>Which style is this?</p>\r\n', '<p>Inline Styles<br />\r\n&nbsp;</p>\r\n', '<p>External Style Sheet<br />\r\n&nbsp;</p>\r\n', '<p>External Style Sheettyle Sheet<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '1', 15, 9, '1'),
(2764, '<p>In css what does h1 can be called as</p>\r\n', '<p>Selector<br />\r\n&nbsp;</p>\r\n', '<p>Attribute<br />\r\n&nbsp;</p>\r\n', '<p>Value<br />\r\n&nbsp;</p>\r\n', '<p>Tag</p>\r\n', '2', 25, 9, '1'),
(2765, '<p>Which of the following attributes is used to specify elements to bind style rules to?</p>\r\n', '<p>Id<br />\r\n&nbsp;</p>\r\n', '<p>Class<br />\r\n&nbsp;</p>\r\n', '<p>Tag<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '2', 25, 9, '4'),
(2766, '<p>________ selectors, which are used to specify a rule to bind to a particular unique element</p>\r\n', '<p>Id<br />\r\n&nbsp;</p>\r\n', '<p>Class<br />\r\n&nbsp;</p>\r\n', '<p>Tag<br />\r\n&nbsp;</p>\r\n', '<p>Both (b) and (c)</p>\r\n', '2', 25, 9, '1'),
(2767, '<p>Value of the color attribute for using the colour Red should be:</p>\r\n', '<p>red<br />\r\n&nbsp;</p>\r\n', '<p>rgb(255, 0, 0)<br />\r\n&nbsp;</p>\r\n', '<p>#ff0000<br />\r\n&nbsp;</p>\r\n', '<p>All of these</p>\r\n', '2', 25, 9, '4'),
(2768, '<p>Which of the following value is supposed to be a slightly bolder weight that standard bold in font attribute?</p>\r\n', '<p>Empasize<br />\r\n&nbsp;</p>\r\n', '<p>Light<br />\r\n&nbsp;</p>\r\n', '<p>Lighter<br />\r\n&nbsp;</p>\r\n', '<p>Dark</p>\r\n', '2', 25, 9, '4'),
(2769, '<p>Which of the following sets the color of any text decoration, such as underlines, overlines, and strike throughs?</p>\r\n', '<p>Text-font<br />\r\n&nbsp;</p>\r\n', '<p>Text-format<br />\r\n&nbsp;</p>\r\n', '<p>Text-color<br />\r\n&nbsp;</p>\r\n', '<p>Text-decoration-color</p>\r\n', '2', 25, 9, '4'),
(2770, '<p>p {line-height: 150%;}.What type of selector is used in this case?</p>\r\n', '<p>Class Selectors<br />\r\n&nbsp;</p>\r\n', '<p>Element Selectors<br />\r\n&nbsp;</p>\r\n', '<p>Id Selectors<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 25, 9, '2'),
(2771, '<p>By applying an ___________ a style can be applied to just a single tag.</p>\r\n', '<p>Class rule<br />\r\n&nbsp;</p>\r\n', '<p>Element rule<br />\r\n&nbsp;</p>\r\n', '<p>Id rule<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 25, 9, '3'),
(2772, '<p>Which of the following is not an Absolute Unit?</p>\r\n', '<p>px<br />\r\n&nbsp;</p>\r\n', '<p>em<br />\r\n&nbsp;</p>\r\n', '<p>pt<br />\r\n&nbsp;</p>\r\n', '<p>mm</p>\r\n', '2', 25, 9, '2'),
(2773, '<p>Which of the following is not an Absolute Unit?</p>\r\n', '<p>px<br />\r\n&nbsp;</p>\r\n', '<p>em<br />\r\n&nbsp;</p>\r\n', '<p>pt<br />\r\n&nbsp;</p>\r\n', '<p>mm</p>\r\n', '2', 25, 9, '2'),
(2774, '<p>Which of the following attribute specifies the URL of the linked resource?</p>\r\n', '<p>src<br />\r\n&nbsp;</p>\r\n', '<p>link<br />\r\n&nbsp;</p>\r\n', '<p>rel<br />\r\n&nbsp;</p>\r\n', '<p>href</p>\r\n', '2', 25, 9, '4'),
(2775, '<p>Which of the following property allows long words to be able to be broken and wrap onto the next line?</p>\r\n', '<p>line-wrap<br />\r\n&nbsp;</p>\r\n', '<p>break-word<br />\r\n&nbsp;</p>\r\n', '<p>word-wrap<br />\r\n&nbsp;</p>\r\n', '<p>word-break</p>\r\n', '2', 25, 9, '3'),
(2776, '<p>What property is used to align text?</p>\r\n', '<p>text-align<br />\r\n&nbsp;</p>\r\n', '<p>float<br />\r\n&nbsp;</p>\r\n', '<p>text-position<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '2', 25, 9, '1'),
(2777, '<p>Which of the following property specifies the color of an outline?</p>\r\n', '<p>color-outline<br />\r\n&nbsp;</p>\r\n', '<p>outline-color<br />\r\n&nbsp;</p>\r\n', '<p>outline-style-color<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '2', 25, 9, '2'),
(2778, '<p>Which of the following property sets list-style-type, list-style-position, and liststyle-image?</p>\r\n', '<p>style<br />\r\n&nbsp;</p>\r\n', '<p>list-style<br />\r\n&nbsp;</p>\r\n', '<p>menu-style<br />\r\n&nbsp;</p>\r\n', '<p>img-style</p>\r\n', '2', 25, 9, '2'),
(2779, '<p>Which of the following property influences the horizontal alignment of an element, making it &ldquo;float&rdquo; toward the left or right margin of its containing element?</p>\r\n', '<p>float<br />\r\n&nbsp;</p>\r\n', '<p>float-left<br />\r\n&nbsp;</p>\r\n', '<p>float-right<br />\r\n&nbsp;</p>\r\n', '<p>float-align</p>\r\n', '2', 25, 9, '1'),
(2780, '<p>Which of the following property defines in a shorthand form the width, style, and color for the bottom border of an element?</p>\r\n', '<p>border-bottom<br />\r\n&nbsp;</p>\r\n', '<p>border-bottom-color<br />\r\n&nbsp;</p>\r\n', '<p>border-bottom-all<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '2', 25, 9, '1'),
(2781, '<p>Which of the following measurement defines a measurement relative to a font&rsquo;s x-height?</p>\r\n', '<p>e<br />\r\n&nbsp;</p>\r\n', '<p>xh<br />\r\n&nbsp;</p>\r\n', '<p>ex<br />\r\n&nbsp;</p>\r\n', '<p>rxh</p>\r\n', '2', 25, 9, '3'),
(2782, '<p>Which of the following measurement is relative to 1 percentage of the width of the viewport?</p>\r\n', '<p>vw<br />\r\n&nbsp;</p>\r\n', '<p>vmax<br />\r\n&nbsp;</p>\r\n', '<p>vmin<br />\r\n&nbsp;</p>\r\n', '<p>ch</p>\r\n', '2', 25, 9, '1'),
(2783, '<p>The __________ property specifies the type of positioning method used for an element.</p>\r\n', '<p>align<br />\r\n&nbsp;</p>\r\n', '<p>float<br />\r\n&nbsp;</p>\r\n', '<p>position<br />\r\n&nbsp;</p>\r\n', '<p>padding</p>\r\n', '2', 25, 9, '3'),
(2784, '<p>Which of the following property specifies the transparency of an element?</p>\r\n', '<p>alpha<br />\r\n&nbsp;</p>\r\n', '<p>opacity<br />\r\n&nbsp;</p>\r\n', '<p>opac<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '2', 25, 9, '2'),
(2785, '<p>What rule is used to make any styling a must in a web page?</p>\r\n', '<p>@important<br />\r\n&nbsp;</p>\r\n', '<p>!absolute<br />\r\n&nbsp;</p>\r\n', '<p>!important</p>\r\n', '<p>None of these</p>\r\n', '2', 25, 9, '3'),
(2786, '<p>Which of the following are the background properties in CSS?</p>\r\n\r\n<p>i) background-color ii) background-image iii) background-repeat<br />\r\niv) background-position v) background</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i, ii, iii and iv only<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, iii and v only<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, iv and v only<br />\r\n&nbsp;</p>\r\n', '<p>All of them</p>\r\n', '2', 25, 9, '4'),
(2787, '<p>The ..................... specifies whether a border should be solid, dashed line, doted line, double line, groove etc.</p>\r\n', '<p>border-layout<br />\r\n&nbsp;</p>\r\n', '<p>border-decoration<br />\r\n&nbsp;</p>\r\n', '<p>border-style<br />\r\n&nbsp;</p>\r\n', '<p>border-weight</p>\r\n', '2', 25, 9, '4'),
(2788, '<p>What measurements can we use to give size in a relative respect.</p>\r\n', '<p>%<br />\r\n&nbsp;</p>\r\n', '<p>em<br />\r\n&nbsp;</p>\r\n', '<p>in<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b</p>\r\n', '2', 25, 10, '4'),
(2789, '<p>State True of False for the CSS table properties.<br />\r\ni) The border-spacing specifies the width that should appear between table rows.<br />\r\nii) The empty-cells specifies whether the border should be shown if a cell is empty.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-True, ii-False<br />\r\n&nbsp;</p>\r\n', '<p>i-False, ii-True<br />\r\n&nbsp;</p>\r\n', '<p>i-True, ii-True<br />\r\n&nbsp;</p>\r\n', '<p>i-False, ii-False</p>\r\n', '2', 25, 9, '2'),
(2790, '<p>Which of the following is correct CSS syntex for using font property?</p>\r\n', '<p>&lt;p style=&quot;font: italic, bold, 15px;&quot;&gt; ................ &lt;/p&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;p style=&quot;font-style: italic font-weight: bold font-size: 15px;&quot;&gt; ................... &lt;/p&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;p style=&quot;font: italic bold 15px;&quot;&gt; ....................... &lt;/p&gt;<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '2', 25, 9, '3'),
(2791, '<p>The ...................... property allows to specify how much space appear between the content of an element and it&#39;s border.</p>\r\n', '<p>Spacing<br />\r\n&nbsp;</p>\r\n', '<p>Marking<br />\r\n&nbsp;</p>\r\n', '<p>Padding<br />\r\n&nbsp;</p>\r\n', '<p>Content-border</p>\r\n', '2', 25, 9, '3'),
(2792, '<p>In css what does &ldquo;color:red&rdquo; can be called as</p>\r\n', '<p>Selector<br />\r\n&nbsp;</p>\r\n', '<p>Rule<br />\r\n&nbsp;</p>\r\n', '<p>Declaration<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 35, 9, '3'),
(2793, '<p>_________ selectors, which are used to specify a group of elements</p>\r\n', '<p>id<br />\r\n&nbsp;</p>\r\n', '<p>class<br />\r\n&nbsp;</p>\r\n', '<p>tag<br />\r\n&nbsp;</p>\r\n', '<p>both (b) and (c)</p>\r\n', '3', 35, 9, '2'),
(2794, '<p>Which of the following property defines labels for a list of items?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>list-style-type<br />\r\n&nbsp;</p>\r\n', '<p>list-style-image<br />\r\n&nbsp;</p>\r\n', '<p>list-style<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 35, 9, '1'),
(2795, '<p>Which of the following property sets the amount of spacing between letters?</p>\r\n', '<p>space<br />\r\n&nbsp;</p>\r\n', '<p>line-height<br />\r\n&nbsp;</p>\r\n', '<p>letter-spacing<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 35, 9, '3'),
(2796, '<p>Which of the following property sets a variation of the specified or default font family?</p>\r\n', '<p>height<br />\r\n&nbsp;</p>\r\n', '<p>font-weight<br />\r\n&nbsp;</p>\r\n', '<p>default<br />\r\n&nbsp;</p>\r\n', '<p>font-variant</p>\r\n', '3', 35, 9, '4'),
(2797, '<p>Which of the following is not a appropriate value for font-variant property?</p>\r\n', '<p>inherit<br />\r\n&nbsp;</p>\r\n', '<p>default<br />\r\n&nbsp;</p>\r\n', '<p>large-caps<br />\r\n&nbsp;</p>\r\n', '<p>small-caps</p>\r\n', '3', 35, 9, '3'),
(2798, '<p>Which of the following property adjusts the font-size of the fallback fonts defined with font-family, so that the x-height is the same no matter what font is used?</p>\r\n', '<p>default<br />\r\n&nbsp;</p>\r\n', '<p>font-size-fallback<br />\r\n&nbsp;</p>\r\n', '<p>font-adjust<br />\r\n&nbsp;</p>\r\n', '<p>font-size-adjust</p>\r\n', '3', 35, 9, '4'),
(2799, '<p>Which of the following sets what kind of line decorations are added to an element, such as underlines, overlines, etc?</p>\r\n', '<p>text-style<br />\r\n&nbsp;</p>\r\n', '<p>text-decoration<br />\r\n&nbsp;</p>\r\n', '<p>text-line<br />\r\n&nbsp;</p>\r\n', '<p>text-decoration-line</p>\r\n', '3', 35, 9, '1'),
(2800, '<p>Which of the following visibility property value is described by &#39;The element is not visible&#39;, but the layout of surrounding elements is not affected?</p>\r\n', '<p>visible<br />\r\n&nbsp;</p>\r\n', '<p>hidden<br />\r\n&nbsp;</p>\r\n', '<p>collapse<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 35, 9, '2'),
(2801, '<p>The _____________ attribute is used to define the name(s) of the class(es) to which a particular tag belongs.</p>\r\n', '<p>Class<br />\r\n&nbsp;</p>\r\n', '<p>Element<br />\r\n&nbsp;</p>\r\n', '<p>Id<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 35, 9, '1'),
(2802, '<p>Which of the following property sets in a shorthand form any or all background properties?</p>\r\n', '<p>color<br />\r\n&nbsp;</p>\r\n', '<p>wrap<br />\r\n&nbsp;</p>\r\n', '<p>background<br />\r\n&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '3', 35, 9, '3'),
(2803, '<p>Which of the following color has this value #ff0000?</p>\r\n', '<p>blue<br />\r\n&nbsp;</p>\r\n', '<p>green<br />\r\n&nbsp;</p>\r\n', '<p>red<br />\r\n&nbsp;</p>\r\n', '<p>yellow</p>\r\n', '3', 35, 9, '3'),
(2804, '<p>What is the CSS Extension Prefixes for WebKit?</p>\r\n', '<p>-webkit<br />\r\n&nbsp;</p>\r\n', '<p>-o-<br />\r\n&nbsp;</p>\r\n', '<p>-web<br />\r\n&nbsp;</p>\r\n', '<p>-chrome</p>\r\n', '3', 35, 10, '1'),
(2805, '<p>Which of the following property converts text to initial capitals, all uppercase, or all lowercase?</p>\r\n', '<p>text-transform<br />\r\n&nbsp;</p>\r\n', '<p>text-case<br />\r\n&nbsp;</p>\r\n', '<p>text-decoration<br />\r\n&nbsp;</p>\r\n', '<p>text-uppercase</p>\r\n', '3', 35, 9, '1'),
(2806, '<p>Which of the following property controls how spaces and word wrapping are handled?</p>\r\n', '<p>spacing<br />\r\n&nbsp;</p>\r\n', '<p>text-space<br />\r\n&nbsp;</p>\r\n', '<p>white-space<br />\r\n&nbsp;</p>\r\n', '<p>word-spacing</p>\r\n', '3', 35, 9, '3'),
(2807, '<p>Which of the following property sets the font face to be used for text?</p>\r\n', '<p>font<br />\r\n&nbsp;</p>\r\n', '<p>font-text<br />\r\n&nbsp;</p>\r\n', '<p>font-family<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 35, 9, '3'),
(2808, '<p>Which of the following property defines whether table cell borders are connected or separate?</p>\r\n', '<p>border-table<br />\r\n&nbsp;</p>\r\n', '<p>border<br />\r\n&nbsp;</p>\r\n', '<p>border-collapse<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 35, 9, '3'),
(2809, '<p>Which of the following property defines the y (vertical) coordinate for a positioned element, relative to the bottom of the enclosing object or browser window?</p>\r\n', '<p>border<br />\r\n&nbsp;</p>\r\n', '<p>bottom<br />\r\n&nbsp;</p>\r\n', '<p>position<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 35, 9, '2'),
(2810, '<p>Which of the following CSS list properties is/are correct?</p>\r\n', '<p>Set different list item markers for ordered lists<br />\r\n&nbsp;</p>\r\n', '<p>Set different list item markers for unordered lists<br />\r\n&nbsp;</p>\r\n', '<p>Set an image as the list item marker<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '3', 35, 9, '4'),
(2811, '<p>Which of the following is used to associate a font name to be used in a style sheet with some downloadable font?</p>\r\n', '<p>@font-face<br />\r\n&nbsp;</p>\r\n', '<p>@charset<br />\r\n&nbsp;</p>\r\n', '<p>@media<br />\r\n&nbsp;</p>\r\n', '<p>!important</p>\r\n', '3', 35, 9, '1'),
(2812, '<p>Which of the following property sets the style of a font?</p>\r\n', '<p>font<br />\r\n&nbsp;</p>\r\n', '<p>style<br />\r\n&nbsp;</p>\r\n', '<p>font-style<br />\r\n&nbsp;</p>\r\n', '<p>@font-face</p>\r\n', '3', 35, 9, '3'),
(2813, '<p>Which of the following selector selects the elements that are checked?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>E ~ F<br />\r\n&nbsp;</p>\r\n', '<p>::after<br />\r\n&nbsp;</p>\r\n', '<p>:checked<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 35, 9, '3'),
(2814, '<p>Which of the following selector selects the elements that are the default among a set of similar elements?</p>\r\n', '<p>:default<br />\r\n&nbsp;</p>\r\n', '<p>:%<br />\r\n&nbsp;</p>\r\n', '<p>:disabled<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 35, 9, '1'),
(2815, '<p>The CSS links properties are</p>\r\n', '<p>:link, :visited, :hover, :active</p>\r\n', '<p>:link, :visit, :hover, :active</p>\r\n', '<p>:link, :visited, :over, :active</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>:link, :visited, :hover, :active, :inactive</p>\r\n', '3', 35, 9, '1'),
(2816, '<p>Which of the following is the most commonly used HTTP methods?</p>\r\n', '<p>PRE and POST<br />\r\n&nbsp;</p>\r\n', '<p>GET and SET<br />\r\n&nbsp;</p>\r\n', '<p>ASK and REPLY<br />\r\n&nbsp;</p>\r\n', '<p>GET and POST</p>\r\n', '3', 30, 15, '4'),
(2817, '<p>State whether the statement is/are True.<br />\r\ni) font-family property is used to change the face of a font.<br />\r\nii) font-variant property is used to create small-caps effects.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-True, ii-False<br />\r\n&nbsp;</p>\r\n', '<p>i-False, ii-True<br />\r\n&nbsp;</p>\r\n', '<p>i-True, ii-True<br />\r\n&nbsp;</p>\r\n', '<p>i-False, ii-False</p>\r\n', '3', 35, 9, '3'),
(2818, '<p>The ......................... property allows to specify the distance between the list and the text relating to the list.</p>\r\n', '<p>list-spacing<br />\r\n&nbsp;</p>\r\n', '<p>marker-spacing<br />\r\n&nbsp;</p>\r\n', '<p>marker-offset<br />\r\n&nbsp;</p>\r\n', '<p>list-offset</p>\r\n', '3', 35, 9, '3'),
(2819, '<p>What does the DOCTYPE declaration defines in HTML?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>it defines the document property<br />\r\n&nbsp;</p>\r\n', '<p>it defines the document type</p>\r\n', '<p>it defines the document size<br />\r\n&nbsp;</p>\r\n', '<p>it sefines the document style</p>\r\n', '3', 30, 15, '2'),
(2820, '<p>Which of the following is the correct regarding meta tag in HTML?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;meta&gt;..&lt;/meta&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;meta name=&quot; &quot; /&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;metaname&gt;..&lt;/metaname&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;metadata name=&quot; &quot; /&gt;<br />\r\n&nbsp;</p>\r\n', '3', 30, 15, '2'),
(2821, '<p>What does screen media type is used for?</p>\r\n', '<p>For use with all devices.<br />\r\n&nbsp;</p>\r\n', '<p>For use with handheld devices.<br />\r\n&nbsp;</p>\r\n', '<p>For use with color computer screens.<br />\r\n&nbsp;</p>\r\n', '<p>For use with television-type devices.</p>\r\n', '4', 40, 9, '3'),
(2822, '<p>The ________________ directive allows style sheets to be grouped and joined together, though some might wonder what the value of this function is given what linked styles provide.</p>\r\n', '<p>&lt;head&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;style&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;script&gt;<br />\r\n&nbsp;</p>\r\n', '<p>@import</p>\r\n', '4', 40, 9, '4'),
(2823, '<p>Which of the following is correct to change font face in web page?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;font = &quot;font name&quot;&gt; .. &lt;/font&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;font name = &quot;font name&quot;&gt; .. &lt;/font&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;font face = &quot;font name&quot;&gt; .. &lt;/font&gt;<br />\r\n&nbsp;</p>\r\n', '<p>Font face cannot change</p>\r\n', '3', 30, 15, '3'),
(2824, '<p>Which of the following measurement defines a measurement as a percentage?</p>\r\n', '<p>%<br />\r\n&nbsp;</p>\r\n', '<p>cm<br />\r\n&nbsp;</p>\r\n', '<p>em<br />\r\n&nbsp;</p>\r\n', '<p>in</p>\r\n', '4', 40, 9, '1'),
(2825, '<p>Which tag is used to list the items with bullets?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;bullet&gt; .. &lt;/bullet&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;list&gt; .. &lt;/list&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;ul&gt; .. &lt;/ul&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;ol&gt; .. &lt;/ol&gt;</p>\r\n', '3', 30, 15, '3'),
(2826, '<p>Which of the following property allows contextual adjustment of inter-glyph spacing, i.e. the spaces between the characters in text?</p>\r\n', '<p>font-style<br />\r\n&nbsp;</p>\r\n', '<p>font-family<br />\r\n&nbsp;</p>\r\n', '<p>font-kerning<br />\r\n&nbsp;</p>\r\n', '<p>font-variant</p>\r\n', '4', 40, 9, '3'),
(2827, '<p>Which of the following measurement defines a measurement relative to a font&rsquo;s x-height?</p>\r\n', '<p>ex<br />\r\n&nbsp;</p>\r\n', '<p>em<br />\r\n&nbsp;</p>\r\n', '<p>pt<br />\r\n&nbsp;</p>\r\n', '<p>px</p>\r\n', '4', 40, 9, '1'),
(2828, '<p>Which of the following font-size-adjust is value used in calculating the size of the fallback fonts?</p>\r\n', '<p>auto<br />\r\n&nbsp;</p>\r\n', '<p>number<br />\r\n&nbsp;</p>\r\n', '<p>count<br />\r\n&nbsp;</p>\r\n', '<p>none</p>\r\n', '4', 40, 9, '2'),
(2829, '<p>Which of the following CSS property determines how overflowed content that is not displayed is signaled to the users?</p>\r\n', '<p>text-flow<br />\r\n&nbsp;</p>\r\n', '<p>text-underflow<br />\r\n&nbsp;</p>\r\n', '<p>text-overflow<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '4', 40, 9, '3'),
(2830, '<p>p strong {background-color: yellow;}<br />\r\nWhat will happen in this case?</p>\r\n', '<p>Strong have yellow background<br />\r\n&nbsp;</p>\r\n', '<p>Strong element within a p element have a yellow background<br />\r\n&nbsp;</p>\r\n', '<p>Both p and strong have yellow background<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 40, 9, '2'),
(2831, '<p>Which of the following CSS3 Color Feature can be used as a macro for whatever the current color is?</p>\r\n', '<p>CurrentColor keyword<br />\r\n&nbsp;</p>\r\n', '<p>HSLa Color<br />\r\n&nbsp;</p>\r\n', '<p>HSL Color<br />\r\n&nbsp;</p>\r\n', '<p>RGB Color</p>\r\n', '4', 40, 9, '1'),
(2832, '<p>Which of the following unit represent the viewport&rsquo;s width?</p>\r\n', '<p>vh<br />\r\n&nbsp;</p>\r\n', '<p>vmin<br />\r\n&nbsp;</p>\r\n', '<p>vw<br />\r\n&nbsp;</p>\r\n', '<p>ch</p>\r\n', '4', 40, 9, '3'),
(2833, '<p>Which orgazination defines the Web Standards?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Microsoft Corporation</p>\r\n', '<p>IBM Corporation<br />\r\n&nbsp;</p>\r\n', '<p>World Wide Web Consortium<br />\r\n&nbsp;</p>\r\n', '<p>Google Inc</p>\r\n', '3', 30, 15, '3'),
(2834, '<p>Which of the following Overflow property value is described by scrollbars should be provided if the content is too big, but actual implementation is left up to the browser?</p>\r\n', '<p>Visible<br />\r\n&nbsp;</p>\r\n', '<p>Scroll<br />\r\n&nbsp;</p>\r\n', '<p>Auto<br />\r\n&nbsp;</p>\r\n', '<p>Hidden</p>\r\n', '4', 40, 9, '3'),
(2835, '<p>A link&#39;s ______ specifies where the document that loads when the link is clicked will be displayed.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>destination<br />\r\n&nbsp;</p>\r\n', '<p>label<br />\r\n&nbsp;</p>\r\n', '<p>target</p>\r\n', '<p>state</p>\r\n', '3', 30, 15, '3'),
(2836, '<p>Which of the following is an appropriate value for overflow element?</p>\r\n', '<p>hidden<br />\r\n&nbsp;</p>\r\n', '<p>auto<br />\r\n&nbsp;</p>\r\n', '<p>scroll<br />\r\n&nbsp;</p>\r\n', '<p>all of the mentioned</p>\r\n', '4', 40, 9, '4'),
(2837, '<p>Identify the CSS property that specifies the length of the space used for the tab character.</p>\r\n', '<p>size<br />\r\n&nbsp;</p>\r\n', '<p>tab-size<br />\r\n&nbsp;</p>\r\n', '<p>tab-space<br />\r\n&nbsp;</p>\r\n', '<p>all of the mentioned</p>\r\n', '4', 40, 9, '2'),
(2838, '<p>HTML web pages can be read and rendered by _________.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Compiler&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Server<br />\r\n&nbsp;</p>\r\n', '<p>Web Browser&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>Interpreter</p>\r\n', '3', 30, 15, '3'),
(2839, '<p>Choose the CSS property which specifies the placement of a table caption.</p>\r\n', '<p>table-caption<br />\r\n&nbsp;</p>\r\n', '<p>cell-caption<br />\r\n&nbsp;</p>\r\n', '<p>caption-side<br />\r\n&nbsp;</p>\r\n', '<p>caption-adjust</p>\r\n', '4', 40, 9, '3'),
(2840, '<p>Which of the following property specifies the placement of an element in relation to floating objects?</p>\r\n', '<p>clear<br />\r\n&nbsp;</p>\r\n', '<p>color<br />\r\n&nbsp;</p>\r\n', '<p>space<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '4', 40, 9, '1'),
(2841, '<p>All HTML tags are enclosed in ______</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p># and #<br />\r\n&nbsp;</p>\r\n', '<p>? and !<br />\r\n&nbsp;</p>\r\n', '<p>&lt; and &gt;<br />\r\n&nbsp;</p>\r\n', '<p>{ and }</p>\r\n', '3', 30, 15, '3'),
(2842, '<p>Which of the following measurement is relative to font-size of the root element?</p>\r\n', '<p>rem<br />\r\n&nbsp;</p>\r\n', '<p>kd<br />\r\n&nbsp;</p>\r\n', '<p>rr<br />\r\n&nbsp;</p>\r\n', '<p>hx</p>\r\n', '4', 40, 9, '1'),
(2843, '<p>Which of the following property controls the horizontal overflow of a block or inline block?</p>\r\n', '<p>Overflow-x<br />\r\n&nbsp;</p>\r\n', '<p>Overflow<br />\r\n&nbsp;</p>\r\n', '<p>Overflow-y<br />\r\n&nbsp;</p>\r\n', '<p>Overflow-k</p>\r\n', '4', 40, 9, '1'),
(2844, '<p>Which of the following @viewport Property sets the viewport height in the same way as width?</p>\r\n', '<p>height<br />\r\n&nbsp;</p>\r\n', '<p>width<br />\r\n&nbsp;</p>\r\n', '<p>viewport-width<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '4', 40, 9, '1'),
(2845, '<p>The tag which allows to nest other HTML tags within the description</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;CAPTION&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;TD&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;TR&gt;<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '3', 30, 15, '1'),
(2846, '<p>Which of the following property defines how content should behave when it exceeds the width of its enclosing element?</p>\r\n', '<p>overflow-y<br />\r\n&nbsp;</p>\r\n', '<p>overflow-x<br />\r\n&nbsp;</p>\r\n', '<p>overflow-z<br />\r\n&nbsp;</p>\r\n', '<p>overflow-width</p>\r\n', '4', 40, 9, '2'),
(2847, '<p>When making bulleted lists, which options do you have?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>square, disc, polygon</p>\r\n', '<p>triangle, disc, circle<br />\r\n&nbsp;</p>\r\n', '<p>triangle, square, circle<br />\r\n&nbsp;</p>\r\n', '<p>disc, circle, square</p>\r\n', '3', 30, 15, '4'),
(2848, '<p>Which of the following property is used to define whether an element should be resized and, if so, upon what axis?</p>\r\n', '<p>axis<br />\r\n&nbsp;</p>\r\n', '<p>resize<br />\r\n&nbsp;</p>\r\n', '<p>set-origin<br />\r\n&nbsp;</p>\r\n', '<p>set-axis</p>\r\n', '4', 40, 9, '2'),
(2849, '<p>Which of the following font format is supported by all the latest browser?</p>\r\n', '<p>EOT<br />\r\n&nbsp;</p>\r\n', '<p>TTF<br />\r\n&nbsp;</p>\r\n', '<p>WOFF<br />\r\n&nbsp;</p>\r\n', '<p>Both b and c</p>\r\n', '4', 40, 9, '4'),
(2850, '<p>Which of the following selector selects an element that has no children?</p>\r\n', '<p>:empty<br />\r\n&nbsp;</p>\r\n', '<p>:nochild<br />\r\n&nbsp;</p>\r\n', '<p>:inheritance<br />\r\n&nbsp;</p>\r\n', '<p>:no-child</p>\r\n', '4', 40, 9, '1'),
(2851, '<p>Internet Explorer uses ....................... property to create transparent images.</p>\r\n', '<p>-moz-opacity:x<br />\r\n&nbsp;</p>\r\n', '<p>filter: alpha(opacity=x)<br />\r\n&nbsp;</p>\r\n', '<p>Both of the above<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 40, 9, '2'),
(2852, '<p>The attribute used choose the type of font in HTML is?</p>\r\n', '<p>character<br />\r\n&nbsp;</p>\r\n', '<p>face</p>\r\n', '<p>text-type<br />\r\n&nbsp;</p>\r\n', '<p>All of the Above</p>\r\n', '3', 30, 15, '2'),
(2853, '<p>Which of the following is/are the possible values of CSS pseudo element property?<br />\r\ni) : first line ii) : last-line iii) : before iv) : after v) : between</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i, iii and iv only<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, and v only<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, iv and v only<br />\r\n&nbsp;</p>\r\n', '<p>All i, ii, iii, iv and v</p>\r\n', '4', 40, 10, '1'),
(2854, '<p>The valid examples of ID selectors is/are</p>\r\n', '<p>#black{color: #000000;}<br />\r\n&nbsp;</p>\r\n', '<p>h1 #black{color: #000000;}<br />\r\n&nbsp;</p>\r\n', '<p>#black h2{color: #000000;}<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '4', 40, 9, '4'),
(2855, '<p>When trying to access a URL, the following message is displayed on the browser: Server Error 403. What could be the reason for the message?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>The requested HTML file is not available<br />\r\n&nbsp;</p>\r\n', '<p>The path to the interpreter of the script file is invalid<br />\r\n&nbsp;</p>\r\n', '<p>The first line of the output from the script is not a valid HTTP header<br />\r\n&nbsp;</p>\r\n', '<p>The requested HTML file or CGI script has insufficient permission.<br />\r\n&nbsp;</p>\r\n', '4', 30, 15, '4'),
(2856, '<p>Which of the following is/are the valid syntax for CSS pseudo classes.</p>\r\n', '<p>selector: pseudo-class{property: value}<br />\r\n&nbsp;</p>\r\n', '<p>selector.class: pseudo-class{property:value}<br />\r\n&nbsp;</p>\r\n', '<p>Both A and B<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 40, 9, '3'),
(2857, '<p>The overflow property in CSS can take one of the following values.<br />\r\ni) visible ii) hidden iii) scroll iv) non-scroll v) auto</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i, ii, iii and iv only<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, iii and v only<br />\r\n&nbsp;</p>\r\n', '<p>i, ii, iv and v only<br />\r\n&nbsp;</p>\r\n', '<p>All i, ii, iii, iv and v</p>\r\n', '4', 40, 9, '2'),
(2858, '<p>State True or False for CSS outlines properties.<br />\r\ni) An outline does take up space<br />\r\nii) Outline do not have to be rectangular.<br />\r\niii) Outline is always the same on all sides.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>i-True, ii-True, iii-False<br />\r\n&nbsp;</p>\r\n', '<p>i-False, ii-False, iii-True<br />\r\n&nbsp;</p>\r\n', '<p>i-True, ii-False, iii-True<br />\r\n&nbsp;</p>\r\n', '<p>i-False, ii-True, iii-True</p>\r\n', '4', 40, 9, '4'),
(2859, '<p>The elements &lt;DIV&gt; and &lt;SPAN&gt; have the following characteristics&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Element &lt;DIV&gt; inherits properties defined for &lt;SPAN&gt; in a stylesheet<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Elements &lt;SPAN&gt; and &lt;DIV&gt; define content to be inline or block-level<br />\r\n&nbsp;</p>\r\n', '<p>&lt;DIV&gt; and &lt;SPAN&gt; are used as alternatives for the element &lt;P&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;DIV&gt; is used inside element &lt;P&gt;.</p>\r\n', '4', 30, 15, '2'),
(2860, '<p>What does media query do do?</p>\r\n', '<p>width and height of the viewport<br />\r\n&nbsp;</p>\r\n', '<p>width and height of the device<br />\r\n&nbsp;</p>\r\n', '<p>Resolution<br />\r\n&nbsp;</p>\r\n', '<p>All of the Above</p>\r\n', '5', 40, 9, '4'),
(2861, '<p>Which of these tags are all &lt;table&gt; tags?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;table&gt;&lt;head&gt;&lt;tfoot&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;table&gt;&lt;tr&gt;&lt;td&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;table&gt;&lt;tr&gt;&lt;tt&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;thead&gt;&lt;body&gt;&lt;tr&gt;</p>\r\n', '4', 30, 15, '2'),
(2862, '<p>What can&#39;t layers do if you want to convert them to tables?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Be close<br />\r\n&nbsp;</p>\r\n', '<p>Contain a Color<br />\r\n&nbsp;</p>\r\n', '<p>Be larger than the target table<br />\r\n&nbsp;</p>\r\n', '<p>Overlap</p>\r\n', '4', 30, 15, '4'),
(2863, '<p>Which of the following property applies one or more drop shadows to the text?</p>\r\n', '<p>text-shadow<br />\r\n&nbsp;</p>\r\n', '<p>text-effect<br />\r\n&nbsp;</p>\r\n', '<p>text-format<br />\r\n&nbsp;</p>\r\n', '<p>text-decoration-shadow</p>\r\n', '5', 40, 9, '1'),
(2864, '<p>When you create a &quot;recipient&quot; hidden field for a form, which of the following is the ONLY correct way to type the word &quot;recipient?&quot;&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Recipient<br />\r\n&nbsp;</p>\r\n', '<p>&lt;recipient&gt;&lt;/recipient&gt;</p>\r\n', '<p>recipient<br />\r\n&nbsp;</p>\r\n', '<p>RECIPIENT</p>\r\n', '4', 30, 15, '2'),
(2865, '<p>What is the use of forms in HTML?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>to display contents of email<br />\r\n&nbsp;</p>\r\n', '<p>to display animation effect<br />\r\n&nbsp;</p>\r\n', '<p>it collect user&#39;s input</p>\r\n', '<p>none of the above</p>\r\n', '4', 30, 15, '3'),
(2866, '<p>Which of the following is an atribute of &lt;table&gt; tag?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>src<br />\r\n&nbsp;</p>\r\n', '<p>cell&shy;link<br />\r\n&nbsp;</p>\r\n', '<p>boldcell<br />\r\n&nbsp;</p>\r\n', '<p>cellpadding</p>\r\n', '4', 30, 15, '4'),
(2867, '<p>Which of the following is not a attribute of the audio element?</p>\r\n', '<p>controls<br />\r\n&nbsp;</p>\r\n', '<p>src<br />\r\n&nbsp;</p>\r\n', '<p>check<br />\r\n&nbsp;</p>\r\n', '<p>loop</p>\r\n', '5', 40, 9, '3'),
(2868, '<p>Output of XML document can be viewed in a</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Word Processor<br />\r\n&nbsp;</p>\r\n', '<p>Web Browser<br />\r\n&nbsp;</p>\r\n', '<p>Notepad<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 30, 15, '2'),
(2869, '<p>Which of the following property specifies the order of a flexible item relative to the rest of the flexible items inside the same container?</p>\r\n', '<p>sort<br />\r\n&nbsp;</p>\r\n', '<p>layout<br />\r\n&nbsp;</p>\r\n', '<p>order<br />\r\n&nbsp;</p>\r\n', '<p>asort</p>\r\n', '5', 40, 9, '3'),
(2870, '<p>The tag used to define navigation links is</p>\r\n', '<p>&lt;dialog&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;navigation&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;nav&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;nave&gt;</p>\r\n', '4', 30, 15, '3'),
(2871, '<p>The tag to specify illustrations, diagrams, photos is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;mark&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;figure&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;aside&gt;</p>\r\n', '<p>&lt;details&gt;</p>\r\n', '4', 30, 15, '2'),
(2872, '<p>Which of the following property specifies the stack order of an element?</p>\r\n', '<p>order<br />\r\n&nbsp;</p>\r\n', '<p>z-index<br />\r\n&nbsp;</p>\r\n', '<p>p-index<br />\r\n&nbsp;</p>\r\n', '<p>auto</p>\r\n', '5', 40, 9, '2'),
(2873, '<p>Which of the following specifies how much the item will grow relative to the rest of the flexible items inside the same container?</p>\r\n', '<p>flex-scale<br />\r\n&nbsp;</p>\r\n', '<p>flex-size<br />\r\n&nbsp;</p>\r\n', '<p>flex-grow<br />\r\n&nbsp;</p>\r\n', '<p>flex-flow</p>\r\n', '5', 40, 9, '3'),
(2874, '<p>You can add names to each frame window using which setting?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>name<br />\r\n&nbsp;</p>\r\n', '<p>src<br />\r\n&nbsp;</p>\r\n', '<p>id<br />\r\n&nbsp;</p>\r\n', '<p>ur</p>\r\n', '4', 30, 15, '1'),
(2875, '<p>Which of the following CSS3 property can be used to allow line breaks within words?</p>\r\n', '<p>word-wrap<br />\r\n&nbsp;</p>\r\n', '<p>word-break<br />\r\n&nbsp;</p>\r\n', '<p>line-wrap<br />\r\n&nbsp;</p>\r\n', '<p>line-break</p>\r\n', '5', 40, 9, '2'),
(2876, '<p>Which of the following Viewport Property determines whether the display can be zoomed in and out?</p>\r\n', '<p>scale<br />\r\n&nbsp;</p>\r\n', '<p>set-scale<br />\r\n&nbsp;</p>\r\n', '<p>adjust-scale<br />\r\n&nbsp;</p>\r\n', '<p>user-scalable</p>\r\n', '5', 40, 9, '4'),
(2877, '<p>&lt;!DOCTYPE&gt; tag have end tag</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Yes</p>\r\n', '<p>No<br />\r\n&nbsp;</p>\r\n', '<p>Sometimes<br />\r\n&nbsp;</p>\r\n', '<p>Cannot say</p>\r\n', '4', 30, 15, '2'),
(2878, '<p>Flex-box direction has value(s):</p>\r\n', '<p>Row<br />\r\n&nbsp;</p>\r\n', '<p>left-to-right<br />\r\n&nbsp;</p>\r\n', '<p>right-to-left<br />\r\n&nbsp;</p>\r\n', '<p>Both b and c</p>\r\n', '5', 40, 9, '1'),
(2879, '<p>What allows you to set some element to be editable inside the browser?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>spellcheck<br />\r\n&nbsp;</p>\r\n', '<p>contenteditable<br />\r\n&nbsp;</p>\r\n', '<p>dropzone<br />\r\n&nbsp;</p>\r\n', '<p>contextmenu</p>\r\n', '4', 30, 15, '2'),
(2880, '<p>Which of the following property defines the style of quotation marks to be used with embedded quotations?</p>\r\n', '<p>article<br />\r\n&nbsp;</p>\r\n', '<p>para<br />\r\n&nbsp;</p>\r\n', '<p>quote<br />\r\n&nbsp;</p>\r\n', '<p>quotes</p>\r\n', '5', 40, 9, '4'),
(2881, '<p>Which attribute allows the inline frame to appear as through it is being rendered as part of the containing document?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>sandbox<br />\r\n&nbsp;</p>\r\n', '<p>seamless<br />\r\n&nbsp;</p>\r\n', '<p>src<br />\r\n&nbsp;</p>\r\n', '<p>srcdoc</p>\r\n', '4', 30, 15, '2'),
(2882, '<p>Tags and test that are not directly displayed on the page are written in _____ section.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;head&gt;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;title&gt;</p>\r\n', '<p>&lt;body&gt;&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;html&gt;</p>\r\n', '4', 30, 15, '1'),
(2883, '<p>In HTML, tags that include both on and off tag are called</p>\r\n', '<p>comment tag</p>\r\n', '<p>document tag<br />\r\n&nbsp;</p>\r\n', '<p>container tag<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '4', 30, 15, '3'),
(2884, '<p>Which tag will you add to specify a font for your whole page?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;defaultfont&gt;<br />\r\nB.</p>\r\n', '<p>&lt;targetfont&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;basefont&gt;</p>\r\n', '<p>&lt;font&gt;</p>\r\n', '4', 30, 15, '1'),
(2885, '<p>The tag used for creating hypertext and hypermedia links is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;HR&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;BR&gt;</p>\r\n', '<p>&lt;PRE&gt;</p>\r\n', '<p>&lt;A&gt;</p>\r\n', '4', 30, 15, '4'),
(2886, '<p>&lt;! is a</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Comment Tag<br />\r\n&nbsp;</p>\r\n', '<p>Underlined Tag<br />\r\n&nbsp;</p>\r\n', '<p>Underlined with italic Tag<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '4', 30, 15, '1'),
(2887, '<p>Increasing the cellpadding means</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>increase the softness of your site<br />\r\n&nbsp;</p>\r\n', '<p>increase the space between cells</p>\r\n', '<p>increase the distance between cell and content<br />\r\n&nbsp;</p>\r\n', '<p>All of the Above</p>\r\n', '4', 30, 15, '3'),
(2888, '<p>The tag which is used to establish the absoulute base for relative URLs used in the document hypertext links</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;BODY&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;TITLE&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;BASE&gt;</p>\r\n', '<p>&lt;BR&gt;</p>\r\n', '4', 30, 15, '3'),
(2889, '<p>The &lt;BASE&gt; tag is designed to appear only between</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;BODY&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;HEAD&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;TITLE&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;PRE&gt;</p>\r\n', '4', 30, 15, '2'),
(2890, '<p>Which of the following is incorrect regarding logical styles?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Code looks like teletype<br />\r\n&nbsp;</p>\r\n', '<p>Sample looks like teletype<br />\r\n&nbsp;</p>\r\n', '<p>Keyboard looks like teletype<br />\r\n&nbsp;</p>\r\n', '<p>Variable looks like teletype<br />\r\n&nbsp;</p>\r\n', '5', 30, 15, '4'),
(2891, '<p>Which tag is used to display Preformatted texts?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;pre&gt; .. &lt;/pre&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;prefor&gt; .. &lt;/prefor&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;pre text&gt; .. &lt;/pre text&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;pre format&gt; .. &lt;/pre format&gt;<br />\r\n&nbsp;</p>\r\n', '5', 30, 15, '1'),
(2892, '<p>Is it possible to insert a table within another table?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Yes, but there must be exactly 2 rows and 2 columns in first table<br />\r\n&nbsp;</p>\r\n', '<p>Yes, table can be inserted into cell of another table<br />\r\n&nbsp;</p>\r\n', '<p>Yes, but there must be no border in second table<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>No, it&#39;s not possible</p>\r\n', '5', 30, 15, '2'),
(2893, '<p>Who invented World Wide Web(WWW)?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Blaise Pascal<br />\r\n&nbsp;</p>\r\n', '<p>Charles Babbage<br />\r\n&nbsp;</p>\r\n', '<p>Herman Hollerith<br />\r\n&nbsp;</p>\r\n', '<p>Tim Berners Lee</p>\r\n', '5', 30, 15, '4'),
(2894, '<p>What is the use of web font in HTML?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>that is the core font that is used to develop web pages<br />\r\n&nbsp;</p>\r\n', '<p>that enables to use fonts over the web without installation<br />\r\n&nbsp;</p>\r\n', '<p>that is the special font developed for HTML pages<br />\r\n&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '5', 30, 15, '2'),
(2895, '<p>&lt;td&gt; .. &lt;/td&gt; tag is used for</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Table heading<br />\r\n&nbsp;</p>\r\n', '<p>Table records<br />\r\n&nbsp;</p>\r\n', '<p>Table row<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 30, 15, '2'),
(2896, '<p>&lt;script&gt; .. &lt;/script&gt; tag can be placed within</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Header<br />\r\n&nbsp;</p>\r\n', '<p>Body<br />\r\n&nbsp;</p>\r\n', '<p>both Header and Body<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '5', 30, 15, '3'),
(2897, '<p>The element to specify a list of predefined options for input controls is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;embed&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;datalist&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;source&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;track&gt;</p>\r\n', '5', 30, 15, '2'),
(2898, '<p>There are how many &quot;browser safe&quot; colors?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>16 million<br />\r\n&nbsp;</p>\r\n', '<p>16<br />\r\n&nbsp;</p>\r\n', '<p>256 million<br />\r\n&nbsp;</p>\r\n', '<p>256</p>\r\n', '5', 30, 15, '4'),
(2899, '<p>HTML is a subset of</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>SGMD</p>\r\n', '<p>SGML<br />\r\n&nbsp;</p>\r\n', '<p>SGMH<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '5', 30, 15, '2'),
(2900, '<p>If the background image is smaller than the screen, what will happen?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>It will be streteched<br />\r\n&nbsp;</p>\r\n', '<p>It will be repeated<br />\r\n&nbsp;</p>\r\n', '<p>It will leave a blank space at the bottom of the page</p>\r\n', '<p>None of the Above<br />\r\n&nbsp;</p>\r\n', '5', 30, 15, '2'),
(2901, '<p>The HTML tages are all</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>in lower case<br />\r\n&nbsp;</p>\r\n', '<p>in upper case<br />\r\n&nbsp;</p>\r\n', '<p>case sensitive<br />\r\n&nbsp;</p>\r\n', '<p>not case sensitive</p>\r\n', '5', 30, 15, '4'),
(2902, '<p>Why should you add alternative text to your images?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>So the user can save the image using the text as a name<br />\r\n&nbsp;</p>\r\n', '<p>So the users can get an idea of what the image is before<br />\r\n&nbsp;</p>\r\n', '<p>In case the user wishes to load a different picture</p>\r\n', '<p>All of the Above<br />\r\n&nbsp;</p>\r\n', '5', 30, 15, '2'),
(2903, '<p>Which property tells how many rows a cell should span?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>colspan=n<br />\r\n&nbsp;</p>\r\n', '<p>rowspan=n<br />\r\n&nbsp;</p>\r\n', '<p>both (a) and (b)<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '5', 30, 15, '2'),
(2904, '<p>To set the font for a single link, where do you add the &lt;font&gt;&lt;/font&gt; tags?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>in the &lt;head&gt; tag<br />\r\n&nbsp;</p>\r\n', '<p>outside the &lt;a&gt; and &lt;/a&gt; tags</p>\r\n', '<p>inside the &lt;a&gt; and &lt;/a&gt; tags<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '5', 30, 15, '3'),
(2905, '<p>Imagelink can show a text label if you add property</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>alt<br />\r\n&nbsp;</p>\r\n', '<p>str</p>\r\n', '<p>alternative<br />\r\n&nbsp;</p>\r\n', '<p>All of the above<br />\r\n&nbsp;</p>\r\n', '5', 30, 15, '1'),
(2906, '<p>The tag which allows some Web server search engines to search your Web Page</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;SEARCH&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;ISINDEX&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;HEAD&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;LINK&gt;</p>\r\n', '5', 30, 15, '2'),
(2907, '<p>If you create an HTML page in word processor</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>save it with binary file<br />\r\n&nbsp;</p>\r\n', '<p>save it with WMF file<br />\r\n&nbsp;</p>\r\n', '<p>save it with ASCII text file<br />\r\n&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '5', 30, 15, '3'),
(2908, '<p>The &lt;small&gt; and &lt;big&gt; tags are special in what way?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>They are for images only<br />\r\n&nbsp;</p>\r\n', '<p>They work on anything<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>they can be repeated</p>\r\n', '<p>None of the Above</p>\r\n', '5', 30, 15, '3'),
(2909, '<p>Any target specified in the BASE element can be overridden on a case-by-case basis by specifying a different target in different forms</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Anchor<br />\r\n&nbsp;</p>\r\n', '<p>imagemap</p>\r\n', '<p>Link</p>\r\n', '<p>All of the Above</p>\r\n', '5', 30, 15, '4'),
(2910, '<p>The attribute used to define a new namespace is.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>XMLNS<br />\r\n&nbsp;</p>\r\n', '<p>XmlNameSpace<br />\r\n&nbsp;</p>\r\n', '<p>Xmlns<br />\r\n&nbsp;</p>\r\n', '<p>XmlNs<br />\r\n&nbsp;</p>\r\n', '6', 30, 15, '4'),
(2911, '<p>Which file controls how your frames will appear?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Frameset<br />\r\n&nbsp;</p>\r\n', '<p>Master Document<br />\r\n&nbsp;</p>\r\n', '<p>Template<br />\r\n&nbsp;</p>\r\n', '<p>Timeline</p>\r\n', '6', 30, 15, '1'),
(2912, '<p>Flex-flow is the combination of</p>\r\n', '<p>Flex-direction and flex-wrap<br />\r\n&nbsp;</p>\r\n', '<p>Flex-direction and align-content<br />\r\n&nbsp;</p>\r\n', '<p>Flex- grow and flex-wrap<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '5', 40, 9, '1'),
(2913, '<p>Which of the following is the Color Format that is a CSS&rsquo;s six-digit hexadecimal format as color defined in (X)HTML?</p>\r\n', '<p>Specification defined named colors<br />\r\n&nbsp;</p>\r\n', '<p>RGB<br />\r\n&nbsp;</p>\r\n', '<p>6-Hex Color<br />\r\n&nbsp;</p>\r\n', '<p>3-Hex Color</p>\r\n', '5', 40, 9, '3'),
(2914, '<p>Which event will be used when a connection to the server is opened.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>onopen<br />\r\n&nbsp;</p>\r\n', '<p>onmessage<br />\r\n&nbsp;</p>\r\n', '<p>onerror</p>\r\n', '<p>None of the above</p>\r\n', '6', 30, 15, '1'),
(2915, '<p>Which of the following is the Color Format that is the CSS3 HSL value with a fourth value to set the alpha channel value for the color to define the opacity of the element?</p>\r\n', '<p>HSLa Color<br />\r\n&nbsp;</p>\r\n', '<p>HSL Color<br />\r\n&nbsp;</p>\r\n', '<p>RGBa Color<br />\r\n&nbsp;</p>\r\n', '<p>RGB Color</p>\r\n', '5', 40, 9, '1'),
(2916, '<p>The following elements &lt;header&gt;, &lt;footer&gt;, &lt;article&gt;, &lt;section&gt; are the new elements in HTML5. These<br />\r\nelements are called</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Control attributes<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Semantic elements<br />\r\n&nbsp;</p>\r\n', '<p>Graphic elements<br />\r\n&nbsp;</p>\r\n', '<p>Multimedia elements</p>\r\n', '6', 30, 15, '2'),
(2917, '<p>#d3d3d3 is the hex of which colour?</p>\r\n', '<p>Light Grey<br />\r\n&nbsp;</p>\r\n', '<p>Magenta<br />\r\n&nbsp;</p>\r\n', '<p>Cyan<br />\r\n&nbsp;</p>\r\n', '<p>Light Red</p>\r\n', '5', 40, 9, '1'),
(2918, '<p>What is the replacement for cookies in HTML5?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Web Beacons<br />\r\n&nbsp;</p>\r\n', '<p>Java Scripts<br />\r\n&nbsp;</p>\r\n', '<p>Local Storage<br />\r\n&nbsp;</p>\r\n', '<p>All of the above<br />\r\n&nbsp;</p>\r\n', '6', 30, 15, '3'),
(2919, '<p>Which of the following property controls how spaces, tabs, and newline characters are handled in an element?</p>\r\n', '<p>space<br />\r\n&nbsp;</p>\r\n', '<p>display<br />\r\n&nbsp;</p>\r\n', '<p>widows<br />\r\n&nbsp;</p>\r\n', '<p>white-space</p>\r\n', '5', 40, 9, '4'),
(2920, '<p>Justify-content rule of the flexbox is used to align items:</p>\r\n', '<p>Vertically<br />\r\n&nbsp;</p>\r\n', '<p>Horizontally<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>It is not a rule of flexbox</p>\r\n', '5', 40, 9, '2'),
(2921, '<p>Which among the following tags define a caption for a &lt;fieldset&gt; element?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;select&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;label&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;legend&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;textarea&gt;</p>\r\n', '6', 30, 15, '3'),
(2922, '<p>align-items rule of the flexbox is used to align items:</p>\r\n', '<p>Vertically<br />\r\n&nbsp;</p>\r\n', '<p>Horizontally<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>It is not a rule of flexbox</p>\r\n', '5', 40, 9, '1'),
(2923, '<p>Which of the following tag represents a generic document or application section? It can be used together with h1&shy;h6 to indicate the document structure.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>article<br />\r\n&nbsp;</p>\r\n', '<p>aside<br />\r\n&nbsp;</p>\r\n', '<p>header<br />\r\n&nbsp;</p>\r\n', '<p>section</p>\r\n', '6', 30, 15, '3'),
(2924, '<p>Which element is the most common method for using graphics in HTML pages.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>object<br />\r\n&nbsp;</p>\r\n', '<p>img<br />\r\n&nbsp;</p>\r\n', '<p>applet<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '6', 30, 15, '2'),
(2925, '<p>HTML5 features, include native audio and video support without the need for.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Flash<br />\r\n&nbsp;</p>\r\n', '<p>Canvas<br />\r\n&nbsp;</p>\r\n', '<p>Svg</p>\r\n', '<p>None of the above</p>\r\n', '6', 30, 15, '1'),
(2926, '<p>Which attribute specifies that the video will be loaded at page load, and ready to run. Ignored if autoplay is present.</p>\r\n', '<p>loop<br />\r\n&nbsp;</p>\r\n', '<p>src<br />\r\n&nbsp;</p>\r\n', '<p>preload</p>\r\n', '<p>poster</p>\r\n', '6', 30, 15, '3'),
(2927, '<p>Which CSS property is used with the direction property to set or return whether the text should be overridden to support multiple languages in the same document?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>unicode - bidi<br />\r\n&nbsp;</p>\r\n', '<p>color<br />\r\n&nbsp;</p>\r\n', '<p>line - height<br />\r\n&nbsp;</p>\r\n', '<p>direction</p>\r\n', '5', 40, 9, '1'),
(2928, '<p>Which boolean attribute if specified, will allow video automatically seek back to the start after reaching at the end.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>autoplay<br />\r\n&nbsp;</p>\r\n', '<p>autobuffer<br />\r\n&nbsp;</p>\r\n', '<p>loop<br />\r\n&nbsp;</p>\r\n', '<p>controls</p>\r\n', '6', 30, 15, '3'),
(2929, '<p>The&nbsp;memory&nbsp;address&nbsp;of&nbsp;the&nbsp;first&nbsp;element&nbsp;of&nbsp;an&nbsp;array&nbsp;is&nbsp;called?</p>\r\n', '<p>floor&nbsp;address</p>\r\n', '<p>foundation&nbsp;address</p>\r\n', '<p>first&nbsp;address</p>\r\n', '<p>base&nbsp;address</p>\r\n', '1', 12, 11, '4'),
(2930, '<p>Flex box has the property(ies)</p>\r\n', '<p>Justify-item<br />\r\n&nbsp;</p>\r\n', '<p>align-self<br />\r\n&nbsp;</p>\r\n', '<p>flex-wrap<br />\r\n&nbsp;</p>\r\n', '<p>Both a and c</p>\r\n', '5', 40, 9, '4');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(2931, '<p>To start a numbered list with regular numberals, use</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;ol type=&quot;I&quot;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;ol type=&quot;a&quot;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;ol type=&quot;A&quot;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;ol type=&quot;1&quot;&gt;</p>\r\n', '6', 30, 15, '4'),
(2932, '<p>Which of the following CSS property can be used to provide the flex-direction and flex-wrap properties?</p>\r\n', '<p>flex<br />\r\n&nbsp;</p>\r\n', '<p>flex-flow<br />\r\n&nbsp;</p>\r\n', '<p>flex-wrap<br />\r\n&nbsp;</p>\r\n', '<p>all of the mentioned</p>\r\n', '6', 40, 9, '2'),
(2933, '<p>Which&nbsp;of&nbsp;the&nbsp;below&nbsp;given&nbsp;sorting&nbsp;techniques&nbsp;has&nbsp;highest&nbsp;best&shy;case&nbsp;runtime&nbsp;complexity&nbsp;</p>\r\n', '<p>quick&nbsp;sort</p>\r\n', '<p>selection&nbsp;sort</p>\r\n', '<p>insertion&nbsp;sort</p>\r\n', '<p>bubble&nbsp;sort</p>\r\n', '2', 12, 11, '2'),
(2934, '<p>The MIME text file is saved with</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>CSS extention<br />\r\n&nbsp;</p>\r\n', '<p>HTML extention<br />\r\n&nbsp;</p>\r\n', '<p>HMT extention<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '6', 30, 15, '2'),
(2935, '<p>Which of the following property aligns the flexible container&rsquo;s items when the items do not use all available space on the main-axis?</p>\r\n', '<p>wrap-content<br />\r\n&nbsp;</p>\r\n', '<p>fix-content<br />\r\n&nbsp;</p>\r\n', '<p>adjust-content<br />\r\n&nbsp;</p>\r\n', '<p>justify-content</p>\r\n', '6', 40, 9, '1'),
(2936, '<p>Which of the following selector same as :after; changed under CSS3 to make pseudo-elements obvious?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>::after<br />\r\n&nbsp;</p>\r\n', '<p>:after<br />\r\n&nbsp;</p>\r\n', '<p>#after<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '6', 40, 9, '1'),
(2937, '<p>Which of the following protocol is not used in the Internet?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Telnet<br />\r\n&nbsp;</p>\r\n', '<p>WIRL<br />\r\n&nbsp;</p>\r\n', '<p>HTTP<br />\r\n&nbsp;</p>\r\n', '<p>Gopher</p>\r\n', '7', 30, 15, '2'),
(2938, '<p>Which of the following property is used in conjunction with the :before or :after pseudo-elements?</p>\r\n', '<p>text<br />\r\n&nbsp;</p>\r\n', '<p>generated-content<br />\r\n&nbsp;</p>\r\n', '<p>content<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '6', 40, 9, '3'),
(2939, '<p>Which feature lets you create your own vocalbularies beyond HTML5 and extend your web pages with custom semantics?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Geolocation<br />\r\n&nbsp;</p>\r\n', '<p>Canvas<br />\r\n&nbsp;</p>\r\n', '<p>Microdata<br />\r\n&nbsp;</p>\r\n', '<p>WebSocket<br />\r\n&nbsp;</p>\r\n', '7', 30, 15, '3'),
(2940, '<p>Which is not suited for game applications?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Canvas<br />\r\n&nbsp;</p>\r\n', '<p>Svg<br />\r\n&nbsp;</p>\r\n', '<p>Both A &amp; B</p>\r\n', '<p>None of the above</p>\r\n', '7', 30, 15, '2'),
(2941, '<p>What is the way to specify media dependencies for style sheets ?</p>\r\n', '<p>Specify the target medium from a style sheet with the @media or @import at-rules<br />\r\n&nbsp;</p>\r\n', '<p>Specify the target medium within the document language<br />\r\n&nbsp;</p>\r\n', '<p>both (a) and (b)<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '6', 40, 9, '3'),
(2942, '<p>Which event is generated when a seek operation completes.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Seeking<br />\r\n&nbsp;</p>\r\n', '<p>Seeked<br />\r\n&nbsp;</p>\r\n', '<p>suspend<br />\r\n&nbsp;</p>\r\n', '<p>waiting<br />\r\n&nbsp;</p>\r\n', '7', 30, 15, '2'),
(2943, '<p>Which of the following property defines when the animation will start?</p>\r\n', '<p>animation-stop<br />\r\n&nbsp;</p>\r\n', '<p>animation-delay<br />\r\n&nbsp;</p>\r\n', '<p>animation-start<br />\r\n&nbsp;</p>\r\n', '<p>animation-control</p>\r\n', '6', 40, 9, '2'),
(2944, '<p>What are the values of align-items property of a flex item?</p>\r\n', '<p>Flex-start<br />\r\n&nbsp;</p>\r\n', '<p>Space-around<br />\r\n&nbsp;</p>\r\n', '<p>Expand<br />\r\n&nbsp;</p>\r\n', '<p>Both a and c</p>\r\n', '6', 40, 9, '1'),
(2945, '<p>Semantic elements are elements which ____________.&nbsp;</p>\r\n', '<p>describe its meaning only to the developer<br />\r\n&nbsp;</p>\r\n', '<p>do not have any meaning<br />\r\n&nbsp;</p>\r\n', '<p>are used to describe a page<br />\r\n&nbsp;</p>\r\n', '<p>clearly describe its meaning to the browser and the developer<br />\r\n&nbsp;</p>\r\n', '7', 30, 15, '4'),
(2946, '<p>What flexbow rule(s) can be used to reverse the content of a flexbox?</p>\r\n', '<p>flex-direction<br />\r\n&nbsp;</p>\r\n', '<p>flex-reverse<br />\r\n&nbsp;</p>\r\n', '<p>flex-flow<br />\r\n&nbsp;</p>\r\n', '<p>Both a and C</p>\r\n', '6', 40, 9, '4'),
(2947, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;not&nbsp;possible&nbsp;with&nbsp;an&nbsp;array&nbsp;in&nbsp;C&nbsp;programming&nbsp;langauge</p>\r\n', '<p>Declaration</p>\r\n', '<p>Definition</p>\r\n', '<p>Dynamic&nbsp;Allocation</p>\r\n', '<p>Array&nbsp;of&nbsp;strings</p>\r\n', '3', 15, 11, '3'),
(2948, '<p>Which file is used by the browser to fetch the appropriate data?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>text file<br />\r\n&nbsp;</p>\r\n', '<p>HTML file<br />\r\n&nbsp;</p>\r\n', '<p>XML file<br />\r\n&nbsp;</p>\r\n', '<p>Manifest file</p>\r\n', '7', 30, 15, '4'),
(2949, '<p>How&nbsp;do&nbsp;you&nbsp;make&nbsp;a&nbsp;list&nbsp;that&nbsp;lists&nbsp;its&nbsp;items&nbsp;with&nbsp;squares?</p>\r\n', '<p>list&shy;type:&nbsp;square<br />\r\n&nbsp;</p>\r\n', '<p>type:&nbsp;square<br />\r\n&nbsp;</p>\r\n', '<p>type:&nbsp;2<br />\r\n&nbsp;</p>\r\n', '<p>list&shy;style&shy;type:&nbsp;square</p>\r\n', '6', 40, 9, '4'),
(2950, '<p>Which colors consist of equal amounts of all basic colors?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>white, blue and gray<br />\r\n&nbsp;</p>\r\n', '<p>white, black and gray<br />\r\n&nbsp;</p>\r\n', '<p>purple, green and blue<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '7', 30, 15, '2'),
(2951, '<p>How&nbsp;do&nbsp;you&nbsp;display&nbsp;hyperlinks&nbsp;without&nbsp;an&nbsp;underline?</p>\r\n', '<p>a&nbsp;{text&shy;decoration:no&nbsp;underline}<br />\r\n&nbsp;</p>\r\n', '<p>a&nbsp;{decoration:no&nbsp;underline}<br />\r\n&nbsp;</p>\r\n', '<p>a&nbsp;{text&shy;decoration:none}<br />\r\n&nbsp;</p>\r\n', '<p>a&nbsp;{underline:none}</p>\r\n', '6', 40, 9, '3'),
(2952, '<p>Which attribute is used to name an element uniquely?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>class<br />\r\n&nbsp;</p>\r\n', '<p>id<br />\r\n&nbsp;</p>\r\n', '<p>dot<br />\r\n&nbsp;</p>\r\n', '<p>All of the Above</p>\r\n', '7', 30, 15, '2'),
(2953, '<p>______ position elements don&#39;t move when the visitor scrolls the browser window up or down.</p>\r\n', '<p>Absolutely<br />\r\n&nbsp;</p>\r\n', '<p>Relatively<br />\r\n&nbsp;</p>\r\n', '<p>Fixed<br />\r\n&nbsp;</p>\r\n', '<p>Static</p>\r\n', '6', 40, 9, '3'),
(2954, '<p>To make the width of a table adjust to the current width of the viewer&#39;s browser window, you should specify a table width of __________:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>100%<br />\r\n&nbsp;</p>\r\n', '<p>640 pixels<br />\r\n&nbsp;</p>\r\n', '<p>1024 pixels<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '6', 40, 9, '1'),
(2955, '<p>To create a combo box which tag will you use?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;select&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;list&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;input type=&quot;dropbox&quot;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '7', 30, 15, '1'),
(2956, '<p>Which of the following Viewport Property sets the initial scaling factor?</p>\r\n', '<p>scale<br />\r\n&nbsp;</p>\r\n', '<p>initial-scale<br />\r\n&nbsp;</p>\r\n', '<p>minimum-scale<br />\r\n&nbsp;</p>\r\n', '<p>user-scale</p>\r\n', '6', 40, 9, '2'),
(2957, '<p>The attribute that defines the relationship between the current document and the HREF&#39;ed URL is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>URL<br />\r\n&nbsp;</p>\r\n', '<p>REV<br />\r\n&nbsp;</p>\r\n', '<p>REL<br />\r\n&nbsp;</p>\r\n', '<p>PRE</p>\r\n', '7', 30, 15, '2'),
(2958, '<p>The ................... property indicates whether a cell without any content should have a border displayed.</p>\r\n', '<p>blank-cells<br />\r\n&nbsp;</p>\r\n', '<p>empty-cells<br />\r\n&nbsp;</p>\r\n', '<p>nocontent-cells<br />\r\n&nbsp;</p>\r\n', '<p>noborder-cells</p>\r\n', '6', 40, 9, '2'),
(2959, '<p>What is the most important tool for adding colours to certain areas of the page rather than the entire background is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Fonts<br />\r\n&nbsp;</p>\r\n', '<p>Image<br />\r\n&nbsp;</p>\r\n', '<p>Tables<br />\r\n&nbsp;</p>\r\n', '<p>All of the Above</p>\r\n', '7', 30, 15, '3'),
(2960, '<p>Which of the following Protocol enables a hyperlink to access a file on the local file system?</p>\r\n', '<p>https<br />\r\n&nbsp;</p>\r\n', '<p>ftp<br />\r\n&nbsp;</p>\r\n', '<p>file<br />\r\n&nbsp;</p>\r\n', '<p>telnet</p>\r\n', '6', 40, 9, '3'),
(2961, '<p>Which of the following value specifies whether the user agent is allowed to synthesize bold or oblique font faces when a font family lacks bold or italic faces?</p>\r\n', '<p>font-weight<br />\r\n&nbsp;</p>\r\n', '<p>font-synthesis<br />\r\n&nbsp;</p>\r\n', '<p>font-kerning<br />\r\n&nbsp;</p>\r\n', '<p>font-variant</p>\r\n', '6', 40, 9, '2'),
(2962, '<p>Why should you specify a background color if you are using an image for the actual background of your page?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>so the text shows up better</p>\r\n', '<p>in case the image doesn&#39;t fit right<br />\r\n&nbsp;</p>\r\n', '<p>the background color will be shown until the image loads<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '8', 30, 15, '3'),
(2963, '<p>The&nbsp;transformation&nbsp;in&nbsp;which&nbsp;the&nbsp;dimension&nbsp;of&nbsp;an&nbsp;object&nbsp;are&nbsp;changed&nbsp;relative&nbsp;to&nbsp;a&nbsp;specified&nbsp;fixed&nbsp;point&nbsp;is called</p>\r\n', '<p>Transformation<br />\r\n&nbsp;</p>\r\n', '<p>Reflection<br />\r\n&nbsp;</p>\r\n', '<p>Translation<br />\r\n&nbsp;</p>\r\n', '<p>Scaling</p>\r\n', '6', 40, 9, '4'),
(2964, '<p>The background image will scroll when the user scrolls down the page, you add which property to the &lt;body&gt; tag?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>bgproperties = &quot;fixed&quot;<br />\r\n&nbsp;</p>\r\n', '<p>bgproperties = &quot;move&quot;<br />\r\n&nbsp;</p>\r\n', '<p>bgproperties = &quot;holdstill&quot;<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '8', 30, 15, '3'),
(2965, '<p>Which of the following Microsoft-introduced property defines the position of underlining set by the text-decoration property?</p>\r\n', '<p>text-underline<br />\r\n&nbsp;</p>\r\n', '<p>text-underline-origin<br />\r\n&nbsp;</p>\r\n', '<p>text-underline-position<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '6', 40, 9, '4'),
(2966, '<p>The most basic element of any HTML page is</p>\r\n', '<p>ASCII text<br />\r\n&nbsp;</p>\r\n', '<p>text<br />\r\n&nbsp;</p>\r\n', '<p>BCD text<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '8', 30, 15, '1'),
(2967, '<p>Which of the following property is used to give a 3-D sense of depth to an element?</p>\r\n', '<p>animation<br />\r\n&nbsp;</p>\r\n', '<p>perspec<br />\r\n&nbsp;</p>\r\n', '<p>sense<br />\r\n&nbsp;</p>\r\n', '<p>perspective</p>\r\n', '6', 40, 9, '4'),
(2968, '<p>What does initial-scale of the content attribute of meta tag do?</p>\r\n', '<p>Sets aspect ratio of viewport.<br />\r\n&nbsp;</p>\r\n', '<p>Sets initial Zoom of the wepgae in browser.<br />\r\n&nbsp;</p>\r\n', '<p>Nothing<br />\r\n&nbsp;</p>\r\n', '<p>Not a Value of that attribute</p>\r\n', '6', 40, 9, '2'),
(2969, '<p>The symbol used at the beginning of the HREF text is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>@</p>\r\n', '<p>&amp;</p>\r\n', '<p>$<br />\r\n&nbsp;</p>\r\n', '<p>#</p>\r\n', '8', 30, 15, '4'),
(2970, '<p>On&nbsp;a&nbsp;monochromatic&nbsp;monitor,&nbsp;the&nbsp;frame&nbsp;buffer&nbsp;is&nbsp;known&nbsp;as&nbsp;_____________</p>\r\n', '<p>Display&nbsp;file<br />\r\n&nbsp;</p>\r\n', '<p>Pixmap<br />\r\n&nbsp;</p>\r\n', '<p>Bitmap<br />\r\n&nbsp;</p>\r\n', '<p>Refresh&nbsp;buffer</p>\r\n', '7', 40, 9, '3'),
(2971, '<p>The tag used to create a hypertext relationship between the current document and an external resource is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;ISINDEX&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;LINK&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;A&gt;<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '8', 30, 15, '2'),
(2972, '<p>Which on of these is Web Safe fonts:</p>\r\n', '<p>Garamond<br />\r\n&nbsp;</p>\r\n', '<p>Trbuchet<br />\r\n&nbsp;</p>\r\n', '<p>Palatino<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '7', 40, 1, '4'),
(2973, '<p>The style element holds the document for setting</p>\r\n', '<p>color, alignment and border<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>font, color and alignment<br />\r\n&nbsp;</p>\r\n', '<p>font, color, alignment and border<br />\r\n&nbsp;</p>\r\n', '<p>color, alignment</p>\r\n', '8', 30, 15, '3'),
(2974, '<p>For which browsers are -webkit, -moz, -o, -ms prefixes used</p>\r\n', '<p>safari, firefox, internet explorer, opera<br />\r\n&nbsp;</p>\r\n', '<p>chrome, safari, firefox, opera<br />\r\n&nbsp;</p>\r\n', '<p>chrome, firefox, opera, Mosaic<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '7', 40, 9, '1'),
(2975, '<p>How many characters can be written with 1 kilobyte?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1000<br />\r\n&nbsp;</p>\r\n', '<p>1024<br />\r\n&nbsp;</p>\r\n', '<p>1048<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '8', 30, 15, '2'),
(2976, '<p>Who created CSS?</p>\r\n', '<p>H&aring;kon Wium Lie<br />\r\n&nbsp;</p>\r\n', '<p>Hikon Woon Jian<br />\r\n&nbsp;</p>\r\n', '<p>Nippon Chi Sun<br />\r\n&nbsp;</p>\r\n', '<p>Jian Hattori</p>\r\n', '7', 40, 9, '1'),
(2977, '<p>One should never combine the &quot;start&quot; and &quot;type&quot; option</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>true</p>\r\n', '<p>false<br />\r\n&nbsp;</p>\r\n', '<p>sometimes true, sometimes false<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above<br />\r\n&nbsp;</p>\r\n', '8', 30, 15, '2'),
(2978, '<p>What is the general term given to CSS properties starting with -moz, -webkit, -ms?</p>\r\n', '<p>W3C prefix<br />\r\n&nbsp;</p>\r\n', '<p>Browser prefix<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>Vendor prefix</p>\r\n', '7', 40, 9, '4'),
(2979, '<p>The tag used to create a new list item and also include a hyperlink.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;LI&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;UL&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;DL&gt;<br />\r\n&nbsp;</p>\r\n', '<p>None of the Above</p>\r\n', '8', 30, 15, '1'),
(2980, '<p>What all browsers are based on webkit?</p>\r\n', '<p>Dooble<br />\r\n&nbsp;</p>\r\n', '<p>Vivaldi<br />\r\n&nbsp;</p>\r\n', '<p>Conkeror<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '7', 40, 9, '1'),
(2981, '<p>To change the size of an image in HTML use</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Pliers<br />\r\n&nbsp;</p>\r\n', '<p>Bigger and Smaller<br />\r\n&nbsp;</p>\r\n', '<p>Top and Bottom</p>\r\n', '<p>Height and Width</p>\r\n', '8', 30, 15, '4'),
(2982, '<p>Which of the following is NOT a valid CSS unit?<br />\r\nch, turn, px, ems, dpcm, s, hz, rem</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All are CSS units<br />\r\n&nbsp;</p>\r\n', '<p>ems<br />\r\n&nbsp;</p>\r\n', '<p>dpcm<br />\r\n&nbsp;</p>\r\n', '<p>turn</p>\r\n', '7', 40, 9, '2'),
(2983, '<p>Which of the following color keywords has NOT yet been proposed in a W3C specification?</p>\r\n\r\n<p>blanchedalmond, dodgerblue, peachpuff, orchidblack, navajowhite, tomato</p>\r\n', '<p>All are proposed<br />\r\n&nbsp;</p>\r\n', '<p>dodgerblue<br />\r\n&nbsp;</p>\r\n', '<p>Orchidblack<br />\r\n&nbsp;</p>\r\n', '<p>blanchedalmond</p>\r\n', '7', 40, 9, '3'),
(2984, '<p>Which of the following is NOT a valid border-style property value?</p>\r\n', '<p>solid<br />\r\n&nbsp;</p>\r\n', '<p>inset<br />\r\n&nbsp;</p>\r\n', '<p>glazed<br />\r\n&nbsp;</p>\r\n', '<p>groove</p>\r\n', '7', 40, 9, '3'),
(2985, '<p>There are 16 basic color keywords in CSS. Which of the following are NOT basic color keywords?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>olive<br />\r\n&nbsp;</p>\r\n', '<p>fuchsia<br />\r\n&nbsp;</p>\r\n', '<p>cyan<br />\r\n&nbsp;</p>\r\n', '<p>aqua</p>\r\n', '7', 40, 9, '3'),
(2986, '<p>Which of the following two selectors has a higher CSS specificity?</p>\r\n\r\n<p>Selector 1:<br />\r\n#object h2::first-letter</p>\r\n\r\n<p>Selector 2:<br />\r\nbody .item div h2::first-letter:hover</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Selector 1<br />\r\n&nbsp;</p>\r\n', '<p>Selector 2<br />\r\n&nbsp;</p>\r\n', '<p>Based on order occurence<br />\r\n&nbsp;</p>\r\n', '<p>Same always</p>\r\n', '7', 40, 9, '1'),
(2987, '<p>The ______ image format uses the patented LZW compression method and is commonly used for computer-generated art that has large areas of a single color.</p>\r\n', '<p>JPEG<br />\r\n&nbsp;</p>\r\n', '<p>GIF<br />\r\n&nbsp;</p>\r\n', '<p>PNG<br />\r\n&nbsp;</p>\r\n', '<p>TIFF</p>\r\n', '8', 40, 9, '2'),
(2988, '<p>What is the CSS at-rule that can allow you to define the encoding of a stylesheet?</p>\r\n', '<p>@namespace<br />\r\n&nbsp;</p>\r\n', '<p>@charset<br />\r\n&nbsp;</p>\r\n', '<p>@document<br />\r\n&nbsp;</p>\r\n', '<p>@styleset</p>\r\n', '8', 40, 9, '2'),
(2989, '<p>Which of these are the generic font family values that can be assigned to the font-family property.<br />\r\n1) serif 2) sans-serif 3) monospace 4) cursive 5) fantasy</p>\r\n', '<p>1,2,3<br />\r\n&nbsp;</p>\r\n', '<p>2,3,4,5<br />\r\n&nbsp;</p>\r\n', '<p>1,2,3,4<br />\r\n&nbsp;</p>\r\n', '<p>All of them</p>\r\n', '8', 40, 9, '4'),
(2990, '<p>When using media queries, which of the following is NOT a valid media type?<br />\r\ntv all voice print braille tty embossed</p>\r\n', '<p>all<br />\r\n&nbsp;</p>\r\n', '<p>voice<br />\r\n&nbsp;</p>\r\n', '<p>tty<br />\r\n&nbsp;</p>\r\n', '<p>braille</p>\r\n', '8', 40, 9, '2'),
(2991, '<p>Which of the following CSS properties DOES NOT influence the box model?<br />\r\ncontent padding margin outline border</p>\r\n', '<p>Content<br />\r\n&nbsp;</p>\r\n', '<p>Outline<br />\r\n&nbsp;</p>\r\n', '<p>Padding<br />\r\n&nbsp;</p>\r\n', '<p>Border</p>\r\n', '8', 40, 9, '2'),
(2992, '<p>What is the CSS selector which allows you to target every element in a web page?</p>\r\n', '<p>@<br />\r\n&nbsp;</p>\r\n', '<p>#<br />\r\n&nbsp;</p>\r\n', '<p>*<br />\r\n&nbsp;</p>\r\n', '<p>?</p>\r\n', '8', 40, 9, '3'),
(2993, '<p>Which CSS property allows you to hide an element but still maintain the space it occupies in the web page?</p>\r\n', '<p>Visibility<br />\r\n&nbsp;</p>\r\n', '<p>Opacity<br />\r\n&nbsp;</p>\r\n', '<p>Both A and B<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '8', 40, 9, '3'),
(2994, '<p>&nbsp;In PhotoShop, the shortcut for PASTE is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;Ctrl + V<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;Ctrl + C<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;Ctrl + D<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + A</p>\r\n', '4', 15, 14, '1'),
(2995, '<p>In PhotoShop, when trying to blend one layer with another you have to adjust the:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Opacity<br />\r\n&nbsp;</p>\r\n', '<p>Layer Mask<br />\r\n&nbsp;</p>\r\n', '<p>Blending Modes<br />\r\n&nbsp;</p>\r\n', '<p>Saturation</p>\r\n', '4', 15, 14, '3'),
(2996, '<p>&nbsp;This Design Principle states that by creating numerous items of the same shape, color, size helps create unity within your design.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Emphasis<br />\r\n&nbsp;</p>\r\n', '<p>Flow<br />\r\n&nbsp;</p>\r\n', '<p>Balance<br />\r\n&nbsp;</p>\r\n', '<p>Repetition</p>\r\n', '4', 15, 14, '4'),
(2997, '<p>In PhotoShop, the shortcut to MERGE all layers is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + Shift + J<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + E<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + I<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + A</p>\r\n', '4', 15, 14, '2'),
(2998, '<p>In PhotoShop, the shortcut for Copy directly to New Layer is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + N<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + M<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + W<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + J</p>\r\n', '4', 15, 14, '4'),
(2999, '<p>In PhotoShop, the shortcut to INVERT a COLOR is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + U<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + J<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + I<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + L</p>\r\n', '4', 15, 14, '3'),
(3000, '<p>A&nbsp;stable&nbsp;sorting&nbsp;alrithm</p>\r\n', '<p>does&nbsp;not&nbsp;crash</p>\r\n', '<p>does&nbsp;not&nbsp;run&nbsp;out&nbsp;of&nbsp;memory.</p>\r\n', '<p>does&nbsp;not&nbsp;change&nbsp;the&nbsp;sequence&nbsp;of&nbsp;appearance&nbsp;of&nbsp;elements</p>\r\n', '<p>does&nbsp;not&nbsp;exists</p>\r\n', '2', 12, 11, '3'),
(3001, '<p>In PhotoShop, when pasting an image into a selected form, we call that a:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Quick Mask<br />\r\n&nbsp;</p>\r\n', '<p>Blending Mode<br />\r\n&nbsp;</p>\r\n', '<p>Vanishing Point<br />\r\n&nbsp;</p>\r\n', '<p>Layer Mask</p>\r\n', '4', 15, 14, '4'),
(3002, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;data&nbsp;structures&nbsp;are&nbsp;indexed&nbsp;structures?&nbsp;</p>\r\n', '<p>linear&nbsp;arrays</p>\r\n', '<p>linked&nbsp;lists</p>\r\n', '<p>both&nbsp;of&nbsp;above</p>\r\n', '<p>none&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '2', 13, 11, '1'),
(3003, '<p>In PhotoShop, the shortcut for PASTE INTO is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + V<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + C<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + C<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + V</p>\r\n', '4', 15, 14, '4'),
(3004, '<p>Two&nbsp;dimensional&nbsp;arrays&nbsp;are&nbsp;also&nbsp;called</p>\r\n', '<p>tables&nbsp;arrays</p>\r\n', '<p>matrix&nbsp;arrays</p>\r\n', '<p>both&nbsp;of&nbsp;above</p>\r\n', '<p>none&nbsp;of&nbsp;above</p>\r\n', '1', 15, 11, '3'),
(3005, '<p>In PhotoShop, the shortcut for PASTE is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + V<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + C<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + A<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + D</p>\r\n', '4', 15, 14, '1'),
(3006, '<p>Is Python case sensitive when dealing with identifiers?</p>\r\n', '<p>yes</p>\r\n', '<p>no<br />\r\n&nbsp;</p>\r\n', '<p>machine dependent<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '1', 14, 21, '1'),
(3007, '<p>In PhotoShop, the shortcut for PASTE is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + V<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + C<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + A<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + D</p>\r\n', '4', 15, 14, '2'),
(3008, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;data&nbsp;structure&nbsp;store&nbsp;the&nbsp;homogeneous&nbsp;data&nbsp;elements?&nbsp;</p>\r\n', '<p>Arrays Option</p>\r\n', '<p>Records Option</p>\r\n', '<p>Pointers</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '2', 14, 11, '2'),
(3009, '<p>What is the maximum possible length of an identifier?<br />\r\n&nbsp;</p>\r\n', '<p>31 characters<br />\r\n&nbsp;</p>\r\n', '<p>63 characters<br />\r\n&nbsp;</p>\r\n', '<p>79 characters<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '1', 14, 21, '4'),
(3010, '<p>Javascript is _________ language.</p>\r\n', '<p>Programming<br />\r\n&nbsp;</p>\r\n', '<p>Application<br />\r\n&nbsp;</p>\r\n', '<p>None of These<br />\r\n&nbsp;</p>\r\n', '<p>Scripting</p>\r\n', '1', 15, 18, '4'),
(3011, '<p>Which of the following is invalid?<br />\r\n&nbsp;</p>\r\n', '<p>_a = 1<br />\r\n&nbsp;</p>\r\n', '<p>__a = 1<br />\r\n&nbsp;</p>\r\n', '<p>__str__ = 1<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '1', 14, 21, '4'),
(3012, '<p>This Design Principle states that by varying such things as size, color, thickness and shape you create:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Contrast<br />\r\n&nbsp;</p>\r\n', '<p>Flow<br />\r\n&nbsp;</p>\r\n', '<p>Emphasis<br />\r\n&nbsp;</p>\r\n', '<p>Balance</p>\r\n', '4', 15, 14, '1'),
(3013, '<p>Which of the following is an invalid variable?<br />\r\n&nbsp;</p>\r\n', '<p>my_string_1<br />\r\n&nbsp;</p>\r\n', '<p>1st_string<br />\r\n&nbsp;</p>\r\n', '<p>foo</p>\r\n', '<p>_</p>\r\n', '1', 14, 21, '2'),
(3014, '<p>JavaScript is ______ Side Scripting Language.</p>\r\n', '<p>Server<br />\r\n&nbsp;</p>\r\n', '<p>ISP<br />\r\n&nbsp;</p>\r\n', '<p>None of These<br />\r\n&nbsp;</p>\r\n', '<p>Browser</p>\r\n', '1', 15, 18, '3'),
(3015, '<p>In PhotoShop, the shortcut to APPLY A FILTER is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + V<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + C<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + F<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + D</p>\r\n', '4', 15, 14, '3'),
(3016, '<p>Why are local variable names beginning with an underscore discouraged?</p>\r\n', '<p>they are used to indicate a private variables of a class<br />\r\n&nbsp;</p>\r\n', '<p>they confuse the interpreter</p>\r\n', '<p>they are used to indicate global variables<br />\r\n&nbsp;</p>\r\n', '<p>they slow down execution</p>\r\n', '1', 14, 21, '1'),
(3017, '<p>JavaScript&nbsp;is&nbsp;designed&nbsp;for&nbsp;following&nbsp;purpose</p>\r\n', '<p>To&nbsp;Style&nbsp;HTML&nbsp;Pages<br />\r\n&nbsp;</p>\r\n', '<p>To&nbsp;add&nbsp;interactivity&nbsp;to&nbsp;HTML&nbsp;Pages.<br />\r\n&nbsp;</p>\r\n', '<p>To&nbsp;Perform&nbsp;Server&nbsp;Side&nbsp;Scripting&nbsp;Opertion<br />\r\n&nbsp;</p>\r\n', '<p>To&nbsp;Execute&nbsp;Query&nbsp;Related&nbsp;to&nbsp;DB&nbsp;on&nbsp;Server</p>\r\n', '1', 15, 18, '2'),
(3018, '<p>Which of the following is not a keyword?<br />\r\n&nbsp;</p>\r\n', '<p>eval<br />\r\n&nbsp;</p>\r\n', '<p>assert<br />\r\n&nbsp;</p>\r\n', '<p>nonlocal<br />\r\n&nbsp;</p>\r\n', '<p>pass</p>\r\n', '1', 14, 21, '1'),
(3019, '<p>This Design Principle states that a page should have an even amount of positive and negative space throughout the design, regardless if it is Symmetrical or Asymmetrical.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Balance<br />\r\n&nbsp;</p>\r\n', '<p>Repetition<br />\r\n&nbsp;</p>\r\n', '<p>Emphasis<br />\r\n&nbsp;</p>\r\n', '<p>Alignment</p>\r\n', '4', 15, 14, '1'),
(3020, '<p>All keywords in Python are in<br />\r\n&nbsp;</p>\r\n', '<p>lower case<br />\r\n&nbsp;</p>\r\n', '<p>UPPER CASE<br />\r\n&nbsp;</p>\r\n', '<p>Capitalized<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '1', 14, 21, '4'),
(3021, '<p>JavaScript&nbsp;Code&nbsp;is&nbsp;written&nbsp;inside&nbsp;file&nbsp;having&nbsp;extension&nbsp;__________.</p>\r\n', '<p>.js<br />\r\n&nbsp;</p>\r\n', '<p>.java<br />\r\n&nbsp;</p>\r\n', '<p>.jcs<br />\r\n&nbsp;</p>\r\n', '<p>.jsp</p>\r\n', '1', 15, 18, '1'),
(3022, '<p>Why&nbsp;JavaScript&nbsp;is&nbsp;called&nbsp;as&nbsp;Lightweight&nbsp;Programming&nbsp;Language?</p>\r\n', '<p>because&nbsp;JS&nbsp;is&nbsp;available&nbsp;free&nbsp;of&nbsp;cost<br />\r\n&nbsp;</p>\r\n', '<p>because&nbsp;JS&nbsp;is&nbsp;client&nbsp;side&nbsp;scripting<br />\r\n&nbsp;</p>\r\n', '<p>because&nbsp;we&nbsp;can&nbsp;add&nbsp;programming&nbsp;functionality&nbsp;inside&nbsp;JS<br />\r\n&nbsp;</p>\r\n', '<p>because&nbsp;JS&nbsp;can&nbsp;provide&nbsp;programming&nbsp;functionality&nbsp;inside&nbsp;but&nbsp;up&nbsp;to&nbsp;certain&nbsp;extend.</p>\r\n', '1', 15, 18, '4'),
(3023, '<p>In PhotoShop, the shortcut for SELECT ALL is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + V<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + C<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + A<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + D</p>\r\n', '4', 15, 14, '3'),
(3024, '<p>Which of the following is true for variable names in Python?<br />\r\n&nbsp;</p>\r\n', '<p>unlimited length</p>\r\n', '<p>all private members must have leading and trailing underscores<br />\r\n&nbsp;</p>\r\n', '<p>underscore and ampersand are the only two special characters allowed<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '1', 14, 21, '1'),
(3025, '<p>JavaScript&nbsp;Code&nbsp;can&nbsp;be&nbsp;called&nbsp;by&nbsp;using&nbsp;_________.</p>\r\n', '<p>Any&nbsp;Function<br />\r\n&nbsp;</p>\r\n', '<p>RMI<br />\r\n&nbsp;</p>\r\n', '<p>Triggering&nbsp;Event<br />\r\n&nbsp;</p>\r\n', '<p>Preprocessor</p>\r\n', '1', 15, 18, '3'),
(3026, '<p>Which of the following is an invalid statement?<br />\r\n&nbsp;</p>\r\n', '<p>abc = 1,000,000<br />\r\n&nbsp;</p>\r\n', '<p>a b c = 1000 2000 3000<br />\r\n&nbsp;</p>\r\n', '<p>a,b,c = 1000, 2000, 3000<br />\r\n&nbsp;</p>\r\n', '<p>a_b_c = 1,000,000<br />\r\n&nbsp;</p>\r\n', '1', 14, 21, '2'),
(3027, '<p>&nbsp;In PhotoShop, the shortcut for QUICKMASK is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Q<br />\r\n&nbsp;</p>\r\n', '<p>W<br />\r\n&nbsp;</p>\r\n', '<p>E<br />\r\n&nbsp;</p>\r\n', '<p>R</p>\r\n', '4', 15, 14, '1'),
(3028, '<p>Which of the following cannot be a variable?<br />\r\n&nbsp;</p>\r\n', '<p>__init__</p>\r\n', '<p>in</p>\r\n', '<p>it<br />\r\n&nbsp;</p>\r\n', '<p>on</p>\r\n', '1', 14, 21, '2'),
(3029, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;Attribute&nbsp;is&nbsp;used&nbsp;to&nbsp;include&nbsp;External&nbsp;JS&nbsp;code&nbsp;inside&nbsp;your&nbsp;HTML&nbsp;Document?</p>\r\n', '<p>link<br />\r\n&nbsp;</p>\r\n', '<p>script<br />\r\n&nbsp;</p>\r\n', '<p>src<br />\r\n&nbsp;</p>\r\n', '<p>ext</p>\r\n', '1', 15, 18, '3'),
(3030, '<p>This Design Principle states that the viewer&#39;s eye in western culture follows a distinct pattern from the upper left hand corner to the bottom right hand corner of a page in a backward &quot;S&quot; shape:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Repetition<br />\r\n&nbsp;</p>\r\n', '<p>Flow<br />\r\n&nbsp;</p>\r\n', '<p>Contrast<br />\r\n&nbsp;</p>\r\n', '<p>Emphasis</p>\r\n', '4', 15, 14, '2'),
(3031, '<p>What&nbsp;will&nbsp;be&nbsp;the&nbsp;Output&nbsp;of&nbsp;the&nbsp;following&nbsp;code&nbsp;?<br />\r\n&lt;html&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\n&lt;!-- document.print(&quot;Hello&quot;);//--&gt;<br />\r\n&lt;/script&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n', '<p>Will&nbsp;Throw&nbsp;Error<br />\r\n&nbsp;</p>\r\n', '<p>Will&nbsp;not&nbsp;print&nbsp;anything&nbsp;because&nbsp;of&nbsp;Comment<br />\r\n&nbsp;</p>\r\n', '<p>Hello<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;Above</p>\r\n', '1', 15, 18, '3'),
(3032, '<p>Which is the correct operator for power(x^y)?<br />\r\n&nbsp;</p>\r\n', '<p>X^y<br />\r\n&nbsp;</p>\r\n', '<p>X**y<br />\r\n&nbsp;</p>\r\n', '<p>X^^y<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '1', 14, 21, '2'),
(3033, '<p>Why&nbsp;so&nbsp;JavaScript&nbsp;and&nbsp;Java&nbsp;have&nbsp;similar&nbsp;name?</p>\r\n', '<p>JavaScript&nbsp;is&nbsp;a&nbsp;stripped&shy;down&nbsp;version&nbsp;of&nbsp;Java<br />\r\n&nbsp;</p>\r\n', '<p>JavaScript&#39;s&nbsp;syntax&nbsp;is&nbsp;loosely&nbsp;based&nbsp;on&nbsp;Java&#39;s<br />\r\n&nbsp;</p>\r\n', '<p>They&nbsp;both&nbsp;originated&nbsp;on&nbsp;the&nbsp;island&nbsp;of&nbsp;Java<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '1', 15, 18, '2'),
(3034, '<p>Which one of these is floor division?<br />\r\n&nbsp;</p>\r\n', '<p>/<br />\r\n&nbsp;</p>\r\n', '<p>//</p>\r\n', '<p>%<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '1', 14, 7, '2'),
(3035, '<p>When&nbsp;new&nbsp;data&nbsp;are&nbsp;to&nbsp;be&nbsp;inserted&nbsp;into&nbsp;a&nbsp;data&nbsp;structure,&nbsp;but&nbsp;there&nbsp;is&nbsp;no&nbsp;available&nbsp;space?&nbsp;this&nbsp;situation&nbsp;is&nbsp;usually called&nbsp;</p>\r\n', '<p>underflow</p>\r\n', '<p>overflow</p>\r\n', '<p>housefull</p>\r\n', '<p>saturated</p>\r\n', '1', 14, 11, '2'),
(3036, '<p>When&nbsp;a&nbsp;user&nbsp;views&nbsp;a&nbsp;page&nbsp;containing&nbsp;a&nbsp;JavaScript&nbsp;program,&nbsp;which&nbsp;machine&nbsp;actually&nbsp;executes&nbsp;the&nbsp;script?</p>\r\n', '<p>The&nbsp;User&#39;s&nbsp;machine&nbsp;running&nbsp;a&nbsp;Web&nbsp;browser<br />\r\n&nbsp;</p>\r\n', '<p>The&nbsp;Web&nbsp;server<br />\r\n&nbsp;</p>\r\n', '<p>A&nbsp;central&nbsp;machine&nbsp;deep&nbsp;within&nbsp;Netscape&#39;s&nbsp;corporate&nbsp;offices<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;Above</p>\r\n', '1', 15, 18, '1'),
(3037, '<p>In PhotoShop, the shortcut to INVERT A SELECTION is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + Shift + J<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + E<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + D<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + I</p>\r\n', '4', 15, 14, '4'),
(3038, '<p>What&nbsp;are&nbsp;variables&nbsp;used&nbsp;for&nbsp;in&nbsp;JavaScript&nbsp;Programs?</p>\r\n', '<p>Storing&nbsp;numbers,&nbsp;dates,&nbsp;or&nbsp;other&nbsp;values<br />\r\n&nbsp;</p>\r\n', '<p>Varying&nbsp;randomly<br />\r\n&nbsp;</p>\r\n', '<p>Causing&nbsp;high&shy;school&nbsp;algebra&nbsp;flashbacks<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '1', 15, 18, '1'),
(3039, '<p>The&nbsp;situation&nbsp;when&nbsp;in&nbsp;a&nbsp;linked&nbsp;list&nbsp;START=NULL</p>\r\n', '<p>underflow</p>\r\n', '<p>overflow</p>\r\n', '<p>housefull</p>\r\n', '<p>saturated</p>\r\n', '1', 13, 11, '1'),
(3040, '<p>What is the order of precedence in python?<br />\r\ni) Parentheses<br />\r\nii) Exponential<br />\r\niii) Division<br />\r\niv) Multiplication<br />\r\nv) Addition<br />\r\nvi) Subtraction</p>\r\n', '<p>i,ii,iii,iv,v,vi</p>\r\n', '<p>ii,i,iii,iv,v,vi<br />\r\n&nbsp;</p>\r\n', '<p>ii,i,iv,iii,v,vi<br />\r\n&nbsp;</p>\r\n', '<p>i,ii,iii,iv,vi,v</p>\r\n', '1', 14, 21, '1'),
(3041, '<p>In PhotoShop, the shortcut to FIT A DOCUMENT ON SCREEN is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + 0<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + 0<br />\r\n&nbsp;</p>\r\n', '<p>Shift + 0<br />\r\n&nbsp;</p>\r\n', '<p>Alt + 0</p>\r\n', '4', 15, 14, '1'),
(3042, '<p>What is answer of this expression, 22 % 3 is?<br />\r\n&nbsp;</p>\r\n', '<p>7<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>0</p>\r\n', '<p>5</p>\r\n', '1', 14, 21, '2'),
(3043, '<p>This Design Principle states that text should be uniform throughout a document.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Flow<br />\r\n&nbsp;</p>\r\n', '<p>Balance<br />\r\n&nbsp;</p>\r\n', '<p>Alignment<br />\r\n&nbsp;</p>\r\n', '<p>Contrast</p>\r\n', '4', 15, 14, '3'),
(3044, '<p>The&nbsp;term&nbsp;&quot;push&quot;&nbsp;and&nbsp;&quot;pop&quot;&nbsp;is&nbsp;related&nbsp;to&nbsp;&nbsp;</p>\r\n', '<p>array</p>\r\n', '<p>lists</p>\r\n', '<p>stacks</p>\r\n', '<p>all&nbsp;the&nbsp;above</p>\r\n', '1', 12, 11, '3'),
(3045, '<p>Operators with the same precedence are evaluated in which manner?<br />\r\n&nbsp;</p>\r\n', '<p>Left to Right<br />\r\n&nbsp;</p>\r\n', '<p>Right to Left<br />\r\n&nbsp;</p>\r\n', '<p>Cant say<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '1', 14, 21, '1'),
(3046, '<p>In PhotoShop, the shortcut to ZOOM IN is:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ctrl + +<br />\r\n&nbsp;</p>\r\n', '<p>Shift + +<br />\r\n&nbsp;</p>\r\n', '<p>Alt + +<br />\r\n&nbsp;</p>\r\n', '<p>Ctrl + Shift + +</p>\r\n', '4', 15, 14, '1'),
(3047, '<p>What is the output of this expression, 3*1**3?<br />\r\n&nbsp;</p>\r\n', '<p>27<br />\r\n&nbsp;</p>\r\n', '<p>9<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '1', 14, 21, '3'),
(3048, '<p>The&nbsp;memory&nbsp;address&nbsp;of&nbsp;fifth&nbsp;element&nbsp;of&nbsp;an&nbsp;array&nbsp;can&nbsp;be&nbsp;calculated&nbsp;by&nbsp;the&nbsp;formula</p>\r\n', '<p>LOC(Array[5]=Base(Array)+w(5&shy;lower&nbsp;bound),&nbsp;where&nbsp;w&nbsp;is&nbsp;the&nbsp;number&nbsp;of&nbsp;words&nbsp;per&nbsp;memory&nbsp;cell&nbsp;for&nbsp;the array</p>\r\n', '<p>LOC(Array[5])=Base(Array[5])+(5&shy;lower&nbsp;bound),&nbsp;where&nbsp;w&nbsp;is&nbsp;the&nbsp;number&nbsp;of&nbsp;words&nbsp;per&nbsp;memory&nbsp;cell&nbsp;for&nbsp;the array</p>\r\n', '<p>LOC(Array[5])=Base(Array[4])+(5&shy;Upper&nbsp;bound),&nbsp;where&nbsp;w&nbsp;is&nbsp;the&nbsp;number&nbsp;of&nbsp;words&nbsp;per&nbsp;memory&nbsp;cell&nbsp;for&nbsp;the array</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above Answer</p>\r\n', '7', 25, 11, '1'),
(3050, '<p>Which one of the following have the same precedence?</p>\r\n', '<p>Addition and Subtraction<br />\r\n&nbsp;</p>\r\n', '<p>Multiplication and Division<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '1', 14, 21, '3'),
(3051, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;not&nbsp;the&nbsp;required&nbsp;condition&nbsp;for&nbsp;binary&nbsp;search&nbsp;algorithm?&nbsp;</p>\r\n', '<p>The&nbsp;list&nbsp;must&nbsp;be&nbsp;sorted</p>\r\n', '<p>There&nbsp;should&nbsp;be&nbsp;the&nbsp;direct&nbsp;access&nbsp;to&nbsp;the&nbsp;middle&nbsp;element&nbsp;in&nbsp;any&nbsp;sublist</p>\r\n', '<p>There&nbsp;must&nbsp;be&nbsp;mechanism&nbsp;to&nbsp;delete&nbsp;and/or&nbsp;insert&nbsp;elements&nbsp;in&nbsp;list</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '1', 13, 11, '3'),
(3052, '<p>Which one of the following have the highest precedence in the expression?<br />\r\n&nbsp;</p>\r\n', '<p>Exponential<br />\r\n&nbsp;</p>\r\n', '<p>Addition<br />\r\n&nbsp;</p>\r\n', '<p>Multiplication<br />\r\n&nbsp;</p>\r\n', '<p>Parentheses</p>\r\n', '1', 14, 21, '4'),
(3053, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;are&nbsp;capabilities&nbsp;of&nbsp;functions&nbsp;in&nbsp;JavaScript?</p>\r\n', '<p>Return&nbsp;a&nbsp;value<br />\r\n&nbsp;</p>\r\n', '<p>Accept&nbsp;parameters&nbsp;and&nbsp;Return&nbsp;a&nbsp;value<br />\r\n&nbsp;</p>\r\n', '<p>Accept&nbsp;parameters<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '1', 15, 18, '3'),
(3054, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;not&nbsp;a&nbsp;limitation&nbsp;of&nbsp;binary&nbsp;search&nbsp;algorithm?</p>\r\n', '<p>must&nbsp;use&nbsp;a&nbsp;sorted&nbsp;array</p>\r\n', '<p>requirement&nbsp;of&nbsp;sorted&nbsp;array&nbsp;is&nbsp;expensive&nbsp;when&nbsp;a&nbsp;lot&nbsp;of&nbsp;insertion&nbsp;and&nbsp;deletions&nbsp;are&nbsp;needed</p>\r\n', '<p>there&nbsp;must&nbsp;be&nbsp;a&nbsp;mechanism&nbsp;to&nbsp;access&nbsp;middle&nbsp;element&nbsp;directly</p>\r\n', '<p>binary&nbsp;search&nbsp;algorithm&nbsp;is&nbsp;not&nbsp;efficient&nbsp;when&nbsp;the&nbsp;data&nbsp;elements&nbsp;are&nbsp;more&nbsp;thmust&nbsp;use&nbsp;a&nbsp;sorted&nbsp;arrayan&nbsp;1000.</p>\r\n', '3', 15, 11, '4'),
(3055, '<p>Which of these in not a core datatype?<br />\r\n&nbsp;</p>\r\n', '<p>Lists<br />\r\n&nbsp;</p>\r\n', '<p>Dictionary<br />\r\n&nbsp;</p>\r\n', '<p>Tuples<br />\r\n&nbsp;</p>\r\n', '<p>Class</p>\r\n', '1', 14, 21, '4'),
(3056, '<p>Given a function that does not return any value, What value is thrown by default when executed in shell.<br />\r\n&nbsp;</p>\r\n', '<p>int<br />\r\n&nbsp;</p>\r\n', '<p>bool<br />\r\n&nbsp;</p>\r\n', '<p>void<br />\r\n&nbsp;</p>\r\n', '<p>None</p>\r\n', '1', 14, 21, '4'),
(3057, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;not&nbsp;a&nbsp;valid&nbsp;JavaScript&nbsp;variable&nbsp;name?</p>\r\n', '<p>2names<br />\r\n&nbsp;</p>\r\n', '<p>_first_and_last_names<br />\r\n&nbsp;</p>\r\n', '<p>FirstAndLast<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '1', 15, 18, '1'),
(3058, '<p>In PhotoShop, when we press Q to paint an image with a red film like color to make a difficult selection possible we call it a:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Quick Mask<br />\r\n&nbsp;</p>\r\n', '<p>Ghost Mask<br />\r\n&nbsp;</p>\r\n', '<p>Layer Mask<br />\r\n&nbsp;</p>\r\n', '<p>Ugly Mask</p>\r\n', '4', 15, 14, '1'),
(3059, '<p>______&nbsp;tag&nbsp;is&nbsp;an&nbsp;extension&nbsp;to&nbsp;HTML&nbsp;that&nbsp;can&nbsp;enclose&nbsp;any&nbsp;number&nbsp;of&nbsp;JavaScript&nbsp;statements.</p>\r\n', '<p>&lt;SCRIPT&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;BODY&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;HEAD&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;TITLE&gt;</p>\r\n', '1', 15, 18, '1'),
(3060, '<p>&nbsp;__________ is a closed 2 dimension area.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Value<br />\r\n&nbsp;</p>\r\n', '<p>Shape<br />\r\n&nbsp;</p>\r\n', '<p>Space<br />\r\n&nbsp;</p>\r\n', '<p>Shade</p>\r\n', '4', 15, 14, '2'),
(3061, '<p>What&nbsp;is&nbsp;the&nbsp;correct&nbsp;JavaScript&nbsp;syntax&nbsp;to&nbsp;write&nbsp;&quot;Hello&nbsp;World&quot;?</p>\r\n', '<p>system.out.println(&quot;Hello&nbsp;World&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>println&nbsp;(&quot;Hello&nbsp;World&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>document.write(&quot;Hello&nbsp;World&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>response.write(&quot;Hello&nbsp;World&quot;)</p>\r\n', '1', 15, 18, '3'),
(3062, '<p>A&nbsp;variable&nbsp;P&nbsp;is&nbsp;called&nbsp;pointer&nbsp;if&nbsp;</p>\r\n', '<p>P&nbsp;contains&nbsp;the&nbsp;address&nbsp;of&nbsp;an&nbsp;element&nbsp;in&nbsp;DATA.</p>\r\n', '<p>P&nbsp;points&nbsp;to&nbsp;the&nbsp;address&nbsp;of&nbsp;first&nbsp;element&nbsp;in&nbsp;DATA</p>\r\n', '<p>P&nbsp;can&nbsp;store&nbsp;only&nbsp;memory&nbsp;addresses</p>\r\n', '<p>P&nbsp;contain&nbsp;the&nbsp;DATA&nbsp;and&nbsp;the&nbsp;address&nbsp;of&nbsp;DATA</p>\r\n', '3', 16, 11, '1'),
(3063, '<p>Following set of commands are executed in shell, what will be the output?</p>\r\n\r\n<p>&gt;&gt;&gt;str=&quot;hello&quot;<br />\r\n&gt;&gt;&gt;str[:2]</p>\r\n\r\n<p>&gt;&gt;&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>he<br />\r\n&nbsp;</p>\r\n', '<p>lo<br />\r\n&nbsp;</p>\r\n', '<p>olleh<br />\r\n&nbsp;</p>\r\n', '<p>hello</p>\r\n', '1', 14, 21, '1'),
(3064, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;best&nbsp;describes&nbsp;JavaScript?</p>\r\n', '<p>a&nbsp;low&shy;level&nbsp;programming&nbsp;language.<br />\r\n&nbsp;</p>\r\n', '<p>a&nbsp;scripting&nbsp;language&nbsp;precompiled&nbsp;in&nbsp;the&nbsp;browser.<br />\r\n&nbsp;</p>\r\n', '<p>a&nbsp;compiled&nbsp;scripting&nbsp;language.<br />\r\n&nbsp;</p>\r\n', '<p>an&nbsp;object&shy; oriented&nbsp;scripting&nbsp;language.</p>\r\n', '1', 15, 18, '4'),
(3065, '<p>&nbsp;Orange, Green, Violet are _______________.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Primary Colors<br />\r\n&nbsp;</p>\r\n', '<p>Tertiary Colors<br />\r\n&nbsp;</p>\r\n', '<p>Arbitrary Colors<br />\r\n&nbsp;</p>\r\n', '<p>Secondary Colors</p>\r\n', '4', 15, 14, '4'),
(3066, '<p>Which of the following will run without errors ?</p>\r\n', '<p>round(45.8)<br />\r\n&nbsp;</p>\r\n', '<p>round(6352.898,2,5)</p>\r\n', '<p>round()<br />\r\n&nbsp;</p>\r\n', '<p>round(7463.123,2,1)</p>\r\n', '1', 14, 21, '1'),
(3067, '<p>JavaScript is can be written -</p>\r\n', '<p>directly into JS file and included into HTML<br />\r\n&nbsp;</p>\r\n', '<p>directly into HTML pages<br />\r\n&nbsp;</p>\r\n', '<p>Both A and B<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '1', 15, 18, '3'),
(3068, '<p>What is the return type of function id ?<br />\r\n&nbsp;</p>\r\n', '<p>int<br />\r\n&nbsp;</p>\r\n', '<p>float</p>\r\n', '<p>bool<br />\r\n&nbsp;</p>\r\n', '<p>dict</p>\r\n', '1', 14, 21, '1'),
(3069, '<p>&nbsp;_____________ is the characterization of a color as either warm or cool.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Template<br />\r\n&nbsp;</p>\r\n', '<p>Temperature<br />\r\n&nbsp;</p>\r\n', '<p>Trademark<br />\r\n&nbsp;</p>\r\n', '<p>Texture</p>\r\n', '4', 15, 14, '2'),
(3070, '<p>JavaScript is an ________ language.</p>\r\n', '<p>compiled<br />\r\n&nbsp;</p>\r\n', '<p>interpreted<br />\r\n&nbsp;</p>\r\n', '<p>Both Compiled And Interpreted<br />\r\n&nbsp;</p>\r\n', '<p>Neither Compiled, nor Interpreted</p>\r\n', '1', 15, 18, '2'),
(3071, '<p>When&nbsp;inorder&nbsp;traversing&nbsp;a&nbsp;tree&nbsp;resulted&nbsp;E&nbsp;A&nbsp;C&nbsp;K&nbsp;F&nbsp;H&nbsp;D&nbsp;B&nbsp;G?&nbsp;the&nbsp;preorder&nbsp;traversal&nbsp;would&nbsp;return&nbsp;</p>\r\n', '<p>FAEKCDBHG</p>\r\n', '<p>FAEKCDHGB</p>\r\n', '<p>EAFKHDCBG</p>\r\n', '<p>FEAKDCHBG</p>\r\n', '8', 24, 11, '2'),
(3072, '<p>JavaScript is also called as _____________.</p>\r\n', '<p>Client Side Scripting Language<br />\r\n&nbsp;</p>\r\n', '<p>Server Side Scripting Language<br />\r\n&nbsp;</p>\r\n', '<p>Browser Side Scripting Language<br />\r\n&nbsp;</p>\r\n', '<p>Both A and C</p>\r\n', '1', 15, 18, '4'),
(3073, '<p>In python we do not specify types,it is directly interpreted by the compiler, so consider the following operation to be performed.</p>\r\n\r\n<p>&gt;&gt;&gt;x = 13 ? 2</p>\r\n\r\n<p>objective is to make sure x has a integer value, select all that apply (python 3.xx)<br />\r\n&nbsp;</p>\r\n', '<p>x = 13 // 2</p>\r\n', '<p>x = int(13 / 2)<br />\r\n&nbsp;</p>\r\n', '<p>x = 13 % 2<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '1', 14, 21, '4'),
(3074, '<p>Which file format saves graphic design with all layers visible for changes upon opening the next time?</p>\r\n', '<p>.gif</p>\r\n', '<p>.pdf</p>\r\n', '<p>.jpeg</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>.psd</p>\r\n', '4', 15, 14, '4'),
(3075, '<p>A JavaScript program developed on a Unix Machine</p>\r\n', '<p>will throw errors and exceptions<br />\r\n&nbsp;</p>\r\n', '<p>must be restricted to a Unix Machine only<br />\r\n&nbsp;</p>\r\n', '<p>will work perfectly well on a Windows Machine<br />\r\n&nbsp;</p>\r\n', '<p>will be displayed as a JavaScript text on the browser</p>\r\n', '1', 15, 18, '3'),
(3076, '<p>The&nbsp;Average&nbsp;case&nbsp;occur&nbsp;in&nbsp;linear&nbsp;search&nbsp;algorithm&nbsp;</p>\r\n', '<p>When&nbsp;Item&nbsp;is&nbsp;somewhere&nbsp;in&nbsp;the&nbsp;middle&nbsp;of&nbsp;the&nbsp;array&nbsp;</p>\r\n', '<p>When&nbsp;Item&nbsp;is&nbsp;not&nbsp;in&nbsp;the&nbsp;array&nbsp;at&nbsp;all</p>\r\n', '<p>When&nbsp;Item&nbsp;is&nbsp;the&nbsp;last&nbsp;element&nbsp;in&nbsp;the&nbsp;array</p>\r\n', '<p>When&nbsp;Item&nbsp;is&nbsp;the&nbsp;last&nbsp;element&nbsp;in&nbsp;the&nbsp;array&nbsp;or&nbsp;is&nbsp;not&nbsp;there&nbsp;at&nbsp;all</p>\r\n', '3', 15, 11, '1'),
(3077, '<p>Pixels represent tiny&nbsp; ____ of color, which are typically unseen by naked eye.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Circles<br />\r\n&nbsp;</p>\r\n', '<p>Squares<br />\r\n&nbsp;</p>\r\n', '<p>Inches<br />\r\n&nbsp;</p>\r\n', '<p>Swatches</p>\r\n', '4', 15, 14, '2'),
(3078, '<p>JavaScript is ideal to</p>\r\n', '<p>make computations in HTML simpler<br />\r\n&nbsp;</p>\r\n', '<p>minimize storage requirements on the web server<br />\r\n&nbsp;</p>\r\n', '<p>increase the download time for the client<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '1', 15, 18, '2'),
(3079, '<p>What error occurs when you execute?<br />\r\napple = mango<br />\r\n&nbsp;</p>\r\n', '<p>SyntaxError<br />\r\n&nbsp;</p>\r\n', '<p>NameError<br />\r\n&nbsp;</p>\r\n', '<p>ValueError<br />\r\n&nbsp;</p>\r\n', '<p>TypeError</p>\r\n', '1', 14, 21, '2'),
(3080, '<p>A proper scripting language is a</p>\r\n', '<p>High level programming language<br />\r\n&nbsp;</p>\r\n', '<p>Assembly level programming language<br />\r\n&nbsp;</p>\r\n', '<p>Machine level programming language<br />\r\n&nbsp;</p>\r\n', '<p>Low level programming language</p>\r\n', '1', 15, 18, '1'),
(3081, '<p>&lsquo;CC&rsquo; in Adobe Photoshop stands for :</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Craft Cloud<br />\r\n&nbsp;</p>\r\n', '<p>Creative Client<br />\r\n&nbsp;</p>\r\n', '<p>Creative Cloud<br />\r\n&nbsp;</p>\r\n', '<p>Craft Client</p>\r\n', '4', 15, 14, '3'),
(3082, '<p>The statement a===b refers to</p>\r\n', '<p>Both a and b are equal in value, type and reference address<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b are equal in value<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b are equal in value and type<br />\r\n&nbsp;</p>\r\n', '<p>There is no such statement</p>\r\n', '1', 15, 18, '3'),
(3083, '<p>Carefully observe the code and give the answer.</p>\r\n\r\n<p>def example(a):&nbsp;&nbsp;&nbsp;<br />\r\na = a + &#39;2&#39;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\na = a*2&nbsp;&nbsp;&nbsp;<br />\r\nreturn a<br />\r\n&gt;&gt;&gt;example(&quot;hello&quot;)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>indentation Error</p>\r\n', '<p>cannot perform mathematical operation on strings<br />\r\n&nbsp;</p>\r\n', '<p>hello2<br />\r\n&nbsp;</p>\r\n', '<p>hello2hello2</p>\r\n', '1', 14, 21, '1'),
(3084, '<p>&nbsp;What kind of measurements can&rsquo;t be used in Photoshop?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Rows<br />\r\n&nbsp;</p>\r\n', '<p>cm<br />\r\n&nbsp;</p>\r\n', '<p>Pixels<br />\r\n&nbsp;</p>\r\n', '<p>Percent</p>\r\n', '4', 15, 14, '1'),
(3085, '<p>The function definitions in JavaScript begins with</p>\r\n', '<p>Identifier and Parantheses<br />\r\n&nbsp;</p>\r\n', '<p>Return type and Identifier<br />\r\n&nbsp;</p>\r\n', '<p>Return type, Function keyword, Identifier and Parantheses<br />\r\n&nbsp;</p>\r\n', '<p>Identifier and Return type</p>\r\n', '1', 15, 18, '1'),
(3086, '<p>A function with no return value is called</p>\r\n', '<p>Procedures<br />\r\n&nbsp;</p>\r\n', '<p>Method<br />\r\n&nbsp;</p>\r\n', '<p>Static function<br />\r\n&nbsp;</p>\r\n', '<p>Dynamic function</p>\r\n', '1', 15, 18, '1'),
(3087, '<p>What does &lsquo;PSD&rsquo; stands for?</p>\r\n', '<p>Power Spectral Density</p>\r\n', '<p>Photoshop Design File</p>\r\n', '<p>Photoshop Data File</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Photoshop System Data</p>\r\n', '5', 15, 14, '3'),
(3088, '<p>Do functions in JavaScript necessarily return a value ?</p>\r\n', '<p>It is mandatory<br />\r\n&nbsp;</p>\r\n', '<p>Not necessary<br />\r\n&nbsp;</p>\r\n', '<p>Few functions return values by default<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '1', 15, 18, '1'),
(3089, '<p>What is the full form of &lsquo;CMYK&rsquo;?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Cyanogen Mod Yureka Kogan<br />\r\n&nbsp;</p>\r\n', '<p>Cyan Magenta, Yellow, Key<br />\r\n&nbsp;</p>\r\n', '<p>Cyan Magenta, Yellow, Kenyan<br />\r\n&nbsp;</p>\r\n', '<p>Cyan Maroon, Yellow, Kenyan</p>\r\n', '5', 15, 14, '2'),
(3090, '<p>What is the output of print 0.1 + 0.2 == 0.3?<br />\r\n&nbsp;</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>Machine dependent<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '2', 19, 21, '2'),
(3091, '<p>The word &ldquo;document&rdquo; mainly refers to</p>\r\n', '<p>Dynamic Information<br />\r\n&nbsp;</p>\r\n', '<p>Static Information<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '1', 15, 18, '2');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(3092, '<p>What is/are a color mode in Photoshop?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>CMYK<br />\r\n&nbsp;</p>\r\n', '<p>Bitmap<br />\r\n&nbsp;</p>\r\n', '<p>Lab color<br />\r\n&nbsp;</p>\r\n', '<p>All the Above</p>\r\n', '5', 15, 14, '4'),
(3093, '<p>Which of the following is not a complex number?<br />\r\n&nbsp;</p>\r\n', '<p>k = 2 + 3j<br />\r\n&nbsp;</p>\r\n', '<p>k = complex(2, 3)<br />\r\n&nbsp;</p>\r\n', '<p>k = 2 + 3l<br />\r\n&nbsp;</p>\r\n', '<p>k = 2 + 3J<br />\r\n&nbsp;</p>\r\n', '2', 19, 21, '3'),
(3094, '<p>Which identifier is used to represent a web browser window or frame?</p>\r\n', '<p>frames<br />\r\n&nbsp;</p>\r\n', '<p>window<br />\r\n&nbsp;</p>\r\n', '<p>location<br />\r\n&nbsp;</p>\r\n', '<p>frame</p>\r\n', '1', 15, 18, '2'),
(3095, '<p>&nbsp;Which of the following is not a raster graphic editing software?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Photoshop<br />\r\n&nbsp;</p>\r\n', '<p>Lightroom<br />\r\n&nbsp;</p>\r\n', '<p>Inkspace<br />\r\n&nbsp;</p>\r\n', '<p>Illustrator</p>\r\n', '5', 15, 14, '4'),
(3096, '<p>Which&nbsp;attribute&nbsp;is&nbsp;used&nbsp;to&nbsp;specifies&nbsp;that&nbsp;the&nbsp;script&nbsp;is&nbsp;executed&nbsp;when&nbsp;the&nbsp;page&nbsp;has&nbsp;finished&nbsp;parsing&nbsp;(only&nbsp;for external&nbsp;scripts)</p>\r\n', '<p>type<br />\r\n&nbsp;</p>\r\n', '<p>defer<br />\r\n&nbsp;</p>\r\n', '<p>async<br />\r\n&nbsp;</p>\r\n', '<p>parse</p>\r\n', '2', 20, 18, '2'),
(3097, '<p>What is the type of inf?<br />\r\n&nbsp;</p>\r\n', '<p>Boolean</p>\r\n', '<p>Integer<br />\r\n&nbsp;</p>\r\n', '<p>Float<br />\r\n&nbsp;</p>\r\n', '<p>Complex</p>\r\n', '2', 19, 21, '3'),
(3098, '<p>______&nbsp;attribute&nbsp;is&nbsp;used&nbsp;to&nbsp;specify&nbsp;the&nbsp;character&nbsp;encoding&nbsp;used&nbsp;in&nbsp;an&nbsp;external&nbsp;script&nbsp;file.</p>\r\n', '<p>type<br />\r\n&nbsp;</p>\r\n', '<p>charset<br />\r\n&nbsp;</p>\r\n', '<p>character<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;Above</p>\r\n', '2', 20, 18, '2'),
(3099, '<p>What is the full form of PNG image?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Picture Network Graphic<br />\r\n&nbsp;</p>\r\n', '<p>Portable Network Graphics<br />\r\n&nbsp;</p>\r\n', '<p>Portable New Graghics<br />\r\n&nbsp;</p>\r\n', '<p>Picture Network Gallery</p>\r\n', '5', 15, 14, '2'),
(3100, '<p>What does ~4 evaluate to?<br />\r\n&nbsp;</p>\r\n', '<p>-5<br />\r\n&nbsp;</p>\r\n', '<p>-4<br />\r\n&nbsp;</p>\r\n', '<p>-3</p>\r\n', '<p>+3</p>\r\n', '2', 19, 21, '1'),
(3101, '<p>If red, green and blue are mixed together, color of light formed is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>blue<br />\r\n&nbsp;</p>\r\n', '<p>violet<br />\r\n&nbsp;</p>\r\n', '<p>Indigo<br />\r\n&nbsp;</p>\r\n', '<p>white</p>\r\n', '5', 15, 14, '4'),
(3102, '<p>What does ~~~~~~5 evaluate to?<br />\r\n&nbsp;</p>\r\n', '<p>+5</p>\r\n', '<p>-11</p>\r\n', '<p>+11<br />\r\n&nbsp;</p>\r\n', '<p>-5</p>\r\n', '2', 19, 21, '1'),
(3103, '<p>Hex Codes for white and black ?</p>\r\n', '<p>#0f0f0f and #fff000<br />\r\n&nbsp;</p>\r\n', '<p>#ffffff and #000000<br />\r\n&nbsp;</p>\r\n', '<p>#fff000 and #0f0f0f<br />\r\n&nbsp;</p>\r\n', '<p>#ff00ff and #00ff00</p>\r\n', '5', 15, 14, '2'),
(3104, '<p>The&nbsp;async&nbsp;attribute&nbsp;can&nbsp;be&nbsp;set&nbsp;in&nbsp;the&nbsp;following&nbsp;ways&nbsp;</p>\r\n', '<p>&lt;script&nbsp;async&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;script&nbsp;async=&quot;&quot;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&lt;script&nbsp;async=&quot;async&quot;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>All&nbsp;of&nbsp;the&nbsp;Above</p>\r\n', '2', 20, 18, '4'),
(3105, '<p>Which of the following is incorrect?<br />\r\n&nbsp;</p>\r\n', '<p>x = 0b101<br />\r\n&nbsp;</p>\r\n', '<p>x = 0x4f5<br />\r\n&nbsp;</p>\r\n', '<p>x = 19023</p>\r\n', '<p>x = 03964</p>\r\n', '2', 19, 21, '4'),
(3106, '<p>How do you create&nbsp; a new file in Photoshop&nbsp; using the drop&nbsp; down menu?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Start&gt; New File<br />\r\n&nbsp;</p>\r\n', '<p>Create&gt;New<br />\r\n&nbsp;</p>\r\n', '<p>File&gt;New<br />\r\n&nbsp;</p>\r\n', '<p>File&gt;Open</p>\r\n', '5', 15, 14, '3'),
(3107, '<p>Which&nbsp;was&nbsp;the&nbsp;first&nbsp;browser&nbsp;to&nbsp;support&nbsp;JavaScript&nbsp;?</p>\r\n', '<p>Google&nbsp;Chrome<br />\r\n&nbsp;</p>\r\n', '<p>Internet&nbsp;Explorer<br />\r\n&nbsp;</p>\r\n', '<p>Mozilla&nbsp;Firefox<br />\r\n&nbsp;</p>\r\n', '<p>Netscape</p>\r\n', '2', 20, 18, '4'),
(3108, '<p>Which&nbsp;is&nbsp;the&nbsp;correct&nbsp;way&nbsp;to&nbsp;write&nbsp;a&nbsp;JavaScript&nbsp;array?</p>\r\n', '<p>var&nbsp;txt&nbsp;=&nbsp;new&nbsp;Array(1:&quot;tim&quot;,2:&quot;kim&quot;,3:&quot;jim&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>var&nbsp;txt&nbsp;=&nbsp;new&nbsp;Array:1=(&quot;tim&quot;)2=(&quot;kim&quot;)3=(&quot;jim&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>var&nbsp;txt&nbsp;=&nbsp;new&nbsp;Array(&quot;tim&quot;,&quot;kim&quot;,&quot;jim&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>var&nbsp;txt&nbsp;=&nbsp;new&nbsp;Array=&quot;tim&quot;,&quot;kim&quot;,&quot;jim&quot;</p>\r\n', '2', 20, 18, '3'),
(3109, '<p>Aspect Ratio means</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Number of Pixels<br />\r\n&nbsp;</p>\r\n', '<p>Ratio of vertical points to horizontal points<br />\r\n&nbsp;</p>\r\n', '<p>Ratio of horizontal points to vertical points<br />\r\n&nbsp;</p>\r\n', '<p>Both b and c</p>\r\n', '5', 15, 14, '4'),
(3110, '<p>JavaScript&nbsp;entities&nbsp;start&nbsp;with&nbsp;_______&nbsp;and&nbsp;end&nbsp;with&nbsp;_________.</p>\r\n', '<p>Semicolon,&nbsp;colon<br />\r\n&nbsp;</p>\r\n', '<p>Semicolon,&nbsp;Ampersand<br />\r\n&nbsp;</p>\r\n', '<p>Ampersand,&nbsp;colon<br />\r\n&nbsp;</p>\r\n', '<p>Ampersand,&nbsp;semicolon</p>\r\n', '2', 20, 18, '4'),
(3111, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;is&nbsp;not&nbsp;considered&nbsp;a&nbsp;JavaScript&nbsp;operator?</p>\r\n', '<p>new<br />\r\n&nbsp;</p>\r\n', '<p>this<br />\r\n&nbsp;</p>\r\n', '<p>delete<br />\r\n&nbsp;</p>\r\n', '<p>typeof</p>\r\n', '2', 20, 18, '2'),
(3112, '<p>What is the result of cmp(3, 1)?<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>False</p>\r\n', '2', 19, 21, '1'),
(3113, '<p>JavaScript&nbsp;is&nbsp;interpreted&nbsp;by&nbsp;_________</p>\r\n', '<p>Client<br />\r\n&nbsp;</p>\r\n', '<p>Server<br />\r\n&nbsp;</p>\r\n', '<p>Object<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;Above</p>\r\n', '2', 20, 18, '1'),
(3114, '<p>RGB model are used for</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Computer display<br />\r\n&nbsp;</p>\r\n', '<p>Printing<br />\r\n&nbsp;</p>\r\n', '<p>Painting<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 15, 14, '1'),
(3115, '<p>Which of the following is not considered as an error in JavaScript?</p>\r\n', '<p>Syntax error<br />\r\n&nbsp;</p>\r\n', '<p>Missing of semicolons<br />\r\n&nbsp;</p>\r\n', '<p>Division by zero<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '2', 20, 18, '3'),
(3116, '<p>When there is an indefinite or an infinity value during an arithmetic value computation, javascript</p>\r\n', '<p>Prints an exception error<br />\r\n&nbsp;</p>\r\n', '<p>Prints an overflow error<br />\r\n&nbsp;</p>\r\n', '<p>Displays &ldquo;Infinity&rdquo;<br />\r\n&nbsp;</p>\r\n', '<p>Prints the value as such</p>\r\n', '2', 20, 18, '3'),
(3117, '<p>Which of the following is incorrect?<br />\r\n&nbsp;</p>\r\n', '<p>float(&lsquo;inf&rsquo;)</p>\r\n', '<p>float(&lsquo;nan&rsquo;)<br />\r\n&nbsp;</p>\r\n', '<p>float(&rsquo;56&rsquo;+&rsquo;78&rsquo;)<br />\r\n&nbsp;</p>\r\n', '<p>float(&rsquo;12+34&prime;)</p>\r\n', '2', 19, 21, '4'),
(3118, '<p>The object has three object attributes namely</p>\r\n', '<p>Class, parameters, object&rsquo;s extensible flag<br />\r\n&nbsp;</p>\r\n', '<p>Prototype, class, objects&rsquo; parameters<br />\r\n&nbsp;</p>\r\n', '<p>Prototype, class, object&rsquo;s extensible flag<br />\r\n&nbsp;</p>\r\n', '<p>Native object, Classes and Interfacces and Object&rsquo;s extensible flag</p>\r\n', '2', 20, 18, '3'),
(3119, '<p>What is the result of round(0.5) &ndash; round(-0.5)?<br />\r\n&nbsp;</p>\r\n', '<p>1.0<br />\r\n&nbsp;</p>\r\n', '<p>2.0<br />\r\n&nbsp;</p>\r\n', '<p>0.0<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '2', 19, 21, '2'),
(3120, '<p>When does the function name become optional in JavaScript?</p>\r\n', '<p>When the function is defined as a looping statement<br />\r\n&nbsp;</p>\r\n', '<p>When the function is defined as expressions<br />\r\n&nbsp;</p>\r\n', '<p>When the function is predefined<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '2', 20, 18, '2'),
(3121, '<p>CMYK model are used for</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Computer display<br />\r\n&nbsp;</p>\r\n', '<p>Printing<br />\r\n&nbsp;</p>\r\n', '<p>Painting<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '5', 15, 14, '2'),
(3122, '<p>Which Window object method is used to display message in a dialog box?</p>\r\n', '<p>alert()<br />\r\n&nbsp;</p>\r\n', '<p>prompt()<br />\r\n&nbsp;</p>\r\n', '<p>message()<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '2', 20, 18, '1'),
(3123, '<p>What does 3 ^ 4 evaluate to?<br />\r\n&nbsp;</p>\r\n', '<p>81<br />\r\n&nbsp;</p>\r\n', '<p>12<br />\r\n&nbsp;</p>\r\n', '<p>0.75<br />\r\n&nbsp;</p>\r\n', '<p>7</p>\r\n', '2', 19, 21, '4'),
(3124, '<p>_________ indicates areas between,around,above,below, or within something</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Space<br />\r\n&nbsp;</p>\r\n', '<p>Hue<br />\r\n&nbsp;</p>\r\n', '<p>Value<br />\r\n&nbsp;</p>\r\n', '<p>Balance</p>\r\n', '5', 15, 14, '1'),
(3125, '<p>Which property in the Window object is used to refer to a Location object?</p>\r\n', '<p>position<br />\r\n&nbsp;</p>\r\n', '<p>area<br />\r\n&nbsp;</p>\r\n', '<p>window<br />\r\n&nbsp;</p>\r\n', '<p>location</p>\r\n', '2', 20, 18, '4'),
(3126, '<p>RGB colors on internet applications are called</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>safe colors<br />\r\n&nbsp;</p>\r\n', '<p>colors space<br />\r\n&nbsp;</p>\r\n', '<p>web colors<br />\r\n&nbsp;</p>\r\n', '<p>safe web colors</p>\r\n', '5', 15, 14, '4'),
(3127, '<p>Which of the following is a global object?</p>\r\n', '<p>Register<br />\r\n&nbsp;</p>\r\n', '<p>Location<br />\r\n&nbsp;</p>\r\n', '<p>Window<br />\r\n&nbsp;</p>\r\n', '<p>Position</p>\r\n', '2', 20, 18, '3'),
(3128, '<p>Which is the property that represents the content displayed in the window?</p>\r\n', '<p>document<br />\r\n&nbsp;</p>\r\n', '<p>content<br />\r\n&nbsp;</p>\r\n', '<p>window<br />\r\n&nbsp;</p>\r\n', '<p>frame</p>\r\n', '2', 20, 18, '1'),
(3129, '<p>What program is used to make vector images?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>After Effects<br />\r\n&nbsp;</p>\r\n', '<p>InDesign<br />\r\n&nbsp;</p>\r\n', '<p>Illustrator<br />\r\n&nbsp;</p>\r\n', '<p>Photoshop</p>\r\n', '5', 15, 14, '3'),
(3130, '<p>How to pick a document element based on the value of its id attribute?</p>\r\n', '<p>getElementsbyId()<br />\r\n&nbsp;</p>\r\n', '<p>getElementbyId()<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '2', 20, 18, '2'),
(3131, '<p>JavaScript is a _______________ language</p>\r\n', '<p>Object-Oriented<br />\r\n&nbsp;</p>\r\n', '<p>High-level<br />\r\n&nbsp;</p>\r\n', '<p>Assembly-language<br />\r\n&nbsp;</p>\r\n', '<p>Object-Based</p>\r\n', '2', 20, 18, '4'),
(3132, '<p>What file format should images with transparent backgrounds be saved as?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&nbsp;jpg<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;tif<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;png<br />\r\n&nbsp;</p>\r\n', '<p>&nbsp;jpeg</p>\r\n', '5', 15, 14, '3'),
(3133, '<p>Primary colors are not mixed from other elements and they generate all other colors. What are the 3 Primary colors?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Blue, Orange and Violet<br />\r\n&nbsp;</p>\r\n', '<p>Red, Yellow &amp; Blue<br />\r\n&nbsp;</p>\r\n', '<p>Red, Yellow &amp; Orange<br />\r\n&nbsp;</p>\r\n', '<p>Black, White, Gray and Brown</p>\r\n', '5', 15, 14, '2'),
(3134, '<p>A statement block is a</p>\r\n', '<p>conditional block<br />\r\n&nbsp;</p>\r\n', '<p>block that contains a single statement<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>block that combines multiple statements into a single compound statement</p>\r\n', '1', 20, 18, '4'),
(3135, '<p>The &ldquo;var&rdquo; and &ldquo;function&rdquo; are</p>\r\n', '<p>Keywords<br />\r\n&nbsp;</p>\r\n', '<p>Declaration statements<br />\r\n&nbsp;</p>\r\n', '<p>Datatypes<br />\r\n&nbsp;</p>\r\n', '<p>Prototypes</p>\r\n', '2', 20, 18, '2'),
(3136, '<p>The value of the expression:</p>\r\n\r\n<p>4 + 3 % 5</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>4</p>\r\n', '<p>7</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>0</p>\r\n', '2', 19, 21, '2'),
(3137, '<p>Examples of cool colors are:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>yellow, yellow-green and blue-green<br />\r\n&nbsp;</p>\r\n', '<p>blue, green and violet<br />\r\n&nbsp;</p>\r\n', '<p>red, orange and yellow<br />\r\n&nbsp;</p>\r\n', '<p>orange, green and violet</p>\r\n', '5', 15, 14, '3'),
(3138, '<p>When a class B can extend another class A, we say that</p>\r\n', '<p>A is the superclass and B is the subclass<br />\r\n&nbsp;</p>\r\n', '<p>B is the superclass and A is the subclass<br />\r\n&nbsp;</p>\r\n', '<p>Both A and B are the superclass<br />\r\n&nbsp;</p>\r\n', '<p>Both A and B are the subclass</p>\r\n', '2', 20, 18, '1'),
(3139, '<p>The default format used for saving for saving data in Adobe PhotoShop?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>.pss<br />\r\n&nbsp;</p>\r\n', '<p>.psh<br />\r\n&nbsp;</p>\r\n', '<p>.psd<br />\r\n&nbsp;</p>\r\n', '<p>.psp</p>\r\n', '5', 15, 14, '3'),
(3140, '<p>Evaluate the expression given below if A= 16 and B = 15.</p>\r\n\r\n<p>A % B // A</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0.0<br />\r\n&nbsp;</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>1.0<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '2', 19, 21, '2'),
(3141, '<p>What is the return type of typeof for standard JavaScript objects?</p>\r\n', '<p>xml<br />\r\n&nbsp;</p>\r\n', '<p>object<br />\r\n&nbsp;</p>\r\n', '<p>DOM<br />\r\n&nbsp;</p>\r\n', '<p>html</p>\r\n', '2', 20, 18, '2'),
(3142, '<p>Which of the following operators has its associativity from right to left?<br />\r\n&nbsp;</p>\r\n', '<p>+<br />\r\n&nbsp;</p>\r\n', '<p>//</p>\r\n', '<p>%</p>\r\n', '<p>**</p>\r\n', '2', 19, 21, '4'),
(3143, '<p>You can refresh the webpage in JavaScript by using</p>\r\n', '<p>window.reload<br />\r\n&nbsp;</p>\r\n', '<p>location.reload<br />\r\n&nbsp;</p>\r\n', '<p>window.refresh<br />\r\n&nbsp;</p>\r\n', '<p>page.refresh</p>\r\n', '2', 20, 18, '2'),
(3144, '<p>A photoshop image must contain:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>no layers<br />\r\n&nbsp;</p>\r\n', '<p>one layer<br />\r\n&nbsp;</p>\r\n', '<p>two or more layers<br />\r\n&nbsp;</p>\r\n', '<p>at least one group of layers</p>\r\n', '5', 15, 14, '2'),
(3145, '<p>What is the value of x if:</p>\r\n\r\n<p>x = int(43.55+2/2)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>43<br />\r\n&nbsp;</p>\r\n', '<p>44<br />\r\n&nbsp;</p>\r\n', '<p>22</p>\r\n', '<p>23</p>\r\n', '2', 19, 21, '2'),
(3146, '<p>The events that represents occurrences related to the browser window are</p>\r\n', '<p>Window<br />\r\n&nbsp;</p>\r\n', '<p>Element<br />\r\n&nbsp;</p>\r\n', '<p>Display<br />\r\n&nbsp;</p>\r\n', '<p>Handlers</p>\r\n', '2', 20, 18, '1'),
(3147, '<p>If Cyan-0%, Magenta-100%, Yellow-100%, and Black-0% are used in a conventional four colour printing process, which would be the resulting colour?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Blue<br />\r\n&nbsp;</p>\r\n', '<p>Violet<br />\r\n&nbsp;</p>\r\n', '<p>Red<br />\r\n&nbsp;</p>\r\n', '<p>Burgundy</p>\r\n', '5', 15, 14, '3'),
(3148, '<p>Which event is fired when a document and all of its external resources are fully loaded and displayed to the user?</p>\r\n', '<p>Window<br />\r\n&nbsp;</p>\r\n', '<p>Load<br />\r\n&nbsp;</p>\r\n', '<p>Element<br />\r\n&nbsp;</p>\r\n', '<p>Handler</p>\r\n', '2', 20, 18, '2'),
(3149, '<p>What is the value of the following expression?</p>\r\n\r\n<p>2+4.00, 2**4.0</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(6.0, 16.0)<br />\r\n&nbsp;</p>\r\n', '<p>(6.00, 16.00)<br />\r\n&nbsp;</p>\r\n', '<p>(6, 16)<br />\r\n&nbsp;</p>\r\n', '<p>(6.00, 16.0)</p>\r\n', '2', 19, 21, '1'),
(3150, '<p>This most commonly known hex-code #fffff refers to which colour?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Black<br />\r\n&nbsp;</p>\r\n', '<p>Red<br />\r\n&nbsp;</p>\r\n', '<p>White<br />\r\n&nbsp;</p>\r\n', '<p>Blue</p>\r\n', '5', 15, 14, '3'),
(3151, '<p>Which event can be fired on any scrollable document element?</p>\r\n', '<p>Window<br />\r\n&nbsp;</p>\r\n', '<p>Scroll<br />\r\n&nbsp;</p>\r\n', '<p>Load<br />\r\n&nbsp;</p>\r\n', '<p>Unload</p>\r\n', '2', 20, 18, '2'),
(3152, '<p>To get Desaturate option in Photoshop, we have to go to</p>\r\n', '<p>File Menu</p>\r\n', '<p>Layer Menu</p>\r\n', '<p>Image&gt;Adjustment</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 15, 1, '3'),
(3153, '<p>What are the values of the following expressions:</p>\r\n\r\n<p>2**(3**2)<br />\r\n(2**3)**2<br />\r\n2**3**2</p>\r\n', '<p>64, 512, 64</p>\r\n', '<p>64, 64, 64<br />\r\n&nbsp;</p>\r\n', '<p>512, 512, 512</p>\r\n', '<p>512, 64, 512</p>\r\n', '2', 19, 21, '4'),
(3154, '<p>What is the default value of the type attribute?</p>\r\n', '<p>text/css<br />\r\n&nbsp;</p>\r\n', '<p>text/javascript<br />\r\n&nbsp;</p>\r\n', '<p>text<br />\r\n&nbsp;</p>\r\n', '<p>xml</p>\r\n', '2', 20, 18, '2'),
(3155, '<p>What is the value of the following expression:</p>\r\n\r\n<p>8/4/2, 8/(4/2)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(1.0, 4.0)<br />\r\n&nbsp;</p>\r\n', '<p>(1.0, 1.0)<br />\r\n&nbsp;</p>\r\n', '<p>(4.0. 1.0)</p>\r\n', '<p>(4.0, 4.0)</p>\r\n', '2', 19, 21, '1'),
(3156, '<p>To get Auto contrast option in Photoshop, select</p>\r\n', '<p>Filter Menu<br />\r\n&nbsp;</p>\r\n', '<p>Image&gt;Adjustment<br />\r\n&nbsp;</p>\r\n', '<p>File Menu<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 15, 14, '2'),
(3157, '<p>What is the code to start displaying the time when document loads?</p>\r\n', '<p>onload = displayTime;<br />\r\n&nbsp;</p>\r\n', '<p>window = displayTime;<br />\r\n&nbsp;</p>\r\n', '<p>window.onload = displayTime;<br />\r\n&nbsp;</p>\r\n', '<p>window.onload = start;</p>\r\n', '2', 20, 18, '3'),
(3158, '<p>What is the value of the following expression:</p>\r\n\r\n<p>float(22//3+3/3)</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>8.0<br />\r\n&nbsp;</p>\r\n', '<p>8.3<br />\r\n&nbsp;</p>\r\n', '<p>8.33</p>\r\n', '1', 19, 21, '2'),
(3159, '<p>How many Color Modes are there in Photoshop?</p>\r\n', '<p>Five<br />\r\n&nbsp;</p>\r\n', '<p>One<br />\r\n&nbsp;</p>\r\n', '<p>Three<br />\r\n&nbsp;</p>\r\n', '<p>None</p>\r\n', '5', 15, 14, '1'),
(3160, '<p>Is Overlay a Layer Blending Mode in Photoshop?</p>\r\n', '<p>Yes<br />\r\n&nbsp;</p>\r\n', '<p>No<br />\r\n&nbsp;</p>\r\n', '<p>Depends on PhotoShop Version<br />\r\n&nbsp;</p>\r\n', '<p>Depends on File Format</p>\r\n', '5', 15, 14, '1'),
(3161, '<p>How&nbsp;does&nbsp;JavaScript&nbsp;store&nbsp;dates&nbsp;in&nbsp;a&nbsp;date&nbsp;object?</p>\r\n', '<p>The&nbsp;number&nbsp;of&nbsp;milliseconds&nbsp;since&nbsp;January&nbsp;1st,&nbsp;1970<br />\r\n&nbsp;</p>\r\n', '<p>The&nbsp;number&nbsp;of&nbsp;days&nbsp;since&nbsp;January&nbsp;1st,&nbsp;1900<br />\r\n&nbsp;</p>\r\n', '<p>The&nbsp;number&nbsp;of&nbsp;seconds&nbsp;since&nbsp;Netscape&#39;s&nbsp;public&nbsp;stock&nbsp;offering.<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '3', 25, 18, '1'),
(3162, '<p>Which&nbsp;types&nbsp;of&nbsp;image&nbsp;maps&nbsp;can&nbsp;be&nbsp;used&nbsp;with&nbsp;JavaScript?</p>\r\n', '<p>Server&shy;side&nbsp;image&nbsp;maps<br />\r\n&nbsp;</p>\r\n', '<p>Client&shy;side&nbsp;image&nbsp;maps<br />\r\n&nbsp;</p>\r\n', '<p>Server&shy;side&nbsp;image&nbsp;maps&nbsp;and&nbsp;Client&shy;side&nbsp;image&nbsp;maps<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '2', 25, 18, '2'),
(3163, '<p>We can find Variation option under Filter menu in Photoshop.</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>Depends on PhotoShop Version<br />\r\n&nbsp;</p>\r\n', '<p>Depends on File Format</p>\r\n', '5', 15, 14, '2'),
(3164, '<p>Choose&nbsp;the&nbsp;server&shy;side&nbsp;JavaScript&nbsp;object?</p>\r\n', '<p>FileUpLoad<br />\r\n&nbsp;</p>\r\n', '<p>Function<br />\r\n&nbsp;</p>\r\n', '<p>File<br />\r\n&nbsp;</p>\r\n', '<p>Date</p>\r\n', '3', 25, 18, '3'),
(3165, '<p>GIF does not support background transparency.</p>\r\n', '<p>True</p>\r\n', '<p>False</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Depends on PhotoShop Version<br />\r\n&nbsp;</p>\r\n', '<p>Depends on File Format</p>\r\n', '5', 15, 14, '2'),
(3166, '<p>Raster Graphic consists of Pixels.</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>Depends on PhotoShop Version<br />\r\n&nbsp;</p>\r\n', '<p>Depends on File Format</p>\r\n', '5', 15, 14, '1'),
(3167, '<p>Choose&nbsp;the&nbsp;client&shy;side&nbsp;JavaScript&nbsp;object?</p>\r\n', '<p>Database<br />\r\n&nbsp;</p>\r\n', '<p>Cursor<br />\r\n&nbsp;</p>\r\n', '<p>Client<br />\r\n&nbsp;</p>\r\n', '<p>FileUpLoad</p>\r\n', '3', 25, 18, '4'),
(3168, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;event&nbsp;fires&nbsp;when&nbsp;the&nbsp;form&nbsp;element&nbsp;loses&nbsp;the&nbsp;focus:&nbsp;&lt;button&gt;,&nbsp;&lt;input&gt;,&nbsp;&lt;label&gt;, &lt;select&gt;,&nbsp;&lt;textarea&gt;?</p>\r\n', '<p>onfocus<br />\r\n&nbsp;</p>\r\n', '<p>onblur<br />\r\n&nbsp;</p>\r\n', '<p>onclick<br />\r\n&nbsp;</p>\r\n', '<p>ondblclick</p>\r\n', '3', 25, 18, '2'),
(3169, '<p>&nbsp;Liquify is a Filter.</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>Depends on PhotoShop Version<br />\r\n&nbsp;</p>\r\n', '<p>Depends on File Format</p>\r\n', '5', 15, 14, '1'),
(3170, '<p>The keyword or the property that you use to refer to an object through which they were invoked is</p>\r\n', '<p>from<br />\r\n&nbsp;</p>\r\n', '<p>to<br />\r\n&nbsp;</p>\r\n', '<p>this<br />\r\n&nbsp;</p>\r\n', '<p>object</p>\r\n', '3', 25, 18, '3'),
(3171, '<p>We can find Variation option under Filter menu in Photoshop.</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>Depends on PhotoShop Version<br />\r\n&nbsp;</p>\r\n', '<p>Depends on File Format</p>\r\n', '5', 15, 14, '1'),
(3172, '<p>The basic difference between JavaScript and Java is</p>\r\n', '<p>There is no difference<br />\r\n&nbsp;</p>\r\n', '<p>Functions are considered as fields<br />\r\n&nbsp;</p>\r\n', '<p>Variables are specific<br />\r\n&nbsp;</p>\r\n', '<p>functions are values, and there is no hard distinction between methods and fields</p>\r\n', '3', 25, 18, '4'),
(3173, '<p>How many types of Gradient are there in Photoshop?</p>\r\n', '<p>Five<br />\r\n&nbsp;</p>\r\n', '<p>Two<br />\r\n&nbsp;</p>\r\n', '<p>Six<br />\r\n&nbsp;</p>\r\n', '<p>Three</p>\r\n', '5', 15, 14, '1'),
(3174, '<p>The meaning for Augmenting classes is that</p>\r\n', '<p>objects inherit prototype properties even in dynamic state<br />\r\n&nbsp;</p>\r\n', '<p>objects inherit prototype properties only in dynamic state<br />\r\n&nbsp;</p>\r\n', '<p>objects inherit prototype properties in static state<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 25, 18, '1'),
(3175, '<p>The main difference between the variables declared with var and with let is</p>\r\n', '<p>var is confined to a particular function but let is not<br />\r\n&nbsp;</p>\r\n', '<p>let is confined to a particular function but var is not<br />\r\n&nbsp;</p>\r\n', '<p>var defines values based on conditions but let does not<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 25, 18, '2'),
(3176, '<p>How many type of Marquee Tool are there in Photoshop?<br />\r\n&nbsp;</p>\r\n', '<p>Seven<br />\r\n&nbsp;</p>\r\n', '<p>One<br />\r\n&nbsp;</p>\r\n', '<p>Four<br />\r\n&nbsp;</p>\r\n', '<p>Two</p>\r\n', '5', 15, 14, '3'),
(3177, '<p>Consider the following code snippet</p>\r\n\r\n<p>let x=x+1;<br />\r\nconsole.log(x);</p>\r\n\r\n<p>What will be the result for the above code snippet?</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>Null<br />\r\n&nbsp;</p>\r\n', '<p>ReferenceError<br />\r\n&nbsp;</p>\r\n', '<p>NaN</p>\r\n', '3', 25, 18, '4'),
(3178, '<p>The scope of a function is also called as</p>\r\n', '<p>The function&rsquo;s scope<br />\r\n&nbsp;</p>\r\n', '<p>Module function<br />\r\n&nbsp;</p>\r\n', '<p>Modulated function<br />\r\n&nbsp;</p>\r\n', '<p>Private function</p>\r\n', '3', 25, 18, '3'),
(3179, '<p>To get Auto contrast option in Photoshop, we have to select</p>\r\n', '<p>Image --&gt; Adjustment<br />\r\n&nbsp;</p>\r\n', '<p>File Menu<br />\r\n&nbsp;</p>\r\n', '<p>Filter Menu<br />\r\n&nbsp;</p>\r\n', '<p>Depends on PhotoShop version</p>\r\n', '5', 15, 14, '1'),
(3180, '<p>Which is the alternative to the load event?</p>\r\n', '<p>readychange<br />\r\n&nbsp;</p>\r\n', '<p>changestate<br />\r\n&nbsp;</p>\r\n', '<p>readystatechange<br />\r\n&nbsp;</p>\r\n', '<p>contentloader</p>\r\n', '3', 25, 18, '3'),
(3181, '<p>What will be done if more than one page requires a file of JavaScript code?</p>\r\n', '<p>Downloads that many times<br />\r\n&nbsp;</p>\r\n', '<p>Retrives from the browser cache<br />\r\n&nbsp;</p>\r\n', '<p>Must be re executed<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 25, 18, '2'),
(3182, '<p>&nbsp;What&nbsp;does&nbsp;the&nbsp;&lt;noscript&gt;&nbsp;tag&nbsp;do?</p>\r\n', '<p>Enclose&nbsp;text&nbsp;to&nbsp;be&nbsp;displayed&nbsp;by&nbsp;non&shy;JavaScript&nbsp;browsers.<br />\r\n&nbsp;</p>\r\n', '<p>Prevents&nbsp;scripts&nbsp;on&nbsp;the&nbsp;page&nbsp;from&nbsp;executing.<br />\r\n&nbsp;</p>\r\n', '<p>Describes&nbsp;certain&nbsp;low&shy;budget&nbsp;movies.<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '4', 24, 18, '1'),
(3183, '<p>Which character in JavaScript code will be interpreted as XML markup?</p>\r\n', '<p>!<br />\r\n&nbsp;</p>\r\n', '<p>&gt;<br />\r\n&nbsp;</p>\r\n', '<p>&amp;<br />\r\n&nbsp;</p>\r\n', '<p>.</p>\r\n', '3', 25, 18, '3'),
(3184, '<p>&nbsp;______&nbsp;method&nbsp;evaluates&nbsp;a&nbsp;string&nbsp;of&nbsp;JavaScript&nbsp;code&nbsp;in&nbsp;the&nbsp;context&nbsp;of&nbsp;the&nbsp;specified&nbsp;object.</p>\r\n', '<p>Eval<br />\r\n&nbsp;</p>\r\n', '<p>ParseInt<br />\r\n&nbsp;</p>\r\n', '<p>ParseFloat<br />\r\n&nbsp;</p>\r\n', '<p>Efloat</p>\r\n', '4', 24, 18, '1'),
(3185, '<p>One of the main advantage of using src attribute is</p>\r\n', '<p>It becomes self-cached<br />\r\n&nbsp;</p>\r\n', '<p>It makes the HTML file modular<br />\r\n&nbsp;</p>\r\n', '<p>It restricts manipulation in the HTML file<br />\r\n&nbsp;</p>\r\n', '<p>It simplifies the HTML files</p>\r\n', '3', 25, 18, '4'),
(3186, '<p>How does a user generate multiple keydown events?</p>\r\n', '<p>Repeating the same process<br />\r\n&nbsp;</p>\r\n', '<p>Pressing multiple keys<br />\r\n&nbsp;</p>\r\n', '<p>Pressing the key longer than usual<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 25, 18, '3'),
(3187, '<p>JavaScript&nbsp;entities&nbsp;start&nbsp;with&nbsp;_______&nbsp;and&nbsp;end&nbsp;with&nbsp;_________.</p>\r\n', '<p>Semicolon,&nbsp;colon<br />\r\n&nbsp;</p>\r\n', '<p>Semicolon,&nbsp;Ampersand<br />\r\n&nbsp;</p>\r\n', '<p>Ampersand,&nbsp;colon<br />\r\n&nbsp;</p>\r\n', '<p>Ampersand,&nbsp;semicolon</p>\r\n', '4', 24, 18, '4'),
(3188, '<p>Which property is used to specify the key type when pressed?</p>\r\n', '<p>keyCode<br />\r\n&nbsp;</p>\r\n', '<p>keyType<br />\r\n&nbsp;</p>\r\n', '<p>keyName<br />\r\n&nbsp;</p>\r\n', '<p>keyProperty</p>\r\n', '3', 25, 18, '1'),
(3189, '<p>&nbsp;Which looping statement allows XML tags to appear in JavaScript programs and adds API for operating on XML data?</p>\r\n', '<p>for loop<br />\r\n&nbsp;</p>\r\n', '<p>while loop<br />\r\n&nbsp;</p>\r\n', '<p>for/each loop<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '4', 24, 18, '3'),
(3190, '<p>What value does the keyCode property holds when a Shift key is pressed for adding punctuation character?</p>\r\n', '<p>Special characters<br />\r\n&nbsp;</p>\r\n', '<p>Alphabets<br />\r\n&nbsp;</p>\r\n', '<p>Alphanumeric<br />\r\n&nbsp;</p>\r\n', '<p>Digits</p>\r\n', '3', 25, 18, '4'),
(3191, '<p>The service(s) that enables networking through scripted HTTP requests is</p>\r\n', '<p>XMLHttpResponse<br />\r\n&nbsp;</p>\r\n', '<p>XMLRequest<br />\r\n&nbsp;</p>\r\n', '<p>XMLHttpRequest<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '4', 24, 18, '3'),
(3192, '<p>Which of the following are the parameters passed to the keymap after installation?</p>\r\n', '<p>Key property<br />\r\n&nbsp;</p>\r\n', '<p>Key name<br />\r\n&nbsp;</p>\r\n', '<p>Keydown event&rsquo;s object<br />\r\n&nbsp;</p>\r\n', '<p>Key stroke</p>\r\n', '3', 25, 18, '3'),
(3193, '<p>Which is the method that removes the current document from the browsing history before laoding the new document?</p>\r\n', '<p>modify()<br />\r\n&nbsp;</p>\r\n', '<p>assign()<br />\r\n&nbsp;</p>\r\n', '<p>replace()<br />\r\n&nbsp;</p>\r\n', '<p>remove()</p>\r\n', '4', 24, 18, '3'),
(3194, '<p>The events that are not triggered directly by user activity are called</p>\r\n', '<p>Device-independent input events<br />\r\n&nbsp;</p>\r\n', '<p>Device-dependent input events<br />\r\n&nbsp;</p>\r\n', '<p>User interface events<br />\r\n&nbsp;</p>\r\n', '<p>State change events</p>\r\n', '3', 25, 18, '4'),
(3195, '<p>The decodeURIComponent() is defined by</p>\r\n', '<p>Server-side JavaScript<br />\r\n&nbsp;</p>\r\n', '<p>Client-side JavaScript<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 24, 18, '2'),
(3196, '<p>The client-side JavaScript&rsquo;s asynchronous programming model contains</p>\r\n', '<p>Timers and error handlers<br />\r\n&nbsp;</p>\r\n', '<p>User interface events<br />\r\n&nbsp;</p>\r\n', '<p>State change events<br />\r\n&nbsp;</p>\r\n', '<p>API-specific events</p>\r\n', '3', 25, 18, '1'),
(3197, '<p>The HTML5 specification includes</p>\r\n', '<p>Data storage<br />\r\n&nbsp;</p>\r\n', '<p>Graphics APIs<br />\r\n&nbsp;</p>\r\n', '<p>Other APIs for web apps<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '4', 24, 18, '4'),
(3198, '<p>The process by which the browser decides which objects to trigger event handlers on is</p>\r\n', '<p>Event Triggering<br />\r\n&nbsp;</p>\r\n', '<p>Event Listening<br />\r\n&nbsp;</p>\r\n', '<p>Event Handling<br />\r\n&nbsp;</p>\r\n', '<p>Event propogation</p>\r\n', '3', 25, 18, '4'),
(3199, '<p>&nbsp;The behaviour of the document elements can be defined by</p>\r\n', '<p>Using document object<br />\r\n&nbsp;</p>\r\n', '<p>Registering appropriate event handlers<br />\r\n&nbsp;</p>\r\n', '<p>Using element object<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '4', 24, 18, '2'),
(3200, '<p>The main purpose of JavaScript in web browser is to</p>\r\n', '<p>Creating animations and other visual effects<br />\r\n&nbsp;</p>\r\n', '<p>User Interface<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 25, 18, '1'),
(3201, '<p>&nbsp;Which of the following is a boolean cookie attribute?</p>\r\n', '<p>bool<br />\r\n&nbsp;</p>\r\n', '<p>secure<br />\r\n&nbsp;</p>\r\n', '<p>lookup<br />\r\n&nbsp;</p>\r\n', '<p>domain</p>\r\n', '4', 24, 18, '2'),
(3202, '<p>JavaScript code between a pair of &ldquo;script&rdquo; tags are called</p>\r\n', '<p>Non-inline<br />\r\n&nbsp;</p>\r\n', '<p>External<br />\r\n&nbsp;</p>\r\n', '<p>Referenced<br />\r\n&nbsp;</p>\r\n', '<p>Inline</p>\r\n', '3', 25, 18, '4'),
(3203, '<p>What is the programming philosophy that argues that content and behaviour should as much as possible be kept separate?</p>\r\n', '<p>Unobtrusive JavaScript<br />\r\n&nbsp;</p>\r\n', '<p>Obtrusive JavaScript<br />\r\n&nbsp;</p>\r\n', '<p>Inherited JavaScript<br />\r\n&nbsp;</p>\r\n', '<p>Modular JavaScript</p>\r\n', '4', 24, 18, '1'),
(3204, '<p>The URL property belongs to which of the following object?</p>\r\n', '<p>Document<br />\r\n&nbsp;</p>\r\n', '<p>Element<br />\r\n&nbsp;</p>\r\n', '<p>Location<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '3', 25, 18, '1'),
(3205, '<p>&nbsp;Which of the following communicates with server-side CGI scripts through HTML form submissions and can be written without the use of JavaScript?</p>\r\n', '<p>Static Web Pages<br />\r\n&nbsp;</p>\r\n', '<p>Interactive Web Pages<br />\r\n&nbsp;</p>\r\n', '<p>Conditional Web Pages<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 24, 18, '2'),
(3206, '<p>What does the location property represent?</p>\r\n', '<p>Current DOM object<br />\r\n&nbsp;</p>\r\n', '<p>Current URL<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 25, 18, '1'),
(3207, '<p>Which is one of way to query a document for an element or elements?</p>\r\n', '<p>With a specified id attribute<br />\r\n&nbsp;</p>\r\n', '<p>Matching the specified CSS selector<br />\r\n&nbsp;</p>\r\n', '<p>With the specified tag name<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '4', 24, 18, '4'),
(3208, '<p>What is the return type of the hash property?</p>\r\n', '<p>Query string<br />\r\n&nbsp;</p>\r\n', '<p>Packets<br />\r\n&nbsp;</p>\r\n', '<p>String<br />\r\n&nbsp;</p>\r\n', '<p>Fragment identifier</p>\r\n', '3', 25, 18, '3'),
(3209, '<p>What is the function used to extract arguments from the search property of a URL?</p>\r\n', '<p>urlArgs()<br />\r\n&nbsp;</p>\r\n', '<p>url()<br />\r\n&nbsp;</p>\r\n', '<p>hash()<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '3', 25, 18, '1'),
(3210, '<p>&nbsp;Which of the following can be used to select HTML elements based on the value of their name attributes?</p>\r\n', '<p>getElementByName()<br />\r\n&nbsp;</p>\r\n', '<p>getElementsByName()<br />\r\n&nbsp;</p>\r\n', '<p>getElementsName()<br />\r\n&nbsp;</p>\r\n', '<p>getElementName()</p>\r\n', '4', 24, 1, '2'),
(3211, '<p>Which&nbsp;of&nbsp;the&nbsp;following&nbsp;navigator&nbsp;object&nbsp;properties&nbsp;is&nbsp;the&nbsp;same&nbsp;in&nbsp;both&nbsp;Netscape&nbsp;and&nbsp;IE?</p>\r\n', '<p>navigator.appCodeName<br />\r\n&nbsp;</p>\r\n', '<p>navigator.appName<br />\r\n&nbsp;</p>\r\n', '<p>navigator.appVersion<br />\r\n&nbsp;</p>\r\n', '<p>None&nbsp;of&nbsp;the&nbsp;above</p>\r\n', '5', 25, 18, '1'),
(3212, '<p>&nbsp;The return type of getElementsByClassName() is</p>\r\n', '<p>DOM<br />\r\n&nbsp;</p>\r\n', '<p>Document<br />\r\n&nbsp;</p>\r\n', '<p>Node<br />\r\n&nbsp;</p>\r\n', '<p>NodeList</p>\r\n', '4', 24, 18, '4'),
(3213, '<p>Which method to use while working with XML fragments, instead of XML()?</p>\r\n', '<p>XMLInterface()<br />\r\n&nbsp;</p>\r\n', '<p>XMLClass()<br />\r\n&nbsp;</p>\r\n', '<p>XMLList()<br />\r\n&nbsp;</p>\r\n', '<p>XMLArray()</p>\r\n', '5', 25, 18, '3'),
(3214, '<p>Which of the following explains Cookies nature?</p>\r\n', '<p>Non Volatile<br />\r\n&nbsp;</p>\r\n', '<p>Volatile<br />\r\n&nbsp;</p>\r\n', '<p>Intransient<br />\r\n&nbsp;</p>\r\n', '<p>Transient</p>\r\n', '5', 25, 18, '4'),
(3215, '<p>When is the mouseover event fired?</p>\r\n', '<p>When mouse is moved over a new element<br />\r\n&nbsp;</p>\r\n', '<p>When mouse is clicked<br />\r\n&nbsp;</p>\r\n', '<p>When mouse is both moved and clicked<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 24, 18, '1'),
(3216, '<p>Which of the following are not advanced services?</p>\r\n', '<p>Data storage<br />\r\n&nbsp;</p>\r\n', '<p>Networking<br />\r\n&nbsp;</p>\r\n', '<p>XMLHttpRequest object<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 25, 18, '4'),
(3217, '<p>he focus and blur events are also part of</p>\r\n', '<p>Element events<br />\r\n&nbsp;</p>\r\n', '<p>Handler events<br />\r\n&nbsp;</p>\r\n', '<p>Window events<br />\r\n&nbsp;</p>\r\n', '<p>Scroll events</p>\r\n', '4', 24, 18, '3'),
(3218, '<p>Which are the forms of client-side storage?</p>\r\n', '<p>Web Databases<br />\r\n&nbsp;</p>\r\n', '<p>FileSystem API<br />\r\n&nbsp;</p>\r\n', '<p>Offline Web Applications<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '5', 25, 18, '4'),
(3219, '<p>Which is the most appropriate database for developers requiring huge amount of data?</p>\r\n', '<p>Database<br />\r\n&nbsp;</p>\r\n', '<p>Datawarehouse<br />\r\n&nbsp;</p>\r\n', '<p>Web databases<br />\r\n&nbsp;</p>\r\n', '<p>Access</p>\r\n', '5', 25, 18, '3'),
(3220, '<p>&nbsp;Which event is triggered sooner when the document and its elements are ready to manipulate?</p>\r\n', '<p>DOMContentLoaded<br />\r\n&nbsp;</p>\r\n', '<p>readystatechange<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 24, 18, '3'),
(3221, '<p>The properties that specify the position and button state of the mouse are</p>\r\n', '<p>clientX and clientY<br />\r\n&nbsp;</p>\r\n', '<p>clientY and clientX<br />\r\n&nbsp;</p>\r\n', '<p>altKey and ctrlKey<br />\r\n&nbsp;</p>\r\n', '<p>metaKey and shiftKey</p>\r\n', '5', 25, 18, '1'),
(3222, '<p>Which of the following keys are set to true when the keyboard modifier keys are held down?</p>\r\n', '<p>altKey<br />\r\n&nbsp;</p>\r\n', '<p>ctrlKey<br />\r\n&nbsp;</p>\r\n', '<p>metaKey<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '5', 25, 18, '4'),
(3223, '<p>How to detect and respond to mouse drags?</p>\r\n', '<p>Registering a mouseover handler<br />\r\n&nbsp;</p>\r\n', '<p>Releasing a mousedown handler<br />\r\n&nbsp;</p>\r\n', '<p>Registering a mousedown handler<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 25, 18, '3'),
(3224, '<p>Which property reports rotation around three different mouse wheel axes?</p>\r\n', '<p>ctrlKey<br />\r\n&nbsp;</p>\r\n', '<p>alterX<br />\r\n&nbsp;</p>\r\n', '<p>alterY<br />\r\n&nbsp;</p>\r\n', '<p>deltaX</p>\r\n', '5', 25, 18, '4'),
(3225, '<p>The events that is emulated by the jQuery library are</p>\r\n', '<p>focusarea and focusover<br />\r\n&nbsp;</p>\r\n', '<p>focusall and focusnone<br />\r\n&nbsp;</p>\r\n', '<p>focusdown and focusup<br />\r\n&nbsp;</p>\r\n', '<p>focusin and focusout</p>\r\n', '4', 24, 18, '2'),
(3226, '<p>Which API allows scripts in a document from one server to exchange messages with scripts?</p>\r\n', '<p>Cross-Document Messaging API<br />\r\n&nbsp;</p>\r\n', '<p>Web application API<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 25, 18, '1'),
(3227, '<p>From which did Minification concept originate?</p>\r\n', '<p>JavaScript code efficiency<br />\r\n&nbsp;</p>\r\n', '<p>JavaScript interpreter<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 25, 18, '2'),
(3228, '<p>Which object is passed as the argument to handlers for keydown, keyup, and keypress events?</p>\r\n', '<p>KeyboardEvent<br />\r\n&nbsp;</p>\r\n', '<p>Key Event<br />\r\n&nbsp;</p>\r\n', '<p>Mouse Event<br />\r\n&nbsp;</p>\r\n', '<p>Alphabet Event</p>\r\n', '4', 24, 18, '1'),
(3229, '<p>What is the purpose of the product Minify?</p>\r\n', '<p>Storing the data<br />\r\n&nbsp;</p>\r\n', '<p>Streamlining the data<br />\r\n&nbsp;</p>\r\n', '<p>Proxies the JavaScript file<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '5', 25, 18, '3'),
(3230, '<p>Which of the following are the drag and drop events?</p>\r\n', '<p>drop<br />\r\n&nbsp;</p>\r\n', '<p>dragstart<br />\r\n&nbsp;</p>\r\n', '<p><br />\r\nBoth a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 24, 18, '3'),
(3231, '<p>What does the Minify set the encoding HTTP header?</p>\r\n', '<p>deflate<br />\r\n&nbsp;</p>\r\n', '<p>gzip<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 25, 18, '3'),
(3232, '<p>What is in-built in the Minify?</p>\r\n', '<p>Dynamic compression<br />\r\n&nbsp;</p>\r\n', '<p>Static compression<br />\r\n&nbsp;</p>\r\n', '<p>Static content<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 25, 18, '2'),
(3233, '<p>What are the properties supporting CSS styles for a document element?</p>\r\n', '<p>style and font<br />\r\n&nbsp;</p>\r\n', '<p>style and className<br />\r\n&nbsp;</p>\r\n', '<p>size and style<br />\r\n&nbsp;</p>\r\n', '<p>className and font</p>\r\n', '4', 24, 18, '4'),
(3234, '<p>he style property belongs to while of the following object?</p>\r\n', '<p>Element<br />\r\n&nbsp;</p>\r\n', '<p>Window<br />\r\n&nbsp;</p>\r\n', '<p>Location<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 24, 18, '1'),
(3235, '<p>What type of file is YUI Compressor?</p>\r\n', '<p>Binary file<br />\r\n&nbsp;</p>\r\n', '<p>JAR file<br />\r\n&nbsp;</p>\r\n', '<p>Text file<br />\r\n&nbsp;</p>\r\n', '<p>Assembly file</p>\r\n', '5', 25, 18, '2'),
(3236, '<p>What is the function of a Closure Compiler?</p>\r\n', '<p>Originates the JavaScript<br />\r\n&nbsp;</p>\r\n', '<p>Compiles the JavaScript<br />\r\n&nbsp;</p>\r\n', '<p>Rewrites JavaScript<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 25, 18, '3'),
(3237, '<p>Which of the following frameworks focuses on DOM and Ajax utilities?</p>\r\n', '<p>jQuery<br />\r\n&nbsp;</p>\r\n', '<p>Prototype<br />\r\n&nbsp;</p>\r\n', '<p>Dojo<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b</p>\r\n', '5', 25, 18, '4'),
(3238, '<p>Which is the in-house library of Yahoo!?</p>\r\n', '<p>Dojo<br />\r\n&nbsp;</p>\r\n', '<p>YUI<br />\r\n&nbsp;</p>\r\n', '<p>Prototype<br />\r\n&nbsp;</p>\r\n', '<p>Closure</p>\r\n', '5', 25, 18, '2'),
(3239, '<p>Which is more widely used than GWT in Google?</p>\r\n', '<p>Closure<br />\r\n&nbsp;</p>\r\n', '<p>Dojo<br />\r\n&nbsp;</p>\r\n', '<p>Procedure<br />\r\n&nbsp;</p>\r\n', '<p>jQuery</p>\r\n', '5', 25, 18, '1'),
(3240, '<p>Which attribute is used to extend the lifetime of a cookie?</p>\r\n', '<p>higher-age<br />\r\n&nbsp;</p>\r\n', '<p>increase-age<br />\r\n&nbsp;</p>\r\n', '<p>max-age<br />\r\n&nbsp;</p>\r\n', '<p>lifetime</p>\r\n', '6', 30, 18, '3'),
(3241, '<p>Which of the following defines the Cookie visibility?</p>\r\n', '<p>Document Path<br />\r\n&nbsp;</p>\r\n', '<p>localStorage<br />\r\n&nbsp;</p>\r\n', '<p>sessionStorage<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '6', 30, 18, '4'),
(3242, '<p>The localStorage and sessionStorage belongs to</p>\r\n', '<p>Window object<br />\r\n&nbsp;</p>\r\n', '<p>Element object<br />\r\n&nbsp;</p>\r\n', '<p>Hash object<br />\r\n&nbsp;</p>\r\n', '<p>DOM object</p>\r\n', '6', 30, 18, '1'),
(3243, '<p>What is the main difference between localStorage and sessionStorage?</p>\r\n', '<p>Lifetime<br />\r\n&nbsp;</p>\r\n', '<p>Scope<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 30, 18, '2'),
(3244, '<p>What is the lifetime of the data stored through localStorage?</p>\r\n', '<p>Permanant<br />\r\n&nbsp;</p>\r\n', '<p>Temporary<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b at times<br />\r\n&nbsp;</p>\r\n', '<p>Cannot store</p>\r\n', '6', 30, 18, '1'),
(3245, '<p>Which property holds a DataTransfer object that contains information about the data being transferred and the formats in whichh it is available?</p>\r\n', '<p>dataTransfer<br />\r\n&nbsp;</p>\r\n', '<p>transferData<br />\r\n&nbsp;</p>\r\n', '<p>dataExchange<br />\r\n&nbsp;</p>\r\n', '<p>exchangeData</p>\r\n', '6', 30, 18, '1'),
(3246, '<p>XMLHttpRequest is a</p>\r\n', '<p>Object<br />\r\n&nbsp;</p>\r\n', '<p>Class<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 30, 18, '3'),
(3247, '<p>The other name for Comet is</p>\r\n', '<p>Server Push<br />\r\n&nbsp;</p>\r\n', '<p>Ajax Push<br />\r\n&nbsp;</p>\r\n', '<p>HTTP Streaming<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '6', 30, 18, '4'),
(3248, '<p>Which of the following uses scripted HTTP?</p>\r\n', '<p>XML<br />\r\n&nbsp;</p>\r\n', '<p>HTML<br />\r\n&nbsp;</p>\r\n', '<p>Ajax<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '6', 30, 18, '3'),
(3249, '<p>Which property helps to initiate the HTTP requests?</p>\r\n', '<p>request<br />\r\n&nbsp;</p>\r\n', '<p>location<br />\r\n&nbsp;</p>\r\n', '<p>send<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 30, 18, '2'),
(3250, '<p>Which method is an alternative of the property location of a window object?</p>\r\n', '<p>submit()<br />\r\n&nbsp;</p>\r\n', '<p>locate()<br />\r\n&nbsp;</p>\r\n', '<p>load()<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 30, 18, '1'),
(3251, '<p>Which is the element that has a src property to initiate HTTP GET request?</p>\r\n', '<p>img<br />\r\n&nbsp;</p>\r\n', '<p>iframe<br />\r\n&nbsp;</p>\r\n', '<p>script<br />\r\n&nbsp;</p>\r\n', '<p>Both a and c</p>\r\n', '6', 30, 18, '4'),
(3252, '<p>Which of the following is a feature of the HTTP response?</p>\r\n', '<p>Mandatory response body<br />\r\n&nbsp;</p>\r\n', '<p>Optional response body<br />\r\n&nbsp;</p>\r\n', '<p>URL being released<br />\r\n&nbsp;</p>\r\n', '<p>Optional set of response headers</p>\r\n', '6', 30, 18, '1'),
(3253, '<p>Which of the following is a stateless protocol?</p>\r\n', '<p>HTML<br />\r\n&nbsp;</p>\r\n', '<p>XHTML<br />\r\n&nbsp;</p>\r\n', '<p>HTTP<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '6', 30, 18, '3'),
(3254, '<p>What does the value 2 of the WebSocket attribute Socket.readyState indicate?</p>\r\n', '<p>Closed connection<br />\r\n&nbsp;</p>\r\n', '<p>Handshake connection<br />\r\n&nbsp;</p>\r\n', '<p>Unestablished connection<br />\r\n&nbsp;</p>\r\n', '<p>Established connection and communication is possible</p>\r\n', '6', 30, 18, '2'),
(3255, '<p>How many WebSocket events are available?</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>5</p>\r\n', '6', 30, 18, '3'),
(3256, '<p>What is the purpose of the event handlers in the JavaScript?</p>\r\n', '<p>Adds innerHTML page to the code<br />\r\n&nbsp;</p>\r\n', '<p>Performs handling of exceptions and occurences<br />\r\n&nbsp;</p>\r\n', '<p>Allows JavaScript code to alter the behaviour of windows<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 24, 18, '3'),
(3257, '<p>How does the client and the server communicate following the rules defined by the WebSocket protocol?</p>\r\n', '<p>Long-lived TCP Socket<br />\r\n&nbsp;</p>\r\n', '<p>Short-lived TCP Socket<br />\r\n&nbsp;</p>\r\n', '<p>UDP Socket<br />\r\n&nbsp;</p>\r\n', '<p>HTTP Socket</p>\r\n', '6', 30, 18, '1'),
(3258, '<p>Which handler is triggered when the content of the document in the window is stable and ready for manipulation?</p>\r\n', '<p>onload<br />\r\n&nbsp;</p>\r\n', '<p>manipulate<br />\r\n&nbsp;</p>\r\n', '<p>create<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 24, 18, '1'),
(3259, '<p>Which of the following are not a socket property?</p>\r\n', '<p>onopen<br />\r\n&nbsp;</p>\r\n', '<p>readyState<br />\r\n&nbsp;</p>\r\n', '<p>onmessage<br />\r\n&nbsp;</p>\r\n', '<p>ready</p>\r\n', '6', 30, 18, '4'),
(3260, '<p>The object whose properties are inherited by all instances of the class, and properties whose values are functions behaving like instance methods of the class, is</p>\r\n', '<p>Instance object<br />\r\n&nbsp;</p>\r\n', '<p>Constructor object<br />\r\n&nbsp;</p>\r\n', '<p>Destructor object<br />\r\n&nbsp;</p>\r\n', '<p>Prototype object</p>\r\n', '6', 30, 18, '4'),
(3261, '<p>When a program contains extensive use of event handlers, which of the following is necessary?</p>\r\n', '<p>Modular functions<br />\r\n&nbsp;</p>\r\n', '<p>Nested functions<br />\r\n&nbsp;</p>\r\n', '<p>Split up programs<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '4', 24, 18, '2'),
(3262, '<p>What is the purpose of the domLoading attribute?</p>\r\n', '<p>Document exists<br />\r\n&nbsp;</p>\r\n', '<p>Document can load<br />\r\n&nbsp;</p>\r\n', '<p>Document has loaded<br />\r\n&nbsp;</p>\r\n', '<p>Document begins to load</p>\r\n', '6', 30, 18, '4'),
(3263, '<p>Which is the function used to store a value?</p>\r\n', '<p>setItem()<br />\r\n&nbsp;</p>\r\n', '<p>set()<br />\r\n&nbsp;</p>\r\n', '<p>storeItem()<br />\r\n&nbsp;</p>\r\n', '<p>store()</p>\r\n', '7', 35, 18, '1'),
(3264, '<p>Which of the following function is used as a consequence of not including semicolons, commas or whitespace in the Cookie value?</p>\r\n', '<p>encodeURIComponent()<br />\r\n&nbsp;</p>\r\n', '<p>encodeURI()<br />\r\n&nbsp;</p>\r\n', '<p>encodeComponent()<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 35, 18, '1'),
(3265, '<p>.Which of the following is not an object?</p>\r\n', '<p>Element<br />\r\n&nbsp;</p>\r\n', '<p>Location<br />\r\n&nbsp;</p>\r\n', '<p>Position<br />\r\n&nbsp;</p>\r\n', '<p>Window</p>\r\n', '4', 24, 18, '3'),
(3266, '<p>What is the purpose of minifying the JavaScript?</p>\r\n', '<p>To streamline the visits<br />\r\n&nbsp;</p>\r\n', '<p>To save the visits<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 24, 18, '1'),
(3267, '<p>How can you set a Cookie visibility scope to localStorage?</p>\r\n', '<p>/<br />\r\n&nbsp;</p>\r\n', '<p>%<br />\r\n&nbsp;</p>\r\n', '<p>*<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 35, 18, '1'),
(3268, '<p>Which is the appropriate code to begin a HTTP GET request?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>request.open(&quot;GET&quot;,&quot;data&quot;);<br />\r\n&nbsp;</p>\r\n', '<p>request.open(GET,&quot;data.csv&quot;);<br />\r\n&nbsp;</p>\r\n', '<p>request.open(&quot;GET&quot;,&quot;data.csv&quot;);<br />\r\n&nbsp;</p>\r\n', '<p>request.open(&quot;GET&quot;);</p>\r\n', '7', 35, 18, '3'),
(3269, '<p>Which of the following are the features of an HTTP request?</p>\r\n', '<p>URL being requested<br />\r\n&nbsp;</p>\r\n', '<p>Optional request body<br />\r\n&nbsp;</p>\r\n', '<p>Optional set of request headers<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 35, 18, '4');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(3270, '<p>Why do Web Developers use Firebug?</p>\r\n', '<p>Track cookies<br />\r\n&nbsp;</p>\r\n', '<p>Track sessions<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 35, 18, '3'),
(3271, '<p>Which of the below is a lieral reverse of Ajax?</p>\r\n', '<p>HTTP<br />\r\n&nbsp;</p>\r\n', '<p>HTML<br />\r\n&nbsp;</p>\r\n', '<p>XML<br />\r\n&nbsp;</p>\r\n', '<p>Comet</p>\r\n', '7', 35, 18, '4'),
(3272, '<p>Firebug is an extension of which browser?</p>\r\n', '<p>Mozilla<br />\r\n&nbsp;</p>\r\n', '<p>Chrome<br />\r\n&nbsp;</p>\r\n', '<p>IE<br />\r\n&nbsp;</p>\r\n', '<p>Opera</p>\r\n', '8', 35, 18, '1'),
(3273, '<p>What would happen if the data in the client had been wrong?</p>\r\n', '<p>Sends back the data<br />\r\n&nbsp;</p>\r\n', '<p>Waits for correction<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 35, 18, '3'),
(3274, '<p>Which of the following property(s) has a default value as false?</p>\r\n', '<p>disableWhenFirebugActive<br />\r\n&nbsp;</p>\r\n', '<p>showIconWhenHidden<br />\r\n&nbsp;</p>\r\n', '<p>disableXHRListener<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b</p>\r\n', '8', 35, 18, '3'),
(3275, '<p>Which API allows scripts in a document from one server to exchange messages with scripts?</p>\r\n', '<p>Cross-Document Messaging API<br />\r\n&nbsp;</p>\r\n', '<p>Web application API<br />\r\n&nbsp;</p>\r\n', '<p>Both a and b<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 35, 18, '1'),
(3276, '<p>Which of the following is the child object of the JavaScript navigator?</p>\r\n', '<p>Navicat<br />\r\n&nbsp;</p>\r\n', '<p>Plugins<br />\r\n&nbsp;</p>\r\n', '<p>NetRight<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 35, 18, '2'),
(3277, '<p>How many arguments does the getInputHtml() accept?</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>4</p>\r\n', '7', 35, 18, '2'),
(3278, '<p>What must be done in order to implement Lexical Scoping?</p>\r\n', '<p>Get the object<br />\r\n&nbsp;</p>\r\n', '<p>Dereference the current scope chain<br />\r\n&nbsp;</p>\r\n', '<p>Reference the current scope chain<br />\r\n&nbsp;</p>\r\n', '<p>one of the mentioned</p>\r\n', '8', 35, 18, '3'),
(3279, '<p>Which method is called right before a field is saved?</p>\r\n', '<p>onBeforeSave()<br />\r\n&nbsp;</p>\r\n', '<p>BeforeSave()<br />\r\n&nbsp;</p>\r\n', '<p>SaveBefore()<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned&nbsp;</p>\r\n', '7', 35, 18, '1'),
(3280, '<p>What is the purpose of the method item()?</p>\r\n', '<p>Returns node after the specified index<br />\r\n&nbsp;</p>\r\n', '<p>Returns node before the specified index<br />\r\n&nbsp;</p>\r\n', '<p>Returns node at specified index<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 35, 18, '3'),
(3281, '<p>Which of the following is a utility function in jQuery?</p>\r\n', '<p>jQuery.each()<br />\r\n&nbsp;</p>\r\n', '<p>jQuery.parseJSON()<br />\r\n&nbsp;</p>\r\n', '<p>jQuery.noConflict()<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 35, 18, '3'),
(3282, '<p>Which of the following is an equivalent replacement of $(document).ready(f)?</p>\r\n', '<p>jQuery(f)<br />\r\n&nbsp;</p>\r\n', '<p>$(f)<br />\r\n&nbsp;</p>\r\n', '<p>#(f)</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 35, 18, '2'),
(3283, '<p>What is the purpose of the DocumentFragment node type?</p>\r\n', '<p>To hold a portion of a document<br />\r\n&nbsp;</p>\r\n', '<p>To split the document into fragments<br />\r\n&nbsp;</p>\r\n', '<p>To hold the entire document<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 35, 18, '1'),
(3284, '<p>The four kinds of class members are</p>\r\n', '<p>Instance methods, Instance fields, Static method, Dynamic method<br />\r\n&nbsp;</p>\r\n', '<p>Instance fields, Instance methods, Class fields, Class methods<br />\r\n&nbsp;</p>\r\n', '<p>Instance fields, Non-instance fields, Dynamic methods, Global methods<br />\r\n&nbsp;</p>\r\n', '<p>Global methods, Local methods, Dynamic methods, Static methods</p>\r\n', '7', 35, 18, '2'),
(3285, '<p>The class that represents the regular expressions is</p>\r\n', '<p>RegExpObj<br />\r\n&nbsp;</p>\r\n', '<p>RegExpClass<br />\r\n&nbsp;</p>\r\n', '<p>RegExp<br />\r\n&nbsp;</p>\r\n', '<p>StringExp</p>\r\n', '7', 35, 18, '3'),
(3286, '<p>&nbsp;Which of the following is the correct code for invoking a function without this keyword at all, and also too determine whether the strict mode is in effect?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>var strict = (function { return this; });<br />\r\n&nbsp;</p>\r\n', '<p>mode strict = (function() { return !this;&nbsp; }());<br />\r\n&nbsp;</p>\r\n', '<p>var strict = (function() { return !this; }());<br />\r\n&nbsp;</p>\r\n', '<p>mode strict = (function { });</p>\r\n', '8', 35, 18, '3'),
(3287, '<p>What is the output of the following expression:</p>\r\n\r\n<pre>\r\nprint(4.00/(2.0+2.0))</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>1.0<br />\r\n&nbsp;</p>\r\n', '<p>1.00<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '2', 19, 21, '2'),
(3288, '<p>Consider the expression given below. The value of X is:</p>\r\n\r\n<pre>\r\nX = 2+9*((3*12)-8)/10</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>30.0</p>\r\n', '<p>30.8<br />\r\n&nbsp;</p>\r\n', '<p>28.4<br />\r\n&nbsp;</p>\r\n', '<p>27.2</p>\r\n', '2', 19, 21, '4'),
(3289, '<p>Which of the following expressions involves coercion when evaluated in Python?<br />\r\n&nbsp;</p>\r\n', '<p>4.7 &ndash; 1.5<br />\r\n&nbsp;</p>\r\n', '<p>7.9 * 6.3<br />\r\n&nbsp;</p>\r\n', '<p>1.7 % 2<br />\r\n&nbsp;</p>\r\n', '<p>3.4 + 4.6</p>\r\n', '2', 19, 21, '3'),
(3290, '<p>What is the value of the following expression:</p>\r\n\r\n<pre>\r\n24//6%3, 24//4//2</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>(1,3)</p>\r\n', '<p>(0,3)<br />\r\n&nbsp;</p>\r\n', '<p>(1,0)</p>\r\n', '<p>(3,1)</p>\r\n', '2', 19, 21, '1'),
(3291, '<p>Which among the following list of operators has the highest precedence?</p>\r\n\r\n<pre>\r\n +, -, **, %, /, &lt;&lt;, &gt;&gt;, |</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lt;&lt;, &gt;&gt;<br />\r\n&nbsp;</p>\r\n', '<p>**<br />\r\n&nbsp;</p>\r\n', '<p>|<br />\r\n&nbsp;</p>\r\n', '<p>%</p>\r\n', '2', 19, 21, '2'),
(3292, '<p>What is the value of the expression:</p>\r\n\r\n<pre>\r\nfloat(4+int(2.39)%2)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>5.0</p>\r\n', '<p>5<br />\r\n&nbsp;</p>\r\n', '<p>4.0<br />\r\n&nbsp;</p>\r\n', '<p>4</p>\r\n', '2', 19, 21, '3'),
(3293, '<p>Which of the following expressions is an example of type conversion?<br />\r\n&nbsp;</p>\r\n', '<p>4.0 + float(3)<br />\r\n&nbsp;</p>\r\n', '<p>5.3 + 6.3<br />\r\n&nbsp;</p>\r\n', '<p>5.0 + 3<br />\r\n&nbsp;</p>\r\n', '<p>3 + 7</p>\r\n', '2', 19, 21, '1'),
(3294, '<p>Which of the following expressions results in an error?</p>\r\n', '<p>float(&lsquo;10&rsquo;)</p>\r\n', '<p>int(&lsquo;10&rsquo;)<br />\r\n&nbsp;</p>\r\n', '<p>float(&rsquo;10.8&rsquo;)<br />\r\n&nbsp;</p>\r\n', '<p>int(&rsquo;10.8&rsquo;)</p>\r\n', '2', 19, 21, '4'),
(3295, '<p>What is the value of the expression:</p>\r\n\r\n<pre>\r\n4+2**5//10</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>7<br />\r\n&nbsp;</p>\r\n', '<p>77<br />\r\n&nbsp;</p>\r\n', '<p>0</p>\r\n', '2', 19, 21, '2'),
(3296, '<p>What is the result of the snippet of code shown below if x=1?</p>\r\n\r\n<pre>\r\nx&lt;&lt;2</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>4</p>\r\n', '3', 23, 21, '4'),
(3297, '<p>The output of the expression is:</p>\r\n\r\n<pre>\r\nbin(29)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lsquo;0b10111&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;0b11101&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;0b11111&rsquo;</p>\r\n', '<p>&lsquo;0b11011&rsquo;</p>\r\n', '3', 23, 21, '2'),
(3298, '<p>What is the value of x if:</p>\r\n\r\n<pre>\r\nx&gt;&gt;2=2\r\n</pre>\r\n', '<p>8</p>\r\n', '<p>4</p>\r\n', '<p>2</p>\r\n', '<p>1</p>\r\n', '3', 23, 21, '1'),
(3299, '<p>What is the result of the expression:</p>\r\n\r\n<pre>\r\nint(1011)?</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1011<br />\r\n&nbsp;</p>\r\n', '<p>11<br />\r\n&nbsp;</p>\r\n', '<p>13<br />\r\n&nbsp;</p>\r\n', '<p>1101</p>\r\n', '3', 23, 21, '1'),
(3300, '<p>To find the decimal value of 1111, that is 15, we can use the function</p>\r\n', '<p>int(1111,10)<br />\r\n&nbsp;</p>\r\n', '<p>int(&lsquo;1111&rsquo;,10)<br />\r\n&nbsp;</p>\r\n', '<p>int(1111,2)<br />\r\n&nbsp;</p>\r\n', '<p>int(&lsquo;1111&rsquo;,2)</p>\r\n', '3', 23, 21, '4'),
(3301, '<p>What is the result of the expression if x=15 and y=12:</p>\r\n\r\n<pre>\r\nx &amp; y</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>b1101<br />\r\n&nbsp;</p>\r\n', '<p>0b1101<br />\r\n&nbsp;</p>\r\n', '<p>12<br />\r\n&nbsp;</p>\r\n', '<p>1101</p>\r\n', '3', 23, 21, '3'),
(3302, '<p>Which of the following expressions results in an error?</p>\r\n', '<p>int(1011)</p>\r\n', '<p>int(&lsquo;1011&rsquo;,23)<br />\r\n&nbsp;</p>\r\n', '<p>int(1011,2)</p>\r\n', '<p>int(&lsquo;1011&rsquo;)</p>\r\n', '3', 23, 21, '3'),
(3303, '<p>Which of the following represents the bitwise XOR operator?<br />\r\n&nbsp;</p>\r\n', '<p>&amp;</p>\r\n', '<p>^<br />\r\n&nbsp;</p>\r\n', '<p>|</p>\r\n', '<p>!</p>\r\n', '3', 23, 21, '2'),
(3304, '<p>What is the value of this expression?</p>\r\n\r\n<pre>\r\nbin(0x8)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lsquo;0bx1000&rsquo;</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>1000</p>\r\n', '<p>&lsquo;0b1000&rsquo;</p>\r\n', '3', 23, 21, '4'),
(3305, '<p>What is the result of the expression:</p>\r\n\r\n<pre>\r\n0x35 | 0x75</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>115</p>\r\n', '<p>116<br />\r\n&nbsp;</p>\r\n', '<p>117<br />\r\n&nbsp;</p>\r\n', '<p>118</p>\r\n', '3', 23, 21, '3'),
(3306, '<p>The one&rsquo;s complement of 110010101 is:</p>\r\n', '<p>001101010<br />\r\n&nbsp;</p>\r\n', '<p>110010101<br />\r\n&nbsp;</p>\r\n', '<p>001101011<br />\r\n&nbsp;</p>\r\n', '<p>110010100</p>\r\n', '3', 23, 21, '1'),
(3307, '<p>Bitwise _________ gives 1 if either of the bits is 1 and 0 when both of the bits are 1.<br />\r\n&nbsp;</p>\r\n', '<p>OR<br />\r\n&nbsp;</p>\r\n', '<p>AND<br />\r\n&nbsp;</p>\r\n', '<p>XOR<br />\r\n&nbsp;</p>\r\n', '<p>NOT</p>\r\n', '3', 23, 21, '3'),
(3308, '<p>The result of the expression shown below is:</p>\r\n\r\n<pre>\r\n4^12</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>4<br />\r\n&nbsp;</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>12</p>\r\n', '3', 23, 21, '3'),
(3309, '<p>Any odd number on being AND-ed with ________ always gives 1.</p>\r\n', '<p>10<br />\r\n&nbsp;</p>\r\n', '<p>2</p>\r\n', '<p>1</p>\r\n', '<p>0</p>\r\n', '3', 23, 21, '3'),
(3310, '<p>What is the value of this expression:</p>\r\n\r\n<pre>\r\n bin(10-2)+bin(12^4)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0b10000<br />\r\n&nbsp;</p>\r\n', '<p>0b10001000</p>\r\n', '<p>0b1000b1000<br />\r\n&nbsp;</p>\r\n', '<p>0b10000b1000</p>\r\n', '3', 23, 21, '4'),
(3311, '<p>Which of the following expressions can be used to multiply a given number &lsquo;a&rsquo; by 4?<br />\r\n&nbsp;</p>\r\n', '<p>a&lt;&lt;2<br />\r\n&nbsp;</p>\r\n', '<p>a&lt;&lt;4<br />\r\n&nbsp;</p>\r\n', '<p>a&gt;&gt;2<br />\r\n&nbsp;</p>\r\n', '<p>a&gt;&gt;4</p>\r\n', '3', 23, 21, '1'),
(3312, '<p>What is the output of the code show below if a=10 and b =20?</p>\r\n\r\n<pre>\r\na=10\r\nb=20\r\na=a^b\r\nb=a^b\r\na=a^b\r\nprint(a,b)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>10 20<br />\r\n&nbsp;</p>\r\n', '<p>10 10<br />\r\n&nbsp;</p>\r\n', '<p>20 10</p>\r\n', '<p>20 20</p>\r\n', '3', 23, 21, '3'),
(3313, '<p>What is the two&rsquo;s complement of -44?<br />\r\n&nbsp;</p>\r\n', '<p>1011011<br />\r\n&nbsp;</p>\r\n', '<p>11010100<br />\r\n&nbsp;</p>\r\n', '<p>11101011<br />\r\n&nbsp;</p>\r\n', '<p>10110011</p>\r\n', '3', 23, 21, '2'),
(3314, '<p>What is the value of the expression:</p>\r\n\r\n<pre>\r\n~100?</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>101<br />\r\n&nbsp;</p>\r\n', '<p>-101<br />\r\n&nbsp;</p>\r\n', '<p>100<br />\r\n&nbsp;</p>\r\n', '<p>-100</p>\r\n', '3', 23, 21, '2'),
(3315, '<p>The output of the snippet of code shown below?</p>\r\n\r\n<pre>\r\nbool(&lsquo;False&rsquo;)\r\nbool()</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>True<br />\r\nTrue<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\nTrue<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\nFalse<br />\r\n&nbsp;</p>\r\n', '<p>True<br />\r\nFalse</p>\r\n', '3', 23, 21, '4'),
(3316, '<p>What is the output of the snippet of code shown below?</p>\r\n\r\n<pre>\r\n[&#39;hello&#39;, &#39;morning&#39;][bool(&#39;&#39;)]</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>error<br />\r\n&nbsp;</p>\r\n', '<p>no output<br />\r\n&nbsp;</p>\r\n', '<p>hello<br />\r\n&nbsp;</p>\r\n', '<p>morning</p>\r\n', '3', 23, 21, '3'),
(3317, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\nnot(3&gt;4)\r\nnot(1&amp;1)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>True<br />\r\nTrue<br />\r\n&nbsp;</p>\r\n', '<p>True<br />\r\nFalse<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\nTrue<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\nFalse</p>\r\n', '3', 23, 21, '2'),
(3318, '<p>What is the output of the code shown?</p>\r\n\r\n<pre>\r\n[&#39;f&#39;, &#39;t&#39;][bool(&#39;spam&#39;)]\r\n</pre>\r\n', '<p>t<br />\r\n&nbsp;</p>\r\n', '<p>f<br />\r\n&nbsp;</p>\r\n', '<p>No output<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '3', 23, 21, '1'),
(3319, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\nl=[1, 0, 2, 0, &#39;hello&#39;, &#39;&#39;, []]\r\nlist(filter(bool, l))</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>[1, 0, 2, 0, &lsquo;hello&rsquo;, &rdquo;, []]</p>\r\n', '<p>[1, 0, 2, &lsquo;hello&rsquo;, &rdquo;, []]<br />\r\n&nbsp;</p>\r\n', '<p>[1, 2, &lsquo;hello&rsquo;]</p>\r\n', '3', 23, 21, '4'),
(3320, '<p>What is the output of the following code if the system date is 21st June, 2017 (Wednesday)?<br />\r\n[ ] or {}<br />\r\n{} or [ ]<br />\r\n&nbsp;</p>\r\n', '<p>[ ]<br />\r\n{}<br />\r\n&nbsp;</p>\r\n', '<p>[ ]<br />\r\n[ ]<br />\r\n&nbsp;</p>\r\n', '<p>{}<br />\r\n[ ]</p>\r\n', '<p>{}<br />\r\n{}</p>\r\n', '3', 23, 21, '3'),
(3321, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\nclass Truth:\r\n	pass\r\nx=Truth()\r\nbool(x)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>pass<br />\r\n&nbsp;</p>\r\n', '<p>true<br />\r\n&nbsp;</p>\r\n', '<p>false<br />\r\n&nbsp;</p>\r\n', '<p>error</p>\r\n', '3', 23, 21, '2'),
(3322, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\nif (9 &lt; 0) and (0 &lt; -9):\r\n    print(&quot;hello&quot;)\r\nelif (9 &gt; 0) or False:\r\n    print(&quot;good&quot;)\r\nelse:\r\n    print(&quot;bad&quot;)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>error<br />\r\n&nbsp;</p>\r\n', '<p>hello<br />\r\n&nbsp;</p>\r\n', '<p>good<br />\r\n&nbsp;</p>\r\n', '<p>bad</p>\r\n', '3', 23, 21, '3'),
(3323, '<p>Which of the following&nbsp;<a href="http://www.sanfoundry.com/python-questions-answers-boolean/#">Boolean</a>&nbsp;expressions is not logically equivalent to the other three?<br />\r\n&nbsp;</p>\r\n', '<p>not(-6&lt;0 or-6&gt;10)</p>\r\n', '<p>-6&gt;=0 and -6&lt;=10&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>not(-6&lt;10 or-6==10)&nbsp;<br />\r\n&nbsp;</p>\r\n', '<p>not(-6&gt;10 or-6==10)</p>\r\n', '3', 23, 21, '4'),
(3324, '<p>The output of the line of code shown below is:</p>\r\n\r\n<pre>\r\nnot(10&lt;20) and not(10&gt;30)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>No output</p>\r\n', '3', 23, 21, '2'),
(3325, '<p>What is the output of the code shown?</p>\r\n\r\n<pre>\r\nl=list(&#39;HELLO&#39;)\r\n&#39;first={0[0]}, third={0[2]}&#39;.format(l)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lsquo;first=H, third=L&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;first=0, third=2&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;first=0, third=L&rsquo;</p>\r\n', '7', 30, 21, '1'),
(3326, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\nl=list(&#39;HELLO&#39;)\r\np=l[0], l[-1], l[1:3]\r\n&#39;a={0}, b={1}, c={2}&#39;.format(*p)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>&ldquo;a=&rsquo;H&rsquo;, b=&rsquo;O&rsquo;, c=(E, L)&rdquo;<br />\r\n&nbsp;</p>\r\n', '<p>&ldquo;a=H, b=O, c=[&lsquo;E&rsquo;, &lsquo;L&rsquo;]&rdquo;<br />\r\n&nbsp;</p>\r\n', '<p>Junk value</p>\r\n', '7', 30, 21, '3'),
(3327, '<p>The formatting method {1:&lt;10} represents the ___________ positional argument, _________ justified in a 10 character wide field.<br />\r\n&nbsp;</p>\r\n', '<p>first, right<br />\r\n&nbsp;</p>\r\n', '<p>second, left<br />\r\n&nbsp;</p>\r\n', '<p>first, left</p>\r\n', '<p>second, right</p>\r\n', '7', 30, 21, '2'),
(3328, '<p>What is the output of the following code?</p>\r\n\r\n<p>hex(255), int(&#39;FF&#39;, 16), 0xFF</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>[0xFF, 255, 16, 255]</p>\r\n', '<p>(&lsquo;0xff&rsquo;, 155, 16, 255)<br />\r\n&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>(&lsquo;0xff&rsquo;, 255, 255)</p>\r\n', '7', 30, 21, '4'),
(3329, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\n&#39;{a}{b}{a}&#39;.format(a=&#39;hello&#39;, b=&#39;world&#39;)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lsquo;hello world&rsquo;</p>\r\n', '<p>&lsquo;hello&rsquo; &lsquo;world&rsquo; &lsquo;hello&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;helloworldhello&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;hello&rsquo; &lsquo;hello&rsquo; &lsquo;world&rsquo;</p>\r\n', '7', 30, 21, '3'),
(3330, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\n D=dict(p=&#39;san&#39;, q=&#39;foundry&#39;)\r\n&#39;{p}{q}&#39;.format(**D)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>sanfoundry<br />\r\n&nbsp;</p>\r\n', '<p>san foundry<br />\r\n&nbsp;</p>\r\n', '<p>{&lsquo;san&rsquo;, &lsquo;foundry&rsquo;}</p>\r\n', '7', 30, 21, '2'),
(3331, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\n&#39;The {} side {1} {2}&#39;.format(&#39;bright&#39;, &#39;of&#39;, &#39;life&#39;)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;The bright side of life&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;The {bright} side {of} {life}&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>No output</p>\r\n', '7', 30, 21, '1'),
(3332, '<p>The output of the code shown below is:</p>\r\n\r\n<pre>\r\n&#39;{0:f}, {1:2f}, {2:05.2f}&#39;.format(1.23456, 1.23456, 1.23456)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;1.234560, 1.22345, 1.23&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>No output<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;1.234560, 1.234560, 01.23&rsquo;</p>\r\n', '7', 30, 21, '4'),
(3333, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\n&#39;%.2f%s&#39; % (1.2345, 99)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lsquo;1.2345&rsquo;, &lsquo;99&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;1.2399&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;1.234599&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>1.23, 99</p>\r\n', '7', 30, 21, '2'),
(3334, '<p>What is the output of the code shown below?</p>\r\n\r\n<pre>\r\n&#39;%s&#39; %((1.23,),)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>&lsquo;(1.23,)&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>1.23,<br />\r\n&nbsp;</p>\r\n', '<p>(,1.23)</p>\r\n', '<p>&lsquo;1.23&rsquo;</p>\r\n', '7', 30, 21, '1'),
(3335, '<p>What is the output of the two codes shown below?</p>\r\n\r\n<pre>\r\n&#39;{0}&#39;.format(4.56)\r\n&#39;{0}&#39;.format([4.56,])\r\n</pre>\r\n', '<p>&lsquo;4.56&rsquo;, &lsquo;4.56,&rsquo;</p>\r\n', '<p>&lsquo;4.56&rsquo;, &lsquo;[4.56]&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>4.56, [4.56,]<br />\r\n&nbsp;</p>\r\n', '<p>4.56, [4.56,]</p>\r\n', '7', 30, 21, '2'),
(3336, '<p>The process of pickling in Python includes:<br />\r\n&nbsp;</p>\r\n', '<p>conversion of a list into a datatable<br />\r\n&nbsp;</p>\r\n', '<p>conversion of a byte stream into Python object hierarchy<br />\r\n&nbsp;</p>\r\n', '<p>conversion of a Python object hierarchy into byte stream<br />\r\n&nbsp;</p>\r\n', '<p>conversion of a datatable into a list</p>\r\n', '7', 30, 21, '3'),
(3337, '<p>To sterilize an object hierarchy, the _____________ function must be called.<br />\r\nTo desterilize a data stream, the ______________ function must be called.<br />\r\n&nbsp;</p>\r\n', '<p>dumps(), undumps()<br />\r\n&nbsp;</p>\r\n', '<p>loads(), unloads()</p>\r\n', '<p>loads(), dumps()<br />\r\n&nbsp;</p>\r\n', '<p>dumps(), loads()</p>\r\n', '7', 30, 21, '4'),
(3338, '<p>Pick the correct statement regarding pickle and marshal modules.<br />\r\n&nbsp;</p>\r\n', '<p>The pickle module supports primarily .pyc files whereas marshal module is used to sterilize Python objects<br />\r\n&nbsp;</p>\r\n', '<p>The pickle module keeps track of the objects that have already been sterilized whereas the marshal module does not do this<br />\r\n&nbsp;</p>\r\n', '<p>The pickle module cannot be used to sterilize user defined classes and their instances whereas marshal module can be used to perform this task<br />\r\n&nbsp;</p>\r\n', '<p>The format of sterilization of the pickle module is not guaranteed to be supported across all versions of Python. The marshal module sterilization is compatible across all the versions of Python</p>\r\n', '7', 30, 21, '2'),
(3339, '<p>Which of the following functions can help us to find the version of python that we are currently working on?</p>\r\n', '<p>sys.version</p>\r\n', '<p>sys.version()<br />\r\n&nbsp;</p>\r\n', '<p>sys.version(0)<br />\r\n&nbsp;</p>\r\n', '<p>sys.version(1)</p>\r\n', '8', 30, 21, '1'),
(3340, '<p>Which of the following functions is not defined under the sys module?</p>\r\n', '<p>sys.platform<br />\r\n&nbsp;</p>\r\n', '<p>sys.path<br />\r\n&nbsp;</p>\r\n', '<p>sys.readline<br />\r\n&nbsp;</p>\r\n', '<p>sys.argv</p>\r\n', '8', 30, 21, '3'),
(3341, '<p>What is the output of the code shown below, if the code is run on Windows operating system?</p>\r\n\r\n<pre>\r\nimport sys\r\nif sys.platform[:2]== &#39;wi&#39;:\r\n	print(&quot;Hello&quot;)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Error</p>\r\n', '<p>Hello<br />\r\n&nbsp;</p>\r\n', '<p>No output<br />\r\n&nbsp;</p>\r\n', '<p>Junk value</p>\r\n', '8', 30, 21, '2'),
(3342, '<p>What is the output of the following line of code, if the sys module has already been imported?</p>\r\n\r\n<pre>\r\nsys.stdout.write(&quot;hello world&quot;)</pre>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>helloworld</p>\r\n', '<p>hello world10<br />\r\n&nbsp;</p>\r\n', '<p>hello world11<br />\r\n&nbsp;</p>\r\n', '<p>error</p>\r\n', '8', 30, 21, '3'),
(3343, '<p>The character Dot (that is, &lsquo;.&rsquo;) in the default mode, matches any character other than _____________<br />\r\n&nbsp;</p>\r\n', '<p>caret<br />\r\n&nbsp;</p>\r\n', '<p>ampersand<br />\r\n&nbsp;</p>\r\n', '<p>percentage symbol<br />\r\n&nbsp;</p>\r\n', '<p>newline</p>\r\n', '8', 30, 21, '4'),
(3344, '<p>The expression a{5} will match _____________ characters with the previous regular expression.<br />\r\n&nbsp;</p>\r\n', '<p>5 or less<br />\r\n&nbsp;</p>\r\n', '<p>exactly 5<br />\r\n&nbsp;</p>\r\n', '<p>5 or more<br />\r\n&nbsp;</p>\r\n', '<p>exactly 4</p>\r\n', '8', 30, 21, '2'),
(3345, '<p>&nbsp;________ matches the start of the string.<br />\r\n________ matches the end of the string.<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;^&rsquo;, &lsquo;$&rsquo;</p>\r\n', '<p>&lsquo;$&rsquo;, &lsquo;^&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;$&rsquo;, &lsquo;?&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;?&rsquo;, &lsquo;^&rsquo;</p>\r\n', '8', 30, 21, '1'),
(3346, '<p>Which of the following will result in an error?<br />\r\n&nbsp;</p>\r\n', '<p>&gt;&gt;&gt; p = re.compile(&ldquo;d&rdquo;)<br />\r\n&gt;&gt;&gt; p.search(&ldquo;door&rdquo;)<br />\r\n&nbsp;</p>\r\n', '<p>&gt;&gt;&gt; p = re.escape(&lsquo;hello&rsquo;)<br />\r\n&nbsp;</p>\r\n', '<p>&gt;&gt;&gt; p = re.subn()<br />\r\n&nbsp;</p>\r\n', '<p>&gt;&gt;&gt; p = re.purge()</p>\r\n', '8', 30, 21, '3'),
(3347, '<p>What is the output when we execute list(&ldquo;hello&rdquo;)?</p>\r\n', '<p>[&lsquo;h&rsquo;, &lsquo;e&rsquo;, &lsquo;l&rsquo;, &lsquo;l&rsquo;, &lsquo;o&rsquo;]</p>\r\n', '<p>[&lsquo;hello&rsquo;]</p>\r\n', '<p>[&lsquo;llo&rsquo;]</p>\r\n', '<p>[&lsquo;olleh&rsquo;]</p>\r\n', '4', 25, 21, '1'),
(3348, '<p>To shuffle the list(say list1) what function do we use ?</p>\r\n', '<p>list1.shuffle()</p>\r\n', '<p>shuffle(list1)</p>\r\n', '<p>random.shuffle(list1)&nbsp;</p>\r\n', '<p>random.shuffleList(list1)</p>\r\n', '4', 25, 21, '3'),
(3349, '<p>Suppose list1 is [2, 33, 222, 14, 25], What is list1[-1] ?&nbsp;</p>\r\n', '<p>Error&nbsp;</p>\r\n', '<p>none</p>\r\n', '<p>25</p>\r\n', '<p>2</p>\r\n', '4', 25, 21, '3'),
(3350, '<p>Suppose list1 is [2, 33, 222, 14, 25], What is list1[:-1] ?&nbsp;</p>\r\n', '<p>[2, 33, 222, 14]</p>\r\n', '<p>Error&nbsp;</p>\r\n', '<p>25&nbsp;</p>\r\n', '<p>[25, 14, 222, 33, 2]</p>\r\n', '4', 25, 21, '1'),
(3351, '<p>What will be the output?<br />\r\n1. d1 = {&quot;john&quot;:40, &quot;peter&quot;:45}<br />\r\n2. d2 = {&quot;john&quot;:466, &quot;peter&quot;:45}<br />\r\n3. d1 == d2<br />\r\n&nbsp;</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>None<br />\r\n&nbsp;</p>\r\n', '<p>Error</p>\r\n', '4', 25, 21, '2'),
(3352, '<p>What will be the output?<br />\r\n1. d1 = {&quot;john&quot;:40, &quot;peter&quot;:45}<br />\r\n2. d2 = {&quot;john&quot;:466, &quot;peter&quot;:45}<br />\r\n3. d1 &gt; d2<br />\r\n&nbsp;</p>\r\n', '<p>True<br />\r\n&nbsp;</p>\r\n', '<p>False<br />\r\n&nbsp;</p>\r\n', '<p>None</p>\r\n', '<p>Error</p>\r\n', '4', 25, 21, '3'),
(3353, '<p>How many except statements can a try-except block have ?<br />\r\n&nbsp;</p>\r\n', '<p>zero<br />\r\n&nbsp;</p>\r\n', '<p>one<br />\r\n&nbsp;</p>\r\n', '<p>more than one<br />\r\n&nbsp;</p>\r\n', '<p>more than zero</p>\r\n', '4', 25, 21, '3'),
(3354, '<p>When will the else part of try-except-else be executed?<br />\r\n&nbsp;</p>\r\n', '<p>always<br />\r\n&nbsp;</p>\r\n', '<p>when an exception occurs<br />\r\n&nbsp;</p>\r\n', '<p>when no exception occurs<br />\r\n&nbsp;</p>\r\n', '<p>when an exception occurs in to except block</p>\r\n', '4', 25, 21, '3'),
(3355, '<p>Is the following code valid?<br />\r\ntry :<br />\r\n# Do something<br />\r\nexcept :<br />\r\n# Do something<br />\r\nfinally :<br />\r\n# Do something</p>\r\n', '<p>no, there is no such thing as finally<br />\r\n&nbsp;</p>\r\n', '<p>no, finally cannot be used with except<br />\r\n&nbsp;</p>\r\n', '<p>no, finally must come before except<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>yes</p>\r\n', '4', 25, 21, '2'),
(3356, '<p>Can one block of except statements handle multiple exception?<br />\r\n&nbsp;</p>\r\n', '<p>yes, like except TypeError, SyntaxError [,&hellip;]<br />\r\n&nbsp;</p>\r\n', '<p>yes, like except [TypeError, SyntaxError]<br />\r\n&nbsp;</p>\r\n', '<p>no<br />\r\n&nbsp;</p>\r\n', '<p>none</p>\r\n', '4', 25, 21, '1'),
(3357, '<p>What is the output of the following code?<br />\r\ndef foo():<br />\r\ntry :<br />\r\nreturn 1<br />\r\nfinally :<br />\r\nreturn 2<br />\r\nk = foo()<br />\r\nprint (k)<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>3<br />\r\n&nbsp;</p>\r\n', '<p>error, there is more than one return statement in a single try-finally block</p>\r\n', '4', 25, 21, '2'),
(3358, '<p>What is the output of the following code?<br />\r\ndef foo():<br />\r\ntry :<br />\r\nprint (1)<br />\r\nfinally :<br />\r\nprint (2)<br />\r\nfoo()<br />\r\n&nbsp;</p>\r\n', '<p>1 2<br />\r\n&nbsp;</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>2<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 25, 21, '1'),
(3359, '<p>elements = [0, 1, 2]<br />\r\ndef incr(x):<br />\r\nreturn x+1<br />\r\nprint (list(map(elements, incr)))</p>\r\n', '<p>[1, 2, 3]<br />\r\n&nbsp;</p>\r\n', '<p>[0, 1, 2]<br />\r\n&nbsp;</p>\r\n', '<p>error<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 25, 21, '3'),
(3360, '<p>Which function is called when the following code is executed?<br />\r\nf = foo()<br />\r\nformat(f)<br />\r\n&nbsp;</p>\r\n', '<p>format()<br />\r\n&nbsp;</p>\r\n', '<p>__format__()<br />\r\n&nbsp;</p>\r\n', '<p>str()</p>\r\n', '<p>__str__()</p>\r\n', '4', 25, 21, '4'),
(3361, '<p>Which function overloads the &gt;&gt; operator?<br />\r\n&nbsp;</p>\r\n', '<p>__more__()<br />\r\n&nbsp;</p>\r\n', '<p>__gt__()<br />\r\n&nbsp;</p>\r\n', '<p>__ge__()<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 25, 21, '4'),
(3362, '<p>Analyze the following code:<br />\r\nclass A:<br />\r\ndef __init__(self, i = 0):<br />\r\nself.i = i<br />\r\nclass B(A):<br />\r\ndef __init__(self, j = 0):<br />\r\nself.j = j<br />\r\ndef main():<br />\r\nb = B()<br />\r\nprint(b.i)<br />\r\nprint(b.j)<br />\r\nmain()<br />\r\n&nbsp;</p>\r\n', '<p>Class B inherits A, but the data field in i in A is not inherited.<br />\r\n&nbsp;</p>\r\n', '<p>Class B inherits A and automatically inherits all data fields in A.<br />\r\n&nbsp;</p>\r\n', '<p>When you create an object B, you have to pass an integer such as B(5).<br />\r\n&nbsp;</p>\r\n', '<p>The data field j cannot be accessed by object b.</p>\r\n', '4', 25, 21, '1'),
(3363, '<p>What will be displayed by the following code?<br />\r\nclass A:<br />\r\ndef __init__(self, i = 1):<br />\r\nself.i = i<br />\r\nclass B(A):<br />\r\ndef __init__(self, j = 2):<br />\r\nsuper().__init__()<br />\r\nself.j = j<br />\r\ndef main():<br />\r\nb = B()<br />\r\nprint(b.i, b.j)<br />\r\nmain()</p>\r\n', '<p>0 0<br />\r\n&nbsp;</p>\r\n', '<p>0 1</p>\r\n', '<p>1 2<br />\r\n&nbsp;</p>\r\n', '<p>0 2<br />\r\n<br />\r\n&nbsp;</p>\r\n', '4', 25, 21, '3'),
(3364, '<p>What is the output of the following code?<br />\r\nclass ParentClass:<br />\r\ndef __init__(self):<br />\r\nself.__x = 1<br />\r\nself.y = 10<br />\r\ndef print(self):<br />\r\nprint(self.__x, self.y)<br />\r\nclass ChildClass(ParentClass):<br />\r\ndef __init__(self):<br />\r\nsuper().__init__()<br />\r\nself.__x = 2<br />\r\nself.y = 20<br />\r\nc = ChildClass()<br />\r\nc.print()<br />\r\n&nbsp;</p>\r\n', '<p>1 10</p>\r\n', '<p>1 20<br />\r\n&nbsp;</p>\r\n', '<p>2 10<br />\r\n&nbsp;</p>\r\n', '<p>2 20</p>\r\n', '4', 25, 21, '2'),
(3365, '<p>What is &quot;Programming is fun&quot;[1:1]?</p>\r\n', '<p>P<br />\r\n&nbsp;</p>\r\n', '<p>r<br />\r\n&nbsp;</p>\r\n', '<p>Pr<br />\r\n&nbsp;</p>\r\n', '<p>&#39;&#39;</p>\r\n', '4', 25, 21, '4'),
(3366, '<p>Suppose i is 2 and j is 4, i + j is same as _________.<br />\r\n&nbsp;</p>\r\n', '<p>i.__add(j)<br />\r\n&nbsp;</p>\r\n', '<p>i.__add__(j)</p>\r\n', '<p>i.__Add(j)<br />\r\n&nbsp;</p>\r\n', '<p>i.__ADD(j)</p>\r\n', '4', 25, 21, '2'),
(3367, '<p>What is the return value for xfunction(4) after calling the following function?<br />\r\ndef xfunction(n):<br />\r\nif n == 1:<br />\r\nreturn 1;<br />\r\nelse:<br />\r\nreturn n + xfunction(n - 1)<br />\r\n&nbsp;</p>\r\n', '<p>12<br />\r\n&nbsp;</p>\r\n', '<p>11</p>\r\n', '<p>10<br />\r\n&nbsp;</p>\r\n', '<p>9</p>\r\n', '5', 25, 21, '3'),
(3368, '<p>Which of the following statements produces {&#39;a&#39;, &#39;b&#39;, &#39;c&#39;}?<br />\r\n&nbsp;</p>\r\n', '<p>list(&quot;abac&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>tuple(&quot;abac&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>set(&quot;abac&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>None</p>\r\n', '5', 25, 21, '3'),
(3369, '<p>Suppose s1 = {1, 2, 4, 3} and s2 = {1, 5, 4, 13}, what is s1 &amp; s2?<br />\r\n&nbsp;</p>\r\n', '<p>{2, 3, 5, 13}<br />\r\n&nbsp;</p>\r\n', '<p>{1, 2, 4, 3, 5, 13}<br />\r\n&nbsp;</p>\r\n', '<p>{1, 4}<br />\r\n&nbsp;</p>\r\n', '<p>{1, 5, 4, 13}<br />\r\n&nbsp;</p>\r\n', '5', 25, 21, '3'),
(3370, '<p>Which of the following statements are true?</p>\r\n', '<p>A Python list is immutable if every element in the list is immutable.<br />\r\n&nbsp;</p>\r\n', '<p>A Python set is immutable if every element in the set is immutable.<br />\r\n&nbsp;</p>\r\n', '<p>A Python tuple is immutable if every element in the tuple is immutable.<br />\r\n&nbsp;</p>\r\n', '<p>A Python tuple is immutable.</p>\r\n', '5', 25, 21, '3'),
(3371, '<p>To read two characters from a file object infile, use _________.<br />\r\n&nbsp;</p>\r\n', '<p>infile.read(2)<br />\r\n&nbsp;</p>\r\n', '<p>infile.read()<br />\r\n&nbsp;</p>\r\n', '<p>infile.readline()<br />\r\n&nbsp;</p>\r\n', '<p>infile.readlines()</p>\r\n', '5', 25, 21, '1'),
(3372, '<p>Suppose s = {1, 2, 4, 3}, what happens when invoking s.remove(12)?<br />\r\n&nbsp;</p>\r\n', '<p>There is no remove method for a set object.<br />\r\n&nbsp;</p>\r\n', '<p>This method is executed fine and no exception is raised.<br />\r\n&nbsp;</p>\r\n', '<p>Since 12 is not in the set, Python raises a KeyError exception.<br />\r\n&nbsp;</p>\r\n', '<p>You cannot remove an element from a set.</p>\r\n', '5', 25, 21, '3'),
(3373, '<p>Which of the following statement is false?<br />\r\n&nbsp;</p>\r\n', '<p>Lists are mutable<br />\r\n&nbsp;</p>\r\n', '<p>Tuples are mutable<br />\r\n&nbsp;</p>\r\n', '<p>Sets are mutable<br />\r\n&nbsp;</p>\r\n', '<p>Strings are mutable</p>\r\n', '5', 25, 21, '2'),
(3374, '<p>Invoking the ___________ method converts raw byte data to a string.<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>encode()<br />\r\n&nbsp;</p>\r\n', '<p>decode()<br />\r\n&nbsp;</p>\r\n', '<p>convert()<br />\r\n&nbsp;</p>\r\n', '<p>toString()</p>\r\n', '5', 25, 21, '2'),
(3375, '<p>What is displayed when the following program is run?<br />\r\ntry:<br />\r\nlist = 5 * [ 0 ]<br />\r\nx = list[ 5 ]<br />\r\nprint( &quot;Done&quot; )<br />\r\nexcept IndexError:<br />\r\nprint( &quot;Index out of bound&quot; )</p>\r\n', '<p>&quot;Done&quot; followed by &quot;Index out of bound&quot;</p>\r\n', '<p>&quot;Index out of bound&quot;<br />\r\n&nbsp;</p>\r\n', '<p>&quot;Done&quot;<br />\r\n&nbsp;</p>\r\n', '<p>Nothing displayed<br />\r\n&nbsp;</p>\r\n', '5', 25, 21, '2'),
(3376, '<p>What is displayed when the following program is run?<br />\r\ntry:<br />\r\nlist = 10 * [ 0 ]<br />\r\nx = list[ 9 ]<br />\r\nprint( &quot;Done&quot; )<br />\r\nexcept IndexError:<br />\r\nprint( &quot;Index out of bound&quot; )<br />\r\nelse:<br />\r\nprint( &quot;Nothing is wrong&quot; )<br />\r\nfinally:<br />\r\nprint( &quot;Finally we are here&quot; )</p>\r\n', '<p>&quot;Done&quot; followed by &quot;Nothing is wrong&quot;<br />\r\n&nbsp;</p>\r\n', '<p>&quot;Done&quot; followed by &quot;Nothing is wrong&quot; followed by &quot;Finally we are here&quot;<br />\r\n&nbsp;</p>\r\n', '<p>&quot;Index out of bound&quot; followed by &quot;Nothing is wrong&quot; followed by &quot;Finally we are<br />\r\nhere&quot;<br />\r\n&nbsp;</p>\r\n', '<p>&quot;Nothing is wrong&quot; followed by &quot;Finally we are here&quot;</p>\r\n', '5', 25, 21, '1'),
(3377, '<p>Whihc function do you use to read data using binary input?<br />\r\n&nbsp;</p>\r\n', '<p>read<br />\r\n&nbsp;</p>\r\n', '<p>input<br />\r\n&nbsp;</p>\r\n', '<p>load<br />\r\n&nbsp;</p>\r\n', '<p>receive</p>\r\n', '5', 25, 21, '3'),
(3378, '<p>For m = [[x, x + 1, x + 2] for x in range(1, 9, 3)], m is _______.<br />\r\n&nbsp;</p>\r\n', '<p>[[1, 2, 3], [4, 5, 6], [7, 8, 9]]<br />\r\n&nbsp;</p>\r\n', '<p>[[0, 1, 2], [1, 2, 3], [2, 3, 4]]<br />\r\n&nbsp;</p>\r\n', '<p>[1, 2, 3, 4, 5, 6, 7, 8, 9]<br />\r\n&nbsp;</p>\r\n', '<p>[0, 1, 2, 1, 2, 3, 2, 3, 4]</p>\r\n', '6', 25, 21, '1'),
(3379, '<p>What will be displayed by the following program?<br />\r\nvalues = [[ 3 , 4 , 5 , 1 ], [ 33 , 6 , 1 , 2 ]]<br />\r\nv = values[ 0 ][ 0 ]<br />\r\nfor lst in values:<br />\r\nfor element in lst:<br />\r\nif v &gt; element:<br />\r\nv = element<br />\r\nprint(v)</p>\r\n', '<p>1<br />\r\n&nbsp;</p>\r\n', '<p>3</p>\r\n', '<p>5</p>\r\n', '<p>6</p>\r\n', '6', 35, 21, '1'),
(3380, '<p>Which function do you use to write data to perform binary output?<br />\r\n&nbsp;</p>\r\n', '<p>write<br />\r\n&nbsp;</p>\r\n', '<p>output<br />\r\n&nbsp;</p>\r\n', '<p>dump<br />\r\n&nbsp;</p>\r\n', '<p>send</p>\r\n', '6', 35, 21, '3'),
(3381, '<p>What will be displayed by the following code?<br />\r\npoints = [[ 1 , 2 ], [ 3 , 1 . 5 ], [ 0 . 5 , 0 . 5 ]]<br />\r\npoints.sort()<br />\r\nprint(points)<br />\r\n&nbsp;</p>\r\n', '<p>[[1, 2], [3, 1.5], [0.5, 0.5]]<br />\r\n&nbsp;</p>\r\n', '<p>[[3, 1.5], [1, 2], [0.5, 0.5]]<br />\r\n&nbsp;</p>\r\n', '<p>[[0.5, 0.5], [1, 2], [3, 1.5]]</p>\r\n', '<p>[[0.5, 0.5], [3, 1.5], [1, 2]]</p>\r\n', '6', 35, 21, '3'),
(3382, '<p>__________ represents an entity in the real world that can be distinctly identified.<br />\r\n&nbsp;</p>\r\n', '<p>A class<br />\r\n&nbsp;</p>\r\n', '<p>An object<br />\r\n&nbsp;</p>\r\n', '<p>A method</p>\r\n', '<p>A data field</p>\r\n', '6', 35, 21, '2'),
(3383, '<p>The ________ creates an object in the memory and invokes __________.<br />\r\n&nbsp;</p>\r\n', '<p>the __init__ method<br />\r\n&nbsp;</p>\r\n', '<p>the init method<br />\r\n&nbsp;</p>\r\n', '<p>the initialize method<br />\r\n&nbsp;</p>\r\n', '<p>the __str__ method</p>\r\n', '6', 35, 21, '1'),
(3384, '<p>What is chr(ord(&#39;B&#39;)))?<br />\r\n&nbsp;</p>\r\n', '<p>A<br />\r\n&nbsp;</p>\r\n', '<p>B</p>\r\n', '<p>C</p>\r\n', '<p>D</p>\r\n', '6', 35, 21, '2'),
(3385, '<p>Suppose t = (1, 2, 4, 3), which of the following is incorrect?<br />\r\n&nbsp;</p>\r\n', '<p>print(t[3])<br />\r\n&nbsp;</p>\r\n', '<p>t[3] = 45</p>\r\n', '<p>print(max(t))</p>\r\n', '<p>print(len(t))</p>\r\n', '6', 35, 21, '2'),
(3386, '<p>Suppose s = {1, 2}, 2 * s is _________.</p>\r\n', '<p>(1, 2, 1, 2)<br />\r\n&nbsp;</p>\r\n', '<p>[1, 2, 1, 2]<br />\r\n&nbsp;</p>\r\n', '<p>(1, 1, 2, 2)<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>illegal</p>\r\n', '6', 35, 21, '4'),
(3387, '<p>Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is min(list1)?<br />\r\n&nbsp;</p>\r\n', '<p>5</p>\r\n', '<p>4</p>\r\n', '<p>8</p>\r\n', '<p>1</p>\r\n', '6', 35, 21, '4'),
(3388, '<p>To insert 5 to the third position in list1, use _______.<br />\r\n&nbsp;</p>\r\n', '<p>list1.insert(3, 5)<br />\r\n&nbsp;</p>\r\n', '<p>list1.insert(2, 5)<br />\r\n&nbsp;</p>\r\n', '<p>list1.add(3, 5)<br />\r\n&nbsp;</p>\r\n', '<p>list1.append(3, 5)</p>\r\n', '6', 35, 21, '2'),
(3389, '<p>Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after list1.reverse()?<br />\r\n&nbsp;</p>\r\n', '<p>[3, 4, 5, 20, 5, 25, 1, 3]<br />\r\n&nbsp;</p>\r\n', '<p>[1, 3, 3, 4, 5, 5, 20, 25]</p>\r\n', '<p>[25, 20, 5, 5, 4, 3, 3, 1]<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>[3, 1, 25, 5, 20, 5, 4, 3]</p>\r\n', '6', 35, 21, '4'),
(3390, '<p>What is list(&quot;a#b#c#d&quot;.split(&#39;#&#39;)?<br />\r\n&nbsp;</p>\r\n', '<p>[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;]<br />\r\n&nbsp;</p>\r\n', '<p>[&#39;a b c d&#39;]</p>\r\n', '<p>[&#39;a#b#c#d&#39;]<br />\r\n&nbsp;</p>\r\n', '<p>[&#39;abcd&#39;]</p>\r\n', '6', 35, 21, '1'),
(3391, '<p>What function do you use to read a string?<br />\r\n&nbsp;</p>\r\n', '<p>input(&quot;Enter a string&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>eval(input(&quot;Enter a string&quot;))<br />\r\n&nbsp;</p>\r\n', '<p>enter(&quot;Enter a string&quot;)<br />\r\n&nbsp;</p>\r\n', '<p>eval(enter(&quot;Enter a string&quot;))</p>\r\n', '6', 35, 21, '1'),
(3392, '<p>_______ is the code in natural language mixed with some program code.<br />\r\n&nbsp;</p>\r\n', '<p>Python program<br />\r\n&nbsp;</p>\r\n', '<p>A Python statement<br />\r\n&nbsp;</p>\r\n', '<p>Pseudocode<br />\r\n&nbsp;</p>\r\n', '<p>A flowchart diagram</p>\r\n', '6', 35, 21, '3'),
(3393, '<p>To following code reads two number. Which of the following is the correct input for<br />\r\nthe code?<br />\r\nx, y = eval(input( &quot;Enter two numbers: &quot; ))<br />\r\n&nbsp;</p>\r\n', '<p>1 2<br />\r\n&nbsp;</p>\r\n', '<p>&quot;1 2&quot;</p>\r\n', '<p>1, 2<br />\r\n&nbsp;</p>\r\n', '<p>1, 2,</p>\r\n', '6', 35, 21, '3'),
(3394, '<p>What is the result of 45 // 4?<br />\r\n&nbsp;</p>\r\n', '<p>10<br />\r\n&nbsp;</p>\r\n', '<p>11<br />\r\n&nbsp;</p>\r\n', '<p>11.25<br />\r\n&nbsp;</p>\r\n', '<p>12</p>\r\n', '6', 35, 21, '2'),
(3395, '<p>59.25 % 1 is _____<br />\r\n&nbsp;</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>3</p>\r\n', '<p>0&nbsp;</p>\r\n', '6', 35, 21, '4'),
(3396, '<p>2 ** 3.0 evaluates to __________.<br />\r\n&nbsp;</p>\r\n', '<p>9<br />\r\n&nbsp;</p>\r\n', '<p>8<br />\r\n&nbsp;</p>\r\n', '<p>9.0<br />\r\n&nbsp;</p>\r\n', '<p>8.0</p>\r\n', '6', 35, 21, '4'),
(3397, '<p>British audiences prefer speakers to use</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>flamboyant gestures.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>relatively few gestures.<br />\r\n&nbsp;</p>\r\n', '<p>informal, relaxed delivery styles.<br />\r\n&nbsp;</p>\r\n', '<p>no gestures at all</p>\r\n', '1', 16, 26, '2'),
(3398, '<p>Which of the following is NOT a common style of delivery?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Contextual<br />\r\n&nbsp;</p>\r\n', '<p>Manuscript<br />\r\n&nbsp;</p>\r\n', '<p>Memorized<br />\r\n&nbsp;</p>\r\n', '<p>Extemporaneous</p>\r\n', '1', 16, 26, '1'),
(3399, '<p>Which of the following delivery styles would be employed by a diplomat?</p>\r\n', '<p>Extemporaneous</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Manuscript<br />\r\n&nbsp;</p>\r\n', '<p>Contextual<br />\r\n&nbsp;</p>\r\n', '<p>Memorized</p>\r\n', '1', 16, 26, '2'),
(3400, '<p>Which of the following is NOT a guideline for effective impromptu speaking?</p>\r\n', '<p>Memorize key phrases</p>\r\n', '<p>Draw upon personal knowledge</p>\r\n', '<p>Consider your audience</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Be brief</p>\r\n', '1', 16, 26, '1'),
(3401, '<p>When searching for vivid words, which resource is most appropriate?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Encyclopaedia<br />\r\n&nbsp;</p>\r\n', '<p>Rhyming guide<br />\r\n&nbsp;</p>\r\n', '<p>Thesaurus<br />\r\n&nbsp;</p>\r\n', '<p>Dictionary</p>\r\n', '1', 16, 26, '3'),
(3402, '<p>Research indicates that about ___ percent of the population feels anxious when they speak to an audience.</p>\r\n', '<p>80</p>\r\n', '<p>100</p>\r\n', '<p>40</p>\r\n', '<p>60</p>\r\n', '1', 16, 26, '1'),
(3403, '<p>Which of the following is NOT a technique to manage speaker anxiety?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Focus on your message<br />\r\n&nbsp;</p>\r\n', '<p>Focus on your anxiety<br />\r\n&nbsp;</p>\r\n', '<p>Focus on your audience<br />\r\n&nbsp;</p>\r\n', '<p>Take advantage of opportunities to speak</p>\r\n', '1', 16, 26, '2'),
(3404, '<p>Research indicates that speakers with less than 50 percent eye contact are considered</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>professional.<br />\r\n&nbsp;</p>\r\n', '<p>focused.<br />\r\n&nbsp;</p>\r\n', '<p>powerful.<br />\r\n&nbsp;</p>\r\n', '<p>unfriendly.</p>\r\n', '1', 16, 26, '4'),
(3405, '<p>Asian audiences generally prefer _______ eye contact compared to North American audiences.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>less<br />\r\n&nbsp;</p>\r\n', '<p>more<br />\r\n&nbsp;</p>\r\n', '<p>much more<br />\r\n&nbsp;</p>\r\n', '<p>the same</p>\r\n', '1', 15, 26, '1'),
(3406, '<p>Most speakers average between ________ words per minute.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>100-200<br />\r\n&nbsp;</p>\r\n', '<p>120-180<br />\r\n&nbsp;</p>\r\n', '<p>80-100<br />\r\n&nbsp;</p>\r\n', '<p>200-300</p>\r\n', '1', 15, 26, '2'),
(3407, '<p>If your audience is dressed in business attire, wear</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>business attire to help them relate to you.<br />\r\n&nbsp;</p>\r\n', '<p>&quot;Friday casual.&quot;<br />\r\n&nbsp;</p>\r\n', '<p>informal clothes to show your confidence.<br />\r\n&nbsp;</p>\r\n', '<p>informal clothes to differentiate yourself.</p>\r\n', '1', 15, 26, '1'),
(3408, '<p>Which kind of graph is most useful for making comparisons?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Pie<br />\r\n&nbsp;</p>\r\n', '<p>Line<br />\r\n&nbsp;</p>\r\n', '<p>Bar<br />\r\n&nbsp;</p>\r\n', '<p>Photo</p>\r\n', '1', 15, 26, '3'),
(3409, '<p>Which of the following is BAD advice for speech preparation?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Rest the night before you speak.<br />\r\n&nbsp;</p>\r\n', '<p>Arrive right on time to maintain energy.<br />\r\n&nbsp;</p>\r\n', '<p>Create a full-content outline.<br />\r\n&nbsp;</p>\r\n', '<p>Practice several times.</p>\r\n', '1', 15, 26, '2'),
(3410, '<p>Which speaking style is taught in most public speaking classes?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Extemporaneous<br />\r\n&nbsp;</p>\r\n', '<p>Memorized<br />\r\n&nbsp;</p>\r\n', '<p>Impromptu<br />\r\n&nbsp;</p>\r\n', '<p>Manuscript</p>\r\n', '1', 15, 26, '1'),
(3411, '<p>To prepare for your presentation, you see yourself giving it in your mind. This is called</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>performance visualization.<br />\r\n&nbsp;</p>\r\n', '<p>internal practice.<br />\r\n&nbsp;</p>\r\n', '<p>systematic desensitization.<br />\r\n&nbsp;</p>\r\n', '<p>mind control.</p>\r\n', '1', 15, 26, '1'),
(3412, '<p>Which of the following is NOT a common physical symptom of speaker anxiety?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Increased perspiration<br />\r\n&nbsp;</p>\r\n', '<p>Rapid heartbeat<br />\r\n&nbsp;</p>\r\n', '<p>Increased breathing rate<br />\r\n&nbsp;</p>\r\n', '<p>Decreased blood flow</p>\r\n', '1', 15, 26, '4'),
(3413, '<p>Which of the following is the LEAST effective in presentational speaking?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Unbiased words<br />\r\n&nbsp;</p>\r\n', '<p>Vivid words<br />\r\n&nbsp;</p>\r\n', '<p>Concrete words<br />\r\n&nbsp;</p>\r\n', '<p>Complex words</p>\r\n', '1', 15, 26, '4'),
(3414, '<p>Your stance, or the way you hold yourself during a presentation, is referred to as your</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>appearance.<br />\r\n&nbsp;</p>\r\n', '<p>posture.<br />\r\n&nbsp;</p>\r\n', '<p>gesture.<br />\r\n&nbsp;</p>\r\n', '<p>physical delivery</p>\r\n', '1', 15, 26, '2'),
(3415, '<p>Computer presentation software is a</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>reference resource.<br />\r\n&nbsp;</p>\r\n', '<p>pictorial representation.<br />\r\n&nbsp;</p>\r\n', '<p>presentation aid.<br />\r\n&nbsp;</p>\r\n', '<p>nonverbal aid.</p>\r\n', '1', 15, 26, '3'),
(3416, '<p>Which of the following is NOT advice that your textbook offers for selecting the right presentation aids?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Adapt to your audience.<br />\r\n&nbsp;</p>\r\n', '<p>Keep your specific purpose in mind.<br />\r\n&nbsp;</p>\r\n', '<p>Consider the room in which you will speak.<br />\r\n&nbsp;</p>\r\n', '<p>Use the equipment that is provided to you.</p>\r\n', '1', 15, 26, '4'),
(3417, '<p>Important concepts in small group communication are leadership and leader. Leadership relates to a ___________, while a leader is a ___________.</p>\r\n', '<p>concept; theory</p>\r\n', '<p>cultural trait; behavior&nbsp;</p>\r\n', '<p>process; person</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '2', 22, 26, '3'),
(3418, '<p>Human communication that modifies the attitudes and behaviors of others in order to meet group goals and needs is the definition of:</p>\r\n', '<p>leadership</p>\r\n', '<p>a leader</p>\r\n', '<p>group goals</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>group dynamics</p>\r\n', '2', 22, 26, '1'),
(3419, '<p>Which of the following has been identified as a source of power in leadership?</p>\r\n', '<p>reward</p>\r\n', '<p>punishment</p>\r\n', '<p>legitimate referent</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '2', 22, 26, '4'),
(3420, '<p>Legitimate power in leadership stems from:</p>\r\n', '<p>organizational authority</p>\r\n', '<p>a role acknowledged by the followers</p>\r\n', '<p>leadership skills</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>identification with other leaders</p>\r\n', '2', 22, 26, '2'),
(3421, '<p>What is referent power in leadership?</p>\r\n', '<p>power that stems from a person&#39;s leadership skills</p>\r\n', '<p>power that is designated by an organizational authority</p>\r\n', '<p>power that group members acknowledge because of special circumstances</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>power that is based on attraction or identification with another person</p>\r\n', '2', 22, 26, '4'),
(3422, '<p>The more leaders are admired and respected, the more members ___________ their behavior.</p>\r\n', '<p>resent</p>\r\n', '<p>admire</p>\r\n', '<p>imitate</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>endorse</p>\r\n', '2', 22, 26, '3'),
(3423, '<p>Which source of power comes from what others believe a member knows or can do?</p>\r\n', '<p>expert power</p>\r\n', '<p>referent power</p>\r\n', '<p>legitimate power</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>designated power</p>\r\n', '2', 22, 26, '1'),
(3424, '<p>A person in a group that is elected or appointed to a leadership position is called a:</p>\r\n', '<p>leader&nbsp;</p>\r\n', '<p>designated leader</p>\r\n', '<p>referent leader</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>expert leader</p>\r\n', '2', 22, 26, '2'),
(3425, '<p>The advantage in small groups with a designated leader is:</p>\r\n', '<p>having someone in the group delineate power among members</p>\r\n', '<p>having someone in the group available to answer to the organization</p>\r\n', '<p>having someone in the group to coordinate the flow of communication and the work of members</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '2', 22, 26, '3'),
(3426, '<p>The process whereby one individual who starts out on an equal basis with other members but who emerges to be perceived as the group&#39;s leader is:</p>\r\n', '<p>leadership emergence</p>\r\n', '<p>leadership designation</p>\r\n', '<p>leadership reference</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '2', 22, 26, '1'),
(3427, '<p>Which of the following is a trait of self-monitoring in terms of leadership?</p>\r\n', '<p>sensitivity to contextual cues</p>\r\n', '<p>social perception</p>\r\n', '<p>ability to respond flexibly in a given situation</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '2', 22, 26, '4'),
(3428, '<p>Which of the following traits of verbal style is associated with leadership emergence?</p>\r\n', '<p>idea giving</p>\r\n', '<p>low in stating opinions</p>\r\n', '<p>knowledgeable about the group&#39;s task</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '2', 22, 26, '4');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(3429, '<p>The examination of characteristics relating to leadership, such as enthusiasm, verbal skills, creativity, critical thinking ability, and self-confidence, is referred to as a:</p>\r\n', '<p>traits approach</p>\r\n', '<p>communication approach</p>\r\n', '<p>styles approach</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>situational approach</p>\r\n', '2', 22, 26, '1'),
(3430, '<p>The examination of characteristics relating to leadership, such as enthusiasm, verbal skills, creativity, critical thinking ability, and self-confidence, is referred to as a:</p>\r\n', '<p>traits approach</p>\r\n', '<p>communication approach</p>\r\n', '<p>styles approach</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>situational approach</p>\r\n', '2', 22, 26, '1'),
(3431, '<p>Appropriate leader behaviors in a group are shaped by the ___________ of the group.</p>\r\n', '<p>traits</p>\r\n', '<p>needs</p>\r\n', '<p>behavior</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>style</p>\r\n', '2', 22, 26, '2'),
(3432, '<p>Which of the following approaches to the examination of leadership focuses on the pattern of behaviors a leader exhibits in a group?</p>\r\n', '<p>trait approach</p>\r\n', '<p>behavior approach</p>\r\n', '<p>communication approach</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>styles approach</p>\r\n', '2', 22, 26, '4'),
(3433, '<p>Which of the following types of leaders encourages members to participate in group decisions, including policy-making decisions?</p>\r\n', '<p>autocratic leaders</p>\r\n', '<p>democratic leaders</p>\r\n', '<p>laissez-faire</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '2', 22, 26, '2'),
(3434, '<p>Which of the following types of leader is most likely to say whatever the group does is fine with him or her?</p>\r\n', '<p>laissez-faire leaders</p>\r\n', '<p>democratic leaders</p>\r\n', '<p>autocratic leaders</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>designated leaders</p>\r\n', '2', 22, 26, '1'),
(3435, '<p>Which of the following assumptions is characteristic of contingency approaches to leadership?</p>\r\n', '<p>Group situations vary with different situations, requiring different leadership styles.</p>\r\n', '<p>Members&#39; skills and experience will affect the type of leadership likely to be effective.</p>\r\n', '<p>Cultural values will affect the type of leadership likely to be effective.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p><br />\r\nall of the above</p>\r\n', '2', 22, 26, '4'),
(3436, '<p>According to Fieldler&#39;s contingency theory, which of the following factors is most related to appropriate leader behaviors?</p>\r\n', '<p>leader-member relations</p>\r\n', '<p>task structure</p>\r\n', '<p>strength of leader position power</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>all of the above</p>\r\n', '2', 22, 26, '4'),
(3437, '<p>Which of the following is not considered to be an effective communicative competency for discussion leaders?</p>\r\n', '<p>Effective group leaders inspire team members&#39; confidence in themselves.</p>\r\n', '<p>Effective group leaders express individual-centered concern.</p>\r\n', '<p>Effective group leaders respect and support others.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Effective group leaders promote celebration of diversity and sensitive diversity management.</p>\r\n', '2', 22, 26, '2'),
(3438, '<p>The Roman rhetorical canon focused on the development of ideas or the content of a speech is called</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>invention<br />\r\n&nbsp;</p>\r\n', '<p>arrangement<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>style<br />\r\n&nbsp;</p>\r\n', '<p>delivery</p>\r\n', '3', 17, 26, '1'),
(3439, '<p>Someone coughing in the audience or walking in late during a presentation are examples of what part of the communication model?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>channel<br />\r\n&nbsp;</p>\r\n', '<p>message<br />\r\n&nbsp;</p>\r\n', '<p>feedback<br />\r\n&nbsp;</p>\r\n', '<p>interference&nbsp;</p>\r\n', '3', 17, 26, '4'),
(3440, '<p>Gestures and visual aids are examples of what part of the communication model?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>channel<br />\r\n&nbsp;</p>\r\n', '<p>message<br />\r\n&nbsp;</p>\r\n', '<p>feedback<br />\r\n&nbsp;</p>\r\n', '<p>interference&nbsp;</p>\r\n', '3', 17, 26, '2'),
(3441, '<p>How many times setup() runs in arduino?</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>infinite</p>\r\n', '<p>0</p>\r\n', '4', 10, 16, '1'),
(3442, '<p>I. The first step in making a cake is to gather all of the ingredients.<br />\r\n&nbsp;&nbsp;&nbsp; II. Next you mix the ingredients.<br />\r\n&nbsp;&nbsp;&nbsp; III.&nbsp; The third step in making a cake is to bake until it is done.<br />\r\n&nbsp;&nbsp;&nbsp; IV. Then ice it.</p>\r\n\r\n<p>&nbsp;A speech with the above main points is following which pattern of organization?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>topical<br />\r\n&nbsp;</p>\r\n', '<p>causal<br />\r\n&nbsp;</p>\r\n', '<p>spatial<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>chronological</p>\r\n', '3', 17, 26, '4'),
(3443, '<p>&nbsp;How many times setup() runs in arduino?</p>\r\n', '<p>1</p>\r\n', '<p>2</p>\r\n', '<p>infinite</p>\r\n', '<p>0</p>\r\n', '4', 10, 16, '3'),
(3444, '<p>Which of the following is a strong specific purpose statement for an Informative speech?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>To inform my audience about dogs.<br />\r\n&nbsp;</p>\r\n', '<p>To persuade my audience to take action to protect themselves from vicious dogs.<br />\r\n&nbsp;</p>\r\n', '<p>To inform my audience about the different breeds of dogs and about how to train dogs.<br />\r\n&nbsp;</p>\r\n', '<p>To inform my audience about the different breeds of dogs.&nbsp;</p>\r\n', '3', 17, 26, '4'),
(3445, '<p>PWM stands for?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Pulse width modulation</p>\r\n', '<p>Pin width modulation</p>\r\n', '<p>Pulse width modulation</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Pulse width mode</p>\r\n', '4', 10, 16, '3'),
(3446, '<p>Which is not a guideline for writing specific purpose statements?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>limit the purpose to one idea.<br />\r\n&nbsp;</p>\r\n', '<p>make it broad and general<br />\r\n&nbsp;</p>\r\n', '<p>avoid figurative language<br />\r\n&nbsp;</p>\r\n', '<p>write the statement as an infinitive phrase&nbsp;</p>\r\n', '3', 17, 26, '2'),
(3447, '<p>Which of the following is not a version of Arduino?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Tre</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Galileo</p>\r\n', '<p>Zero</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Leonardio</p>\r\n', '4', 10, 16, '4'),
(3448, '<p>According to our textbook, ___________ are used to emphasize movement from one point to another.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>channels<br />\r\n&nbsp;</p>\r\n', '<p>internal summaries<br />\r\n&nbsp;</p>\r\n', '<p>transitions<br />\r\n&nbsp;</p>\r\n', '<p>point connectors&nbsp;</p>\r\n', '3', 17, 26, '3'),
(3449, '<p>The digital pin which does not have PWM campability is?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>6</p>\r\n', '<p>3</p>\r\n', '<p>4</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>5</p>\r\n', '4', 10, 16, '3'),
(3450, '<p>While working on the body of the speech you see the need to let the audience know what the upcoming subpoints will be. You decide to include a(n) ____________.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>pattern of organization<br />\r\n&nbsp;</p>\r\n', '<p>internal preview<br />\r\n&nbsp;</p>\r\n', '<p>transition<br />\r\n&nbsp;</p>\r\n', '<p>list&nbsp;</p>\r\n', '3', 17, 26, '2'),
(3451, '<p>According to the text, speeches should contain _______ main points.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>three<br />\r\n&nbsp;</p>\r\n', '<p>two to three<br />\r\n&nbsp;</p>\r\n', '<p>two to five<br />\r\n&nbsp;</p>\r\n', '<p>one to five&nbsp;</p>\r\n', '3', 17, 26, '3'),
(3452, '<p>PWM output varies from</p>\r\n', '<p>0 to 255</p>\r\n', '<p>0 to 5</p>\r\n', '<p>0 to 1023</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>0 to 256</p>\r\n', '4', 12, 16, '1'),
(3453, '<p>According to your textbook, a preparation outline should include</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>directions for delivery of the speech<br />\r\n&nbsp;</p>\r\n', '<p>complete sentences<br />\r\n&nbsp;</p>\r\n', '<p>a bibliography<br />\r\n&nbsp;</p>\r\n', '<p>both B and C</p>\r\n', '3', 17, 26, '4'),
(3454, '<p>Which language is the Arduino IDE written in?</p>\r\n', '<p>Java</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>C<br />\r\n&nbsp;</p>\r\n', '<p>C++</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>PHP</p>\r\n', '4', 10, 16, '1'),
(3455, '<p>According to your textbook &quot;next&quot; and &quot;finally&quot; are examples of what kind of connective?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>brief<br />\r\n&nbsp;</p>\r\n', '<p>transitions<br />\r\n&nbsp;</p>\r\n', '<p>linking words<br />\r\n&nbsp;</p>\r\n', '<p>signposts&nbsp;</p>\r\n', '3', 17, 26, '4'),
(3456, '<p>&quot;I am currently studying veterinary medicine, and I am working part-time at an animal clinic.&quot; This statement in the introduction of the speech could best be described as</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>gaining attention<br />\r\n&nbsp;</p>\r\n', '<p>revealing the topic<br />\r\n&nbsp;</p>\r\n', '<p>establishing credibility<br />\r\n&nbsp;</p>\r\n', '<p>bragging&nbsp;</p>\r\n', '3', 17, 26, '3'),
(3457, '<p>&quot;You now know that the three steps in making a cake are gathering the materials, mixing the batter, and baking the cake.&quot;<br />\r\nThis statement in the conclusion of a speech could best be described as</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>signaling the end of the speech<br />\r\n&nbsp;</p>\r\n', '<p>a dissolve ending<br />\r\n&nbsp;</p>\r\n', '<p>a crescendo ending<br />\r\n&nbsp;</p>\r\n', '<p>reinforcement of the central idea</p>\r\n', '3', 17, 26, '4'),
(3458, '<p>One reason we must adapt our speeches to our audiences is because listeners are ____________, meaning they are especially interested in what impact your topic has on them.</p>\r\n', '<p>egocentric<br />\r\n&nbsp;</p>\r\n', '<p>ethnocentric<br />\r\n&nbsp;</p>\r\n', '<p>poor listeners<br />\r\n&nbsp;</p>\r\n', '<p>ethnic</p>\r\n', '3', 17, 26, '1'),
(3459, '<p>In delay(t); t is in:</p>\r\n', '<p>microsec</p>\r\n', '<p>millisec</p>\r\n', '<p>nanosec</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>sec</p>\r\n', '4', 10, 16, '2'),
(3460, '<p>According to your textbook, the belief that ones&#39; own group or culture is superior to all other groups or cultures is termed</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>egocentrism<br />\r\n&nbsp;</p>\r\n', '<p>ethnocentrism<br />\r\n&nbsp;</p>\r\n', '<p>limited world view<br />\r\n&nbsp;</p>\r\n', '<p>ethnicity&nbsp;</p>\r\n', '3', 17, 26, '2'),
(3461, '<p>If Serial is begun with Serial.begin(9600); How much time will it take to send 2 ASCII characters?</p>\r\n', '<p>1.667 millisecond</p>\r\n', '<p>1.9220 millisecond</p>\r\n', '<p>4.800 millisecond</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1.9200 millisecond</p>\r\n', '4', 12, 16, '1'),
(3462, '<p>The following statement is what part of an outline?</p>\r\n\r\n<p>&nbsp;In the summer of 1993, a new plan was adopted.</p>\r\n', '<p>a supporting fact</p>\r\n', '<p>a main point</p>\r\n', '<p>a subpoint</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a sub-sub-subpoint</p>\r\n', '3', 17, 26, '4'),
(3463, '<p>Below in random order are a main point, two subpoints, and two sub-subpoints from a speech. Which is the second subpoint? [this would be the point signaled on an outline as &quot;B.&quot;]</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>King gave his &quot;I Have a Dream&quot; speech following the march.<br />\r\n&nbsp;</p>\r\n', '<p>Martin Luther King, Jr.&#39;s greatest triumphs came during the early 1960&#39;s.<br />\r\n&nbsp;</p>\r\n', '<p>Later that year he participated in the famous march on Washington, D.C.<br />\r\n&nbsp;</p>\r\n', '<p>More than 200,000 people took part in that march.&nbsp;</p>\r\n', '3', 17, 26, '3'),
(3464, '<p>How many analog ports does an Arduino have?</p>\r\n', '<p>five, A1&shy;A5</p>\r\n', '<p>six, A0&shy;A5</p>\r\n', '<p>six, A1&shy;A6</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>five, A0&shy;A4</p>\r\n', '4', 12, 16, '2'),
(3465, '<p>Which of these is an analog input device?</p>\r\n', '<p>pressure sensor</p>\r\n', '<p>servo</p>\r\n', '<p>button</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>LED</p>\r\n', '4', 11, 16, '1'),
(3466, '<p>Which of the following need to be included on your preparation outline?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a specific purpose statement<br />\r\n&nbsp;</p>\r\n', '<p>pattern of organization<br />\r\n&nbsp;</p>\r\n', '<p>bibliography<br />\r\n&nbsp;</p>\r\n', '<p>all of the above&nbsp;</p>\r\n', '3', 17, 26, '4'),
(3467, '<p>As companies move past the experimental phase with Hadoop, many cite the need for additional capabilities, including:<br />\r\n&nbsp;</p>\r\n', '<p>Improved data storage and information retrieval<br />\r\n&nbsp;</p>\r\n', '<p>Improved extract, transform and load features for data integration<br />\r\n&nbsp;</p>\r\n', '<p>Improved data warehousing functionality<br />\r\n&nbsp;</p>\r\n', '<p>Improved security, workload management and SQL support</p>\r\n', '4', 20, 27, '4'),
(3468, '<p>According to your textbook, a speaking outline should contain</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>everything you want to say in the speech<br />\r\n&nbsp;</p>\r\n', '<p>a bibliography<br />\r\n&nbsp;</p>\r\n', '<p>delivery cues<br />\r\n&nbsp;</p>\r\n', '<p>a specific purpose and central idea&nbsp;</p>\r\n', '3', 17, 26, '3'),
(3469, '<p>Which of the following is output device?</p>\r\n\r\n<div style="page-break-after: always"><span style="display:none">&nbsp;</span></div>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>pressure sensor</p>\r\n', '<p>servo</p>\r\n', '<p>button</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>potentiometer</p>\r\n', '4', 10, 16, '2'),
(3470, '<p>A speech about the steps in the process of hooking up your computer to AOL (America On Line) would probably best be organized according to what pattern of organization?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>topical<br />\r\n&nbsp;</p>\r\n', '<p>chronological<br />\r\n&nbsp;</p>\r\n', '<p>causal<br />\r\n&nbsp;</p>\r\n', '<p>problem-solution&nbsp;</p>\r\n', '3', 17, 26, '2'),
(3471, '<p>Point out the correct statement :<br />\r\n&nbsp;</p>\r\n', '<p>Hadoop do need specialized hardware to process the data<br />\r\n&nbsp;</p>\r\n', '<p>Hadoop 2.0 allows live stream processing of real time data</p>\r\n', '<p>In Hadoop programming framework output files are divided in to lines or records<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 20, 27, '2'),
(3472, '<p>Which of the following is not a valid datatype in Arduino?</p>\r\n', '<p>void</p>\r\n', '<p>word</p>\r\n', '<p>string</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>short</p>\r\n', '4', 10, 16, '4'),
(3473, '<p>Leadership today is increasingly associated with the concept of ______________?</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Strategy<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Control<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Getting others to follow<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Command</p>\r\n', '4', 17, 26, '3'),
(3474, '<p>According to analysts, for what can traditional IT systems provide a foundation when they&rsquo;re integrated with big data technologies like Hadoop ?<br />\r\n&nbsp;</p>\r\n', '<p>Big data management and data mining<br />\r\n&nbsp;</p>\r\n', '<p>Data warehousing and business intelligence<br />\r\n&nbsp;</p>\r\n', '<p>Management of Hadoop clusters<br />\r\n&nbsp;</p>\r\n', '<p>Collecting and storing unstructured data</p>\r\n', '4', 20, 27, '1'),
(3475, '<p>&nbsp;Which of the following is not a pre&shy;defined function in Arduino?<br />\r\n&nbsp;</p>\r\n', '<p>detachInterrupt()</p>\r\n', '<p>bit()</p>\r\n', '<p>delaymicroseconds()</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>no Tone()</p>\r\n', '4', 12, 16, '3'),
(3476, '<p>Which of the following statements about leadership is false?</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>When people operate as leaders their role is always clearly established and defined<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Leadership does not necessarily take place within a hierarchical structure of an organisation<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Not every leader is a manager<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>All the above</p>\r\n', '4', 20, 26, '1'),
(3477, '<p>Which of the following statements about leadership is false?</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>When people operate as leaders their role is always clearly established and defined<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Leadership does not necessarily take place within a hierarchical structure of an organisation<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Not every leader is a manager<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>All the above</p>\r\n', '4', 20, 26, '1'),
(3478, '<p>Approaches to the study of leadership which emphasis the personality of the leader are termed ______________.</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Contingency theories<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Inspirational theories<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Trait theories<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Group theories</p>\r\n', '4', 17, 26, '3'),
(3479, '<p>&nbsp;What does the term HDMI refers to?</p>\r\n', '<p>High&shy;Definition Multimedia Interface</p>\r\n', '<p>High&shy;Definition Multimedia Interaction</p>\r\n', '<p>High&shy;Definition Multimedia Interrupt</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 10, 16, '1'),
(3480, '<p>Hadoop is a framework that works with a variety of related tools. Common cohorts include:</p>\r\n', '<p>MapReduce, Hive and HBase<br />\r\n&nbsp;</p>\r\n', '<p>MapReduce, MySQL and Google Apps<br />\r\n&nbsp;</p>\r\n', '<p>MapReduce, Hummer and Iguana<br />\r\n&nbsp;</p>\r\n', '<p>MapReduce, Heron and Trumpet<br />\r\n&nbsp;</p>\r\n', '4', 20, 27, '1'),
(3481, '<p>Adair claims that the effectiveness of a leader is dependent upon meeting ________areas of need within the work group.</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Two<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Three<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Four<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 20, 26, '2'),
(3482, '<p>Point out the wrong statement :<br />\r\n&nbsp;</p>\r\n', '<p>Hardtop&rsquo;s processing capabilities are huge and its real advantage lies in the ability to process terabytes &amp; petabytes of data<br />\r\n&nbsp;</p>\r\n', '<p>Hadoop uses a programming model called &ldquo;MapReduce&rdquo;, all the programs should confirms to this model in order to work on Hadoop platform<br />\r\n&nbsp;</p>\r\n', '<p>The programming model, MapReduce, used by Hadoop is difficult to write and test<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '4', 20, 27, '3'),
(3483, '<p>In Adair&rsquo;s approach, needs such as training the group, setting standards and maintaining discipline, and appointing sub-leaders may be called _____________.</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Task functions<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Individual functions<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Work functions<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Team functions</p>\r\n', '4', 20, 26, '4'),
(3484, '<p>Which company&#39;s SoC is used by Raspberry Pi?</p>\r\n', '<p>Intel</p>\r\n', '<p>Broadcom</p>\r\n', '<p>AMD</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 10, 16, '2'),
(3485, '<p>The Ohio State Leadership Studies revealed two major dimensions of leadership behaviour: _________________ and initiating structure.</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Collaboration<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Communication<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Control<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Consideration</p>\r\n', '4', 20, 26, '4'),
(3486, '<p>What was Hadoop named after?<br />\r\n&nbsp;</p>\r\n', '<p>Creator Doug Cutting&rsquo;s favorite circus act<br />\r\n&nbsp;</p>\r\n', '<p>Cutting&rsquo;s high school rock band<br />\r\n&nbsp;</p>\r\n', '<p>The toy elephant of Cutting&rsquo;s son<br />\r\n&nbsp;</p>\r\n', '<p>A sound Cutting&rsquo;s laptop made during Hadoop&rsquo;s development</p>\r\n', '4', 20, 27, '3'),
(3487, '<p>How many types of display does Raspberry Pi supports</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>2</p>\r\n', '<p>4</p>\r\n', '<p>3</p>\r\n', '<p>5</p>\r\n', '4', 10, 16, '3'),
(3488, '<p>All of the following accurately describe Hadoop, EXCEPT:<br />\r\n&nbsp;</p>\r\n', '<p>Open source<br />\r\n&nbsp;</p>\r\n', '<p>Real-time<br />\r\n&nbsp;</p>\r\n', '<p>Java-based<br />\r\n&nbsp;</p>\r\n', '<p>Distributed computing approach</p>\r\n', '4', 20, 27, '2'),
(3489, '<p>Which type of instruction set is used by Raspberry Pi?</p>\r\n', '<p>CISC</p>\r\n', '<p>RISC<br />\r\n&nbsp;</p>\r\n', '<p>PISC</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 10, 16, '2'),
(3490, '<p>The terms &ldquo;employee-centred&rdquo; and &ldquo;production-centred&rdquo; to describe leader behaviour were used by ___________?</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Likert</p>\r\n', '<p>McGregor</p>\r\n', '<p>Fiedler</p>\r\n', '<p>Blake and McCanse</p>\r\n', '4', 20, 26, '1'),
(3491, '<p>__________ can best be described as a programming model used to develop Hadoop-based applications that can process massive amounts of data.<br />\r\n&nbsp;</p>\r\n', '<p>MapReduce<br />\r\n&nbsp;</p>\r\n', '<p>Mahout<br />\r\n&nbsp;</p>\r\n', '<p>Oozie<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned<br />\r\n&nbsp;</p>\r\n', '4', 20, 27, '1'),
(3492, '<p>What are the four main styles of leadership displayed by the manager which identified in Tannenbaum and Schmidt&#39;s continuum of possible leadership behaviour?</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Commands, sells, consults and resists<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Tells, helps, joins and leads<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>None of the above<br />\r\n&nbsp;&nbsp;<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Tells, sells, consults and joins</p>\r\n', '4', 20, 26, '4'),
(3493, '<p>On what belief are contingency theories of leadership based?</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>That there is a single style of leadership appropriate to all managers<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>That there is no single style of leadership appropriate to all situations<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>That there is a single style of leadership appropriate to all situations<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 20, 26, '2'),
(3494, '<p>Which instruction set architecture is used in Raspberry Pi</p>\r\n', '<p>x86</p>\r\n', '<p>ARM</p>\r\n', '<p>MIPS</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 12, 16, '2'),
(3495, '<p>According to Fiedler&rsquo;s LPC scale what will leaders with a low LPC score gain satisfaction from?</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Achieving objectives<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Developing team relationships &nbsp;</p>\r\n', '<p>Both of the above &nbsp;</p>\r\n', '<p>Neither of the above</p>\r\n', '4', 20, 26, '1'),
(3496, '<p>Which Linux command is used to write image to a flashed SD card</p>\r\n', '<p>su</p>\r\n', '<p>sudo</p>\r\n', '<p>dd<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>fdisk</p>\r\n', '4', 10, 16, '3'),
(3497, '<p>On which aspects of a leader&rsquo;s decision are Vroom and Yetton&rsquo;s contingency model of leadership based?</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Decision acceptance<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Decision quality<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Both of the above<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Neither of the above</p>\r\n', '4', 20, 26, '3'),
(3498, '<p>__________ has the world&rsquo;s largest Hadoop cluster.<br />\r\n&nbsp;</p>\r\n', '<p>Apple<br />\r\n&nbsp;</p>\r\n', '<p>Datamatics<br />\r\n&nbsp;</p>\r\n', '<p>Facebook<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 20, 27, '3'),
(3499, '<p>What is the maximum screen resolution output of Raspberry Pi</p>\r\n', '<p>1024x768</p>\r\n', '<p>800x600</p>\r\n', '<p>640x480</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>1920x1080</p>\r\n', '4', 10, 16, '4'),
(3500, '<p>One contingency model of leadership is the path-goal theory. This suggests that an individual&lsquo;s motivation is dependent on _____________________.</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>The necessary direction, guidance, training and support being provided<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Their effective performance<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Whether path-goal relationships are clarified<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Expectations that increased effort to achieve an improved level of performance will be successful</p>\r\n', '4', 20, 26, '4'),
(3501, '<p>Facebook Tackles Big Data With _______ based on Hadoop.<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;Project Prism&rsquo;</p>\r\n', '<p>&lsquo;Prism&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;Project Big&rsquo;<br />\r\n&nbsp;</p>\r\n', '<p>&lsquo;Project Data&rsquo;</p>\r\n', '4', 20, 27, '1'),
(3502, '<p>A thermistor is a:</p>\r\n', '<p>sensor</p>\r\n', '<p>ADC</p>\r\n', '<p>transducer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>micro controller</p>\r\n', '4', 12, 16, '3'),
(3503, '<p>The situation leadership theory of ___________ and ______________ is based on follower&rsquo;s readiness to perform.</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Tannenbaum and Schmidt<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Abbot and Costello<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Hersey and Blanchard<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Vroom and Yetton</p>\r\n', '4', 20, 26, '3'),
(3504, '<p>Transducers produce output voltage in the form of?</p>\r\n', '<p>an analog voltage in the form of current</p>\r\n', '<p>an analog voltage in the form of voltage</p>\r\n', '<p>an analog voltage in the form of pressure</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>All the above</p>\r\n', '4', 13, 16, '4'),
(3505, '<p>What is signal conditioning?</p>\r\n', '<p>to analyse any signal</p>\r\n', '<p>conversion or modification is referred to as conditioning</p>\r\n', '<p>conversion from analog to digital is signal conditioning</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>conversion from digital to analog is signal conditioning</p>\r\n', '4', 13, 16, '2'),
(3506, '<p>What is the difference between LM 34 and LM 35 sensors?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>one is a sensor and the other is a transducer</p>\r\n', '<p>one is a sensor and the other is a transducer</p>\r\n', '<p>one is of low precision and the other is of higher precision.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>one requires external calibration and the other doesn&rsquo;t require it</p>\r\n', '4', 14, 16, '2'),
(3507, '<p>________ is a platform for constructing data flows for extract, transform, and load (ETL) processing and analysis of large datasets.<br />\r\n&nbsp;</p>\r\n', '<p>Pig Latin<br />\r\n&nbsp;</p>\r\n', '<p>Oozie<br />\r\n&nbsp;</p>\r\n', '<p>Pig<br />\r\n&nbsp;</p>\r\n', '<p>Hive</p>\r\n', '5', 25, 27, '3'),
(3508, '<p>Extensive research in over 30 countries has shown that people want leaders who exemplify four qualities. Kouzes and Posner (2000) suggest these qualities are ________, ________, _________ and ___________.</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Honest, dynamic, ruthless, single minded<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Forward-looking, influential, competent, dynamic<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Inspiring, competent, influential, dynamic<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Honest, forward-looking, inspiring, competent</p>\r\n', '4', 20, 26, '4'),
(3509, '<p>LM35 has how many pins?</p>\r\n', '<p>2</p>\r\n', '<p>1</p>\r\n', '<p>3</p>\r\n', '<p>4</p>\r\n', '4', 10, 16, '3'),
(3510, '<p>Referent power is based on the subordinate&rsquo;s perception that the leader has a right to exercise influence because of the leader&rsquo;s _______________.</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n', '<p>Ability to punish or reward<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Expertise and knowledge<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Personal charisma<br />\r\n&nbsp;&nbsp;</p>\r\n', '<p>Role or position within the organisation</p>\r\n', '4', 20, 26, '3'),
(3511, '<p>An individual who is able to exert leadership and to manage an operation is called a:</p>\r\n', '<p>leader.<br />\r\n&nbsp;</p>\r\n', '<p>leader-manager.<br />\r\n&nbsp;</p>\r\n', '<p>manager.<br />\r\n&nbsp;</p>\r\n', '<p>first line supervisor.</p>\r\n', '4', 20, 26, '2'),
(3512, '<p>The capacity to influence people and accomplish desired objectives is called:</p>\r\n', '<p>power.<br />\r\n&nbsp;</p>\r\n', '<p>leadership.<br />\r\n&nbsp;</p>\r\n', '<p>authority.<br />\r\n&nbsp;</p>\r\n', '<p>status.</p>\r\n', '4', 20, 26, '2'),
(3513, '<p>Point out the correct statement :<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Hive is not a relational database, but a query engine that supports the parts of SQL specific to querying data<br />\r\n&nbsp;</p>\r\n', '<p>Hive is a relational database with SQL support<br />\r\n&nbsp;</p>\r\n', '<p>Pig is a relational database with SQL support<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '5', 25, 27, '1'),
(3514, '<p>what is iot built on?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>cloud computing<br />\r\n&nbsp;</p>\r\n', '<p>Networks of data - gathering<br />\r\n&nbsp;</p>\r\n', '<p>Both the above<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 9, 16, '3'),
(3515, '<p>The ability to influence people through granting or withholding benefits that are of interest to them is called.</p>\r\n', '<p>reward power.<br />\r\n&nbsp;</p>\r\n', '<p>coercive power.<br />\r\n&nbsp;</p>\r\n', '<p>export power.<br />\r\n&nbsp;</p>\r\n', '<p>reference power.</p>\r\n', '4', 20, 26, '1'),
(3516, '<p>Coercive power may occur in which of the following organizations?</p>\r\n', '<p>service firm.<br />\r\n&nbsp;</p>\r\n', '<p>non-profit organization.<br />\r\n&nbsp;</p>\r\n', '<p>manufacturing firm.<br />\r\n&nbsp;</p>\r\n', '<p>all of the above.</p>\r\n', '4', 20, 26, '4'),
(3517, '<p>Iot is inextricably linked to?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Big data<br />\r\n&nbsp;</p>\r\n', '<p>Data mining<br />\r\n&nbsp;</p>\r\n', '<p>Artificial intelligence<br />\r\n&nbsp;</p>\r\n', '<p>All of the above</p>\r\n', '5', 9, 16, '1'),
(3518, '<p>_________ hides the limitations of Java behind a powerful and concise Clojure API for Cascading.<br />\r\n&nbsp;</p>\r\n', '<p>Scalding<br />\r\n&nbsp;</p>\r\n', '<p>HCatalog<br />\r\n&nbsp;</p>\r\n', '<p>Cascalog<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '5', 25, 27, '3'),
(3519, '<p>Mr. X is the only person in the company with expertise in the E-Commerce field. This source of power is called:</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>reward power.<br />\r\n&nbsp;</p>\r\n', '<p>knowledge power.<br />\r\n&nbsp;</p>\r\n', '<p>reference power.<br />\r\n&nbsp;</p>\r\n', '<p>none of the above.</p>\r\n', '4', 20, 26, '2'),
(3520, '<p>Hive also support custom extensions written in :<br />\r\n&nbsp;</p>\r\n', '<p>C#<br />\r\n&nbsp;</p>\r\n', '<p>Java<br />\r\n&nbsp;</p>\r\n', '<p>C<br />\r\n&nbsp;</p>\r\n', '<p>C++</p>\r\n', '5', 25, 27, '2'),
(3521, '<p>In which of the following organizations is reference power more likely to be evident?</p>\r\n', '<p>telecommunication business.<br />\r\n&nbsp;</p>\r\n', '<p>religious organization.<br />\r\n&nbsp;</p>\r\n', '<p>service organization.<br />\r\n&nbsp;</p>\r\n', '<p>baseball team</p>\r\n', '5', 20, 26, '2'),
(3522, '<p>Point out the wrong statement :<br />\r\n&nbsp;</p>\r\n', '<p>A MapReduce job usually splits the input data-set into independent chunks which are processed by the map tasks in a completely parallel manner</p>\r\n', '<p>The MapReduce framework operates exclusively on pairs<br />\r\n&nbsp;</p>\r\n', '<p>Applications typically implement the Mapper and Reducer interfaces to provide the map and reduce methods<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 25, 27, '4'),
(3523, '<p>Who said this? &quot;The internet will disappear.<br />\r\nThere will be so many IP addresses, so many devices, sensors&hellip; that it will be part of your presence all the time.<br />\r\nImagine you walk into a room and you are interacting with the things going on in there.&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Steve Jobs<br />\r\n&nbsp;</p>\r\n', '<p>Eric Schmidt<br />\r\n&nbsp;</p>\r\n', '<p>Bill gates<br />\r\n&nbsp;</p>\r\n', '<p>Mark Zuckerberg</p>\r\n', '5', 15, 16, '2'),
(3524, '<p>A leadership theory that focuses on the traits of those who have assumed powers and who are considered to be effective is called</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>trait theories.<br />\r\n&nbsp;</p>\r\n', '<p>behavorial theories.<br />\r\n&nbsp;</p>\r\n', '<p>contingency theories.<br />\r\n&nbsp;</p>\r\n', '<p>structural theories.</p>\r\n', '5', 20, 26, '1'),
(3525, '<p>Michael is a type of manager who is concerned primarily with accomplishing goals and objectives and concentrates on the task itself. His behavioral style is called:</p>\r\n', '<p>authoritarian.<br />\r\n&nbsp;</p>\r\n', '<p>democratic.<br />\r\n&nbsp;</p>\r\n', '<p>task oriented.<br />\r\n&nbsp;</p>\r\n', '<p>people oriented.</p>\r\n', '5', 20, 26, '3'),
(3526, '<p>The recognition that task-oriented and people-oriented behavioral styles are important and that people have different orientations that they bring to the management process is the result of the research of:</p>\r\n', '<p>Hersey &amp; Blanchard.<br />\r\n&nbsp;</p>\r\n', '<p>Fieldler.<br />\r\n&nbsp;</p>\r\n', '<p>Blake &amp; McCanne<br />\r\n&nbsp;</p>\r\n', '<p>none of the above.</p>\r\n', '5', 20, 26, '3'),
(3527, '<p>&nbsp;Which of these can an Arduino NOT be used for?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>controlling servos<br />\r\n&nbsp;</p>\r\n', '<p>displaying analog inputs<br />\r\n&nbsp;</p>\r\n', '<p>building robots<br />\r\n&nbsp;</p>\r\n', '<p>an Arduino can be used to do all of these</p>\r\n', '5', 10, 16, '4'),
(3528, '<p>An approach to leadership in which the leader&#39;s behavior is first categorized on a scale from task orientation to people orientation, and efforts are made to find a work situation to which that particular style is best suited is called:</p>\r\n', '<p>Hersey-Blanchard theory.<br />\r\n&nbsp;</p>\r\n', '<p>Vroom-Jago model.<br />\r\n&nbsp;</p>\r\n', '<p>Fielder&#39;s LPC theory.<br />\r\n&nbsp;</p>\r\n', '<p>path goal theory.</p>\r\n', '5', 20, 26, '3'),
(3529, '<p>Which of these is a digital input device?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>pressure sensor<br />\r\n&nbsp;</p>\r\n', '<p>servo<br />\r\n&nbsp;</p>\r\n', '<p>button<br />\r\n&nbsp;</p>\r\n', '<p>potentiometer</p>\r\n', '5', 8, 16, '3'),
(3530, '<p>In the Hersey-Blanchard situational leadership model, the authors suggest that the right mix of leadership style is best found by focusing on which characteristic?</p>\r\n', '<p>intelligence.<br />\r\n&nbsp;</p>\r\n', '<p>motivation.<br />\r\n&nbsp;</p>\r\n', '<p>confidence.<br />\r\n&nbsp;</p>\r\n', '<p>maturity.</p>\r\n', '5', 20, 26, '4'),
(3531, '<p>The Arduino IDE is derived from</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Wiring and Python<br />\r\n&nbsp;</p>\r\n', '<p>Wiring and Processing<br />\r\n&nbsp;</p>\r\n', '<p>Wirer and Python<br />\r\n&nbsp;</p>\r\n', '<p>Wirer and Processing</p>\r\n', '5', 10, 16, '2'),
(3532, '<p>A leadership theory that postulates that an effective leader is one who develops a variety of leadership styles, and in each situation applies the style that best fits the circumstance.</p>\r\n', '<p>Vroom-Jago model.<br />\r\n&nbsp;</p>\r\n', '<p>path goal theory.<br />\r\n&nbsp;</p>\r\n', '<p>LPC theory.<br />\r\n&nbsp;</p>\r\n', '<p>none of the above.</p>\r\n', '5', 20, 26, '1'),
(3533, '<p>&nbsp;Which of the following is not a valid datatype in Arduino?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>void<br />\r\n&nbsp;</p>\r\n', '<p>word<br />\r\n&nbsp;</p>\r\n', '<p>string<br />\r\n&nbsp;</p>\r\n', '<p>short</p>\r\n', '5', 8, 16, '4'),
(3534, '<p>According to path goal theory, which of the following is not a leadership behavior?</p>\r\n', '<p>directive behavior.<br />\r\n&nbsp;</p>\r\n', '<p>supportive behavior.<br />\r\n&nbsp;</p>\r\n', '<p>participative behavior.<br />\r\n&nbsp;</p>\r\n', '<p>none of the above.</p>\r\n', '5', 20, 26, '4'),
(3535, '<p>Which of the following is not a pre-defined function in Arduino?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>detachInterrupt()<br />\r\n&nbsp;</p>\r\n', '<p>bit()<br />\r\n&nbsp;</p>\r\n', '<p>delaymicroseconds()<br />\r\n&nbsp;</p>\r\n', '<p>noTone()</p>\r\n', '5', 10, 16, '3'),
(3536, '<p>According to the text, Lee Iococca of Chrysler and Pat Farrah of Home Depot exhibited what type of leadership?</p>\r\n', '<p>transactional.<br />\r\n&nbsp;</p>\r\n', '<p>transformational.<br />\r\n&nbsp;</p>\r\n', '<p>autocratic.<br />\r\n&nbsp;</p>\r\n', '<p>contingency.</p>\r\n', '5', 20, 26, '2'),
(3537, '<p>Point out the wrong statement :<br />\r\n&nbsp;</p>\r\n', '<p>Elastic MapReduce (EMR) is Facebook&rsquo;s packaged Hadoop offering</p>\r\n', '<p>Amazon Web Service Elastic MapReduce (EMR) is Amazon&rsquo;s packaged Hadoop offering<br />\r\n&nbsp;</p>\r\n', '<p>Scalding is a Scala API on top of Cascading that removes most Java boilerplate<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '5', 25, 27, '1'),
(3538, '<p>An Arduino&rsquo;s microcontroller is pre-programmed with a _______ that simplifies uploading of programs to the on-chip flash memory, compared with other devices that typically need an external chip programmer</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>personal computer<br />\r\n&nbsp;</p>\r\n', '<p>bootloader<br />\r\n&nbsp;</p>\r\n', '<p>computer<br />\r\n&nbsp;</p>\r\n', '<p>operating system</p>\r\n', '5', 15, 16, '2'),
(3539, '<p>Which of the following are self-management strategies?</p>\r\n', '<p>self-set goals.</p>\r\n', '<p>self observation.</p>\r\n', '<p>self rewards.</p>\r\n', '<p>all of the above.</p>\r\n', '5', 20, 26, '4'),
(3540, '<p>________ is the most popular high-level Java API in Hadoop Ecosystem<br />\r\n&nbsp;</p>\r\n', '<p>Scalding</p>\r\n', '<p>HCatalog<br />\r\n&nbsp;</p>\r\n', '<p>Cascalog<br />\r\n&nbsp;</p>\r\n', '<p>Cascading</p>\r\n', '5', 25, 27, '4'),
(3541, '<p>The central goal of the informative speaker is to</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>make sure the audience likes the speaker<br />\r\n&nbsp;</p>\r\n', '<p>make sure the audience likes the topic<br />\r\n&nbsp;</p>\r\n', '<p>make sure the audience retains the information<br />\r\n&nbsp;</p>\r\n', '<p>make sure the audience does what the speaker asks them to do&nbsp;</p>\r\n', '5', 20, 26, '3'),
(3542, '<p>What is this line of code:<br />\r\ndigitalWrite(13, HIGH);&nbsp;&nbsp; // turn the LED on (HIGH is the voltage level)</p>\r\n', '<p>A statement<br />\r\n&nbsp;</p>\r\n', '<p>A single line comment<br />\r\n&nbsp;</p>\r\n', '<p>Part of a function definition<br />\r\n&nbsp;</p>\r\n', '<p>both B and C</p>\r\n', '5', 15, 16, '4'),
(3543, '<p>___________ is general-purpose computing model and runtime system for distributed data analytics.<br />\r\n&nbsp;</p>\r\n', '<p>Mapreduce<br />\r\n&nbsp;</p>\r\n', '<p>Drill<br />\r\n&nbsp;</p>\r\n', '<p>Oozie<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 25, 27, '1'),
(3544, '<p>The topical pattern of organization</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>is used more often than any other method of speech organization.<br />\r\n&nbsp;</p>\r\n', '<p>makes it easy for a speaker to decide in what order to present their information<br />\r\n&nbsp;</p>\r\n', '<p>is a less strategic method of organizing a speech than the chronological pattern.<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>A and C only</p>\r\n', '5', 20, 26, '4'),
(3545, '<p>The Pig Latin scripting language is not only a higher-level data flow language but also has operators similar to :<br />\r\n&nbsp;</p>\r\n', '<p>SQL<br />\r\n&nbsp;</p>\r\n', '<p>JSON<br />\r\n&nbsp;</p>\r\n', '<p>XML<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '5', 25, 27, '1'),
(3546, '<p>How many types of display does Raspberry Pi supports</p>\r\n', '<p>3</p>\r\n', '<p>2</p>\r\n', '<p>5</p>\r\n', '<p>4</p>\r\n', '5', 8, 16, '1'),
(3547, '<p>One of the best ways for a speaker to communicate especially exciting information like explaining how ISU came back to beat Iowa is</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>to yell at the audience<br />\r\n&nbsp;</p>\r\n', '<p>to increase the rate of speech<br />\r\n&nbsp;</p>\r\n', '<p>to stand very still<br />\r\n&nbsp;</p>\r\n', '<p>to look at your notes</p>\r\n', '5', 20, 26, '2'),
(3548, '<p>&nbsp;_______ jobs are optimized for scalability but not latency.<br />\r\n&nbsp;</p>\r\n', '<p>Mapreduce<br />\r\n&nbsp;</p>\r\n', '<p>Drill<br />\r\n&nbsp;</p>\r\n', '<p>Oozie<br />\r\n&nbsp;</p>\r\n', '<p>Hive</p>\r\n', '5', 25, 27, '4'),
(3549, '<p>&quot;The history of the buildings on ISU&#39;s campus&quot; is a poorly worded specific purpose statement because</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>it is not appropriate for this audience<br />\r\n&nbsp;</p>\r\n', '<p>it is too technical<br />\r\n&nbsp;</p>\r\n', '<p>it has more than one idea<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>it is written as a fragment rather than a full infinitive phrase.&nbsp;</p>\r\n', '5', 20, 26, '4'),
(3550, '<p>ln each of the question-sets below are two/three statements followed by two conclusions numbered I and II.<br />\r\nYou have to take the given statements to be true even if they seem to be at variance with commonly known facts and then decide which of the given<br />\r\nconclusions logically follows from the given statements, disregarding commonly known facts.<br />\r\nStatements:&nbsp;&nbsp;<br />\r\nAll stars are bottles.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Some bottles are papers.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No paper is a calendar.<br />\r\nConclusions:&nbsp;&nbsp;<br />\r\nI. All stars being papers is a possibility:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; II. No calendar is a bottle.</p>\r\n', '<p>If only conclusion I follows.</p>\r\n', '<p>If only conclusion Il follows.</p>\r\n', '<p>If either conclusion I or conclusion II follows.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If neither conclusion I nor conclusion II follows.</p>\r\n', '6', 75, 26, '1'),
(3551, '<p>______ is a framework for performing remote procedure calls and data serialization.<br />\r\n&nbsp;</p>\r\n', '<p>Drill<br />\r\n&nbsp;</p>\r\n', '<p>BigTop<br />\r\n&nbsp;</p>\r\n', '<p>Avro</p>\r\n', '<p>Chukwa</p>\r\n', '5', 25, 27, '3'),
(3552, '<p>ln each of the question-sets below are two/three statements followed by two conclusions numbered I and II.<br />\r\nYou have to take the given statements to be true even if they seem to be at variance with commonly known facts and then decide which of the given conclusions<br />\r\nlogically follows from the given statements, disregarding commonly known facts.&nbsp;<br />\r\nStatements: All stars are bottles.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Some bottles are papers.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No paper is a calendar.<br />\r\nConclusions:&nbsp; I. All calendars being stars is a possibility.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; II. At least some bottles are stars.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If only conclusion I follows.<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>If either conclusion I or conclusion II follows.<br />\r\n&nbsp;</p>\r\n', '<p>If neither conclusion I nor conclusion II follows.<br />\r\n&nbsp;</p>\r\n', '<p>If both conclusion I and conclusion II follow.</p>\r\n', '6', 80, 26, '4'),
(3553, '<p>A ________ node acts as the Slave and is responsible for executing a Task assigned to it by the JobTracker.<br />\r\n&nbsp;</p>\r\n', '<p>MapReduce<br />\r\n&nbsp;</p>\r\n', '<p>Mapper<br />\r\n&nbsp;</p>\r\n', '<p>TaskTracker<br />\r\n&nbsp;</p>\r\n', '<p>JobTracker</p>\r\n', '5', 25, 27, '3'),
(3554, '<p>ln each of the question-sets below are two/three statements followed by two conclusions numbered I and II.<br />\r\nYou have to take the given statements to be true even if they seem to be at variance with commonly known facts and then decide which of the given conclusions<br />\r\nlogically follows from the given statements, disregarding commonly known facts.<br />\r\nStatements: All stars are bottles.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Some bottles are papers.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No paper is a calendar.<br />\r\nConclusions: I. At least some calendars are bottles.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; II. No calendar is a star.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If only conclusion I follows.<br />\r\n&nbsp;</p>\r\n', '<p>If only conclusion Il follows.<br />\r\n&nbsp;</p>\r\n', '<p>If either conclusion I or conclusion II follows.<br />\r\n&nbsp;</p>\r\n', '<p>If neither conclusion I nor conclusion II follows.</p>\r\n', '6', 80, 26, '4'),
(3555, '<p>Although the Hadoop framework is implemented in Java , MapReduce applications need not be written in :<br />\r\n&nbsp;</p>\r\n', '<p>Java</p>\r\n', '<p>C<br />\r\n&nbsp;</p>\r\n', '<p>C#<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 21, 27, '1'),
(3556, '<p>ln each of the question-sets below are two/three statements followed by two conclusions numbered I and II.<br />\r\nYou have to take the given statements to be true even if they seem to be at variance with commonly known facts and then decide which of the given conclusions<br />\r\nlogically follows from the given statements, disregarding commonly known facts.<br />\r\nStatements:&nbsp; Some pencils are blankets.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; All blankets are erasers.<br />\r\nConclusions:&nbsp;&nbsp; I. At least some pencils are erasers.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; II. All erasers being pencils is a possibility.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If only conclusion I follows.<br />\r\n&nbsp;</p>\r\n', '<p>If only conclusion Il follows.<br />\r\n&nbsp;</p>\r\n', '<p>If either conclusion I or conclusion II follows.<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>If both conclusion I and conclusion II follow.</p>\r\n', '6', 80, 26, '4'),
(3557, '<p>Which instruction set architecture is used in Raspberry Pi</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>x86<br />\r\n&nbsp;</p>\r\n', '<p>ARM<br />\r\n&nbsp;</p>\r\n', '<p>MIPS<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 8, 16, '2'),
(3558, '<p>ln each of the question-sets below are two/three statements followed by two conclusions numbered I and II.<br />\r\nYou have to take the given statements to be true even if they seem to be at variance with commonly known facts and then decide which of the given conclusions<br />\r\nlogically follows from the given statements, disregarding commonly known facts.&nbsp;<br />\r\nStatements: Some pencils are blankets.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; All blankets are erasers.<br />\r\nConclusions:&nbsp; I No eraser is a pencil.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; II. All blankets being pencils is a possibility.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If only conclusion I follows.<br />\r\n&nbsp;</p>\r\n', '<p>If only conclusion Il follows.<br />\r\n&nbsp;</p>\r\n', '<p>If either conclusion I or conclusion II follows.<br />\r\n&nbsp;</p>\r\n', '<p>If neither conclusion I nor conclusion II follows.&nbsp;</p>\r\n', '6', 80, 26, '2'),
(3559, '<p>________ is a utility which allows users to create and run jobs with any executables as the mapper and/or the reducer.<br />\r\n&nbsp;</p>\r\n', '<p>Hadoop Strdata</p>\r\n', '<p>Hadoop Streaming<br />\r\n&nbsp;</p>\r\n', '<p>Hadoop Stream<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned&nbsp;</p>\r\n', '6', 21, 27, '2'),
(3560, '<p>What is the maximum screen resolution output of Raspberry Pi</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>800x600<br />\r\n&nbsp;</p>\r\n', '<p>1920x1080<br />\r\n&nbsp;</p>\r\n', '<p>640x480<br />\r\n&nbsp;</p>\r\n', '<p>1024x768</p>\r\n', '5', 10, 16, '2'),
(3561, '<p>Each of the following questions below consists of a question and two statements numbered I and II given below it.<br />\r\nYou have to decide whether the data provided in the statements are sufficient to answer the question. Read both the statements and give answer<br />\r\nWho amongst P, Q, R, S and T is the tallest? I. P is taller than Q. T is not the tallest. II. R is taller than P, S is not the tallest.</p>\r\n', '<p>If the data in statement I alone are sufficient to answer the question, while the data in statement II alone are not sufficient in answer the question.</p>\r\n', '<p>If the data in statement II alone are sufficient to answer the question, while the data in statement I alone are not sufficient to answer the question.</p>\r\n', '<p>If the data in either in statement I alone or in statement II alone are sufficient to answer the question.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If the data in both the statements I and Il are together necessary to answer the question.</p>\r\n', '6', 80, 26, '4');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(3562, '<p>__________ maps input key/value pairs to a set of intermediate key/value pairs.<br />\r\n&nbsp;</p>\r\n', '<p>Mapper<br />\r\n&nbsp;</p>\r\n', '<p>Reducer<br />\r\n&nbsp;</p>\r\n', '<p>Both Mapper and Reducer<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 21, 27, '1'),
(3563, '<p>Which Linux command is used to write image to a flashed SD card</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>dd<br />\r\n&nbsp;</p>\r\n', '<p>fdisk<br />\r\n&nbsp;</p>\r\n', '<p>su<br />\r\n&nbsp;</p>\r\n', '<p>sudo</p>\r\n', '5', 10, 16, '1'),
(3564, '<p>The number of maps is usually driven by the total size of :<br />\r\n&nbsp;</p>\r\n', '<p>inputs<br />\r\n&nbsp;</p>\r\n', '<p>outputs</p>\r\n', '<p>tasks<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 21, 27, '1'),
(3565, '<p>Each of the following questions below consists of a question and two statements numbered I and II given below it.<br />\r\nYou have to decide whether the data provided in the statements are sufficient to answer the question.<br />\r\nRead both the statements and give answer In which direction is point E, with reference to point S? I. Point D is to the east of point E.<br />\r\nPoint E is to the south of point F. II. Point F is to the north-west to point S. Point 0 is to the north of point S. 8. In which month of the year did Rahul<br />\r\ngo abroad for a vacation?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If the data in statement I alone are sufficient to answer the question, while the data in statement II alone are not sufficient in answer the question.<br />\r\n&nbsp;</p>\r\n', '<p>If the data in statement II alone are sufficient to answer the question, while the data in statement I alone are not sufficient to answer the question.<br />\r\n&nbsp;</p>\r\n', '<p>If the data in either in statement I alone or in statement II alone are sufficient to answer the question.<br />\r\n&nbsp;</p>\r\n', '<p>If the data in both the statements I and II together are not sufficient to answer the question.&nbsp;</p>\r\n', '6', 100, 26, '1'),
(3566, '<p>Each of the following questions below consists of a question and two statements numbered I and II given below it.<br />\r\nYou have to decide whether the data provided in the statements are sufficient to answer the question. Read both the statements and give answer In which month of<br />\r\nthe year did Rahul go abroad for a vacation?<br />\r\nI. Rahul correctly remembers that he went for a vacation in the first half of the year.<br />\r\nII. Rahul&#39;s son correctly remembers that they went for a vacation after 31st March but before 1st May.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If the data in statement I alone are sufficient to answer the question, while the data in statement II alone are not sufficient in answer the question.<br />\r\n&nbsp;</p>\r\n', '<p>If the data in statement II alone are sufficient to answer the question, while the data in statement I alone are not sufficient to answer the question.<br />\r\n&nbsp;</p>\r\n', '<p>If the data in either in statement I alone or in statement II alone are sufficient to answer the question.<br />\r\n&nbsp;</p>\r\n', '<p>If the data in both the statements I and II together are not sufficient to answer the question.&nbsp;</p>\r\n', '6', 100, 26, '2'),
(3567, '<p>_________ is the default Partitioner for partitioning key space.<br />\r\n&nbsp;</p>\r\n', '<p>HashPar<br />\r\n&nbsp;</p>\r\n', '<p>Partitioner<br />\r\n&nbsp;</p>\r\n', '<p>HashPartitioner<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 21, 27, '3'),
(3568, '<p>Each of the following questions below consists of a question and two statements numbered I and II given below it.<br />\r\nYou have to decide whether the data provided in the statements are sufficient to answer the question.<br />\r\nRead both the statements and give answer On which day of the same week is Ramesh&#39;s exam scheduled (Monday being the first day of the week)?<br />\r\nI. Ramesh correctly remembers that his exam is scheduled on a day after Tuesday, but before; Thursday of the same week.<br />\r\nII. Ramesh&#39;s father correctly remembers that Ramesh&#39;s exam is scheduled on the third day of the week.</p>\r\n', '<p>If the data in statement I alone are sufficient to answer the question, while the data in statement II alone are not sufficient in answer the question.</p>\r\n', '<p>If the data in statement II alone are sufficient to answer the question, while the data in statement I alone are not sufficient to answer the question.</p>\r\n', '<p>If the data in either in statement I alone or in statement II alone are sufficient to answer the question.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If the data in both the statements I and II together are not sufficient to answer the question.</p>\r\n', '6', 100, 26, '3'),
(3569, '<p>Which of the following is correct for tactile sensors?</p>\r\n', '<p>Touch sensitive</p>\r\n', '<p>Pressure sensitive</p>\r\n', '<p>Input voltage sensitive</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Humidity sensitive</p>\r\n', '5', 10, 16, '1'),
(3570, '<p>Each of the following questions below consists of a question and two statements numbered I and II given below it.<br />\r\nYou have to decide whether the data provided in the statements are sufficient to answer the question.<br />\r\nRead both the statements and give answer How many marks has Suman scored in the test? (Maximum marks 20)<br />\r\nI. Suman scored two-digit marks. Her marks were not in decimals. II. Suman scored more than 9 marks in the test.</p>\r\n', '<p>If the data in statement I alone are sufficient to answer the question, while the data in statement II alone are not sufficient in answer the question.</p>\r\n', '<p>If the data in statement II alone are sufficient to answer the question, while the data in statement I alone are not sufficient to answer the question.</p>\r\n', '<p>If the data in either in statement I alone or in statement II alone are sufficient to answer the question.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>If the data in both the statements I and II together are not sufficient to answer the question.</p>\r\n', '6', 100, 26, '4'),
(3571, '<p>Mapper implementations are passed the JobConf for the job via the ________ method<br />\r\n&nbsp;</p>\r\n', '<p>JobConfigure.configure<br />\r\n&nbsp;</p>\r\n', '<p>JobConfigurable.configure<br />\r\n&nbsp;</p>\r\n', '<p>JobConfigurable.configureable<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 30, 27, '2'),
(3572, '<p>Change in output of sensor with change in input is ____________</p>\r\n', '<p>Threashold<br />\r\n&nbsp;</p>\r\n', '<p>Slew rate<br />\r\n&nbsp;</p>\r\n', '<p>Sensitivity<br />\r\n&nbsp;</p>\r\n', '<p>None of the medention</p>\r\n', '5', 10, 16, '3'),
(3573, '<p>Study the information given below and answer the given questions: In a certain code &#39;facing problems with health&#39; is coded as &#39;mlp hIt ngi snk&#39;,<br />\r\n&#39;health problems on rise&#39; is coded as &#39;hlt sa rtv mlp&#39;, &#39;rise with every challenge&#39; is coded as &#39;snk rtv Ine riy&#39; and<br />\r\n&#39;facing challenge each day&#39; is coded as &#39;ngi riy nop hus&#39;.&nbsp; &quot;riy rtv roi&quot; could be a code for which of the following?</p>\r\n', '<p>Rise above challenge</p>\r\n', '<p>Rise health challenge</p>\r\n', '<p>Day rise challenge</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>With rise challenge</p>\r\n', '6', 80, 26, '1'),
(3574, '<p>Point out the correct statement :<br />\r\n&nbsp;</p>\r\n', '<p>Applications can use the Reporter to report progress<br />\r\n&nbsp;</p>\r\n', '<p>The Hadoop MapReduce framework spawns one map task for each InputSplit generated by the InputFormat for the job</p>\r\n', '<p>The intermediate, sorted outputs are always stored in a simple (key-len, key, value-len, value) format<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 30, 27, '4'),
(3575, '<p>&nbsp;Which of the following can be cause for non-zero output when zero input?</p>\r\n', '<p>Bias<br />\r\n&nbsp;</p>\r\n', '<p>Slew<br />\r\n&nbsp;</p>\r\n', '<p>Offset<br />\r\n&nbsp;</p>\r\n', '<p>Offset or bias</p>\r\n', '5', 10, 16, '4'),
(3576, '<p>Study the information given below and answer the given questions: In a certain code &#39;facing problems with health&#39; is coded as &#39;mlp hIt ngi snk&#39;,<br />\r\n&#39;health problems on rise&#39; is coded as &#39;hlt sa rtv mlp&#39;, &#39;rise with every challenge&#39; is coded as &#39;snk rtv Ine riy&#39; and<br />\r\n&#39;facing challenge each day&#39; is coded as &#39;ngi riy nop hus&#39;. Which of the following is the code for &#39;facing&#39;?</p>\r\n', '<p>Nop</p>\r\n', '<p>Rtv</p>\r\n', '<p>Ngi</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Snk</p>\r\n', '6', 80, 26, '3'),
(3577, '<p>Input to the _______ is the sorted output of the mappers.<br />\r\n&nbsp;</p>\r\n', '<p>Reducer<br />\r\n&nbsp;</p>\r\n', '<p>Mapper<br />\r\n&nbsp;</p>\r\n', '<p>Shuffle</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 30, 27, '1'),
(3578, '<p>Study the information given below and answer the given questions: In a certain code &#39;facing problems with health&#39; is coded as &#39;mlp hIt ngi snk&#39;,<br />\r\n&#39;health problems on rise&#39; is coded as &#39;hlt sa rtv mlp&#39;, &#39;rise with every challenge&#39; is coded as &#39;snk rtv Ine riy&#39; and<br />\r\n&#39;facing challenge each day&#39; is coded as &#39;ngi riy nop hus&#39;. &quot;riy snk mlp&quot; could be a code for which of the following?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Problem every day<br />\r\n&nbsp;</p>\r\n', '<p>Challenge with health<br />\r\n&nbsp;</p>\r\n', '<p>With health day &#39;<br />\r\n&nbsp;</p>\r\n', '<p>Every challenge facing&nbsp;</p>\r\n', '6', 80, 26, '2'),
(3579, '<p>Study the information given below and answer the given questions: In a certain code &#39;facing problems with health&#39; is coded as &#39;mlp hIt ngi snk&#39;,<br />\r\n&#39;health problems on rise&#39; is coded as &#39;hlt sa rtv mlp&#39;, &#39;rise with every challenge&#39; is coded as &#39;snk rtv Ine riy&#39; and<br />\r\n&#39;facing challenge each day&#39; is coded as &#39;ngi riy nop hus&#39;. Which of the following is the code for &#39;day&#39;?</p>\r\n', '<p>Riy</p>\r\n', '<p>Nop</p>\r\n', '<p>Ngi</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>cannot be determined</p>\r\n', '6', 80, 26, '4'),
(3580, '<p>The right number of reduces seems to be :<br />\r\n&nbsp;</p>\r\n', '<p>0.90</p>\r\n', '<p>0.80<br />\r\n&nbsp;</p>\r\n', '<p>0.36<br />\r\n&nbsp;</p>\r\n', '<p>0.95</p>\r\n', '7', 30, 27, '4'),
(3581, '<p>Sensitivity of a sensor can be depicted by _______________</p>\r\n', '<p>Niquist plot<br />\r\n&nbsp;</p>\r\n', '<p>Pole- zero plot<br />\r\n&nbsp;</p>\r\n', '<p>Bode plot<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 12, 16, '3'),
(3582, '<p>Study the information given below and answer the given questions. Eight friends A, B, C, D, E, F, G and H are sitting in a circle, but not necessarily in<br />\r\nthe same order. Four of them are facing outside and four of them are-facing the centre.<br />\r\nE faces outside. Both the immediate neighbours of E face the centre. H sits second to the right of E. B sits third to the left of E.<br />\r\nD faces the centre. Both the immediate neighbours of D face outside.<br />\r\nG sits second to the left of A. B sits third to the right of H.<br />\r\nF is an immediate neighbour of D. C is an immediate neighbour of G.<br />\r\nD is not an immediate neighbour of B.</p>\r\n\r\n<p>Who amongst the following sits on the immediate right of H?</p>\r\n', '<p>A</p>\r\n', '<p>D</p>\r\n', '<p>C</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>G</p>\r\n', '6', 100, 26, '4'),
(3583, '<p>Study the information given below and answer the given questions. Eight friends A, B, C, D, E, F, G and H are sitting in a circle,<br />\r\nbut not necessarily in the same order. Four of them are facing outside and four of them are-facing the centre.<br />\r\nE faces outside. Both the immediate neighbours of E face the centre. H sits second to the right of E. B sits third to the left of E.<br />\r\nD faces the centre. Both the immediate neighbours of D face outside.<br />\r\nG sits second to the left of A. B sits third to the right of H.<br />\r\nF is an immediate neighbour of D. C is an immediate neighbour of G.<br />\r\nD is not an immediate neighbour of B.<br />\r\nWho amongst the following sits third to the right of A?</p>\r\n', '<p>D</p>\r\n', '<p>E</p>\r\n', '<p>F</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A</p>\r\n', '7', 100, 26, '3'),
(3584, '<p>Which of the following error is caused by reversal of measured property?</p>\r\n', '<p>Hysterisis<br />\r\n&nbsp;</p>\r\n', '<p>Noise<br />\r\n&nbsp;</p>\r\n', '<p>Digitization error<br />\r\n&nbsp;</p>\r\n', '<p>Quantization error</p>\r\n', '5', 12, 16, '1'),
(3585, '<p>Point out the wrong statement :</p>\r\n', '<p>Reducer has 2 primary phases<br />\r\n&nbsp;</p>\r\n', '<p>Increasing the number of reduces increases the framework overhead, but increases load balancing and lowers the cost of failures<br />\r\n&nbsp;</p>\r\n', '<p>It is legal to set the number of reduce-tasks to zero if no reduction is desired<br />\r\n&nbsp;</p>\r\n', '<p>The framework groups Reducer inputs by keys (since different mappers may have output the same key) in sort stage</p>\r\n', '7', 30, 27, '1'),
(3586, '<p>Study the information given below and answer the given questions. Eight friends A, B, C, D, E, F, G and H are sitting in a circle, but not<br />\r\nnecessarily in the same order. Four of them are facing outside and four of them are-facing the centre.<br />\r\nE faces outside. Both the immediate neighbours of E face the centre. H sits second to the right of E. B sits third to the left of E.<br />\r\nD faces the centre. Both the immediate neighbours of D face outside.<br />\r\nG sits second to the left of A. B sits third to the right of H.<br />\r\nF is an immediate neighbour of D. C is an immediate neighbour of G.<br />\r\nD is not an immediate neighbour of B.<br />\r\nFour of the following five are alike in a certain way, based, on the information given above and so form a group. Which is the one that does not belong to that group?</p>\r\n', '<p>HA</p>\r\n', '<p>FH</p>\r\n', '<p>GC</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>DA</p>\r\n', '7', 100, 26, '1'),
(3587, '<p>Study the information given below and answer the given questions. Eight friends A, B, C, D, E, F, G and H are sitting in a circle, but not<br />\r\nnecessarily in the same order. Four of them are facing outside and four of them are-facing the centre.<br />\r\nE faces outside. Both the immediate neighbours of E face the centre. H sits second to the right of E. B sits third to the left of E.<br />\r\nD faces the centre. Both the immediate neighbours of D face outside.<br />\r\nG sits second to the left of A. B sits third to the right of H.<br />\r\nF is an immediate neighbour of D. C is an immediate neighbour of G.<br />\r\nD is not an immediate neighbour of B.<br />\r\nIf all the people are made to sit in an alphabetical order, in clockwise direction, starting from A, the position of whom amongst the following<br />\r\nremains the same (excluding A)?</p>\r\n', '<p>E</p>\r\n', '<p>F</p>\r\n', '<p>C</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>G</p>\r\n', '7', 100, 26, '1'),
(3588, '<p>&nbsp;Smalest change which a sensor can detect is ____________</p>\r\n', '<p>Resolution<br />\r\n&nbsp;</p>\r\n', '<p>Accuracy<br />\r\n&nbsp;</p>\r\n', '<p>Precision<br />\r\n&nbsp;</p>\r\n', '<p>Scale</p>\r\n', '5', 12, 16, '1'),
(3589, '<p>The output of the _______ is not sorted in the Mapreduce framework for Hadoop.</p>\r\n', '<p>Mapper<br />\r\n&nbsp;</p>\r\n', '<p>Cascader<br />\r\n&nbsp;</p>\r\n', '<p>Scalding<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 30, 27, '4'),
(3590, '<p>Study the information given below and answer the given questions. Eight friends A, B, C, D, E, F, G and H are sitting in a circle, but not necessarily<br />\r\nin the same order. Four of them are facing outside and four of them are-facing the centre.<br />\r\nE faces outside. Both the immediate neighbours of E face the centre. H sits second to the right of E. B sits third to the left of E.<br />\r\nD faces the centre. Both the immediate neighbours of D face outside.<br />\r\nG sits second to the left of A. B sits third to the right of H.<br />\r\nF is an immediate neighbour of D. C is an immediate neighbour of G.<br />\r\nD is not an immediate neighbour of B.<br />\r\nHow many people are seated between A and C (counting clockwise from A)?</p>\r\n', '<p>Two</p>\r\n', '<p>Four</p>\r\n', '<p>None</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>One</p>\r\n', '6', 100, 26, '1'),
(3591, '<p>Study the information given below and answer the given questions. Eight friends A, B, C, D, E, F, G and H are sitting in a circle, but<br />\r\nnot necessarily in the same order. Four of them are facing outside and four of them are-facing the centre.<br />\r\nE faces outside. Both the immediate neighbours of E face the centre. H sits second to the right of E. B sits third to the left of E.<br />\r\nD faces the centre. Both the immediate neighbours of D face outside.<br />\r\nG sits second to the left of A. B sits third to the right of H.<br />\r\nF is an immediate neighbour of D. C is an immediate neighbour of G.<br />\r\nD is not an immediate neighbour of B.<br />\r\nWho amongst the following sits exactly between F and C(arid is also their neighbour)?</p>\r\n', '<p>E</p>\r\n', '<p>B</p>\r\n', '<p>G</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>A</p>\r\n', '7', 100, 26, '2'),
(3592, '<p>Which of the following phases occur simultaneously ?<br />\r\n&nbsp;</p>\r\n', '<p>Shuffle and Sort<br />\r\n&nbsp;</p>\r\n', '<p>Reduce and Sort<br />\r\n&nbsp;</p>\r\n', '<p>Shuffle and Map</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 30, 27, '1'),
(3593, '<p>&nbsp;Thermocouple generate output voltage according to ____________</p>\r\n', '<p>Circuit parameters<br />\r\n&nbsp;</p>\r\n', '<p>Humidity<br />\r\n&nbsp;</p>\r\n', '<p>Temperature<br />\r\n&nbsp;</p>\r\n', '<p>Voltage</p>\r\n', '5', 12, 16, '3'),
(3594, '<p>Study the information given below and answer the given questions. Nine people, A, B, C, D, E, F, G, Hand J stay in a building, but not<br />\r\nnecessarily in the same order. The building has nine floors and only one person stays on one floor. All of them own one car each, and each car<br />\r\nis of a different colour, i.e. blue, grey, white, black, yellow, green, red, orange and pink, but not necessarily in the same order.<br />\r\nThe ground floor is, numbered 1, the floor above it is numbered 2, and so &#39;on, and the topmost floor is numbered 9. H owns a black-coloured car and<br />\r\nstays on an even numbered floor. A stays on any even-numbered floor below the floor on which H stays. The one who owns an orange- coloured car stays on<br />\r\nthe fourth floor. E stays on the second floor and owns a white-coloured car. The one who owns a pink-coloured car stays on the third floor.&nbsp;</p>\r\n\r\n<p>A does not own a green-coloured car. There are two floors between the floors on which the people owning the red and the black-coloured cars stay.<br />\r\nC owns a grey-coloured car. There are three floors between the floors on which C and G stay. D stays on a floor immediately above J&#39;s floor.<br />\r\nThere IS one floor between the floors on which F and G stay. F does not own the pink- coloured car. The one who owns the blue car stays on the topmost floor.<br />\r\nF does not stay on the ground floor. Who amongst the following owns the green-coloured car?</p>\r\n', '<p>D</p>\r\n', '<p>J</p>\r\n', '<p>G</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>F</p>\r\n', '7', 100, 26, '4'),
(3595, '<p>Mapper and Reducer implementations can use the ________ to report progress or just indicate that they are alive.<br />\r\n&nbsp;</p>\r\n', '<p>Partitioner</p>\r\n', '<p>OutputCollector<br />\r\n&nbsp;</p>\r\n', '<p>Reporter<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 30, 27, '3'),
(3596, '<p>Study the information given below and answer the given questions.<br />\r\nNine people, A, B, C, 0, E, F, G, Hand J stay in a building, but not necessarily in the same order. The building has nine floors and only one person stays on one<br />\r\nfloor. All of them own one car each, and each car is of a different colour, i.e. blue, grey, white, black, yellow, green, red, orange and pink,<br />\r\nbut not necessarily in the same order. The ground floor is, numbered 1, the floor above it is numbered 2, and so &#39;on, and the topmost floor is numbered<br />\r\n9. H owns a black-coloured car and stays on an even numbered floor. A stays on any even-numbered floor below the floor on which H stays.<br />\r\nThe one who owns an orange- coloured car stays on the fourth floor. E stays on the second floor and owns a white-coloured car.<br />\r\nThe one who owns a pink-coloured car stays on the third floor. A does not own a green-coloured car. There are two floors between the floors on which the people<br />\r\nowning the red and the black-coloured cars stay. C owns a grey-coloured car. There are three floors between the floors on which C and G stay. D stays on a floor immediately above J&#39;s floor.<br />\r\nThere IS one floor between the floors on which F and G stay. F does not own the pink- coloured car. The one who owns the blue car stays on the topmost floor. F does not stay on the ground floor.<br />\r\nWho amongst the following stays on the topmost floor?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>F<br />\r\n&nbsp;</p>\r\n', '<p>G<br />\r\n&nbsp;</p>\r\n', '<p>D<br />\r\n&nbsp;</p>\r\n', '<p>None of these</p>\r\n', '7', 100, 26, '4'),
(3597, '<p>Which of the following is not an analog sensor?</p>\r\n', '<p>Potentiometer<br />\r\n&nbsp;</p>\r\n', '<p>Force-sensing resistors<br />\r\n&nbsp;</p>\r\n', '<p>Accelerometers<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '5', 13, 16, '4'),
(3598, '<p>__________ is a generalization of the facility provided by the MapReduce framework to collect data output by the Mapper or the Reducer<br />\r\n&nbsp;</p>\r\n', '<p>Partitioner<br />\r\n&nbsp;</p>\r\n', '<p>OutputCollector<br />\r\n&nbsp;</p>\r\n', '<p>Reporter</p>\r\n', '<p>All of the mentioned</p>\r\n', '7', 30, 27, '2'),
(3599, '<p>&nbsp;One of the most widely used forms of light sensor is the</p>\r\n', '<p>A photodiode is an example of a photovoltaic sensor<br />\r\n&nbsp;</p>\r\n', '<p>A photodiode can be used as either a photoconductive or a photovoltaic sensor<br />\r\n&nbsp;</p>\r\n', '<p>A photodiode is an example of a photoconductive sensor<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '5', 13, 16, '2'),
(3600, '<p>_________ is the primary interface for a user to describe a MapReduce job to the Hadoop framework for execution.<br />\r\n&nbsp;</p>\r\n', '<p>Map Parameters</p>\r\n', '<p>JobConf<br />\r\n&nbsp;</p>\r\n', '<p>MemoryConf<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '7', 30, 27, '2'),
(3601, '<p>A ________ serves as the master and there is only one NameNode per cluster.</p>\r\n', '<p>Data Node</p>\r\n', '<p>NameNode<br />\r\n&nbsp;</p>\r\n', '<p>Data block<br />\r\n&nbsp;</p>\r\n', '<p>Replication</p>\r\n', '8', 35, 27, '2'),
(3602, '<p>Study the information given below and answer the given questions. Nine people, A, B, C, D, E, F, G, H and J stay in a building, but not necessarily<br />\r\nin the same order. The building has nine floors and only one person stays on one floor. All of them own one car each, and each car is of a different colour,<br />\r\ni.e. blue, grey, white, black, yellow, green, red, orange and pink, but not necessarily in the same order. The ground floor is, numbered 1,<br />\r\nthe floor above it is numbered 2, and so &#39;on, and the topmost floor is numbered 9. H owns a black-coloured car and stays on an even numbered floor.<br />\r\nA stays on any even-numbered floor below the floor on which H stays. The one who owns an orange- coloured car stays on the fourth floor.<br />\r\nE stays on the second floor and owns a white-coloured car. The one who owns a pink-coloured car stays on the third floor.<br />\r\nA does not own a green-coloured car. There are two floors between the floors on which the people owning the red and the black-coloured cars stay.<br />\r\nC owns a grey-coloured car. There are three floors between the floors on which C and G stay. D stays on a floor immediately above J&#39;s floor.<br />\r\nThere IS one floor between the floors on which F and G stay. F does not own the pink- coloured car. The one who owns the blue car stays on the topmost floor.<br />\r\nF does not stay on the ground floor. A owns a car of which of the following colours?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Orange<br />\r\n&nbsp;</p>\r\n', '<p>Pink<br />\r\n&nbsp;</p>\r\n', '<p>Yellow<br />\r\n&nbsp;</p>\r\n', '<p>Blue&nbsp;</p>\r\n', '7', 100, 26, '3'),
(3603, '<p>Point out the correct statement :<br />\r\n&nbsp;</p>\r\n', '<p>DataNode is the slave/worker node and holds the user data in the form of Data Blocks<br />\r\n&nbsp;</p>\r\n', '<p>Each incoming file is broken into 32 MB by default<br />\r\n&nbsp;</p>\r\n', '<p>Data blocks are replicated across different nodes in the cluster to ensure a low degree of fault tolerance<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 35, 27, '1'),
(3604, '<p>Study the information given below and answer the given questions. Nine people, A, B, C, D, E, F, G, H and J stay in a building, but not necessarily in the same order.<br />\r\nThe building has nine floors and only one person stays on one floor. All of them own one car each, and each car is of a different colour,<br />\r\ni.e. blue, grey, white, black, yellow, green, red, orange and pink, but not necessarily in the same order. The ground floor is, numbered 1,<br />\r\nthe floor above it is numbered 2, and so &#39;on, and the topmost floor is numbered 9. H owns a black-coloured car and stays on an even numbered floor.<br />\r\nA stays on any even-numbered floor below the floor on which H stays. The one who owns an orange- coloured car stays on the fourth floor.<br />\r\nE stays on the second floor and owns a white-coloured car. The one who owns a pink-coloured car stays on the third floor.<br />\r\nA does not own a green-coloured car. There are two floors between the floors on which the people owning the red and the black-coloured cars stay.<br />\r\nC owns a grey-coloured car. There are three floors between the floors on which C and G stay. D stays on a floor immediately above J&#39;s floor.<br />\r\nThere IS one floor between the floors on which F and G stay. F does not own the pink- coloured car. The one who owns the blue car stays on the topmost floor.<br />\r\nF does not stay on the ground floor. Who stays on the floor which is exactly between the floor on which H stays and the floor on which A stays?</p>\r\n', '<p>B</p>\r\n', '<p>G</p>\r\n', '<p>C</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>F</p>\r\n', '7', 100, 26, '4'),
(3605, '<p>HDFS works in a __________ fashion.<br />\r\n&nbsp;</p>\r\n', '<p>master-worker<br />\r\n&nbsp;</p>\r\n', '<p>master-slave<br />\r\n&nbsp;</p>\r\n', '<p>worker/slave.<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '8', 35, 27, '1'),
(3606, '<p>Study the information given below and answer the given questions. Nine people, A, B, C, D, E, F, G, H and J stay in a building,<br />\r\nbut not necessarily in the same order. The building has nine floors and only one person stays on one floor. All of them own one car each,<br />\r\nand each car is of a different colour, i.e. blue, grey, white, black, yellow, green, red, orange and pink, but not necessarily in the same order.<br />\r\nThe ground floor is, numbered 1, the floor above it is numbered 2, and so &#39;on, and the topmost floor is numbered 9.<br />\r\nH owns a black-coloured car and stays on an even numbered floor. A stays on any even-numbered floor below the floor on which H stays.<br />\r\nThe one who owns an orange- coloured car stays on the fourth floor. E stays on the second floor and owns a white-coloured car.<br />\r\nThe one who owns a pink-coloured car stays on the third floor. A does not own a green-coloured car.<br />\r\nThere are two floors between the floors on which the people owning the red and the black-coloured cars stay. C owns a grey-coloured car.<br />\r\nThere are three floors between the floors on which C and G stay. D stays on a floor immediately above J&#39;s floor.<br />\r\nThere IS one floor between the floors on which F and G stay. F does not own the pink- coloured car. The one who owns the blue car stays on the topmost floor.<br />\r\nF does not stay on the ground floor. How many floors are there between the floor on which J stays and the floor on which C stays?</p>\r\n', '<p>One</p>\r\n', '<p>Two</p>\r\n', '<p>None</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Three</p>\r\n', '7', 100, 26, '1'),
(3607, '<p>________ NameNode is used when the Primary NameNode goes down.<br />\r\n&nbsp;</p>\r\n', '<p>Rack<br />\r\n&nbsp;</p>\r\n', '<p>Data<br />\r\n&nbsp;</p>\r\n', '<p>Secondary<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 35, 27, '3'),
(3608, '<p>Which scenario best represents a situation that has been decided by emotion alone?</p>\r\n', '<p>Sue hates the winter, so even though she can&#39;t afford it, she takes a vacation to the Bahamas.<br />\r\n&nbsp;</p>\r\n', '<p>The school shuts down after a bomb threat.<br />\r\n&nbsp;</p>\r\n', '<p>Third-quarter earnings for Marie&#39;s company were much higher than predicted.<br />\r\n&nbsp;</p>\r\n', '<p>Alexis needs a new mixer, so she watches the newspaper ads and buys one when it goes on sale.</p>\r\n', '8', 22, 26, '1'),
(3609, '<p>Point out the wrong statement :<br />\r\n&nbsp;</p>\r\n', '<p>Replication Factor can be configured at a cluster level (Default is set to 3) and also at a file level<br />\r\n&nbsp;</p>\r\n', '<p>Block Report from each DataNode contains a list of all the blocks that are stored on that DataNode<br />\r\n&nbsp;</p>\r\n', '<p>User data is stored on the local file system of DataNodes<br />\r\n&nbsp;</p>\r\n', '<p>DataNode is aware of the files to which the blocks stored on it belong to<br />\r\n&nbsp;</p>\r\n', '8', 35, 27, '4'),
(3610, '<p>When would it be better to do research in the library rather than on the Internet?</p>\r\n', '<p>You are writing a report on recent U. S. Supreme Court decisions.<br />\r\n&nbsp;</p>\r\n', '<p>You want to know the historical performance of a stock you are considering purchasing.<br />\r\n&nbsp;</p>\r\n', '<p>You need to compare credit card interest rates.<br />\r\n&nbsp;</p>\r\n', '<p>You want to find out more about the old trails through the forest in your town.</p>\r\n', '8', 22, 26, '4'),
(3611, '<p>Which of the following scenario may not be a good fit for HDFS ?<br />\r\n&nbsp;</p>\r\n', '<p>HDFS is not suitable for scenarios requiring multiple/simultaneous writes to the same file<br />\r\n&nbsp;</p>\r\n', '<p>HDFS is suitable for storing data related to applications requiring low latency data access<br />\r\n&nbsp;</p>\r\n', '<p>HDFS is suitable for storing data related to applications requiring low latency data access<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 35, 27, '1'),
(3612, '<p>You read a story in the newspaper about salary negotiations with public transportationworkers. The workers are threatening to go on strike tomorrow if their demands for higher wages and better benefits are not met. What can you infer from this news story?</p>\r\n', '<p>Health insurance premiums are very expensive.<br />\r\n&nbsp;</p>\r\n', '<p>The cost of gas will make ticket prices increase in the next few weeks.<br />\r\n&nbsp;</p>\r\n', '<p>People who ride the bus should look for possible alternative transportation.<br />\r\n&nbsp;</p>\r\n', '<p>Employers never like to meet salary demands.</p>\r\n', '8', 22, 26, '3'),
(3613, '<p>The need for data replication can arise in various scenarios like :<br />\r\n&nbsp;</p>\r\n', '<p>Replication Factor is changed<br />\r\n&nbsp;</p>\r\n', '<p>DataNode goes down<br />\r\n&nbsp;</p>\r\n', '<p>Data Blocks get corrupted<br />\r\n&nbsp;</p>\r\n', '<p>All of the mentioned</p>\r\n', '8', 35, 27, '4'),
(3614, '<p>What is wrong with this argument? &quot;You think we need a new regulation to control air pollution? I think we already have too many regulations. Politicians just love to pass new ones, and control us even more than they already do. It is suffocating. We definitely do<br />\r\nnot need any new regulations!&quot;</p>\r\n', '<p>The person speaking doesn&#39;t care about the environment.<br />\r\n&nbsp;</p>\r\n', '<p>The person speaking has changed the subject.<br />\r\n&nbsp;</p>\r\n', '<p>The person speaking is running for political office.<br />\r\n&nbsp;</p>\r\n', '<p>The person speaking does not understand pollution.</p>\r\n', '8', 22, 26, '2'),
(3615, '<p>________ is the slave/worker node and holds the user data in the form of Data Blocks.<br />\r\n&nbsp;</p>\r\n', '<p>DataNode<br />\r\n&nbsp;</p>\r\n', '<p>NameNode<br />\r\n&nbsp;</p>\r\n', '<p>Data block<br />\r\n&nbsp;</p>\r\n', '<p>Replication</p>\r\n', '8', 35, 27, '1'),
(3616, '<p>What should you NOT rely on when making a judgment call?</p>\r\n', '<p>intuition<br />\r\n&nbsp;</p>\r\n', '<p>common sense<br />\r\n&nbsp;</p>\r\n', '<p>gossip<br />\r\n&nbsp;</p>\r\n', '<p>past experience</p>\r\n', '8', 22, 26, '3'),
(3617, '<p>HDFS provides a command line interface called __________ used to interact with HDFS.<br />\r\n&nbsp;</p>\r\n', '<p>&ldquo;HDFS Shell&rdquo;<br />\r\n&nbsp;</p>\r\n', '<p>&ldquo;FS Shell&rdquo;<br />\r\n&nbsp;</p>\r\n', '<p>&ldquo;DFS Shell&rdquo;<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 35, 27, '2'),
(3618, '<p>Which is NOT a valid argument?</p>\r\n', '<p>There are six cans of tomatoes in Carlo&#39;s pantry and 14 in his basement. There are no other cans of tomatoes in his house. Therefore, he has 20 cans of tomatoes in his house.<br />\r\n&nbsp;</p>\r\n', '<p>Everyone northbound on the Interstate yesterday was late to work. Faith was northbound on the Interstate. Faith was late to work.<br />\r\n&nbsp;</p>\r\n', '<p>Huang lives in either Kansas City, Kansas, or Kansas City, Missouri. If he lives in Kansas, then he is an American.<br />\r\n&nbsp;</p>\r\n', '<p>No one who eats in the cafeteria likes the pizza. My boss eats in the cafeteria. Therefore, my boss does not like the pizza.</p>\r\n', '8', 22, 26, '3'),
(3619, '<p>Which statement represents a judgment instead of a fact?</p>\r\n', '<p>My presentation was excellent. I am sure my boss will promote me now.<br />\r\n&nbsp;</p>\r\n', '<p>My presentation was excellent. The clients all told me they liked it.<br />\r\n&nbsp;</p>\r\n', '<p>My presentation was excellent. It won an award from management.<br />\r\n&nbsp;</p>\r\n', '<p>My presentation was excellent. It was cited as such on my peer evaluation.</p>\r\n', '8', 22, 26, '3'),
(3620, '<p>HDFS is implemented in _____________ programming language.<br />\r\n&nbsp;</p>\r\n', '<p>C++<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Java<br />\r\n&nbsp;</p>\r\n', '<p>Scala<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '8', 35, 27, '2'),
(3621, '<p>Study the information given below and answer the given questions. Nine people, A, B, C, D, E, F, G, H and J stay in a building, but not necessarily in the same order.<br />\r\nThe building has nine floors and only one person stays on one floor. All of them own one car each, and each car is of a different colour,<br />\r\ni.e. blue, grey, white, black, yellow, green, red, orange and pink, but not necessarily in the same order. The ground floor is, numbered 1,<br />\r\nthe floor above it is numbered 2, and so &#39;on, and the topmost floor is numbered 9. H owns a black-coloured car and stays on an even numbered floor.<br />\r\nA stays on any even-numbered floor below the floor on which H stays. The one who owns an orange- coloured car stays on the fourth floor.<br />\r\nE stays on the second floor and owns a white-coloured car. The one who owns a pink-coloured car stays on the third floor. A does not own a green-coloured car.<br />\r\nThere are two floors between the floors on which the people owning the red and the black-coloured cars stay. C owns a grey-coloured car.<br />\r\nThere are three floors between the floors on which C and G stay. D stays on a floor immediately above J&#39;s floor.<br />\r\nThere IS one floor between the floors on which F and G stay. F does not own the pink- coloured car. The one who owns the blue car stays on the topmost floor.<br />\r\nF does not stay on the ground floor. Which of the following is true as per the given information?</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>B stays on a floor immediately below the floor on which H stays.<br />\r\n&nbsp;</p>\r\n', '<p>G stays on a floor immediately above the floor on which A stays<br />\r\n&nbsp;</p>\r\n', '<p>F stays on the eighth floor.<br />\r\n&nbsp;</p>\r\n', '<p>D owns the orange-coloured car.&nbsp;</p>\r\n', '8', 100, 26, '4'),
(3622, '<p>Study the information given below and answer the given questions. Nine people, A, B, C, D, E, F, G, H and J stay in a building, but not necessarily<br />\r\nin the same order. The building has nine floors and only one person stays on one floor. All of them own one car each, and each car is of a different colour,<br />\r\ni.e. blue, grey, white, black, yellow, green, red, orange and pink, but not necessarily in the same order. The ground floor is, numbered 1, the floor above<br />\r\nit is numbered 2, and so &#39;on, and the topmost floor is numbered 9. H owns a black-coloured car and stays on an even numbered floor.<br />\r\nA stays on any even-numbered floor below the floor on which H stays. The one who owns an orange- coloured car stays on the fourth floor.<br />\r\nE stays on the second floor and owns a white-coloured car. The one who owns a pink-coloured car stays on the third floor.<br />\r\nA does not own a green-coloured car. There are two floors between the floors on which the people owning the red and the black-coloured cars stay.<br />\r\nC owns a grey-coloured car. There are three floors between the floors on which C and G stay. D stays on a floor immediately above J&#39;s floor.<br />\r\nThere IS one floor between the floors on which F and G stay. F does not own the pink- coloured car. The one who owns the blue car stays on the topmost floor.<br />\r\nF does not stay on the ground floor. On which of the following floors does G stay?</p>\r\n', '<p>1st</p>\r\n', '<p>6th</p>\r\n', '<p>5th</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>7th</p>\r\n', '8', 100, 26, '3'),
(3623, '<p>Study the information given below and answer the given questions. Nine people, A, B, C, D, E, F, G, H and J stay in a building, but not necessarily in the same order.<br />\r\nThe building has nine floors and only one person stays on one floor. All of them own one car each, and each car is of a different colour,<br />\r\ni.e. blue, grey, white, black, yellow, green, red, orange and pink, but not necessarily in the same order. The ground floor is, numbered 1,<br />\r\nthe floor above it is numbered 2, and so &#39;on, and the topmost floor is numbered 9. H owns a black-coloured car and stays on an even numbered floor.<br />\r\nA stays on any even-numbered floor below the floor on which H stays. The one who owns an orange- coloured car stays on the fourth floor.<br />\r\nE stays on the second floor and owns a white-coloured car. The one who owns a pink-coloured car stays on the third floor.<br />\r\nA does not own a green-coloured car. There are two floors between the floors on which the people owning the red and the black-coloured cars stay.<br />\r\nC owns a grey-coloured car. There are three floors between the floors on which C and G stay. D stays on a floor immediately above J&#39;s floor.<br />\r\nThere IS one floor between the floors on which F and G stay. F does not own the pink- coloured car. The one who owns the blue car stays on the topmost floor.<br />\r\nF does not stay on the ground floor. B is related to C in the same way as H is related to E as per the given information.<br />\r\nFollowing the same pattern, F is related to which of the following?</p>\r\n', '<p>J</p>\r\n', '<p>D</p>\r\n', '<p>A</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>G</p>\r\n', '8', 100, 26, '1'),
(3624, '<p>Study the information given below and answer the given questions. Nine people, A, B, C, D, E, F, G, H and J stay in a building, but not necessarily in the same order.<br />\r\nThe building has nine floors and only one person stays on one floor. All of them own one car each, and each car is of a different colour,<br />\r\ni.e. blue, grey, white, black, yellow, green, red, orange and pink, but not necessarily in the same order. The ground floor is, numbered 1,<br />\r\nthe floor above it is numbered 2, and so &#39;on, and the topmost floor is numbered 9. H owns a black-coloured car and stays on an even numbered floor.<br />\r\nA stays on any even-numbered floor below the floor on which H stays. The one who owns an orange- coloured car stays on the fourth floor.<br />\r\nE stays on the second floor and owns a white-coloured car. The one who owns a pink-coloured car stays on the third floor. A does not own a green-coloured car.<br />\r\nThere are two floors between the floors on which the people owning the red and the black-coloured cars stay. C owns a grey-coloured car.<br />\r\nThere are three floors between the floors on which C and G stay. D stays on a floor immediately above J&#39;s floor.<br />\r\nThere IS one floor between the floors on which F and G stay. F does not own the pink- coloured car. The one who owns the blue car stays on the topmost floor.<br />\r\nF does not stay on the ground floor. What is the colour of the car of the person who stays on the ground floor?</p>\r\n', '<p>Red</p>\r\n', '<p>Green</p>\r\n', '<p>Yellow</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Grey</p>\r\n', '8', 100, 26, '4'),
(3625, '<p>At one&#39;s wit&#39;s end</p>\r\n', '<p>Perplexed<br />\r\n&nbsp;</p>\r\n', '<p>Clear Up<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>Explain</p>\r\n', '<p>Enlighten</p>\r\n', '1', 21, 29, '1'),
(3626, '<p>At one&#39;s fingertips</p>\r\n', '<p>To take revenge<br />\r\n&nbsp;</p>\r\n', '<p>Matter of shame<br />\r\n&nbsp;</p>\r\n', '<p>Complete knowledge<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '1', 21, 29, '3'),
(3627, '<p>&nbsp;At the spur of the moment</p>\r\n', '<p>Difficult Moment<br />\r\n&nbsp;</p>\r\n', '<p>Without Delay<br />\r\n&nbsp;</p>\r\n', '<p>Great Moment<br />\r\n&nbsp;</p>\r\n', '<p>Very Slow</p>\r\n', '1', 21, 29, '2'),
(3628, '<p>&nbsp;All in all</p>\r\n', '<p>Every person<br />\r\n&nbsp;</p>\r\n', '<p>Particular thing same in all<br />\r\n&nbsp;</p>\r\n', '<p>Call all at once<br />\r\n&nbsp;</p>\r\n', '<p>Most important</p>\r\n', '1', 21, 29, '4'),
(3629, '<p>FOX : CUNNING :: RABBIT : ?&nbsp;</p>\r\n', '<p>Courageous</p>\r\n', '<p>Dangerous</p>\r\n', '<p>Timid</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Ferocious</p>\r\n', '2', 21, 29, '1'),
(3630, '<p>&nbsp;At close quarters</p>\r\n', '<p>close examinations<br />\r\n&nbsp;</p>\r\n', '<p>live near to each other<br />\r\n&nbsp;</p>\r\n', '<p>live far to each other<br />\r\n&nbsp;</p>\r\n', '<p>in love</p>\r\n', '1', 21, 29, '1'),
(3631, '<p>FLEXIBLE : RIGID :: CONFIDENCE : ?&nbsp;</p>\r\n', '<p>Diffidence</p>\r\n', '<p>Indifference</p>\r\n', '<p>Cowardice</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Scare</p>\r\n', '2', 21, 29, '1'),
(3632, '<p>&nbsp;Apple Pie Order</p>\r\n', '<p>In random order<br />\r\n&nbsp;</p>\r\n', '<p>Related to fruits packing<br />\r\n&nbsp;</p>\r\n', '<p>Related to dry fruit packing<br />\r\n&nbsp;</p>\r\n', '<p>In perfect order</p>\r\n', '1', 21, 29, '4'),
(3633, '<p>Above board</p>\r\n', '<p>boasting person<br />\r\n&nbsp;</p>\r\n', '<p>honest and straightforward<br />\r\n&nbsp;</p>\r\n', '<p>a man with arrogance<br />\r\n&nbsp;</p>\r\n', '<p>a dishonest person</p>\r\n', '1', 21, 29, '2'),
(3634, '<p>NECKLACE : ADORNMENT :: ?&nbsp;</p>\r\n', '<p>Medal : Decoration</p>\r\n', '<p>Bronze : Medal</p>\r\n', '<p>Scarf : Dress</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Window : House</p>\r\n', '2', 21, 29, '1'),
(3635, '<p>BILLY : GOAT ::&nbsp;</p>\r\n', '<p>Cow : Bull</p>\r\n', '<p>Lord : Maid</p>\r\n', '<p>Man : Woman</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Cow : Calf</p>\r\n', '2', 21, 29, '3'),
(3636, '<p>&nbsp;I am tired as I am working since 7 O&#39;clock in the morning.</p>\r\n', '<p>I was working<br />\r\n&nbsp;</p>\r\n', '<p>I have been working<br />\r\n&nbsp;</p>\r\n', '<p>I had been working<br />\r\n&nbsp;</p>\r\n', '<p>I will be working</p>\r\n', '1', 21, 1, '2'),
(3637, '<p>WORK : MOTIVE ::&nbsp;</p>\r\n', '<p>Body : Mind</p>\r\n', '<p>Wall : Paint</p>\r\n', '<p>Body : Food</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Petrol : Car</p>\r\n', '2', 21, 29, '4'),
(3638, '<p>&nbsp;When it was morning they decided to put at an inn.</p>\r\n', '<p>put out in<br />\r\n&nbsp;</p>\r\n', '<p>put off at<br />\r\n&nbsp;</p>\r\n', '<p>put at<br />\r\n&nbsp;</p>\r\n', '<p>put up at</p>\r\n', '1', 21, 29, '4'),
(3639, '<p>WINDOW : CURTAIN ::&nbsp;&nbsp;</p>\r\n', '<p>Door : Frame</p>\r\n', '<p>Book : Jacket</p>\r\n', '<p>CPU : Cabinet</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Casing : Wire</p>\r\n', '2', 21, 29, '3'),
(3640, '<p>To increase the response time and throughput, the kernel minimizes the frequency of disk access by keeping a pool of internal data buffer called</p>\r\n', '<p>Pooling</p>\r\n', '<p>Spooling</p>\r\n', '<p>Buffer cache</p>\r\n', '<p>Swapping</p>\r\n', '1', 12, 28, '3'),
(3641, '<p>Doctor : Patient : : Politician : ?&nbsp;</p>\r\n', '<p>Voter</p>\r\n', '<p>Chair</p>\r\n', '<p>Money</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Public</p>\r\n', '2', 21, 29, '1'),
(3642, '<pre>\r\n<span style="font-family:Arial,Helvetica,sans-serif">At start of process execution, STDOUT &amp; STDERR\r\n</span></pre>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">Point to current terminal device </span></p>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">Are closed </span></p>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">Point to special files on the system </span></p>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">None of the above</span></p>\r\n', '1', 12, 28, '1'),
(3643, '<pre>\r\n<span style="font-family:Arial,Helvetica,sans-serif">wtmp and utmp files contain:\r\n</span></pre>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">Temporary system data</span></p>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">User login-logout log</span></p>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">The user&rsquo;s command execution log</span></p>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">The user&rsquo;s su and sudo attempts</span></p>\r\n', '1', 12, 28, '2'),
(3644, '<pre>\r\n<span style="font-family:Arial,Helvetica,sans-serif">Which is the core of the operating system?\r\n</span></pre>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">Shell</span></p>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">Kernel</span></p>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">Commands</span></p>\r\n', '<p><span style="font-family:Arial,Helvetica,sans-serif">Script</span></p>\r\n', '1', 12, 28, '2'),
(3645, '<p>ILP32 stands for</p>\r\n', '<p>32 bit Integer, Long &amp; Pointer</p>\r\n', '<p>32 bit Integrated Long &amp; Pointer</p>\r\n', '<p>32 bit Intelligent Long &amp; Pointer</p>\r\n', '<p>32 bit Long &amp; Pointer</p>\r\n', '1', 12, 28, '1'),
(3646, '<p>Single Unix Specification Version 2 provides enhanced support for</p>\r\n', '<p>16 bit Unix</p>\r\n', '<p>32 bit Unix</p>\r\n', '<p>64 bit Unix</p>\r\n', '<p>8 bit Unix</p>\r\n', '1', 12, 28, '3'),
(3647, '<p>Which among the following interacts directly with system hardware?</p>\r\n', '<p>Shell</p>\r\n', '<p>Commands</p>\r\n', '<p>Kernel</p>\r\n', '<p>Applications</p>\r\n', '1', 12, 28, '3'),
(3648, '<p>Applications communicate with kernel by using:</p>\r\n', '<p>System Calls</p>\r\n', '<p>C Programs</p>\r\n', '<p>Shell Script</p>\r\n', '<p>Shell</p>\r\n', '1', 12, 28, '1'),
(3649, '<p>Solaris is the name of a flavor of UNIX from</p>\r\n', '<p>HP</p>\r\n', '<p>IBM</p>\r\n', '<p>Digital Equipment Corp</p>\r\n', '<p>Sun Microsystems</p>\r\n', '1', 12, 28, '4'),
(3650, '<p>Which of the following is &ldquo;NOT&rdquo; a UNIX variant ?</p>\r\n', '<p>Solaris</p>\r\n', '<p>AIX</p>\r\n', '<p>IRIX</p>\r\n', '<p>AS400</p>\r\n', '1', 12, 28, '4'),
(3651, '<p>The system calls in UNIX is written using which language</p>\r\n', '<p>C</p>\r\n', '<p>C++<br />\r\n&nbsp;</p>\r\n', '<p>Assembly Language</p>\r\n', '<p>Fortran</p>\r\n', '1', 12, 28, '1'),
(3652, '<p>Which of the following enables multi-tasking in UNIX?</p>\r\n', '<p>Time Sharing</p>\r\n', '<p>Multi programming</p>\r\n', '<p>Multi user</p>\r\n', '<p>Modularity</p>\r\n', '1', 12, 28, '1'),
(3653, '<p>Which of the following is considered as the super daemon in Unix?</p>\r\n', '<p>sysinit</p>\r\n', '<p>init</p>\r\n', '<p>inetd</p>\r\n', '<p>proc</p>\r\n', '1', 12, 28, '2'),
(3654, '<p>Ignorance : Education : : Disease : ?&nbsp;</p>\r\n', '<p>Hospital</p>\r\n', '<p>Doctor</p>\r\n', '<p>Medicine</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Nurse</p>\r\n', '2', 21, 29, '3'),
(3655, '<p>Unix is which kind of Operating System?</p>\r\n', '<p>Multi User</p>\r\n', '<p>Multi Processes</p>\r\n', '<p>Multi Tasking</p>\r\n', '<p>All the above</p>\r\n', '1', 12, 28, '4'),
(3656, '<p>Man : Biography : : Nation : ?&nbsp;</p>\r\n', '<p>History</p>\r\n', '<p>Geography</p>\r\n', '<p>People</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Leader</p>\r\n', '2', 21, 29, '1');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(3657, '<p>SVR4 stands for?</p>\r\n', '<p>Standard Version Release 4</p>\r\n', '<p>System Version Release 4</p>\r\n', '<p>Standard Five Release 4</p>\r\n', '<p>System Five Release 4</p>\r\n', '1', 12, 28, '4'),
(3658, '<p>Lp0 device file is used to access:</p>\r\n', '<p>Floppy</p>\r\n', '<p>Cdrom</p>\r\n', '<p>Printer</p>\r\n', '<p>Tape drive</p>\r\n', '1', 12, 28, '3'),
(3659, '<p>Guilt : Past : : Hope : ?&nbsp;</p>\r\n', '<p>Present</p>\r\n', '<p>Sorrow</p>\r\n', '<p>Past</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Future</p>\r\n', '2', 21, 29, '4'),
(3660, '<p>Syntax of any Unix command is:</p>\r\n', '<p>command [options] [arguments]&nbsp;</p>\r\n', '<p>command options [arguments]</p>\r\n', '<p>command [options] [arguments]&nbsp;</p>\r\n', '<p>command options arguments</p>\r\n', '1', 12, 28, '1'),
(3661, '<p>Telephone : Cable : : Radio : ?&nbsp;</p>\r\n', '<p>Microphone</p>\r\n', '<p>Electricity</p>\r\n', '<p>Wire</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Wireless</p>\r\n', '2', 21, 29, '4'),
(3662, '<p>Layer one of the OSI model is</p>\r\n', '<p>network layer</p>\r\n', '<p>transport layer</p>\r\n', '<p>link layer</p>\r\n', '<p>physical layer</p>\r\n', '1', 12, 28, '4'),
(3663, '<p>elbow: arm : : knee : _________&nbsp;</p>\r\n', '<p>walking</p>\r\n', '<p>leg</p>\r\n', '<p>finger</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>nose</p>\r\n', '2', 21, 29, '2'),
(3664, '<p>What command is used to list contents of directories?</p>\r\n', '<p>tar</p>\r\n', '<p>dir<br />\r\n&nbsp;</p>\r\n', '<p>lp</p>\r\n', '<p>ls</p>\r\n', '1', 12, 28, '4'),
(3665, '<p>The physical layer of a network</p>\r\n', '<p>constructs packets of data and sends them across the network</p>\r\n', '<p>controls error detection and correction</p>\r\n', '<p>defines the electrical characteristics of signals passed between the computer and communication devices</p>\r\n', '<p>&nbsp;All of the above</p>\r\n', '1', 12, 28, '3'),
(3666, '<p>Which combination of keys is used to exit from terminal?</p>\r\n', '<p>Ctrl + T</p>\r\n', '<p>Ctrl + Z</p>\r\n', '<p>Ctrl + D</p>\r\n', '<p>Ctrl + E</p>\r\n', '1', 12, 28, '3'),
(3667, '<p>Which command is used to list all the files in your current directory(including hidden)?</p>\r\n', '<p>ls -l</p>\r\n', '<p>ls -t</p>\r\n', '<p>ls -a</p>\r\n', '<p>ls -i</p>\r\n', '1', 12, 28, '3'),
(3668, '<p>Which command is/are used to remove directory in Linux?</p>\r\n', '<p>rmdir</p>\r\n', '<p>rm -r</p>\r\n', '<p>rm -dir</p>\r\n', '<p>Both rmdir and rm -r</p>\r\n', '1', 12, 28, '4'),
(3669, '<p>car: road : : train : ________&nbsp;</p>\r\n', '<p>track</p>\r\n', '<p>fast</p>\r\n', '<p>vehicle</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>wheel</p>\r\n', '2', 21, 29, '1'),
(3670, '<p>In Linux everything stored as a&nbsp;</p>\r\n', '<p>file</p>\r\n', '<p>directory</p>\r\n', '<p>executables</p>\r\n', '<p>None of the above</p>\r\n', '1', 12, 28, '1'),
(3671, '<p>grains : sand : : drops : __________&nbsp;</p>\r\n', '<p>rain</p>\r\n', '<p>surf</p>\r\n', '<p>snow</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>flood</p>\r\n', '2', 21, 29, '1'),
(3672, '<p>&nbsp;Jeans was not permitted in out college.</p>\r\n', '<p>were<br />\r\n&nbsp;</p>\r\n', '<p>had<br />\r\n&nbsp;</p>\r\n', '<p>will<br />\r\n&nbsp;</p>\r\n', '<p>have</p>\r\n', '1', 21, 29, '1'),
(3673, '<p>The system calls in UNIX is written using which language ?</p>\r\n', '<p>Java</p>\r\n', '<p>C</p>\r\n', '<p>C++</p>\r\n', '<p>Assembly</p>\r\n', '1', 12, 28, '2'),
(3674, '<p>wave: tide : : moment : ________&nbsp;</p>\r\n', '<p>time</p>\r\n', '<p>tardiness</p>\r\n', '<p>ocean</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>clock</p>\r\n', '2', 21, 29, '4'),
(3675, '<p>What is property of UNIX?</p>\r\n', '<p>Multi User</p>\r\n', '<p>Multi Processes</p>\r\n', '<p>Multi Tasking</p>\r\n', '<p>All of above</p>\r\n', '1', 12, 28, '4'),
(3676, '<p>Which among the following is used to write small programs to control Linux functionalities ?</p>\r\n', '<p>Shell Commands</p>\r\n', '<p>Shell Script<br />\r\n&nbsp;</p>\r\n', '<p>C Program</p>\r\n', '<p>Java Program</p>\r\n', '1', 12, 28, '2'),
(3677, '<p>wife: woman : : _______ : man&nbsp;</p>\r\n', '<p>father</p>\r\n', '<p>boy</p>\r\n', '<p>groom</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>husband</p>\r\n', '2', 21, 29, '4'),
(3678, '<p>tee command is used in LINUX for ?</p>\r\n', '<p>Read from an input and write to a standard output and file</p>\r\n', '<p>Read from an input</p>\r\n', '<p>Write to an output</p>\r\n', '<p>None of above</p>\r\n', '1', 12, 28, '1'),
(3679, '<p>Which command changes a file&#39;s group owner</p>\r\n', '<p>chmod</p>\r\n', '<p>chgrp</p>\r\n', '<p>chown</p>\r\n', '<p>chgrep</p>\r\n', '1', 12, 28, '2'),
(3680, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>crusade</p>\r\n', '<p>expedition</p>\r\n', '<p>cruise</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>campaign</p>\r\n', '2', 21, 29, '3'),
(3681, '<p>Default permissions of a file can be changed with ?</p>\r\n', '<p>group</p>\r\n', '<p>chperm</p>\r\n', '<p>chmod</p>\r\n', '<p>chall</p>\r\n', '1', 12, 28, '2'),
(3682, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>flourish</p>\r\n', '<p>renovate</p>\r\n', '<p>blossom</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>thrive</p>\r\n', '2', 21, 29, '2'),
(3683, '<p>In the shell, by default, all variables are considered and stored as</p>\r\n', '<p>string</p>\r\n', '<p>integer</p>\r\n', '<p>character</p>\r\n', '<p>float</p>\r\n', '5', 15, 28, '1'),
(3684, '<p>Which command reads user input from the terminal and assign this value to a variable name?</p>\r\n', '<p>read</p>\r\n', '<p>get</p>\r\n', '<p>declare</p>\r\n', '<p>set</p>\r\n', '5', 15, 28, '1'),
(3685, '<p>Which one of the following statement is true about variables in shell?</p>\r\n', '<p>variables do not require declaration before assigning value to them</p>\r\n', '<p>variables are case sensitive</p>\r\n', '<p>to extract the contents of a variable, we have to provide the variable a preceding $</p>\r\n', '<p>all of the mentioned</p>\r\n', '5', 15, 28, '4'),
(3686, '<p>Which one of the following is not a valid shell variable?</p>\r\n', '<p>_san</p>\r\n', '<p>san_2</p>\r\n', '<p>_san_2</p>\r\n', '<p>2_san</p>\r\n', '1', 15, 28, '4'),
(3687, '<p>To redefine a variable, it can be removed from the list of variables by using the command</p>\r\n', '<p>unset</p>\r\n', '<p>delete</p>\r\n', '<p>remove</p>\r\n', '<p>clear</p>\r\n', '5', 15, 28, '1'),
(3688, '<p>Which command sets up shorthand for command or command line?</p>\r\n', '<p>set</p>\r\n', '<p>alias</p>\r\n', '<p>new</p>\r\n', '<p>echo</p>\r\n', '1', 15, 28, '2'),
(3689, '<p>What is the function of bind command in bash shell?</p>\r\n', '<p>defining new macros</p>\r\n', '<p>defining new key bindings for existing commands</p>\r\n', '<p>dumping the installed key bindings</p>\r\n', '<p>all of the mentioned</p>\r\n', '1', 15, 28, '4'),
(3690, '<p>The command &lsquo;compgen -c&rsquo; shows</p>\r\n', '<p>all variable names</p>\r\n', '<p>all system wide aliases</p>\r\n', '<p>full list of all commands</p>\r\n', '<p>none of the mentioned</p>\r\n', '1', 15, 28, '3'),
(3691, '<p>Which statement resumes the next iteration of a for, while, select, or untill loop?</p>\r\n', '<p>continue</p>\r\n', '<p>break</p>\r\n', '<p>complete</p>\r\n', '<p>command</p>\r\n', '5', 15, 28, '1'),
(3692, '<p>Which command prints the directory stack?</p>\r\n', '<p>cd</p>\r\n', '<p>dirs</p>\r\n', '<p>popd</p>\r\n', '<p>pushd</p>\r\n', '5', 15, 28, '2'),
(3693, '<p>The command &lsquo;disown -r&rsquo;</p>\r\n', '<p>removes all jobs</p>\r\n', '<p>removes all running jobs</p>\r\n', '<p>marks jobs to not receive SIGHUP when bash exits</p>\r\n', '<p>marks all jobs</p>\r\n', '5', 15, 28, '2'),
(3694, '<p>The command &lsquo;enable -n &lsquo;</p>\r\n', '<p>enables the specified built-in command</p>\r\n', '<p>disables the specified built-in command</p>\r\n', '<p>print the status of the command</p>\r\n', '<p>none of the mentioned</p>\r\n', '5', 15, 28, '2'),
(3695, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>Vapour</p>\r\n', '<p>Mist</p>\r\n', '<p>Hailstone</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Fog</p>\r\n', '2', 21, 29, '1'),
(3696, '<p>Which command can create environment variable?</p>\r\n', '<p>export</p>\r\n', '<p>set</p>\r\n', '<p>read</p>\r\n', '<p>none of the mentioned</p>\r\n', '5', 15, 28, '1'),
(3697, '<p>Which command concatenate the specified argument into a single command, then execute the command?</p>\r\n', '<p>fc</p>\r\n', '<p>eval</p>\r\n', '<p>exec</p>\r\n', '<p>getopts</p>\r\n', '5', 15, 28, '2'),
(3698, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>Circle : Arc</p>\r\n', '<p>Chair : Leg</p>\r\n', '<p>Flower : Petal</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Cover : Page</p>\r\n', '2', 21, 29, '4'),
(3699, '<p>The command &lsquo;hash&rsquo;</p>\r\n', '<p>manages a internal hash table</p>\r\n', '<p>find and remember the full path name of the specified command</p>\r\n', '<p>displays used command names and the number of hits</p>\r\n', '<p>all of the mentioned</p>\r\n', '5', 15, 28, '4'),
(3700, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>Ginger</p>\r\n', '<p>Garlic</p>\r\n', '<p>Chilli</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Potato</p>\r\n', '3', 21, 29, '3'),
(3701, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>Mango</p>\r\n', '<p>Papaya</p>\r\n', '<p>Apple</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Orange</p>\r\n', '3', 21, 29, '1'),
(3702, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>Owl</p>\r\n', '<p>Eagle</p>\r\n', '<p>Hawk</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Parrot</p>\r\n', '3', 21, 29, '4'),
(3703, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>Debit</p>\r\n', '<p>Deposit</p>\r\n', '<p>Deduction</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Withdrawal</p>\r\n', '3', 21, 29, '2'),
(3704, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>Ball</p>\r\n', '<p>Specter</p>\r\n', '<p>Globe</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Sphere</p>\r\n', '3', 21, 29, '2'),
(3705, '<p>Find the odd one out&nbsp;</p>\r\n', '<p>Den</p>\r\n', '<p>Roof</p>\r\n', '<p>Burrow</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Nest</p>\r\n', '3', 21, 29, '2'),
(3706, '<p>nohup is used to<br />\r\n&nbsp;</p>\r\n', '<p>automatically hang up the process after logout</p>\r\n', '<p>continue the process after logout</p>\r\n', '<p>create backgroung process</p>\r\n', '<p>manually hang up the process after logout</p>\r\n', '6', 15, 28, '2'),
(3707, '<p>we can change the priority of a running process using</p>\r\n', '<p>nice</p>\r\n', '<p>renice</p>\r\n', '<p>priority cannot be changed for a running process</p>\r\n', '<p>only superuser can change the priority</p>\r\n', '6', 15, 28, '2'),
(3708, '<p>People are waiting for the train at platform for long.</p>\r\n', '<p>were waiting<br />\r\n&nbsp;</p>\r\n', '<p>have been waiting<br />\r\n&nbsp;</p>\r\n', '<p>has waiting<br />\r\n&nbsp;</p>\r\n', '<p>have waiting</p>\r\n', '3', 21, 29, '2'),
(3709, '<p>The signal sent to a process when the Ctrl-C key is pressed is</p>\r\n', '<p>KILL</p>\r\n', '<p>TSTP</p>\r\n', '<p>TERM</p>\r\n', '<p>INT</p>\r\n', '6', 15, 28, '4'),
(3710, '<p>They are hell bent at getting what is due to them.</p>\r\n', '<p>hell bent on<br />\r\n&nbsp;</p>\r\n', '<p>hell bent of<br />\r\n&nbsp;</p>\r\n', '<p>hell bent after<br />\r\n&nbsp;</p>\r\n', '<p>hell bent upon</p>\r\n', '3', 21, 29, '4'),
(3711, '<p>I shall not go untill I am invited.</p>\r\n', '<p>unless I am<br />\r\n&nbsp;</p>\r\n', '<p>till I am<br />\r\n&nbsp;</p>\r\n', '<p>once I am<br />\r\n&nbsp;</p>\r\n', '<p>if not I am</p>\r\n', '3', 21, 29, '1'),
(3712, '<p>A user issues the following command sequence:<br />\r\n$ a.out &amp;<br />\r\n$ bash<br />\r\n$ a.out &amp;<br />\r\nIf the user kills the bash process, then which of the following is true?</p>\r\n', '<p>The second a.out process is also terminated</p>\r\n', '<p>The second a.out process becomes a defunct process</p>\r\n', '<p>The first a.out process becomes a zombie process</p>\r\n', '<p>init process becomes parent of second a.out process</p>\r\n', '6', 15, 28, '4'),
(3713, '<p>Mr. Manoj teaches very well, isn&#39;t it ?</p>\r\n', '<p>didn&#39;t he<br />\r\n&nbsp;</p>\r\n', '<p>doesn&#39;t he<br />\r\n&nbsp;</p>\r\n', '<p>wasn&#39;t he<br />\r\n&nbsp;</p>\r\n', '<p>if not he</p>\r\n', '3', 21, 29, '2'),
(3714, '<p>When a child process exits before the parent process exits, which of the following is true:</p>\r\n', '<p>the child process becomes defunct</p>\r\n', '<p>the parent process becomes defunct</p>\r\n', '<p>if the parent process does not handle SIGCHLD, the child process becomes a zombie</p>\r\n', '<p>none of the above</p>\r\n', '6', 15, 28, '2'),
(3715, '<p>Which of the following values for STAT column of ps command is not true:</p>\r\n', '<p>status R means running</p>\r\n', '<p>status S means sleeping</p>\r\n', '<p>status E means exited</p>\r\n', '<p>status Z means zombie</p>\r\n', '6', 15, 28, '3'),
(3716, '<p>In the following the question choose the word which best expresses the meaning of the given word.</p>\r\n\r\n<p>Repudiate&nbsp;</p>\r\n', '<p>reject</p>\r\n', '<p>annoy</p>\r\n', '<p>appropriate</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>besmirch</p>\r\n', '3', 21, 29, '1'),
(3717, '<p>Which signal is sent by the command &ldquo;kill -9 &rdquo; ?</p>\r\n', '<p>INT</p>\r\n', '<p>TERM<br />\r\n&nbsp;</p>\r\n', '<p>KILL</p>\r\n', '<p>STOP</p>\r\n', '6', 15, 28, '3'),
(3718, '<p>Process information in the current shell can be obtained by using</p>\r\n', '<p>kill</p>\r\n', '<p>bg</p>\r\n', '<p>fg</p>\r\n', '<p>ps</p>\r\n', '6', 15, 28, '4'),
(3719, '<p>Which command can be executed by a user who is already logged into the system, in order to change to the root user? (type the command without any parameters)</p>\r\n', '<p>su</p>\r\n', '<p>root</p>\r\n', '<p>chroot</p>\r\n', '<p>user</p>\r\n', '6', 15, 28, '1'),
(3720, '<p>How to run a process in the background?</p>\r\n', '<p>&amp;</p>\r\n', '<p>*</p>\r\n', '<p>?</p>\r\n', '<p>|</p>\r\n', '6', 15, 28, '1'),
(3721, '<p>In the following choose the word which best expresses the meaning of the given word Tepid</p>\r\n', '<p>gaseous</p>\r\n', '<p>freezing</p>\r\n', '<p>lukewarm</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>boiling</p>\r\n', '3', 21, 29, '3'),
(3722, '<p>Which command is used to bring the background process to forground?</p>\r\n', '<p>bg</p>\r\n', '<p>fg</p>\r\n', '<p>background</p>\r\n', '<p>forground</p>\r\n', '6', 15, 28, '2'),
(3723, '<p>If a program executing in background attempts to read from STDIN</p>\r\n', '<p>It is terminated</p>\r\n', '<p>It&rsquo;s execution is suspended<br />\r\n&nbsp;</p>\r\n', '<p>STDIN is made available to it</p>\r\n', '<p>None of the mentioned</p>\r\n', '6', 15, 28, '2'),
(3724, '<p>In the following choose the word which best expresses the meaning of the given word Temporal&nbsp;</p>\r\n', '<p>sleepy</p>\r\n', '<p>secular</p>\r\n', '<p>scholarly</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>priestly</p>\r\n', '3', 21, 29, '2'),
(3725, '<p>All device files are stored in which directory?</p>\r\n', '<p>/etc</p>\r\n', '<p>/bin</p>\r\n', '<p>/dev</p>\r\n', '<p>/usr</p>\r\n', '2', 13, 28, '3'),
(3726, '<p>In the following choose the word which best expresses the meaning of the given word Mayhem&nbsp;</p>\r\n', '<p>Defeat</p>\r\n', '<p>Excitement</p>\r\n', '<p>Havoc</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Jubilation</p>\r\n', '3', 21, 29, '3'),
(3727, '<p>In the following choose the word which best expresses the meaning of the given word Abscene&nbsp;</p>\r\n', '<p>Displeasing</p>\r\n', '<p>Condemnable</p>\r\n', '<p>Objectionable</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Indecent</p>\r\n', '3', 21, 29, '4'),
(3728, '<p>In the following choose the word which best expresses the meaning of the given word Erudite&nbsp;</p>\r\n', '<p>Settle</p>\r\n', '<p>Academic</p>\r\n', '<p>Expand</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Execute</p>\r\n', '3', 21, 29, '3'),
(3729, '<p>In the following choose the word which best expresses the meaning of the given word Animate&nbsp;</p>\r\n', '<p>Kill</p>\r\n', '<p>Dead</p>\r\n', '<p>Energise</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Calm</p>\r\n', '3', 21, 29, '3'),
(3730, '<p>truthfulness: court : : cleanliness : _________&nbsp;</p>\r\n', '<p>virtue</p>\r\n', '<p>bath</p>\r\n', '<p>restaurant</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>pig</p>\r\n', '3', 21, 29, '3'),
(3731, '<p>egg: fish : : ________ : plant&nbsp;</p>\r\n', '<p>leaf</p>\r\n', '<p>seed</p>\r\n', '<p>root</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>stem</p>\r\n', '3', 21, 29, '2'),
(3732, '<p>lion: animal : : flower : ___________&nbsp;</p>\r\n', '<p>plant</p>\r\n', '<p>roots</p>\r\n', '<p>grass</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>rose</p>\r\n', '3', 21, 29, '1'),
(3733, '<p>wave: crest : : _________ : peak&nbsp;</p>\r\n', '<p>water</p>\r\n', '<p>top</p>\r\n', '<p>moving</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>mountain</p>\r\n', '4', 21, 29, '4'),
(3734, '<p>book : _______ : : comb : tooth&nbsp;</p>\r\n', '<p>title</p>\r\n', '<p>page</p>\r\n', '<p>library</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>knowledge</p>\r\n', '4', 21, 29, '2'),
(3735, '<p>boy: child : : man : ________&nbsp;</p>\r\n', '<p>father</p>\r\n', '<p>uncle</p>\r\n', '<p>adult</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>person</p>\r\n', '4', 21, 29, '3'),
(3736, '<p>grass: soil : : seaweed : ___________&nbsp;</p>\r\n', '<p>water</p>\r\n', '<p>river</p>\r\n', '<p>salty</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>fish</p>\r\n', '4', 21, 29, '1'),
(3737, '<p>Stone : Sculpture ::&nbsp;</p>\r\n', '<p>Mural : Painting</p>\r\n', '<p>opera : stage</p>\r\n', '<p>canvas : easel</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>clay : pottery</p>\r\n', '4', 21, 29, '4'),
(3738, '<p>Crumb : Bread ::&nbsp;</p>\r\n', '<p>Ounce : Unit</p>\r\n', '<p>Splinter : Wood</p>\r\n', '<p>Water : Bucket</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>twine : rope</p>\r\n', '4', 21, 29, '2'),
(3739, '<p>Cookbook : Recipes ::&nbsp;</p>\r\n', '<p>film : reviews</p>\r\n', '<p>manual : instructions</p>\r\n', '<p>magazine : subscriptions</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>paperback : editions</p>\r\n', '4', 21, 29, '2'),
(3740, '<p>The reason why he left the home was because he was feeling hostile there.</p>\r\n', '<p>the home<br />\r\n&nbsp;</p>\r\n', '<p>the home has<br />\r\n&nbsp;</p>\r\n', '<p>the home were<br />\r\n&nbsp;</p>\r\n', '<p>the home was that</p>\r\n', '4', 21, 29, '4'),
(3741, '<p>Find correct sequence of sentence :</p>\r\n\r\n<p>P: youngsters in the cities and the villages<br />\r\nQ: The effect<br />\r\nR: of the cinema<br />\r\nS: on the school and college going is very bad</p>\r\n', '<p>PRQS<br />\r\n&nbsp;</p>\r\n', '<p>QRSP<br />\r\n&nbsp;</p>\r\n', '<p>QPSR<br />\r\n&nbsp;</p>\r\n', '<p>RQSP</p>\r\n', '4', 21, 29, '2'),
(3742, '<p>Find correct sequence of sentence :</p>\r\n\r\n<p>P. I have not come to complain he said<br />\r\nQ. even if it means some humiliation<br />\r\nR. but the boy must learn to be honest<br />\r\nS. and admit he broke it.</p>\r\n', '<p>PQRS<br />\r\n&nbsp;</p>\r\n', '<p>QRPS<br />\r\n&nbsp;</p>\r\n', '<p>QPRS<br />\r\n&nbsp;</p>\r\n', '<p>PRQS</p>\r\n', '4', 21, 29, '4'),
(3743, '<p>Find correct sequence of sentence :</p>\r\n\r\n<p>P: not indeed in the sense that education has been universal<br />\r\nQ: Our country has been a land of learning<br />\r\nR: and the learned man has been held in higher esteem than the warrior or administrator<br />\r\nS: but in the sense that education has been universal</p>\r\n', '<p>QRSP<br />\r\n&nbsp;</p>\r\n', '<p>RSPQ<br />\r\n&nbsp;</p>\r\n', '<p>QPSR<br />\r\n&nbsp;</p>\r\n', '<p>RQSP</p>\r\n', '4', 21, 29, '3'),
(3744, '<p>Find correct sequence of sentence :</p>\r\n\r\n<p>P: appear in examinations<br />\r\nQ: many students from all over India<br />\r\nR: by different organisations<br />\r\nS: which are held on all India basis</p>\r\n', '<p>QPSR<br />\r\n&nbsp;</p>\r\n', '<p>QRSP<br />\r\n&nbsp;</p>\r\n', '<p>QPRS<br />\r\n&nbsp;</p>\r\n', '<p>PRQS</p>\r\n', '4', 21, 29, '1'),
(3745, '<p>Find the correct sequence of sentences :</p>\r\n\r\n<p>P: to protect vegetables from cold<br />\r\nQ: in view of the prevailing weather conditions<br />\r\nR: farmers to smoke their fields during the night<br />\r\nS: agricultural experts have advised</p>\r\n', '<p>PRQS<br />\r\n&nbsp;</p>\r\n', '<p>QSRP<br />\r\n&nbsp;</p>\r\n', '<p>RPSQ<br />\r\n&nbsp;</p>\r\n', '<p>SPQR</p>\r\n', '4', 24, 29, '2'),
(3746, '<p>Find the right sequence of sentences :&nbsp;</p>\r\n\r\n<p>P: if it was time to go yet<br />\r\nQ: and ran downstairs to see<br />\r\nR: Rahul jumped out of bed<br />\r\nS: on Saturday morning</p>\r\n', '<p>RPQR<br />\r\n&nbsp;</p>\r\n', '<p>SPRQ<br />\r\n&nbsp;</p>\r\n', '<p>RQSP<br />\r\n&nbsp;</p>\r\n', '<p>SRQP</p>\r\n', '4', 24, 29, '4'),
(3747, '<p>Find the right sequence of sentences:</p>\r\n\r\n<p>P: in my heart of hearts<br />\r\nQ: to hear his voice<br />\r\nR: I wasn&#39;t sure what I really wished<br />\r\nS: through that window once more</p>\r\n', '<p>PQRS<br />\r\n&nbsp;</p>\r\n', '<p>RPQS<br />\r\n&nbsp;</p>\r\n', '<p>SRQP<br />\r\n&nbsp;</p>\r\n', '<p>RPSQ</p>\r\n', '4', 24, 29, '2'),
(3748, '<p>find correct spelling :</p>\r\n', '<p>Abbreviate<br />\r\n&nbsp;</p>\r\n', '<p>Abreviate<br />\r\n&nbsp;</p>\r\n', '<p>Abrrviate<br />\r\n&nbsp;</p>\r\n', '<p>Abbreviat</p>\r\n', '4', 24, 29, '1'),
(3749, '<p>find correct spelling :</p>\r\n', '<p>Aceelerate<br />\r\n&nbsp;</p>\r\n', '<p>Acelerate<br />\r\n&nbsp;</p>\r\n', '<p>Accelerate<br />\r\n&nbsp;</p>\r\n', '<p>Acellrate</p>\r\n', '4', 24, 29, '3'),
(3750, '<p>find correct spelling :</p>\r\n', '<p>Accesary<br />\r\n&nbsp;</p>\r\n', '<p>Acessarry<br />\r\n&nbsp;</p>\r\n', '<p>Acessary<br />\r\n&nbsp;</p>\r\n', '<p>Accessary</p>\r\n', '4', 21, 29, '4'),
(3751, '<p>find correct spelling :</p>\r\n', '<p>Accoomodate<br />\r\n&nbsp;</p>\r\n', '<p>Accommodate<br />\r\n&nbsp;</p>\r\n', '<p>Accomodate<br />\r\n&nbsp;</p>\r\n', '<p>Acommodate</p>\r\n', '4', 21, 29, '2'),
(3752, '<p>find correct spelling :</p>\r\n', '<p>Acoompany<br />\r\n&nbsp;</p>\r\n', '<p>Accompany<br />\r\n&nbsp;</p>\r\n', '<p>Acommpany<br />\r\n&nbsp;</p>\r\n', '<p>Acompany</p>\r\n', '4', 24, 29, '2'),
(3753, '<p>Spelling test - find correct spelling :</p>\r\n', '<p>Accountancy<br />\r\n&nbsp;</p>\r\n', '<p>Acountancy<br />\r\n&nbsp;</p>\r\n', '<p>Acoountancy<br />\r\n&nbsp;</p>\r\n', '<p>Acounttancy</p>\r\n', '5', 24, 29, '1'),
(3754, '<p>find correct spelling :</p>\r\n', '<p>Acquainttance<br />\r\n&nbsp;</p>\r\n', '<p>Acqquaintance<br />\r\n&nbsp;</p>\r\n', '<p>Accquaintance<br />\r\n&nbsp;</p>\r\n', '<p>Acquaintance</p>\r\n', '5', 24, 29, '4'),
(3755, '<p>find correct spelling :</p>\r\n', '<p>Barbarien<br />\r\n&nbsp;</p>\r\n', '<p>Barberien<br />\r\n&nbsp;</p>\r\n', '<p>Barberian<br />\r\n&nbsp;</p>\r\n', '<p>Barbarian</p>\r\n', '5', 24, 29, '4'),
(3756, '<p>find correct spelling :</p>\r\n', '<p>Battallion<br />\r\n&nbsp;</p>\r\n', '<p>Bettalion<br />\r\n&nbsp;</p>\r\n', '<p>Battalion<br />\r\n&nbsp;</p>\r\n', '<p>Battalean</p>\r\n', '5', 24, 29, '3'),
(3757, '<p>Which of the following has greater market share of Linux SW/HW environment?</p>\r\n', '<p>Linux on z10</p>\r\n', '<p>Linux HP integrity servers</p>\r\n', '<p>Linux on AS/400 servers locate</p>\r\n', '<p>Linux on DELL Xeon</p>\r\n', '2', 13, 28, '1'),
(3758, '<p>find correct spelling :</p>\r\n', '<p>Bibliography<br />\r\n&nbsp;</p>\r\n', '<p>Bebliography<br />\r\n&nbsp;</p>\r\n', '<p>Bebeography<br />\r\n&nbsp;</p>\r\n', '<p>Bibeographe</p>\r\n', '5', 24, 29, '1'),
(3759, '<p>find correct spelling :</p>\r\n', '<p>Brethren<br />\r\n&nbsp;</p>\r\n', '<p>Brrethren<br />\r\n&nbsp;</p>\r\n', '<p>Brethran<br />\r\n&nbsp;</p>\r\n', '<p>Brathren</p>\r\n', '5', 24, 29, '1'),
(3760, '<p>find correct spelling :</p>\r\n', '<p>Bibliophilae<br />\r\n&nbsp;</p>\r\n', '<p>Bibliophile<br />\r\n&nbsp;</p>\r\n', '<p>Bebliophile<br />\r\n&nbsp;</p>\r\n', '<p>Bibleophile</p>\r\n', '5', 24, 29, '2'),
(3761, '<p>If in a certain language, POPULAR is coded as QPQVMBS, which word would be coded as GBNPVT?&nbsp;</p>\r\n', '<p>FASOUM</p>\r\n', '<p>FAMSUO</p>\r\n', '<p>FOSAUM</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>FAMOUS</p>\r\n', '5', 24, 29, '4'),
(3762, '<p>If LBAEHC is the code for BLEACH, then which of the following is coded NBOLZKMH?&nbsp;</p>\r\n', '<p>BNLOKZHM</p>\r\n', '<p>MANKYJLG</p>\r\n', '<p>LOBNHMKZ</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>OBNKZLHM</p>\r\n', '5', 24, 29, '1'),
(3763, '<p>If in a certain language, MACHINE is coded as LBB1HOD, which word would be coded as SLTMFNB?&nbsp;</p>\r\n', '<p>TMUNGOC</p>\r\n', '<p>TMUNGMC</p>\r\n', '<p>TKULGMC</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>RMSNEOA</p>\r\n', '5', 24, 29, '3'),
(3764, '<p>If ELCSUM is the code for MUSCLE, which word has the code LATIPAC?&nbsp;</p>\r\n', '<p>CAPRICE</p>\r\n', '<p>CONFESS</p>\r\n', '<p>CONDUCE</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>CAPITAL</p>\r\n', '5', 24, 29, '4'),
(3765, '<p>Which of the following is the BEST way to set up SSH(Secure Shell) for communicating between Systems without needing passwords?</p>\r\n', '<p>Use ssh-keygen for generating public-private keys.</p>\r\n', '<p>Disable passwords on specific accounts that will use SSH.</p>\r\n', '<p>Both A and B</p>\r\n', '<p>None of the above</p>\r\n', '2', 13, 28, '1'),
(3766, '<p>If ROBUST is coded as QNATRS in a certain language, which word would be coded as ZXCMP?&nbsp;</p>\r\n', '<p>AYDNQ</p>\r\n', '<p>AWDLQ</p>\r\n', '<p>BZEOR</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>YYBNO</p>\r\n', '5', 24, 29, '1'),
(3767, '<p>If in a certain language, SHIFT is coded as RFFBO, which word would be coded as LKUMB?&nbsp;</p>\r\n', '<p>MLVNC</p>\r\n', '<p>KJTLA</p>\r\n', '<p>MJVLC</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>MMXQG</p>\r\n', '5', 24, 29, '4'),
(3768, '<p>If in a certain language, REMOTE is coded as ROTEME, which word would be coded as PNIICC?&nbsp;</p>\r\n', '<p>PICINC</p>\r\n', '<p>PICCIN</p>\r\n', '<p>NPIICC</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>PICNIC</p>\r\n', '5', 24, 29, '4'),
(3769, '<p>If in a certain code, SWITCH is written as TVJSDG, which word would be written as CQFZE?&nbsp;</p>\r\n', '<p>BRAED</p>\r\n', '<p>BRADE</p>\r\n', '<p>BRDAE</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>BREAD</p>\r\n', '5', 24, 29, '4'),
(3770, '<p>If in a certain language, GRASP is coded as BMVNK, which word would be coded as CRANE?&nbsp;</p>\r\n', '<p>FUDQH</p>\r\n', '<p>HWFSJ</p>\r\n', '<p>GVERI</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>XMVIZ</p>\r\n', '5', 24, 29, '2'),
(3771, '<p>If in a certain language, UTENSIL is coded as WVGPUKN, which word would be coded as DMSFXG?&nbsp;</p>\r\n', '<p>BKQDWE</p>\r\n', '<p>BKQDWF</p>\r\n', '<p>BKQDVF</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>BKQDVE</p>\r\n', '5', 24, 29, '4'),
(3772, '<p>If banana is apple, apple is grapes, grapes is mango, mango is nuts, nuts is guava, which of the following is a yellow fruit ?&nbsp;</p>\r\n', '<p>Mango</p>\r\n', '<p>Guava</p>\r\n', '<p>Apple</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Nuts</p>\r\n', '5', 24, 29, '4'),
(3773, '<p>If cushion is called pillow, pillow is called mat, mat is called bedsheet and bedsheet is called cover, which will be spread on the floor ?&nbsp;</p>\r\n', '<p>Cover</p>\r\n', '<p>Bedsheet</p>\r\n', '<p>Mat</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Pillow</p>\r\n', '5', 24, 29, '2'),
(3774, '<p>If wall is called window, window is called door, door is called floor, floor is callled roof and roof is callled ventilator, what will a person stand on ?&nbsp;</p>\r\n', '<p>Window</p>\r\n', '<p>Wall</p>\r\n', '<p>Floor</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Roof</p>\r\n', '5', 24, 29, '4'),
(3775, '<p>If eraser is called box, box is called pencil, pencil is called sharpener and sharpener is called bag, what will a child write with ?&nbsp;</p>\r\n', '<p>Eraser</p>\r\n', '<p>Box</p>\r\n', '<p>Pencil</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Sharpener</p>\r\n', '6', 24, 29, '4'),
(3776, '<p>If clock is called television, television is called radio, radio is called oven, oven is called grinder and grinder is called iron, in what will a lady bake ?&nbsp;</p>\r\n', '<p>Radio</p>\r\n', '<p>Oven</p>\r\n', '<p>Grinder</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Iron</p>\r\n', '6', 24, 29, '3'),
(3777, '<p>If rat is called dog, dog is called mongoose, mangoose is called lion, lion is called snake and snake is called elephant, which is reared as pet ?&nbsp;</p>\r\n', '<p>Rat</p>\r\n', '<p>Dog</p>\r\n', '<p>Mongoose</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Lion</p>\r\n', '6', 24, 29, '3'),
(3778, '<p>Which of the following supports for creating a Linux VPN (Virtual Private Network)?</p>\r\n', '<p>RC2</p>\r\n', '<p>3DES</p>\r\n', '<p>chap</p>\r\n', '<p>NTLMv2</p>\r\n', '2', 13, 28, '2'),
(3779, '<p>Synonym of ABANDON</p>\r\n', '<p>Try<br />\r\n&nbsp;</p>\r\n', '<p>Join<br />\r\n&nbsp;</p>\r\n', '<p>Keep with<br />\r\n&nbsp;</p>\r\n', '<p>Forsake</p>\r\n', '6', 24, 29, '4'),
(3780, '<p>Synonym of ABDICATE</p>\r\n', '<p>Join<br />\r\n&nbsp;</p>\r\n', '<p>Search<br />\r\n&nbsp;</p>\r\n', '<p>Abandon<br />\r\n&nbsp;</p>\r\n', '<p>Advance</p>\r\n', '6', 24, 29, '3'),
(3781, '<p>Synonym of ABSOLUTE</p>\r\n', '<p>Division<br />\r\n&nbsp;</p>\r\n', '<p>Complete<br />\r\n&nbsp;</p>\r\n', '<p>Small<br />\r\n&nbsp;</p>\r\n', '<p>Half</p>\r\n', '6', 24, 29, '2'),
(3782, '<p>Synonym of ABSTAIN</p>\r\n', '<p>Refrain<br />\r\n&nbsp;</p>\r\n', '<p>Ingest<br />\r\n&nbsp;</p>\r\n', '<p>Take in<br />\r\n&nbsp;</p>\r\n', '<p>Consume</p>\r\n', '6', 24, 29, '1'),
(3783, '<p>Synonym of ACCORD</p>\r\n', '<p>Confer<br />\r\n&nbsp;</p>\r\n', '<p>Refusal<br />\r\n&nbsp;</p>\r\n', '<p>Dissension<br />\r\n&nbsp;</p>\r\n', '<p>Opposition</p>\r\n', '6', 24, 29, '1'),
(3784, '<p>Synonym of ACQUAINT</p>\r\n', '<p>Withhold<br />\r\n&nbsp;</p>\r\n', '<p>Conceal<br />\r\n&nbsp;</p>\r\n', '<p>Familiarise<br />\r\n&nbsp;</p>\r\n', '<p>Risky</p>\r\n', '6', 24, 29, '3'),
(3785, '<p>Synonym of AGGRAVATE</p>\r\n', '<p>Decline<br />\r\n&nbsp;</p>\r\n', '<p>Acquire<br />\r\n&nbsp;</p>\r\n', '<p>Excited<br />\r\n&nbsp;</p>\r\n', '<p>Irritate</p>\r\n', '6', 24, 29, '4'),
(3786, '<p>Applications written to provide a GUI shell for Unix and Linux are called</p>\r\n', '<p>DOS</p>\r\n', '<p>x windows</p>\r\n', '<p>OS/2</p>\r\n', '<p>Vista</p>\r\n', '2', 13, 28, '2'),
(3787, '<p>Pointing to a man in a photograph, a woman said, &quot;His brother&#39;s father is the only son of my grandfather.&quot; How is the woman related to the man in the photograph?&nbsp;</p>\r\n', '<p>Sister</p>\r\n', '<p>Aunt</p>\r\n', '<p>Grandmother</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Daughter</p>\r\n', '7', 30, 29, '1'),
(3788, '<p>Which command is used to find data files, programs, directories that match the search argument?</p>\r\n', '<p>find</p>\r\n', '<p>search</p>\r\n', '<p>locate</p>\r\n', '<p>browse</p>\r\n', '2', 13, 28, '3'),
(3789, '<p>A told B,&quot;The girl I met yesterday was the youngest daughter of the brother&ndash;in&ndash;law of my friend&rsquo;s mother.&quot; How is the girl related to A&#39;s friend?&nbsp;</p>\r\n', '<p>Niece</p>\r\n', '<p>Cousin</p>\r\n', '<p>Friend</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Daughter</p>\r\n', '7', 30, 29, '2'),
(3790, '<p>A and B are young ones of C. If C is the father of A but B is not the son of C. How are B and C related&nbsp;</p>\r\n', '<p>Niece and Uncle</p>\r\n', '<p>Daughter and Father</p>\r\n', '<p>Niece and Uncle</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Daughter and Mother</p>\r\n', '7', 30, 29, '2'),
(3791, '<p>C has two children A and B, if A is his son, B must be his daughter.<br />\r\n&nbsp;</p>\r\n', '<p>X is the sister of Z.</p>\r\n', '<p>B has one daughter.</p>\r\n', '<p>Y is the son of A.</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>B is the mother of Z.</p>\r\n', '7', 30, 29, '3'),
(3792, '<p>A man pointing to a photograph says. &quot;The lady in the photograph is my nephew&rsquo;s maternal grandmother.&quot; How is the lady in the photograph related to the man&rsquo;s sister who has no other sister?&nbsp;</p>\r\n', '<p>Mother&ndash;in&ndash;law</p>\r\n', '<p>Cousin</p>\r\n', '<p>Sister&ndash;in&ndash;law</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Mother</p>\r\n', '7', 30, 29, '4'),
(3793, '<p>F is the brother of A, C is the daughter of A, K is the sister of F and G is the brother of C then who is the uncle of G?&nbsp;</p>\r\n', '<p>C</p>\r\n', '<p>A</p>\r\n', '<p>K</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '7', 30, 29, '2'),
(3794, '<p>Saving open files, flush the system cache and other necessary system maintenance are allowed by.</p>\r\n', '<p>restarting the system</p>\r\n', '<p>rebooting the system</p>\r\n', '<p>logging off the system</p>\r\n', '<p>shutting down the system</p>\r\n', '2', 13, 28, '3'),
(3795, '<p>Six members of a family ABCDE and F are travelling together. B is the son of C but C is not the mother of B. A and C are married couple. E is the brother of C. D is the daughter of A. F is the brother of B. How many male members are there in the family ?&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>4</p>\r\n', '<p>3</p>\r\n', '<p>2</p>\r\n', '<p>1</p>\r\n', '7', 30, 29, '1'),
(3796, '<p>(I). A, B, C, D, E and F are six members of a family.<br />\r\n(II). One couple has parents and their children in the family.<br />\r\n(III). A is the son of C and E is the daughter of A.<br />\r\n(IV). D is the daughter of F who is the mother of E.<br />\r\nWhich of the following pairs is the parents of the couple ?&nbsp;</p>\r\n', '<p>CF</p>\r\n', '<p>AB</p>\r\n', '<p>AF</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>BC</p>\r\n', '8', 30, 29, '4'),
(3797, '<p>A woman introduces a man as the son of the brother of her mother. How is the man related to the woman?&nbsp;</p>\r\n', '<p>Uncle</p>\r\n', '<p>Grandson</p>\r\n', '<p>Cousin</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Son</p>\r\n', '8', 30, 29, '3'),
(3798, '<p>Read each sentence to find out whether there is any grammatical error or idiomatic error in it. The error, if any,will be in one part of the sentence. The letter of that part is the answer. (Ignore errors of punctuation, if any.)<br />\r\n<br />\r\n&nbsp;</p>\r\n', '<p>We have received many</p>\r\n', '<p>of the letters from customers</p>\r\n', '<p>asking us to extend</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>the deadline to repay their loans</p>\r\n', '8', 30, 29, '2'),
(3799, '<p>Read each sentence to find out whether there is any grammatical error or idiomatic error in it. The error, if any,will be in one part of the sentence. The letter of that part is the answer. (Ignore errors of punctuation, if any.)</p>\r\n', '<p>Since I had lived there</p>\r\n', '<p>for many years the villagers</p>\r\n', '<p>were very comfortable talked</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>to me about their problems</p>\r\n', '8', 30, 29, '3'),
(3800, '<p>&nbsp;Read each sentence to find out whether there is any grammatical error or idiomatic error in it. The error, if any,will be in one part of the sentence. The letter of that part is the answer. (Ignore errors of punctuation, if any.)</p>\r\n', '<p>We have been under</p>\r\n', '<p>a lot of pressure to</p>\r\n', '<p>open fifty new stores</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>by the ending of the year</p>\r\n', '8', 30, 29, '4'),
(3801, '<p>Read each sentence to find out whether there is any grammatical error or idiomatic error in it. The error, if any,will be in one part of the sentence. The letter of that part is the answer. (Ignore errors of punctuation, if any.)</p>\r\n', '<p>The company is in debt</p>\r\n', '<p>and has been unable</p>\r\n', '<p>to pay their employees&rsquo; salaries</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>for the past six months</p>\r\n', '8', 30, 29, '3'),
(3802, '<p>Read each sentence to find out whether there is any grammatical error or idiomatic error in it. The error, if any,will be in one part of the sentence. The letter of that part is the answer. (Ignore errors of punctuation, if any.)</p>\r\n', '<p>This is turned out to be</p>\r\n', '<p>one of our most successful projects</p>\r\n', '<p>and we have made quite</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>a large profit from it</p>\r\n', '8', 30, 29, '1'),
(3803, '<p>I am tired as I am working since 7 O&#39;clock in the morning.</p>\r\n', '<p>I was working<br />\r\n&nbsp;</p>\r\n', '<p>I have been working<br />\r\n&nbsp;</p>\r\n', '<p>I had been working<br />\r\n&nbsp;</p>\r\n', '<p>I will be working</p>\r\n', '1', 21, 29, '2'),
(3804, '<p>Jeans was not permitted in out college.</p>\r\n', '<p>were<br />\r\n&nbsp;</p>\r\n', '<p>had<br />\r\n&nbsp;</p>\r\n', '<p>will<br />\r\n&nbsp;</p>\r\n', '<p>have</p>\r\n', '1', 21, 29, '1'),
(3805, '<p>He suggested that, we should be bound by a code of conduct, isn&#39;t it ?</p>\r\n', '<p>Shouldn&#39;t we<br />\r\n&nbsp;</p>\r\n', '<p>is it<br />\r\n&nbsp;</p>\r\n', '<p>aren&#39;t we<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '1', 21, 29, '1'),
(3806, '<p>The furniture in this room are made of teak.</p>\r\n', '<p>have<br />\r\n&nbsp;</p>\r\n', '<p>had<br />\r\n&nbsp;</p>\r\n', '<p>is<br />\r\n&nbsp;</p>\r\n', '<p>None of above</p>\r\n', '1', 21, 29, '3'),
(3807, '<p>Sheela told her teacher to explain the chapter once again.</p>\r\n', '<p>ordered her teacher<br />\r\n&nbsp;</p>\r\n', '<p>invited her teacher<br />\r\n&nbsp;</p>\r\n', '<p>asked her teacher<br />\r\n&nbsp;</p>\r\n', '<p>said to her teacher</p>\r\n', '1', 21, 29, '3'),
(3808, '<p>You should avoid to make such stupid mistakes.</p>\r\n', '<p>avoid to made<br />\r\n&nbsp;</p>\r\n', '<p>avoid make<br />\r\n&nbsp;</p>\r\n', '<p>avoid making<br />\r\n&nbsp;</p>\r\n', '<p>avoid to have</p>\r\n', '1', 21, 29, '3'),
(3809, '<p>If you come across my keys, bring it to me, can you?</p>\r\n', '<p>will you ?<br />\r\n&nbsp;</p>\r\n', '<p>don&#39;t you ?<br />\r\n&nbsp;</p>\r\n', '<p>isn&#39;t it ?<br />\r\n&nbsp;</p>\r\n', '<p>No improvement</p>\r\n', '1', 21, 29, '1'),
(3810, '<p>Due to rain, cricket ground was covered by a carpet.</p>\r\n', '<p>covered along<br />\r\n&nbsp;</p>\r\n', '<p>covered into<br />\r\n&nbsp;</p>\r\n', '<p>covered with<br />\r\n&nbsp;</p>\r\n', '<p>covered upon</p>\r\n', '1', 21, 29, '3'),
(3811, '<p>AZ, GT, MN, ?, YB&nbsp;</p>\r\n', '<p>KF</p>\r\n', '<p>RX</p>\r\n', '<p>SH</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>TS</p>\r\n', '1', 21, 29, '3'),
(3812, '<p>AZ, CX, FU, ?&nbsp;</p>\r\n', '<p>IR</p>\r\n', '<p>IV</p>\r\n', '<p>JQ</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>KP</p>\r\n', '1', 21, 29, '3'),
(3813, '<p>DKY, FJW, HIU, JHS, ?&nbsp;</p>\r\n', '<p>KGR</p>\r\n', '<p>LFQ</p>\r\n', '<p>KFR</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>LGQ</p>\r\n', '1', 21, 29, '4'),
(3814, '<p>?, SIY, OEU, KAQ, GWM, CSI&nbsp;</p>\r\n', '<p>WNE</p>\r\n', '<p>WNB</p>\r\n', '<p>WNE</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>WMC</p>\r\n', '1', 21, 29, '4'),
(3815, '<p>The dmesg command<br />\r\n&nbsp;</p>\r\n', '<p>Shows user login logoff attempts<br />\r\n&nbsp;</p>\r\n', '<p>Shows the syslog file for info messages<br />\r\n&nbsp;</p>\r\n', '<p>kernel log messages<br />\r\n&nbsp;</p>\r\n', '<p>Shows the daemon log messages</p>\r\n', '3', 14, 28, '3'),
(3816, '<p>The command &ldquo;mknod myfifo b 4 16&rdquo;<br />\r\n&nbsp;</p>\r\n', '<p>Will create a block device if user is root<br />\r\n&nbsp;</p>\r\n', '<p>Will create a block device for all users<br />\r\n&nbsp;</p>\r\n', '<p>Will create a FIFO if user is not root<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '3', 14, 28, '1'),
(3817, '<p>Which command is used to set terminal IO characteristic?<br />\r\n&nbsp;</p>\r\n', '<p>tty<br />\r\n&nbsp;</p>\r\n', '<p>ctty<br />\r\n&nbsp;</p>\r\n', '<p>ptty<br />\r\n&nbsp;</p>\r\n', '<p>stty</p>\r\n', '3', 14, 28, '4'),
(3818, '<p>Which command is used to record a user login session in a file</p>\r\n', '<p>macro<br />\r\n&nbsp;</p>\r\n', '<p>read<br />\r\n&nbsp;</p>\r\n', '<p>script<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 14, 28, '3'),
(3819, '<p>Which command is used to display the operating system name</p>\r\n', '<p>os<br />\r\n&nbsp;</p>\r\n', '<p>Unix<br />\r\n&nbsp;</p>\r\n', '<p>kernel<br />\r\n&nbsp;</p>\r\n', '<p>uname</p>\r\n', '3', 14, 28, '4'),
(3820, '<p>Which command is used to display the unix version<br />\r\n&nbsp;</p>\r\n', '<p>uname -r<br />\r\n&nbsp;</p>\r\n', '<p>uname -n<br />\r\n&nbsp;</p>\r\n', '<p>uname -t<br />\r\n&nbsp;</p>\r\n', '<p>kernel</p>\r\n', '3', 14, 28, '1'),
(3821, '<p>Which command is used to print a file</p>\r\n', '<p>print<br />\r\n&nbsp;</p>\r\n', '<p>ptr</p>\r\n', '<p>lpr</p>\r\n', '<p>none of the above</p>\r\n', '3', 14, 28, '3'),
(3822, '<p>Using which command you find resource limits to the session?<br />\r\n&nbsp;</p>\r\n', '<p>rlimit<br />\r\n&nbsp;</p>\r\n', '<p>ulimit<br />\r\n&nbsp;</p>\r\n', '<p>setrlimit<br />\r\n&nbsp;</p>\r\n', '<p>getrlimit</p>\r\n', '3', 14, 28, '2'),
(3823, '<p>Which option of ls command used to view file inode number<br />\r\n&nbsp;</p>\r\n', '<p>&ndash;l<br />\r\n&nbsp;</p>\r\n', '<p>-o<br />\r\n&nbsp;</p>\r\n', '<p>&ndash;a<br />\r\n&nbsp;</p>\r\n', '<p>&ndash;i</p>\r\n', '3', 14, 28, '4'),
(3824, '<p>find / -name &lsquo;*&rsquo; will<br />\r\n&nbsp;</p>\r\n', '<p>List all files and directories recursively starting from /<br />\r\n&nbsp;</p>\r\n', '<p>List a file named * in /<br />\r\n&nbsp;</p>\r\n', '<p>List all files in / directory<br />\r\n&nbsp;</p>\r\n', '<p>List all files and directories in / directory</p>\r\n', '3', 14, 28, '1'),
(3825, '<p>Which command is used to display the octal value of the text<br />\r\n&nbsp;</p>\r\n', '<p>octal<br />\r\n&nbsp;</p>\r\n', '<p>text_oct<br />\r\n&nbsp;</p>\r\n', '<p>oct<br />\r\n&nbsp;</p>\r\n', '<p>od</p>\r\n', '3', 14, 28, '4'),
(3826, '<p>Which command is used to view compressed text file contents<br />\r\n&nbsp;</p>\r\n', '<p>cat<br />\r\n&nbsp;</p>\r\n', '<p>type<br />\r\n&nbsp;</p>\r\n', '<p>zcat</p>\r\n', '<p>print</p>\r\n', '3', 14, 28, '3'),
(3827, '<p>Which command changes a file&rsquo;s group owner<br />\r\n&nbsp;</p>\r\n', '<p>cgrp<br />\r\n&nbsp;</p>\r\n', '<p>chgrp<br />\r\n&nbsp;</p>\r\n', '<p>change<br />\r\n&nbsp;</p>\r\n', '<p>group</p>\r\n', '3', 14, 28, '2'),
(3828, '<p>Which command is used to extract intermediate result in a pipeline<br />\r\n&nbsp;</p>\r\n', '<p>tee<br />\r\n&nbsp;</p>\r\n', '<p>extract<br />\r\n&nbsp;</p>\r\n', '<p>exec<br />\r\n&nbsp;</p>\r\n', '<p>none of the above</p>\r\n', '3', 14, 28, '1'),
(3829, '<p>Which command is used to extract a column from a text file<br />\r\n&nbsp;</p>\r\n', '<p>paste<br />\r\n&nbsp;</p>\r\n', '<p>get<br />\r\n&nbsp;</p>\r\n', '<p>cut</p>\r\n', '<p>tar</p>\r\n', '3', 14, 28, '3'),
(3830, '<p>Which command is used to display disk consumption of a specific directory<br />\r\n&nbsp;</p>\r\n', '<p>du<br />\r\n&nbsp;</p>\r\n', '<p>ds<br />\r\n&nbsp;</p>\r\n', '<p>dd<br />\r\n&nbsp;</p>\r\n', '<p>dds</p>\r\n', '3', 14, 28, '1'),
(3831, '<p>Which command is used to perform backup in unix?<br />\r\n&nbsp;</p>\r\n', '<p>backup<br />\r\n&nbsp;</p>\r\n', '<p>cpio<br />\r\n&nbsp;</p>\r\n', '<p>zip<br />\r\n&nbsp;</p>\r\n', '<p>gzip</p>\r\n', '3', 14, 28, '2'),
(3832, '<p>Which command creates an empty file if file does not exist?<br />\r\n&nbsp;</p>\r\n', '<p>cat<br />\r\n&nbsp;</p>\r\n', '<p>touch<br />\r\n&nbsp;</p>\r\n', '<p>ed<br />\r\n&nbsp;</p>\r\n', '<p>read</p>\r\n', '3', 14, 28, '2'),
(3833, '<p>Which option of rm command is used to remove a directory with all its subdirectories</p>\r\n', '<p>&ndash;b<br />\r\n&nbsp;</p>\r\n', '<p>&ndash;o<br />\r\n&nbsp;</p>\r\n', '<p>&ndash;p<br />\r\n&nbsp;</p>\r\n', '<p>&ndash;r</p>\r\n', '3', 14, 28, '4'),
(3834, '<p>Which command is used to identify file type?<br />\r\n&nbsp;</p>\r\n', '<p>Type<br />\r\n&nbsp;</p>\r\n', '<p>File<br />\r\n&nbsp;</p>\r\n', '<p>Finfo<br />\r\n&nbsp;</p>\r\n', '<p>Info</p>\r\n', '1', 14, 28, '2'),
(3835, '<p>Command used to determine the path of an executable file is<br />\r\n&nbsp;</p>\r\n', '<p>which<br />\r\n&nbsp;</p>\r\n', '<p>where<br />\r\n&nbsp;</p>\r\n', '<p>wexec<br />\r\n&nbsp;</p>\r\n', '<p>what</p>\r\n', '3', 14, 28, '1'),
(3836, '<p>Command used to count number of character in a file is<br />\r\n&nbsp;</p>\r\n', '<p>grep</p>\r\n', '<p>wc<br />\r\n&nbsp;</p>\r\n', '<p>count<br />\r\n&nbsp;</p>\r\n', '<p>cut</p>\r\n', '3', 14, 28, '2'),
(3837, '<p>Which of these commands could you use to show one page of output at a time?<br />\r\n&nbsp;</p>\r\n', '<p>less<br />\r\n&nbsp;</p>\r\n', '<p>sed<br />\r\n&nbsp;</p>\r\n', '<p>pause<br />\r\n&nbsp;</p>\r\n', '<p>grep</p>\r\n', '3', 14, 28, '1'),
(3838, '<p>Which commands will give you information about how much disk space each file in the current directory uses?<br />\r\n&nbsp;</p>\r\n', '<p>Is -l<br />\r\n&nbsp;</p>\r\n', '<p>ls -la</p>\r\n', '<p>du<br />\r\n&nbsp;</p>\r\n', '<p>ls -a</p>\r\n', '3', 14, 28, '3'),
(3839, '<p>Which of the following command output contains userid?<br />\r\n&nbsp;</p>\r\n', '<p>ls<br />\r\n&nbsp;</p>\r\n', '<p>help<br />\r\n&nbsp;</p>\r\n', '<p>date</p>\r\n', '<p>ls &ndash;l</p>\r\n', '3', 14, 28, '4'),
(3840, '<p>Which command is used to display all the files including hidden files in your current and its subdirectories ?<br />\r\n&nbsp;</p>\r\n', '<p>ls &ndash;aR</p>\r\n', '<p>ls &ndash;a<br />\r\n&nbsp;</p>\r\n', '<p>ls &ndash;R<br />\r\n&nbsp;</p>\r\n', '<p>ls &ndash;l</p>\r\n', '3', 14, 28, '1'),
(3841, '<p>Which of the following commands can be used to copy files across systems?<br />\r\n&nbsp;</p>\r\n', '<p>ssh<br />\r\n&nbsp;</p>\r\n', '<p>telnet</p>\r\n', '<p>rsh<br />\r\n&nbsp;</p>\r\n', '<p>ftp</p>\r\n', '1', 14, 28, '4'),
(3842, '<p>pwd command displays<br />\r\n&nbsp;</p>\r\n', '<p>user password<br />\r\n&nbsp;</p>\r\n', '<p>password file content<br />\r\n&nbsp;</p>\r\n', '<p>present working directory<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '3', 15, 28, '3'),
(3843, '<p>Which of the following commands can be used to change default permissions for files and directories at the time of creation<br />\r\n&nbsp;</p>\r\n', '<p>Chmod<br />\r\n&nbsp;</p>\r\n', '<p>Chown<br />\r\n&nbsp;</p>\r\n', '<p>Umask<br />\r\n&nbsp;</p>\r\n', '<p>Chgrp</p>\r\n', '3', 14, 28, '3'),
(3844, '<p>Which of the following commands can be used to change default permissions for files and directories at the time of creation<br />\r\n&nbsp;</p>\r\n', '<p>Chmod</p>\r\n', '<p>chown</p>\r\n', '<p>unmask</p>\r\n', '<p>Chgrp</p>\r\n', '3', 14, 28, '3'),
(3845, '<p>Which tar command option is used to list the files in a tape archive format?<br />\r\n&nbsp;</p>\r\n', '<p>cvf<br />\r\n&nbsp;</p>\r\n', '<p>tvf<br />\r\n&nbsp;</p>\r\n', '<p>xvf<br />\r\n&nbsp;</p>\r\n', '<p>ovf</p>\r\n', '3', 14, 28, '2'),
(3846, '<p>Write the command to display the current date in the form dd/mm/yyyy.<br />\r\n&nbsp;</p>\r\n', '<p>date +%d/%m/%Y<br />\r\n&nbsp;</p>\r\n', '<p>date +&rdquo;%d/%m/%Y&rdquo;<br />\r\n&nbsp;</p>\r\n', '<p>date +/%d/%m/20%y<br />\r\n&nbsp;</p>\r\n', '<p>date +&rdquo;/%d/%m/20%y&rdquo;</p>\r\n', '4', 15, 28, '1'),
(3847, '<p>The command syntax to display the file &lsquo;sample.txt&rsquo; one page at a time is<br />\r\n&nbsp;</p>\r\n', '<p>man sample.txt&gt;more<br />\r\n&nbsp;</p>\r\n', '<p>cat sample.txt&lt;more<br />\r\n&nbsp;</p>\r\n', '<p>cat sample.txt|more<br />\r\n&nbsp;</p>\r\n', '<p>None of the above</p>\r\n', '4', 15, 28, '3'),
(3848, '<p>Which one shows the name of the operating system?<br />\r\n&nbsp;</p>\r\n', '<p>uname -n<br />\r\n&nbsp;</p>\r\n', '<p>uname -r<br />\r\n&nbsp;</p>\r\n', '<p>uname -o<br />\r\n&nbsp;</p>\r\n', '<p>uname &ndash;m</p>\r\n', '4', 15, 28, '3'),
(3849, '<p>How to execute ls command inside a vi editor?<br />\r\n&nbsp;</p>\r\n', '<p>!ls:ls<br />\r\n&nbsp;</p>\r\n', '<p>:ls</p>\r\n', '<p>:!ls<br />\r\n&nbsp;</p>\r\n', '<p>we can&rsquo;t execute</p>\r\n', '4', 15, 28, '3'),
(3850, '<p>Which command gives the first byte where the difference is in the file1 &amp; file2?<br />\r\n&nbsp;</p>\r\n', '<p>diff<br />\r\n&nbsp;</p>\r\n', '<p>cmp<br />\r\n&nbsp;</p>\r\n', '<p>comm<br />\r\n&nbsp;</p>\r\n', '<p>ls -a</p>\r\n', '4', 15, 28, '2'),
(3851, '<p>To open a file file1 with cursor at line number 4</p>\r\n', '<p>vi +num file1<br />\r\n&nbsp;</p>\r\n', '<p>vi +set num file1<br />\r\n&nbsp;</p>\r\n', '<p>vi + &ldquo;set num&rdquo; file1<br />\r\n&nbsp;</p>\r\n', '<p>vi +/se nu file1</p>\r\n', '4', 15, 28, '1'),
(3852, '<p>sed is a command typically used for</p>\r\n', '<p>Perform complex calculations<br />\r\n&nbsp;</p>\r\n', '<p>Perform FIFO based non-blocking I/O<br />\r\n&nbsp;</p>\r\n', '<p>Modify/print selective contents of a file<br />\r\n&nbsp;</p>\r\n', '<p>None of the mentioned</p>\r\n', '4', 15, 28, '3'),
(3853, '<p>What communication command provides communication to another user logged on by writing to the bottom of their terminal?<br />\r\n&nbsp;</p>\r\n', '<p>talk<br />\r\n&nbsp;</p>\r\n', '<p>write<br />\r\n&nbsp;</p>\r\n', '<p>chat<br />\r\n&nbsp;</p>\r\n', '<p>transmit</p>\r\n', '4', 15, 28, '1'),
(3854, '<p>Which screen manipulation command sets the screen back to normal?<br />\r\n&nbsp;</p>\r\n', '<p>tput cup<br />\r\n&nbsp;</p>\r\n', '<p>tput smso<br />\r\n&nbsp;</p>\r\n', '<p>tput rmso</p>\r\n', '<p>tput blink</p>\r\n', '4', 15, 28, '3'),
(3855, '<p>When the return value of any function is not specified within the function, what function returns?</p>\r\n', '<p>nothing<br />\r\n&nbsp;</p>\r\n', '<p>exit status of the last command executed</p>\r\n', '<p>0<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 15, 28, '2'),
(3856, '<p>Parameters can be passed to a function<br />\r\n&nbsp;</p>\r\n', '<p>by using the parameter variables $1, $2, $3&hellip;&hellip;.<br />\r\n&nbsp;</p>\r\n', '<p>by using the environment variables<br />\r\n&nbsp;</p>\r\n', '<p>both (a) and (b)</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 15, 28, '1'),
(3857, '<p>Which of the following command provides the list of the functions defined in the login session?<br />\r\n&nbsp;</p>\r\n', '<p>declare -f<br />\r\n&nbsp;</p>\r\n', '<p>declare -F<br />\r\n&nbsp;</p>\r\n', '<p>both (a) and (b)<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 15, 28, '3'),
(3858, '<p>The keyword &lsquo;local&rsquo; is used</p>\r\n', '<p>to define a variable within a function for its local scope</p>\r\n', '<p>to redefine any global variable<br />\r\n&nbsp;</p>\r\n', '<p>this is not a valid keyword<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 15, 28, '1');
INSERT INTO `questions` (`question_id`, `question`, `option1`, `option2`, `option3`, `option4`, `difficulty_level`, `expert_time`, `skill_id`, `answer`) VALUES
(3859, '<p>Functions improves the shell&rsquo;s programmability significantly, because<br />\r\n&nbsp;</p>\r\n', '<p>when we invoke a function, it is already in the shell&rsquo;s memory, therefore a function runs faster than seperate scripts<br />\r\n&nbsp;</p>\r\n', '<p>function provides a piece of code for repetative tasks<br />\r\n&nbsp;</p>\r\n', '<p>both (a) and (b)</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 15, 28, '3'),
(3860, '<p>What is the output of this program?</p>\r\n\r\n<p>#!/bin/sh<br />\r\nvar=&quot;Sanfoundry&quot;<br />\r\nsan_function() {<br />\r\nvar=&quot;Linux&quot;<br />\r\necho $var<br />\r\n}<br />\r\nsan_function<br />\r\nexit 0</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>Sanfoundry<br />\r\n&nbsp;</p>\r\n', '<p>Linux<br />\r\n&nbsp;</p>\r\n', '<p>command not found<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 15, 28, '2'),
(3861, '<p>What is the output of this program?</p>\r\n\r\n<p>#!/bin/sh<br />\r\nsan_function() {<br />\r\necho &quot;Welcome to the Sanfoundry&quot;<br />\r\nprintf &quot;World of Linux\\n&quot;<br />\r\n}<br />\r\nunset -f san_function<br />\r\nsan_function<br />\r\nexit 0</p>\r\n', '<p>Welcome to the Sanfoundry</p>\r\n', '<p>World of Linux<br />\r\n&nbsp;</p>\r\n', '<p>both (a) and (b)<br />\r\n&nbsp;</p>\r\n', '<p>nothing will print</p>\r\n', '4', 15, 28, '4'),
(3862, '<p>What is the output of this program?</p>\r\n\r\n<p>#!/bin/bash<br />\r\nfunction san_function1 {<br />\r\necho &quot;This is first function&quot;<br />\r\n}<br />\r\nsan_function2() {<br />\r\necho &quot;This is second function&quot;<br />\r\n}<br />\r\nsan_function1<br />\r\nsan_function2<br />\r\nexit 0</p>\r\n', '<p>This is the first function<br />\r\n&nbsp;</p>\r\n', '<p>This is the second function<br />\r\n&nbsp;</p>\r\n', '<p>This is the first function<br />\r\nThis is the second function<br />\r\n&nbsp;</p>\r\n', '<p>program will generate error because first function definition is not correct<br />\r\n&nbsp;</p>\r\n', '4', 15, 28, '3'),
(3863, '<p>What is the output of this program?</p>\r\n\r\n<p>#!/bin/sh<br />\r\necho &quot;Just call the function&quot;<br />\r\nsan_function<br />\r\nsan_function() {<br />\r\necho &quot;This is a function&quot;<br />\r\n}<br />\r\nexit 0</p>\r\n\r\n<p>&nbsp;</p>\r\n', '<p>only first string will print without any error<br />\r\n&nbsp;</p>\r\n', '<p>only second string will print without any error<br />\r\n&nbsp;</p>\r\n', '<p>both strings will print<br />\r\n&nbsp;</p>\r\n', '<p>none of the mentioned</p>\r\n', '4', 15, 28, '4'),
(3864, '<p>What is the output of this program?</p>\r\n\r\n<p>#!/bin/sh<br />\r\nsan_function1() {<br />\r\na=5<br />\r\necho &quot;This is the first function&quot;<br />\r\nsan_function2<br />\r\n}<br />\r\nsan_function2() {<br />\r\necho &quot;This is the second function&quot;<br />\r\nsan_function3<br />\r\n}<br />\r\nsan_function3() {<br />\r\necho &quot;This is the third function&quot;<br />\r\n}<br />\r\nsan_function1<br />\r\nexit 0</p>\r\n', '<p>This is the first function<br />\r\nThis is the second function<br />\r\nThis is the third function</p>\r\n', '<p>This is the first function<br />\r\nThis is the third function<br />\r\nThis is the second function<br />\r\n&nbsp;</p>\r\n', '<p>This is the second function<br />\r\nThis is the first function<br />\r\nThis is the third function<br />\r\n&nbsp;</p>\r\n', '<p>This is the third function<br />\r\nThis is the first function<br />\r\nThis is the second function</p>\r\n', '4', 5, 28, '1');

-- --------------------------------------------------------

--
-- Table structure for table `responses`
--

CREATE TABLE IF NOT EXISTS `responses` (
  `userID` int(5) NOT NULL,
  `questionID` int(5) NOT NULL,
  `answer` enum('0','1','2','3','4') NOT NULL,
  `score` float NOT NULL,
  `timeConsumed` int(3) NOT NULL,
  `correct` tinyint(1) NOT NULL,
  `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `responses`
--

INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(20, 2604, '1', -1.08, 16, 0, '2017-09-13 04:59:36'),
(20, 2609, '2', 0.826875, 19, 1, '2017-09-13 04:59:56'),
(12, 1170, '2', 0.046875, 21, 1, '2017-09-13 04:59:59'),
(13, 1210, '0', -0.00520833, 24, 0, '2017-09-13 05:00:00'),
(20, 2612, '1', 1.92, 8, 1, '2017-09-13 05:00:04'),
(28, 1194, '1', 0.646684, 15, 1, '2017-09-13 05:00:08'),
(13, 1177, '2', 1.04752, 9, 1, '2017-09-13 05:00:10'),
(17, 1183, '2', 0.75, 11, 1, '2017-09-13 05:00:11'),
(20, 2602, '2', -1.92, 8, 0, '2017-09-13 05:00:12'),
(10, 1183, '2', 0.00619835, 21, 1, '2017-09-13 05:00:16'),
(20, 2607, '4', 2.43, 4, 1, '2017-09-13 05:00:16'),
(12, 1195, '0', -0.0075, 20, 0, '2017-09-13 05:00:19'),
(20, 2601, '2', 2.1675, 6, 1, '2017-09-13 05:00:22'),
(14, 2601, '2', 2.29688, 5, 1, '2017-09-13 05:00:25'),
(1, 2608, '3', 1.6875, 10, 1, '2017-09-13 05:00:27'),
(28, 1170, '2', 0.130208, 19, 1, '2017-09-13 05:00:27'),
(10, 1194, '1', 0.979592, 12, 1, '2017-09-13 05:00:28'),
(21, 1174, '3', 0.284024, 18, 1, '2017-09-13 05:00:29'),
(7, 723, '1', 2.37037, 4, 1, '2017-09-13 05:00:29'),
(19, 1173, '2', 0.0075, 19, 1, '2017-09-13 05:00:30'),
(7, 472, '3', -2.1675, 6, 0, '2017-09-13 05:00:35'),
(20, 2615, '1', 1.36688, 13, 1, '2017-09-13 05:00:35'),
(17, 1227, '0', -0.00520833, 24, 0, '2017-09-13 05:00:35'),
(11, 1190, '0', -0.00382653, 28, 0, '2017-09-13 05:00:35'),
(14, 2604, '2', 1.6875, 10, 1, '2017-09-13 05:00:36'),
(1, 2613, '4', 1.6875, 10, 1, '2017-09-13 05:00:37'),
(4, 1261, '0', -0.00207756, 38, 0, '2017-09-13 05:00:38'),
(13, 1203, '0', -0.00333333, 30, 0, '2017-09-13 05:00:40'),
(3, 1886, '3', 0.391204, 23, 1, '2017-09-13 05:00:43'),
(28, 1276, '1', 0.75, 16, 1, '2017-09-13 05:00:43'),
(8, 1184, '4', 0.880208, 11, 1, '2017-09-13 05:00:43'),
(12, 1227, '0', -0.00520833, 24, 0, '2017-09-13 05:00:44'),
(17, 1218, '3', -0.9075, 9, 0, '2017-09-13 05:00:44'),
(10, 1177, '2', 0.22314, 16, 1, '2017-09-13 05:00:44'),
(1, 2610, '3', 1.92, 8, 1, '2017-09-13 05:00:45'),
(19, 1297, '3', 1.6875, 15, 1, '2017-09-13 05:00:45'),
(20, 2614, '4', 1.6875, 10, 1, '2017-09-13 05:00:46'),
(21, 1195, '0', -0.0075, 20, 0, '2017-09-13 05:00:49'),
(22, 1183, '0', -0.00619835, 22, 0, '2017-09-13 05:00:51'),
(2, 1895, '4', 0.277883, 32, 1, '2017-09-13 05:00:51'),
(11, 1184, '4', 0.421875, 15, 1, '2017-09-13 05:00:51'),
(20, 2608, '3', 2.1675, 6, 1, '2017-09-13 05:00:52'),
(7, 733, '3', 0.991875, 17, 1, '2017-09-13 05:00:52'),
(14, 2614, '3', -0.9075, 18, 0, '2017-09-13 05:00:54'),
(10, 1190, '4', 1.38138, 9, 1, '2017-09-13 05:00:54'),
(20, 2611, '3', 2.29688, 5, 1, '2017-09-13 05:00:57'),
(19, 1190, '4', 1.10587, 11, 1, '2017-09-13 05:00:57'),
(4, 1173, '0', -0.0075, 20, 0, '2017-09-13 05:00:58'),
(12, 1172, '1', -0.0675, 17, 0, '2017-09-13 05:01:01'),
(11, 1218, '1', -0.6075, 11, 0, '2017-09-13 05:01:02'),
(6, 1261, '0', -0.00207756, 38, 0, '2017-09-13 05:01:02'),
(21, 1184, '4', 0.520833, 14, 1, '2017-09-13 05:01:03'),
(7, 725, '3', -1.49481, 10, 0, '2017-09-13 05:01:03'),
(17, 1184, '4', 0.130208, 19, 1, '2017-09-13 05:01:03'),
(8, 1210, '1', 0.0833333, 20, 1, '2017-09-13 05:01:04'),
(20, 2618, '3', 2.6, 8, 1, '2017-09-13 05:01:04'),
(9, 1953, '0', -0.001875, 40, 0, '2017-09-13 05:01:04'),
(9, 1938, '3', -0.105469, 39, 0, '2017-09-13 05:01:04'),
(28, 1169, '2', 0.00520833, 23, 1, '2017-09-13 05:01:06'),
(19, 1183, '2', 0.75, 11, 1, '2017-09-13 05:01:07'),
(10, 1173, '2', 0.27, 14, 1, '2017-09-13 05:01:08'),
(4, 1197, '1', 1.02083, 10, 1, '2017-09-13 05:01:09'),
(20, 2617, '1', 2.8, 4, 1, '2017-09-13 05:01:09'),
(7, 719, '3', 1.94676, 7, 1, '2017-09-13 05:01:10'),
(2, 1931, '2', -0.826875, 19, 0, '2017-09-13 05:01:10'),
(8, 1173, '2', 1.2675, 7, 1, '2017-09-13 05:01:11'),
(21, 1172, '4', 0.6075, 11, 1, '2017-09-13 05:01:14'),
(6, 1194, '1', 0.979592, 12, 1, '2017-09-13 05:01:14'),
(1, 2602, '2', -0.226875, 29, 0, '2017-09-13 05:01:15'),
(12, 1184, '3', -0.520833, 14, 0, '2017-09-13 05:01:15'),
(19, 1194, '1', 1.38138, 9, 1, '2017-09-13 05:01:17'),
(9, 1924, '1', -1.14446, 13, 0, '2017-09-13 05:01:17'),
(13, 1261, '0', -0.00207756, 38, 0, '2017-09-13 05:01:19'),
(22, 1194, '0', -0.00382653, 28, 0, '2017-09-13 05:01:19'),
(7, 465, '0', 0, 10, -1, '2017-09-13 05:01:19'),
(3, 2148, '1', -0.016875, 37, 0, '2017-09-13 05:01:20'),
(20, 2628, '4', -2.4, 12, 0, '2017-09-13 05:01:21'),
(28, 1197, '1', 0.421875, 15, 1, '2017-09-13 05:01:21'),
(5, 1194, '0', -0.00382653, 28, 0, '2017-09-13 05:01:22'),
(8, 1183, '2', 0.75, 11, 1, '2017-09-13 05:01:22'),
(11, 1276, '1', 0.354492, 21, 1, '2017-09-13 05:01:24'),
(21, 1173, '2', 0.75, 10, 1, '2017-09-13 05:01:24'),
(4, 1196, '4', 0.333333, 16, 1, '2017-09-13 05:01:25'),
(17, 1196, '0', 0, 23, -1, '2017-09-13 05:01:26'),
(6, 1196, '4', 0.75, 12, 1, '2017-09-13 05:01:27'),
(10, 1218, '0', -0.0075, 20, 0, '2017-09-13 05:01:28'),
(24, 2606, '1', 2.04187, 7, 1, '2017-09-13 05:01:28'),
(14, 2612, '1', 0.046875, 35, 1, '2017-09-13 05:01:29'),
(1, 2614, '4', 1.17188, 15, 1, '2017-09-13 05:01:30'),
(19, 1276, '4', -0.949219, 14, 0, '2017-09-13 05:01:30'),
(7, 728, '0', 0, 12, -1, '2017-09-13 05:01:32'),
(10, 1292, '1', 2.25333, 4, 1, '2017-09-13 05:01:33'),
(11, 1291, '4', 0.6075, 11, 1, '2017-09-13 05:01:34'),
(1, 2606, '1', 2.29688, 5, 1, '2017-09-13 05:01:35'),
(6, 1183, '2', 1.04752, 9, 1, '2017-09-13 05:01:35'),
(27, 1458, '2', -1.6875, 9, 0, '2017-09-13 05:01:37'),
(7, 494, '3', 2.08333, 5, 1, '2017-09-13 05:01:37'),
(21, 1216, '2', -0.421875, 15, 0, '2017-09-13 05:01:38'),
(24, 2609, '2', 1.6875, 10, 1, '2017-09-13 05:01:38'),
(9, 1928, '3', -0.373702, 22, 0, '2017-09-13 05:01:39'),
(26, 733, '3', 0.016875, 37, 1, '2017-09-13 05:01:40'),
(19, 1186, '3', 1.2398, 10, 1, '2017-09-13 05:01:41'),
(8, 1291, '4', 0.0075, 19, 1, '2017-09-13 05:01:41'),
(10, 1216, '4', 1.17188, 9, 1, '2017-09-13 05:01:42'),
(4, 1195, '1', -0.0075, 19, 0, '2017-09-13 05:01:44'),
(1, 2611, '3', 1.6875, 10, 1, '2017-09-13 05:01:45'),
(11, 1292, '1', 1.20333, 11, 1, '2017-09-13 05:01:45'),
(29, 2609, '4', -1.6875, 10, 0, '2017-09-13 05:01:45'),
(12, 1203, '0', -0.00333333, 30, 0, '2017-09-13 05:01:46'),
(5, 1170, '0', -0.00520833, 24, 0, '2017-09-13 05:01:46'),
(24, 2607, '3', -1.80187, 9, 0, '2017-09-13 05:01:47'),
(13, 1194, '0', -0.00382653, 28, 0, '2017-09-13 05:01:47'),
(27, 1457, '4', 1.36688, 13, 1, '2017-09-13 05:01:50'),
(29, 2607, '4', 2.04187, 7, 1, '2017-09-13 05:01:52'),
(11, 1196, '4', 1.50521, 7, 1, '2017-09-13 05:01:53'),
(4, 1177, '2', 0.892562, 10, 1, '2017-09-13 05:01:54'),
(26, 466, '2', -0.853333, 14, 0, '2017-09-13 05:01:54'),
(25, 481, '1', 0.0075, 38, 1, '2017-09-13 05:01:55'),
(7, 729, '1', -0.592593, 20, 0, '2017-09-13 05:01:57'),
(29, 2610, '3', 2.29688, 5, 1, '2017-09-13 05:01:57'),
(3, 1890, '3', -0.00207756, 37, 0, '2017-09-13 05:01:58'),
(1, 2618, '3', 2.3, 14, 1, '2017-09-13 05:01:59'),
(27, 1462, '3', -1.6875, 10, 0, '2017-09-13 05:02:00'),
(11, 1216, '4', 1.50521, 7, 1, '2017-09-13 05:02:00'),
(28, 1261, '0', -0.00207756, 38, 0, '2017-09-13 05:02:00'),
(9, 1905, '2', -0.816635, 22, 0, '2017-09-13 05:02:01'),
(14, 2615, '1', 0.12, 32, 1, '2017-09-13 05:02:02'),
(24, 2615, '1', 0.991875, 17, 1, '2017-09-13 05:02:04'),
(5, 1196, '4', 0.1875, 18, 1, '2017-09-13 05:02:05'),
(29, 2612, '1', 1.92, 8, 1, '2017-09-13 05:02:05'),
(17, 1261, '0', -0.00207756, 38, 0, '2017-09-13 05:02:05'),
(22, 1270, '0', -0.00141777, 46, 0, '2017-09-13 05:02:06'),
(2, 1913, '2', -0.0208333, 55, 0, '2017-09-13 05:02:06'),
(26, 718, '1', 0.963333, 13, 1, '2017-09-13 05:02:08'),
(13, 1227, '3', 0.0208333, 22, 1, '2017-09-13 05:02:09'),
(4, 1194, '1', 0.646684, 15, 1, '2017-09-13 05:02:09'),
(29, 2605, '2', 2.43, 4, 1, '2017-09-13 05:02:09'),
(27, 3044, '3', 1.17188, 9, 1, '2017-09-13 05:02:09'),
(10, 1261, '3', 0.251385, 27, 1, '2017-09-13 05:02:09'),
(3, 1910, '4', -1.59505, 13, 0, '2017-09-13 05:02:10'),
(12, 1174, '2', -0.00443787, 25, 0, '2017-09-13 05:02:11'),
(21, 1261, '1', -0.0519391, 33, 0, '2017-09-13 05:02:11'),
(1, 2625, '3', 2.35, 13, 1, '2017-09-13 05:02:12'),
(28, 1297, '3', 1.84083, 13, 1, '2017-09-13 05:02:13'),
(29, 2606, '1', 2.43, 4, 1, '2017-09-13 05:02:14'),
(24, 2602, '1', -1.80187, 9, 0, '2017-09-13 05:02:14'),
(20, 2634, '4', 0.25, 55, 1, '2017-09-13 05:02:16'),
(15, 2613, '4', 1.17188, 15, 1, '2017-09-13 05:02:16'),
(5, 1173, '2', 0.3675, 13, 1, '2017-09-13 05:02:18'),
(19, 1263, '1', 0.016875, 37, 1, '2017-09-13 05:02:18'),
(26, 719, '3', 1.56481, 10, 1, '2017-09-13 05:02:18'),
(13, 1170, '2', 1.17188, 9, 1, '2017-09-13 05:02:19'),
(7, 726, '1', 0.314014, 23, 1, '2017-09-13 05:02:20'),
(27, 2929, '4', 0.880208, 11, 1, '2017-09-13 05:02:20'),
(16, 854, '1', 0.666735, 37, 1, '2017-09-13 05:02:21'),
(29, 2614, '4', 2.04187, 7, 1, '2017-09-13 05:02:21'),
(18, 2614, '3', -0.6075, 22, 0, '2017-09-13 05:02:22'),
(6, 1270, '0', -0.00141777, 46, 0, '2017-09-13 05:02:22'),
(15, 2611, '3', 1.80187, 9, 1, '2017-09-13 05:02:24'),
(7, 486, '1', 2.22454, 5, 1, '2017-09-13 05:02:25'),
(17, 1172, '0', -0.0075, 20, 0, '2017-09-13 05:02:25'),
(4, 1216, '4', 0.255208, 17, 1, '2017-09-13 05:02:26'),
(2, 1938, '1', 0.949219, 21, 1, '2017-09-13 05:02:27'),
(25, 732, '4', 0.037037, 32, 1, '2017-09-13 05:02:28'),
(24, 2603, '2', -1.2675, 14, 0, '2017-09-13 05:02:28'),
(8, 1270, '0', -0.00141777, 46, 0, '2017-09-13 05:02:28'),
(28, 1216, '4', 0.421875, 15, 1, '2017-09-13 05:02:28'),
(8, 1261, '2', -0.132964, 46, 0, '2017-09-13 05:02:28'),
(11, 1263, '2', -0.27, 28, 0, '2017-09-13 05:02:28'),
(21, 1210, '1', 0.255208, 17, 1, '2017-09-13 05:02:29'),
(18, 2606, '1', 2.04187, 7, 1, '2017-09-13 05:02:29'),
(12, 1173, '2', 0.0075, 19, 1, '2017-09-13 05:02:30'),
(22, 1227, '0', -0.00520833, 24, 0, '2017-09-13 05:02:30'),
(5, 1263, '1', 1.36688, 13, 1, '2017-09-13 05:02:31'),
(19, 1184, '3', -0.520833, 14, 0, '2017-09-13 05:02:32'),
(27, 1464, '4', -1.59505, 13, 0, '2017-09-13 05:02:33'),
(9, 1943, '2', -0.75, 32, 0, '2017-09-13 05:02:34'),
(10, 1184, '0', -0.00520833, 24, 0, '2017-09-13 05:02:34'),
(10, 1291, '1', -1.92, 4, 0, '2017-09-13 05:02:38'),
(8, 1194, '1', 1.2398, 10, 1, '2017-09-13 05:02:38'),
(13, 1195, '4', 0, 20, 1, '2017-09-13 05:02:39'),
(24, 2611, '3', 1.57687, 11, 1, '2017-09-13 05:02:39'),
(15, 2603, '2', -1.08, 16, 0, '2017-09-13 05:02:40'),
(1, 2616, '1', -1.6, 28, 0, '2017-09-13 05:02:41'),
(18, 2602, '1', -1.57687, 11, 0, '2017-09-13 05:02:41'),
(26, 728, '2', -0.467452, 23, 0, '2017-09-13 05:02:41'),
(21, 1196, '4', 0.630208, 13, 1, '2017-09-13 05:02:41'),
(27, 1450, '4', 1.81481, 8, 1, '2017-09-13 05:02:41'),
(14, 2603, '0', -0.001875, 40, 0, '2017-09-13 05:02:42'),
(7, 498, '0', 0, 18, -1, '2017-09-13 05:02:43'),
(10, 1169, '2', 1.6875, 6, 1, '2017-09-13 05:02:43'),
(4, 1198, '4', 0.03, 18, 1, '2017-09-13 05:02:44'),
(24, 2601, '2', 2.1675, 6, 1, '2017-09-13 05:02:45'),
(2, 1886, '3', 0.75, 18, 1, '2017-09-13 05:02:45'),
(20, 2624, '4', -1.55, 29, 0, '2017-09-13 05:02:45'),
(28, 1198, '2', -0.03, 18, 0, '2017-09-13 05:02:46'),
(22, 1218, '3', -0.1875, 15, 0, '2017-09-13 05:02:46'),
(1, 2617, '1', 2.7, 6, 1, '2017-09-13 05:02:46'),
(16, 609, '1', -0.963333, 26, 0, '2017-09-13 05:02:47'),
(5, 1297, '3', 1.61333, 16, 1, '2017-09-13 05:02:47'),
(15, 2606, '1', 2.04187, 7, 1, '2017-09-13 05:02:48'),
(13, 1198, '4', 0.9075, 9, 1, '2017-09-13 05:02:48'),
(18, 2601, '2', 1.92, 8, 1, '2017-09-13 05:02:48'),
(10, 1172, '4', 1.6875, 5, 1, '2017-09-13 05:02:49'),
(14, 2610, '3', 1.92, 8, 1, '2017-09-13 05:02:49'),
(25, 726, '1', 0.373702, 22, 1, '2017-09-13 05:02:50'),
(6, 1203, '3', 0.0133333, 28, 1, '2017-09-13 05:02:50'),
(26, 481, '3', -1.47, 12, 0, '2017-09-13 05:02:52'),
(8, 1174, '3', 0.639053, 14, 1, '2017-09-13 05:02:52'),
(11, 1210, '0', -0.00520833, 24, 0, '2017-09-13 05:02:53'),
(15, 2614, '4', 2.29688, 5, 1, '2017-09-13 05:02:53'),
(14, 2606, '1', 2.56687, 3, 1, '2017-09-13 05:02:53'),
(17, 1185, '0', -0.00382653, 28, 0, '2017-09-13 05:02:54'),
(1, 2620, '4', 2.55, 9, 1, '2017-09-13 05:02:55'),
(7, 487, '4', 1.2675, 14, 1, '2017-09-13 05:02:57'),
(3, 1895, '0', -0.00141777, 46, 0, '2017-09-13 05:02:57'),
(24, 2612, '1', 1.36688, 13, 1, '2017-09-13 05:02:57'),
(19, 1203, '3', 0.0833333, 25, 1, '2017-09-13 05:02:58'),
(14, 2613, '4', 2.29688, 5, 1, '2017-09-13 05:02:58'),
(13, 1183, '2', 0.892562, 10, 1, '2017-09-13 05:02:58'),
(20, 2629, '2', -2.35, 13, 0, '2017-09-13 05:02:59'),
(26, 485, '2', -2.15643, 7, 0, '2017-09-13 05:03:00'),
(29, 2631, '2', -0.95, 41, 0, '2017-09-13 05:03:01'),
(7, 722, '2', -2.37037, 4, 0, '2017-09-13 05:03:01'),
(17, 1177, '2', 1.39463, 7, 1, '2017-09-13 05:03:01'),
(5, 1174, '3', 0.536982, 15, 1, '2017-09-13 05:03:02'),
(11, 1227, '2', -0.880208, 11, 0, '2017-09-13 05:03:03'),
(24, 2613, '4', 2.1675, 6, 1, '2017-09-13 05:03:03'),
(9, 1910, '4', -0.421875, 30, 0, '2017-09-13 05:03:04'),
(14, 2628, '4', -2.7, 6, 0, '2017-09-13 05:03:04'),
(12, 1261, '2', -0.033241, 34, 0, '2017-09-13 05:03:05'),
(4, 1292, '3', -0.27, 21, 0, '2017-09-13 05:03:05'),
(22, 1210, '1', 0.046875, 21, 1, '2017-09-13 05:03:07'),
(17, 1197, '3', -1.50521, 7, 0, '2017-09-13 05:03:08'),
(21, 1194, '1', 0.00382653, 27, 1, '2017-09-13 05:03:08'),
(29, 2619, '3', 2.6, 8, 1, '2017-09-13 05:03:09'),
(8, 1195, '4', 0.0075, 19, 1, '2017-09-13 05:03:11'),
(6, 1216, '2', -0.0833333, 20, 0, '2017-09-13 05:03:11'),
(14, 2608, '3', 1.92, 8, 1, '2017-09-13 05:03:12'),
(15, 2607, '4', 0.75, 20, 1, '2017-09-13 05:03:13'),
(24, 2614, '4', 1.6875, 10, 1, '2017-09-13 05:03:13'),
(11, 1183, '0', 0, 11, -1, '2017-09-13 05:03:14'),
(29, 2628, '4', -2.75, 5, 0, '2017-09-13 05:03:14'),
(27, 1466, '2', 0.3468, 33, 1, '2017-09-13 05:03:15'),
(10, 1185, '4', 0.0153061, 26, 1, '2017-09-13 05:03:15'),
(25, 736, '1', 0.210208, 25, 1, '2017-09-13 05:03:15'),
(7, 490, '2', 1.12037, 14, 1, '2017-09-13 05:03:15'),
(18, 2609, '2', 0.316875, 27, 1, '2017-09-13 05:03:15'),
(6, 1186, '3', 1.85204, 6, 1, '2017-09-13 05:03:16'),
(16, 624, '1', 0.800833, 29, 1, '2017-09-13 05:03:17'),
(13, 1216, '0', 0, 22, -1, '2017-09-13 05:03:20'),
(1, 2622, '2', 1.75, 25, 1, '2017-09-13 05:03:20'),
(11, 1173, '2', 1.47, 6, 1, '2017-09-13 05:03:21'),
(15, 2601, '2', 1.92, 8, 1, '2017-09-13 05:03:21'),
(24, 2605, '2', 2.04187, 7, 1, '2017-09-13 05:03:21'),
(5, 1291, '1', -0.0075, 19, 0, '2017-09-13 05:03:21'),
(2, 2148, '2', 0.03, 36, 1, '2017-09-13 05:03:22'),
(20, 2625, '1', -1.7, 26, 0, '2017-09-13 05:03:25'),
(4, 1184, '4', 0.0833333, 20, 1, '2017-09-13 05:03:25'),
(9, 1935, '2', -0.869823, 24, 0, '2017-09-13 05:03:29'),
(6, 1195, '4', 0.48, 12, 1, '2017-09-13 05:03:29'),
(28, 1270, '2', -0.0127599, 43, 0, '2017-09-13 05:03:30'),
(20, 2605, '2', 2.1675, 6, 1, '2017-09-13 05:03:31'),
(25, 465, '2', 0.563333, 17, 1, '2017-09-13 05:03:32'),
(3, 1935, '1', 0.320636, 35, 1, '2017-09-13 05:03:32'),
(24, 2634, '4', 2.4, 12, 1, '2017-09-13 05:03:33'),
(7, 509, '1', 0.75, 18, 1, '2017-09-13 05:03:33'),
(21, 1292, '2', -0.0833333, 25, 0, '2017-09-13 05:03:33'),
(13, 1190, '4', 0.75, 14, 1, '2017-09-13 05:03:34'),
(12, 1276, '4', -0.0117188, 30, 0, '2017-09-13 05:03:34'),
(19, 1261, '1', -0.00207756, 37, 0, '2017-09-13 05:03:35'),
(10, 1198, '4', 0, 20, 1, '2017-09-13 05:03:35'),
(18, 2608, '3', 0.826875, 19, 1, '2017-09-13 05:03:35'),
(22, 1190, '0', -0.00382653, 28, 0, '2017-09-13 05:03:35'),
(20, 2619, '3', 2.75, 5, 1, '2017-09-13 05:03:36'),
(27, 1452, '2', 0.6075, 22, 1, '2017-09-13 05:03:37'),
(6, 1190, '4', 1.53061, 8, 1, '2017-09-13 05:03:37'),
(26, 737, '4', 0.001875, 39, 1, '2017-09-13 05:03:39'),
(7, 718, '1', 2.08333, 5, 1, '2017-09-13 05:03:39'),
(8, 1185, '0', -0.00382653, 28, 0, '2017-09-13 05:03:39'),
(8, 1198, '4', 0.48, 28, 1, '2017-09-13 05:03:40'),
(25, 490, '2', 1.94676, 7, 1, '2017-09-13 05:03:40'),
(11, 1194, '2', -0.244898, 20, 0, '2017-09-13 05:03:41'),
(21, 1190, '4', 1.38138, 9, 1, '2017-09-13 05:03:43'),
(6, 1174, '3', 1.77515, 6, 1, '2017-09-13 05:03:43'),
(20, 2623, '2', 2.65, 7, 1, '2017-09-13 05:03:43'),
(24, 2624, '2', 2.3, 14, 1, '2017-09-13 05:03:46'),
(16, 599, '1', 0.700833, 31, 1, '2017-09-13 05:03:47'),
(7, 724, '2', -1.47, 9, 0, '2017-09-13 05:03:47'),
(15, 2605, '4', -0.27, 28, 0, '2017-09-13 05:03:49'),
(6, 1198, '4', 1.47, 6, 1, '2017-09-13 05:03:49'),
(8, 1196, '4', 1.02083, 10, 1, '2017-09-13 05:03:50'),
(11, 1297, '3', 2.08333, 10, 1, '2017-09-13 05:03:51'),
(4, 1185, '4', 0.0153061, 26, 1, '2017-09-13 05:03:52'),
(14, 2602, '0', -0.001875, 40, 0, '2017-09-13 05:03:53'),
(1, 2733, '2', 1.80492, 32, 1, '2017-09-13 05:03:53'),
(10, 1227, '0', 0, 18, -1, '2017-09-13 05:03:53'),
(25, 485, '1', 1.54395, 13, 1, '2017-09-13 05:03:53'),
(17, 1270, '0', 0, 45, -1, '2017-09-13 05:03:54'),
(13, 1172, '0', -0.0075, 20, 0, '2017-09-13 05:03:54'),
(28, 1210, '0', -0.00520833, 24, 0, '2017-09-13 05:03:54'),
(26, 472, '2', -0.991875, 17, 0, '2017-09-13 05:03:55'),
(22, 1276, '3', -0.421875, 20, 0, '2017-09-13 05:03:56'),
(16, 1310, '1', -2.14793, 8, 0, '2017-09-13 05:03:56'),
(29, 2634, '2', -0.9, 42, 0, '2017-09-13 05:03:56'),
(12, 1210, '1', 0.046875, 21, 1, '2017-09-13 05:03:56'),
(27, 3051, '0', 0, 20, -1, '2017-09-13 05:03:57'),
(2, 1907, '3', 0.046875, 35, 1, '2017-09-13 05:03:58'),
(19, 1227, '0', -0.00520833, 24, 0, '2017-09-13 05:03:59'),
(8, 1169, '2', 1.02083, 10, 1, '2017-09-13 05:03:59'),
(11, 1197, '4', -1.17188, 9, 0, '2017-09-13 05:04:00'),
(29, 2613, '4', 2.43, 4, 1, '2017-09-13 05:04:00'),
(6, 1169, '2', 0.75, 12, 1, '2017-09-13 05:04:01'),
(24, 2616, '1', -2.25, 15, 0, '2017-09-13 05:04:01'),
(10, 1186, '3', 1.38138, 9, 1, '2017-09-13 05:04:02'),
(1, 2819, '2', 2.69195, 9, 1, '2017-09-13 05:04:02'),
(25, 723, '1', 1.56481, 10, 1, '2017-09-13 05:04:03'),
(18, 2604, '1', -0.27, 28, 0, '2017-09-13 05:04:03'),
(21, 1185, '4', 0.137755, 22, 1, '2017-09-13 05:04:04'),
(5, 1270, '0', 0, 44, -1, '2017-09-13 05:04:06'),
(29, 2632, '3', 2.75, 5, 1, '2017-09-13 05:04:06'),
(13, 1292, '0', 0, 12, -1, '2017-09-13 05:04:06'),
(4, 1186, '4', -0.75, 14, 0, '2017-09-13 05:04:06'),
(17, 1190, '4', 0.860969, 13, 1, '2017-09-13 05:04:07'),
(9, 1916, '4', -0.321938, 39, 0, '2017-09-13 05:04:08'),
(3, 1931, '4', -0.03, 36, 0, '2017-09-13 05:04:08'),
(1, 2833, '3', 2.79651, 6, 1, '2017-09-13 05:04:08'),
(16, 611, '2', -1.6428, 13, 0, '2017-09-13 05:04:10'),
(15, 2609, '4', -0.6075, 22, 0, '2017-09-13 05:04:11'),
(20, 2626, '3', 1.6, 28, 1, '2017-09-13 05:04:11'),
(11, 1186, '3', 1.10587, 11, 1, '2017-09-13 05:04:11'),
(8, 1297, '3', 1.92, 12, 1, '2017-09-13 05:04:12'),
(28, 1183, '2', 0.154959, 17, 1, '2017-09-13 05:04:12'),
(27, 3004, '2', -0.653333, 16, 0, '2017-09-13 05:04:14'),
(20, 2620, '4', 2.75, 5, 1, '2017-09-13 05:04:16'),
(24, 2632, '4', -2.25, 15, 0, '2017-09-13 05:04:17'),
(6, 1175, '4', 1.5, 16, 1, '2017-09-13 05:04:17'),
(16, 996, '4', -2.1168, 8, 0, '2017-09-13 05:04:18'),
(18, 2603, '2', -1.17188, 15, 0, '2017-09-13 05:04:18'),
(19, 1169, '2', 0.130208, 19, 1, '2017-09-13 05:04:18'),
(21, 1218, '4', 0.27, 14, 1, '2017-09-13 05:04:18'),
(26, 731, '2', 0.391204, 23, 1, '2017-09-13 05:04:19'),
(4, 1291, '1', -0.3675, 13, 0, '2017-09-13 05:04:19'),
(15, 2604, '1', -1.92, 8, 0, '2017-09-13 05:04:19'),
(10, 1174, '3', 0.359467, 17, 1, '2017-09-13 05:04:19'),
(22, 1174, '3', 0.0177515, 24, 1, '2017-09-13 05:04:20'),
(5, 1177, '2', 0.396694, 14, 1, '2017-09-13 05:04:20'),
(12, 1196, '1', 0, 24, 0, '2017-09-13 05:04:20'),
(20, 2841, '3', 2.86514, 4, 1, '2017-09-13 05:04:20'),
(17, 1297, '3', 1.6875, 15, 1, '2017-09-13 05:04:22'),
(7, 732, '0', -0.00231481, 36, 0, '2017-09-13 05:04:24'),
(21, 1169, '2', 1.6875, 6, 1, '2017-09-13 05:04:24'),
(1, 2852, '3', -2.40251, 17, 0, '2017-09-13 05:04:25'),
(13, 1197, '2', -0.130208, 19, 0, '2017-09-13 05:04:26'),
(2, 1905, '3', -0.409735, 29, 0, '2017-09-13 05:04:26'),
(18, 2613, '4', 1.80187, 9, 1, '2017-09-13 05:04:27'),
(25, 509, '3', -0.1875, 27, 0, '2017-09-13 05:04:30'),
(21, 1177, '2', 1.39463, 7, 1, '2017-09-13 05:04:32'),
(11, 1203, '3', 0.27, 21, 1, '2017-09-13 05:04:32'),
(16, 619, '0', 0, 15, -1, '2017-09-13 05:04:32'),
(4, 1190, '4', 0.860969, 13, 1, '2017-09-13 05:04:32'),
(24, 2628, '2', -2.2, 16, 0, '2017-09-13 05:04:32'),
(29, 2635, '3', -1.65, 27, 0, '2017-09-13 05:04:33'),
(27, 1467, '3', 1.40083, 19, 1, '2017-09-13 05:04:33'),
(14, 2607, '0', -0.001875, 40, 0, '2017-09-13 05:04:33'),
(10, 1197, '4', -0.421875, 15, 0, '2017-09-13 05:04:34'),
(7, 734, '2', 1.33333, 10, 1, '2017-09-13 05:04:34'),
(9, 1902, '2', -0.0732422, 27, 0, '2017-09-13 05:04:35'),
(26, 724, '2', -0.653333, 16, 0, '2017-09-13 05:04:35'),
(20, 2731, '4', 2.47645, 15, 1, '2017-09-13 05:04:36'),
(19, 1195, '4', 0.03, 18, 1, '2017-09-13 05:04:37'),
(8, 1203, '3', 0.0533333, 26, 1, '2017-09-13 05:04:38'),
(28, 1185, '3', -0.0153061, 26, 0, '2017-09-13 05:04:38'),
(5, 1198, '0', -0.0075, 20, 0, '2017-09-13 05:04:40'),
(17, 1170, '2', 0.1875, 18, 1, '2017-09-13 05:04:40'),
(20, 2816, '4', 2.86514, 4, 1, '2017-09-13 05:04:40'),
(6, 1200, '2', -1.08333, 23, 0, '2017-09-13 05:04:40'),
(7, 727, '2', 1.81481, 8, 1, '2017-09-13 05:04:42'),
(22, 1263, '2', -0.6075, 22, 0, '2017-09-13 05:04:42'),
(24, 2610, '3', 1.47, 12, 1, '2017-09-13 05:04:44'),
(14, 2609, '2', 1.57687, 11, 1, '2017-09-13 05:04:44'),
(13, 1173, '2', 0.0075, 19, 1, '2017-09-13 05:04:45'),
(27, 3039, '1', 0.869823, 12, 1, '2017-09-13 05:04:45'),
(12, 1194, '1', 0.0153061, 26, 1, '2017-09-13 05:04:46'),
(15, 2602, '3', 0.226875, 29, 1, '2017-09-13 05:04:48'),
(3, 1899, '2', -0.0694707, 39, 0, '2017-09-13 05:04:48'),
(16, 852, '0', 0, 16, -1, '2017-09-13 05:04:48'),
(30, 1172, '0', -0.0075, 20, 0, '2017-09-13 05:04:48'),
(14, 2617, '1', 2.8, 4, 1, '2017-09-13 05:04:49'),
(8, 1292, '1', 1.20333, 11, 1, '2017-09-13 05:04:49'),
(7, 740, '1', 2.41667, 7, 1, '2017-09-13 05:04:50'),
(24, 2627, '2', 2.75, 5, 1, '2017-09-13 05:04:50'),
(1, 2820, '2', 2.09443, 25, 1, '2017-09-13 05:04:50'),
(29, 2630, '1', -2.1, 18, 0, '2017-09-13 05:04:50'),
(11, 1195, '4', 0.03, 18, 1, '2017-09-13 05:04:51'),
(21, 1291, '1', -0.0075, 19, 0, '2017-09-13 05:04:51'),
(2, 1928, '2', -0.259516, 24, 0, '2017-09-13 05:04:51'),
(28, 1292, '1', 0.963333, 13, 1, '2017-09-13 05:04:51'),
(20, 2845, '3', -2.54929, 13, 0, '2017-09-13 05:04:53'),
(10, 1195, '4', 0.0075, 19, 1, '2017-09-13 05:04:54'),
(6, 1189, '1', -1.60714, 13, 0, '2017-09-13 05:04:54'),
(18, 2615, '1', 0.316875, 27, 1, '2017-09-13 05:04:54'),
(15, 2608, '3', 2.04187, 7, 1, '2017-09-13 05:04:55'),
(17, 1173, '2', 0.27, 14, 1, '2017-09-13 05:04:55'),
(27, 1453, '4', -1.8252, 11, 0, '2017-09-13 05:04:56'),
(4, 1210, '1', 0, 24, 1, '2017-09-13 05:04:56'),
(16, 606, '1', -2.25333, 8, 0, '2017-09-13 05:04:56'),
(19, 1198, '2', 0, 20, 0, '2017-09-13 05:04:57'),
(21, 1170, '2', 1.33333, 8, 1, '2017-09-13 05:04:59'),
(11, 1177, '2', 0.892562, 10, 1, '2017-09-13 05:05:01'),
(2, 1953, '1', -1.57687, 11, 0, '2017-09-13 05:05:02'),
(6, 1291, '4', 0.9075, 9, 1, '2017-09-13 05:05:02'),
(14, 2633, '3', 2.3, 14, 1, '2017-09-13 05:05:03'),
(24, 2623, '3', -2.3, 14, 0, '2017-09-13 05:05:03'),
(5, 1210, '1', 0.00520833, 23, 1, '2017-09-13 05:05:03'),
(19, 1196, '4', 1.33333, 8, 1, '2017-09-13 05:05:04'),
(30, 1198, '4', 0.12, 16, 1, '2017-09-13 05:05:05'),
(26, 494, '0', -0.00333333, 30, 0, '2017-09-13 05:05:05'),
(1, 2823, '2', -2.47645, 15, 0, '2017-09-13 05:05:06'),
(12, 1169, '2', 0.0833333, 20, 1, '2017-09-13 05:05:07'),
(8, 1200, '4', 1.5, 18, 1, '2017-09-13 05:05:07'),
(10, 1297, '3', 1.84083, 13, 1, '2017-09-13 05:05:07'),
(16, 853, '4', -2.00083, 11, 0, '2017-09-13 05:05:08'),
(20, 2734, '2', -2.43962, 16, 0, '2017-09-13 05:05:10'),
(9, 1932, '1', 0.17155, 35, 1, '2017-09-13 05:05:10'),
(27, 1460, '1', 1.4518, 14, 1, '2017-09-13 05:05:10'),
(3, 1953, '2', -0.541875, 23, 0, '2017-09-13 05:05:10'),
(25, 498, '0', -0.001875, 40, 0, '2017-09-13 05:05:11'),
(14, 2626, '3', 2.5, 10, 1, '2017-09-13 05:05:12'),
(22, 1292, '0', -0.00333333, 30, 0, '2017-09-13 05:05:12'),
(18, 2612, '1', 0.9075, 18, 1, '2017-09-13 05:05:12'),
(4, 1170, '2', 0.255208, 17, 1, '2017-09-13 05:05:13'),
(28, 1190, '4', 0.137755, 22, 1, '2017-09-13 05:05:13'),
(8, 1191, '3', 2.25, 7, 1, '2017-09-13 05:05:15'),
(17, 1195, '0', -0.0075, 20, 0, '2017-09-13 05:05:15'),
(12, 1186, '3', 1.53061, 8, 1, '2017-09-13 05:05:15'),
(27, 1461, '3', 2.26843, 6, 1, '2017-09-13 05:05:16'),
(11, 1185, '2', -0.55102, 16, 0, '2017-09-13 05:05:16'),
(6, 1293, '2', 1.25, 14, 1, '2017-09-13 05:05:17'),
(18, 2605, '2', 2.04187, 7, 1, '2017-09-13 05:05:20'),
(26, 509, '2', -0.835648, 17, 0, '2017-09-13 05:05:21'),
(14, 2625, '1', -2.5, 10, 0, '2017-09-13 05:05:22'),
(7, 475, '1', -0.782609, 34, 0, '2017-09-13 05:05:23'),
(8, 1171, '4', 1.65, 9, 1, '2017-09-13 05:05:23'),
(1, 2825, '3', 2.36512, 18, 1, '2017-09-13 05:05:24'),
(20, 2729, '2', 2.513, 14, 1, '2017-09-13 05:05:24'),
(22, 1198, '4', 0.48, 12, 1, '2017-09-13 05:05:25'),
(16, 602, '3', -1.61792, 17, 0, '2017-09-13 05:05:25'),
(28, 1291, '4', 0.6075, 11, 1, '2017-09-13 05:05:25'),
(27, 3035, '2', 1.2398, 10, 1, '2017-09-13 05:05:26'),
(19, 1270, '3', -0.886106, 21, 0, '2017-09-13 05:05:26'),
(24, 2635, '4', -1.8, 24, 0, '2017-09-13 05:05:27'),
(14, 2618, '3', 2.75, 5, 1, '2017-09-13 05:05:28'),
(30, 1190, '4', 0.137755, 22, 1, '2017-09-13 05:05:28'),
(29, 2624, '1', -1.1, 38, 0, '2017-09-13 05:05:28'),
(13, 1270, '4', 0.00567108, 44, 1, '2017-09-13 05:05:29'),
(4, 1183, '2', 0.22314, 16, 1, '2017-09-13 05:05:30'),
(1, 2730, '4', 2.76188, 7, 1, '2017-09-13 05:05:30'),
(15, 2615, '1', 0.03, 36, 1, '2017-09-13 05:05:31'),
(11, 1170, '2', 0.520833, 14, 1, '2017-09-13 05:05:31'),
(12, 1198, '4', 0.0675, 17, 1, '2017-09-13 05:05:32'),
(7, 744, '2', -2.325, 9, 0, '2017-09-13 05:05:32'),
(24, 2608, '3', 2.29688, 5, 1, '2017-09-13 05:05:32'),
(20, 2730, '4', 2.69195, 9, 1, '2017-09-13 05:05:33'),
(8, 1189, '3', 2.03571, 9, 1, '2017-09-13 05:05:33'),
(15, 2612, '1', 2.56687, 3, 1, '2017-09-13 05:05:34'),
(17, 1169, '2', 0.130208, 19, 1, '2017-09-13 05:05:34'),
(22, 1186, '3', 1.2398, 10, 1, '2017-09-13 05:05:34'),
(10, 1265, '0', 0, 29, -1, '2017-09-13 05:05:36'),
(3, 1928, '3', -0.210208, 25, 0, '2017-09-13 05:05:37'),
(28, 1184, '4', 0.75, 12, 1, '2017-09-13 05:05:37'),
(24, 2618, '3', 2.75, 5, 1, '2017-09-13 05:05:38'),
(21, 1270, '3', -0.0510397, 40, 0, '2017-09-13 05:05:38'),
(5, 1261, '2', -0.00831025, 36, 0, '2017-09-13 05:05:40'),
(13, 1196, '4', 0.880208, 11, 1, '2017-09-13 05:05:40'),
(25, 724, '0', -0.00333333, 30, 0, '2017-09-13 05:05:41'),
(25, 489, '4', -0.1875, 30, 0, '2017-09-13 05:05:42'),
(18, 2607, '4', 0.6075, 22, 1, '2017-09-13 05:05:42'),
(7, 464, '3', 1.13609, 10, 1, '2017-09-13 05:05:43'),
(20, 2823, '3', 2.65665, 10, 1, '2017-09-13 05:05:43'),
(9, 2157, '3', -0.506059, 33, 0, '2017-09-13 05:05:44'),
(4, 1174, '3', 0.639053, 14, 1, '2017-09-13 05:05:44'),
(29, 2611, '3', 1.08, 16, 1, '2017-09-13 05:05:44'),
(14, 2630, '2', 2.15, 17, 1, '2017-09-13 05:05:45'),
(8, 1293, '2', 1.5, 12, 1, '2017-09-13 05:05:45'),
(27, 1455, '1', 0.826875, 19, 1, '2017-09-13 05:05:45'),
(19, 1218, '0', -0.0075, 20, 0, '2017-09-13 05:05:47'),
(30, 1196, '4', 0.130208, 19, 1, '2017-09-13 05:05:47'),
(19, 1170, '2', 0.0833333, 20, 1, '2017-09-13 05:05:47'),
(13, 1184, '4', 1.33333, 8, 1, '2017-09-13 05:05:49'),
(12, 1185, '4', 0.382653, 18, 1, '2017-09-13 05:05:50'),
(17, 1276, '4', -0.75, 16, 0, '2017-09-13 05:05:50'),
(21, 1198, '4', 0.48, 12, 1, '2017-09-13 05:05:50'),
(24, 2629, '1', 2.35, 13, 1, '2017-09-13 05:05:50'),
(16, 1458, '4', -0.925926, 16, 0, '2017-09-13 05:05:50'),
(25, 722, '3', 1.56481, 10, 1, '2017-09-13 05:05:51'),
(26, 498, '3', -0.1875, 30, 0, '2017-09-13 05:05:52'),
(1, 2735, '1', 2.25111, 21, 1, '2017-09-13 05:05:52'),
(15, 2618, '3', 2.05, 19, 1, '2017-09-13 05:05:53'),
(25, 720, '4', 2.54501, 3, 1, '2017-09-13 05:05:54'),
(5, 1218, '1', -0.12, 16, 0, '2017-09-13 05:05:56'),
(10, 1293, '4', -0.375, 21, 0, '2017-09-13 05:05:58'),
(14, 2730, '4', 2.54929, 13, 1, '2017-09-13 05:05:58'),
(19, 1177, '2', 0.619835, 12, 1, '2017-09-13 05:05:58'),
(25, 727, '2', 2.37037, 4, 1, '2017-09-13 05:05:58'),
(7, 482, '4', 1.92857, 15, 1, '2017-09-13 05:05:59'),
(22, 1196, '0', -0.00520833, 24, 0, '2017-09-13 05:05:59'),
(2, 2157, '0', -0.000956633, 56, 0, '2017-09-13 05:05:59'),
(11, 1261, '3', 0.207756, 28, 1, '2017-09-13 05:05:59'),
(8, 1175, '4', 1.59375, 15, 1, '2017-09-13 05:06:00'),
(27, 1465, '1', 0.646684, 15, 1, '2017-09-13 05:06:00'),
(30, 1169, '2', 0.520833, 14, 1, '2017-09-13 05:06:00'),
(3, 1902, '1', 0.1875, 24, 1, '2017-09-13 05:06:01'),
(18, 2610, '3', 0.826875, 19, 1, '2017-09-13 05:06:01'),
(5, 1169, '2', 1.33333, 8, 1, '2017-09-13 05:06:04'),
(6, 1257, '4', 0.125, 46, 1, '2017-09-13 05:06:04'),
(4, 1276, '3', -0.421875, 20, 0, '2017-09-13 05:06:04'),
(28, 1203, '3', 0.0133333, 28, 1, '2017-09-13 05:06:05'),
(14, 2816, '4', 2.76188, 7, 1, '2017-09-13 05:06:05'),
(11, 1172, '4', 1.2675, 7, 1, '2017-09-13 05:06:06'),
(20, 2835, '3', 2.13414, 24, 1, '2017-09-13 05:06:07'),
(7, 745, '2', 2.325, 9, 1, '2017-09-13 05:06:07'),
(29, 2616, '4', 1.8, 24, 1, '2017-09-13 05:06:08'),
(16, 1450, '2', -0.668981, 19, 0, '2017-09-13 05:06:09'),
(24, 2631, '3', 2.05, 19, 1, '2017-09-13 05:06:10'),
(12, 1291, '1', 0, 20, 0, '2017-09-13 05:06:10'),
(19, 1197, '1', 0.75, 12, 1, '2017-09-13 05:06:11'),
(27, 1449, '1', -1.57687, 11, 0, '2017-09-13 05:06:12'),
(26, 490, '2', 0.520833, 21, 1, '2017-09-13 05:06:12'),
(20, 2833, '3', 2.79651, 6, 1, '2017-09-13 05:06:13'),
(10, 1199, '2', -1.59375, 15, 0, '2017-09-13 05:06:13'),
(21, 1227, '0', -0.00520833, 24, 0, '2017-09-13 05:06:14'),
(3, 1946, '2', -1.2675, 14, 0, '2017-09-13 05:06:14'),
(17, 1210, '0', -0.00520833, 24, 0, '2017-09-13 05:06:14'),
(5, 1186, '3', 1.10587, 11, 1, '2017-09-13 05:06:15'),
(15, 2629, '4', -1.85, 23, 0, '2017-09-13 05:06:15'),
(24, 2617, '1', 2.7, 6, 1, '2017-09-13 05:06:15'),
(13, 1185, '3', -0.00382653, 27, 0, '2017-09-13 05:06:16'),
(18, 2611, '3', 1.17188, 15, 1, '2017-09-13 05:06:16'),
(11, 1270, '0', 0, 10, -1, '2017-09-13 05:06:16'),
(9, 1895, '4', 0.277883, 32, 1, '2017-09-13 05:06:17'),
(25, 748, '2', 1.575, 19, 1, '2017-09-13 05:06:18'),
(8, 1204, '4', 2.19301, 18, 1, '2017-09-13 05:06:18'),
(7, 474, '1', 2.175, 11, 1, '2017-09-13 05:06:18'),
(1, 2734, '1', -2.01386, 27, 0, '2017-09-13 05:06:20'),
(26, 735, '4', 1.76333, 7, 1, '2017-09-13 05:06:20'),
(2, 1946, '4', 0.6075, 22, 1, '2017-09-13 05:06:21'),
(28, 1218, '3', -0.12, 16, 0, '2017-09-13 05:06:21'),
(20, 2871, '0', 0, 8, -1, '2017-09-13 05:06:21'),
(22, 1170, '0', -0.00520833, 24, 0, '2017-09-13 05:06:23'),
(11, 1198, '2', -1.08, 8, 0, '2017-09-13 05:06:25'),
(21, 1197, '1', 1.02083, 10, 1, '2017-09-13 05:06:25'),
(26, 727, '2', 2.08333, 6, 1, '2017-09-13 05:06:25'),
(27, 1454, '2', 1.02083, 15, 1, '2017-09-13 05:06:27'),
(30, 1174, '0', -0.00443787, 26, 0, '2017-09-13 05:06:29'),
(16, 1464, '4', -0.949219, 21, 0, '2017-09-13 05:06:31'),
(4, 1203, '3', 0.03, 27, 1, '2017-09-13 05:06:31'),
(11, 1174, '3', 1.60207, 7, 1, '2017-09-13 05:06:32'),
(13, 1186, '3', 0.55102, 16, 1, '2017-09-13 05:06:32'),
(20, 2883, '3', 2.68328, 12, 1, '2017-09-13 05:06:33'),
(7, 741, '1', -1.81579, 15, 0, '2017-09-13 05:06:34'),
(26, 736, '2', -1.75433, 8, 0, '2017-09-13 05:06:34'),
(12, 1216, '0', -0.00520833, 24, 0, '2017-09-13 05:06:34'),
(28, 1172, '4', 0.27, 14, 1, '2017-09-13 05:06:35'),
(5, 1195, '0', -0.0075, 20, 0, '2017-09-13 05:06:35'),
(21, 1282, '3', 1.9, 11, 1, '2017-09-13 05:06:35'),
(27, 1459, '2', 1.80187, 9, 1, '2017-09-13 05:06:37'),
(19, 1185, '4', 0.00382653, 27, 1, '2017-09-13 05:06:38'),
(10, 1263, '1', 0.421875, 25, 1, '2017-09-13 05:06:38'),
(29, 2625, '3', 1.5, 30, 1, '2017-09-13 05:06:39'),
(15, 2632, '3', 1.85, 23, 1, '2017-09-13 05:06:39'),
(4, 1218, '2', -1.08, 8, 0, '2017-09-13 05:06:39'),
(14, 2845, '1', 1.71792, 34, 1, '2017-09-13 05:06:39'),
(13, 1218, '4', 0.75, 10, 1, '2017-09-13 05:06:42'),
(6, 1287, '4', -0.5, 40, 0, '2017-09-13 05:06:44'),
(17, 1263, '1', 0.1875, 30, 1, '2017-09-13 05:06:45'),
(9, 1886, '2', -0.148148, 28, 0, '2017-09-13 05:06:45'),
(30, 1291, '1', -0.03, 18, 0, '2017-09-13 05:06:45'),
(16, 3035, '2', 0.55102, 16, 1, '2017-09-13 05:06:46'),
(10, 1170, '2', 1.33333, 8, 1, '2017-09-13 05:06:46'),
(21, 1219, '3', 1.36364, 12, 1, '2017-09-13 05:06:47'),
(29, 2621, '3', 2.55, 9, 1, '2017-09-13 05:06:47'),
(19, 1292, '1', 1.33333, 10, 1, '2017-09-13 05:06:47'),
(11, 1269, '0', 0, 17, -1, '2017-09-13 05:06:49'),
(18, 2628, '1', 0.653333, 32, 1, '2017-09-13 05:06:49'),
(26, 465, '3', -0.563333, 17, 0, '2017-09-13 05:06:51'),
(29, 2617, '1', 2.85, 3, 1, '2017-09-13 05:06:51'),
(24, 2730, '3', -1.67358, 35, 0, '2017-09-13 05:06:51'),
(1, 2731, '4', 1.80492, 32, 1, '2017-09-13 05:06:51'),
(22, 1185, '0', -0.00382653, 28, 0, '2017-09-13 05:06:51'),
(29, 2627, '2', 2.85, 3, 1, '2017-09-13 05:06:53'),
(21, 1191, '3', 2.25, 7, 1, '2017-09-13 05:06:55'),
(20, 2888, '1', -2.38747, 22, 0, '2017-09-13 05:06:56'),
(18, 2632, '3', 2.34083, 7, 1, '2017-09-13 05:06:56'),
(19, 1174, '3', 1.13609, 10, 1, '2017-09-13 05:06:57'),
(7, 478, '1', -1.56, 24, 0, '2017-09-13 05:06:57'),
(26, 720, '4', 1.99654, 7, 1, '2017-09-13 05:06:57'),
(28, 1227, '3', 0.0208333, 22, 1, '2017-09-13 05:06:58'),
(1, 2732, '4', 2.79651, 6, 1, '2017-09-13 05:06:58'),
(10, 1287, '0', 0, 12, -1, '2017-09-13 05:06:58'),
(2, 1943, '1', 0.533936, 37, 1, '2017-09-13 05:06:59'),
(11, 1220, '1', -1.92857, 10, 0, '2017-09-13 05:06:59'),
(20, 2870, '3', 2.89828, 4, 1, '2017-09-13 05:07:00'),
(25, 749, '1', -0.375, 42, 0, '2017-09-13 05:07:00'),
(21, 1220, '2', 2.35714, 6, 1, '2017-09-13 05:07:00'),
(5, 1185, '2', -0.0153061, 26, 0, '2017-09-13 05:07:01'),
(13, 1291, '4', 0, 20, 1, '2017-09-13 05:07:02'),
(14, 2835, '3', 2.21246, 22, 1, '2017-09-13 05:07:02'),
(27, 1456, '3', -0.3675, 26, 0, '2017-09-13 05:07:02'),
(29, 2823, '3', 2.69195, 9, 1, '2017-09-13 05:07:02'),
(12, 1190, '0', -0.00382653, 28, 0, '2017-09-13 05:07:03'),
(3, 1943, '2', -0.21167, 47, 0, '2017-09-13 05:07:03'),
(20, 2877, '2', 2.84605, 6, 1, '2017-09-13 05:07:05'),
(7, 743, '4', 2.41667, 7, 1, '2017-09-13 05:07:05'),
(19, 1172, '4', 1.2675, 7, 1, '2017-09-13 05:07:05'),
(9, 1890, '3', -0.531856, 22, 0, '2017-09-13 05:07:07'),
(15, 2630, '2', 1.55, 29, 1, '2017-09-13 05:07:08'),
(11, 1169, '2', 1.17188, 9, 1, '2017-09-13 05:07:08'),
(28, 1173, '2', 0.6075, 11, 1, '2017-09-13 05:07:09'),
(2, 1899, '3', 1.73677, 11, 1, '2017-09-13 05:07:10'),
(24, 2619, '3', 2, 20, 1, '2017-09-13 05:07:10'),
(5, 1190, '4', 1.2398, 10, 1, '2017-09-13 05:07:11'),
(13, 1174, '3', 1.28254, 9, 1, '2017-09-13 05:07:11'),
(22, 1195, '0', -0.0075, 20, 0, '2017-09-13 05:07:12'),
(26, 464, '2', -0.536982, 15, 0, '2017-09-13 05:07:13'),
(17, 1194, '0', -0.00382653, 28, 0, '2017-09-13 05:07:13'),
(8, 1275, '0', -0.209987, 54, 0, '2017-09-13 05:07:13'),
(14, 2820, '1', -2.58532, 12, 0, '2017-09-13 05:07:13'),
(12, 1197, '3', -0.880208, 11, 0, '2017-09-13 05:07:14'),
(7, 483, '4', -2.21739, 12, 0, '2017-09-13 05:07:17'),
(4, 1270, '3', -0.114839, 37, 0, '2017-09-13 05:07:17'),
(20, 2879, '0', 0, 12, -1, '2017-09-13 05:07:18'),
(19, 1191, '3', 1.60714, 13, 1, '2017-09-13 05:07:18'),
(11, 1189, '1', -1.10587, 11, 0, '2017-09-13 05:07:19'),
(15, 2617, '1', 2.45, 11, 1, '2017-09-13 05:07:19'),
(26, 722, '3', 2.08333, 6, 1, '2017-09-13 05:07:19'),
(27, 1451, '1', 0.835648, 17, 1, '2017-09-13 05:07:19'),
(6, 1268, '1', 0.75, 36, 1, '2017-09-13 05:07:21'),
(28, 1196, '4', 0.75, 12, 1, '2017-09-13 05:07:21'),
(16, 1454, '1', -0.00231481, 35, 0, '2017-09-13 05:07:22'),
(30, 1216, '0', -0.00520833, 24, 0, '2017-09-13 05:07:23'),
(7, 747, '2', 2.5, 6, 1, '2017-09-13 05:07:23'),
(17, 1292, '3', -1.20333, 11, 0, '2017-09-13 05:07:25'),
(12, 1183, '2', 0.75, 11, 1, '2017-09-13 05:07:25'),
(1, 2816, '4', 1.97297, 28, 1, '2017-09-13 05:07:25'),
(20, 2885, '4', 2.79285, 8, 1, '2017-09-13 05:07:26'),
(18, 2622, '3', -1.4, 32, 0, '2017-09-13 05:07:28'),
(28, 1174, '3', 1.60207, 7, 1, '2017-09-13 05:07:28'),
(4, 1297, '3', 1.76333, 14, 1, '2017-09-13 05:07:31'),
(9, 1907, '1', -0.421875, 25, 0, '2017-09-13 05:07:32'),
(22, 1169, '2', 0.0833333, 20, 1, '2017-09-13 05:07:32'),
(12, 1177, '2', 1.21488, 8, 1, '2017-09-13 05:07:33'),
(18, 2617, '1', 2.75, 5, 1, '2017-09-13 05:07:33'),
(20, 2909, '0', 0, 7, -1, '2017-09-13 05:07:33'),
(29, 2816, '4', 1.84765, 31, 1, '2017-09-13 05:07:33'),
(21, 1269, '1', 0.9375, 33, 1, '2017-09-13 05:07:33'),
(13, 1169, '0', -0.00520833, 24, 0, '2017-09-13 05:07:36'),
(8, 1283, '1', -0.360562, 23, 0, '2017-09-13 05:07:36'),
(27, 1463, '2', 1.12965, 17, 1, '2017-09-13 05:07:37'),
(16, 1449, '0', 0, 15, -1, '2017-09-13 05:07:37'),
(18, 2620, '4', 2.8, 4, 1, '2017-09-13 05:07:38'),
(30, 1194, '1', 0.00382653, 29, 1, '2017-09-13 05:07:38'),
(19, 1284, '0', -0.15, 20, 0, '2017-09-13 05:07:39'),
(21, 1217, '3', 2.1, 6, 1, '2017-09-13 05:07:40'),
(5, 1292, '3', -0.0133333, 28, 0, '2017-09-13 05:07:40'),
(6, 1202, '3', -1.33333, 20, 0, '2017-09-13 05:07:41'),
(24, 2835, '2', -1.84765, 31, 0, '2017-09-13 05:07:41'),
(27, 1474, '0', 0, 6, -1, '2017-09-13 05:07:43'),
(25, 755, '0', 0, 43, -1, '2017-09-13 05:07:43'),
(3, 1938, '1', 0.0638021, 41, 1, '2017-09-13 05:07:43'),
(11, 1202, '1', 0.333333, 24, 1, '2017-09-13 05:07:44'),
(26, 721, '4', -0.3675, 26, 0, '2017-09-13 05:07:45'),
(17, 1291, '0', -0.0075, 20, 0, '2017-09-13 05:07:45'),
(10, 1257, '2', -0.125, 46, 0, '2017-09-13 05:07:45'),
(20, 2904, '3', 2.69752, 14, 1, '2017-09-13 05:07:47'),
(4, 1263, '2', -1.08, 16, 0, '2017-09-13 05:07:47'),
(12, 1218, '3', -0.1875, 15, 0, '2017-09-13 05:07:48'),
(6, 1219, '3', 2.04545, 7, 1, '2017-09-13 05:07:48'),
(15, 2626, '1', -1.4, 32, 0, '2017-09-13 05:07:51'),
(20, 2901, '4', 2.89738, 5, 1, '2017-09-13 05:07:52'),
(11, 1293, '1', -1.33333, 8, 0, '2017-09-13 05:07:52'),
(9, 1949, '1', -0.886106, 21, 0, '2017-09-13 05:07:53'),
(24, 2630, '2', 2.35, 13, 1, '2017-09-13 05:07:54'),
(21, 1188, '1', 1.79878, 15, 1, '2017-09-13 05:07:55'),
(17, 1174, '3', 1.13609, 10, 1, '2017-09-13 05:07:55'),
(22, 1216, '0', -0.00520833, 24, 0, '2017-09-13 05:07:56'),
(10, 1217, '3', 1.05, 13, 1, '2017-09-13 05:07:58'),
(5, 1172, '4', 0.03, 18, 1, '2017-09-13 05:07:58'),
(6, 1281, '1', -1.9, 11, 0, '2017-09-13 05:07:59'),
(27, 3000, '0', 0, 16, -1, '2017-09-13 05:08:00'),
(11, 1219, '3', 1.21488, 8, 1, '2017-09-13 05:08:00'),
(2, 1935, '3', -0.00443787, 50, 0, '2017-09-13 05:08:00'),
(14, 2847, '3', -1.13703, 46, 0, '2017-09-13 05:08:00'),
(20, 2895, '2', 2.81118, 9, 1, '2017-09-13 05:08:01'),
(26, 729, '0', 0, 18, -1, '2017-09-13 05:08:03'),
(4, 1172, '4', 0.12, 16, 1, '2017-09-13 05:08:03'),
(17, 1216, '4', 1.17188, 9, 1, '2017-09-13 05:08:03'),
(21, 1283, '4', 2.09443, 10, 1, '2017-09-13 05:08:04'),
(28, 1263, '3', -0.03, 36, 0, '2017-09-13 05:08:04'),
(25, 752, '3', 1.69565, 20, 1, '2017-09-13 05:08:04'),
(19, 1175, '4', 0.5625, 26, 1, '2017-09-13 05:08:05'),
(1, 2874, '3', -1.77482, 39, 0, '2017-09-13 05:08:05'),
(14, 2833, '3', 2.83093, 5, 1, '2017-09-13 05:08:05'),
(29, 2731, '0', 0, 34, -1, '2017-09-13 05:08:07'),
(13, 1263, '1', 0.12, 32, 1, '2017-09-13 05:08:07'),
(15, 2634, '2', -2.05, 19, 0, '2017-09-13 05:08:10'),
(24, 2819, '2', 2.40251, 17, 1, '2017-09-13 05:08:11'),
(7, 755, '0', -0.0625, 48, 0, '2017-09-13 05:08:12'),
(30, 1210, '0', -0.00520833, 24, 0, '2017-09-13 05:08:12'),
(29, 2841, '3', 2.83093, 5, 1, '2017-09-13 05:08:12'),
(9, 1931, '3', -0.826875, 19, 0, '2017-09-13 05:08:12'),
(30, 1203, '1', -0.0533333, 34, 0, '2017-09-13 05:08:13'),
(14, 2838, '3', 2.76188, 7, 1, '2017-09-13 05:08:13'),
(11, 1257, '1', -1.50521, 14, 0, '2017-09-13 05:08:14'),
(18, 2616, '4', 1.2, 36, 1, '2017-09-13 05:08:14'),
(27, 1470, '1', 2.04, 16, 1, '2017-09-13 05:08:16'),
(20, 2890, '0', 0, 15, -1, '2017-09-13 05:08:16'),
(3, 2157, '2', -0.506059, 33, 0, '2017-09-13 05:08:17'),
(22, 1291, '0', -0.0075, 20, 0, '2017-09-13 05:08:17'),
(12, 1292, '2', -0.00333333, 29, 0, '2017-09-13 05:08:17'),
(27, 1491, '1', -2.71429, 4, 0, '2017-09-13 05:08:19'),
(16, 1463, '1', -0.0139463, 41, 0, '2017-09-13 05:08:19'),
(25, 743, '4', 1.75, 15, 1, '2017-09-13 05:08:19'),
(8, 1209, '2', 0.80886, 43, 1, '2017-09-13 05:08:20'),
(29, 2847, '4', 2.69195, 9, 1, '2017-09-13 05:08:21'),
(20, 2893, '4', 2.89738, 5, 1, '2017-09-13 05:08:21'),
(26, 726, '2', -0.438581, 21, 0, '2017-09-13 05:08:24'),
(1, 2835, '3', 2.36512, 18, 1, '2017-09-13 05:08:24'),
(7, 502, '2', 2.21739, 12, 1, '2017-09-13 05:08:24'),
(24, 2820, '1', -2.54929, 13, 0, '2017-09-13 05:08:24'),
(28, 1195, '0', -0.0075, 20, 0, '2017-09-13 05:08:25'),
(9, 1913, '3', -1.92, 12, 0, '2017-09-13 05:08:25'),
(14, 2819, '2', 2.47645, 15, 1, '2017-09-13 05:08:27'),
(4, 1227, '0', -0.00520833, 24, 0, '2017-09-13 05:08:27'),
(5, 1276, '4', -0.0117188, 30, 0, '2017-09-13 05:08:28'),
(17, 1203, '3', 0.0833333, 25, 1, '2017-09-13 05:08:29'),
(29, 2734, '3', 2.72703, 8, 1, '2017-09-13 05:08:29'),
(10, 1202, '1', 0.416667, 31, 1, '2017-09-13 05:08:30'),
(16, 3051, '0', 0, 12, -1, '2017-09-13 05:08:31'),
(20, 2934, '2', 2.78495, 12, 1, '2017-09-13 05:08:33'),
(28, 1177, '4', -1.04752, 9, 0, '2017-09-13 05:08:34'),
(11, 1281, '3', 0.333333, 20, 1, '2017-09-13 05:08:34'),
(18, 2625, '3', 1.95, 21, 1, '2017-09-13 05:08:35'),
(27, 1468, '2', 1.08, 16, 1, '2017-09-13 05:08:36'),
(26, 732, '4', 1.22454, 13, 1, '2017-09-13 05:08:36'),
(22, 1184, '4', 0.046875, 21, 1, '2017-09-13 05:08:37'),
(13, 1276, '0', 0, 30, -1, '2017-09-13 05:08:38'),
(20, 2918, '2', -2.91424, 5, 0, '2017-09-13 05:08:39'),
(12, 1263, '2', -0.48, 24, 0, '2017-09-13 05:08:42'),
(17, 1198, '4', 0.3675, 13, 1, '2017-09-13 05:08:42'),
(28, 1186, '3', 1.53061, 8, 1, '2017-09-13 05:08:42'),
(4, 1169, '2', 0.520833, 14, 1, '2017-09-13 05:08:42'),
(24, 2823, '3', 2.36512, 18, 1, '2017-09-13 05:08:42'),
(11, 1284, '3', 0.75, 10, 1, '2017-09-13 05:08:44'),
(15, 2621, '4', -1.15, 37, 0, '2017-09-13 05:08:47'),
(6, 1208, '1', 0.12, 48, 1, '2017-09-13 05:08:48'),
(20, 2931, '4', 2.80416, 11, 1, '2017-09-13 05:08:49'),
(10, 1284, '0', -0.15, 20, 0, '2017-09-13 05:08:50'),
(19, 1287, '4', -0.125, 46, 0, '2017-09-13 05:08:51'),
(15, 2620, '4', 2.75, 5, 1, '2017-09-13 05:08:52'),
(9, 2148, '3', -0.316875, 27, 0, '2017-09-13 05:08:52'),
(5, 1216, '0', -0.00520833, 24, 0, '2017-09-13 05:08:52'),
(16, 1457, '3', -0.6075, 22, 0, '2017-09-13 05:08:53'),
(2, 1916, '3', -0.0222949, 53, 0, '2017-09-13 05:08:53'),
(17, 1186, '3', 0.979592, 12, 1, '2017-09-13 05:08:54'),
(22, 1172, '1', -0.0675, 17, 0, '2017-09-13 05:08:55'),
(18, 2627, '2', 2, 20, 1, '2017-09-13 05:08:55'),
(13, 1297, '3', 1.54083, 17, 1, '2017-09-13 05:08:55'),
(24, 2728, '3', -2.513, 14, 0, '2017-09-13 05:08:56'),
(11, 1217, '3', 0.48, 12, 1, '2017-09-13 05:08:56'),
(10, 1189, '1', -2.25, 7, 0, '2017-09-13 05:08:57'),
(26, 487, '4', 0.6075, 22, 1, '2017-09-13 05:08:58'),
(27, 1481, '4', -1.2, 24, 0, '2017-09-13 05:09:00'),
(21, 1250, '1', 0.64633, 54, 1, '2017-09-13 05:09:00'),
(7, 477, '3', -0.652174, 36, 0, '2017-09-13 05:09:00'),
(3, 1913, '1', 0.240833, 43, 1, '2017-09-13 05:09:00'),
(19, 1217, '3', 1.5, 10, 1, '2017-09-13 05:09:01'),
(24, 2838, '3', 2.76188, 7, 1, '2017-09-13 05:09:03'),
(2, 1924, '3', -1.49481, 10, 0, '2017-09-13 05:09:04'),
(25, 750, '1', -0.130435, 44, 0, '2017-09-13 05:09:04'),
(29, 2868, '2', 1.89737, 36, 1, '2017-09-13 05:09:05'),
(30, 1276, '2', -0.354492, 43, 0, '2017-09-13 05:09:05'),
(15, 2628, '4', -2.3, 14, 0, '2017-09-13 05:09:05'),
(4, 1202, '3', -0.333333, 24, 0, '2017-09-13 05:09:06'),
(1, 2883, '0', 0, 44, -1, '2017-09-13 05:09:07'),
(16, 1466, '0', 0, 15, -1, '2017-09-13 05:09:08'),
(6, 1282, '3', 0.9, 21, 1, '2017-09-13 05:09:09'),
(5, 1183, '2', 0.154959, 17, 1, '2017-09-13 05:09:09'),
(13, 1191, '3', 1.39286, 15, 1, '2017-09-13 05:09:10'),
(12, 1297, '3', 0.853333, 28, 1, '2017-09-13 05:09:10'),
(30, 1186, '0', -0.0344388, 32, 0, '2017-09-13 05:09:12'),
(2, 1902, '4', -1.5498, 9, 0, '2017-09-13 05:09:13'),
(4, 1217, '3', 0.9075, 9, 1, '2017-09-13 05:09:15'),
(10, 1203, '3', 0.48, 18, 1, '2017-09-13 05:09:15'),
(8, 1229, '0', -0.209987, 54, 0, '2017-09-13 05:09:15'),
(1, 2877, '2', 2.79285, 8, 1, '2017-09-13 05:09:16'),
(9, 1899, '3', 0.6862, 24, 1, '2017-09-13 05:09:16'),
(26, 725, '3', -0.58391, 19, 0, '2017-09-13 05:09:18'),
(6, 1217, '3', 1.65, 9, 1, '2017-09-13 05:09:18'),
(16, 1459, '3', -1.6875, 10, 0, '2017-09-13 05:09:19'),
(29, 2889, '1', -2.62679, 14, 0, '2017-09-13 05:09:19'),
(10, 1171, '4', 2.25, 5, 1, '2017-09-13 05:09:19'),
(27, 1473, '1', 1.0092, 21, 1, '2017-09-13 05:09:21'),
(18, 2819, '1', -2.05434, 26, 0, '2017-09-13 05:09:21'),
(2, 1910, '4', -1.78255, 11, 0, '2017-09-13 05:09:24'),
(3, 1924, '4', 0.259516, 24, 1, '2017-09-13 05:09:25'),
(20, 1195, '0', -0.0075, 20, 0, '2017-09-13 05:09:25'),
(17, 1175, '2', -0.00292969, 31, 0, '2017-09-13 05:09:25'),
(24, 2731, '3', -2.21246, 22, 0, '2017-09-13 05:09:25'),
(28, 1208, '1', 0.42, 43, 1, '2017-09-13 05:09:25'),
(11, 1199, '3', 0.00292969, 31, 1, '2017-09-13 05:09:27'),
(14, 2823, '0', -0.195743, 60, 0, '2017-09-13 05:09:28'),
(14, 2729, '2', 0, 60, 1, '2017-09-13 05:09:28'),
(13, 1220, '1', -0.964286, 19, 0, '2017-09-13 05:09:30'),
(21, 1289, '2', 1.1098, 31, 1, '2017-09-13 05:09:30'),
(18, 2618, '3', 2.55, 9, 1, '2017-09-13 05:09:31'),
(24, 2816, '4', 2.79651, 6, 1, '2017-09-13 05:09:32'),
(22, 1261, '0', 0, 37, -1, '2017-09-13 05:09:32'),
(22, 1297, '0', 0, 37, -1, '2017-09-13 05:09:32'),
(25, 745, '2', 0.825, 29, 1, '2017-09-13 05:09:33'),
(9, 1946, '2', -0.9075, 18, 0, '2017-09-13 05:09:34'),
(27, 1484, '2', -2, 14, 0, '2017-09-13 05:09:35'),
(5, 1203, '3', 0.0533333, 26, 1, '2017-09-13 05:09:36'),
(2, 1890, '2', -1.40443, 12, 0, '2017-09-13 05:09:36'),
(8, 1296, '3', 0, 24, 0, '2017-09-13 05:09:39'),
(20, 1291, '1', -0.1875, 15, 0, '2017-09-13 05:09:40'),
(26, 489, '4', -0.541875, 23, 0, '2017-09-13 05:09:41'),
(16, 1467, '3', 1.20333, 22, 1, '2017-09-13 05:09:41'),
(1, 2888, '3', 2.25832, 26, 1, '2017-09-13 05:09:42'),
(4, 1199, '4', -0.046875, 28, 0, '2017-09-13 05:09:44'),
(29, 2820, '1', -2.01386, 27, 0, '2017-09-13 05:09:46'),
(7, 479, '0', -0.0652174, 46, 0, '2017-09-13 05:09:47'),
(22, 1177, '4', -0.396694, 14, 0, '2017-09-13 05:09:47'),
(19, 1269, '1', 0, 48, 1, '2017-09-13 05:09:50'),
(16, 2929, '4', 1.17188, 9, 1, '2017-09-13 05:09:50'),
(25, 741, '2', 1.65789, 17, 1, '2017-09-13 05:09:50'),
(6, 1269, '1', 1, 32, 1, '2017-09-13 05:09:50'),
(17, 1202, '3', -0.280093, 25, 0, '2017-09-13 05:09:51'),
(10, 1175, '0', -0.09375, 32, 0, '2017-09-13 05:09:52'),
(11, 1282, '4', -0.12, 24, 0, '2017-09-13 05:09:52'),
(26, 734, '2', 1.08, 12, 1, '2017-09-13 05:09:53'),
(21, 1295, '0', -0.360562, 24, 0, '2017-09-13 05:09:54'),
(24, 2845, '1', 2.17348, 23, 1, '2017-09-13 05:09:54'),
(27, 1475, '1', -1.03355, 19, 0, '2017-09-13 05:09:54'),
(16, 3044, '3', 2.08333, 4, 1, '2017-09-13 05:09:54'),
(5, 1227, '0', 0, 18, -1, '2017-09-13 05:09:54'),
(10, 1219, '3', 2.45455, 4, 1, '2017-09-13 05:09:56'),
(4, 1171, '4', 0.3675, 13, 1, '2017-09-13 05:09:57'),
(12, 1270, '0', -0.00141777, 46, 0, '2017-09-13 05:09:57'),
(1, 2881, '2', 2.53969, 17, 1, '2017-09-13 05:09:59'),
(22, 1197, '1', 0.520833, 14, 1, '2017-09-13 05:10:01'),
(14, 2733, '2', 1.80492, 32, 1, '2017-09-13 05:10:01'),
(3, 1932, '2', -0.141777, 36, 0, '2017-09-13 05:10:01'),
(2, 1932, '2', -0.625236, 25, 0, '2017-09-13 05:10:01'),
(11, 1294, '3', 1.02083, 10, 1, '2017-09-13 05:10:02'),
(13, 1268, '1', 0.875, 34, 1, '2017-09-13 05:10:04'),
(15, 2631, '3', 0.1, 58, 1, '2017-09-13 05:10:04'),
(24, 2825, '3', 2.62111, 11, 1, '2017-09-13 05:10:06'),
(4, 1293, '4', -1.17188, 9, 0, '2017-09-13 05:10:06'),
(1, 2889, '1', -2.84605, 6, 0, '2017-09-13 05:10:06'),
(18, 2823, '3', 1.67358, 35, 1, '2017-09-13 05:10:06'),
(29, 2735, '1', 2.21246, 22, 1, '2017-09-13 05:10:08'),
(28, 1287, '2', -0.25, 44, 0, '2017-09-13 05:10:09'),
(26, 486, '1', 0.835648, 17, 1, '2017-09-13 05:10:10'),
(22, 1173, '2', 0.75, 10, 1, '2017-09-13 05:10:10'),
(12, 1220, '3', -0.75, 14, 0, '2017-09-13 05:10:10'),
(11, 1191, '3', 1.2398, 10, 1, '2017-09-13 05:10:12'),
(10, 1220, '4', -1.28571, 16, 0, '2017-09-13 05:10:12'),
(20, 1276, '0', -0.00292969, 32, 0, '2017-09-13 05:10:13'),
(16, 1451, '1', 0.668981, 19, 1, '2017-09-13 05:10:14'),
(4, 1219, '3', 1.04752, 9, 1, '2017-09-13 05:10:14'),
(25, 475, '0', 0, 24, -1, '2017-09-13 05:10:14'),
(1, 2871, '2', 2.71109, 11, 1, '2017-09-13 05:10:17'),
(25, 746, '4', 2.75, 3, 1, '2017-09-13 05:10:18'),
(5, 1184, '0', -0.00520833, 24, 0, '2017-09-13 05:10:19'),
(9, 867, '2', -0.700833, 31, 0, '2017-09-13 05:10:19'),
(3, 1907, '3', 0.826875, 19, 1, '2017-09-13 05:10:20'),
(10, 1191, '3', 2.14286, 8, 1, '2017-09-13 05:10:21'),
(24, 2833, '3', 2.36512, 18, 1, '2017-09-13 05:10:23'),
(28, 1171, '4', 0.9, 14, 1, '2017-09-13 05:10:24'),
(27, 1472, '2', -0.1875, 30, 0, '2017-09-13 05:10:24'),
(15, 2624, '2', 1.9, 22, 1, '2017-09-13 05:10:26'),
(26, 730, '3', -0.333333, 24, 0, '2017-09-13 05:10:34'),
(7, 749, '2', 0.125, 46, 1, '2017-09-13 05:10:34'),
(2, 1949, '3', -0.277883, 32, 0, '2017-09-13 05:10:34'),
(5, 1197, '3', -0.333333, 16, 0, '2017-09-13 05:10:34'),
(10, 1281, '3', 1.5, 15, 1, '2017-09-13 05:10:35'),
(22, 1203, '3', 0.0833333, 25, 1, '2017-09-13 05:10:36'),
(13, 1199, '0', -0.09375, 32, 0, '2017-09-13 05:10:36'),
(16, 1455, '3', -0.48, 24, 0, '2017-09-13 05:10:38'),
(14, 2864, '2', 1.85742, 37, 1, '2017-09-13 05:10:38'),
(19, 1257, '0', -0.0625, 48, 0, '2017-09-13 05:10:38'),
(29, 2732, '0', 0, 32, -1, '2017-09-13 05:10:41'),
(11, 1268, '1', 1.1875, 29, 1, '2017-09-13 05:10:41'),
(2, 1980, '4', 2.00826, 8, 1, '2017-09-13 05:10:41'),
(24, 2734, '1', -2.36512, 18, 0, '2017-09-13 05:10:42'),
(6, 1265, '0', -0.0576923, 52, 0, '2017-09-13 05:10:43'),
(18, 2729, '4', -1.58309, 37, 0, '2017-09-13 05:10:43'),
(28, 1265, '3', -1.84615, 20, 0, '2017-09-13 05:10:44'),
(17, 1265, '0', -0.00110947, 52, 0, '2017-09-13 05:10:44'),
(26, 723, '1', 1.56481, 10, 1, '2017-09-13 05:10:44'),
(21, 1209, '0', -0.221042, 50, 0, '2017-09-13 05:10:44'),
(7, 739, '1', 2.08333, 11, 1, '2017-09-13 05:10:44'),
(5, 1294, '3', 1.02083, 10, 1, '2017-09-13 05:10:45'),
(11, 1171, '4', 2.25, 5, 1, '2017-09-13 05:10:46'),
(22, 1171, '4', 0.75, 10, 1, '2017-09-13 05:10:46'),
(24, 2852, '2', 2.76188, 7, 1, '2017-09-13 05:10:48'),
(4, 1200, '2', -0.00925926, 34, 0, '2017-09-13 05:10:49'),
(20, 1263, '1', 0.03, 36, 1, '2017-09-13 05:10:50'),
(15, 2625, '3', 1.75, 25, 1, '2017-09-13 05:10:51'),
(16, 1452, '2', 1.36688, 13, 1, '2017-09-13 05:10:51'),
(10, 1294, '3', 0.875, 17, 1, '2017-09-13 05:10:52'),
(26, 478, '2', -2.0172, 9, 0, '2017-09-13 05:10:53'),
(29, 2729, '1', -2.513, 14, 0, '2017-09-13 05:10:54'),
(18, 2728, '4', 2.513, 14, 1, '2017-09-13 05:10:58'),
(1, 2862, '4', 1.68819, 41, 1, '2017-09-13 05:10:58'),
(27, 1485, '2', -0.359467, 34, 0, '2017-09-13 05:10:59'),
(19, 1293, '4', -0.5, 20, 0, '2017-09-13 05:10:59'),
(13, 1202, '3', -1.16667, 22, 0, '2017-09-13 05:10:59'),
(2, 2054, '4', -0.9075, 18, 0, '2017-09-13 05:11:00'),
(20, 1177, '4', -0.75, 11, 0, '2017-09-13 05:11:00'),
(12, 1265, '2', 0.00110947, 51, 1, '2017-09-13 05:11:02'),
(16, 3039, '1', 0.869823, 12, 1, '2017-09-13 05:11:02'),
(22, 1268, '1', 1.2513, 17, 1, '2017-09-13 05:11:03'),
(11, 1265, '3', -2.01923, 17, 0, '2017-09-13 05:11:03'),
(28, 1284, '3', 0.0075, 19, 1, '2017-09-13 05:11:03'),
(17, 1219, '1', -0.0247934, 20, 0, '2017-09-13 05:11:03'),
(21, 1264, '0', 0, 19, -1, '2017-09-13 05:11:04'),
(6, 1294, '3', 0.375, 21, 1, '2017-09-13 05:11:04'),
(25, 771, '0', -0.233677, 46, 0, '2017-09-13 05:11:05'),
(8, 173, '4', 0.884168, 84, 1, '2017-09-13 05:11:05'),
(27, 3002, '3', -1.60207, 7, 0, '2017-09-13 05:11:06'),
(1, 2899, '4', -2.8331, 8, 0, '2017-09-13 05:11:06'),
(15, 2616, '1', -2.2, 16, 0, '2017-09-13 05:11:07'),
(7, 774, '1', 1.83701, 25, 1, '2017-09-13 05:11:10'),
(14, 2871, '1', -2.04939, 32, 0, '2017-09-13 05:11:11'),
(3, 1916, '3', -0.043698, 51, 0, '2017-09-13 05:11:12'),
(24, 2735, '3', -2.13414, 24, 0, '2017-09-13 05:11:12');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(4, 1287, '2', -0.813802, 23, 0, '2017-09-13 05:11:13'),
(1, 2870, '3', 2.81957, 7, 1, '2017-09-13 05:11:13'),
(6, 1171, '4', 1.65, 9, 1, '2017-09-13 05:11:13'),
(9, 871, '3', 0.0991736, 54, 1, '2017-09-13 05:11:14'),
(2, 2053, '4', 1.39463, 14, 1, '2017-09-13 05:11:14'),
(20, 1172, '2', -0.1875, 15, 0, '2017-09-13 05:11:15'),
(13, 1175, '4', 1.40625, 17, 1, '2017-09-13 05:11:15'),
(22, 1220, '1', -0.860969, 13, 0, '2017-09-13 05:11:17'),
(14, 2866, '4', 2.81957, 7, 1, '2017-09-13 05:11:17'),
(10, 1282, '4', -0.4, 26, 0, '2017-09-13 05:11:19'),
(18, 2825, '3', 2.25111, 21, 1, '2017-09-13 05:11:19'),
(25, 761, '3', 2.30599, 15, 1, '2017-09-13 05:11:19'),
(16, 1456, '1', 0.991875, 17, 1, '2017-09-13 05:11:20'),
(27, 1471, '4', 1.61333, 16, 1, '2017-09-13 05:11:22'),
(19, 1294, '0', -0.125, 24, 0, '2017-09-13 05:11:23'),
(6, 1284, '3', 1.35, 11, 1, '2017-09-13 05:11:25'),
(2, 1979, '4', 1.47, 12, 1, '2017-09-13 05:11:25'),
(20, 1186, '3', 1.2398, 10, 1, '2017-09-13 05:11:26'),
(26, 749, '2', 0.255208, 34, 1, '2017-09-13 05:11:26'),
(1, 2901, '1', -2.69752, 14, 0, '2017-09-13 05:11:27'),
(21, 1206, '3', -2.13414, 24, 0, '2017-09-13 05:11:27'),
(5, 1269, '3', -0.0325521, 43, 0, '2017-09-13 05:11:28'),
(8, 1289, '2', 1.69582, 23, 1, '2017-09-13 05:11:28'),
(4, 1175, '4', 0.65918, 17, 1, '2017-09-13 05:11:30'),
(16, 1461, '3', 1.83743, 10, 1, '2017-09-13 05:11:30'),
(1, 2886, '1', 2.89828, 4, 1, '2017-09-13 05:11:31'),
(6, 1191, '3', 2.35714, 6, 1, '2017-09-13 05:11:31'),
(12, 1199, '2', -0.00292969, 31, 0, '2017-09-13 05:11:33'),
(18, 2833, '3', 2.47645, 15, 1, '2017-09-13 05:11:34'),
(16, 1462, '1', 2.29688, 5, 1, '2017-09-13 05:11:35'),
(15, 2619, '3', 1.55, 29, 1, '2017-09-13 05:11:35'),
(24, 2729, '1', -2.17348, 23, 0, '2017-09-13 05:11:36'),
(4, 1191, '3', 1.6875, 7, 1, '2017-09-13 05:11:36'),
(29, 2835, '1', -1.29416, 43, 0, '2017-09-13 05:11:37'),
(21, 1296, '4', -1.99347, 11, 0, '2017-09-13 05:11:39'),
(20, 1270, '0', 0, 13, -1, '2017-09-13 05:11:39'),
(19, 1200, '2', -1.66667, 16, 0, '2017-09-13 05:11:39'),
(11, 1208, '1', 0.78, 37, 1, '2017-09-13 05:11:41'),
(24, 2732, '4', 2.76188, 7, 1, '2017-09-13 05:11:42'),
(14, 2882, '1', 2.29129, 25, 1, '2017-09-13 05:11:43'),
(7, 769, '1', 1.26165, 32, 1, '2017-09-13 05:11:43'),
(29, 2833, '3', 2.79651, 6, 1, '2017-09-13 05:11:43'),
(10, 1269, '1', 1.5, 24, 1, '2017-09-13 05:11:43'),
(22, 1287, '2', -0.574219, 27, 0, '2017-09-13 05:11:44'),
(3, 1905, '3', -0.239603, 33, 0, '2017-09-13 05:11:45'),
(2, 2048, '4', -0.816635, 22, 0, '2017-09-13 05:11:48'),
(1, 2895, '2', 2.62572, 17, 1, '2017-09-13 05:11:48'),
(29, 2825, '3', 2.83093, 5, 1, '2017-09-13 05:11:49'),
(16, 1465, '1', 0.646684, 15, 1, '2017-09-13 05:11:50'),
(24, 2841, '3', 2.72703, 8, 1, '2017-09-13 05:11:50'),
(28, 1269, '2', -0.00130208, 47, 0, '2017-09-13 05:11:51'),
(17, 1268, '2', -0.00130208, 47, 0, '2017-09-13 05:11:51'),
(25, 766, '1', 1.07428, 33, 1, '2017-09-13 05:11:53'),
(5, 1199, '2', -0.1875, 24, 0, '2017-09-13 05:11:53'),
(1, 2891, '1', 2.89738, 5, 1, '2017-09-13 05:11:53'),
(12, 1294, '1', -0.0833333, 20, 0, '2017-09-13 05:11:54'),
(26, 746, '3', -0.148148, 28, 0, '2017-09-13 05:11:54'),
(20, 1218, '4', 0.12, 16, 1, '2017-09-13 05:11:55'),
(11, 1200, '2', -1.75, 15, 0, '2017-09-13 05:11:56'),
(13, 1257, '4', 0.3125, 43, 1, '2017-09-13 05:11:59'),
(9, 362, '4', -0.163333, 46, 0, '2017-09-13 05:12:00'),
(7, 766, '2', -2.06584, 18, 0, '2017-09-13 05:12:01'),
(1, 2905, '1', 2.85477, 7, 1, '2017-09-13 05:12:01'),
(2, 1982, '1', 1.54395, 13, 1, '2017-09-13 05:12:01'),
(10, 1200, '4', 1.41667, 19, 1, '2017-09-13 05:12:03'),
(27, 2145, '2', 1.9571, 5, 1, '2017-09-13 05:12:03'),
(17, 1220, '4', -0.75, 14, 0, '2017-09-13 05:12:05'),
(4, 1281, '1', -0.0133333, 28, 0, '2017-09-13 05:12:05'),
(15, 2635, '4', -1.55, 29, 0, '2017-09-13 05:12:05'),
(20, 1292, '2', -1.20333, 11, 0, '2017-09-13 05:12:06'),
(16, 1453, '1', 1.47, 15, 1, '2017-09-13 05:12:06'),
(24, 2847, '4', 2.47645, 15, 1, '2017-09-13 05:12:06'),
(26, 483, '4', -1.63894, 12, 0, '2017-09-13 05:12:06'),
(19, 1281, '1', -0.3, 27, 0, '2017-09-13 05:12:06'),
(28, 1220, '3', -0.46301, 17, 0, '2017-09-13 05:12:07'),
(22, 1208, '0', 0, 24, -1, '2017-09-13 05:12:08'),
(27, 2152, '0', 0, 8, -1, '2017-09-13 05:12:11'),
(16, 3004, '2', -2.08333, 5, 0, '2017-09-13 05:12:11'),
(18, 2731, '4', 1.58309, 37, 1, '2017-09-13 05:12:12'),
(29, 2881, '1', -2.32379, 24, 0, '2017-09-13 05:12:12'),
(5, 1171, '0', -0.0075, 20, 0, '2017-09-13 05:12:13'),
(1, 2931, '4', 2.76548, 13, 1, '2017-09-13 05:12:13'),
(3, 1949, '3', -0.409735, 29, 0, '2017-09-13 05:12:15'),
(6, 1275, '4', 0.90856, 45, 1, '2017-09-13 05:12:16'),
(17, 1189, '3', 0.979592, 12, 1, '2017-09-13 05:12:18'),
(19, 1202, '1', 2.08333, 11, 1, '2017-09-13 05:12:18'),
(11, 1175, '4', 0.9375, 22, 1, '2017-09-13 05:12:18'),
(24, 2855, '1', -2.56905, 16, 0, '2017-09-13 05:12:22'),
(13, 1294, '0', -0.125, 24, 0, '2017-09-13 05:12:23'),
(6, 1283, '4', 2.19301, 9, 1, '2017-09-13 05:12:25'),
(5, 1191, '3', 0.860969, 13, 1, '2017-09-13 05:12:25'),
(10, 1295, '0', -0.360562, 24, 0, '2017-09-13 05:12:27'),
(21, 172, '2', 2.02494, 49, 1, '2017-09-13 05:12:28'),
(28, 1217, '0', -0.0075, 20, 0, '2017-09-13 05:12:28'),
(7, 488, '3', 1.10064, 28, 1, '2017-09-13 05:12:28'),
(29, 2728, '4', 2.40251, 17, 1, '2017-09-13 05:12:30'),
(12, 1257, '1', -0.1875, 36, 0, '2017-09-13 05:12:30'),
(20, 1210, '0', -0.00520833, 24, 0, '2017-09-13 05:12:30'),
(2, 1960, '1', 0.75, 30, 1, '2017-09-13 05:12:32'),
(25, 492, '0', -0.256496, 40, 0, '2017-09-13 05:12:33'),
(24, 2733, '1', -2.58532, 12, 0, '2017-09-13 05:12:34'),
(8, 1264, '0', -0.183693, 66, 0, '2017-09-13 05:12:35'),
(14, 2889, '2', 1.1619, 51, 1, '2017-09-13 05:12:35'),
(3, 2057, '4', 0.27, 21, 1, '2017-09-13 05:12:35'),
(29, 2886, '1', 2.81957, 7, 1, '2017-09-13 05:12:37'),
(27, 2147, '4', 0.9075, 27, 1, '2017-09-13 05:12:38'),
(20, 1190, '4', 1.53061, 8, 1, '2017-09-13 05:12:39'),
(12, 1191, '3', 1.2398, 10, 1, '2017-09-13 05:12:41'),
(26, 755, '4', -0.220052, 35, 0, '2017-09-13 05:12:42'),
(18, 2835, '3', 1.88988, 30, 1, '2017-09-13 05:12:42'),
(24, 2886, '1', 2.69195, 9, 1, '2017-09-13 05:12:43'),
(4, 1269, '2', -0.105469, 39, 0, '2017-09-13 05:12:44'),
(22, 1131, '1', 0.75, 10, 1, '2017-09-13 05:12:44'),
(25, 764, '1', -2.28943, 12, 0, '2017-09-13 05:12:46'),
(29, 2877, '2', 2.73861, 10, 1, '2017-09-13 05:12:46'),
(20, 1173, '2', 1.08, 8, 1, '2017-09-13 05:12:47'),
(18, 2841, '3', 2.83093, 5, 1, '2017-09-13 05:12:47'),
(19, 1208, '1', 1.2, 30, 1, '2017-09-13 05:12:47'),
(17, 1199, '3', 0.00292969, 31, 1, '2017-09-13 05:12:48'),
(11, 1287, '1', -1.125, 30, 0, '2017-09-13 05:12:49'),
(10, 1289, '2', 1.62865, 24, 1, '2017-09-13 05:12:51'),
(8, 1187, '2', 1.88988, 16, 1, '2017-09-13 05:12:51'),
(15, 2622, '1', -0.65, 47, 0, '2017-09-13 05:12:52'),
(16, 1460, '1', 0.0226843, 42, 1, '2017-09-13 05:12:53'),
(2, 1989, '1', 0.880208, 22, 1, '2017-09-13 05:12:54'),
(13, 1265, '1', -1.21154, 31, 0, '2017-09-13 05:12:55'),
(26, 754, '1', -1.33333, 14, 0, '2017-09-13 05:12:55'),
(24, 2881, '3', -2.54929, 13, 0, '2017-09-13 05:12:56'),
(22, 375, '1', 0.1875, 15, 1, '2017-09-13 05:12:59'),
(7, 493, '0', -0.310723, 30, 0, '2017-09-13 05:12:59'),
(12, 1175, '2', -0.495117, 19, 0, '2017-09-13 05:12:59'),
(28, 1202, '1', 0.0578704, 31, 1, '2017-09-13 05:12:59'),
(30, 1292, '0', -0.00333333, 30, 0, '2017-09-13 05:13:01'),
(1, 2926, '3', 1.80185, 47, 1, '2017-09-13 05:13:01'),
(29, 2870, '2', -2.56905, 16, 0, '2017-09-13 05:13:02'),
(16, 1478, '3', -1.80187, 9, 0, '2017-09-13 05:13:02'),
(24, 2861, '2', 2.76188, 7, 1, '2017-09-13 05:13:03'),
(15, 2627, '2', 2.35, 13, 1, '2017-09-13 05:13:04'),
(18, 2887, '3', 2.50998, 18, 1, '2017-09-13 05:13:05'),
(21, 1275, '4', 1.33333, 38, 1, '2017-09-13 05:13:05'),
(4, 1265, '3', -1.0662, 21, 0, '2017-09-13 05:13:06'),
(2, 1958, '4', -1.76881, 13, 0, '2017-09-13 05:13:07'),
(22, 1105, '2', 1.08, 8, 1, '2017-09-13 05:13:07'),
(13, 1189, '1', -1.60714, 13, 0, '2017-09-13 05:13:08'),
(19, 1219, '3', 0.272727, 20, 1, '2017-09-13 05:13:08'),
(24, 2885, '4', 2.76188, 7, 1, '2017-09-13 05:13:09'),
(5, 1265, '3', -0.0898669, 43, 0, '2017-09-13 05:13:09'),
(27, 2143, '1', -0.151875, 31, 0, '2017-09-13 05:13:10'),
(17, 1294, '1', -0.0208333, 22, 0, '2017-09-13 05:13:10'),
(20, 1185, '2', -0.0344388, 25, 0, '2017-09-13 05:13:12'),
(3, 1972, '2', -0.297325, 37, 0, '2017-09-13 05:13:14'),
(1, 2914, '0', 0, 13, -1, '2017-09-13 05:13:14'),
(15, 2633, '3', 2.55, 9, 1, '2017-09-13 05:13:14'),
(6, 1299, '2', -1.21448, 49, 0, '2017-09-13 05:13:15'),
(12, 1284, '2', -0.12, 16, 0, '2017-09-13 05:13:15'),
(22, 1109, '4', -1.08, 8, 0, '2017-09-13 05:13:16'),
(24, 2877, '2', 2.81957, 7, 1, '2017-09-13 05:13:17'),
(18, 2877, '2', 2.62679, 14, 1, '2017-09-13 05:13:19'),
(6, 1176, '4', 2.63128, 5, 1, '2017-09-13 05:13:21'),
(16, 1474, '4', -0.89966, 19, 0, '2017-09-13 05:13:22'),
(27, 2161, '3', 1.14446, 13, 1, '2017-09-13 05:13:22'),
(28, 1294, '1', 0, 24, 0, '2017-09-13 05:13:23'),
(11, 1275, '2', -1.05556, 35, 0, '2017-09-13 05:13:24'),
(2, 2052, '4', -1.19234, 17, 0, '2017-09-13 05:13:24'),
(9, 2401, '4', 0.131157, 87, 1, '2017-09-13 05:13:28'),
(19, 1220, '4', -0.75, 21, 0, '2017-09-13 05:13:29'),
(20, 1227, '2', -0.1875, 18, 0, '2017-09-13 05:13:30'),
(1, 2928, '1', -2.70534, 16, 0, '2017-09-13 05:13:30'),
(13, 1281, '3', 0.213333, 22, 1, '2017-09-13 05:13:30'),
(21, 1298, '1', 2.09443, 25, 1, '2017-09-13 05:13:31'),
(24, 2889, '4', -2.59808, 15, 0, '2017-09-13 05:13:31'),
(25, 759, '0', -0.233677, 46, 0, '2017-09-13 05:13:33'),
(27, 2149, '0', 0, 10, -1, '2017-09-13 05:13:33'),
(12, 1171, '4', 0.03, 18, 1, '2017-09-13 05:13:34'),
(18, 2886, '1', 2.59808, 15, 1, '2017-09-13 05:13:34'),
(28, 1219, '3', 0.75, 11, 1, '2017-09-13 05:13:35'),
(14, 2879, '0', -0.387298, 60, 0, '2017-09-13 05:13:36'),
(26, 756, '1', -0.0638021, 41, 0, '2017-09-13 05:13:37'),
(25, 491, '1', -2.73071, 5, 0, '2017-09-13 05:13:38'),
(6, 1295, '3', -1.19055, 18, 0, '2017-09-13 05:13:39'),
(29, 2874, '3', -1.85742, 37, 0, '2017-09-13 05:13:39'),
(17, 1200, '4', 0.113426, 29, 1, '2017-09-13 05:13:40'),
(21, 1299, '3', 2.68875, 10, 1, '2017-09-13 05:13:40'),
(16, 1485, '3', -1.20821, 19, 0, '2017-09-13 05:13:41'),
(13, 1293, '2', 1.625, 11, 1, '2017-09-13 05:13:41'),
(27, 2180, '1', -1.10587, 11, 0, '2017-09-13 05:13:44'),
(29, 2885, '4', 2.87228, 5, 1, '2017-09-13 05:13:45'),
(10, 1275, '0', -0.209987, 54, 0, '2017-09-13 05:13:46'),
(14, 2886, '1', 2.68328, 12, 1, '2017-09-13 05:13:47'),
(7, 772, '0', -0.22714, 48, 0, '2017-09-13 05:13:47'),
(1, 2918, '1', -2.66371, 18, 0, '2017-09-13 05:13:48'),
(26, 499, '2', -1.40443, 12, 0, '2017-09-13 05:13:49'),
(24, 2871, '1', -2.53969, 17, 0, '2017-09-13 05:13:49'),
(19, 1171, '4', 0.15, 19, 1, '2017-09-13 05:13:49'),
(15, 2623, '2', 1.25, 35, 1, '2017-09-13 05:13:49'),
(5, 1287, '3', 0.0833333, 40, 1, '2017-09-13 05:13:49'),
(2, 1976, '1', 0.6912, 26, 1, '2017-09-13 05:13:50'),
(27, 2156, '0', 0, 6, -1, '2017-09-13 05:13:50'),
(29, 2883, '3', 2.84605, 6, 1, '2017-09-13 05:13:51'),
(30, 1270, '0', -0.00141777, 46, 0, '2017-09-13 05:13:51'),
(28, 1293, '1', -0.333333, 16, 0, '2017-09-13 05:13:51'),
(11, 173, '1', -1.5123, 29, 0, '2017-09-13 05:13:54'),
(26, 745, '2', 2.1675, 6, 1, '2017-09-13 05:13:55'),
(21, 1204, '4', 2.33688, 15, 1, '2017-09-13 05:13:56'),
(4, 1208, '0', -0.0012, 50, 0, '2017-09-13 05:13:56'),
(7, 770, '2', 2.61218, 9, 1, '2017-09-13 05:13:57'),
(3, 1976, '1', 0.0432, 44, 1, '2017-09-13 05:13:58'),
(19, 1189, '3', 1.92857, 10, 1, '2017-09-13 05:13:58'),
(20, 1194, '0', -0.00382653, 28, 0, '2017-09-13 05:13:58'),
(8, 171, '1', 0.893354, 67, 1, '2017-09-13 05:13:59'),
(25, 747, '2', 1.08333, 23, 1, '2017-09-13 05:14:00'),
(26, 739, '1', 1.94676, 7, 1, '2017-09-13 05:14:01'),
(6, 1289, '2', 1.62865, 24, 1, '2017-09-13 05:14:03'),
(13, 1282, '2', -0.8, 22, 0, '2017-09-13 05:14:04'),
(24, 2879, '3', -2.47645, 15, 0, '2017-09-13 05:14:04'),
(29, 2887, '3', 2.62679, 14, 1, '2017-09-13 05:14:04'),
(18, 2874, '1', 2.12132, 30, 1, '2017-09-13 05:14:04'),
(22, 2431, '0', 0, 50, -1, '2017-09-13 05:14:06'),
(26, 753, '4', 1.96599, 8, 1, '2017-09-13 05:14:09'),
(24, 2870, '3', 2.76188, 7, 1, '2017-09-13 05:14:11'),
(13, 1171, '4', 1.65, 9, 1, '2017-09-13 05:14:13'),
(4, 1220, '1', -0.309949, 19, 0, '2017-09-13 05:14:15'),
(5, 1282, '3', 0.0533333, 26, 1, '2017-09-13 05:14:15'),
(26, 474, '3', -2.1675, 6, 0, '2017-09-13 05:14:16'),
(15, 2733, '2', 1.65, 27, 1, '2017-09-13 05:14:16'),
(20, 1197, '1', 0.1875, 18, 1, '2017-09-13 05:14:17'),
(25, 471, '2', 1.62865, 18, 1, '2017-09-13 05:14:19'),
(28, 1200, '4', 0.113426, 29, 1, '2017-09-13 05:14:20'),
(12, 1287, '2', -0.00520833, 46, 0, '2017-09-13 05:14:20'),
(16, 1475, '3', -0.0510397, 40, 0, '2017-09-13 05:14:21'),
(30, 1185, '0', -0.00382653, 28, 0, '2017-09-13 05:14:23'),
(8, 1298, '1', 2.13414, 24, 1, '2017-09-13 05:14:24'),
(20, 1196, '4', 1.17188, 9, 1, '2017-09-13 05:14:26'),
(17, 1208, '3', -0.03, 45, 0, '2017-09-13 05:14:26'),
(16, 1469, '2', 1.92, 8, 1, '2017-09-13 05:14:29'),
(24, 2862, '4', 2.28943, 20, 1, '2017-09-13 05:14:30'),
(27, 2153, '2', 0.134246, 41, 1, '2017-09-13 05:14:31'),
(1, 2902, '2', 1.81151, 43, 1, '2017-09-13 05:14:31'),
(25, 760, '0', 0, 13, -1, '2017-09-13 05:14:32'),
(9, 923, '2', -0.242123, 63, 0, '2017-09-13 05:14:33'),
(7, 764, '1', -0.275161, 35, 0, '2017-09-13 05:14:33'),
(22, 2404, '4', -1.4518, 28, 0, '2017-09-13 05:14:34'),
(10, 1209, '4', -0.350882, 48, 0, '2017-09-13 05:14:34'),
(2, 1986, '4', -0.0192, 46, 0, '2017-09-13 05:14:37'),
(6, 1229, '0', 0, 34, -1, '2017-09-13 05:14:37'),
(19, 1265, '2', 0.75, 39, 1, '2017-09-13 05:14:38'),
(5, 1175, '2', -0.237305, 23, 0, '2017-09-13 05:14:39'),
(14, 2855, '1', -1.22474, 50, 0, '2017-09-13 05:14:39'),
(27, 2144, '3', -2.1888, 7, 0, '2017-09-13 05:14:39'),
(11, 1250, '3', -0.140833, 47, 0, '2017-09-13 05:14:41'),
(13, 1200, '4', 0.583333, 29, 1, '2017-09-13 05:14:42'),
(4, 1282, '1', -0.0533333, 26, 0, '2017-09-13 05:14:42'),
(18, 2908, '4', -2.04433, 37, 0, '2017-09-13 05:14:42'),
(12, 1293, '1', -0.046875, 21, 0, '2017-09-13 05:14:42'),
(28, 1281, '2', -0.12, 24, 0, '2017-09-13 05:14:45'),
(14, 2883, '3', 2.81957, 7, 1, '2017-09-13 05:14:46'),
(10, 1283, '4', 1.88988, 12, 1, '2017-09-13 05:14:46'),
(16, 1471, '4', 1.47, 18, 1, '2017-09-13 05:14:48'),
(3, 1961, '0', -0.0012, 50, 0, '2017-09-13 05:14:49'),
(11, 1296, '1', -1.17188, 9, 0, '2017-09-13 05:14:50'),
(1, 2923, '4', -2.66371, 18, 0, '2017-09-13 05:14:50'),
(29, 2890, '1', -1.67615, 46, 0, '2017-09-13 05:14:50'),
(30, 1263, '3', -0.151875, 31, 0, '2017-09-13 05:14:51'),
(27, 2146, '3', -0.860969, 13, 0, '2017-09-13 05:14:51'),
(24, 2859, '4', -2.38747, 22, 0, '2017-09-13 05:14:52'),
(26, 750, '1', -0.0510397, 40, 0, '2017-09-13 05:14:56'),
(5, 1219, '3', 0.154959, 17, 1, '2017-09-13 05:14:56'),
(15, 2734, '1', -1.39376, 41, 0, '2017-09-13 05:14:57'),
(29, 2866, '4', 2.81957, 7, 1, '2017-09-13 05:14:57'),
(28, 1189, '3', 0.860969, 13, 1, '2017-09-13 05:14:58'),
(4, 1284, '2', -0.12, 16, 0, '2017-09-13 05:14:58'),
(10, 1296, '2', 1.88988, 12, 1, '2017-09-13 05:14:58'),
(24, 2883, '3', 2.79651, 6, 1, '2017-09-13 05:14:58'),
(27, 2158, '3', -2.1888, 7, 0, '2017-09-13 05:14:58'),
(1, 2898, '4', 2.789, 10, 1, '2017-09-13 05:15:00'),
(22, 2408, '3', 1.54395, 26, 1, '2017-09-13 05:15:00'),
(3, 1986, '4', -1.8252, 11, 0, '2017-09-13 05:15:01'),
(20, 1261, '0', -0.00207756, 38, 0, '2017-09-13 05:15:04'),
(21, 173, '1', -1.34442, 70, 0, '2017-09-13 05:15:06'),
(11, 1298, '1', 1.61333, 16, 1, '2017-09-13 05:15:06'),
(7, 763, '3', -1.29195, 33, 0, '2017-09-13 05:15:06'),
(27, 2151, '3', -1.92, 10, 0, '2017-09-13 05:15:09'),
(30, 1177, '2', 0.154959, 17, 1, '2017-09-13 05:15:10'),
(3, 1979, '4', 1.80187, 9, 1, '2017-09-13 05:15:10'),
(19, 1199, '4', 0, 32, 0, '2017-09-13 05:15:10'),
(7, 484, '1', 2.77847, 5, 1, '2017-09-13 05:15:11'),
(12, 1202, '1', 0.113426, 29, 1, '2017-09-13 05:15:11'),
(29, 2904, '2', -2.62572, 17, 0, '2017-09-13 05:15:14'),
(17, 1257, '0', -0.00130208, 48, 0, '2017-09-13 05:15:15'),
(1, 2910, '1', -2.72568, 15, 0, '2017-09-13 05:15:15'),
(25, 763, '3', -0.588829, 42, 0, '2017-09-13 05:15:15'),
(27, 2159, '3', -2.29688, 6, 0, '2017-09-13 05:15:15'),
(16, 1477, '1', -0.592593, 30, 0, '2017-09-13 05:15:18'),
(26, 477, '4', -0.75, 23, 0, '2017-09-13 05:15:19'),
(6, 1298, '2', -1.29416, 43, 0, '2017-09-13 05:15:21'),
(27, 2155, '3', -2.08333, 7, 0, '2017-09-13 05:15:22'),
(14, 2892, '4', -2.04433, 37, 0, '2017-09-13 05:15:23'),
(24, 2864, '3', -2.25832, 26, 0, '2017-09-13 05:15:24'),
(8, 1250, '0', -0.195743, 60, 0, '2017-09-13 05:15:25'),
(5, 1220, '0', -0.00382653, 28, 0, '2017-09-13 05:15:25'),
(1, 2903, '2', 2.74383, 12, 1, '2017-09-13 05:15:27'),
(20, 1170, '0', -0.00520833, 24, 0, '2017-09-13 05:15:29'),
(26, 751, '2', 1.6875, 11, 1, '2017-09-13 05:15:29'),
(9, 858, '3', -0.0075, 57, 0, '2017-09-13 05:15:30'),
(13, 1269, '0', -0.0625, 48, 0, '2017-09-13 05:15:30'),
(2, 1956, '2', -0.00382653, 54, 0, '2017-09-13 05:15:32'),
(27, 2150, '3', -1.40443, 12, 0, '2017-09-13 05:15:34'),
(16, 1487, '1', 1.19234, 17, 1, '2017-09-13 05:15:35'),
(17, 1217, '0', -0.0075, 20, 0, '2017-09-13 05:15:35'),
(18, 2859, '2', 1.0247, 53, 1, '2017-09-13 05:15:36'),
(30, 1297, '3', 0.963333, 26, 1, '2017-09-13 05:15:36'),
(29, 2871, '2', 2.38747, 22, 1, '2017-09-13 05:15:36'),
(15, 2833, '3', 1.48993, 39, 1, '2017-09-13 05:15:36'),
(6, 1188, '1', 1.79878, 15, 1, '2017-09-13 05:15:36'),
(9, 865, '1', -2.00083, 11, 0, '2017-09-13 05:15:41'),
(25, 758, '4', 1.39119, 26, 1, '2017-09-13 05:15:41'),
(26, 741, '2', 1.29848, 13, 1, '2017-09-13 05:15:42'),
(1, 2921, '4', -2.70534, 16, 0, '2017-09-13 05:15:43'),
(17, 1191, '3', 1.53061, 8, 1, '2017-09-13 05:15:43'),
(24, 2888, '0', 0, 20, -1, '2017-09-13 05:15:44'),
(11, 1289, '2', 0.0075, 38, 1, '2017-09-13 05:15:45'),
(5, 1189, '3', 0.1875, 21, 1, '2017-09-13 05:15:46'),
(20, 1297, '3', 1.54083, 17, 1, '2017-09-13 05:15:46'),
(28, 1268, '0', -0.0625, 48, 0, '2017-09-13 05:15:46'),
(28, 1282, '2', 1.8, 48, 0, '2017-09-13 05:15:46'),
(4, 1257, '0', -0.00130208, 48, 0, '2017-09-13 05:15:47'),
(6, 1296, '3', -1.78337, 13, 0, '2017-09-13 05:15:49'),
(22, 2419, '2', 1.05021, 49, 1, '2017-09-13 05:15:49'),
(7, 775, '1', -0.855096, 39, 0, '2017-09-13 05:15:50'),
(26, 742, '3', -1.92, 8, 0, '2017-09-13 05:15:50'),
(10, 1229, '4', 0.209987, 53, 1, '2017-09-13 05:15:52'),
(1, 2890, '0', 0, 9, -1, '2017-09-13 05:15:52'),
(16, 1480, '3', -0.979592, 18, 0, '2017-09-13 05:15:53'),
(15, 2852, '3', -2.36512, 18, 0, '2017-09-13 05:15:53'),
(3, 1968, '4', -0.0117188, 45, 0, '2017-09-13 05:15:55'),
(25, 493, '1', 1.97297, 14, 1, '2017-09-13 05:15:55'),
(11, 1176, '3', -0.979592, 12, 0, '2017-09-13 05:15:57'),
(20, 1169, '2', 0.880208, 11, 1, '2017-09-13 05:15:57'),
(29, 2906, '1', -2.52515, 21, 0, '2017-09-13 05:15:57'),
(15, 2816, '4', 2.85, 3, 1, '2017-09-13 05:15:57'),
(2, 1968, '4', -0.630208, 26, 0, '2017-09-13 05:15:58'),
(24, 2887, '3', 2.62679, 14, 1, '2017-09-13 05:15:58'),
(19, 1268, '0', -0.0625, 48, 0, '2017-09-13 05:15:59'),
(12, 1268, '0', -0.00130208, 48, 0, '2017-09-13 05:16:00'),
(21, 1229, '0', -0.209987, 54, 0, '2017-09-13 05:16:00'),
(4, 1189, '1', -0.75, 14, 0, '2017-09-13 05:16:00'),
(30, 1195, '0', -0.0075, 20, 0, '2017-09-13 05:16:03'),
(24, 2868, '2', 2.84605, 6, 1, '2017-09-13 05:16:05'),
(18, 2883, '3', 2.15639, 29, 1, '2017-09-13 05:16:05'),
(13, 1208, '1', 0.9, 35, 1, '2017-09-13 05:16:06'),
(8, 172, '2', 2.19833, 41, 1, '2017-09-13 05:16:07'),
(20, 1183, '2', 0.892562, 10, 1, '2017-09-13 05:16:07'),
(17, 1281, '4', -0.163333, 23, 0, '2017-09-13 05:16:07'),
(16, 3000, '4', -0.421875, 15, 0, '2017-09-13 05:16:08'),
(26, 475, '1', -1.03355, 19, 0, '2017-09-13 05:16:10'),
(24, 2866, '4', 2.81957, 7, 1, '2017-09-13 05:16:11'),
(1, 2893, '3', -2.55085, 20, 0, '2017-09-13 05:16:12'),
(29, 2865, '3', 2.56905, 16, 1, '2017-09-13 05:16:13'),
(28, 1199, '3', 0.46875, 27, 1, '2017-09-13 05:16:14'),
(14, 2881, '3', -1.09545, 52, 0, '2017-09-13 05:16:15'),
(7, 773, '2', -1.77867, 25, 0, '2017-09-13 05:16:15'),
(17, 1171, '4', 0.9075, 9, 1, '2017-09-13 05:16:16'),
(16, 1468, '2', 1.92, 8, 1, '2017-09-13 05:16:16'),
(8, 1188, '1', 2.23459, 10, 1, '2017-09-13 05:16:17'),
(15, 2825, '3', 2.25111, 21, 1, '2017-09-13 05:16:18'),
(13, 1219, '3', 1.36364, 12, 1, '2017-09-13 05:16:18'),
(2, 2060, '3', 0.676875, 21, 1, '2017-09-13 05:16:19'),
(24, 2884, '4', -2.76586, 9, 0, '2017-09-13 05:16:21'),
(26, 748, '4', -1.57687, 11, 0, '2017-09-13 05:16:21'),
(19, 1282, '4', -0.6, 24, 0, '2017-09-13 05:16:23'),
(29, 2903, '2', 2.72082, 13, 1, '2017-09-13 05:16:26'),
(12, 1189, '3', 0.00382653, 27, 1, '2017-09-13 05:16:27'),
(20, 1203, '0', 0, 20, -1, '2017-09-13 05:16:28'),
(24, 2865, '3', 2.79285, 8, 1, '2017-09-13 05:16:29'),
(13, 1217, '3', 1.2, 12, 1, '2017-09-13 05:16:30'),
(16, 1484, '2', -1.33333, 14, 0, '2017-09-13 05:16:30'),
(2, 1972, '2', -1.90226, 11, 0, '2017-09-13 05:16:30'),
(9, 346, '2', -0.0344388, 50, 0, '2017-09-13 05:16:31'),
(11, 1229, '3', -0.333333, 36, 0, '2017-09-13 05:16:33'),
(5, 1257, '0', -0.00130208, 48, 0, '2017-09-13 05:16:34'),
(25, 470, '0', -0.256496, 40, 0, '2017-09-13 05:16:36'),
(1, 2908, '2', -2.44558, 24, 0, '2017-09-13 05:16:36'),
(20, 1198, '4', 0.75, 10, 1, '2017-09-13 05:16:37'),
(18, 2894, '2', 2.21169, 32, 1, '2017-09-13 05:16:37'),
(24, 2882, '1', 2.76586, 9, 1, '2017-09-13 05:16:38'),
(27, 1195, '0', -0.0075, 20, 0, '2017-09-13 05:16:38'),
(6, 1209, '0', -0.221042, 50, 0, '2017-09-13 05:16:40'),
(2, 2057, '4', 1.33333, 10, 1, '2017-09-13 05:16:40'),
(19, 1187, '1', -1.40625, 17, 0, '2017-09-13 05:16:41'),
(30, 1261, '0', -0.00207756, 38, 0, '2017-09-13 05:16:42'),
(21, 1286, '3', -1.29416, 43, 0, '2017-09-13 05:16:44'),
(3, 1959, '2', -0.00110947, 51, 0, '2017-09-13 05:16:46'),
(4, 1268, '2', -0.00520833, 46, 0, '2017-09-13 05:16:47'),
(20, 1174, '3', 1.13609, 10, 1, '2017-09-13 05:16:47'),
(13, 1284, '1', -0.3, 18, 0, '2017-09-13 05:16:48'),
(16, 1476, '1', -1.3591, 17, 0, '2017-09-13 05:16:48'),
(11, 1295, '4', 0.421875, 15, 1, '2017-09-13 05:16:49'),
(26, 476, '4', -0.27, 28, 0, '2017-09-13 05:16:49'),
(1, 2906, '1', -2.62572, 17, 0, '2017-09-13 05:16:53'),
(10, 1299, '2', -0.462877, 62, 0, '2017-09-13 05:16:55'),
(27, 1183, '4', -0.154959, 17, 0, '2017-09-13 05:16:56'),
(25, 774, '1', 2.09443, 20, 1, '2017-09-13 05:16:56'),
(12, 1281, '2', -0.00333333, 29, 0, '2017-09-13 05:16:56'),
(2, 1959, '1', 1.28254, 18, 1, '2017-09-13 05:16:58'),
(4, 1294, '3', 0.75, 12, 1, '2017-09-13 05:16:59'),
(7, 761, '3', 0.370939, 44, 1, '2017-09-13 05:17:00'),
(28, 1257, '4', 0.0625, 47, 1, '2017-09-13 05:17:01'),
(29, 2908, '2', -2.11367, 35, 0, '2017-09-13 05:17:01'),
(18, 2892, '4', -2.47253, 23, 0, '2017-09-13 05:17:01'),
(15, 2735, '1', 1.24289, 44, 1, '2017-09-13 05:17:01'),
(24, 2904, '3', 2.3903, 26, 1, '2017-09-13 05:17:03'),
(27, 1218, '1', -1.08, 8, 0, '2017-09-13 05:17:04'),
(17, 1287, '0', -0.00130208, 48, 0, '2017-09-13 05:17:04'),
(14, 2888, '1', -1.28452, 49, 0, '2017-09-13 05:17:05'),
(20, 1216, '4', 0.255208, 17, 1, '2017-09-13 05:17:05'),
(16, 1483, '2', -0.916205, 17, 0, '2017-09-13 05:17:05'),
(5, 1208, '2', -0.4332, 31, 0, '2017-09-13 05:17:06'),
(30, 1170, '0', -0.00520833, 24, 0, '2017-09-13 05:17:06'),
(9, 857, '1', -0.520833, 35, 0, '2017-09-13 05:17:07'),
(29, 2905, '1', 2.87619, 6, 1, '2017-09-13 05:17:07'),
(18, 2905, '1', 2.789, 10, 1, '2017-09-13 05:17:11'),
(2, 1992, '3', -1.36688, 13, 0, '2017-09-13 05:17:11'),
(14, 2870, '3', 2.81957, 7, 1, '2017-09-13 05:17:12'),
(26, 740, '3', -0.280093, 25, 0, '2017-09-13 05:17:14'),
(27, 1190, '4', 0.979592, 12, 1, '2017-09-13 05:17:16'),
(16, 3002, '3', -0.869823, 12, 0, '2017-09-13 05:17:17'),
(30, 1183, '2', 0.619835, 12, 1, '2017-09-13 05:17:18'),
(8, 1286, '0', -0.195743, 60, 0, '2017-09-13 05:17:18'),
(6, 171, '1', 1.92125, 39, 1, '2017-09-13 05:17:19'),
(25, 775, '4', 1.88988, 23, 1, '2017-09-13 05:17:20'),
(9, 1125, '1', -1.6875, 15, 0, '2017-09-13 05:17:22'),
(20, 1184, '4', 0.255208, 17, 1, '2017-09-13 05:17:22'),
(15, 2730, '4', 2.25111, 21, 1, '2017-09-13 05:17:23'),
(26, 743, '1', -1.56481, 10, 0, '2017-09-13 05:17:24'),
(14, 2865, '3', 2.68328, 12, 1, '2017-09-13 05:17:24'),
(16, 1488, '2', 2.12138, 7, 1, '2017-09-13 05:17:24'),
(17, 1284, '0', -0.0075, 20, 0, '2017-09-13 05:17:25'),
(5, 1217, '1', -0.0075, 19, 0, '2017-09-13 05:17:25'),
(3, 2054, '2', 0.001875, 39, 1, '2017-09-13 05:17:26'),
(20, 1257, '0', 0, 5, -1, '2017-09-13 05:17:26'),
(29, 2892, '4', -2.55085, 20, 0, '2017-09-13 05:17:27'),
(1, 2892, '4', -2.14709, 34, 0, '2017-09-13 05:17:28'),
(6, 1204, '1', -2.47645, 12, 0, '2017-09-13 05:17:31'),
(28, 1175, '4', 0.1875, 30, 1, '2017-09-13 05:17:31'),
(16, 3008, '1', -1.6875, 7, 0, '2017-09-13 05:17:32'),
(30, 1173, '2', 0.6075, 11, 1, '2017-09-13 05:17:32'),
(13, 1287, '2', -0.25, 44, 0, '2017-09-13 05:17:32'),
(24, 2890, '3', -2.30359, 29, 0, '2017-09-13 05:17:33'),
(25, 768, '3', 2.28943, 16, 1, '2017-09-13 05:17:36'),
(7, 767, '3', -1.19055, 36, 0, '2017-09-13 05:17:37'),
(2, 1961, '3', 0.6348, 27, 1, '2017-09-13 05:17:38'),
(24, 2892, '4', -2.8331, 8, 0, '2017-09-13 05:17:40'),
(19, 1299, '3', 0.272727, 60, 1, '2017-09-13 05:17:41'),
(8, 1295, '0', -0.360562, 24, 0, '2017-09-13 05:17:43'),
(30, 1197, '3', -0.630208, 13, 0, '2017-09-13 05:17:43'),
(21, 171, '1', 1.15053, 61, 1, '2017-09-13 05:17:44'),
(1, 2865, '3', 2.53969, 17, 1, '2017-09-13 05:17:45'),
(12, 1208, '1', 0.0012, 49, 1, '2017-09-13 05:17:46'),
(26, 752, '4', -0.6862, 24, 0, '2017-09-13 05:17:48'),
(5, 1200, '2', -0.280093, 25, 0, '2017-09-13 05:17:50'),
(24, 2874, '3', -2.76586, 9, 0, '2017-09-13 05:17:50'),
(2, 2077, '2', -1.93718, 11, 0, '2017-09-13 05:17:50'),
(22, 2427, '0', -0.000208333, 120, 0, '2017-09-13 05:17:51'),
(11, 171, '1', 0.151875, 62, 1, '2017-09-13 05:17:51'),
(18, 2909, '1', -1.89392, 41, 0, '2017-09-13 05:17:52'),
(20, 1460, '3', -2.04726, 8, 0, '2017-09-13 05:17:53'),
(14, 2897, '1', -2.33303, 28, 0, '2017-09-13 05:17:53'),
(27, 1261, '0', -0.00207756, 38, 0, '2017-09-13 05:17:54'),
(28, 1191, '3', 0.535714, 23, 1, '2017-09-13 05:17:55'),
(26, 747, '3', -1.6875, 9, 0, '2017-09-13 05:17:56'),
(3, 2052, '1', -0.318998, 31, 0, '2017-09-13 05:17:57'),
(16, 1473, '1', 0.6912, 26, 1, '2017-09-13 05:17:57'),
(15, 2731, '4', 1.58309, 37, 1, '2017-09-13 05:17:59'),
(14, 2877, '2', 2.79285, 8, 1, '2017-09-13 05:18:00'),
(4, 172, '2', 0.595289, 61, 1, '2017-09-13 05:18:01'),
(9, 874, '3', -0.309949, 38, 0, '2017-09-13 05:18:01'),
(10, 1264, '0', -0.183693, 66, 0, '2017-09-13 05:18:02'),
(21, 1187, '1', -1.72891, 18, 0, '2017-09-13 05:18:02'),
(26, 482, '1', -2.08333, 7, 0, '2017-09-13 05:18:04'),
(20, 1462, '1', 1.57687, 11, 1, '2017-09-13 05:18:04'),
(30, 1218, '0', -0.0075, 20, 0, '2017-09-13 05:18:05'),
(25, 767, '0', 0, 29, -1, '2017-09-13 05:18:05'),
(16, 1472, '4', -1.92, 8, 0, '2017-09-13 05:18:05'),
(27, 1170, '2', 0.75, 12, 1, '2017-09-13 05:18:06'),
(12, 1217, '0', -0.0075, 20, 0, '2017-09-13 05:18:07'),
(7, 768, '2', -1.50173, 31, 0, '2017-09-13 05:18:07'),
(29, 2907, '1', -1.93318, 40, 0, '2017-09-13 05:18:08'),
(2, 2068, '2', -0.89966, 19, 0, '2017-09-13 05:18:09'),
(18, 2903, '2', 2.62572, 17, 1, '2017-09-13 05:18:10'),
(1, 2894, '2', 2.41818, 25, 1, '2017-09-13 05:18:10'),
(13, 1289, '1', -0.225, 37, 0, '2017-09-13 05:18:10'),
(21, 1176, '4', 2.3166, 9, 1, '2017-09-13 05:18:11'),
(22, 1133, '0', -0.0075, 20, 0, '2017-09-13 05:18:11'),
(16, 1491, '1', -2.20408, 6, 0, '2017-09-13 05:18:12'),
(17, 1269, '3', -0.00130208, 47, 0, '2017-09-13 05:18:12'),
(24, 2897, '3', -2.25832, 26, 0, '2017-09-13 05:18:15'),
(7, 760, '2', -2.58532, 8, 0, '2017-09-13 05:18:16'),
(26, 479, '3', -1.54395, 13, 0, '2017-09-13 05:18:17'),
(2, 2067, '2', -2.04726, 8, 0, '2017-09-13 05:18:17'),
(25, 484, '1', 2.40413, 13, 1, '2017-09-13 05:18:18'),
(8, 1206, '3', -1.62865, 36, 0, '2017-09-13 05:18:19'),
(27, 1291, '4', 0.27, 14, 1, '2017-09-13 05:18:21'),
(5, 1202, '3', -0.0578704, 31, 0, '2017-09-13 05:18:21'),
(20, 1454, '2', 0.75, 18, 1, '2017-09-13 05:18:21'),
(29, 2891, '1', 2.60112, 18, 1, '2017-09-13 05:18:25'),
(25, 770, '2', 2.65665, 8, 1, '2017-09-13 05:18:26'),
(20, 3004, '3', 2.08333, 5, 1, '2017-09-13 05:18:27'),
(18, 2898, '1', -2.62572, 17, 0, '2017-09-13 05:18:27'),
(15, 2819, '1', -1.88988, 30, 0, '2017-09-13 05:18:30'),
(27, 1173, '2', 0.6075, 11, 1, '2017-09-13 05:18:31'),
(30, 1227, '0', -0.00520833, 24, 0, '2017-09-13 05:18:32'),
(22, 385, '0', -0.0075, 20, 0, '2017-09-13 05:18:32'),
(6, 1286, '0', -0.195743, 60, 0, '2017-09-13 05:18:32'),
(12, 1282, '1', -0.0533333, 26, 0, '2017-09-13 05:18:33'),
(16, 1479, '3', 0.683368, 23, 1, '2017-09-13 05:18:35'),
(25, 794, '3', 2.67565, 9, 1, '2017-09-13 05:18:35'),
(20, 3035, '1', -1.2398, 10, 0, '2017-09-13 05:18:36'),
(28, 1209, '2', 0.48, 42, 1, '2017-09-13 05:18:37'),
(14, 2907, '2', -2.07943, 36, 0, '2017-09-13 05:18:37'),
(8, 1176, '4', 1.88988, 14, 1, '2017-09-13 05:18:37'),
(7, 752, '3', 1.5, 23, 1, '2017-09-13 05:18:39'),
(3, 1982, '1', 0.0354442, 41, 1, '2017-09-13 05:18:39'),
(11, 1209, '3', -0.0048, 48, 0, '2017-09-13 05:18:40'),
(19, 1250, '2', -0.05, 59, 0, '2017-09-13 05:18:41'),
(16, 1481, '3', -2.1675, 6, 0, '2017-09-13 05:18:41'),
(1, 2900, '1', -2.24295, 31, 0, '2017-09-13 05:18:42'),
(20, 2929, '4', 1.88021, 5, 1, '2017-09-13 05:18:42'),
(17, 1282, '0', -0.00333333, 30, 0, '2017-09-13 05:18:42'),
(9, 864, '2', -0.240833, 43, 0, '2017-09-13 05:18:44'),
(26, 757, '4', -0.459357, 28, 0, '2017-09-13 05:18:45'),
(3, 1960, '1', 2.1675, 9, 1, '2017-09-13 05:18:48'),
(15, 2820, '1', -2.32743, 19, 0, '2017-09-13 05:18:49'),
(25, 781, '1', 2.48747, 15, 1, '2017-09-13 05:18:50'),
(1, 2896, '3', 2.81118, 9, 1, '2017-09-13 05:18:51'),
(26, 738, '4', -1.75433, 8, 0, '2017-09-13 05:18:52'),
(20, 1453, '4', -1.8252, 11, 0, '2017-09-13 05:18:53'),
(16, 1470, '1', 1.7328, 12, 1, '2017-09-13 05:18:53'),
(4, 1298, '2', -0.0533333, 52, 0, '2017-09-13 05:18:53'),
(24, 2906, '2', 1.81659, 38, 1, '2017-09-13 05:18:54'),
(12, 1219, '0', -0.00619835, 22, 0, '2017-09-13 05:18:55'),
(11, 1283, '4', 0.255208, 17, 1, '2017-09-13 05:18:57'),
(7, 742, '3', -1.575, 19, 0, '2017-09-13 05:18:58'),
(29, 2898, '4', 2.14709, 34, 1, '2017-09-13 05:18:59'),
(27, 1185, '0', -0.00382653, 28, 0, '2017-09-13 05:19:00'),
(30, 1184, '0', -0.00520833, 24, 0, '2017-09-13 05:19:00'),
(13, 172, '2', 1.63636, 50, 1, '2017-09-13 05:19:00'),
(28, 1187, '2', 0.84375, 23, 1, '2017-09-13 05:19:00'),
(17, 1293, '1', -0.1875, 18, 0, '2017-09-13 05:19:01'),
(20, 1461, '3', 1.94093, 9, 1, '2017-09-13 05:19:02'),
(25, 783, '2', 2.54097, 13, 1, '2017-09-13 05:19:03'),
(2, 2075, '1', 0.00520833, 46, 1, '2017-09-13 05:19:04'),
(22, 2422, '3', -1.61792, 34, 0, '2017-09-13 05:19:06'),
(24, 2895, '4', -2.62679, 14, 0, '2017-09-13 05:19:07'),
(21, 1260, '3', 0.68612, 57, 1, '2017-09-13 05:19:08'),
(16, 2933, '4', -0.333333, 16, 0, '2017-09-13 05:19:09'),
(5, 1268, '0', -0.00130208, 48, 0, '2017-09-13 05:19:10'),
(6, 1206, '3', -1.58309, 37, 0, '2017-09-13 05:19:10'),
(27, 1297, '3', 2.08333, 10, 1, '2017-09-13 05:19:10'),
(20, 1450, '2', -1.81481, 8, 0, '2017-09-13 05:19:10'),
(24, 2899, '2', 2.92404, 3, 1, '2017-09-13 05:19:11'),
(18, 2907, '1', -1.76811, 44, 0, '2017-09-13 05:19:12'),
(28, 1188, '4', -1.60714, 13, 0, '2017-09-13 05:19:13'),
(1, 2904, '3', 2.41818, 25, 1, '2017-09-13 05:19:16'),
(7, 751, '2', 1.84091, 17, 1, '2017-09-13 05:19:16'),
(8, 1299, '3', 1.52839, 42, 1, '2017-09-13 05:19:16'),
(20, 3039, '1', 1.60207, 7, 1, '2017-09-13 05:19:17'),
(3, 1992, '1', 0.226875, 29, 1, '2017-09-13 05:19:18'),
(27, 1184, '4', 1.17188, 9, 1, '2017-09-13 05:19:19'),
(18, 2897, '0', 0, 10, -1, '2017-09-13 05:19:21'),
(9, 863, '2', 0.393282, 37, 1, '2017-09-13 05:19:22'),
(19, 1298, '1', 0.95, 41, 1, '2017-09-13 05:19:22'),
(30, 1191, '3', 0.1875, 21, 1, '2017-09-13 05:19:22'),
(10, 171, '0', -0.161583, 80, 0, '2017-09-13 05:19:23'),
(24, 2905, '1', 2.59808, 15, 1, '2017-09-13 05:19:26'),
(22, 382, '0', -0.0075, 20, 0, '2017-09-13 05:19:26'),
(29, 2909, '1', -2.33303, 28, 0, '2017-09-13 05:19:27'),
(4, 1289, '4', -0.091875, 33, 0, '2017-09-13 05:19:27'),
(14, 2898, '2', -1.46508, 50, 0, '2017-09-13 05:19:28'),
(7, 476, '1', -2.025, 13, 0, '2017-09-13 05:19:29'),
(16, 1486, '3', -0.968492, 19, 0, '2017-09-13 05:19:29'),
(5, 1284, '0', -0.0075, 20, 0, '2017-09-13 05:19:30'),
(12, 1200, '0', -0.00231481, 36, 0, '2017-09-13 05:19:31'),
(15, 2835, '3', 1.29416, 43, 1, '2017-09-13 05:19:32'),
(29, 2895, '2', 2.87619, 6, 1, '2017-09-13 05:19:33'),
(4, 1295, '3', -1.33333, 8, 0, '2017-09-13 05:19:35'),
(21, 1246, '3', 2.01386, 27, 1, '2017-09-13 05:19:35'),
(20, 3051, '2', -0.284024, 18, 0, '2017-09-13 05:19:36'),
(29, 2893, '4', 2.95959, 2, 1, '2017-09-13 05:19:36'),
(16, 1482, '2', -1.89824, 9, 0, '2017-09-13 05:19:38'),
(11, 1204, '2', -0.046875, 42, 0, '2017-09-13 05:19:39'),
(26, 1454, '0', -0.00231481, 36, 0, '2017-09-13 05:19:41'),
(5, 1293, '2', 0.75, 12, 1, '2017-09-13 05:19:41'),
(15, 2838, '3', 2.65665, 10, 1, '2017-09-13 05:19:42'),
(24, 2909, '1', -2.53969, 17, 0, '2017-09-13 05:19:42'),
(7, 757, '1', -2.08696, 14, 0, '2017-09-13 05:19:43'),
(2, 2080, '1', 0.0153061, 39, 1, '2017-09-13 05:19:43'),
(25, 793, '0', -0.474342, 40, 0, '2017-09-13 05:19:44'),
(22, 402, '0', -0.0075, 20, 0, '2017-09-13 05:19:47'),
(13, 1286, '2', -0.65, 47, 0, '2017-09-13 05:19:48'),
(25, 797, '1', 2.83227, 5, 1, '2017-09-13 05:19:49'),
(11, 1187, '1', -1.41797, 10, 0, '2017-09-13 05:19:50'),
(29, 2894, '3', -2.60112, 18, 0, '2017-09-13 05:19:53'),
(27, 1263, '3', -0.046875, 35, 0, '2017-09-13 05:19:55'),
(26, 1450, '4', 1.02083, 15, 1, '2017-09-13 05:19:56'),
(7, 748, '1', -1.95, 14, 0, '2017-09-13 05:19:56'),
(20, 1464, '4', -0.880208, 22, 0, '2017-09-13 05:19:58'),
(24, 2907, '4', -2.56905, 16, 0, '2017-09-13 05:19:59'),
(22, 1107, '3', -0.48, 12, 0, '2017-09-13 05:19:59'),
(25, 812, '1', -2.6739, 10, 0, '2017-09-13 05:19:59'),
(1, 2909, '1', -1.81151, 43, 0, '2017-09-13 05:20:00'),
(8, 1235, '4', 1.77098, 43, 1, '2017-09-13 05:20:00'),
(18, 2900, '2', 2.00831, 38, 1, '2017-09-13 05:20:00'),
(6, 1250, '1', 0.90856, 50, 1, '2017-09-13 05:20:00'),
(17, 1206, '4', 0.000833333, 59, 1, '2017-09-13 05:20:00'),
(3, 2053, '3', -0.00154959, 43, 0, '2017-09-13 05:20:01'),
(16, 1500, '3', -0.869823, 24, 0, '2017-09-13 05:20:02'),
(28, 1204, '0', -0.0625, 48, 0, '2017-09-13 05:20:02'),
(20, 1449, '1', -2.04187, 7, 0, '2017-09-13 05:20:05'),
(2, 2069, '1', 0.8748, 23, 1, '2017-09-13 05:20:06'),
(5, 1281, '2', -0.0833333, 25, 0, '2017-09-13 05:20:07'),
(11, 172, '1', -2.09851, 18, 0, '2017-09-13 05:20:08'),
(6, 1264, '0', 0, 9, -1, '2017-09-13 05:20:09'),
(27, 1216, '0', 0, 15, -1, '2017-09-13 05:20:10'),
(20, 1458, '0', 0, 7, -1, '2017-09-13 05:20:12'),
(26, 1463, '2', 1.21488, 16, 1, '2017-09-13 05:20:12'),
(21, 1249, '4', 1.01106, 37, 1, '2017-09-13 05:20:13'),
(13, 1283, '0', -0.125, 24, 0, '2017-09-13 05:20:13'),
(14, 2868, '2', 1.5, 45, 1, '2017-09-13 05:20:13'),
(2, 2082, '2', 2.0172, 9, 1, '2017-09-13 05:20:15'),
(19, 172, '2', 1.58182, 52, 1, '2017-09-13 05:20:15'),
(7, 750, '3', -1.76087, 19, 0, '2017-09-13 05:20:16'),
(22, 1120, '4', -0.03, 18, 0, '2017-09-13 05:20:17'),
(18, 2901, '4', 2.62572, 17, 1, '2017-09-13 05:20:17'),
(11, 1188, '2', -1.38138, 9, 0, '2017-09-13 05:20:17'),
(12, 1269, '1', 0.00520833, 46, 1, '2017-09-13 05:20:19'),
(29, 2897, '1', -2.36193, 27, 0, '2017-09-13 05:20:21'),
(1, 2907, '3', 2.49905, 22, 1, '2017-09-13 05:20:21'),
(20, 1452, '1', -1.57687, 11, 0, '2017-09-13 05:20:23'),
(29, 2899, '2', 2.93908, 3, 1, '2017-09-13 05:20:23'),
(7, 754, '4', 2.42857, 8, 1, '2017-09-13 05:20:24'),
(30, 1269, '0', -0.00130208, 48, 0, '2017-09-13 05:20:24'),
(13, 1295, '4', 1.5, 12, 1, '2017-09-13 05:20:24'),
(9, 1639, '4', 0.101801, 62, 1, '2017-09-13 05:20:24'),
(10, 1286, '0', -0.195743, 60, 0, '2017-09-13 05:20:24'),
(3, 2060, '3', 0.541875, 23, 1, '2017-09-13 05:20:24'),
(28, 1176, '2', -0.535714, 23, 0, '2017-09-13 05:20:25'),
(14, 2891, '1', 2.74383, 12, 1, '2017-09-13 05:20:25'),
(11, 1299, '3', 1.93457, 13, 1, '2017-09-13 05:20:30'),
(15, 2845, '4', -0.968164, 49, 0, '2017-09-13 05:20:30'),
(20, 1457, '4', 1.92, 8, 1, '2017-09-13 05:20:31'),
(16, 1507, '2', -0.536982, 30, 0, '2017-09-13 05:20:33'),
(1, 2897, '1', -2.74383, 12, 0, '2017-09-13 05:20:33'),
(24, 2894, '4', -1.89737, 36, 0, '2017-09-13 05:20:34'),
(15, 2841, '3', 2.86514, 4, 1, '2017-09-13 05:20:35'),
(22, 392, '0', -0.0075, 20, 0, '2017-09-13 05:20:37'),
(4, 1264, '0', 0, 62, -1, '2017-09-13 05:20:38'),
(6, 173, '0', 0, 29, -1, '2017-09-13 05:20:38'),
(12, 1296, '4', -0.0833333, 20, 0, '2017-09-13 05:20:38'),
(27, 1203, '0', -0.00333333, 30, 0, '2017-09-13 05:20:41'),
(16, 1492, '2', 1.89824, 9, 1, '2017-09-13 05:20:42'),
(24, 2891, '1', 2.79285, 8, 1, '2017-09-13 05:20:43'),
(29, 2902, '2', 2.55085, 20, 1, '2017-09-13 05:20:43'),
(25, 496, '0', -0.452267, 44, 0, '2017-09-13 05:20:43'),
(10, 172, '2', 2.62435, 20, 1, '2017-09-13 05:20:44'),
(26, 1464, '3', -0.220052, 35, 0, '2017-09-13 05:20:47'),
(5, 1289, '0', -0.001875, 40, 0, '2017-09-13 05:20:47'),
(1, 2924, '3', -2.64998, 16, 0, '2017-09-13 05:20:49'),
(4, 1283, '4', 0.520833, 14, 1, '2017-09-13 05:20:52'),
(15, 2732, '4', 2.36512, 18, 1, '2017-09-13 05:20:53'),
(24, 2898, '4', 2.68328, 12, 1, '2017-09-13 05:20:54'),
(22, 400, '1', -0.03, 18, 0, '2017-09-13 05:20:55'),
(6, 172, '1', -2.68235, 17, 0, '2017-09-13 05:20:56'),
(25, 784, '4', 2.49285, 13, 1, '2017-09-13 05:20:57'),
(27, 1186, '3', 0.55102, 16, 1, '2017-09-13 05:20:58'),
(1, 2925, '1', 2.81118, 9, 1, '2017-09-13 05:20:59'),
(20, 1451, '1', 0.148148, 28, 1, '2017-09-13 05:21:00'),
(13, 1229, '1', -1.05556, 35, 0, '2017-09-13 05:21:00'),
(2, 2081, '1', -0.0543639, 45, 0, '2017-09-13 05:21:01'),
(30, 1282, '0', -0.00333333, 30, 0, '2017-09-13 05:21:03'),
(30, 1281, '1', -0.48, 42, 0, '2017-09-13 05:21:03'),
(12, 1283, '0', -0.00520833, 24, 0, '2017-09-13 05:21:03'),
(16, 1494, '4', 0.600416, 21, 1, '2017-09-13 05:21:03'),
(29, 2901, '4', 2.55085, 20, 1, '2017-09-13 05:21:03'),
(25, 803, '3', -2.84397, 6, 0, '2017-09-13 05:21:03'),
(8, 1207, '0', -0.375, 64, 0, '2017-09-13 05:21:05'),
(19, 1209, '3', 0, 50, 0, '2017-09-13 05:21:06'),
(27, 1174, '3', 1.28254, 9, 1, '2017-09-13 05:21:06'),
(18, 2904, '2', -1.46508, 50, 0, '2017-09-13 05:21:08'),
(25, 782, '2', 2.83945, 5, 1, '2017-09-13 05:21:08'),
(26, 1449, '1', -0.421875, 25, 0, '2017-09-13 05:21:12'),
(7, 756, '0', -0.0625, 48, 0, '2017-09-13 05:21:12'),
(21, 1277, '0', -0.387298, 60, 0, '2017-09-13 05:21:13'),
(25, 813, '1', 2.84397, 5, 1, '2017-09-13 05:21:13'),
(18, 2891, '1', 2.87619, 6, 1, '2017-09-13 05:21:14'),
(29, 2934, '1', -2.80416, 11, 0, '2017-09-13 05:21:14'),
(14, 2890, '2', -1.52201, 49, 0, '2017-09-13 05:21:15'),
(22, 399, '0', -0.0075, 20, 0, '2017-09-13 05:21:16'),
(6, 1199, '3', 1.125, 20, 1, '2017-09-13 05:21:16'),
(1, 2934, '0', 0, 18, -1, '2017-09-13 05:21:17'),
(17, 171, '1', 0.001875, 78, 1, '2017-09-13 05:21:19'),
(16, 3062, '2', -0.75, 16, 0, '2017-09-13 05:21:20'),
(7, 738, '2', 2.38235, 7, 1, '2017-09-13 05:21:20'),
(3, 1956, '4', 0, 56, 1, '2017-09-13 05:21:21'),
(24, 2903, '2', 2.19089, 28, 1, '2017-09-13 05:21:22'),
(14, 2899, '2', 2.85477, 7, 1, '2017-09-13 05:21:22'),
(11, 1286, '4', 0.0533333, 52, 1, '2017-09-13 05:21:23'),
(27, 1227, '0', 0, 16, -1, '2017-09-13 05:21:23'),
(7, 746, '4', 2.75, 3, 1, '2017-09-13 05:21:23'),
(9, 868, '1', 0.0263672, 58, 1, '2017-09-13 05:21:23'),
(10, 1250, '1', 1.44225, 40, 1, '2017-09-13 05:21:24'),
(20, 1467, '3', 0.963333, 26, 1, '2017-09-13 05:21:25'),
(6, 1187, '4', -2.33688, 10, 0, '2017-09-13 05:21:26'),
(5, 1275, '1', -0.231481, 39, 0, '2017-09-13 05:21:27'),
(1, 2911, '1', 2.789, 10, 1, '2017-09-13 05:21:27'),
(17, 1176, '4', 1.6875, 7, 1, '2017-09-13 05:21:27'),
(7, 480, '4', -2.625, 5, 0, '2017-09-13 05:21:28'),
(16, 1493, '3', -1.6875, 10, 0, '2017-09-13 05:21:29'),
(28, 1264, '0', -0.0454545, 66, 0, '2017-09-13 05:21:31'),
(15, 2729, '4', -1.48993, 39, 0, '2017-09-13 05:21:32'),
(29, 2900, '1', -2.60112, 18, 0, '2017-09-13 05:21:33'),
(26, 1461, '3', 0.886106, 21, 1, '2017-09-13 05:21:34'),
(24, 2896, '1', -2.68328, 12, 0, '2017-09-13 05:21:34'),
(6, 1220, '3', -2.03571, 9, 0, '2017-09-13 05:21:35'),
(22, 396, '0', -0.0075, 20, 0, '2017-09-13 05:21:36'),
(27, 1270, '0', 0, 14, -1, '2017-09-13 05:21:37'),
(4, 1275, '0', 0, 45, -1, '2017-09-13 05:21:38'),
(2, 2071, '3', 0.0759298, 37, 1, '2017-09-13 05:21:38'),
(1, 2916, '2', 2.74383, 12, 1, '2017-09-13 05:21:39'),
(29, 2896, '1', -2.8331, 8, 0, '2017-09-13 05:21:41'),
(30, 1200, '0', -0.00231481, 36, 0, '2017-09-13 05:21:41'),
(24, 2901, '4', 2.81957, 7, 1, '2017-09-13 05:21:42'),
(7, 753, '4', 2, 14, 1, '2017-09-13 05:21:42'),
(22, 1137, '2', 0.6075, 11, 1, '2017-09-13 05:21:46'),
(27, 1198, '3', -0.75, 10, 0, '2017-09-13 05:21:47'),
(26, 2929, '4', 0.421875, 15, 1, '2017-09-13 05:21:48'),
(2, 2073, '1', 1.8252, 11, 1, '2017-09-13 05:21:49'),
(20, 1459, '2', 0.541875, 23, 1, '2017-09-13 05:21:49'),
(16, 1498, '3', 0.949219, 21, 1, '2017-09-13 05:21:51'),
(5, 1295, '0', -0.00520833, 24, 0, '2017-09-13 05:21:51'),
(21, 1256, '3', 1.35507, 39, 1, '2017-09-13 05:21:52'),
(28, 1295, '4', 0.5, 20, 1, '2017-09-13 05:21:52'),
(27, 1172, '4', 1.6875, 5, 1, '2017-09-13 05:21:53'),
(8, 1278, '4', -1.34164, 48, 0, '2017-09-13 05:21:53'),
(1, 2942, '2', 2.74572, 14, 1, '2017-09-13 05:21:53'),
(18, 2890, '1', -1.93318, 40, 0, '2017-09-13 05:21:54'),
(7, 499, '1', 2.05263, 12, 1, '2017-09-13 05:21:54'),
(24, 2893, '4', 2.62679, 14, 1, '2017-09-13 05:21:55'),
(26, 1457, '4', 2.04187, 7, 1, '2017-09-13 05:21:55'),
(15, 2728, '3', -2.05434, 26, 0, '2017-09-13 05:21:58'),
(25, 806, '0', -0.648661, 46, 0, '2017-09-13 05:22:00'),
(20, 1455, '2', -1.57687, 11, 0, '2017-09-13 05:22:00'),
(16, 1490, '1', 1.79132, 10, 1, '2017-09-13 05:22:00'),
(30, 1199, '3', 0.354492, 21, 1, '2017-09-13 05:22:02'),
(3, 1980, '4', 0.0139463, 41, 1, '2017-09-13 05:22:02'),
(13, 1264, '1', -0.181818, 62, 0, '2017-09-13 05:22:03'),
(2, 2064, '1', 1.33333, 14, 1, '2017-09-13 05:22:04'),
(20, 3044, '3', 2.08333, 4, 1, '2017-09-13 05:22:04'),
(1, 2937, '4', -2.78495, 12, 0, '2017-09-13 05:22:05'),
(4, 1187, '1', -0.046875, 28, 0, '2017-09-13 05:22:06'),
(25, 505, '2', -2.789, 6, 0, '2017-09-13 05:22:06'),
(29, 2931, '4', 2.41818, 25, 1, '2017-09-13 05:22:06'),
(22, 383, '0', -0.0075, 20, 0, '2017-09-13 05:22:07'),
(26, 1453, '4', -1.7328, 12, 0, '2017-09-13 05:22:08'),
(24, 2908, '2', -2.72082, 13, 0, '2017-09-13 05:22:08'),
(7, 776, '1', -2.30599, 15, 0, '2017-09-13 05:22:09'),
(27, 1169, '2', 0.333333, 16, 1, '2017-09-13 05:22:09'),
(18, 2902, '2', 2.64998, 16, 1, '2017-09-13 05:22:10'),
(29, 2925, '2', -2.85477, 7, 0, '2017-09-13 05:22:12'),
(10, 1204, '4', 0.22714, 47, 1, '2017-09-13 05:22:13'),
(18, 2893, '4', 2.93908, 3, 1, '2017-09-13 05:22:14'),
(4, 1176, '2', -1.53061, 8, 0, '2017-09-13 05:22:14'),
(17, 172, '4', -0.98405, 47, 0, '2017-09-13 05:22:15'),
(20, 1456, '1', 1.36688, 13, 1, '2017-09-13 05:22:17'),
(15, 2847, '3', -2.28943, 20, 0, '2017-09-13 05:22:18'),
(6, 170, '3', -1.65, 45, 0, '2017-09-13 05:22:21'),
(14, 2908, '1', -0.583258, 59, 0, '2017-09-13 05:22:21'),
(19, 173, '2', -0.75, 75, 0, '2017-09-13 05:22:22'),
(22, 397, '0', 0, 15, -1, '2017-09-13 05:22:23'),
(7, 777, '2', 2.08696, 14, 1, '2017-09-13 05:22:23'),
(21, 1262, '3', 1.76505, 34, 1, '2017-09-13 05:22:26'),
(29, 2910, '2', -2.69752, 14, 0, '2017-09-13 05:22:26'),
(1, 2939, '2', -2.57631, 22, 0, '2017-09-13 05:22:27'),
(13, 1298, '1', 1.7, 26, 1, '2017-09-13 05:22:29'),
(27, 1276, '2', -0.421875, 20, 0, '2017-09-13 05:22:29'),
(11, 1264, '0', -0.000688705, 66, 0, '2017-09-13 05:22:30'),
(5, 172, '0', 0, 39, -1, '2017-09-13 05:22:30'),
(9, 859, '3', -0.00244898, 68, 0, '2017-09-13 05:22:32'),
(7, 471, '2', 2.43962, 8, 1, '2017-09-13 05:22:32'),
(30, 1268, '0', 0, 31, -1, '2017-09-13 05:22:33'),
(22, 364, '2', 0.3675, 13, 1, '2017-09-13 05:22:35'),
(14, 2905, '1', 2.69752, 14, 1, '2017-09-13 05:22:36'),
(21, 1266, '0', 0, 11, -1, '2017-09-13 05:22:36'),
(17, 1204, '4', 0.880208, 22, 1, '2017-09-13 05:22:37'),
(20, 1463, '4', -0.892562, 20, 0, '2017-09-13 05:22:37'),
(27, 1292, '1', 1.33333, 10, 1, '2017-09-13 05:22:39'),
(15, 2823, '3', 2.25111, 21, 1, '2017-09-13 05:22:39'),
(24, 2902, '3', -2.04939, 32, 0, '2017-09-13 05:22:40'),
(10, 1176, '0', -0.325349, 28, 0, '2017-09-13 05:22:41'),
(2, 2076, '2', 0.217456, 38, 1, '2017-09-13 05:22:41'),
(29, 2914, '1', 2.62572, 17, 1, '2017-09-13 05:22:43'),
(26, 1462, '1', 0.03, 36, 1, '2017-09-13 05:22:43'),
(7, 492, '2', 2.36512, 12, 1, '2017-09-13 05:22:44'),
(1, 2948, '2', -2.64998, 16, 0, '2017-09-13 05:22:44'),
(12, 173, '0', -0.0003, 100, 0, '2017-09-13 05:22:44'),
(12, 1286, '0', 0, 1, -1, '2017-09-13 05:22:45'),
(3, 1958, '1', 0.1875, 42, 1, '2017-09-13 05:22:45'),
(20, 1465, '1', 1.53061, 8, 1, '2017-09-13 05:22:46'),
(19, 1283, '0', -0.125, 24, 0, '2017-09-13 05:22:46'),
(10, 1187, '1', -2.61218, 6, 0, '2017-09-13 05:22:46'),
(22, 1117, '1', -0.3675, 13, 0, '2017-09-13 05:22:49'),
(18, 2914, '1', 2.17928, 37, 1, '2017-09-13 05:22:51'),
(5, 1296, '3', -0.046875, 21, 0, '2017-09-13 05:22:51'),
(21, 1240, '0', 0, 16, -1, '2017-09-13 05:22:52'),
(25, 526, '0', -0.648661, 46, 0, '2017-09-13 05:22:52'),
(30, 1219, '0', -0.00619835, 22, 0, '2017-09-13 05:22:55'),
(24, 2900, '2', 2.59808, 15, 1, '2017-09-13 05:22:55'),
(26, 1455, '4', -1.36688, 13, 0, '2017-09-13 05:22:56'),
(7, 758, '3', -2.2693, 13, 0, '2017-09-13 05:22:57'),
(22, 363, '3', 1.08, 8, 1, '2017-09-13 05:22:57'),
(8, 1247, '0', -0.369274, 66, 0, '2017-09-13 05:23:00'),
(1, 2950, '2', 2.64998, 16, 1, '2017-09-13 05:23:00'),
(18, 2934, '1', -2.8418, 9, 0, '2017-09-13 05:23:00'),
(19, 1295, '4', 1, 16, 1, '2017-09-13 05:23:02'),
(28, 173, '2', -0.93, 69, 0, '2017-09-13 05:23:02'),
(15, 2866, '1', -2.13414, 24, 0, '2017-09-13 05:23:02'),
(12, 172, '0', 0, 18, -1, '2017-09-13 05:23:03'),
(24, 2925, '2', -2.79285, 8, 0, '2017-09-13 05:23:03'),
(11, 1206, '3', -0.6075, 33, 0, '2017-09-13 05:23:04'),
(27, 1194, '1', 0.0153061, 26, 1, '2017-09-13 05:23:05'),
(7, 491, '1', -2.4474, 10, 0, '2017-09-13 05:23:07'),
(15, 2877, '2', 2.76188, 7, 1, '2017-09-13 05:23:10'),
(2, 2079, '1', 0.48, 30, 1, '2017-09-13 05:23:12'),
(20, 1466, '2', 0.6348, 27, 1, '2017-09-13 05:23:13'),
(26, 1452, '3', -0.991875, 17, 0, '2017-09-13 05:23:14'),
(29, 2921, '3', 2.24295, 31, 1, '2017-09-13 05:23:14'),
(16, 1505, '1', 0.0229688, 73, 1, '2017-09-13 05:23:14'),
(24, 2914, '4', -2.68328, 12, 0, '2017-09-13 05:23:15'),
(9, 856, '1', -0.322998, 43, 0, '2017-09-13 05:23:15'),
(4, 171, '4', -0.169219, 61, 0, '2017-09-13 05:23:16'),
(22, 387, '0', -0.0075, 20, 0, '2017-09-13 05:23:17'),
(13, 1299, '3', 0.772727, 49, 1, '2017-09-13 05:23:18'),
(30, 1202, '3', -0.391204, 23, 0, '2017-09-13 05:23:19'),
(1, 2955, '2', -2.57617, 19, 0, '2017-09-13 05:23:19'),
(5, 1176, '0', -0.00382653, 28, 0, '2017-09-13 05:23:20'),
(16, 1501, '1', -2.2376, 6, 0, '2017-09-13 05:23:20'),
(20, 1488, '2', 1.89824, 9, 1, '2017-09-13 05:23:22'),
(18, 2895, '2', 2.47253, 23, 1, '2017-09-13 05:23:23'),
(24, 2918, '2', -2.73861, 10, 0, '2017-09-13 05:23:26'),
(6, 1288, '2', 0.0909091, 64, 1, '2017-09-13 05:23:26'),
(14, 2906, '4', -1.33998, 52, 0, '2017-09-13 05:23:28'),
(22, 1110, '2', 0.75, 10, 1, '2017-09-13 05:23:28'),
(27, 1210, '0', -0.00520833, 24, 0, '2017-09-13 05:23:30'),
(20, 3000, '2', -1.33333, 8, 0, '2017-09-13 05:23:30'),
(16, 1496, '1', -1.79132, 10, 0, '2017-09-13 05:23:31'),
(3, 2048, '0', -0.00141777, 46, 0, '2017-09-13 05:23:32'),
(25, 790, '0', -0.474342, 40, 0, '2017-09-13 05:23:33'),
(7, 771, '1', 1.60496, 28, 1, '2017-09-13 05:23:35'),
(24, 2926, '3', 2.73861, 10, 1, '2017-09-13 05:23:35'),
(2, 2072, '2', 0.75, 23, 1, '2017-09-13 05:23:35'),
(29, 2916, '1', -2.47253, 23, 0, '2017-09-13 05:23:38'),
(1, 2945, '3', -2.55085, 20, 0, '2017-09-13 05:23:39'),
(5, 1188, '3', -0.244898, 20, 0, '2017-09-13 05:23:40'),
(7, 470, '1', -2.69195, 6, 0, '2017-09-13 05:23:41'),
(20, 1473, '1', 1.7328, 12, 1, '2017-09-13 05:23:42'),
(27, 1196, '4', 0.630208, 13, 1, '2017-09-13 05:23:43'),
(26, 1451, '2', -0.0833333, 30, 0, '2017-09-13 05:23:43'),
(30, 1294, '0', -0.00520833, 24, 0, '2017-09-13 05:23:44'),
(24, 2931, '4', 2.73861, 10, 1, '2017-09-13 05:23:45'),
(19, 1206, '3', -0.85, 43, 0, '2017-09-13 05:23:45'),
(2, 2083, '1', -1.78255, 11, 0, '2017-09-13 05:23:46'),
(29, 2911, '1', 2.81118, 9, 1, '2017-09-13 05:23:46'),
(28, 1229, '3', -0.444444, 46, 0, '2017-09-13 05:23:48'),
(17, 173, '3', -0.2523, 71, 0, '2017-09-13 05:23:48'),
(22, 398, '0', -0.0075, 20, 0, '2017-09-13 05:23:49'),
(20, 1482, '2', -2.00826, 8, 0, '2017-09-13 05:23:50'),
(8, 1274, '2', 0.896421, 51, 1, '2017-09-13 05:23:51'),
(27, 1177, '2', 1.04752, 9, 1, '2017-09-13 05:23:52'),
(14, 2894, '2', 2.47253, 23, 1, '2017-09-13 05:23:52'),
(15, 2871, '2', 1.24289, 44, 1, '2017-09-13 05:23:54'),
(21, 1207, '4', 0.53033, 62, 1, '2017-09-13 05:23:55'),
(18, 2911, '1', 2.32697, 32, 1, '2017-09-13 05:23:55'),
(7, 765, '1', -1.95, 14, 0, '2017-09-13 05:23:56'),
(9, 855, '3', -0.421875, 40, 0, '2017-09-13 05:23:56'),
(2, 2084, '1', 1.6875, 12, 1, '2017-09-13 05:23:58'),
(30, 1171, '1', -0.27, 14, 0, '2017-09-13 05:23:58'),
(3, 1989, '1', 0.520833, 28, 1, '2017-09-13 05:23:59'),
(16, 1504, '1', 1.2675, 28, 1, '2017-09-13 05:23:59'),
(11, 1260, '3', 0.0593262, 55, 1, '2017-09-13 05:23:59'),
(14, 2896, '2', -2.81118, 9, 0, '2017-09-13 05:24:01'),
(1, 2959, '2', -2.49905, 22, 0, '2017-09-13 05:24:02'),
(7, 759, '1', -2.6087, 6, 0, '2017-09-13 05:24:02'),
(25, 473, '0', -0.547723, 30, 0, '2017-09-13 05:24:03'),
(4, 1286, '3', -0.140833, 47, 0, '2017-09-13 05:24:04'),
(15, 2874, '3', -2.62111, 11, 0, '2017-09-13 05:24:04'),
(24, 2928, '3', 2.44949, 20, 1, '2017-09-13 05:24:06'),
(22, 2414, '4', -1.95287, 17, 0, '2017-09-13 05:24:06'),
(20, 1469, '2', 0.9075, 18, 1, '2017-09-13 05:24:08'),
(15, 2886, '1', 2.86514, 4, 1, '2017-09-13 05:24:09'),
(2, 2070, '1', 1.6875, 12, 1, '2017-09-13 05:24:10'),
(6, 1249, '1', -0.130435, 44, 0, '2017-09-13 05:24:10'),
(18, 2925, '1', 2.72568, 15, 1, '2017-09-13 05:24:11'),
(14, 2902, '2', 2.76655, 11, 1, '2017-09-13 05:24:13'),
(3, 2067, '1', 1.54395, 13, 1, '2017-09-13 05:24:13'),
(30, 1293, '1', -0.1875, 18, 0, '2017-09-13 05:24:16'),
(20, 1478, '2', 1.80187, 9, 1, '2017-09-13 05:24:17'),
(24, 2924, '1', -2.65518, 13, 0, '2017-09-13 05:24:18'),
(14, 2901, '4', 2.87619, 6, 1, '2017-09-13 05:24:19'),
(26, 1458, '0', -0.00231481, 36, 0, '2017-09-13 05:24:19'),
(29, 2923, '3', 2.17975, 33, 1, '2017-09-13 05:24:19'),
(16, 2947, '3', 0.333333, 20, 1, '2017-09-13 05:24:19'),
(12, 171, '2', -0.00046875, 79, 0, '2017-09-13 05:24:23'),
(1, 2957, '3', -2.44558, 24, 0, '2017-09-13 05:24:25'),
(13, 173, '3', -1.02, 66, 0, '2017-09-13 05:24:25'),
(2, 2078, '4', -1.51886, 15, 0, '2017-09-13 05:24:26'),
(28, 1286, '0', 0, 37, -1, '2017-09-13 05:24:26'),
(22, 384, '0', -0.0075, 20, 0, '2017-09-13 05:24:26'),
(4, 1206, '3', -1.14083, 23, 0, '2017-09-13 05:24:26'),
(20, 1474, '0', 0, 9, -1, '2017-09-13 05:24:27'),
(14, 2931, '4', 2.8418, 9, 1, '2017-09-13 05:24:27'),
(7, 762, '3', 1.125, 25, 1, '2017-09-13 05:24:27'),
(10, 173, '0', -0.139248, 100, 0, '2017-09-13 05:24:28'),
(19, 1275, '1', -0.611111, 43, 0, '2017-09-13 05:24:29'),
(16, 3076, '1', 1.33333, 10, 1, '2017-09-13 05:24:29'),
(18, 2916, '1', -2.62074, 20, 0, '2017-09-13 05:24:31'),
(20, 1484, '1', -2.20408, 6, 0, '2017-09-13 05:24:32'),
(27, 1268, '1', 0.4375, 41, 1, '2017-09-13 05:24:33'),
(3, 2077, '3', 1.17188, 21, 1, '2017-09-13 05:24:34'),
(30, 1284, '0', -0.0075, 20, 0, '2017-09-13 05:24:36'),
(15, 2889, '1', -2.01386, 27, 0, '2017-09-13 05:24:36');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(26, 1467, '3', 1.54083, 17, 1, '2017-09-13 05:24:36'),
(29, 2924, '2', 2.62572, 17, 1, '2017-09-13 05:24:37'),
(20, 1470, '1', 2.3232, 6, 1, '2017-09-13 05:24:39'),
(10, 1188, '2', -2.06584, 12, 0, '2017-09-13 05:24:40'),
(6, 1235, '4', 1.68182, 29, 1, '2017-09-13 05:24:40'),
(25, 786, '4', -1.52971, 37, 0, '2017-09-13 05:24:40'),
(29, 2918, '2', -2.89647, 6, 0, '2017-09-13 05:24:42'),
(11, 1277, '3', -0.240833, 43, 0, '2017-09-13 05:24:43'),
(15, 2885, '1', -2.76188, 7, 0, '2017-09-13 05:24:43'),
(17, 1229, '0', -0.00102881, 54, 0, '2017-09-13 05:24:43'),
(19, 1188, '2', -1.5, 14, 0, '2017-09-13 05:24:43'),
(16, 1497, '4', -1.33333, 14, 0, '2017-09-13 05:24:43'),
(21, 1267, '0', 0, 49, -1, '2017-09-13 05:24:44'),
(24, 2910, '2', -2.25832, 26, 0, '2017-09-13 05:24:44'),
(22, 372, '0', -0.0075, 20, 0, '2017-09-13 05:24:46'),
(30, 1217, '0', 0, 13, -1, '2017-09-13 05:24:49'),
(27, 1171, '4', 0.45, 17, 1, '2017-09-13 05:24:50'),
(4, 1204, '4', 0.75, 24, 1, '2017-09-13 05:24:51'),
(30, 1208, '0', 0, 1, -1, '2017-09-13 05:24:51'),
(1, 2864, '2', 2.15639, 29, 1, '2017-09-13 05:24:55'),
(24, 2921, '2', -2.71109, 11, 0, '2017-09-13 05:24:55'),
(22, 2420, '3', 2.40755, 10, 1, '2017-09-13 05:24:57'),
(19, 1264, '0', 0, 14, -1, '2017-09-13 05:24:58'),
(6, 1285, '3', 1, 20, 1, '2017-09-13 05:25:00'),
(8, 170, '4', 1.69706, 68, 1, '2017-09-13 05:25:01'),
(27, 1282, '4', -1.9, 11, 0, '2017-09-13 05:25:01'),
(26, 1459, '2', 0.3675, 26, 1, '2017-09-13 05:25:02'),
(14, 2911, '3', -2.2407, 35, 0, '2017-09-13 05:25:02'),
(4, 1296, '1', -0.880208, 11, 0, '2017-09-13 05:25:02'),
(16, 3054, '1', -0.403333, 19, 0, '2017-09-13 05:25:03'),
(7, 790, '4', -0.225, 37, 0, '2017-09-13 05:25:05'),
(2, 2066, '1', 0, 40, 0, '2017-09-13 05:25:06'),
(2, 2074, '0', -0.0387397, 40, 0, '2017-09-13 05:25:06'),
(28, 1289, '0', -0.075, 40, 0, '2017-09-13 05:25:06'),
(30, 1189, '1', -0.55102, 16, 0, '2017-09-13 05:25:06'),
(20, 1485, '1', -0.586908, 29, 0, '2017-09-13 05:25:08'),
(27, 1197, '1', 1.50521, 7, 1, '2017-09-13 05:25:09'),
(9, 340, '3', 0.0229688, 73, 1, '2017-09-13 05:25:09'),
(18, 2924, '3', -2.14723, 38, 0, '2017-09-13 05:25:09'),
(24, 2934, '2', 2.59808, 15, 1, '2017-09-13 05:25:10'),
(10, 1298, '1', 1.84765, 31, 1, '2017-09-13 05:25:11'),
(1, 2866, '4', 2.56905, 16, 1, '2017-09-13 05:25:11'),
(29, 2926, '3', 2.30359, 29, 1, '2017-09-13 05:25:12'),
(20, 1476, '0', 0, 5, -1, '2017-09-13 05:25:13'),
(5, 173, '3', -0.0192, 92, 0, '2017-09-13 05:25:14'),
(15, 2868, '2', 1.80492, 32, 1, '2017-09-13 05:25:14'),
(16, 1502, '4', -1.63894, 12, 0, '2017-09-13 05:25:15'),
(17, 1289, '4', -0.151875, 31, 0, '2017-09-13 05:25:15'),
(24, 2911, '1', 2.87228, 5, 1, '2017-09-13 05:25:15'),
(14, 2928, '1', -2.76548, 13, 0, '2017-09-13 05:25:15'),
(25, 521, '0', -0.5, 36, 0, '2017-09-13 05:25:17'),
(22, 1116, '0', -0.0075, 20, 0, '2017-09-13 05:25:17'),
(3, 2075, '4', -0.0208333, 44, 0, '2017-09-13 05:25:18'),
(2, 2086, '4', 1.43027, 13, 1, '2017-09-13 05:25:19'),
(12, 736, '2', -1.37284, 11, 0, '2017-09-13 05:25:20'),
(18, 2921, '3', 2.80416, 11, 1, '2017-09-13 05:25:20'),
(7, 780, '4', -1.65, 18, 0, '2017-09-13 05:25:22'),
(14, 2895, '2', 2.85477, 7, 1, '2017-09-13 05:25:23'),
(13, 1317, '4', -1.76333, 14, 0, '2017-09-13 05:25:25'),
(12, 723, '1', 1.94676, 7, 1, '2017-09-13 05:25:26'),
(7, 468, '4', -2.6, 4, 0, '2017-09-13 05:25:27'),
(19, 1204, '1', -1.1875, 29, 0, '2017-09-13 05:25:27'),
(24, 2916, '2', 2.68328, 12, 1, '2017-09-13 05:25:28'),
(26, 3039, '0', -0.00443787, 26, 0, '2017-09-13 05:25:28'),
(5, 1187, '3', -0.84668, 15, 0, '2017-09-13 05:25:29'),
(18, 2918, '2', -2.82311, 10, 0, '2017-09-13 05:25:30'),
(12, 727, '2', 2.37037, 4, 1, '2017-09-13 05:25:30'),
(16, 1489, '2', -1.14966, 16, 0, '2017-09-13 05:25:31'),
(3, 2071, '3', 1.48915, 13, 1, '2017-09-13 05:25:31'),
(2, 2090, '2', -1.6875, 12, 0, '2017-09-13 05:25:32'),
(13, 603, '1', 2.24667, 7, 1, '2017-09-13 05:25:32'),
(10, 3024, '3', -1.10587, 11, 0, '2017-09-13 05:25:35'),
(30, 1257, '3', -0.470052, 29, 0, '2017-09-13 05:25:36'),
(4, 3410, '1', 1.47, 9, 1, '2017-09-13 05:25:36'),
(22, 394, '0', -0.0075, 20, 0, '2017-09-13 05:25:37'),
(8, 1262, '3', 1.61126, 37, 1, '2017-09-13 05:25:38'),
(7, 784, '4', 2.14286, 12, 1, '2017-09-13 05:25:38'),
(20, 498, '1', -1.36688, 13, 0, '2017-09-13 05:25:40'),
(20, 494, '3', 2.25333, 4, 1, '2017-09-13 05:25:43'),
(29, 2928, '3', 2.29893, 33, 1, '2017-09-13 05:25:44'),
(15, 2865, '3', 1.88988, 30, 1, '2017-09-13 05:25:45'),
(18, 2928, '3', 2.72568, 15, 1, '2017-09-13 05:25:46'),
(16, 1499, '4', -1.27599, 16, 0, '2017-09-13 05:25:47'),
(26, 3035, '2', 0.244898, 20, 1, '2017-09-13 05:25:48'),
(24, 2923, '4', -2.38747, 22, 0, '2017-09-13 05:25:49'),
(27, 1208, '1', 0.6, 40, 1, '2017-09-13 05:25:49'),
(20, 725, '4', 1.89187, 7, 1, '2017-09-13 05:25:51'),
(10, 3158, '0', 0, 15, -1, '2017-09-13 05:25:51'),
(10, 3055, '0', 0, 1, -1, '2017-09-13 05:25:51'),
(1, 2736, '4', 0.963333, 13, 1, '2017-09-13 05:25:52'),
(29, 2945, '4', 2.8418, 9, 1, '2017-09-13 05:25:53'),
(26, 3044, '3', 1.6875, 6, 1, '2017-09-13 05:25:55'),
(22, 390, '0', -0.0075, 20, 0, '2017-09-13 05:25:58'),
(1, 2753, '2', 1.76333, 7, 1, '2017-09-13 05:25:58'),
(13, 1303, '3', -0.963333, 26, 0, '2017-09-13 05:25:59'),
(27, 1191, '3', 1.92857, 10, 1, '2017-09-13 05:25:59'),
(7, 850, '1', -2.34083, 7, 0, '2017-09-13 05:26:01'),
(15, 2870, '3', 2.40251, 17, 1, '2017-09-13 05:26:02'),
(25, 497, '1', -0.442326, 45, 0, '2017-09-13 05:26:03'),
(4, 3409, '2', 0.03, 27, 1, '2017-09-13 05:26:03'),
(20, 718, '1', 0.963333, 13, 1, '2017-09-13 05:26:04'),
(24, 2950, '3', -2.62679, 14, 0, '2017-09-13 05:26:04'),
(30, 1220, '0', -0.00382653, 28, 0, '2017-09-13 05:26:04'),
(18, 2910, '2', -2.6424, 19, 0, '2017-09-13 05:26:05'),
(10, 3016, '0', 0, 13, -1, '2017-09-13 05:26:05'),
(12, 737, '0', 0, 36, -1, '2017-09-13 05:26:06'),
(20, 734, '2', 2.08333, 5, 1, '2017-09-13 05:26:08'),
(27, 1294, '2', -1.875, 9, 0, '2017-09-13 05:26:09'),
(16, 1503, '2', 0.816635, 22, 1, '2017-09-13 05:26:09'),
(7, 1091, '1', -2.08333, 10, 0, '2017-09-13 05:26:11'),
(20, 737, '0', 0, 4, -1, '2017-09-13 05:26:12'),
(13, 599, '1', 1.76333, 14, 1, '2017-09-13 05:26:13'),
(12, 720, '4', 2.12742, 6, 1, '2017-09-13 05:26:13'),
(29, 2937, '4', -2.62074, 20, 0, '2017-09-13 05:26:13'),
(1, 2761, '1', 0.75, 15, 1, '2017-09-13 05:26:14'),
(24, 2945, '4', 2.65518, 13, 1, '2017-09-13 05:26:16'),
(22, 1115, '0', -0.0075, 20, 0, '2017-09-13 05:26:18'),
(4, 3413, '1', -0.653333, 16, 0, '2017-09-13 05:26:20'),
(10, 3040, '1', 0.55102, 16, 1, '2017-09-13 05:26:21'),
(9, 326, '4', 0.133704, 71, 1, '2017-09-13 05:26:21'),
(15, 2879, '2', 2.25111, 21, 1, '2017-09-13 05:26:23'),
(27, 1217, '2', -0.75, 15, 0, '2017-09-13 05:26:23'),
(20, 464, '3', 0.998521, 11, 1, '2017-09-13 05:26:23'),
(7, 622, '2', 1.84083, 13, 1, '2017-09-13 05:26:24'),
(14, 2760, '4', 0.12, 24, 1, '2017-09-13 05:26:24'),
(13, 600, '3', 1.85204, 12, 1, '2017-09-13 05:26:25'),
(16, 1506, '2', -1.47, 15, 0, '2017-09-13 05:26:25'),
(22, 2406, '2', -2.41774, 9, 0, '2017-09-13 05:26:27'),
(20, 727, '2', 2.37037, 4, 1, '2017-09-13 05:26:28'),
(26, 1460, '1', 0.141777, 36, 1, '2017-09-13 05:26:30'),
(20, 486, '1', 2.37037, 4, 1, '2017-09-13 05:26:32'),
(27, 1281, '2', -2, 10, 0, '2017-09-13 05:26:34'),
(14, 2755, '3', 1.33333, 10, 1, '2017-09-13 05:26:34'),
(29, 2948, '2', -2.57631, 22, 0, '2017-09-13 05:26:36'),
(20, 753, '4', 2.64286, 5, 1, '2017-09-13 05:26:37'),
(7, 603, '1', 1.6875, 13, 1, '2017-09-13 05:26:37'),
(2, 3445, '1', -0.0675, 17, 0, '2017-09-13 05:26:40'),
(20, 474, '3', -2.625, 5, 0, '2017-09-13 05:26:42'),
(3, 3489, '0', -0.0075, 20, 0, '2017-09-13 05:26:42'),
(19, 2607, '4', 0.316875, 27, 1, '2017-09-13 05:26:42'),
(12, 718, '4', 0, 30, 0, '2017-09-13 05:26:43'),
(14, 2763, '1', 1.47, 9, 1, '2017-09-13 05:26:43'),
(1, 2744, '1', 0.00333333, 29, 1, '2017-09-13 05:26:43'),
(30, 1287, '3', 0.0833333, 40, 1, '2017-09-13 05:26:44'),
(4, 3412, '4', 0.12, 24, 1, '2017-09-13 05:26:45'),
(21, 2602, '3', 0.151875, 31, 1, '2017-09-13 05:26:45'),
(13, 593, '0', 0, 22, -1, '2017-09-13 05:26:47'),
(18, 2923, '3', 2.04482, 41, 1, '2017-09-13 05:26:47'),
(22, 376, '0', -0.0075, 20, 0, '2017-09-13 05:26:47'),
(20, 747, '2', 2.41667, 7, 1, '2017-09-13 05:26:49'),
(10, 3056, '0', -0.00382653, 28, 0, '2017-09-13 05:26:50'),
(15, 2888, '3', 2.22486, 27, 1, '2017-09-13 05:26:50'),
(18, 2931, '4', 2.87848, 7, 1, '2017-09-13 05:26:53'),
(26, 1456, '1', 0.421875, 25, 1, '2017-09-13 05:26:56'),
(2, 3443, '3', 0.0675, 17, 1, '2017-09-13 05:26:57'),
(7, 613, '4', -1.33333, 20, 0, '2017-09-13 05:26:58'),
(16, 1495, '2', 0.137755, 33, 1, '2017-09-13 05:26:58'),
(1, 2745, '3', -0.403333, 19, 0, '2017-09-13 05:27:02'),
(14, 2758, '1', -0.403333, 19, 0, '2017-09-13 05:27:03'),
(4, 3406, '2', 0.403333, 19, 1, '2017-09-13 05:27:04'),
(9, 345, '2', -0.27, 42, 0, '2017-09-13 05:27:04'),
(19, 2614, '4', 0.6075, 22, 1, '2017-09-13 05:27:05'),
(12, 464, '3', 0.0710059, 22, 1, '2017-09-13 05:27:05'),
(21, 2604, '4', -0.676875, 21, 0, '2017-09-13 05:27:06'),
(3, 3494, '0', -0.00520833, 24, 0, '2017-09-13 05:27:06'),
(20, 752, '3', 1.8913, 17, 1, '2017-09-13 05:27:07'),
(13, 604, '3', 1.33333, 20, 1, '2017-09-13 05:27:07'),
(22, 371, '0', -0.0075, 20, 0, '2017-09-13 05:27:08'),
(14, 2753, '2', 2.08333, 5, 1, '2017-09-13 05:27:08'),
(12, 724, '4', -1.92, 6, 0, '2017-09-13 05:27:11'),
(27, 1257, '4', 0.0833333, 40, 1, '2017-09-13 05:27:14'),
(18, 2926, '1', -2.59872, 21, 0, '2017-09-13 05:27:14'),
(22, 365, '2', -1.2675, 7, 0, '2017-09-13 05:27:15'),
(1, 2737, '4', 1.08, 12, 1, '2017-09-13 05:27:15'),
(12, 722, '3', 2.37037, 4, 1, '2017-09-13 05:27:16'),
(20, 476, '0', 0, 10, -1, '2017-09-13 05:27:16'),
(10, 3018, '0', -0.00382653, 28, 0, '2017-09-13 05:27:18'),
(22, 2400, '3', 2.66694, 4, 1, '2017-09-13 05:27:19'),
(2, 3461, '4', -0.00520833, 23, 0, '2017-09-13 05:27:20'),
(26, 3051, '0', -0.00443787, 26, 0, '2017-09-13 05:27:22'),
(3, 3465, '1', 0.303719, 15, 1, '2017-09-13 05:27:22'),
(21, 2610, '3', 0.991875, 17, 1, '2017-09-13 05:27:23'),
(20, 478, '2', -2.58, 7, 0, '2017-09-13 05:27:23'),
(10, 3052, '4', 1.85204, 6, 1, '2017-09-13 05:27:23'),
(14, 2745, '2', 0.653333, 16, 1, '2017-09-13 05:27:24'),
(9, 361, '1', 1.10587, 22, 1, '2017-09-13 05:27:26'),
(19, 2612, '1', 0.6075, 22, 1, '2017-09-13 05:27:27'),
(25, 619, '0', 0, 29, -1, '2017-09-13 05:27:28'),
(1, 2762, '3', 0.853333, 14, 1, '2017-09-13 05:27:28'),
(3, 3441, '3', -1.08, 8, 0, '2017-09-13 05:27:30'),
(5, 2762, '3', 1.76333, 7, 1, '2017-09-13 05:27:30'),
(2, 3441, '3', -0.75, 10, 0, '2017-09-13 05:27:30'),
(20, 479, '1', -2.54348, 7, 0, '2017-09-13 05:27:31'),
(12, 466, '2', -0.563333, 17, 0, '2017-09-13 05:27:32'),
(4, 3397, '2', 0.0117188, 30, 1, '2017-09-13 05:27:33'),
(1, 2743, '2', -2.08333, 5, 0, '2017-09-13 05:27:34'),
(7, 624, '1', 0.440833, 37, 1, '2017-09-13 05:27:35'),
(3, 3454, '3', -1.47, 6, 0, '2017-09-13 05:27:36'),
(30, 1265, '0', -0.00110947, 52, 0, '2017-09-13 05:27:37'),
(20, 739, '1', 2.41667, 7, 1, '2017-09-13 05:27:38'),
(25, 596, '1', 2.08333, 9, 1, '2017-09-13 05:27:38'),
(5, 2742, '4', 1.61333, 8, 1, '2017-09-13 05:27:39'),
(22, 374, '4', 0, 20, 1, '2017-09-13 05:27:39'),
(2, 3484, '3', -0.75, 10, 0, '2017-09-13 05:27:40'),
(1, 2758, '4', 1.76333, 7, 1, '2017-09-13 05:27:40'),
(21, 2609, '2', 0.9075, 18, 1, '2017-09-13 05:27:41'),
(4, 3404, '4', 1.6875, 8, 1, '2017-09-13 05:27:42'),
(6, 1, '4', 0.75, 10, 1, '2017-09-13 05:27:42'),
(5, 2738, '2', 1.92, 6, 1, '2017-09-13 05:27:45'),
(11, 19, '2', 0.1875, 15, 1, '2017-09-13 05:27:46'),
(10, 3063, '1', 0.137755, 22, 1, '2017-09-13 05:27:46'),
(19, 2613, '1', -0.826875, 19, 0, '2017-09-13 05:27:46'),
(7, 1124, '3', -1.92, 12, 0, '2017-09-13 05:27:46'),
(13, 854, '3', -0.588367, 39, 0, '2017-09-13 05:27:47'),
(14, 2747, '1', -0.163333, 23, 0, '2017-09-13 05:27:47'),
(20, 757, '2', 2.28261, 11, 1, '2017-09-13 05:27:48'),
(2, 3452, '2', -1.17188, 9, 0, '2017-09-13 05:27:49'),
(6, 17, '1', 1.08, 8, 1, '2017-09-13 05:27:50'),
(4, 3408, '3', 1.47, 9, 1, '2017-09-13 05:27:51'),
(11, 2, '3', 1.08, 8, 1, '2017-09-13 05:27:53'),
(22, 1140, '1', 0.27, 14, 1, '2017-09-13 05:27:54'),
(19, 2608, '3', 1.6875, 10, 1, '2017-09-13 05:27:56'),
(14, 2746, '2', 1.47, 9, 1, '2017-09-13 05:27:56'),
(25, 1317, '3', 1.47, 18, 1, '2017-09-13 05:27:56'),
(16, 1519, '3', 0.0075, 57, 1, '2017-09-13 05:27:56'),
(3, 3464, '1', -0.0833333, 20, 0, '2017-09-13 05:27:57'),
(7, 615, '3', -2.00083, 11, 0, '2017-09-13 05:27:58'),
(27, 1269, '4', -0.0117188, 45, 0, '2017-09-13 05:27:59'),
(21, 2611, '3', 0.75, 20, 1, '2017-09-13 05:28:01'),
(12, 721, '1', 0.226875, 29, 1, '2017-09-13 05:28:01'),
(27, 1265, '4', -2.77367, 2, 0, '2017-09-13 05:28:02'),
(4, 3405, '1', 1.08, 12, 1, '2017-09-13 05:28:03'),
(25, 850, '3', 2.25333, 8, 1, '2017-09-13 05:28:04'),
(5, 2747, '3', -0.27, 21, 0, '2017-09-13 05:28:06'),
(26, 1466, '3', -0.03, 45, 0, '2017-09-13 05:28:07'),
(21, 2601, '2', 2.1675, 6, 1, '2017-09-13 05:28:07'),
(11, 88, '0', 0, 13, -1, '2017-09-13 05:28:07'),
(3, 3452, '1', 0.75, 12, 1, '2017-09-13 05:28:08'),
(6, 16, '1', 0.0075, 19, 1, '2017-09-13 05:28:09'),
(30, 1175, '0', -0.00292969, 32, 0, '2017-09-13 05:28:10'),
(16, 1522, '2', -1.59505, 13, 0, '2017-09-13 05:28:10'),
(13, 609, '1', -1.14083, 23, 0, '2017-09-13 05:28:10'),
(20, 480, '2', 1.425, 21, 1, '2017-09-13 05:28:10'),
(9, 872, '2', 0.240833, 43, 1, '2017-09-13 05:28:10'),
(1, 2750, '0', -0.00333333, 30, 0, '2017-09-13 05:28:11'),
(2, 3465, '0', -0.00619835, 22, 0, '2017-09-13 05:28:11'),
(27, 1293, '1', -1.02083, 10, 0, '2017-09-13 05:28:12'),
(22, 1121, '1', -0.0075, 19, 0, '2017-09-13 05:28:13'),
(20, 746, '4', 2.75, 3, 1, '2017-09-13 05:28:13'),
(5, 2757, '1', -1.76333, 7, 0, '2017-09-13 05:28:13'),
(7, 597, '2', 1.4856, 16, 1, '2017-09-13 05:28:14'),
(10, 3011, '0', -0.00382653, 28, 0, '2017-09-13 05:28:15'),
(25, 1303, '1', 2.00083, 11, 1, '2017-09-13 05:28:15'),
(4, 3402, '1', 1.05762, 13, 1, '2017-09-13 05:28:16'),
(8, 2411, '0', -0.000247934, 110, 0, '2017-09-13 05:28:16'),
(26, 3004, '3', 1.20333, 11, 1, '2017-09-13 05:28:17'),
(13, 611, '3', 2.0172, 9, 1, '2017-09-13 05:28:19'),
(14, 2759, '2', 0.12, 24, 1, '2017-09-13 05:28:21'),
(20, 740, '3', -2.33333, 8, 0, '2017-09-13 05:28:21'),
(16, 1526, '1', -1.5552, 14, 0, '2017-09-13 05:28:23'),
(7, 600, '3', 2.1132, 9, 1, '2017-09-13 05:28:23'),
(5, 2736, '4', 1.20333, 11, 1, '2017-09-13 05:28:24'),
(21, 2615, '4', -0.991875, 17, 0, '2017-09-13 05:28:24'),
(19, 2603, '1', 0.27, 28, 1, '2017-09-13 05:28:24'),
(2, 3447, '4', 0.1875, 15, 1, '2017-09-13 05:28:27'),
(4, 3415, '1', -1.20333, 11, 0, '2017-09-13 05:28:27'),
(11, 12, '0', -0.0075, 20, 0, '2017-09-13 05:28:27'),
(20, 745, '2', 2.55, 6, 1, '2017-09-13 05:28:28'),
(7, 607, '3', 2.4882, 5, 1, '2017-09-13 05:28:28'),
(3, 3502, '1', -0.0833333, 20, 0, '2017-09-13 05:28:29'),
(6, 11, '0', -0.0075, 20, 0, '2017-09-13 05:28:29'),
(19, 2606, '1', 2.29688, 5, 1, '2017-09-13 05:28:29'),
(1, 2747, '1', -0.27, 21, 0, '2017-09-13 05:28:32'),
(22, 391, '0', -0.0075, 20, 0, '2017-09-13 05:28:33'),
(11, 3, '3', 1.47, 6, 1, '2017-09-13 05:28:34'),
(2, 3459, '2', 1.08, 8, 1, '2017-09-13 05:28:35'),
(8, 398, '0', -0.0075, 20, 0, '2017-09-13 05:28:37'),
(19, 2601, '2', 2.04187, 7, 1, '2017-09-13 05:28:37'),
(12, 490, '4', -0.00231481, 35, 0, '2017-09-13 05:28:37'),
(1, 2738, '2', 1.61333, 8, 1, '2017-09-13 05:28:40'),
(7, 611, '3', 1.7328, 12, 1, '2017-09-13 05:28:40'),
(4, 3401, '3', 1.05762, 13, 1, '2017-09-13 05:28:40'),
(14, 2739, '1', 0.333333, 20, 1, '2017-09-13 05:28:41'),
(10, 3083, '2', -0.00382653, 27, 0, '2017-09-13 05:28:42'),
(26, 1465, '2', -0.0344388, 25, 0, '2017-09-13 05:28:42'),
(27, 1199, '2', -0.00292969, 31, 0, '2017-09-13 05:28:43'),
(3, 3447, '1', -0.27, 14, 0, '2017-09-13 05:28:43'),
(1, 2759, '2', 2.43, 3, 1, '2017-09-13 05:28:43'),
(13, 850, '3', 1.02083, 25, 1, '2017-09-13 05:28:44'),
(20, 742, '2', -1.575, 19, 0, '2017-09-13 05:28:46'),
(11, 5, '3', 0.3675, 13, 1, '2017-09-13 05:28:47'),
(9, 873, '1', -0.579201, 37, 0, '2017-09-13 05:28:47'),
(6, 5, '3', 0.03, 18, 1, '2017-09-13 05:28:47'),
(1, 2755, '4', -2.08333, 5, 0, '2017-09-13 05:28:48'),
(21, 2603, '2', -0.48, 24, 0, '2017-09-13 05:28:48'),
(10, 3050, '3', 1.6875, 7, 1, '2017-09-13 05:28:49'),
(4, 3399, '1', -1.5498, 9, 0, '2017-09-13 05:28:49'),
(7, 602, '3', -2.13574, 10, 0, '2017-09-13 05:28:51'),
(12, 732, '3', -1.12037, 14, 0, '2017-09-13 05:28:51'),
(25, 602, '2', 0.574219, 36, 1, '2017-09-13 05:28:51'),
(6, 6, '2', 1.6875, 5, 1, '2017-09-13 05:28:52'),
(20, 483, '2', 2.6087, 6, 1, '2017-09-13 05:28:52'),
(14, 2744, '1', 1.08, 12, 1, '2017-09-13 05:28:53'),
(22, 389, '0', -0.0075, 20, 0, '2017-09-13 05:28:53'),
(8, 365, '3', 0.12, 16, 1, '2017-09-13 05:28:53'),
(13, 1308, '3', 2.08333, 10, 1, '2017-09-13 05:28:54'),
(10, 3028, '2', 1.85204, 6, 1, '2017-09-13 05:28:54'),
(5, 2761, '0', -0.00333333, 30, 0, '2017-09-13 05:28:54'),
(5, 2752, '1', 0, 30, 1, '2017-09-13 05:28:55'),
(3, 3445, '1', -0.3675, 13, 0, '2017-09-13 05:28:56'),
(2, 3464, '2', 0.0208333, 22, 1, '2017-09-13 05:28:57'),
(25, 1311, '4', 2.3232, 6, 1, '2017-09-13 05:28:57'),
(21, 2612, '1', 1.47, 12, 1, '2017-09-13 05:29:00'),
(26, 1488, '2', 1.04752, 18, 1, '2017-09-13 05:29:00'),
(2, 3509, '4', -1.92, 4, 0, '2017-09-13 05:29:01'),
(10, 3006, '2', -1.6875, 7, 0, '2017-09-13 05:29:02'),
(1, 2748, '1', -0.75, 15, 0, '2017-09-13 05:29:03'),
(27, 1202, '1', 0.592593, 20, 1, '2017-09-13 05:29:03'),
(11, 18, '4', 0.12, 16, 1, '2017-09-13 05:29:03'),
(12, 728, '0', 0, 12, -1, '2017-09-13 05:29:03'),
(6, 88, '4', -0.6075, 11, 0, '2017-09-13 05:29:04'),
(20, 760, '4', 2.4211, 11, 1, '2017-09-13 05:29:04'),
(3, 3459, '2', 1.08, 8, 1, '2017-09-13 05:29:04'),
(7, 1318, '2', 1.6875, 14, 1, '2017-09-13 05:29:04'),
(22, 2410, '2', 2.26573, 11, 1, '2017-09-13 05:29:04'),
(5, 2746, '2', 1.33333, 10, 1, '2017-09-13 05:29:05'),
(25, 1334, '4', 2.55, 9, 1, '2017-09-13 05:29:06'),
(19, 2604, '1', -0.1875, 30, 0, '2017-09-13 05:29:07'),
(20, 774, '1', 2.74448, 6, 1, '2017-09-13 05:29:09'),
(21, 2607, '4', 1.6875, 10, 1, '2017-09-13 05:29:10'),
(13, 598, '4', 1.61333, 16, 1, '2017-09-13 05:29:11'),
(10, 3079, '1', -1.38138, 9, 0, '2017-09-13 05:29:11'),
(14, 2740, '4', -0.403333, 19, 0, '2017-09-13 05:29:12'),
(8, 2408, '3', 1.83743, 20, 1, '2017-09-13 05:29:13'),
(6, 12, '4', 0.75, 10, 1, '2017-09-13 05:29:13'),
(7, 1301, '3', 2.21558, 9, 1, '2017-09-13 05:29:13'),
(4, 3416, '1', -0.0833333, 25, 0, '2017-09-13 05:29:15'),
(11, 4, '2', -0.6075, 11, 0, '2017-09-13 05:29:15'),
(20, 770, '1', -2.74448, 6, 0, '2017-09-13 05:29:16'),
(1, 2752, '4', -1.08, 12, 0, '2017-09-13 05:29:16'),
(13, 1311, '4', 2.3232, 6, 1, '2017-09-13 05:29:16'),
(2, 3454, '3', -0.12, 16, 0, '2017-09-13 05:29:17'),
(3, 3469, '1', -0.0075, 19, 0, '2017-09-13 05:29:23'),
(1, 2756, '2', 1.47, 9, 1, '2017-09-13 05:29:24'),
(19, 2609, '4', -0.991875, 17, 0, '2017-09-13 05:29:24'),
(6, 2, '3', 0.48, 12, 1, '2017-09-13 05:29:25'),
(11, 7, '3', -0.6075, 11, 0, '2017-09-13 05:29:25'),
(27, 1189, '3', 0.0956633, 23, 1, '2017-09-13 05:29:27'),
(8, 375, '1', 0.3675, 13, 1, '2017-09-13 05:29:27'),
(9, 882, '4', 0.421875, 40, 1, '2017-09-13 05:29:28'),
(12, 729, '1', -0.333333, 24, 0, '2017-09-13 05:29:28'),
(4, 3407, '1', 0.853333, 14, 1, '2017-09-13 05:29:29'),
(25, 1106, '0', 0, 22, -1, '2017-09-13 05:29:29'),
(5, 2755, '3', 0.0533333, 26, 1, '2017-09-13 05:29:30'),
(30, 171, '0', -0.00046875, 80, 0, '2017-09-13 05:29:31'),
(16, 2606, '1', 2.43, 4, 1, '2017-09-13 05:29:31'),
(6, 10, '1', 1.6875, 5, 1, '2017-09-13 05:29:31'),
(20, 767, '0', 0, 15, -1, '2017-09-13 05:29:31'),
(22, 2432, '3', -1.70802, 27, 0, '2017-09-13 05:29:32'),
(14, 2756, '3', -0.333333, 20, 0, '2017-09-13 05:29:32'),
(10, 3020, '1', -0.0956633, 23, 0, '2017-09-13 05:29:34'),
(26, 1477, '3', 0.411523, 34, 1, '2017-09-13 05:29:34'),
(8, 2416, '3', 2.47934, 8, 1, '2017-09-13 05:29:34'),
(2, 3469, '4', -0.0675, 17, 0, '2017-09-13 05:29:35'),
(7, 853, '4', -1.2675, 21, 0, '2017-09-13 05:29:35'),
(21, 2605, '2', 0.3675, 26, 1, '2017-09-13 05:29:36'),
(19, 2605, '2', 1.36688, 13, 1, '2017-09-13 05:29:37'),
(10, 3013, '3', -2.02423, 5, 0, '2017-09-13 05:29:39'),
(26, 1491, '1', -2.32823, 5, 0, '2017-09-13 05:29:40'),
(11, 13, '1', 0.1875, 15, 1, '2017-09-13 05:29:40'),
(1, 2740, '4', -0.653333, 16, 0, '2017-09-13 05:29:40'),
(21, 2606, '1', 2.29688, 5, 1, '2017-09-13 05:29:41'),
(7, 403, '4', 2.43, 6, 1, '2017-09-13 05:29:41'),
(4, 3403, '2', 0.949219, 14, 1, '2017-09-13 05:29:43'),
(19, 2610, '3', 2.1675, 6, 1, '2017-09-13 05:29:43'),
(16, 2612, '2', -1.36688, 13, 0, '2017-09-13 05:29:44'),
(27, 1287, '3', 1.2513, 17, 1, '2017-09-13 05:29:44'),
(21, 2608, '3', 2.43, 4, 1, '2017-09-13 05:29:45'),
(2, 3502, '1', -0.75, 12, 0, '2017-09-13 05:29:47'),
(6, 7, '3', -0.0675, 17, 0, '2017-09-13 05:29:47'),
(16, 2608, '3', 2.43, 4, 1, '2017-09-13 05:29:48'),
(26, 1486, '4', -1.89824, 9, 0, '2017-09-13 05:29:48'),
(1, 2742, '4', 1.61333, 8, 1, '2017-09-13 05:29:49'),
(3, 3504, '0', -0.00443787, 26, 0, '2017-09-13 05:29:49'),
(10, 3068, '2', -1.2398, 10, 0, '2017-09-13 05:29:49'),
(22, 366, '4', 0.03, 18, 1, '2017-09-13 05:29:50'),
(11, 17, '1', 0.75, 10, 1, '2017-09-13 05:29:50'),
(4, 3398, '3', -1.5498, 9, 0, '2017-09-13 05:29:52'),
(7, 599, '1', 2.00083, 11, 1, '2017-09-13 05:29:52'),
(13, 1322, '3', 1.3125, 36, 1, '2017-09-13 05:29:52'),
(21, 2627, '2', 2.6, 8, 1, '2017-09-13 05:29:53'),
(12, 481, '1', 0.421875, 25, 1, '2017-09-13 05:29:53'),
(20, 766, '2', -1.7679, 23, 0, '2017-09-13 05:29:54'),
(8, 1140, '0', -0.0075, 20, 0, '2017-09-13 05:29:55'),
(26, 1480, '3', -1.96599, 8, 0, '2017-09-13 05:29:56'),
(5, 2760, '0', 0, 25, -1, '2017-09-13 05:29:56'),
(10, 3042, '2', 1.6875, 7, 1, '2017-09-13 05:29:57'),
(1, 2749, '4', 1.08, 12, 1, '2017-09-13 05:30:01'),
(6, 8, '1', -0.27, 14, 0, '2017-09-13 05:30:01'),
(12, 486, '1', 1.6875, 9, 1, '2017-09-13 05:30:01'),
(16, 2611, '3', 1.2675, 14, 1, '2017-09-13 05:30:02'),
(14, 2754, '0', -0.00333333, 30, 0, '2017-09-13 05:30:03'),
(25, 1312, '0', 0, 34, -1, '2017-09-13 05:30:03'),
(21, 2622, '1', -2.5, 10, 0, '2017-09-13 05:30:03'),
(19, 2615, '1', 0.75, 20, 1, '2017-09-13 05:30:04'),
(11, 11, '1', 0.27, 14, 1, '2017-09-13 05:30:05'),
(2, 3499, '4', 0.0075, 19, 1, '2017-09-13 05:30:05'),
(8, 2403, '2', 2.31148, 11, 1, '2017-09-13 05:30:06'),
(4, 3400, '4', -0.949219, 14, 0, '2017-09-13 05:30:06'),
(24, 2432, '3', -2.14438, 17, 0, '2017-09-13 05:30:07'),
(20, 758, '2', -2.2693, 13, 0, '2017-09-13 05:30:07'),
(5, 2737, '3', -1.08, 12, 0, '2017-09-13 05:30:08'),
(1, 2739, '1', 1.61333, 8, 1, '2017-09-13 05:30:09'),
(6, 14, '3', -1.2675, 7, 0, '2017-09-13 05:30:09'),
(12, 472, '1', 2.04187, 7, 1, '2017-09-13 05:30:09'),
(26, 1482, '2', -1.48915, 13, 0, '2017-09-13 05:30:09'),
(21, 2632, '3', 2.7, 6, 1, '2017-09-13 05:30:09'),
(3, 3509, '0', -0.0075, 20, 0, '2017-09-13 05:30:10'),
(22, 368, '0', -0.0075, 20, 0, '2017-09-13 05:30:10'),
(16, 2602, '3', 1.80187, 9, 1, '2017-09-13 05:30:11'),
(6, 9, '2', 1.92, 4, 1, '2017-09-13 05:30:13'),
(27, 1200, '2', -0.113426, 29, 0, '2017-09-13 05:30:14'),
(20, 475, '4', 2.54348, 7, 1, '2017-09-13 05:30:15'),
(2, 3475, '4', -1.17188, 9, 0, '2017-09-13 05:30:15'),
(16, 2614, '4', 2.29688, 5, 1, '2017-09-13 05:30:16'),
(9, 918, '2', -0.719076, 49, 0, '2017-09-13 05:30:17'),
(13, 1337, '3', 1.82812, 25, 1, '2017-09-13 05:30:17'),
(7, 605, '1', -1.02083, 25, 0, '2017-09-13 05:30:18'),
(3, 3472, '2', -1.08, 8, 0, '2017-09-13 05:30:18'),
(1, 2754, '1', 1.47, 9, 1, '2017-09-13 05:30:18'),
(12, 719, '2', -1.56481, 10, 0, '2017-09-13 05:30:19'),
(21, 2624, '2', 2.5, 10, 1, '2017-09-13 05:30:20'),
(11, 16, '3', -0.1875, 15, 0, '2017-09-13 05:30:20'),
(24, 381, '1', 0.1875, 15, 1, '2017-09-13 05:30:22'),
(10, 3073, '0', -0.00382653, 28, 0, '2017-09-13 05:30:25'),
(26, 1483, '4', 1.00554, 16, 1, '2017-09-13 05:30:25'),
(19, 2629, '4', -1.9, 22, 0, '2017-09-13 05:30:26'),
(1, 2776, '1', 2.46, 9, 1, '2017-09-13 05:30:26'),
(13, 1341, '3', -2.55, 9, 0, '2017-09-13 05:30:27'),
(14, 2737, '3', -0.0833333, 25, 0, '2017-09-13 05:30:27'),
(4, 3411, '1', 0.163333, 23, 1, '2017-09-13 05:30:29'),
(22, 1114, '0', -0.0075, 20, 0, '2017-09-13 05:30:31'),
(2, 3496, '2', -0.12, 16, 0, '2017-09-13 05:30:31'),
(30, 1206, '0', -0.000833333, 60, 0, '2017-09-13 05:30:32'),
(11, 9, '2', 0.48, 12, 1, '2017-09-13 05:30:32'),
(27, 1219, '3', 0.0557851, 19, 1, '2017-09-13 05:30:32'),
(8, 2414, '1', -1.4415, 27, 0, '2017-09-13 05:30:33'),
(7, 614, '1', -1.4856, 16, 0, '2017-09-13 05:30:33'),
(6, 18, '0', -0.0075, 20, 0, '2017-09-13 05:30:33'),
(19, 2611, '3', 1.92, 8, 1, '2017-09-13 05:30:34'),
(12, 735, '1', -0.75, 15, 0, '2017-09-13 05:30:34'),
(1, 2764, '4', -2.58, 7, 0, '2017-09-13 05:30:34'),
(21, 2629, '1', 2.25, 15, 1, '2017-09-13 05:30:34'),
(5, 2750, '1', -0.0533333, 26, 0, '2017-09-13 05:30:34'),
(24, 393, '2', -0.1875, 15, 0, '2017-09-13 05:30:37'),
(4, 3414, '3', -1.61333, 8, 0, '2017-09-13 05:30:37'),
(13, 1338, '4', -2.41071, 11, 0, '2017-09-13 05:30:38'),
(11, 6, '2', 1.47, 6, 1, '2017-09-13 05:30:38'),
(26, 1485, '2', -1.6875, 13, 0, '2017-09-13 05:30:38'),
(3, 3475, '1', -0.046875, 21, 0, '2017-09-13 05:30:39'),
(14, 2761, '1', 0.963333, 13, 1, '2017-09-13 05:30:40'),
(19, 2627, '2', 2.65, 7, 1, '2017-09-13 05:30:41'),
(29, 1104, '3', 0.48, 12, 1, '2017-09-13 05:30:42'),
(30, 1176, '3', -1.10587, 11, 0, '2017-09-13 05:30:43'),
(10, 3026, '2', 0.382653, 18, 1, '2017-09-13 05:30:43'),
(27, 1175, '4', 1.29199, 11, 1, '2017-09-13 05:30:44'),
(2, 3504, '2', -0.75, 13, 0, '2017-09-13 05:30:44'),
(6, 4, '2', -0.6075, 11, 0, '2017-09-13 05:30:45'),
(26, 3008, '1', -1.6875, 7, 0, '2017-09-13 05:30:45'),
(15, 363, '3', 0.6075, 11, 1, '2017-09-13 05:30:46'),
(21, 2625, '1', -2.4, 12, 0, '2017-09-13 05:30:47'),
(13, 622, '0', 0, 10, -1, '2017-09-13 05:30:48'),
(20, 372, '0', -0.0075, 20, 0, '2017-09-13 05:30:48'),
(24, 1114, '1', 0.6075, 11, 1, '2017-09-13 05:30:48'),
(14, 2741, '3', 1.76333, 7, 1, '2017-09-13 05:30:48'),
(16, 2615, '2', -0.12, 32, 0, '2017-09-13 05:30:48'),
(9, 309, '4', 0.700833, 31, 1, '2017-09-13 05:30:49'),
(22, 379, '0', -0.0075, 20, 0, '2017-09-13 05:30:51'),
(1, 2775, '3', 1.86, 19, 1, '2017-09-13 05:30:53'),
(16, 2613, '4', 2.29688, 5, 1, '2017-09-13 05:30:53'),
(12, 730, '1', -0.668981, 19, 0, '2017-09-13 05:30:54'),
(24, 1112, '4', 1.08, 8, 1, '2017-09-13 05:30:55'),
(20, 1114, '1', 1.08, 8, 1, '2017-09-13 05:30:57'),
(21, 2621, '0', 0, 11, -1, '2017-09-13 05:30:57'),
(6, 19, '4', -0.3675, 13, 0, '2017-09-13 05:30:57'),
(11, 14, '1', 0, 20, 1, '2017-09-13 05:30:58'),
(26, 1470, '1', 1.6428, 13, 1, '2017-09-13 05:30:58'),
(15, 1109, '3', 0.3675, 13, 1, '2017-09-13 05:30:59'),
(13, 996, '3', -1.7328, 12, 0, '2017-09-13 05:31:00'),
(27, 1284, '3', 0.12, 16, 1, '2017-09-13 05:31:00'),
(19, 2624, '2', 2, 20, 1, '2017-09-13 05:31:02'),
(7, 609, '1', -0.853333, 28, 0, '2017-09-13 05:31:02'),
(5, 2739, '1', 0.0133333, 28, 1, '2017-09-13 05:31:03'),
(18, 370, '0', -0.0075, 20, 0, '2017-09-13 05:31:04'),
(3, 3461, '0', -0.00520833, 24, 0, '2017-09-13 05:31:04'),
(4, 3423, '3', -0.502066, 26, 0, '2017-09-13 05:31:04'),
(25, 1092, '0', -0.05, 60, 0, '2017-09-13 05:31:04'),
(9, 887, '2', -1.61792, 17, 0, '2017-09-13 05:31:06'),
(20, 380, '4', -0.6075, 11, 0, '2017-09-13 05:31:07'),
(24, 2400, '3', 2.05959, 12, 1, '2017-09-13 05:31:07'),
(26, 1471, '4', 2.08333, 10, 1, '2017-09-13 05:31:09'),
(13, 1310, '4', 2.05141, 9, 1, '2017-09-13 05:31:10'),
(2, 3506, '4', -0.0344388, 25, 0, '2017-09-13 05:31:10'),
(6, 13, '1', 0.48, 12, 1, '2017-09-13 05:31:10'),
(16, 2630, '1', -2.2, 16, 0, '2017-09-13 05:31:10'),
(22, 395, '0', -0.0075, 20, 0, '2017-09-13 05:31:11'),
(10, 3009, '0', -0.00382653, 28, 0, '2017-09-13 05:31:11'),
(20, 1107, '4', 1.92, 4, 1, '2017-09-13 05:31:12'),
(11, 8, '2', 0.27, 14, 1, '2017-09-13 05:31:13'),
(7, 1303, '1', 1.84083, 13, 1, '2017-09-13 05:31:15'),
(6, 3, '3', 1.47, 6, 1, '2017-09-13 05:31:16'),
(29, 2408, '2', -1.19234, 34, 0, '2017-09-13 05:31:16'),
(27, 1220, '1', -0.55102, 16, 0, '2017-09-13 05:31:16'),
(14, 2772, '4', -1.32, 28, 0, '2017-09-13 05:31:16'),
(20, 368, '3', 1.47, 6, 1, '2017-09-13 05:31:18'),
(4, 3424, '2', 1.39463, 14, 1, '2017-09-13 05:31:18'),
(10, 3045, '1', 1.6875, 7, 1, '2017-09-13 05:31:18'),
(15, 374, '1', 0, 20, 0, '2017-09-13 05:31:19'),
(16, 2605, '2', 1.57687, 11, 1, '2017-09-13 05:31:21'),
(25, 1324, '3', 2.22727, 17, 1, '2017-09-13 05:31:21'),
(18, 399, '2', -0.03, 18, 0, '2017-09-13 05:31:22'),
(2, 3472, '2', -0.3675, 13, 0, '2017-09-13 05:31:23'),
(19, 2626, '4', -1.9, 22, 0, '2017-09-13 05:31:24'),
(11, 10, '1', 0.48, 12, 1, '2017-09-13 05:31:24'),
(24, 397, '3', 0.0675, 17, 1, '2017-09-13 05:31:25'),
(10, 3047, '3', 1.6875, 7, 1, '2017-09-13 05:31:25'),
(20, 1121, '4', 1.08, 8, 1, '2017-09-13 05:31:25'),
(13, 1340, '2', 2.22581, 16, 1, '2017-09-13 05:31:25'),
(3, 3505, '1', -0.0399408, 23, 0, '2017-09-13 05:31:26'),
(21, 2634, '4', 1.45, 31, 1, '2017-09-13 05:31:28'),
(14, 2738, '2', 1.08, 12, 1, '2017-09-13 05:31:28'),
(24, 1110, '2', 1.6875, 5, 1, '2017-09-13 05:31:30'),
(22, 2429, '2', -2.27816, 18, 0, '2017-09-13 05:31:30'),
(16, 2628, '3', -2.55, 9, 0, '2017-09-13 05:31:30'),
(26, 1481, '1', -0.6075, 22, 0, '2017-09-13 05:31:30'),
(29, 1133, '3', 0.12, 16, 1, '2017-09-13 05:31:32'),
(1, 2768, '4', 0.66, 39, 1, '2017-09-13 05:31:32'),
(5, 2740, '0', -0.00333333, 30, 0, '2017-09-13 05:31:33'),
(2, 3487, '2', -0.6075, 11, 0, '2017-09-13 05:31:33'),
(8, 2413, '2', -0.362949, 60, 0, '2017-09-13 05:31:34'),
(6, 25, '3', -0.03, 18, 0, '2017-09-13 05:31:34'),
(9, 875, '3', -0.853333, 28, 0, '2017-09-13 05:31:34'),
(12, 733, '0', -0.001875, 40, 0, '2017-09-13 05:31:34'),
(3, 3443, '3', 1.08, 8, 1, '2017-09-13 05:31:35'),
(7, 852, '4', 1.40083, 19, 1, '2017-09-13 05:31:35'),
(11, 1, '1', -0.75, 10, 0, '2017-09-13 05:31:35'),
(25, 1338, '2', 2.25, 14, 1, '2017-09-13 05:31:35'),
(13, 1096, '4', -2.45, 11, 0, '2017-09-13 05:31:37'),
(16, 2601, '2', 2.04187, 7, 1, '2017-09-13 05:31:37'),
(10, 3066, '1', 0.860969, 13, 1, '2017-09-13 05:31:38'),
(15, 381, '1', 0.0075, 19, 1, '2017-09-13 05:31:38'),
(14, 2736, '4', 1.33333, 10, 1, '2017-09-13 05:31:38'),
(21, 2633, '3', 2.4, 12, 1, '2017-09-13 05:31:40'),
(18, 372, '2', -0.0075, 19, 0, '2017-09-13 05:31:41'),
(24, 374, '1', -0.6075, 11, 0, '2017-09-13 05:31:41'),
(7, 1308, '3', 2.25333, 8, 1, '2017-09-13 05:31:43'),
(20, 397, '1', -0.0675, 17, 0, '2017-09-13 05:31:43'),
(2, 3494, '3', -1.17188, 9, 0, '2017-09-13 05:31:43'),
(19, 2621, '3', 2.05, 19, 1, '2017-09-13 05:31:43'),
(4, 3432, '2', -0.559401, 25, 0, '2017-09-13 05:31:43'),
(5, 2754, '1', 1.20333, 11, 1, '2017-09-13 05:31:44'),
(10, 3032, '2', 1.6875, 7, 1, '2017-09-13 05:31:45'),
(27, 172, '2', 1.62669, 29, 1, '2017-09-13 05:31:45'),
(1, 2774, '4', 2.22, 13, 1, '2017-09-13 05:31:45'),
(3, 3449, '1', -0.6075, 11, 0, '2017-09-13 05:31:45'),
(25, 1331, '2', 2.25, 10, 1, '2017-09-13 05:31:46'),
(22, 1138, '1', -0.0675, 17, 0, '2017-09-13 05:31:47'),
(12, 509, '1', 1.12037, 14, 1, '2017-09-13 05:31:48'),
(13, 1103, '0', 0, 11, -1, '2017-09-13 05:31:48'),
(16, 2604, '1', -1.57687, 11, 0, '2017-09-13 05:31:48'),
(7, 596, '1', 2.47016, 5, 1, '2017-09-13 05:31:48'),
(20, 379, '3', 1.47, 6, 1, '2017-09-13 05:31:49'),
(6, 40, '1', -0.1875, 15, 0, '2017-09-13 05:31:49'),
(8, 395, '4', -0.12, 16, 0, '2017-09-13 05:31:51'),
(1, 2772, '4', -2.7, 5, 0, '2017-09-13 05:31:51'),
(10, 3145, '2', 2.12742, 6, 1, '2017-09-13 05:31:52'),
(29, 383, '0', -0.0075, 20, 0, '2017-09-13 05:31:52'),
(14, 2769, '4', 2.16, 14, 1, '2017-09-13 05:31:52'),
(11, 29, '2', -0.0675, 17, 0, '2017-09-13 05:31:52'),
(7, 1313, '2', 2.66667, 6, 1, '2017-09-13 05:31:53'),
(15, 388, '3', -0.12, 16, 0, '2017-09-13 05:31:54'),
(16, 2609, '2', 2.04187, 7, 1, '2017-09-13 05:31:55'),
(2, 3489, '2', 0.27, 14, 1, '2017-09-13 05:31:56'),
(7, 1322, '2', -2.8125, 4, 0, '2017-09-13 05:31:57'),
(25, 1325, '1', 2.30357, 13, 1, '2017-09-13 05:31:58'),
(12, 498, '0', 0, 10, -1, '2017-09-13 05:31:59'),
(20, 400, '4', 0.75, 10, 1, '2017-09-13 05:31:59'),
(16, 2627, '2', 2.75, 5, 1, '2017-09-13 05:32:00'),
(18, 373, '2', -0.0075, 19, 0, '2017-09-13 05:32:01'),
(24, 2422, '3', -2.13574, 20, 0, '2017-09-13 05:32:01'),
(3, 3487, '2', -0.1875, 15, 0, '2017-09-13 05:32:01'),
(4, 3433, '4', -1.04752, 18, 0, '2017-09-13 05:32:01'),
(1, 2765, '2', -2.34, 11, 0, '2017-09-13 05:32:02'),
(20, 2400, '3', 2.66694, 4, 1, '2017-09-13 05:32:02'),
(6, 36, '3', -0.1875, 15, 0, '2017-09-13 05:32:04'),
(21, 2823, '1', -2.13414, 24, 0, '2017-09-13 05:32:05'),
(19, 2625, '3', 1.9, 22, 1, '2017-09-13 05:32:05'),
(11, 28, '0', 0, 13, -1, '2017-09-13 05:32:05'),
(16, 2617, '1', 2.7, 6, 1, '2017-09-13 05:32:06'),
(22, 380, '3', -0.0075, 19, 0, '2017-09-13 05:32:06'),
(12, 725, '4', 1.49481, 10, 1, '2017-09-13 05:32:08'),
(2, 3449, '2', -0.48, 12, 0, '2017-09-13 05:32:09'),
(26, 1478, '0', -0.001875, 40, 0, '2017-09-13 05:32:11'),
(8, 393, '3', 0, 20, 0, '2017-09-13 05:32:11'),
(5, 2744, '3', -0.03, 27, 0, '2017-09-13 05:32:11'),
(3, 3484, '3', -0.75, 10, 0, '2017-09-13 05:32:11'),
(15, 382, '0', -0.0075, 20, 0, '2017-09-13 05:32:14'),
(13, 1325, '1', 1.55357, 27, 1, '2017-09-13 05:32:14'),
(14, 2778, '2', 1.68, 22, 1, '2017-09-13 05:32:14'),
(7, 995, '2', -2.15, 17, 0, '2017-09-13 05:32:15'),
(16, 2632, '4', -2.55, 9, 0, '2017-09-13 05:32:15'),
(6, 24, '3', 0.6075, 11, 1, '2017-09-13 05:32:16'),
(9, 881, '3', 1.0443, 41, 1, '2017-09-13 05:32:16'),
(18, 396, '0', 0, 16, -1, '2017-09-13 05:32:17'),
(21, 2623, '2', 2.3, 14, 1, '2017-09-13 05:32:18'),
(24, 394, '1', -0.0675, 17, 0, '2017-09-13 05:32:18'),
(20, 388, '3', -0.1875, 15, 0, '2017-09-13 05:32:18'),
(11, 21, '3', -0.3675, 13, 0, '2017-09-13 05:32:18'),
(2, 3479, '1', 0.9075, 9, 1, '2017-09-13 05:32:18'),
(8, 1137, '2', 1.08, 8, 1, '2017-09-13 05:32:19'),
(19, 2632, '3', 2.3, 14, 1, '2017-09-13 05:32:19'),
(7, 619, '2', -2.52083, 5, 0, '2017-09-13 05:32:20'),
(25, 1098, '4', -2.21246, 22, 0, '2017-09-13 05:32:21'),
(10, 3112, '4', -0.168283, 29, 0, '2017-09-13 05:32:21'),
(15, 373, '2', -1.2675, 7, 0, '2017-09-13 05:32:21'),
(5, 2763, '1', 1.20333, 11, 1, '2017-09-13 05:32:22'),
(3, 3496, '3', 0.27, 14, 1, '2017-09-13 05:32:25'),
(14, 2767, '4', 2.4, 10, 1, '2017-09-13 05:32:25'),
(20, 365, '3', 1.2675, 7, 1, '2017-09-13 05:32:25'),
(10, 3293, '1', 2.12742, 6, 1, '2017-09-13 05:32:27'),
(7, 594, '3', 2.2188, 7, 1, '2017-09-13 05:32:27'),
(16, 2616, '0', 0, 12, -1, '2017-09-13 05:32:27'),
(11, 39, '2', 0.9075, 9, 1, '2017-09-13 05:32:28'),
(27, 1206, '2', -0.27, 42, 0, '2017-09-13 05:32:28'),
(13, 1327, '3', 2.16, 14, 1, '2017-09-13 05:32:29'),
(12, 489, '1', 0.6075, 22, 1, '2017-09-13 05:32:30'),
(25, 1345, '1', 2.65665, 11, 1, '2017-09-13 05:32:32'),
(1, 2789, '1', -1.08, 32, 0, '2017-09-13 05:32:34'),
(6, 22, '1', 0.0075, 19, 1, '2017-09-13 05:32:34'),
(26, 3000, '0', -0.00520833, 24, 0, '2017-09-13 05:32:35'),
(13, 1132, '3', -2.7, 6, 0, '2017-09-13 05:32:35'),
(16, 2635, '3', -2.6, 8, 0, '2017-09-13 05:32:36'),
(21, 2735, '4', -2.36512, 18, 0, '2017-09-13 05:32:36'),
(27, 1296, '1', -1.02083, 10, 0, '2017-09-13 05:32:38'),
(4, 3437, '2', 0.0759298, 37, 1, '2017-09-13 05:32:38'),
(12, 485, '1', 1.94093, 9, 1, '2017-09-13 05:32:39'),
(2, 3505, '2', 0.110947, 21, 1, '2017-09-13 05:32:39'),
(11, 38, '0', 0, 13, -1, '2017-09-13 05:32:40'),
(8, 2429, '4', 2.13122, 22, 1, '2017-09-13 05:32:41'),
(3, 3499, '4', 0.12, 16, 1, '2017-09-13 05:32:41'),
(19, 2622, '1', -1.9, 22, 0, '2017-09-13 05:32:42'),
(9, 358, '1', -1.05762, 26, 0, '2017-09-13 05:32:42'),
(21, 2619, '3', 2.65, 7, 1, '2017-09-13 05:32:43'),
(5, 2745, '4', -0.213333, 22, 0, '2017-09-13 05:32:44'),
(20, 2444, '0', 0, 21, -1, '2017-09-13 05:32:46'),
(15, 2420, '3', 1.59505, 26, 1, '2017-09-13 05:32:46'),
(24, 2419, '3', -1.72521, 29, 0, '2017-09-13 05:32:47'),
(26, 1468, '4', -1.36688, 13, 0, '2017-09-13 05:32:48'),
(16, 2633, '3', 2.4, 12, 1, '2017-09-13 05:32:48'),
(13, 1312, '2', 2.36364, 14, 1, '2017-09-13 05:32:49'),
(19, 2617, '1', 2.6, 8, 1, '2017-09-13 05:32:49'),
(7, 601, '4', 1.10587, 22, 1, '2017-09-13 05:32:50'),
(8, 369, '2', 0.9075, 9, 1, '2017-09-13 05:32:50'),
(16, 2620, '4', 2.75, 5, 1, '2017-09-13 05:32:53'),
(12, 745, '2', 1.95, 14, 1, '2017-09-13 05:32:54'),
(6, 38, '2', 0.0075, 19, 1, '2017-09-13 05:32:54'),
(21, 2734, '1', -2.58532, 12, 0, '2017-09-13 05:32:55'),
(7, 1113, '4', -2.72727, 6, 0, '2017-09-13 05:32:55'),
(1, 2751, '2', 0.213333, 22, 1, '2017-09-13 05:32:56'),
(15, 366, '4', 0.75, 10, 1, '2017-09-13 05:32:57'),
(2, 3572, '0', -0.0075, 20, 0, '2017-09-13 05:33:00'),
(2, 3531, '2', 0.0075, 21, 1, '2017-09-13 05:33:00'),
(13, 1332, '3', 2.45, 11, 1, '2017-09-13 05:33:00'),
(11, 24, '0', -0.0075, 20, 0, '2017-09-13 05:33:00'),
(4, 3425, '4', -0.75, 22, 0, '2017-09-13 05:33:01'),
(12, 754, '1', -2.5, 7, 0, '2017-09-13 05:33:01'),
(3, 3479, '0', -0.0075, 20, 0, '2017-09-13 05:33:02'),
(1, 2741, '3', 1.92, 6, 1, '2017-09-13 05:33:02'),
(7, 1317, '3', 2.1675, 9, 1, '2017-09-13 05:33:04'),
(14, 2786, '2', -0.72, 38, 0, '2017-09-13 05:33:04'),
(10, 3097, '0', -0.0789474, 38, 0, '2017-09-13 05:33:05'),
(17, 733, '3', 1.36688, 13, 1, '2017-09-13 05:33:05'),
(5, 2758, '4', 0.213333, 22, 1, '2017-09-13 05:33:07'),
(24, 384, '0', -0.0075, 20, 0, '2017-09-13 05:33:07'),
(7, 854, '1', 2.74837, 3, 1, '2017-09-13 05:33:08'),
(18, 2404, '1', 0.595818, 51, 1, '2017-09-13 05:33:08'),
(13, 1339, '2', 2.6, 8, 1, '2017-09-13 05:33:08'),
(9, 305, '2', 1.09061, 27, 1, '2017-09-13 05:33:09'),
(16, 2618, '3', 2.2, 16, 1, '2017-09-13 05:33:09'),
(8, 392, '0', -0.0075, 20, 0, '2017-09-13 05:33:10'),
(20, 2442, '4', 2.1, 24, 1, '2017-09-13 05:33:11'),
(15, 385, '3', -0.27, 14, 0, '2017-09-13 05:33:11'),
(29, 2429, '4', 0.55102, 80, 1, '2017-09-13 05:33:12'),
(1, 2791, '3', 2.4, 10, 1, '2017-09-13 05:33:12'),
(6, 39, '2', 0.0075, 19, 1, '2017-09-13 05:33:13'),
(14, 2784, '1', -2.4, 10, 0, '2017-09-13 05:33:13'),
(24, 1104, '3', 1.08, 8, 1, '2017-09-13 05:33:15'),
(7, 1106, '1', -2.6, 8, 0, '2017-09-13 05:33:16'),
(13, 1307, '2', 2.60294, 9, 1, '2017-09-13 05:33:17'),
(12, 734, '4', -0.653333, 16, 0, '2017-09-13 05:33:17'),
(19, 2635, '4', -1.55, 29, 0, '2017-09-13 05:33:19'),
(2, 3523, '2', 0.403333, 19, 1, '2017-09-13 05:33:20'),
(28, 730, '1', -0.835648, 17, 0, '2017-09-13 05:33:20'),
(4, 3418, '1', 0.968492, 19, 1, '2017-09-13 05:33:20'),
(7, 604, '3', 2.52083, 5, 1, '2017-09-13 05:33:20'),
(11, 37, '0', -0.0075, 20, 0, '2017-09-13 05:33:21'),
(10, 3287, '3', -1.73684, 16, 0, '2017-09-13 05:33:21'),
(20, 1141, '1', 1.5, 10, 1, '2017-09-13 05:33:21'),
(5, 2749, '4', 0.653333, 16, 1, '2017-09-13 05:33:22'),
(15, 380, '3', -0.3675, 13, 0, '2017-09-13 05:33:24'),
(1, 2785, '3', 2.28, 12, 1, '2017-09-13 05:33:24'),
(6, 32, '4', -0.6075, 11, 0, '2017-09-13 05:33:24'),
(22, 2411, '0', 0, 78, -1, '2017-09-13 05:33:24'),
(3, 3506, '2', 0.0956633, 23, 1, '2017-09-13 05:33:25'),
(20, 2439, '1', 2.85, 5, 1, '2017-09-13 05:33:25'),
(13, 1108, '2', -2.70701, 8, 0, '2017-09-13 05:33:26'),
(7, 1334, '4', 2.75, 5, 1, '2017-09-13 05:33:26'),
(24, 373, '2', -0.48, 12, 0, '2017-09-13 05:33:27'),
(28, 723, '1', 1.81481, 8, 1, '2017-09-13 05:33:27'),
(2, 3581, '2', -1.33333, 8, 0, '2017-09-13 05:33:28'),
(26, 1487, '4', -0.0354442, 41, 0, '2017-09-13 05:33:28'),
(18, 1110, '0', -0.0075, 20, 0, '2017-09-13 05:33:28'),
(8, 389, '0', -0.0075, 20, 0, '2017-09-13 05:33:31'),
(16, 2629, '0', 0, 22, -1, '2017-09-13 05:33:31'),
(17, 498, '4', -0.421875, 25, 0, '2017-09-13 05:33:31'),
(29, 394, '0', -0.0075, 20, 0, '2017-09-13 05:33:32'),
(20, 1155, '4', 1.95, 7, 1, '2017-09-13 05:33:33'),
(14, 2765, '4', 1.8, 20, 1, '2017-09-13 05:33:34'),
(11, 20, '2', 0.3675, 13, 1, '2017-09-13 05:33:34'),
(28, 718, '1', 1.76333, 7, 1, '2017-09-13 05:33:35'),
(9, 310, '1', -0.6912, 26, 0, '2017-09-13 05:33:35'),
(29, 1109, '4', -1.6875, 5, 0, '2017-09-13 05:33:37'),
(2, 3557, '1', -0.421875, 10, 0, '2017-09-13 05:33:37'),
(16, 2621, '2', -2.7, 6, 0, '2017-09-13 05:33:37'),
(22, 1130, '3', -0.3675, 13, 0, '2017-09-13 05:33:38'),
(15, 1131, '1', 0.1875, 15, 1, '2017-09-13 05:33:39'),
(27, 1250, '0', -0.000833333, 60, 0, '2017-09-13 05:33:39'),
(7, 1090, '1', -2.3, 14, 0, '2017-09-13 05:33:39'),
(13, 1106, '1', -2.25, 15, 0, '2017-09-13 05:33:41'),
(6, 28, '4', -0.03, 18, 0, '2017-09-13 05:33:42'),
(20, 1153, '2', 1.65, 9, 1, '2017-09-13 05:33:42'),
(26, 1475, '3', -1.4518, 14, 0, '2017-09-13 05:33:43'),
(10, 3290, '2', -0.600416, 21, 0, '2017-09-13 05:33:43'),
(3, 3597, '4', 0.217456, 19, 1, '2017-09-13 05:33:44'),
(1, 2780, '2', -1.8, 20, 0, '2017-09-13 05:33:44'),
(8, 1115, '1', 0.3675, 13, 1, '2017-09-13 05:33:44'),
(14, 2770, '2', 2.4, 10, 1, '2017-09-13 05:33:44'),
(28, 720, '4', 1.62881, 10, 1, '2017-09-13 05:33:44'),
(7, 1092, '1', 2.75, 5, 1, '2017-09-13 05:33:45'),
(12, 726, '3', -0.127163, 27, 0, '2017-09-13 05:33:45'),
(2, 3517, '4', -0.925926, 8, 0, '2017-09-13 05:33:45'),
(24, 401, '4', 0.0075, 19, 1, '2017-09-13 05:33:46'),
(18, 367, '1', -0.0075, 19, 0, '2017-09-13 05:33:47'),
(26, 1484, '2', -2.08333, 7, 0, '2017-09-13 05:33:49'),
(5, 2756, '0', -0.00333333, 30, 0, '2017-09-13 05:33:53'),
(11, 32, '3', 0.0075, 19, 1, '2017-09-13 05:33:53'),
(10, 3119, '1', -1.51454, 11, 0, '2017-09-13 05:33:53'),
(16, 2624, '2', 2.2, 16, 1, '2017-09-13 05:33:54'),
(22, 386, '1', -0.12, 16, 0, '2017-09-13 05:33:54'),
(15, 389, '1', -0.1875, 15, 0, '2017-09-13 05:33:54'),
(21, 2631, '0', -0.05, 60, 0, '2017-09-13 05:33:55'),
(29, 1139, '2', 0.03, 18, 1, '2017-09-13 05:33:55'),
(2, 3542, '4', 1.20333, 11, 1, '2017-09-13 05:33:57'),
(4, 3435, '3', -0.0991736, 36, 0, '2017-09-13 05:33:57'),
(12, 731, '4', -1.22454, 13, 0, '2017-09-13 05:33:57'),
(18, 1133, '3', 0.9075, 9, 1, '2017-09-13 05:33:57'),
(13, 1326, '1', 2.12069, 17, 1, '2017-09-13 05:33:58'),
(9, 306, '4', -1.04177, 23, 0, '2017-09-13 05:33:58'),
(25, 623, '4', -0.376414, 86, 0, '2017-09-13 05:33:59'),
(17, 737, '4', 0.27, 28, 1, '2017-09-13 05:33:59'),
(26, 1479, '2', -1.79132, 10, 0, '2017-09-13 05:33:59'),
(1, 2767, '1', -2.1, 15, 0, '2017-09-13 05:34:00'),
(19, 2631, '3', 0.95, 41, 1, '2017-09-13 05:34:00'),
(3, 3527, '1', -0.12, 16, 0, '2017-09-13 05:34:00'),
(8, 391, '1', -0.0675, 17, 0, '2017-09-13 05:34:01'),
(20, 2657, '4', -2.64442, 20, 0, '2017-09-13 05:34:02'),
(24, 391, '2', 0.12, 16, 1, '2017-09-13 05:34:02'),
(28, 725, '4', 0.75, 17, 1, '2017-09-13 05:34:02'),
(6, 37, '0', -0.0075, 20, 0, '2017-09-13 05:34:03'),
(11, 34, '3', -0.75, 10, 0, '2017-09-13 05:34:04'),
(16, 2625, '4', -2.4, 12, 0, '2017-09-13 05:34:06'),
(27, 1209, '1', -0.6348, 27, 0, '2017-09-13 05:34:06'),
(12, 465, '2', 1.47, 9, 1, '2017-09-13 05:34:06'),
(2, 3588, '4', -1.02083, 10, 0, '2017-09-13 05:34:07'),
(5, 2741, '3', 0.75, 15, 1, '2017-09-13 05:34:08'),
(20, 1151, '2', 2.1, 6, 1, '2017-09-13 05:34:08'),
(22, 367, '4', -0.27, 14, 0, '2017-09-13 05:34:09'),
(7, 1103, '1', -2, 24, 0, '2017-09-13 05:34:09'),
(6, 31, '3', -1.47, 6, 0, '2017-09-13 05:34:09'),
(11, 35, '2', 1.47, 6, 1, '2017-09-13 05:34:10'),
(26, 1469, '2', 1.57687, 11, 1, '2017-09-13 05:34:10'),
(15, 1107, '4', 0.12, 16, 1, '2017-09-13 05:34:10'),
(21, 2618, '3', 2.25, 15, 1, '2017-09-13 05:34:10'),
(17, 722, '3', 1.44676, 11, 1, '2017-09-13 05:34:10'),
(8, 400, '1', -0.48, 12, 0, '2017-09-13 05:34:13'),
(13, 1329, '3', 2.2, 16, 1, '2017-09-13 05:34:13'),
(14, 2774, '4', 1.26, 29, 1, '2017-09-13 05:34:14'),
(18, 391, '1', -0.03, 18, 0, '2017-09-13 05:34:15'),
(3, 3529, '1', 0, 16, 0, '2017-09-13 05:34:16'),
(6, 20, '2', 0.9075, 9, 1, '2017-09-13 05:34:18'),
(2, 3599, '2', 0.639053, 14, 1, '2017-09-13 05:34:21'),
(5, 2759, '2', 0.963333, 13, 1, '2017-09-13 05:34:21'),
(13, 610, '4', 2.74448, 7, 1, '2017-09-13 05:34:21'),
(16, 2622, '2', 2.25, 15, 1, '2017-09-13 05:34:21'),
(8, 376, '3', -0.9075, 9, 0, '2017-09-13 05:34:22'),
(3, 3533, '2', -0.949219, 7, 0, '2017-09-13 05:34:23'),
(6, 35, '2', 1.47, 6, 1, '2017-09-13 05:34:24'),
(9, 303, '2', 1.2398, 25, 1, '2017-09-13 05:34:24'),
(21, 2816, '2', -2.513, 14, 0, '2017-09-13 05:34:24'),
(12, 494, '1', -0.48, 18, 0, '2017-09-13 05:34:25'),
(4, 3417, '2', -0.396694, 28, 0, '2017-09-13 05:34:25'),
(11, 22, '2', -0.12, 16, 0, '2017-09-13 05:34:26'),
(28, 724, '1', 0.12, 24, 1, '2017-09-13 05:34:26'),
(16, 2634, '4', 2.65, 7, 1, '2017-09-13 05:34:28'),
(22, 1139, '0', -0.0075, 20, 0, '2017-09-13 05:34:29'),
(3, 3523, '2', 1.92, 6, 1, '2017-09-13 05:34:29'),
(19, 2616, '4', 1.55, 29, 1, '2017-09-13 05:34:30'),
(15, 390, '0', -0.0075, 20, 0, '2017-09-13 05:34:30'),
(5, 2753, '2', 1.33333, 10, 1, '2017-09-13 05:34:31'),
(10, 3100, '0', -0.00207756, 38, 0, '2017-09-13 05:34:32'),
(1, 2778, '2', 0.96, 34, 1, '2017-09-13 05:34:34'),
(16, 2731, '0', 0, 8, -1, '2017-09-13 05:34:36'),
(7, 1320, '1', -1.32, 28, 0, '2017-09-13 05:34:38'),
(15, 1133, '3', 1.08, 8, 1, '2017-09-13 05:34:38'),
(12, 487, '4', 1.17188, 15, 1, '2017-09-13 05:34:40'),
(16, 2841, '3', 2.86514, 4, 1, '2017-09-13 05:34:41'),
(1, 2784, '2', 2.58, 7, 1, '2017-09-13 05:34:41'),
(20, 2664, '4', -2.46797, 33, 0, '2017-09-13 05:34:41'),
(2, 3584, '1', 0.0833333, 20, 1, '2017-09-13 05:34:41'),
(8, 390, '0', -0.0075, 20, 0, '2017-09-13 05:34:42'),
(11, 33, '4', -0.0675, 17, 0, '2017-09-13 05:34:43'),
(6, 33, '4', 0, 20, 0, '2017-09-13 05:34:44'),
(13, 1361, '4', -2.17348, 23, 0, '2017-09-13 05:34:44'),
(9, 302, '1', 1.81481, 20, 1, '2017-09-13 05:34:44'),
(17, 509, '2', -0.00231481, 35, 0, '2017-09-13 05:34:46'),
(28, 509, '2', -0.520833, 21, 0, '2017-09-13 05:34:48'),
(21, 2635, '4', -1.85, 23, 0, '2017-09-13 05:34:48'),
(20, 2435, '0', 0, 6, -1, '2017-09-13 05:34:48'),
(4, 3430, '2', -0.619835, 24, 0, '2017-09-13 05:34:49'),
(22, 378, '0', -0.0075, 20, 0, '2017-09-13 05:34:49'),
(13, 1353, '2', 2.72703, 8, 1, '2017-09-13 05:34:52'),
(3, 3584, '2', 0, 24, 0, '2017-09-13 05:34:53'),
(2, 3597, '4', 0.869823, 12, 1, '2017-09-13 05:34:54'),
(5, 2785, '1', -1.62, 23, 0, '2017-09-13 05:34:55'),
(17, 720, '4', 1.74723, 9, 1, '2017-09-13 05:34:55'),
(16, 2833, '3', 2.47645, 15, 1, '2017-09-13 05:34:56'),
(11, 25, '3', -0.3675, 13, 0, '2017-09-13 05:34:56'),
(15, 401, '1', -0.03, 18, 0, '2017-09-13 05:34:56'),
(6, 21, '3', -0.3675, 13, 0, '2017-09-13 05:34:57'),
(9, 304, '3', -1.6081, 15, 0, '2017-09-13 05:34:59'),
(2, 3535, '4', -1.2675, 7, 0, '2017-09-13 05:35:00'),
(14, 2773, '2', 0.24, 46, 1, '2017-09-13 05:35:00'),
(7, 1315, '1', -1.81034, 23, 0, '2017-09-13 05:35:01'),
(24, 2431, '2', -0.385988, 59, 0, '2017-09-13 05:35:01'),
(4, 3419, '4', 1.6875, 11, 1, '2017-09-13 05:35:01'),
(19, 2730, '4', 1.80492, 32, 1, '2017-09-13 05:35:02'),
(26, 1476, '0', -0.00110947, 52, 0, '2017-09-13 05:35:02'),
(8, 396, '0', -0.0075, 20, 0, '2017-09-13 05:35:03'),
(25, 1123, '0', -0.1875, 64, 0, '2017-09-13 05:35:04'),
(1, 2766, '2', -1.62, 23, 0, '2017-09-13 05:35:04'),
(10, 3294, '1', -0.101801, 31, 0, '2017-09-13 05:35:04'),
(27, 1298, '1', 0.0075, 57, 1, '2017-09-13 05:35:04'),
(21, 2616, '1', -2.1, 18, 0, '2017-09-13 05:35:06'),
(2, 3593, '3', 1.6875, 6, 1, '2017-09-13 05:35:06'),
(12, 475, '1', -0.511815, 27, 0, '2017-09-13 05:35:07'),
(11, 30, '1', -0.75, 10, 0, '2017-09-13 05:35:07'),
(24, 2416, '3', 2.54171, 7, 1, '2017-09-13 05:35:08'),
(5, 2748, '4', -0.963333, 13, 0, '2017-09-13 05:35:08'),
(15, 1105, '2', 0.3675, 13, 1, '2017-09-13 05:35:08'),
(17, 466, '1', -0.853333, 14, 0, '2017-09-13 05:35:09'),
(22, 381, '0', -0.0075, 20, 0, '2017-09-13 05:35:09'),
(28, 487, '4', 0.541875, 23, 1, '2017-09-13 05:35:10'),
(20, 2440, '2', -2.37273, 23, 0, '2017-09-13 05:35:11'),
(13, 618, '3', -2.17046, 20, 0, '2017-09-13 05:35:13'),
(6, 34, '2', 0.12, 16, 1, '2017-09-13 05:35:13'),
(4, 3422, '2', -1.39463, 14, 0, '2017-09-13 05:35:15'),
(10, 3117, '3', -1.51454, 11, 0, '2017-09-13 05:35:15'),
(26, 3002, '4', -0.639053, 14, 0, '2017-09-13 05:35:17'),
(2, 3575, '4', 0.6075, 11, 1, '2017-09-13 05:35:17'),
(16, 2728, '3', -2.21246, 22, 0, '2017-09-13 05:35:18'),
(8, 387, '2', -0.1875, 15, 0, '2017-09-13 05:35:18'),
(21, 2630, '2', 2.25, 15, 1, '2017-09-13 05:35:20'),
(3, 3542, '3', -0.03, 27, 0, '2017-09-13 05:35:20'),
(11, 40, '1', -0.27, 14, 0, '2017-09-13 05:35:20'),
(20, 2449, '3', 2.7, 10, 1, '2017-09-13 05:35:21'),
(6, 26, '4', 1.08, 8, 1, '2017-09-13 05:35:22'),
(10, 3090, '1', -1.99654, 7, 0, '2017-09-13 05:35:22'),
(25, 1361, '3', 2.28943, 20, 1, '2017-09-13 05:35:24'),
(8, 2418, '2', 2.49797, 7, 1, '2017-09-13 05:35:25'),
(24, 392, '1', -0.03, 18, 0, '2017-09-13 05:35:26'),
(1, 2786, '1', -1.68, 22, 0, '2017-09-13 05:35:27'),
(14, 2790, '3', 1.38, 27, 1, '2017-09-13 05:35:27'),
(17, 734, '2', 0.48, 18, 1, '2017-09-13 05:35:27'),
(12, 743, '1', -0.592593, 20, 0, '2017-09-13 05:35:27'),
(20, 1156, '1', 1.95, 7, 1, '2017-09-13 05:35:28'),
(19, 2835, '2', -2.09443, 25, 0, '2017-09-13 05:35:28'),
(2, 3563, '1', 0.6075, 11, 1, '2017-09-13 05:35:28'),
(4, 3426, '0', 0, 14, -1, '2017-09-13 05:35:28'),
(15, 387, '0', -0.0075, 20, 0, '2017-09-13 05:35:29'),
(22, 377, '0', -0.0075, 20, 0, '2017-09-13 05:35:30'),
(21, 2620, '4', 2.45, 11, 1, '2017-09-13 05:35:31'),
(13, 612, '2', -2.32743, 19, 0, '2017-09-13 05:35:31'),
(10, 3292, '3', 1.62881, 10, 1, '2017-09-13 05:35:31'),
(8, 1152, '3', -1.5, 10, 0, '2017-09-13 05:35:35'),
(16, 2823, '3', 2.40251, 17, 1, '2017-09-13 05:35:35'),
(2, 3546, '4', -0.949219, 7, 0, '2017-09-13 05:35:36'),
(11, 36, '1', -0.12, 16, 0, '2017-09-13 05:35:37'),
(5, 2743, '2', 0, 30, 0, '2017-09-13 05:35:38'),
(13, 1313, '2', 2.66667, 6, 1, '2017-09-13 05:35:38'),
(3, 3569, '3', -0.0075, 19, 0, '2017-09-13 05:35:40'),
(22, 2416, '3', 2.35692, 10, 1, '2017-09-13 05:35:40'),
(10, 3123, '1', -1.86981, 8, 0, '2017-09-13 05:35:40'),
(2, 3514, '3', 1.56481, 5, 1, '2017-09-13 05:35:40'),
(28, 472, '3', -0.1875, 30, 0, '2017-09-13 05:35:41'),
(26, 2933, '1', 0, 24, 0, '2017-09-13 05:35:41'),
(8, 1139, '2', 1.2675, 7, 1, '2017-09-13 05:35:42'),
(6, 29, '0', -0.0075, 20, 0, '2017-09-13 05:35:42'),
(18, 2432, '2', -0.14281, 86, 0, '2017-09-13 05:35:42'),
(16, 2732, '4', 2.76188, 7, 1, '2017-09-13 05:35:42'),
(1, 2781, '0', 0, 17, -1, '2017-09-13 05:35:43'),
(11, 26, '4', 1.2675, 7, 1, '2017-09-13 05:35:43'),
(22, 1104, '3', 1.92, 4, 1, '2017-09-13 05:35:44'),
(27, 1299, '3', 0.465565, 40, 1, '2017-09-13 05:35:45'),
(24, 383, '0', -0.0075, 20, 0, '2017-09-13 05:35:46'),
(4, 3434, '2', -1.04752, 18, 0, '2017-09-13 05:35:46'),
(28, 486, '1', 1.94676, 7, 1, '2017-09-13 05:35:48'),
(19, 2735, '1', 2.28943, 20, 1, '2017-09-13 05:35:48'),
(7, 1341, '2', -0.65, 47, 0, '2017-09-13 05:35:48'),
(21, 2626, '3', 2.15, 17, 1, '2017-09-13 05:35:48'),
(16, 2816, '4', 2.72703, 8, 1, '2017-09-13 05:35:50'),
(22, 2418, '2', 2.56687, 6, 1, '2017-09-13 05:35:50'),
(9, 481, '4', -0.091875, 33, 0, '2017-09-13 05:35:51'),
(11, 31, '2', -1.08, 8, 0, '2017-09-13 05:35:52'),
(13, 1098, '4', -2.47645, 15, 0, '2017-09-13 05:35:53'),
(26, 1472, '4', -1.36688, 13, 0, '2017-09-13 05:35:53'),
(20, 2653, '1', -2.47645, 26, 0, '2017-09-13 05:35:54'),
(2, 3527, '4', 0.27, 14, 1, '2017-09-13 05:35:55'),
(6, 30, '2', 0.3675, 13, 1, '2017-09-13 05:35:55'),
(12, 750, '2', 0.409735, 29, 1, '2017-09-13 05:35:56'),
(8, 1150, '3', -0.9, 14, 0, '2017-09-13 05:35:56'),
(19, 2847, '1', -2.62111, 11, 0, '2017-09-13 05:35:59'),
(7, 1311, '4', 1.8252, 11, 1, '2017-09-13 05:35:59'),
(3, 3588, '4', -0.0833333, 20, 0, '2017-09-13 05:36:00'),
(6, 23, '1', 1.6875, 5, 1, '2017-09-13 05:36:00'),
(4, 3427, '1', -1.39463, 14, 0, '2017-09-13 05:36:01'),
(18, 389, '2', 0.03, 18, 1, '2017-09-13 05:36:01'),
(13, 1333, '2', 2.6, 8, 1, '2017-09-13 05:36:01'),
(1, 2777, '1', -1.98, 17, 0, '2017-09-13 05:36:01'),
(8, 364, '2', 1.6875, 5, 1, '2017-09-13 05:36:01'),
(17, 481, '1', 0.0675, 34, 1, '2017-09-13 05:36:02'),
(21, 2833, '4', -2.513, 14, 0, '2017-09-13 05:36:02'),
(16, 2819, '2', 2.54929, 13, 1, '2017-09-13 05:36:03'),
(24, 385, '4', -0.03, 18, 0, '2017-09-13 05:36:04');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(7, 1333, '2', 2.7, 6, 1, '2017-09-13 05:36:05'),
(17, 494, '3', 2.43, 3, 1, '2017-09-13 05:36:05'),
(14, 2809, '3', -1.78028, 38, 0, '2017-09-13 05:36:05'),
(28, 733, '3', 0.75, 20, 1, '2017-09-13 05:36:08'),
(11, 23, '1', 0.12, 16, 1, '2017-09-13 05:36:08'),
(5, 2751, '0', -0.00333333, 30, 0, '2017-09-13 05:36:08'),
(21, 2628, '4', -2.65, 7, 0, '2017-09-13 05:36:09'),
(24, 1117, '2', 1.47, 6, 1, '2017-09-13 05:36:10'),
(22, 1122, '0', -0.0075, 20, 0, '2017-09-13 05:36:11'),
(9, 509, '3', -0.592593, 20, 0, '2017-09-13 05:36:11'),
(6, 47, '1', 1.2, 12, 1, '2017-09-13 05:36:12'),
(2, 3538, '1', -0.48, 18, 0, '2017-09-13 05:36:13'),
(1, 2782, '3', -2.22, 13, 0, '2017-09-13 05:36:13'),
(21, 2617, '1', 2.75, 5, 1, '2017-09-13 05:36:14'),
(4, 3428, '3', -1.39463, 14, 0, '2017-09-13 05:36:15'),
(16, 2852, '2', 2.58532, 12, 1, '2017-09-13 05:36:15'),
(7, 1328, '2', -2.45, 11, 0, '2017-09-13 05:36:16'),
(3, 3538, '3', -0.653333, 16, 0, '2017-09-13 05:36:17'),
(19, 2845, '4', -2.36512, 18, 0, '2017-09-13 05:36:17'),
(25, 1095, '3', -0.782974, 52, 0, '2017-09-13 05:36:17'),
(26, 1474, '4', -0.613946, 23, 0, '2017-09-13 05:36:17'),
(29, 718, '1', 2.08333, 5, 1, '2017-09-13 05:36:17'),
(10, 3140, '0', -0.00207756, 38, 0, '2017-09-13 05:36:18'),
(15, 2413, '1', 0.625236, 50, 1, '2017-09-13 05:36:19'),
(20, 2451, '3', 2.40441, 27, 1, '2017-09-13 05:36:21'),
(2, 3533, '2', -0.574219, 9, 0, '2017-09-13 05:36:22'),
(5, 2780, '2', -1.5552, 14, 0, '2017-09-13 05:36:22'),
(17, 489, '1', 0.9075, 18, 1, '2017-09-13 05:36:23'),
(28, 465, '3', -0.75, 15, 0, '2017-09-13 05:36:23'),
(11, 45, '3', -0.1875, 15, 0, '2017-09-13 05:36:23'),
(3, 3563, '2', -1.47, 6, 0, '2017-09-13 05:36:23'),
(22, 1112, '4', 0.3675, 13, 1, '2017-09-13 05:36:23'),
(16, 2879, '0', 0, 9, -1, '2017-09-13 05:36:24'),
(1, 2763, '1', 1.20333, 11, 1, '2017-09-13 05:36:25'),
(6, 49, '4', -0.9, 14, 0, '2017-09-13 05:36:26'),
(17, 723, '1', 2.52083, 3, 1, '2017-09-13 05:36:26'),
(4, 3429, '2', -1.6875, 11, 0, '2017-09-13 05:36:26'),
(24, 1116, '4', 0.0675, 17, 1, '2017-09-13 05:36:27'),
(12, 755, '4', -0.421875, 30, 0, '2017-09-13 05:36:27'),
(2, 3560, '2', 1.6875, 5, 1, '2017-09-13 05:36:27'),
(20, 1158, '2', 2.36512, 6, 1, '2017-09-13 05:36:27'),
(29, 489, '4', -1.36688, 13, 0, '2017-09-13 05:36:30'),
(9, 723, '1', 0.592593, 20, 1, '2017-09-13 05:36:31'),
(17, 718, '1', 1.92, 6, 1, '2017-09-13 05:36:31'),
(13, 1366, '4', 1.88988, 30, 1, '2017-09-13 05:36:31'),
(7, 1337, '2', -2.29688, 15, 0, '2017-09-13 05:36:32'),
(8, 2456, '2', -2.28462, 31, 0, '2017-09-13 05:36:32'),
(25, 1366, '4', 2.47645, 15, 1, '2017-09-13 05:36:32'),
(11, 50, '3', -0.6075, 11, 0, '2017-09-13 05:36:34'),
(29, 723, '1', 2.37037, 4, 1, '2017-09-13 05:36:34'),
(6, 54, '2', 1.8, 8, 1, '2017-09-13 05:36:34'),
(26, 1473, '1', 1.2288, 18, 1, '2017-09-13 05:36:34'),
(2, 3529, '3', 0.75, 8, 1, '2017-09-13 05:36:35'),
(5, 2773, '4', -1.6428, 13, 0, '2017-09-13 05:36:36'),
(20, 2646, '1', 2.81719, 9, 1, '2017-09-13 05:36:36'),
(7, 1089, '4', -2.43, 6, 0, '2017-09-13 05:36:37'),
(15, 1114, '1', 0.03, 18, 1, '2017-09-13 05:36:37'),
(1, 2760, '1', -0.963333, 13, 0, '2017-09-13 05:36:37'),
(21, 2730, '4', 1.85, 23, 1, '2017-09-13 05:36:38'),
(25, 1350, '1', 2.69195, 9, 1, '2017-09-13 05:36:41'),
(10, 3153, '4', 0.467452, 23, 1, '2017-09-13 05:36:41'),
(4, 3421, '2', -1.3032, 15, 0, '2017-09-13 05:36:41'),
(16, 2859, '2', 2.50998, 18, 1, '2017-09-13 05:36:42'),
(11, 57, '4', -0.9075, 9, 0, '2017-09-13 05:36:43'),
(14, 2775, '1', -0.78, 37, 0, '2017-09-13 05:36:43'),
(6, 58, '1', 1.65, 9, 1, '2017-09-13 05:36:43'),
(22, 1136, '0', -0.0075, 20, 0, '2017-09-13 05:36:44'),
(7, 1310, '4', 2.34763, 6, 1, '2017-09-13 05:36:44'),
(8, 1105, '2', 0.6075, 11, 1, '2017-09-13 05:36:44'),
(2, 3569, '1', 0.9075, 9, 1, '2017-09-13 05:36:44'),
(13, 1356, '3', -2.54929, 13, 0, '2017-09-13 05:36:44'),
(24, 370, '4', -0.0075, 19, 0, '2017-09-13 05:36:46'),
(1, 2757, '3', 1.47, 9, 1, '2017-09-13 05:36:47'),
(3, 3581, '2', 0, 24, 0, '2017-09-13 05:36:47'),
(28, 721, '2', -0.48, 24, 0, '2017-09-13 05:36:47'),
(7, 996, '4', -2.5392, 4, 0, '2017-09-13 05:36:48'),
(18, 2418, '2', 0.48, 48, 1, '2017-09-13 05:36:49'),
(19, 2620, '4', 1.3, 34, 1, '2017-09-13 05:36:51'),
(13, 1350, '1', 2.76188, 7, 1, '2017-09-13 05:36:51'),
(20, 2643, '3', 2.77345, 14, 1, '2017-09-13 05:36:51'),
(29, 730, '2', 0.592593, 20, 1, '2017-09-13 05:36:54'),
(11, 53, '3', -0.48, 12, 0, '2017-09-13 05:36:55'),
(22, 2403, '2', 2.25333, 12, 1, '2017-09-13 05:36:56'),
(5, 2775, '1', -1.0092, 21, 0, '2017-09-13 05:36:56'),
(3, 3517, '3', -0.592593, 10, 0, '2017-09-13 05:36:57'),
(10, 3155, '4', -1.00554, 16, 0, '2017-09-13 05:36:58'),
(7, 595, '4', 1.9571, 10, 1, '2017-09-13 05:36:58'),
(27, 173, '4', 0.2187, 73, 1, '2017-09-13 05:36:58'),
(4, 3431, '3', -1.12965, 17, 0, '2017-09-13 05:36:58'),
(20, 1161, '2', 2.01386, 9, 1, '2017-09-13 05:37:00'),
(24, 371, '1', -0.27, 14, 0, '2017-09-13 05:37:00'),
(6, 55, '4', -0.45, 17, 0, '2017-09-13 05:37:00'),
(8, 378, '1', 0.12, 16, 1, '2017-09-13 05:37:00'),
(11, 54, '2', 1.6875, 5, 1, '2017-09-13 05:37:01'),
(9, 726, '2', -0.0415225, 30, 0, '2017-09-13 05:37:01'),
(21, 2838, '3', 1.8, 24, 1, '2017-09-13 05:37:02'),
(12, 756, '3', -0.220052, 35, 0, '2017-09-13 05:37:02'),
(17, 477, '3', -0.978261, 31, 0, '2017-09-13 05:37:03'),
(7, 598, '4', 2.34083, 7, 1, '2017-09-13 05:37:05'),
(26, 1502, '1', -0.277883, 32, 0, '2017-09-13 05:37:06'),
(29, 487, '4', 1.36688, 13, 1, '2017-09-13 05:37:07'),
(28, 729, '2', 0.592593, 20, 1, '2017-09-13 05:37:08'),
(19, 2628, '4', -2.2, 16, 0, '2017-09-13 05:37:08'),
(1, 2787, '3', -1.68, 22, 0, '2017-09-13 05:37:09'),
(18, 393, '0', -0.0075, 20, 0, '2017-09-13 05:37:09'),
(7, 1321, '3', 2.76562, 5, 1, '2017-09-13 05:37:09'),
(10, 3102, '1', 1.40443, 12, 1, '2017-09-13 05:37:10'),
(14, 2764, '1', 1.32, 28, 1, '2017-09-13 05:37:11'),
(11, 52, '4', -0.6075, 11, 0, '2017-09-13 05:37:11'),
(24, 402, '4', -0.3675, 13, 0, '2017-09-13 05:37:13'),
(13, 1316, '3', 2.21246, 22, 1, '2017-09-13 05:37:14'),
(16, 2862, '4', 2.08567, 31, 1, '2017-09-13 05:37:14'),
(8, 381, '1', 0.27, 14, 1, '2017-09-13 05:37:14'),
(21, 2731, '0', 0, 13, -1, '2017-09-13 05:37:14'),
(1, 2746, '2', 1.92, 6, 1, '2017-09-13 05:37:15'),
(3, 3572, '2', -0.03, 18, 0, '2017-09-13 05:37:15'),
(20, 2651, '2', -2.64122, 16, 0, '2017-09-13 05:37:16'),
(22, 373, '0', -0.0075, 20, 0, '2017-09-13 05:37:16'),
(8, 1110, '2', 1.92, 4, 1, '2017-09-13 05:37:18'),
(7, 1329, '3', 2.55, 9, 1, '2017-09-13 05:37:19'),
(24, 1109, '2', -1.2675, 7, 0, '2017-09-13 05:37:19'),
(6, 51, '3', -0.15, 19, 0, '2017-09-13 05:37:19'),
(14, 2803, '3', 2.73701, 9, 1, '2017-09-13 05:37:20'),
(30, 3039, '1', 0.998521, 11, 1, '2017-09-13 05:37:21'),
(22, 369, '2', 1.6875, 5, 1, '2017-09-13 05:37:21'),
(12, 479, '3', -1.03355, 19, 0, '2017-09-13 05:37:21'),
(9, 489, '2', -0.75, 20, 0, '2017-09-13 05:37:22'),
(5, 2769, '3', -0.75, 25, 0, '2017-09-13 05:37:23'),
(19, 2623, '3', -2.25, 15, 0, '2017-09-13 05:37:23'),
(26, 1492, '2', 1.12965, 17, 1, '2017-09-13 05:37:24'),
(21, 2729, '0', 0, 10, -1, '2017-09-13 05:37:24'),
(12, 753, '1', -2.58673, 3, 0, '2017-09-13 05:37:25'),
(4, 3420, '3', -0.502066, 26, 0, '2017-09-13 05:37:25'),
(18, 375, '1', 0.12, 16, 1, '2017-09-13 05:37:25'),
(7, 1325, '3', -2.67857, 6, 0, '2017-09-13 05:37:25'),
(11, 55, '2', -0.1875, 15, 0, '2017-09-13 05:37:26'),
(3, 3557, '2', 0.1875, 12, 1, '2017-09-13 05:37:27'),
(19, 2618, '3', 2.75, 5, 1, '2017-09-13 05:37:28'),
(13, 1360, '4', -2.43962, 16, 0, '2017-09-13 05:37:29'),
(20, 1160, '1', -1.34442, 14, 0, '2017-09-13 05:37:30'),
(27, 1289, '3', -0.12, 32, 0, '2017-09-13 05:37:31'),
(30, 1461, '3', 1.83743, 10, 1, '2017-09-13 05:37:31'),
(11, 59, '3', -1.6875, 5, 0, '2017-09-13 05:37:32'),
(6, 43, '2', -1.2, 12, 0, '2017-09-13 05:37:32'),
(10, 3289, '3', 0.531856, 22, 1, '2017-09-13 05:37:33'),
(20, 1159, '1', 2.69195, 3, 1, '2017-09-13 05:37:33'),
(24, 372, '3', -0.27, 14, 0, '2017-09-13 05:37:34'),
(12, 478, '2', -1.92, 10, 0, '2017-09-13 05:37:35'),
(3, 3514, '3', 0.925926, 8, 1, '2017-09-13 05:37:35'),
(9, 718, '1', 0.853333, 14, 1, '2017-09-13 05:37:36'),
(28, 732, '4', 0.113426, 29, 1, '2017-09-13 05:37:37'),
(5, 2764, '4', -1.47, 15, 0, '2017-09-13 05:37:37'),
(25, 1360, '2', 0.493242, 56, 1, '2017-09-13 05:37:38'),
(22, 2445, '1', -2.58462, 18, 0, '2017-09-13 05:37:39'),
(20, 1163, '1', 2.36512, 6, 1, '2017-09-13 05:37:39'),
(10, 3136, '1', -1.86981, 8, 0, '2017-09-13 05:37:40'),
(29, 472, '1', 0.091875, 33, 1, '2017-09-13 05:37:40'),
(3, 3560, '4', -1.47, 6, 0, '2017-09-13 05:37:41'),
(14, 2814, '4', -2.33283, 22, 0, '2017-09-13 05:37:43'),
(1, 2790, '4', -1.38, 27, 0, '2017-09-13 05:37:43'),
(19, 2634, '2', -2.25, 15, 0, '2017-09-13 05:37:43'),
(30, 1459, '1', -1.36688, 13, 0, '2017-09-13 05:37:43'),
(6, 53, '1', -1.2, 12, 0, '2017-09-13 05:37:43'),
(4, 3436, '1', -1.04752, 18, 0, '2017-09-13 05:37:43'),
(7, 1323, '3', 2.10938, 19, 1, '2017-09-13 05:37:44'),
(16, 2855, '1', -2.12132, 30, 0, '2017-09-13 05:37:44'),
(18, 1117, '2', 0.0075, 19, 1, '2017-09-13 05:37:45'),
(21, 2845, '3', -2.25111, 21, 0, '2017-09-13 05:37:46'),
(28, 490, '4', -1.6875, 9, 0, '2017-09-13 05:37:46'),
(24, 367, '3', 0.27, 14, 1, '2017-09-13 05:37:47'),
(1, 2769, '3', -2.43, 5, 0, '2017-09-13 05:37:48'),
(3, 3599, '2', 1.60207, 7, 1, '2017-09-13 05:37:49'),
(9, 731, '3', -1.22454, 13, 0, '2017-09-13 05:37:49'),
(20, 1168, '1', -1.88988, 10, 0, '2017-09-13 05:37:50'),
(15, 2411, '1', -0.321322, 74, 0, '2017-09-13 05:37:51'),
(8, 2455, '0', 0, 33, -1, '2017-09-13 05:37:52'),
(17, 755, '0', -0.0625, 48, 0, '2017-09-13 05:37:52'),
(11, 51, '0', -0.0075, 20, 0, '2017-09-13 05:37:52'),
(29, 728, '4', -1.19668, 14, 0, '2017-09-13 05:37:54'),
(16, 2871, '2', 2.76586, 9, 1, '2017-09-13 05:37:54'),
(26, 3076, '0', -0.00333333, 30, 0, '2017-09-13 05:37:54'),
(6, 45, '1', 1.35, 11, 1, '2017-09-13 05:37:55'),
(12, 482, '4', 0.75, 21, 1, '2017-09-13 05:37:56'),
(21, 2841, '3', 2.4, 12, 1, '2017-09-13 05:37:57'),
(1, 2771, '1', -1.92, 10, 0, '2017-09-13 05:37:58'),
(3, 3535, '1', -0.75, 10, 0, '2017-09-13 05:37:58'),
(19, 2633, '3', 2.25, 15, 1, '2017-09-13 05:37:58'),
(20, 2639, '0', 0, 9, -1, '2017-09-13 05:37:59'),
(18, 1116, '4', 0.1875, 15, 1, '2017-09-13 05:37:59'),
(30, 1451, '1', 0.925926, 16, 1, '2017-09-13 05:38:00'),
(16, 2868, '2', 2.73861, 10, 1, '2017-09-13 05:38:03'),
(20, 2648, '0', 0, 5, -1, '2017-09-13 05:38:04'),
(1, 2783, '1', -2.2188, 7, 0, '2017-09-13 05:38:04'),
(15, 365, '1', -0.27, 14, 0, '2017-09-13 05:38:05'),
(8, 1149, '1', 1.05, 13, 1, '2017-09-13 05:38:05'),
(14, 2799, '2', -2.33283, 22, 0, '2017-09-13 05:38:05'),
(30, 3044, '3', 2.08333, 4, 1, '2017-09-13 05:38:05'),
(13, 1111, '1', -1.88988, 36, 0, '2017-09-13 05:38:06'),
(24, 390, '1', -0.03, 18, 0, '2017-09-13 05:38:06'),
(26, 1490, '1', 1.48915, 13, 1, '2017-09-13 05:38:06'),
(11, 47, '4', -0.1875, 15, 0, '2017-09-13 05:38:07'),
(28, 719, '3', 0.453704, 22, 1, '2017-09-13 05:38:08'),
(7, 1326, '1', 1.7069, 25, 1, '2017-09-13 05:38:09'),
(1, 2773, '4', -2.43, 5, 0, '2017-09-13 05:38:10'),
(18, 1107, '4', 0.6075, 11, 1, '2017-09-13 05:38:11'),
(20, 2665, '4', 2.79651, 7, 1, '2017-09-13 05:38:11'),
(17, 752, '3', 1.76087, 19, 1, '2017-09-13 05:38:11'),
(3, 3531, '2', 0.3675, 13, 1, '2017-09-13 05:38:12'),
(12, 746, '2', -0.925926, 16, 0, '2017-09-13 05:38:12'),
(24, 364, '2', 1.08, 8, 1, '2017-09-13 05:38:14'),
(6, 41, '4', -0.15, 19, 0, '2017-09-13 05:38:14'),
(8, 2439, '1', 2.67, 11, 1, '2017-09-13 05:38:16'),
(14, 2777, '3', -2.28, 12, 0, '2017-09-13 05:38:17'),
(20, 1164, '3', 2.25111, 7, 1, '2017-09-13 05:38:17'),
(4, 3463, '0', -0.00259516, 34, 0, '2017-09-13 05:38:18'),
(1, 2770, '2', 2.1168, 8, 1, '2017-09-13 05:38:18'),
(10, 3142, '0', -0.00207756, 38, 0, '2017-09-13 05:38:19'),
(9, 719, '4', -0.0833333, 30, 0, '2017-09-13 05:38:19'),
(28, 731, '3', -1.33333, 12, 0, '2017-09-13 05:38:20'),
(15, 1115, '1', 0.1875, 15, 1, '2017-09-13 05:38:20'),
(21, 2728, '4', 2.17348, 23, 1, '2017-09-13 05:38:20'),
(11, 60, '1', 0.3675, 13, 1, '2017-09-13 05:38:20'),
(5, 2790, '4', -0.0588, 43, 0, '2017-09-13 05:38:21'),
(18, 364, '2', 0.75, 10, 1, '2017-09-13 05:38:21'),
(30, 1449, '1', -0.9075, 18, 0, '2017-09-13 05:38:22'),
(12, 483, '2', 1.73677, 11, 1, '2017-09-13 05:38:24'),
(28, 722, '3', 2.37037, 4, 1, '2017-09-13 05:38:24'),
(14, 2776, '1', 2.58, 7, 1, '2017-09-13 05:38:24'),
(16, 2888, '3', 2.41868, 21, 1, '2017-09-13 05:38:24'),
(29, 733, '4', -0.151875, 31, 0, '2017-09-13 05:38:25'),
(27, 1229, '0', -0.00102881, 54, 0, '2017-09-13 05:38:26'),
(20, 2659, '4', 2.83779, 8, 1, '2017-09-13 05:38:26'),
(7, 1339, '2', 2.2, 16, 1, '2017-09-13 05:38:26'),
(24, 1105, '2', 0.3675, 13, 1, '2017-09-13 05:38:27'),
(6, 52, '4', -0.9, 14, 0, '2017-09-13 05:38:28'),
(3, 3575, '4', 0.0675, 17, 1, '2017-09-13 05:38:29'),
(15, 2408, '4', -2.38327, 10, 0, '2017-09-13 05:38:30'),
(27, 1264, '2', -2.47934, 6, 0, '2017-09-13 05:38:32'),
(11, 48, '1', -0.3675, 13, 0, '2017-09-13 05:38:34'),
(20, 2647, '1', -2.90623, 8, 0, '2017-09-13 05:38:34'),
(13, 1354, '3', -1.97297, 28, 0, '2017-09-13 05:38:34'),
(4, 3466, '4', 0.84083, 16, 1, '2017-09-13 05:38:34'),
(22, 724, '4', -0.563333, 17, 0, '2017-09-13 05:38:34'),
(8, 1148, '4', -0.15, 19, 0, '2017-09-13 05:38:34'),
(3, 3546, '4', -1.17188, 6, 0, '2017-09-13 05:38:35'),
(19, 2630, '2', 1.15, 37, 1, '2017-09-13 05:38:35'),
(12, 502, '2', 1.63894, 12, 1, '2017-09-13 05:38:35'),
(9, 735, '4', 0.653333, 16, 1, '2017-09-13 05:38:36'),
(17, 476, '2', -1.125, 25, 0, '2017-09-13 05:38:36'),
(26, 3054, '0', -0.00333333, 30, 0, '2017-09-13 05:38:36'),
(7, 1324, '3', 2.5, 11, 1, '2017-09-13 05:38:36'),
(10, 3149, '2', -0.831025, 18, 0, '2017-09-13 05:38:36'),
(25, 1359, '0', -0.195743, 60, 0, '2017-09-13 05:38:39'),
(30, 1450, '4', 0.835648, 17, 1, '2017-09-13 05:38:39'),
(29, 732, '3', -1.12037, 14, 0, '2017-09-13 05:38:39'),
(16, 2892, '2', 2.6739, 15, 1, '2017-09-13 05:38:40'),
(21, 2733, '3', -2.28943, 20, 0, '2017-09-13 05:38:40'),
(18, 394, '2', 0.0075, 19, 1, '2017-09-13 05:38:41'),
(14, 2779, '1', 1.98, 17, 1, '2017-09-13 05:38:41'),
(3, 3593, '3', 1.50521, 7, 1, '2017-09-13 05:38:42'),
(24, 1122, '4', 0.1875, 15, 1, '2017-09-13 05:38:42'),
(4, 3468, '4', -1.75433, 8, 0, '2017-09-13 05:38:42'),
(5, 2781, '0', 0, 22, -1, '2017-09-13 05:38:43'),
(12, 740, '1', 1.81481, 8, 1, '2017-09-13 05:38:43'),
(28, 728, '1', 0.75, 19, 1, '2017-09-13 05:38:43'),
(22, 490, '2', 1.6875, 9, 1, '2017-09-13 05:38:44'),
(20, 1162, '3', 1.88988, 10, 1, '2017-09-13 05:38:44'),
(6, 42, '2', 0.6, 16, 1, '2017-09-13 05:38:45'),
(16, 2891, '1', 2.87619, 6, 1, '2017-09-13 05:38:46'),
(19, 2619, '3', 2.45, 11, 1, '2017-09-13 05:38:46'),
(10, 3291, '4', -1.74723, 9, 0, '2017-09-13 05:38:46'),
(24, 1140, '1', 1.08, 8, 1, '2017-09-13 05:38:50'),
(17, 756, '2', 2, 16, 1, '2017-09-13 05:38:52'),
(27, 1188, '3', -0.1875, 21, 0, '2017-09-13 05:38:53'),
(18, 1114, '1', 0.48, 12, 1, '2017-09-13 05:38:53'),
(29, 498, '2', 1.2675, 14, 1, '2017-09-13 05:38:53'),
(12, 738, '3', -1.49481, 10, 0, '2017-09-13 05:38:53'),
(4, 3446, '4', -1.25606, 12, 0, '2017-09-13 05:38:54'),
(11, 58, '0', -0.0075, 20, 0, '2017-09-13 05:38:54'),
(19, 2732, '4', 2.72703, 8, 1, '2017-09-13 05:38:54'),
(27, 1286, '3', -2.80333, 2, 0, '2017-09-13 05:38:55'),
(16, 2903, '2', 2.81118, 9, 1, '2017-09-13 05:38:56'),
(1, 2779, '1', 0.1728, 38, 1, '2017-09-13 05:38:56'),
(7, 1095, '3', -2.32743, 19, 0, '2017-09-13 05:38:56'),
(22, 719, '3', 1.12037, 14, 1, '2017-09-13 05:38:57'),
(29, 727, '2', 2.22454, 5, 1, '2017-09-13 05:38:57'),
(30, 1464, '2', 1.17188, 18, 1, '2017-09-13 05:38:58'),
(28, 735, '1', -0.653333, 16, 0, '2017-09-13 05:39:00'),
(12, 747, '2', 1.94676, 7, 1, '2017-09-13 05:39:01'),
(2, 3408, '1', -1.92, 6, 0, '2017-09-13 05:39:01'),
(29, 494, '3', 2.25333, 4, 1, '2017-09-13 05:39:02'),
(6, 56, '3', 0.3, 18, 1, '2017-09-13 05:39:03'),
(16, 2893, '4', 2.8331, 8, 1, '2017-09-13 05:39:03'),
(27, 1176, '3', -1.53061, 8, 0, '2017-09-13 05:39:03'),
(24, 1136, '2', 0.12, 16, 1, '2017-09-13 05:39:06'),
(26, 2947, '0', -0.00333333, 30, 0, '2017-09-13 05:39:06'),
(11, 41, '4', -0.3675, 13, 0, '2017-09-13 05:39:06'),
(18, 1136, '4', -0.27, 14, 0, '2017-09-13 05:39:07'),
(1, 2797, '1', -2.05959, 12, 0, '2017-09-13 05:39:08'),
(13, 1362, '1', -1.8503, 33, 0, '2017-09-13 05:39:08'),
(10, 3093, '2', -0.531856, 22, 0, '2017-09-13 05:39:08'),
(22, 465, '2', 1.20333, 11, 1, '2017-09-13 05:39:09'),
(27, 1187, '3', -1.83105, 7, 0, '2017-09-13 05:39:10'),
(14, 2794, '4', -2.06584, 30, 0, '2017-09-13 05:39:11'),
(12, 741, '4', -1.51454, 11, 0, '2017-09-13 05:39:12'),
(20, 2, '3', 1.6875, 5, 1, '2017-09-13 05:39:12'),
(19, 2729, '1', -2.40251, 17, 0, '2017-09-13 05:39:12'),
(3, 3404, '4', 0.574219, 18, 1, '2017-09-13 05:39:13'),
(16, 2925, '2', -2.80416, 11, 0, '2017-09-13 05:39:14'),
(11, 44, '2', -1.08, 8, 0, '2017-09-13 05:39:14'),
(24, 369, '2', 0.9075, 9, 1, '2017-09-13 05:39:14'),
(28, 489, '1', 1.17188, 15, 1, '2017-09-13 05:39:15'),
(7, 1307, '2', 2.16176, 19, 1, '2017-09-13 05:39:15'),
(21, 2820, '4', -1.67358, 35, 0, '2017-09-13 05:39:16'),
(9, 721, '0', -0.001875, 40, 0, '2017-09-13 05:39:16'),
(9, 729, '3', -0.037037, 40, 0, '2017-09-13 05:39:16'),
(18, 1122, '4', 0.75, 10, 1, '2017-09-13 05:39:17'),
(2, 3406, '2', 0.653333, 16, 1, '2017-09-13 05:39:17'),
(1, 2812, '3', 2.27816, 9, 1, '2017-09-13 05:39:17'),
(6, 57, '1', 0.6, 16, 1, '2017-09-13 05:39:19'),
(10, 3105, '2', -1.51454, 11, 0, '2017-09-13 05:39:19'),
(27, 1295, '3', -1.02083, 10, 0, '2017-09-13 05:39:20'),
(24, 365, '1', -1.2675, 7, 0, '2017-09-13 05:39:22'),
(3, 3398, '3', -1.41797, 10, 0, '2017-09-13 05:39:22'),
(7, 610, '3', -2.70701, 8, 0, '2017-09-13 05:39:23'),
(11, 46, '2', -0.9075, 9, 0, '2017-09-13 05:39:23'),
(20, 13, '0', 0, 12, -1, '2017-09-13 05:39:24'),
(17, 483, '1', -0.913043, 32, 0, '2017-09-13 05:39:25'),
(5, 2765, '4', 0.0768, 42, 1, '2017-09-13 05:39:25'),
(13, 1324, '3', 2.18182, 18, 1, '2017-09-13 05:39:26'),
(14, 2780, '1', 2.1, 15, 1, '2017-09-13 05:39:26'),
(22, 733, '3', 0.9075, 18, 1, '2017-09-13 05:39:27'),
(6, 59, '3', -1.65, 9, 0, '2017-09-13 05:39:27'),
(9, 486, '2', -1.44676, 11, 0, '2017-09-13 05:39:27'),
(20, 3, '3', 1.6875, 5, 1, '2017-09-13 05:39:28'),
(8, 2435, '2', -1.77692, 53, 0, '2017-09-13 05:39:29'),
(7, 1126, '3', -2.7, 6, 0, '2017-09-13 05:39:29'),
(19, 2819, '2', 2.36512, 18, 1, '2017-09-13 05:39:30'),
(21, 2852, '2', 2.47645, 15, 1, '2017-09-13 05:39:31'),
(11, 49, '2', 1.2675, 7, 1, '2017-09-13 05:39:31'),
(16, 2894, '1', -2.60112, 18, 0, '2017-09-13 05:39:32'),
(26, 1500, '2', -0.75, 26, 0, '2017-09-13 05:39:33'),
(20, 1, '1', -1.92, 4, 0, '2017-09-13 05:39:33'),
(18, 381, '1', 0.03, 18, 1, '2017-09-13 05:39:34'),
(30, 1453, '1', 0.1728, 38, 1, '2017-09-13 05:39:36'),
(24, 2414, '3', 2.06444, 15, 1, '2017-09-13 05:39:37'),
(6, 46, '2', -1.5, 10, 0, '2017-09-13 05:39:37'),
(29, 731, '3', 0, 36, 0, '2017-09-13 05:39:38'),
(29, 737, '0', -0.046875, 36, 0, '2017-09-13 05:39:38'),
(22, 486, '1', 1.44676, 11, 1, '2017-09-13 05:39:38'),
(20, 6, '2', 1.47, 6, 1, '2017-09-13 05:39:38'),
(19, 2833, '3', 2.69195, 9, 1, '2017-09-13 05:39:39'),
(27, 1275, '1', -1.26029, 19, 0, '2017-09-13 05:39:39'),
(25, 1351, '0', -0.195743, 60, 0, '2017-09-13 05:39:39'),
(17, 745, '2', 1.875, 15, 1, '2017-09-13 05:39:40'),
(2, 3409, '2', 0.163333, 23, 1, '2017-09-13 05:39:40'),
(10, 3295, '2', 0.600416, 21, 1, '2017-09-13 05:39:40'),
(1, 2800, '2', 1.29551, 24, 1, '2017-09-13 05:39:41'),
(14, 2807, '3', 2.55445, 15, 1, '2017-09-13 05:39:42'),
(17, 502, '1', -2.80435, 3, 0, '2017-09-13 05:39:43'),
(11, 56, '3', 0.3675, 13, 1, '2017-09-13 05:39:44'),
(24, 368, '3', 1.08, 8, 1, '2017-09-13 05:39:44'),
(20, 8, '1', -1.08, 8, 0, '2017-09-13 05:39:47'),
(19, 2838, '3', 2.72703, 8, 1, '2017-09-13 05:39:47'),
(13, 617, '4', -2.25111, 21, 0, '2017-09-13 05:39:47'),
(3, 3401, '3', 0.1875, 24, 1, '2017-09-13 05:39:47'),
(16, 2895, '2', 2.6739, 15, 1, '2017-09-13 05:39:48'),
(21, 2847, '3', -2.40251, 17, 0, '2017-09-13 05:39:48'),
(8, 2449, '3', 2.43, 19, 1, '2017-09-13 05:39:48'),
(28, 737, '3', -0.091875, 33, 0, '2017-09-13 05:39:48'),
(15, 2429, '2', -0.588367, 78, 0, '2017-09-13 05:39:48'),
(29, 726, '1', 1.37284, 11, 1, '2017-09-13 05:39:48'),
(12, 757, '1', -0.114839, 37, 0, '2017-09-13 05:39:49'),
(30, 1454, '2', 1.02083, 15, 1, '2017-09-13 05:39:51'),
(25, 1347, '3', 2.53722, 12, 1, '2017-09-13 05:39:52'),
(7, 1338, '1', -1.76786, 23, 0, '2017-09-13 05:39:52'),
(9, 465, '3', -0.0833333, 25, 0, '2017-09-13 05:39:52'),
(17, 746, '4', 2.16667, 10, 1, '2017-09-13 05:39:53'),
(2, 3415, '2', -0.963333, 13, 0, '2017-09-13 05:39:54'),
(20, 17, '1', 1.2675, 7, 1, '2017-09-13 05:39:54'),
(4, 2615, '1', 0.046875, 35, 1, '2017-09-13 05:39:55'),
(6, 60, '1', 0.03, 18, 1, '2017-09-13 05:39:56'),
(5, 2768, '4', 0.48, 30, 1, '2017-09-13 05:39:56'),
(21, 2825, '3', 2.69195, 9, 1, '2017-09-13 05:39:57'),
(12, 499, '4', -1.74723, 9, 0, '2017-09-13 05:39:59'),
(29, 736, '1', 1.49481, 10, 1, '2017-09-13 05:39:59'),
(26, 3062, '3', -0.105469, 26, 0, '2017-09-13 05:39:59'),
(22, 727, '0', 0, 21, -1, '2017-09-13 05:39:59'),
(4, 2614, '4', 2.29688, 5, 1, '2017-09-13 05:40:00'),
(9, 728, '2', -1.74723, 9, 0, '2017-09-13 05:40:01'),
(8, 1146, '1', 0.9, 14, 1, '2017-09-13 05:40:02'),
(16, 2931, '4', 2.74572, 14, 1, '2017-09-13 05:40:02'),
(28, 726, '1', 1.03806, 14, 1, '2017-09-13 05:40:03'),
(25, 1346, '4', 2.64557, 11, 1, '2017-09-13 05:40:03'),
(27, 1204, '4', 0.75, 24, 1, '2017-09-13 05:40:04'),
(1, 2817, '3', 1.41061, 22, 1, '2017-09-13 05:40:04'),
(11, 43, '4', 0, 20, 0, '2017-09-13 05:40:04'),
(24, 375, '0', -0.0075, 20, 0, '2017-09-13 05:40:04'),
(6, 50, '3', -0.75, 10, 0, '2017-09-13 05:40:06'),
(3, 3410, '3', -0.333333, 20, 0, '2017-09-13 05:40:07'),
(7, 1096, '2', -2.25, 15, 0, '2017-09-13 05:40:08'),
(24, 363, '3', 2.1675, 3, 1, '2017-09-13 05:40:08'),
(26, 1494, '4', 1.62881, 10, 1, '2017-09-13 05:40:09'),
(17, 747, '2', 1.66667, 16, 1, '2017-09-13 05:40:09'),
(19, 2733, '2', 2.17348, 23, 1, '2017-09-13 05:40:10'),
(21, 2819, '2', 2.513, 14, 1, '2017-09-13 05:40:10'),
(16, 2911, '1', 2.82311, 10, 1, '2017-09-13 05:40:12'),
(7, 1340, '2', 2.70968, 6, 1, '2017-09-13 05:40:14'),
(12, 476, '2', -1.08, 16, 0, '2017-09-13 05:40:14'),
(20, 18, '0', 0, 20, -1, '2017-09-13 05:40:14'),
(22, 736, '2', -0.84083, 16, 0, '2017-09-13 05:40:15'),
(2, 3412, '4', 0.163333, 23, 1, '2017-09-13 05:40:17'),
(11, 42, '2', 0.3675, 13, 1, '2017-09-13 05:40:17'),
(18, 2414, '3', 0.819731, 42, 1, '2017-09-13 05:40:17'),
(1, 2809, '2', 1.92, 14, 1, '2017-09-13 05:40:18'),
(15, 2414, '3', 1.3032, 30, 1, '2017-09-13 05:40:18'),
(6, 48, '1', -0.48, 12, 0, '2017-09-13 05:40:18'),
(10, 3288, '0', -0.00207756, 38, 0, '2017-09-13 05:40:19'),
(28, 464, '1', -0.359467, 17, 0, '2017-09-13 05:40:19'),
(7, 1335, '2', 2.73214, 5, 1, '2017-09-13 05:40:19'),
(16, 2924, '2', 2.8418, 9, 1, '2017-09-13 05:40:21'),
(13, 1113, '4', -1.45455, 34, 0, '2017-09-13 05:40:21'),
(20, 7, '1', 1.2675, 7, 1, '2017-09-13 05:40:22'),
(4, 2612, '1', 0.6075, 22, 1, '2017-09-13 05:40:22'),
(26, 1495, '4', -1.33333, 14, 0, '2017-09-13 05:40:23'),
(7, 1343, '2', -2.7, 5, 0, '2017-09-13 05:40:23'),
(6, 44, '2', -1.47, 6, 0, '2017-09-13 05:40:25'),
(11, 72, '2', -0.9075, 9, 0, '2017-09-13 05:40:26'),
(12, 744, '1', -1.47, 12, 0, '2017-09-13 05:40:27'),
(24, 399, '3', -0.0075, 19, 0, '2017-09-13 05:40:27'),
(17, 757, '2', 1.82609, 18, 1, '2017-09-13 05:40:28'),
(28, 466, '2', -1.47, 9, 0, '2017-09-13 05:40:28'),
(29, 757, '3', -0.978261, 31, 0, '2017-09-13 05:40:29'),
(18, 1139, '2', 0.48, 12, 1, '2017-09-13 05:40:29'),
(13, 1334, '4', 2.6, 8, 1, '2017-09-13 05:40:30'),
(7, 1312, '2', 2.72727, 6, 1, '2017-09-13 05:40:30'),
(14, 2806, '3', 1.34442, 49, 1, '2017-09-13 05:40:32'),
(21, 2835, '1', -2.25111, 21, 0, '2017-09-13 05:40:32'),
(30, 1466, '2', 0.0972, 41, 1, '2017-09-13 05:40:33'),
(1, 2793, '4', -1.85204, 15, 0, '2017-09-13 05:40:33'),
(4, 2604, '1', -1.57687, 11, 0, '2017-09-13 05:40:33'),
(9, 727, '3', -0.0208333, 33, 0, '2017-09-13 05:40:35'),
(20, 16, '2', -0.3675, 13, 0, '2017-09-13 05:40:35'),
(24, 387, '3', -1.08, 8, 0, '2017-09-13 05:40:35'),
(5, 2766, '2', -0.1452, 39, 0, '2017-09-13 05:40:35'),
(16, 2926, '2', -2.74572, 14, 0, '2017-09-13 05:40:35'),
(25, 1111, '0', 0, 32, -1, '2017-09-13 05:40:36'),
(8, 2444, '3', 1.98, 34, 1, '2017-09-13 05:40:36'),
(15, 1136, '0', -0.0075, 20, 0, '2017-09-13 05:40:38'),
(3, 3400, '3', -0.00292969, 31, 0, '2017-09-13 05:40:38'),
(21, 2732, '4', 2.76188, 7, 1, '2017-09-13 05:40:39'),
(25, 610, '4', 2.81866, 5, 1, '2017-09-13 05:40:41'),
(4, 2605, '2', 1.92, 8, 1, '2017-09-13 05:40:41'),
(11, 63, '4', -0.1875, 15, 0, '2017-09-13 05:40:42'),
(10, 706, '4', 1.76333, 7, 1, '2017-09-13 05:40:42'),
(17, 479, '4', 2.02174, 15, 1, '2017-09-13 05:40:42'),
(20, 19, '2', 1.08, 8, 1, '2017-09-13 05:40:43'),
(18, 378, '4', -0.27, 14, 0, '2017-09-13 05:40:44'),
(6, 80, '0', -0.0075, 20, 0, '2017-09-13 05:40:45'),
(26, 1493, '1', -0.541875, 23, 0, '2017-09-13 05:40:45'),
(9, 736, '4', -1.49481, 10, 0, '2017-09-13 05:40:45'),
(2, 3410, '4', -0.00333333, 29, 0, '2017-09-13 05:40:46'),
(12, 739, '2', -0.592593, 20, 0, '2017-09-13 05:40:46'),
(4, 2613, '4', 2.1675, 6, 1, '2017-09-13 05:40:47'),
(20, 5, '3', 1.6875, 5, 1, '2017-09-13 05:40:48'),
(11, 68, '3', 1.47, 6, 1, '2017-09-13 05:40:48'),
(16, 2934, '2', 2.76548, 13, 1, '2017-09-13 05:40:48'),
(28, 498, '2', 0.676875, 21, 1, '2017-09-13 05:40:50'),
(17, 738, '4', -2.38235, 7, 0, '2017-09-13 05:40:50'),
(1, 2814, '1', 1.7198, 17, 1, '2017-09-13 05:40:50'),
(7, 1332, '3', 1.9, 22, 1, '2017-09-13 05:40:52'),
(10, 1985, '4', 1.41797, 10, 1, '2017-09-13 05:40:53'),
(30, 1462, '1', 0.676875, 21, 1, '2017-09-13 05:40:54'),
(22, 728, '0', -0.00207756, 38, 0, '2017-09-13 05:40:54'),
(6, 78, '1', 0.75, 10, 1, '2017-09-13 05:40:54'),
(14, 2818, '4', -2.30032, 23, 0, '2017-09-13 05:40:54'),
(20, 14, '4', -1.2675, 7, 0, '2017-09-13 05:40:55'),
(13, 1328, '4', -1.7, 26, 0, '2017-09-13 05:40:55'),
(19, 2823, '3', 1.19055, 45, 1, '2017-09-13 05:40:56'),
(18, 365, '1', -0.48, 12, 0, '2017-09-13 05:40:56'),
(8, 1155, '0', -0.15, 20, 0, '2017-09-13 05:40:57'),
(17, 499, '1', 2.36842, 8, 1, '2017-09-13 05:40:57'),
(7, 1111, '3', -2.85945, 5, 0, '2017-09-13 05:40:57'),
(2, 3398, '4', -1.29199, 11, 0, '2017-09-13 05:40:57'),
(26, 1499, '4', -1.63894, 12, 0, '2017-09-13 05:40:58'),
(4, 2603, '2', -1.57687, 11, 0, '2017-09-13 05:40:58'),
(21, 2889, '3', -2.28943, 20, 0, '2017-09-13 05:40:58'),
(3, 3414, '4', -0.333333, 20, 0, '2017-09-13 05:40:58'),
(28, 481, '4', -1.6875, 10, 0, '2017-09-13 05:41:00'),
(20, 12, '4', 1.47, 6, 1, '2017-09-13 05:41:01'),
(29, 740, '1', 0.333333, 32, 1, '2017-09-13 05:41:01'),
(11, 70, '4', -0.03, 18, 0, '2017-09-13 05:41:05'),
(24, 2410, '1', -1.1943, 31, 0, '2017-09-13 05:41:06'),
(28, 736, '2', -1.89187, 7, 0, '2017-09-13 05:41:06'),
(27, 171, '1', 0.135469, 63, 1, '2017-09-13 05:41:07'),
(10, 680, '3', 0.646684, 15, 1, '2017-09-13 05:41:08'),
(20, 10, '1', 1.08, 8, 1, '2017-09-13 05:41:09'),
(13, 995, '3', -2.35, 13, 0, '2017-09-13 05:41:09'),
(4, 2602, '1', -1.57687, 11, 0, '2017-09-13 05:41:10'),
(6, 77, '3', -0.1875, 15, 0, '2017-09-13 05:41:10'),
(17, 480, '4', -2.1, 12, 0, '2017-09-13 05:41:10'),
(30, 1458, '0', 0, 17, -1, '2017-09-13 05:41:11'),
(30, 3004, '0', 0, 1, -1, '2017-09-13 05:41:11'),
(20, 9, '2', 2.1675, 3, 1, '2017-09-13 05:41:11'),
(9, 485, '1', 0.567108, 26, 1, '2017-09-13 05:41:12'),
(18, 369, '2', 0.0675, 17, 1, '2017-09-13 05:41:13'),
(24, 2403, '2', 2.49037, 8, 1, '2017-09-13 05:41:14'),
(22, 734, '2', 0.333333, 20, 1, '2017-09-13 05:41:14'),
(13, 1331, '2', 2.625, 5, 1, '2017-09-13 05:41:14'),
(11, 78, '1', 0.9075, 9, 1, '2017-09-13 05:41:15'),
(5, 2778, '1', -0.12, 40, 0, '2017-09-13 05:41:15'),
(3, 3411, '2', -0.563333, 17, 0, '2017-09-13 05:41:15'),
(4, 2611, '3', 2.1675, 6, 1, '2017-09-13 05:41:16'),
(10, 716, '3', 1.43787, 8, 1, '2017-09-13 05:41:16'),
(15, 2427, '2', -1.36688, 39, 0, '2017-09-13 05:41:17'),
(28, 485, '1', 1.83743, 10, 1, '2017-09-13 05:41:17'),
(1, 2815, '1', 1.13204, 27, 1, '2017-09-13 05:41:17'),
(16, 2923, '4', -2.40727, 29, 0, '2017-09-13 05:41:18'),
(6, 71, '0', 0, 8, -1, '2017-09-13 05:41:18'),
(17, 743, '4', 2.25, 9, 1, '2017-09-13 05:41:19'),
(24, 376, '1', -1.6875, 5, 0, '2017-09-13 05:41:19'),
(25, 1093, '1', -1.52753, 40, 0, '2017-09-13 05:41:20'),
(4, 2608, '3', 2.29688, 5, 1, '2017-09-13 05:41:21'),
(18, 1137, '2', 1.08, 8, 1, '2017-09-13 05:41:21'),
(9, 466, '4', -1.20333, 11, 0, '2017-09-13 05:41:22'),
(27, 1283, '1', -0.520833, 14, 0, '2017-09-13 05:41:22'),
(26, 1498, '2', -0.688802, 25, 0, '2017-09-13 05:41:22'),
(5, 2784, '2', 2.2188, 7, 1, '2017-09-13 05:41:22'),
(11, 64, '4', 1.08, 8, 1, '2017-09-13 05:41:23'),
(20, 40, '1', -1.35, 11, 0, '2017-09-13 05:41:23'),
(7, 1132, '2', -1.7, 26, 0, '2017-09-13 05:41:24'),
(13, 1335, '2', 2.46429, 10, 1, '2017-09-13 05:41:24'),
(2, 3416, '4', 0.0133333, 28, 1, '2017-09-13 05:41:25'),
(28, 734, '2', 1.61333, 8, 1, '2017-09-13 05:41:25'),
(15, 1140, '3', -0.75, 10, 0, '2017-09-13 05:41:27'),
(6, 65, '3', 0.75, 10, 1, '2017-09-13 05:41:28'),
(20, 11, '1', 1.2675, 7, 1, '2017-09-13 05:41:30'),
(29, 743, '4', 0.666667, 28, 1, '2017-09-13 05:41:30'),
(17, 754, '4', 2.14286, 12, 1, '2017-09-13 05:41:31'),
(30, 2929, '4', 0.130208, 19, 1, '2017-09-13 05:41:31'),
(4, 2606, '1', 1.57687, 11, 1, '2017-09-13 05:41:32'),
(28, 494, '3', 1.76333, 7, 1, '2017-09-13 05:41:32'),
(15, 375, '1', 1.6875, 5, 1, '2017-09-13 05:41:32'),
(5, 2772, '4', -1.92, 10, 0, '2017-09-13 05:41:32'),
(16, 2916, '3', -2.70534, 16, 0, '2017-09-13 05:41:34'),
(12, 749, '0', -0.00130208, 48, 0, '2017-09-13 05:41:35'),
(14, 2797, '1', -1.6672, 41, 0, '2017-09-13 05:41:36'),
(11, 80, '4', 0.3675, 13, 1, '2017-09-13 05:41:37'),
(22, 732, '3', -0.453704, 22, 0, '2017-09-13 05:41:37'),
(4, 2601, '2', 2.29688, 5, 1, '2017-09-13 05:41:37'),
(2, 3402, '1', 1.17188, 12, 1, '2017-09-13 05:41:37'),
(20, 36, '4', 1.95, 7, 1, '2017-09-13 05:41:37'),
(18, 377, '3', -0.0675, 17, 0, '2017-09-13 05:41:38'),
(29, 756, '2', 2.4375, 9, 1, '2017-09-13 05:41:39'),
(25, 1377, '4', 2.47126, 18, 1, '2017-09-13 05:41:39'),
(24, 377, '0', -0.0075, 20, 0, '2017-09-13 05:41:39'),
(7, 1327, '2', -2.04, 16, 0, '2017-09-13 05:41:40'),
(9, 472, '4', -0.9075, 18, 0, '2017-09-13 05:41:40'),
(28, 727, '2', 1.6875, 9, 1, '2017-09-13 05:41:41'),
(19, 2820, '1', -1.19055, 45, 0, '2017-09-13 05:41:41'),
(13, 1351, '4', 2.36512, 18, 1, '2017-09-13 05:41:42'),
(26, 1506, '2', -1.08, 20, 0, '2017-09-13 05:41:42'),
(15, 397, '2', -0.6075, 11, 0, '2017-09-13 05:41:43'),
(4, 2622, '1', -2.65, 7, 0, '2017-09-13 05:41:44'),
(3, 3405, '1', 0.0133333, 28, 1, '2017-09-13 05:41:44'),
(20, 22, '1', 1.65, 9, 1, '2017-09-13 05:41:46'),
(2, 3403, '2', 1.5498, 9, 1, '2017-09-13 05:41:46'),
(10, 2011, '0', -0.00333333, 30, 0, '2017-09-13 05:41:47'),
(7, 1331, '2', 2.475, 7, 1, '2017-09-13 05:41:47'),
(21, 2874, '3', -0.968164, 49, 0, '2017-09-13 05:41:47'),
(13, 1367, '3', 2.83093, 6, 1, '2017-09-13 05:41:48'),
(30, 1456, '1', 0.991875, 17, 1, '2017-09-13 05:41:48'),
(6, 74, '4', 0, 20, 0, '2017-09-13 05:41:48'),
(6, 72, '0', -0.0075, 20, 0, '2017-09-13 05:41:48'),
(11, 69, '1', 0.3675, 13, 1, '2017-09-13 05:41:49'),
(24, 2429, '3', -2.54709, 11, 0, '2017-09-13 05:41:49'),
(4, 2610, '3', 2.1675, 6, 1, '2017-09-13 05:41:50'),
(7, 1355, '2', -2.85, 3, 0, '2017-09-13 05:41:50'),
(12, 748, '2', 1.17188, 15, 1, '2017-09-13 05:41:50'),
(20, 26, '4', 2.25, 5, 1, '2017-09-13 05:41:51'),
(18, 400, '1', -0.27, 14, 0, '2017-09-13 05:41:52'),
(16, 2910, '4', 2.6424, 19, 1, '2017-09-13 05:41:53'),
(1, 2801, '1', 0.666735, 37, 1, '2017-09-13 05:41:54'),
(8, 2453, '4', 1.74265, 57, 1, '2017-09-13 05:41:54'),
(2, 3404, '4', 1.6875, 8, 1, '2017-09-13 05:41:54'),
(4, 2623, '2', 2.7, 6, 1, '2017-09-13 05:41:56'),
(19, 2816, '4', 2.47645, 15, 1, '2017-09-13 05:41:56'),
(6, 67, '3', 1.08, 8, 1, '2017-09-13 05:41:57'),
(20, 35, '2', 2.1, 6, 1, '2017-09-13 05:41:57'),
(10, 659, '3', 0.6075, 11, 1, '2017-09-13 05:41:58'),
(24, 366, '4', 0.9075, 9, 1, '2017-09-13 05:41:59'),
(15, 2422, '3', -2.25604, 17, 0, '2017-09-13 05:42:00'),
(26, 1503, '1', -1.11153, 18, 0, '2017-09-13 05:42:00'),
(4, 2620, '4', 2.8, 4, 1, '2017-09-13 05:42:00'),
(7, 618, '2', -2.36538, 11, 0, '2017-09-13 05:42:01'),
(3, 3413, '4', 0.48, 18, 1, '2017-09-13 05:42:02'),
(11, 61, '1', 0.3675, 13, 1, '2017-09-13 05:42:03'),
(20, 24, '3', 2.1, 6, 1, '2017-09-13 05:42:03'),
(22, 735, '1', -0.03, 27, 0, '2017-09-13 05:42:03'),
(10, 663, '1', 1.85204, 6, 1, '2017-09-13 05:42:04'),
(16, 2914, '2', -2.78495, 12, 0, '2017-09-13 05:42:05'),
(15, 1110, '2', 1.6875, 5, 1, '2017-09-13 05:42:05'),
(29, 483, '2', 1.23913, 27, 1, '2017-09-13 05:42:06'),
(5, 2767, '1', -0.3468, 33, 0, '2017-09-13 05:42:06'),
(4, 2618, '3', 2.6, 8, 1, '2017-09-13 05:42:08'),
(19, 2734, '3', 2.58532, 12, 1, '2017-09-13 05:42:08'),
(30, 1465, '1', 0.244898, 20, 1, '2017-09-13 05:42:09'),
(6, 75, '2', -0.27, 14, 0, '2017-09-13 05:42:10'),
(18, 383, '1', -0.0075, 19, 0, '2017-09-13 05:42:11'),
(24, 2420, '3', 2.24251, 13, 1, '2017-09-13 05:42:12'),
(26, 1497, '1', -1.53061, 12, 0, '2017-09-13 05:42:12'),
(8, 1166, '3', -0.64633, 18, 0, '2017-09-13 05:42:13'),
(7, 1350, '2', -2.4, 12, 0, '2017-09-13 05:42:13'),
(12, 752, '3', 0.75, 23, 1, '2017-09-13 05:42:14'),
(20, 43, '1', 1.76169, 11, 1, '2017-09-13 05:42:14'),
(28, 740, '1', 0.25, 33, 1, '2017-09-13 05:42:14'),
(2, 3411, '1', 0.333333, 20, 1, '2017-09-13 05:42:14'),
(16, 2928, '1', -2.8418, 9, 0, '2017-09-13 05:42:14'),
(10, 676, '2', 1.2398, 10, 1, '2017-09-13 05:42:15'),
(9, 732, '2', -0.00231481, 35, 0, '2017-09-13 05:42:15'),
(18, 2420, '3', 2.75521, 4, 1, '2017-09-13 05:42:16'),
(11, 65, '3', 0.27, 14, 1, '2017-09-13 05:42:17'),
(4, 2625, '4', -2.5, 10, 0, '2017-09-13 05:42:18'),
(17, 763, '0', -0.233677, 46, 0, '2017-09-13 05:42:18'),
(24, 1107, '4', 0.9075, 9, 1, '2017-09-13 05:42:21'),
(15, 391, '2', 0.0675, 17, 1, '2017-09-13 05:42:22'),
(18, 2410, '4', -2.52083, 7, 0, '2017-09-13 05:42:23'),
(20, 45, '1', 1.88988, 10, 1, '2017-09-13 05:42:24'),
(4, 2635, '3', -2.65, 7, 0, '2017-09-13 05:42:25'),
(7, 593, '2', -1.92, 12, 0, '2017-09-13 05:42:25'),
(6, 68, '3', 0.1875, 15, 1, '2017-09-13 05:42:25'),
(25, 1375, '4', 1.59099, 46, 1, '2017-09-13 05:42:26'),
(8, 2447, '4', 2.52273, 14, 1, '2017-09-13 05:42:26'),
(1, 2798, '3', -0.931224, 31, 0, '2017-09-13 05:42:26'),
(2, 3414, '4', -0.963333, 13, 0, '2017-09-13 05:42:28'),
(22, 725, '0', 0, 26, -1, '2017-09-13 05:42:30'),
(29, 475, '3', -1.43478, 24, 0, '2017-09-13 05:42:30'),
(18, 1120, '2', -1.08, 8, 0, '2017-09-13 05:42:31'),
(20, 60, '1', 2.25111, 7, 1, '2017-09-13 05:42:31'),
(1, 2803, '3', 2.50776, 6, 1, '2017-09-13 05:42:31'),
(3, 3407, '0', -0.00333333, 30, 0, '2017-09-13 05:42:32'),
(6, 73, '1', 1.08, 8, 1, '2017-09-13 05:42:34'),
(27, 2411, '1', -1.21488, 40, 0, '2017-09-13 05:42:35'),
(11, 75, '1', -0.03, 18, 0, '2017-09-13 05:42:35'),
(16, 2921, '2', -2.62074, 20, 0, '2017-09-13 05:42:35'),
(29, 751, '3', -2.59091, 6, 0, '2017-09-13 05:42:36'),
(15, 395, '2', -0.27, 14, 0, '2017-09-13 05:42:36'),
(19, 2879, '2', 2.22486, 27, 1, '2017-09-13 05:42:36'),
(4, 2619, '3', 2.45, 11, 1, '2017-09-13 05:42:36'),
(10, 703, '3', 0.0208333, 22, 1, '2017-09-13 05:42:37'),
(14, 2811, '1', 0.819828, 60, 1, '2017-09-13 05:42:37'),
(18, 379, '3', 1.2675, 7, 1, '2017-09-13 05:42:38'),
(9, 733, '3', 0.6075, 22, 1, '2017-09-13 05:42:38'),
(20, 57, '1', 2.13414, 8, 1, '2017-09-13 05:42:40'),
(2, 3413, '4', 0.853333, 14, 1, '2017-09-13 05:42:42'),
(4, 2633, '3', 2.65, 7, 1, '2017-09-13 05:42:44'),
(7, 606, '3', 1.40083, 19, 1, '2017-09-13 05:42:44'),
(6, 76, '3', -1.35, 11, 0, '2017-09-13 05:42:45'),
(28, 477, '3', -1.04348, 30, 0, '2017-09-13 05:42:45'),
(29, 479, '1', -2.34783, 10, 0, '2017-09-13 05:42:45'),
(30, 1467, '3', 0.440833, 37, 1, '2017-09-13 05:42:46'),
(11, 71, '3', -0.6075, 11, 0, '2017-09-13 05:42:46'),
(1, 2806, '1', -2.4, 14, 0, '2017-09-13 05:42:46'),
(22, 489, '4', -0.991875, 17, 0, '2017-09-13 05:42:47'),
(13, 623, '1', 1.50566, 58, 1, '2017-09-13 05:42:47'),
(21, 2855, '0', -0.195743, 60, 0, '2017-09-13 05:42:47'),
(5, 2789, '0', 0, 40, -1, '2017-09-13 05:42:47'),
(17, 760, '1', -1.19055, 30, 0, '2017-09-13 05:42:49'),
(7, 1345, '1', 2.56267, 5, 1, '2017-09-13 05:42:49'),
(3, 3403, '2', 0.495117, 19, 1, '2017-09-13 05:42:52'),
(16, 2905, '1', 2.62572, 17, 1, '2017-09-13 05:42:52'),
(14, 2817, '1', -2.55445, 15, 0, '2017-09-13 05:42:52'),
(4, 2616, '1', -2.55, 9, 0, '2017-09-13 05:42:52'),
(8, 2643, '2', -2.57162, 26, 0, '2017-09-13 05:42:53'),
(13, 1347, '3', 2.77345, 6, 1, '2017-09-13 05:42:53'),
(28, 482, '4', 2.28571, 10, 1, '2017-09-13 05:42:54'),
(19, 2887, '3', 2.47992, 19, 1, '2017-09-13 05:42:55'),
(18, 380, '4', -0.0675, 17, 0, '2017-09-13 05:42:55'),
(9, 487, '4', 0.991875, 17, 1, '2017-09-13 05:42:55'),
(20, 55, '0', 0, 16, -1, '2017-09-13 05:42:56'),
(24, 2427, '4', 1.50521, 35, 1, '2017-09-13 05:42:56'),
(25, 1374, '1', 2, 30, 1, '2017-09-13 05:42:56'),
(1, 2799, '2', -2.20408, 10, 0, '2017-09-13 05:42:56'),
(15, 402, '0', -0.0075, 20, 0, '2017-09-13 05:42:56'),
(7, 1352, '3', 2.55, 9, 1, '2017-09-13 05:42:59'),
(11, 67, '3', 0.3675, 13, 1, '2017-09-13 05:42:59'),
(16, 2918, '4', -2.86026, 8, 0, '2017-09-13 05:43:00'),
(12, 477, '0', -0.00141777, 46, 0, '2017-09-13 05:43:00'),
(21, 2862, '4', 2.513, 14, 1, '2017-09-13 05:43:01'),
(14, 2766, '1', 2.4, 10, 1, '2017-09-13 05:43:02'),
(27, 2432, '4', 1.70802, 27, 1, '2017-09-13 05:43:02'),
(7, 1351, '4', 2.75, 5, 1, '2017-09-13 05:43:03'),
(30, 1452, '3', -0.991875, 17, 0, '2017-09-13 05:43:03'),
(3, 3415, '1', -1.08, 12, 0, '2017-09-13 05:43:04'),
(18, 382, '4', 0.9075, 9, 1, '2017-09-13 05:43:04'),
(6, 70, '0', -0.0075, 20, 0, '2017-09-13 05:43:05'),
(26, 2606, '1', 2.1675, 6, 1, '2017-09-13 05:43:05'),
(20, 41, '4', -1.88988, 10, 0, '2017-09-13 05:43:06'),
(19, 2885, '4', 2.71109, 11, 1, '2017-09-13 05:43:06'),
(8, 1143, '2', -1.05, 13, 0, '2017-09-13 05:43:06'),
(5, 2783, '1', -1.08, 20, 0, '2017-09-13 05:43:07'),
(10, 1996, '0', -0.00333333, 30, 0, '2017-09-13 05:43:07'),
(7, 1356, '0', 0, 4, -1, '2017-09-13 05:43:08'),
(27, 1110, '2', 1.47, 6, 1, '2017-09-13 05:43:08'),
(13, 1304, '2', 2.35707, 17, 1, '2017-09-13 05:43:10'),
(28, 502, '2', 2.02174, 15, 1, '2017-09-13 05:43:10'),
(24, 2447, '2', -2.52273, 14, 0, '2017-09-13 05:43:10'),
(29, 721, '1', 0.421875, 25, 1, '2017-09-13 05:43:10'),
(2, 3400, '2', -0.0263672, 29, 0, '2017-09-13 05:43:11'),
(26, 2601, '2', 2.1675, 6, 1, '2017-09-13 05:43:11'),
(18, 2416, '3', 2.54171, 7, 1, '2017-09-13 05:43:11'),
(15, 383, '4', 0.12, 16, 1, '2017-09-13 05:43:12'),
(20, 46, '2', -2.25111, 7, 0, '2017-09-13 05:43:12'),
(27, 1104, '3', 1.6875, 5, 1, '2017-09-13 05:43:13'),
(11, 62, '4', 0.27, 14, 1, '2017-09-13 05:43:13'),
(4, 2624, '2', 1.9, 22, 1, '2017-09-13 05:43:14'),
(20, 44, '1', 2.69195, 3, 1, '2017-09-13 05:43:16'),
(5, 2791, '3', 2.0172, 9, 1, '2017-09-13 05:43:16'),
(16, 2904, '3', 2.64998, 16, 1, '2017-09-13 05:43:17'),
(9, 494, '4', -0.27, 21, 0, '2017-09-13 05:43:17'),
(28, 739, '2', -2.25, 9, 0, '2017-09-13 05:43:19'),
(27, 1107, '4', 1.47, 6, 1, '2017-09-13 05:43:19'),
(1, 2802, '1', -1.35245, 23, 0, '2017-09-13 05:43:19'),
(2, 3397, '3', -1.5498, 9, 0, '2017-09-13 05:43:20'),
(19, 2868, '2', 2.62679, 14, 1, '2017-09-13 05:43:21'),
(17, 773, '3', 1.29195, 33, 1, '2017-09-13 05:43:22'),
(22, 487, '4', 0.0675, 34, 1, '2017-09-13 05:43:22'),
(6, 79, '4', -0.0675, 17, 0, '2017-09-13 05:43:22'),
(12, 751, '2', 0.819731, 21, 1, '2017-09-13 05:43:22'),
(16, 2948, '2', -2.87848, 7, 0, '2017-09-13 05:43:24'),
(7, 1367, '4', -2.33333, 16, 0, '2017-09-13 05:43:24'),
(21, 2864, '4', -2.17348, 23, 0, '2017-09-13 05:43:24'),
(20, 52, '3', -1.88988, 10, 0, '2017-09-13 05:43:26'),
(24, 1137, '2', 0.12, 16, 1, '2017-09-13 05:43:26'),
(10, 690, '0', -0.0075, 20, 0, '2017-09-13 05:43:28'),
(4, 2630, '3', -2.35, 13, 0, '2017-09-13 05:43:28'),
(7, 1362, '4', -2.76562, 5, 0, '2017-09-13 05:43:29'),
(8, 2457, '2', 2.44355, 23, 1, '2017-09-13 05:43:29'),
(2, 3401, '2', -1.41797, 10, 0, '2017-09-13 05:43:30'),
(27, 366, '4', 0.6075, 11, 1, '2017-09-13 05:43:30'),
(26, 2613, '4', 0.676875, 21, 1, '2017-09-13 05:43:32'),
(29, 481, '1', 0.676875, 21, 1, '2017-09-13 05:43:32'),
(3, 3412, '4', 0.0133333, 28, 1, '2017-09-13 05:43:32'),
(11, 74, '4', -0.0075, 19, 0, '2017-09-13 05:43:32'),
(9, 730, '2', 0.925926, 16, 1, '2017-09-13 05:43:33'),
(6, 64, '4', 0.6075, 11, 1, '2017-09-13 05:43:33'),
(27, 1112, '4', 1.92, 4, 1, '2017-09-13 05:43:34'),
(30, 1463, '4', -0.22314, 32, 0, '2017-09-13 05:43:35'),
(10, 2033, '0', 0, 7, -1, '2017-09-13 05:43:36'),
(24, 1131, '2', -0.75, 10, 0, '2017-09-13 05:43:36'),
(7, 1361, '2', -2.65, 7, 0, '2017-09-13 05:43:36'),
(1, 2810, '0', 0, 17, -1, '2017-09-13 05:43:36'),
(14, 2800, '4', -1.88988, 35, 0, '2017-09-13 05:43:38'),
(11, 77, '2', 1.2675, 7, 1, '2017-09-13 05:43:40'),
(20, 48, '1', -1.34442, 14, 0, '2017-09-13 05:43:40'),
(12, 474, '4', -0.9075, 18, 0, '2017-09-13 05:43:40'),
(16, 2908, '4', -2.62572, 17, 0, '2017-09-13 05:43:40'),
(17, 769, '2', -2.11252, 18, 0, '2017-09-13 05:43:40'),
(29, 722, '4', -1.6875, 9, 0, '2017-09-13 05:43:40'),
(8, 1158, '4', -1.76169, 11, 0, '2017-09-13 05:43:41'),
(2, 3399, '1', -1.29199, 11, 0, '2017-09-13 05:43:41'),
(5, 2774, '1', -0.75, 25, 0, '2017-09-13 05:43:42'),
(27, 363, '3', 0.9075, 9, 1, '2017-09-13 05:43:44'),
(4, 2631, '3', 2.2, 16, 1, '2017-09-13 05:43:44'),
(28, 746, '1', -0.916667, 25, 0, '2017-09-13 05:43:44'),
(6, 69, '1', 0.6075, 11, 1, '2017-09-13 05:43:44'),
(17, 753, '1', -2.64286, 5, 0, '2017-09-13 05:43:45'),
(10, 712, '1', 0.880208, 11, 1, '2017-09-13 05:43:46'),
(20, 56, '2', -2.36512, 6, 0, '2017-09-13 05:43:47'),
(26, 2614, '4', 1.08, 16, 1, '2017-09-13 05:43:47'),
(24, 396, '2', -0.48, 12, 0, '2017-09-13 05:43:47'),
(7, 1098, '4', -1.92, 12, 0, '2017-09-13 05:43:48'),
(16, 2906, '2', 2.81118, 9, 1, '2017-09-13 05:43:50'),
(13, 1095, '3', -1.48993, 39, 0, '2017-09-13 05:43:50'),
(11, 73, '1', 0.75, 10, 1, '2017-09-13 05:43:50'),
(20, 54, '2', 2.47645, 5, 1, '2017-09-13 05:43:51'),
(1, 2795, '3', 1.85204, 15, 1, '2017-09-13 05:43:51'),
(7, 1346, '4', 2.54956, 5, 1, '2017-09-13 05:43:53'),
(12, 742, '1', 1.17188, 15, 1, '2017-09-13 05:43:56'),
(19, 2898, '3', -2.11367, 35, 0, '2017-09-13 05:43:56'),
(30, 1455, '1', 0.676875, 21, 1, '2017-09-13 05:43:56'),
(4, 2629, '2', -2.35, 13, 0, '2017-09-13 05:43:57'),
(10, 1991, '4', 1.20333, 11, 1, '2017-09-13 05:43:58'),
(22, 509, '0', -0.00231481, 36, 0, '2017-09-13 05:43:58'),
(3, 3399, '2', 0.105469, 26, 1, '2017-09-13 05:43:59'),
(9, 722, '3', 0.231481, 26, 1, '2017-09-13 05:43:59'),
(7, 1347, '3', 2.37037, 6, 1, '2017-09-13 05:43:59'),
(25, 1379, '0', -0.375, 64, 0, '2017-09-13 05:44:01'),
(4, 2632, '3', 2.8, 4, 1, '2017-09-13 05:44:01'),
(14, 2789, '1', -1.56, 24, 0, '2017-09-13 05:44:02'),
(6, 61, '2', -0.3, 18, 0, '2017-09-13 05:44:02'),
(28, 754, '1', -1.71429, 18, 0, '2017-09-13 05:44:02'),
(17, 749, '2', 1.9375, 17, 1, '2017-09-13 05:44:03'),
(13, 1099, '0', 0, 14, -1, '2017-09-13 05:44:03'),
(27, 399, '0', -0.0075, 20, 0, '2017-09-13 05:44:04'),
(24, 379, '1', -0.0675, 17, 0, '2017-09-13 05:44:04'),
(7, 1123, '0', 0, 6, -1, '2017-09-13 05:44:05'),
(12, 480, '4', -1.57687, 11, 0, '2017-09-13 05:44:06'),
(25, 1300, '3', 2.85591, 6, 1, '2017-09-13 05:44:07'),
(8, 2443, '1', -2.15217, 26, 0, '2017-09-13 05:44:07'),
(16, 2897, '2', 2.62572, 17, 1, '2017-09-13 05:44:07'),
(21, 2877, '2', 1.24289, 44, 1, '2017-09-13 05:44:08'),
(6, 63, '0', 0, 6, -1, '2017-09-13 05:44:08'),
(11, 79, '1', 0.03, 18, 1, '2017-09-13 05:44:08'),
(2, 3405, '3', -0.0133333, 28, 0, '2017-09-13 05:44:10'),
(3, 3406, '1', -1.20333, 11, 0, '2017-09-13 05:44:10'),
(1, 2811, '1', 1.59245, 19, 1, '2017-09-13 05:44:11'),
(20, 47, '0', -0.407163, 20, 0, '2017-09-13 05:44:12'),
(7, 1344, '4', 2.65, 7, 1, '2017-09-13 05:44:13'),
(27, 381, '1', 0.9075, 9, 1, '2017-09-13 05:44:13'),
(22, 485, '2', -1.27599, 16, 0, '2017-09-13 05:44:14'),
(29, 485, '1', 0.17155, 35, 1, '2017-09-13 05:44:16'),
(11, 76, '4', -0.75, 10, 0, '2017-09-13 05:44:18'),
(20, 49, '2', 2.25111, 7, 1, '2017-09-13 05:44:19'),
(27, 379, '4', -1.2675, 7, 0, '2017-09-13 05:44:20'),
(24, 1133, '3', 0.0675, 17, 1, '2017-09-13 05:44:22'),
(7, 1366, '4', 2.5, 10, 1, '2017-09-13 05:44:22'),
(30, 3051, '0', -0.00443787, 26, 0, '2017-09-13 05:44:23'),
(14, 2771, '3', 1.74, 21, 1, '2017-09-13 05:44:23'),
(6, 62, '1', -0.75, 15, 0, '2017-09-13 05:44:24'),
(29, 466, '4', -1.47, 9, 0, '2017-09-13 05:44:25'),
(9, 490, '2', 0.231481, 26, 1, '2017-09-13 05:44:25'),
(26, 2615, '3', -0.0075, 38, 0, '2017-09-13 05:44:25'),
(27, 364, '2', 1.47, 6, 1, '2017-09-13 05:44:26'),
(7, 1349, '1', 2.8, 4, 1, '2017-09-13 05:44:27'),
(24, 2404, '2', -2.68277, 5, 0, '2017-09-13 05:44:27'),
(21, 2866, '1', -2.28943, 20, 0, '2017-09-13 05:44:28'),
(6, 87, '1', 1.6875, 5, 1, '2017-09-13 05:44:29'),
(5, 2787, '3', -0.0108, 47, 0, '2017-09-13 05:44:29'),
(30, 1457, '4', 2.04187, 7, 1, '2017-09-13 05:44:30'),
(2, 3407, '1', 0.213333, 22, 1, '2017-09-13 05:44:32'),
(29, 735, '4', 1.76333, 7, 1, '2017-09-13 05:44:32'),
(6, 91, '0', 0, 3, -1, '2017-09-13 05:44:32'),
(7, 608, '0', 0, 6, -1, '2017-09-13 05:44:32'),
(17, 475, '2', -1.04348, 30, 0, '2017-09-13 05:44:33'),
(3, 3408, '3', 0.163333, 23, 1, '2017-09-13 05:44:33'),
(10, 1930, '2', 1.05556, 35, 1, '2017-09-13 05:44:33'),
(13, 1359, '3', 1.93165, 29, 1, '2017-09-13 05:44:33'),
(4, 2634, '1', -1.35, 33, 0, '2017-09-13 05:44:35'),
(1, 2818, '1', -1.2398, 25, 0, '2017-09-13 05:44:36'),
(7, 1108, '2', -2.78571, 4, 0, '2017-09-13 05:44:36'),
(6, 93, '2', 1.71429, 6, 1, '2017-09-13 05:44:37'),
(12, 775, '3', -0.318998, 31, 0, '2017-09-13 05:44:38'),
(22, 481, '3', -0.541875, 23, 0, '2017-09-13 05:44:38'),
(11, 83, '0', -0.0075, 20, 0, '2017-09-13 05:44:38'),
(28, 747, '0', -0.0833333, 36, 0, '2017-09-13 05:44:39'),
(20, 51, '0', -0.407163, 20, 0, '2017-09-13 05:44:39'),
(4, 2628, '4', -2.75, 5, 0, '2017-09-13 05:44:40'),
(26, 2609, '2', 1.17188, 15, 1, '2017-09-13 05:44:41'),
(16, 2959, '2', -2.27019, 34, 0, '2017-09-13 05:44:41'),
(25, 1386, '3', 2.15058, 35, 1, '2017-09-13 05:44:42'),
(14, 2782, '1', 1.8, 20, 1, '2017-09-13 05:44:43'),
(18, 2419, '2', 0.163333, 92, 1, '2017-09-13 05:44:44'),
(27, 1138, '1', -0.03, 18, 0, '2017-09-13 05:44:44'),
(17, 482, '4', 2.14286, 12, 1, '2017-09-13 05:44:45'),
(15, 2419, '2', 0.151875, 93, 1, '2017-09-13 05:44:45'),
(19, 2859, '1', -1.34164, 48, 0, '2017-09-13 05:44:45'),
(13, 1346, '4', 2.61218, 12, 1, '2017-09-13 05:44:45'),
(24, 1138, '2', 0.0075, 19, 1, '2017-09-13 05:44:46'),
(4, 2626, '3', 2.65, 7, 1, '2017-09-13 05:44:47'),
(7, 617, '2', -2.5, 10, 0, '2017-09-13 05:44:47'),
(21, 2865, '1', -2.32743, 19, 0, '2017-09-13 05:44:47'),
(8, 2440, '2', -1.88182, 41, 0, '2017-09-13 05:44:48'),
(5, 2777, '1', -1.1532, 19, 0, '2017-09-13 05:44:48'),
(4, 2621, '3', 2.8, 4, 1, '2017-09-13 05:44:51'),
(25, 1391, '3', 2.80918, 10, 1, '2017-09-13 05:44:52'),
(28, 742, '4', -1.36688, 13, 0, '2017-09-13 05:44:52'),
(2, 3433, '4', -0.819731, 21, 0, '2017-09-13 05:44:53'),
(30, 1478, '2', 1.275, 23, 1, '2017-09-13 05:44:53'),
(19, 2886, '1', 2.76586, 9, 1, '2017-09-13 05:44:53'),
(22, 718, '1', 0.653333, 16, 1, '2017-09-13 05:44:54'),
(10, 1891, '4', 0.9, 21, 1, '2017-09-13 05:44:54'),
(15, 1104, '3', 0.9075, 9, 1, '2017-09-13 05:44:54'),
(4, 2627, '2', 2.8, 4, 1, '2017-09-13 05:44:54'),
(29, 719, '3', 0.391204, 23, 1, '2017-09-13 05:44:54'),
(11, 82, '1', 0.12, 16, 1, '2017-09-13 05:44:55'),
(13, 1378, '4', -2.71898, 10, 0, '2017-09-13 05:44:55'),
(20, 42, '4', -1.02599, 16, 0, '2017-09-13 05:44:55'),
(24, 2408, '3', 2.44175, 9, 1, '2017-09-13 05:44:55'),
(9, 725, '3', -0.0415225, 30, 0, '2017-09-13 05:44:55'),
(17, 751, '2', 2.25, 11, 1, '2017-09-13 05:44:56'),
(14, 2792, '3', 2.61601, 13, 1, '2017-09-13 05:44:56'),
(16, 2896, '3', 2.6739, 15, 1, '2017-09-13 05:44:56'),
(6, 82, '1', 0.15, 19, 1, '2017-09-13 05:44:57'),
(29, 720, '4', 2.40166, 4, 1, '2017-09-13 05:44:58'),
(10, 1915, '0', 0, 5, -1, '2017-09-13 05:44:59'),
(7, 1304, '2', 2.35714, 12, 1, '2017-09-13 05:44:59'),
(27, 387, '3', -0.1875, 15, 0, '2017-09-13 05:45:00'),
(13, 1349, '1', 2.83093, 5, 1, '2017-09-13 05:45:00'),
(1, 2794, '3', -1.2398, 25, 0, '2017-09-13 05:45:01'),
(3, 3397, '3', -0.046875, 28, 0, '2017-09-13 05:45:01'),
(24, 382, '4', 1.2675, 7, 1, '2017-09-13 05:45:01'),
(28, 748, '1', -1.6875, 10, 0, '2017-09-13 05:45:02'),
(4, 2729, '2', 2.69195, 9, 1, '2017-09-13 05:45:03'),
(18, 402, '0', -0.0075, 20, 0, '2017-09-13 05:45:05'),
(16, 2937, '3', -2.8418, 9, 0, '2017-09-13 05:45:05'),
(21, 2861, '2', 2, 20, 1, '2017-09-13 05:45:07'),
(20, 53, '2', 1.62865, 12, 1, '2017-09-13 05:45:07'),
(26, 2610, '3', 0.316875, 27, 1, '2017-09-13 05:45:07'),
(4, 2833, '3', 2.86514, 4, 1, '2017-09-13 05:45:07'),
(10, 1892, '0', 0, 8, -1, '2017-09-13 05:45:07'),
(24, 1139, '2', 1.47, 6, 1, '2017-09-13 05:45:08'),
(19, 2890, '2', -2.6739, 15, 0, '2017-09-13 05:45:08'),
(12, 471, '0', -0.00333333, 30, 0, '2017-09-13 05:45:08'),
(30, 3002, '1', 1.26923, 15, 1, '2017-09-13 05:45:08'),
(11, 90, '2', 0.27, 14, 1, '2017-09-13 05:45:09'),
(5, 2786, '4', 0.9408, 22, 1, '2017-09-13 05:45:10'),
(8, 2446, '3', -2.44355, 23, 0, '2017-09-13 05:45:12'),
(1, 2792, '1', -2.13122, 11, 0, '2017-09-13 05:45:12'),
(7, 612, '2', -2.35, 13, 0, '2017-09-13 05:45:12'),
(27, 2408, '3', 2.21207, 13, 1, '2017-09-13 05:45:12'),
(20, 58, '1', 2.47645, 5, 1, '2017-09-13 05:45:13'),
(16, 2898, '3', -2.8331, 8, 0, '2017-09-13 05:45:14'),
(3, 3402, '1', 0.949219, 14, 1, '2017-09-13 05:45:16'),
(25, 1405, '2', 2.42802, 23, 1, '2017-09-13 05:45:16'),
(18, 1130, '1', -0.48, 12, 0, '2017-09-13 05:45:17'),
(6, 84, '0', -0.15, 20, 0, '2017-09-13 05:45:17'),
(12, 762, '1', -1.6875, 10, 0, '2017-09-13 05:45:18'),
(27, 1144, '1', -2.25, 5, 0, '2017-09-13 05:45:18'),
(24, 1120, '4', -0.6075, 11, 0, '2017-09-13 05:45:19'),
(9, 498, '2', 0.48, 24, 1, '2017-09-13 05:45:19'),
(28, 743, '2', -0.75, 18, 0, '2017-09-13 05:45:20'),
(22, 737, '0', 0, 26, -1, '2017-09-13 05:45:20'),
(14, 2796, '2', -2.26757, 24, 0, '2017-09-13 05:45:20'),
(11, 93, '2', 0.0612245, 12, 1, '2017-09-13 05:45:21'),
(19, 2865, '3', 2.68328, 12, 1, '2017-09-13 05:45:21'),
(4, 2852, '3', -2.513, 14, 0, '2017-09-13 05:45:21'),
(26, 2608, '3', 1.2675, 14, 1, '2017-09-13 05:45:22'),
(2, 3430, '1', 0.303719, 30, 1, '2017-09-13 05:45:23'),
(7, 1354, '1', 2.45, 11, 1, '2017-09-13 05:45:23'),
(13, 1127, '2', -2.37171, 24, 0, '2017-09-13 05:45:24'),
(16, 2907, '4', -2.74383, 12, 0, '2017-09-13 05:45:26'),
(30, 1487, '0', 0, 18, -1, '2017-09-13 05:45:27'),
(1, 2796, '3', -1.92, 14, 0, '2017-09-13 05:45:27'),
(27, 380, '4', -0.75, 10, 0, '2017-09-13 05:45:28'),
(17, 771, '1', 1.35738, 32, 1, '2017-09-13 05:45:28'),
(28, 483, '1', -1.94093, 9, 0, '2017-09-13 05:45:29'),
(4, 2734, '3', 2.72703, 8, 1, '2017-09-13 05:45:30'),
(24, 400, '1', -0.6075, 11, 0, '2017-09-13 05:45:30'),
(19, 2906, '1', -2.789, 10, 0, '2017-09-13 05:45:30'),
(20, 50, '3', -0.64633, 18, 0, '2017-09-13 05:45:30'),
(13, 1352, '3', 2.76188, 7, 1, '2017-09-13 05:45:31'),
(12, 493, '2', -0.853333, 14, 0, '2017-09-13 05:45:32'),
(6, 89, '4', 0.6, 16, 1, '2017-09-13 05:45:33'),
(21, 2871, '2', 2.05434, 26, 1, '2017-09-13 05:45:34'),
(18, 395, '2', -0.03, 18, 0, '2017-09-13 05:45:35'),
(1, 2807, '3', 2.27816, 9, 1, '2017-09-13 05:45:35'),
(20, 59, '2', 2.47645, 5, 1, '2017-09-13 05:45:36'),
(27, 377, '0', 0, 8, -1, '2017-09-13 05:45:36'),
(26, 2603, '2', -1.2675, 14, 0, '2017-09-13 05:45:36'),
(24, 398, '1', 1.2675, 7, 1, '2017-09-13 05:45:37'),
(16, 2890, '0', 0, 11, -1, '2017-09-13 05:45:37'),
(14, 2801, '3', -2.49214, 17, 0, '2017-09-13 05:45:37');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(6, 90, '2', 2.25, 5, 1, '2017-09-13 05:45:38'),
(10, 1927, '0', -0.1, 30, 0, '2017-09-13 05:45:38'),
(11, 89, '4', 0.0675, 17, 1, '2017-09-13 05:45:38'),
(2, 3420, '3', -1.3032, 15, 0, '2017-09-13 05:45:38'),
(7, 1118, '2', 2.25, 15, 1, '2017-09-13 05:45:39'),
(29, 750, '4', -0.195652, 43, 0, '2017-09-13 05:45:42'),
(12, 764, '1', -1.56481, 10, 0, '2017-09-13 05:45:42'),
(1, 2813, '3', 2.35347, 8, 1, '2017-09-13 05:45:43'),
(9, 734, '2', 0.163333, 23, 1, '2017-09-13 05:45:43'),
(7, 1363, '2', 2.76562, 5, 1, '2017-09-13 05:45:43'),
(3, 3416, '2', -0.0133333, 28, 0, '2017-09-13 05:45:43'),
(4, 2732, '3', -2.513, 14, 0, '2017-09-13 05:45:44'),
(17, 762, '2', -2.13414, 16, 0, '2017-09-13 05:45:45'),
(20, 72, '1', 1.88988, 10, 1, '2017-09-13 05:45:45'),
(5, 2770, '2', 0.27, 35, 1, '2017-09-13 05:45:46'),
(13, 1300, '1', -2.625, 15, 0, '2017-09-13 05:45:47'),
(30, 1481, '4', -1.425, 21, 0, '2017-09-13 05:45:48'),
(7, 1359, '3', 2.83093, 5, 1, '2017-09-13 05:45:48'),
(26, 2604, '3', -1.47, 12, 0, '2017-09-13 05:45:48'),
(28, 757, '3', -0.958412, 20, 0, '2017-09-13 05:45:49'),
(2, 3427, '3', -1.6875, 11, 0, '2017-09-13 05:45:49'),
(24, 1130, '1', -0.3675, 13, 0, '2017-09-13 05:45:50'),
(6, 81, '3', -1.2, 12, 0, '2017-09-13 05:45:51'),
(15, 2431, '2', -0.409735, 58, 0, '2017-09-13 05:45:52'),
(14, 2783, '1', -2.1, 15, 0, '2017-09-13 05:45:53'),
(20, 74, '1', 2.25111, 7, 1, '2017-09-13 05:45:53'),
(10, 2034, '3', -1.2, 18, 0, '2017-09-13 05:45:56'),
(26, 2602, '1', -1.6875, 10, 0, '2017-09-13 05:45:58'),
(27, 2420, '3', 1.78255, 22, 1, '2017-09-13 05:45:58'),
(12, 772, '3', 1.33333, 16, 1, '2017-09-13 05:45:58'),
(11, 84, '0', -0.0075, 20, 0, '2017-09-13 05:45:58'),
(7, 623, '3', -2.77345, 10, 0, '2017-09-13 05:45:59'),
(9, 737, '1', -1.17188, 15, 0, '2017-09-13 05:45:59'),
(22, 498, '0', -0.001875, 40, 0, '2017-09-13 05:46:00'),
(2, 3429, '1', 1.58678, 12, 1, '2017-09-13 05:46:01'),
(30, 1479, '1', -2.04545, 14, 0, '2017-09-13 05:46:02'),
(4, 2847, '4', 2.36512, 18, 1, '2017-09-13 05:46:02'),
(17, 471, '2', 1.62865, 18, 1, '2017-09-13 05:46:02'),
(15, 367, '1', -0.6075, 11, 0, '2017-09-13 05:46:03'),
(24, 378, '2', -0.27, 14, 0, '2017-09-13 05:46:04'),
(6, 92, '1', -0.375, 14, 0, '2017-09-13 05:46:05'),
(16, 2909, '2', -2.33303, 28, 0, '2017-09-13 05:46:05'),
(25, 1399, '2', 1.52201, 49, 1, '2017-09-13 05:46:05'),
(8, 2451, '2', -1.83088, 53, 0, '2017-09-13 05:46:06'),
(3, 3409, '3', -0.213333, 22, 0, '2017-09-13 05:46:06'),
(10, 714, '1', 2.11765, 10, 1, '2017-09-13 05:46:06'),
(7, 1099, '3', -2.75983, 8, 0, '2017-09-13 05:46:07'),
(19, 2864, '0', 0, 36, -1, '2017-09-13 05:46:07'),
(5, 2771, '1', -0.9408, 22, 0, '2017-09-13 05:46:07'),
(11, 87, '1', 0.6075, 11, 1, '2017-09-13 05:46:09'),
(7, 1353, '3', -2.85, 3, 0, '2017-09-13 05:46:10'),
(10, 1911, '3', 2.34375, 7, 1, '2017-09-13 05:46:13'),
(20, 62, '1', 0, 20, 0, '2017-09-13 05:46:13'),
(5, 2776, '1', 2.3232, 6, 1, '2017-09-13 05:46:14'),
(16, 2882, '2', -2.79285, 8, 0, '2017-09-13 05:46:14'),
(1, 2808, '1', -0.979592, 30, 0, '2017-09-13 05:46:14'),
(7, 1360, '4', -2.75, 5, 0, '2017-09-13 05:46:15'),
(28, 749, '2', 0.630208, 26, 1, '2017-09-13 05:46:15'),
(6, 85, '2', 1.35, 11, 1, '2017-09-13 05:46:15'),
(8, 1151, '2', 1.35, 11, 1, '2017-09-13 05:46:16'),
(27, 1157, '2', -0.3, 18, 0, '2017-09-13 05:46:17'),
(24, 1121, '2', -0.27, 14, 0, '2017-09-13 05:46:18'),
(13, 1348, '2', 1.99948, 31, 1, '2017-09-13 05:46:18'),
(26, 2605, '1', -0.676875, 21, 0, '2017-09-13 05:46:19'),
(9, 464, '1', -0.0399408, 23, 0, '2017-09-13 05:46:21'),
(10, 1917, '3', 2.03571, 9, 1, '2017-09-13 05:46:22'),
(28, 744, '1', -2.04187, 7, 0, '2017-09-13 05:46:22'),
(1, 2805, '3', -2.27816, 9, 0, '2017-09-13 05:46:23'),
(14, 2781, '2', -1.2, 30, 0, '2017-09-13 05:46:23'),
(18, 2429, '2', -1.32383, 47, 0, '2017-09-13 05:46:23'),
(11, 81, '4', 0.27, 14, 1, '2017-09-13 05:46:23'),
(8, 2442, '4', 2.7375, 7, 1, '2017-09-13 05:46:23'),
(30, 3035, '2', 0.137755, 22, 1, '2017-09-13 05:46:24'),
(16, 2886, '1', 2.71109, 11, 1, '2017-09-13 05:46:25'),
(5, 2782, '2', -1.8252, 11, 0, '2017-09-13 05:46:25'),
(4, 2733, '4', -2.17348, 23, 0, '2017-09-13 05:46:25'),
(7, 1348, '4', -2.47059, 12, 0, '2017-09-13 05:46:27'),
(20, 63, '2', -1.34442, 14, 0, '2017-09-13 05:46:27'),
(29, 749, '2', 0.125, 46, 1, '2017-09-13 05:46:27'),
(17, 776, '4', -1.77867, 25, 0, '2017-09-13 05:46:28'),
(19, 2874, '4', -2.41868, 21, 0, '2017-09-13 05:46:29'),
(6, 86, '2', 1.05, 13, 1, '2017-09-13 05:46:29'),
(12, 763, '4', -0.362949, 30, 0, '2017-09-13 05:46:29'),
(22, 466, '0', -0.00333333, 30, 0, '2017-09-13 05:46:31'),
(29, 753, '4', 2.71429, 4, 1, '2017-09-13 05:46:31'),
(1, 2842, '1', 2.36297, 9, 1, '2017-09-13 05:46:32'),
(28, 479, '3', -1.94093, 9, 0, '2017-09-13 05:46:32'),
(18, 371, '2', -0.6075, 11, 0, '2017-09-13 05:46:33'),
(26, 2612, '4', -1.17188, 15, 0, '2017-09-13 05:46:33'),
(21, 2881, '0', -0.195743, 60, 0, '2017-09-13 05:46:34'),
(24, 380, '1', 0.0675, 17, 1, '2017-09-13 05:46:34'),
(8, 1157, '1', 1.35, 11, 1, '2017-09-13 05:46:35'),
(27, 1155, '4', 0.15, 19, 1, '2017-09-13 05:46:36'),
(25, 1406, '3', -2.32938, 30, 0, '2017-09-13 05:46:36'),
(7, 1316, '4', -2.5, 10, 0, '2017-09-13 05:46:37'),
(15, 2406, '2', -1.12965, 34, 0, '2017-09-13 05:46:37'),
(22, 494, '3', 1.92, 6, 1, '2017-09-13 05:46:37'),
(13, 1119, '2', -2.44949, 20, 0, '2017-09-13 05:46:37'),
(6, 83, '1', 1.65, 9, 1, '2017-09-13 05:46:37'),
(19, 2870, '3', 2.76586, 9, 1, '2017-09-13 05:46:37'),
(14, 2785, '3', 2.1, 15, 1, '2017-09-13 05:46:38'),
(4, 2730, '4', 2.54929, 13, 1, '2017-09-13 05:46:39'),
(11, 92, '0', -0.0117188, 16, 0, '2017-09-13 05:46:39'),
(24, 2418, '2', 2.63672, 5, 1, '2017-09-13 05:46:40'),
(21, 2870, '2', -2.83093, 5, 0, '2017-09-13 05:46:40'),
(16, 2883, '3', 2.59808, 15, 1, '2017-09-13 05:46:40'),
(20, 68, '3', 1.48993, 13, 1, '2017-09-13 05:46:41'),
(3, 3429, '2', -0.125517, 35, 0, '2017-09-13 05:46:41'),
(15, 1137, '2', 1.47, 6, 1, '2017-09-13 05:46:43'),
(17, 764, '1', -2.0274, 16, 0, '2017-09-13 05:46:44'),
(1, 2826, '3', 2.10422, 13, 1, '2017-09-13 05:46:45'),
(19, 2877, '2', 2.79285, 8, 1, '2017-09-13 05:46:45'),
(16, 2901, '4', 2.89738, 5, 1, '2017-09-13 05:46:45'),
(2, 3426, '0', -0.00154959, 44, 0, '2017-09-13 05:46:46'),
(13, 1344, '4', 2.72703, 8, 1, '2017-09-13 05:46:46'),
(20, 78, '1', 2.25111, 7, 1, '2017-09-13 05:46:48'),
(28, 745, '2', 1.08, 16, 1, '2017-09-13 05:46:48'),
(30, 1475, '1', -1.43478, 24, 0, '2017-09-13 05:46:49'),
(14, 2791, '3', 2.4, 10, 1, '2017-09-13 05:46:49'),
(29, 741, '4', -1.65789, 17, 0, '2017-09-13 05:46:49'),
(21, 2883, '3', 2.65665, 10, 1, '2017-09-13 05:46:50'),
(25, 1094, '4', -2.69752, 14, 0, '2017-09-13 05:46:50'),
(9, 720, '4', 0.168283, 29, 1, '2017-09-13 05:46:50'),
(8, 1141, '1', 0.6, 16, 1, '2017-09-13 05:46:51'),
(17, 478, '2', -2.52, 8, 0, '2017-09-13 05:46:52'),
(12, 761, '1', -0.75, 23, 0, '2017-09-13 05:46:52'),
(11, 94, '4', -0.3675, 13, 0, '2017-09-13 05:46:52'),
(7, 1128, '2', -1.75433, 16, 0, '2017-09-13 05:46:53'),
(19, 2891, '1', 2.8331, 8, 1, '2017-09-13 05:46:54'),
(6, 94, '1', 0.6, 16, 1, '2017-09-13 05:46:54'),
(24, 1146, '1', 0.75, 15, 1, '2017-09-13 05:46:55'),
(26, 2611, '0', 0, 22, -1, '2017-09-13 05:46:55'),
(10, 1880, '0', -0.0882353, 34, 0, '2017-09-13 05:46:56'),
(14, 2802, '3', 2.76684, 8, 1, '2017-09-13 05:46:56'),
(20, 61, '1', 2.22486, 9, 1, '2017-09-13 05:46:56'),
(4, 2735, '1', 2.36512, 18, 1, '2017-09-13 05:46:57'),
(8, 1156, '1', 2.1, 6, 1, '2017-09-13 05:46:57'),
(27, 2451, '2', -2.51471, 22, 0, '2017-09-13 05:46:57'),
(25, 1401, '4', 2.82913, 9, 1, '2017-09-13 05:46:59'),
(29, 474, '1', 2.175, 11, 1, '2017-09-13 05:47:00'),
(2, 3436, '4', 1.39463, 14, 1, '2017-09-13 05:47:00'),
(22, 721, '2', -0.48, 24, 0, '2017-09-13 05:47:01'),
(11, 95, '3', 0.9075, 9, 1, '2017-09-13 05:47:01'),
(28, 478, '2', -1.47, 15, 0, '2017-09-13 05:47:03'),
(24, 1144, '3', 1.8, 8, 1, '2017-09-13 05:47:03'),
(15, 1130, '0', -0.0075, 20, 0, '2017-09-13 05:47:03'),
(7, 1378, '2', 1.85204, 12, 1, '2017-09-13 05:47:05'),
(27, 369, '2', 1.08, 8, 1, '2017-09-13 05:47:06'),
(20, 76, '1', 2.12132, 10, 1, '2017-09-13 05:47:07'),
(12, 491, '3', 1.19668, 14, 1, '2017-09-13 05:47:07'),
(19, 2907, '4', -2.69752, 14, 0, '2017-09-13 05:47:08'),
(9, 724, '1', 0.48, 18, 1, '2017-09-13 05:47:09'),
(8, 1153, '2', 1.05, 13, 1, '2017-09-13 05:47:10'),
(16, 2902, '3', -2.41818, 25, 0, '2017-09-13 05:47:10'),
(26, 2607, '4', 1.17188, 15, 1, '2017-09-13 05:47:11'),
(5, 2779, '1', 0.0192, 46, 1, '2017-09-13 05:47:11'),
(6, 95, '3', 0.45, 17, 1, '2017-09-13 05:47:11'),
(11, 86, '1', -0.75, 10, 0, '2017-09-13 05:47:11'),
(15, 369, '2', 0.9075, 9, 1, '2017-09-13 05:47:12'),
(2, 3424, '1', -1.48915, 13, 0, '2017-09-13 05:47:13'),
(7, 1369, '2', -2.3168, 8, 0, '2017-09-13 05:47:13'),
(10, 1920, '2', 1.5, 16, 1, '2017-09-13 05:47:13'),
(14, 2798, '4', 2.49214, 17, 1, '2017-09-13 05:47:13'),
(4, 2823, '0', 0, 16, -1, '2017-09-13 05:47:14'),
(20, 77, '2', 2.32379, 8, 1, '2017-09-13 05:47:14'),
(16, 2899, '2', 2.89738, 5, 1, '2017-09-13 05:47:15'),
(24, 2446, '1', -2.68548, 13, 0, '2017-09-13 05:47:15'),
(29, 739, '2', -1.58333, 17, 0, '2017-09-13 05:47:16'),
(17, 750, '2', 1.43478, 24, 1, '2017-09-13 05:47:17'),
(3, 3430, '2', -0.125517, 35, 0, '2017-09-13 05:47:17'),
(27, 2406, '4', -2.29688, 11, 0, '2017-09-13 05:47:17'),
(15, 1112, '1', -1.47, 6, 0, '2017-09-13 05:47:18'),
(28, 750, '0', 0, 15, -1, '2017-09-13 05:47:18'),
(7, 1097, '2', -2.34083, 7, 0, '2017-09-13 05:47:20'),
(10, 1929, '2', 2.29412, 8, 1, '2017-09-13 05:47:21'),
(9, 478, '3', -1.6428, 13, 0, '2017-09-13 05:47:22'),
(4, 2819, '1', -2.65665, 10, 0, '2017-09-13 05:47:23'),
(14, 2793, '4', -2.70701, 10, 0, '2017-09-13 05:47:24'),
(18, 2411, '2', -0.863058, 51, 0, '2017-09-13 05:47:25'),
(6, 99, '3', -0.9, 14, 0, '2017-09-13 05:47:25'),
(28, 480, '4', -1.80187, 9, 0, '2017-09-13 05:47:27'),
(8, 1160, '1', -0.64633, 18, 0, '2017-09-13 05:47:28'),
(17, 474, '4', -2.1, 12, 0, '2017-09-13 05:47:29'),
(19, 2900, '3', -2.49905, 22, 0, '2017-09-13 05:47:30'),
(10, 1957, '3', -2.62823, 9, 0, '2017-09-13 05:47:30'),
(20, 75, '1', -1.5, 15, 0, '2017-09-13 05:47:30'),
(11, 91, '0', -0.0075, 20, 0, '2017-09-13 05:47:32'),
(18, 1105, '2', 1.2675, 7, 1, '2017-09-13 05:47:32'),
(16, 2900, '3', -2.62572, 17, 0, '2017-09-13 05:47:33'),
(27, 397, '0', 0, 16, -1, '2017-09-13 05:47:33'),
(26, 2624, '2', 1.14083, 23, 1, '2017-09-13 05:47:34'),
(30, 1460, '1', 0.00141777, 45, 1, '2017-09-13 05:47:34'),
(7, 1382, '2', -1.92, 14, 0, '2017-09-13 05:47:34'),
(2, 3425, '4', -0.819731, 21, 0, '2017-09-13 05:47:35'),
(14, 2813, '3', 2.64652, 12, 1, '2017-09-13 05:47:36'),
(9, 739, '2', -1.12037, 14, 0, '2017-09-13 05:47:37'),
(20, 73, '3', -2.41868, 7, 0, '2017-09-13 05:47:37'),
(8, 2434, '1', 2.75455, 9, 1, '2017-09-13 05:47:37'),
(22, 729, '0', -0.00231481, 36, 0, '2017-09-13 05:47:38'),
(15, 398, '0', -0.0075, 20, 0, '2017-09-13 05:47:38'),
(10, 1914, '4', 2.03571, 9, 1, '2017-09-13 05:47:39'),
(17, 739, '1', 2.08333, 11, 1, '2017-09-13 05:47:39'),
(28, 751, '2', 1.48915, 13, 1, '2017-09-13 05:47:41'),
(12, 770, '4', -0.255208, 34, 0, '2017-09-13 05:47:41'),
(5, 2800, '3', -0.979592, 30, 0, '2017-09-13 05:47:42'),
(15, 364, '2', 1.92, 4, 1, '2017-09-13 05:47:42'),
(18, 388, '3', -0.75, 10, 0, '2017-09-13 05:47:43'),
(9, 757, '3', -2.15643, 7, 0, '2017-09-13 05:47:44'),
(3, 3433, '4', -0.396694, 28, 0, '2017-09-13 05:47:45'),
(27, 2422, '3', -2.46387, 12, 0, '2017-09-13 05:47:46'),
(16, 2939, '2', -2.72082, 13, 0, '2017-09-13 05:47:46'),
(26, 2633, '3', 1.84083, 13, 1, '2017-09-13 05:47:46'),
(17, 748, '1', -2.475, 7, 0, '2017-09-13 05:47:47'),
(12, 760, '1', -2.1675, 6, 0, '2017-09-13 05:47:48'),
(14, 2815, '1', 2.64652, 12, 1, '2017-09-13 05:47:48'),
(25, 1396, '3', -1.30583, 49, 0, '2017-09-13 05:47:48'),
(8, 2648, '3', -2.80721, 11, 0, '2017-09-13 05:47:49'),
(11, 85, '4', -0.0675, 17, 0, '2017-09-13 05:47:49'),
(1, 2857, '2', 0.135469, 63, 1, '2017-09-13 05:47:49'),
(28, 474, '3', -1.92, 8, 0, '2017-09-13 05:47:49'),
(21, 2859, '0', -0.195743, 60, 0, '2017-09-13 05:47:50'),
(7, 1377, '2', -1.45504, 17, 0, '2017-09-13 05:47:52'),
(24, 2443, '4', 1.82609, 36, 1, '2017-09-13 05:47:52'),
(19, 2861, '2', 2.38747, 22, 1, '2017-09-13 05:47:52'),
(22, 720, '2', -1.09903, 15, 0, '2017-09-13 05:47:53'),
(4, 2728, '1', -1.88988, 30, 0, '2017-09-13 05:47:53'),
(12, 774, '1', 2.29688, 6, 1, '2017-09-13 05:47:54'),
(15, 400, '1', -0.48, 12, 0, '2017-09-13 05:47:54'),
(7, 1119, '2', -2.61333, 4, 0, '2017-09-13 05:47:56'),
(14, 2795, '3', 2.73701, 9, 1, '2017-09-13 05:47:57'),
(20, 79, '2', 0, 20, 0, '2017-09-13 05:47:57'),
(13, 1382, '3', 0, 70, 1, '2017-09-13 05:47:57'),
(6, 103, '2', -0.6, 32, 0, '2017-09-13 05:47:58'),
(27, 1139, '4', -0.3675, 13, 0, '2017-09-13 05:47:58'),
(29, 755, '1', 0.375, 42, 1, '2017-09-13 05:47:59'),
(17, 744, '2', -2.025, 13, 0, '2017-09-13 05:47:59'),
(1, 2850, '4', -2.23172, 11, 0, '2017-09-13 05:48:00'),
(19, 2901, '4', 2.8331, 8, 1, '2017-09-13 05:48:00'),
(16, 2942, '3', -2.6739, 15, 0, '2017-09-13 05:48:00'),
(18, 398, '2', -0.03, 18, 0, '2017-09-13 05:48:01'),
(21, 2887, '3', 2.58532, 12, 1, '2017-09-13 05:48:01'),
(30, 3008, '0', -0.00382653, 28, 0, '2017-09-13 05:48:03'),
(11, 98, '2', -0.3675, 13, 0, '2017-09-13 05:48:03'),
(7, 1386, '2', -2.37037, 8, 0, '2017-09-13 05:48:03'),
(20, 69, '1', 2.50998, 6, 1, '2017-09-13 05:48:04'),
(4, 2845, '2', -2.62111, 11, 0, '2017-09-13 05:48:05'),
(5, 2798, '3', -1.29551, 24, 0, '2017-09-13 05:48:05'),
(14, 2812, '1', -2.76684, 8, 0, '2017-09-13 05:48:06'),
(15, 386, '1', -0.48, 12, 0, '2017-09-13 05:48:06'),
(16, 2877, '2', 2.84605, 6, 1, '2017-09-13 05:48:07'),
(29, 482, '4', 2.42857, 8, 1, '2017-09-13 05:48:07'),
(12, 765, '2', 1.2675, 14, 1, '2017-09-13 05:48:07'),
(26, 2626, '2', -1.2675, 21, 0, '2017-09-13 05:48:07'),
(28, 738, '4', -0.508651, 20, 0, '2017-09-13 05:48:09'),
(13, 1376, '1', -2.55841, 12, 0, '2017-09-13 05:48:09'),
(3, 3436, '4', 0.619835, 24, 1, '2017-09-13 05:48:09'),
(22, 726, '1', 0.66436, 18, 1, '2017-09-13 05:48:11'),
(10, 1937, '1', 0, 32, 0, '2017-09-13 05:48:11'),
(2, 3419, '4', 0.0759298, 37, 1, '2017-09-13 05:48:12'),
(27, 1120, '2', -0.27, 14, 0, '2017-09-13 05:48:13'),
(4, 2820, '1', -2.72703, 8, 0, '2017-09-13 05:48:13'),
(9, 754, '2', -0.244898, 30, 0, '2017-09-13 05:48:14'),
(11, 101, '2', -0.105469, 13, 0, '2017-09-13 05:48:15'),
(7, 1375, '2', -2.05737, 11, 0, '2017-09-13 05:48:15'),
(16, 2955, '3', -2.81118, 9, 0, '2017-09-13 05:48:16'),
(26, 2623, '2', 2.1675, 9, 1, '2017-09-13 05:48:17'),
(1, 2827, '2', -1.86047, 17, 0, '2017-09-13 05:48:17'),
(28, 499, '1', 1.74723, 9, 1, '2017-09-13 05:48:18'),
(22, 723, '1', 1.94676, 7, 1, '2017-09-13 05:48:18'),
(12, 758, '3', -1.51454, 11, 0, '2017-09-13 05:48:19'),
(25, 1407, '3', -2.64119, 30, 0, '2017-09-13 05:48:19'),
(13, 1363, '2', 2.64557, 11, 1, '2017-09-13 05:48:20'),
(5, 2799, '2', -1.92, 14, 0, '2017-09-13 05:48:20'),
(4, 2841, '3', 2.76188, 7, 1, '2017-09-13 05:48:20'),
(18, 1115, '3', -0.0075, 19, 0, '2017-09-13 05:48:20'),
(17, 741, '2', 1.42105, 20, 1, '2017-09-13 05:48:20'),
(15, 396, '1', -0.27, 14, 0, '2017-09-13 05:48:20'),
(21, 2888, '3', 2.32743, 19, 1, '2017-09-13 05:48:20'),
(8, 2448, '1', -1.95652, 32, 0, '2017-09-13 05:48:21'),
(4, 2838, '3', 2.86514, 4, 1, '2017-09-13 05:48:23'),
(20, 70, '0', -0.67082, 20, 0, '2017-09-13 05:48:24'),
(17, 740, '1', 2.58333, 5, 1, '2017-09-13 05:48:25'),
(7, 1384, '1', 2.26247, 10, 1, '2017-09-13 05:48:25'),
(16, 2866, '4', 2.76586, 9, 1, '2017-09-13 05:48:25'),
(27, 370, '4', -0.3675, 13, 0, '2017-09-13 05:48:26'),
(18, 376, '1', -1.2675, 7, 0, '2017-09-13 05:48:27'),
(24, 2453, '3', -2.20588, 36, 0, '2017-09-13 05:48:27'),
(9, 479, '4', 1.4518, 14, 1, '2017-09-13 05:48:28'),
(26, 2632, '3', 2.00083, 11, 1, '2017-09-13 05:48:28'),
(4, 2816, '4', 2.79651, 6, 1, '2017-09-13 05:48:30'),
(30, 1473, '3', -0.6348, 27, 0, '2017-09-13 05:48:30'),
(2, 3422, '2', -0.968492, 19, 0, '2017-09-13 05:48:31'),
(16, 2952, '2', 2.87619, 6, 1, '2017-09-13 05:48:31'),
(15, 1122, '4', 0.48, 12, 1, '2017-09-13 05:48:32'),
(14, 2808, '2', -2.20136, 26, 0, '2017-09-13 05:48:32'),
(17, 742, '1', 2.475, 7, 1, '2017-09-13 05:48:32'),
(19, 2908, '4', -2.21169, 32, 0, '2017-09-13 05:48:32'),
(12, 488, '3', 1.12037, 14, 1, '2017-09-13 05:48:33'),
(27, 2410, '2', 2.52083, 7, 1, '2017-09-13 05:48:33'),
(11, 109, '2', -0.48, 18, 0, '2017-09-13 05:48:33'),
(26, 2619, '3', 2.43, 6, 1, '2017-09-13 05:48:34'),
(21, 2885, '4', 2.513, 14, 1, '2017-09-13 05:48:34'),
(28, 756, '2', 1.17188, 18, 1, '2017-09-13 05:48:36'),
(1, 2844, '0', 0, 21, -1, '2017-09-13 05:48:38'),
(20, 67, '3', 1.5, 15, 1, '2017-09-13 05:48:39'),
(29, 738, '2', 0.176471, 32, 1, '2017-09-13 05:48:39'),
(3, 3420, '3', -0.348657, 29, 0, '2017-09-13 05:48:39'),
(15, 1117, '3', -1.08, 8, 0, '2017-09-13 05:48:40'),
(16, 2940, '3', -2.81118, 9, 0, '2017-09-13 05:48:40'),
(17, 774, '1', 2.4375, 9, 1, '2017-09-13 05:48:42'),
(7, 2614, '4', 2.1675, 6, 1, '2017-09-13 05:48:42'),
(4, 2825, '3', 2.58532, 12, 1, '2017-09-13 05:48:42'),
(20, 71, '1', 2.68328, 4, 1, '2017-09-13 05:48:43'),
(18, 1138, '2', 0.12, 16, 1, '2017-09-13 05:48:44'),
(29, 742, '1', 2.625, 5, 1, '2017-09-13 05:48:44'),
(10, 702, '0', -0.285848, 34, 0, '2017-09-13 05:48:46'),
(4, 2835, '3', 2.76188, 7, 1, '2017-09-13 05:48:49'),
(7, 2602, '2', -2.04187, 7, 0, '2017-09-13 05:48:49'),
(9, 744, '1', -0.676875, 21, 0, '2017-09-13 05:48:49'),
(29, 478, '4', 2.64, 6, 1, '2017-09-13 05:48:49'),
(15, 376, '1', -0.6075, 11, 0, '2017-09-13 05:48:51'),
(13, 1370, '4', -2.00446, 31, 0, '2017-09-13 05:48:51'),
(1, 2851, '1', -2.10422, 13, 0, '2017-09-13 05:48:51'),
(19, 2897, '2', 2.57617, 19, 1, '2017-09-13 05:48:51'),
(5, 2817, '1', -0.884082, 32, 0, '2017-09-13 05:48:52'),
(10, 1962, '1', -2.71302, 7, 0, '2017-09-13 05:48:53'),
(24, 2450, '4', -2.47917, 25, 0, '2017-09-13 05:48:53'),
(27, 396, '0', -0.0075, 20, 0, '2017-09-13 05:48:53'),
(21, 2882, '1', 2.32743, 19, 1, '2017-09-13 05:48:53'),
(25, 1393, '1', -2.21563, 34, 0, '2017-09-13 05:48:54'),
(22, 731, '0', -0.00231481, 36, 0, '2017-09-13 05:48:54'),
(7, 2610, '3', 2.1675, 6, 1, '2017-09-13 05:48:55'),
(12, 777, '3', -0.816635, 22, 0, '2017-09-13 05:48:55'),
(30, 1476, '1', -0.808802, 25, 0, '2017-09-13 05:48:55'),
(28, 752, '3', 0.958412, 20, 1, '2017-09-13 05:48:56'),
(16, 2945, '1', -2.64998, 16, 0, '2017-09-13 05:48:57'),
(13, 1123, '4', -2.80944, 6, 0, '2017-09-13 05:48:57'),
(6, 110, '1', -2.55, 60, 0, '2017-09-13 05:48:58'),
(8, 2454, '2', 2.20833, 38, 1, '2017-09-13 05:48:59'),
(26, 2625, '4', -1.7, 26, 0, '2017-09-13 05:49:00'),
(4, 2731, '4', 2.58532, 12, 1, '2017-09-13 05:49:01'),
(20, 89, '0', -0.905126, 20, 0, '2017-09-13 05:49:04'),
(27, 1133, '4', -0.75, 10, 0, '2017-09-13 05:49:04'),
(18, 384, '0', -0.0075, 20, 0, '2017-09-13 05:49:04'),
(30, 1491, '1', -1.85204, 9, 0, '2017-09-13 05:49:04'),
(26, 2618, '3', 2.75, 5, 1, '2017-09-13 05:49:05'),
(7, 2607, '2', -1.6875, 10, 0, '2017-09-13 05:49:05'),
(15, 2404, '1', 2.10149, 15, 1, '2017-09-13 05:49:06'),
(11, 103, '2', -0.12, 32, 0, '2017-09-13 05:49:06'),
(9, 750, '3', -1.19234, 17, 0, '2017-09-13 05:49:06'),
(13, 1345, '1', 2.68875, 10, 1, '2017-09-13 05:49:08'),
(17, 759, '1', -1.60496, 28, 0, '2017-09-13 05:49:10'),
(27, 392, '0', 0, 7, -1, '2017-09-13 05:49:11'),
(2, 3437, '3', -0.0387397, 39, 0, '2017-09-13 05:49:11'),
(4, 2871, '3', -2.73861, 10, 0, '2017-09-13 05:49:11'),
(24, 388, '3', -0.03, 18, 0, '2017-09-13 05:49:11'),
(22, 722, '3', 0.835648, 17, 1, '2017-09-13 05:49:11'),
(3, 3437, '4', -0.1875, 33, 0, '2017-09-13 05:49:12'),
(29, 775, '4', 1.88988, 23, 1, '2017-09-13 05:49:12'),
(17, 484, '1', 2.8681, 3, 1, '2017-09-13 05:49:13'),
(1, 2839, '2', -1.52297, 23, 0, '2017-09-13 05:49:14'),
(16, 2884, '4', -2.50998, 18, 0, '2017-09-13 05:49:15'),
(14, 2810, '4', 1.58964, 43, 1, '2017-09-13 05:49:15'),
(27, 1140, '3', -1.08, 8, 0, '2017-09-13 05:49:19'),
(29, 759, '4', -2.7331, 6, 0, '2017-09-13 05:49:19'),
(8, 1144, '0', -0.15, 20, 0, '2017-09-13 05:49:19'),
(8, 2445, '4', 2.53846, 20, 1, '2017-09-13 05:49:19'),
(9, 742, '1', 1.2675, 14, 1, '2017-09-13 05:49:20'),
(21, 2879, '2', 2.01386, 27, 1, '2017-09-13 05:49:21'),
(11, 99, '2', 0.1875, 15, 1, '2017-09-13 05:49:21'),
(7, 2615, '2', -1.08, 16, 0, '2017-09-13 05:49:22'),
(30, 1488, '2', 1.12965, 17, 1, '2017-09-13 05:49:22'),
(2, 3431, '1', -1.58678, 12, 0, '2017-09-13 05:49:23'),
(14, 2805, '1', 2.76684, 8, 1, '2017-09-13 05:49:23'),
(4, 2888, '1', -2.58532, 12, 0, '2017-09-13 05:49:24'),
(13, 1355, '2', -2.43962, 16, 0, '2017-09-13 05:49:24'),
(19, 2892, '4', -2.14709, 34, 0, '2017-09-13 05:49:27'),
(7, 2604, '1', -2.29688, 5, 0, '2017-09-13 05:49:27'),
(10, 664, '0', -0.0882353, 34, 0, '2017-09-13 05:49:27'),
(26, 2630, '2', 1.85, 23, 1, '2017-09-13 05:49:27'),
(6, 109, '0', -0.1, 30, 0, '2017-09-13 05:49:29'),
(19, 2893, '4', 2.89738, 5, 1, '2017-09-13 05:49:32'),
(7, 2605, '1', -2.04187, 7, 0, '2017-09-13 05:49:33'),
(24, 2411, '1', -1.83372, 24, 0, '2017-09-13 05:49:35'),
(22, 464, '1', -0.0399408, 23, 0, '2017-09-13 05:49:35'),
(26, 2620, '4', 2.55, 9, 1, '2017-09-13 05:49:36'),
(27, 1122, '3', -0.0075, 19, 0, '2017-09-13 05:49:38'),
(7, 2606, '1', 2.29688, 5, 1, '2017-09-13 05:49:38'),
(12, 767, '2', -0.0325521, 43, 0, '2017-09-13 05:49:38'),
(16, 2864, '2', 2.29129, 25, 1, '2017-09-13 05:49:40'),
(17, 470, '4', 1.26865, 29, 1, '2017-09-13 05:49:41'),
(30, 1474, '2', 0.823129, 20, 1, '2017-09-13 05:49:42'),
(19, 2904, '3', 2.76655, 11, 1, '2017-09-13 05:49:43'),
(27, 375, '1', 1.47, 6, 1, '2017-09-13 05:49:44'),
(3, 3417, '2', -0.22314, 32, 0, '2017-09-13 05:49:44'),
(26, 2628, '4', -2.65, 7, 0, '2017-09-13 05:49:44'),
(11, 110, '3', 2.66492, 23, 1, '2017-09-13 05:49:45'),
(10, 1925, '1', 1.77273, 18, 1, '2017-09-13 05:49:45'),
(24, 395, '1', 0.75, 10, 1, '2017-09-13 05:49:45'),
(28, 755, '0', -0.00130208, 48, 0, '2017-09-13 05:49:45'),
(9, 476, '1', -0.421875, 25, 0, '2017-09-13 05:49:45'),
(4, 2882, '1', 2.13414, 24, 1, '2017-09-13 05:49:47'),
(7, 2609, '2', 1.80187, 9, 1, '2017-09-13 05:49:48'),
(5, 2809, '3', -0.137755, 55, 0, '2017-09-13 05:49:48'),
(8, 2656, '4', -2.59966, 29, 0, '2017-09-13 05:49:49'),
(27, 1130, '1', -1.47, 6, 0, '2017-09-13 05:49:50'),
(16, 2874, '1', 2.68328, 12, 1, '2017-09-13 05:49:52'),
(21, 2868, '1', -1.84765, 31, 0, '2017-09-13 05:49:52'),
(13, 1118, '2', 1.88988, 30, 1, '2017-09-13 05:49:54'),
(1, 2848, '4', -0.75, 40, 0, '2017-09-13 05:49:55'),
(7, 2613, '4', 2.04187, 7, 1, '2017-09-13 05:49:55'),
(5, 2813, '3', 2.43, 7, 1, '2017-09-13 05:49:55'),
(3, 3431, '1', -1.6875, 11, 0, '2017-09-13 05:49:55'),
(21, 2886, '1', 2.86514, 4, 1, '2017-09-13 05:49:56'),
(29, 774, '1', 1.12345, 37, 1, '2017-09-13 05:49:56'),
(9, 477, '4', -1.63894, 12, 0, '2017-09-13 05:49:58'),
(24, 389, '2', 0.3675, 13, 1, '2017-09-13 05:49:58'),
(13, 608, '2', -2.83093, 5, 0, '2017-09-13 05:49:59'),
(6, 106, '2', -1.5, 30, 0, '2017-09-13 05:50:00'),
(28, 476, '3', 1.17188, 15, 1, '2017-09-13 05:50:00'),
(12, 492, '4', -0.676875, 21, 0, '2017-09-13 05:50:00'),
(4, 2884, '4', -2.58532, 12, 0, '2017-09-13 05:50:00'),
(27, 388, '4', -0.75, 10, 0, '2017-09-13 05:50:00'),
(11, 105, '4', 0, 16, 1, '2017-09-13 05:50:00'),
(7, 2603, '4', -2.1675, 6, 0, '2017-09-13 05:50:01'),
(25, 1369, '0', -0.369274, 66, 0, '2017-09-13 05:50:01'),
(17, 761, '1', -2.10309, 19, 0, '2017-09-13 05:50:01'),
(30, 1468, '2', 0.75, 20, 1, '2017-09-13 05:50:02'),
(15, 2432, '4', 0.696446, 57, 1, '2017-09-13 05:50:03'),
(8, 1142, '3', -0.75, 15, 0, '2017-09-13 05:50:04'),
(13, 1381, '4', 2.79651, 5, 1, '2017-09-13 05:50:04'),
(2, 3435, '4', 0.0139463, 41, 1, '2017-09-13 05:50:04'),
(5, 2807, '3', 2.20408, 10, 1, '2017-09-13 05:50:05'),
(1, 2840, '4', -2.29688, 10, 0, '2017-09-13 05:50:05'),
(16, 2950, '2', 2.74383, 12, 1, '2017-09-13 05:50:05'),
(19, 2902, '4', -2.49905, 22, 0, '2017-09-13 05:50:05'),
(27, 2418, '2', 2.49797, 7, 1, '2017-09-13 05:50:07'),
(15, 372, '2', -1.6875, 5, 0, '2017-09-13 05:50:08'),
(24, 1115, '1', 0.75, 10, 1, '2017-09-13 05:50:08'),
(6, 108, '2', 1.65, 9, 1, '2017-09-13 05:50:09'),
(7, 2601, '2', 1.80187, 9, 1, '2017-09-13 05:50:10'),
(14, 2851, '2', 1.66241, 47, 1, '2017-09-13 05:50:11'),
(11, 107, '4', -1.6875, 10, 0, '2017-09-13 05:50:11'),
(22, 730, '0', -0.00231481, 36, 0, '2017-09-13 05:50:12'),
(4, 2881, '3', -2.58532, 12, 0, '2017-09-13 05:50:12'),
(13, 1383, '4', -2.77345, 8, 0, '2017-09-13 05:50:12'),
(28, 741, '3', -1.40443, 12, 0, '2017-09-13 05:50:12'),
(12, 768, '2', -1.6875, 12, 0, '2017-09-13 05:50:12'),
(29, 772, '1', -2.24148, 17, 0, '2017-09-13 05:50:12'),
(1, 2824, '3', -2.43, 8, 0, '2017-09-13 05:50:13'),
(21, 2884, '3', -2.50998, 18, 0, '2017-09-13 05:50:14'),
(5, 2814, '1', 2.20408, 10, 1, '2017-09-13 05:50:15'),
(8, 1147, '4', 1.35, 11, 1, '2017-09-13 05:50:15'),
(27, 1137, '4', -1.08, 8, 0, '2017-09-13 05:50:16'),
(16, 2957, '2', 2.72082, 13, 1, '2017-09-13 05:50:17'),
(2, 3417, '4', -1.48915, 13, 0, '2017-09-13 05:50:18'),
(7, 2608, '3', 1.92, 8, 1, '2017-09-13 05:50:18'),
(15, 2416, '3', 2.35692, 10, 1, '2017-09-13 05:50:18'),
(24, 2406, '1', -2.2376, 12, 0, '2017-09-13 05:50:19'),
(4, 2861, '2', 2.72703, 8, 1, '2017-09-13 05:50:20'),
(1, 2821, '1', -2.49797, 7, 0, '2017-09-13 05:50:20'),
(6, 107, '4', -2.025, 13, 0, '2017-09-13 05:50:22'),
(28, 753, '4', 1.7415, 10, 1, '2017-09-13 05:50:22'),
(15, 368, '3', 1.6875, 5, 1, '2017-09-13 05:50:23'),
(16, 2981, '4', 2.87619, 6, 1, '2017-09-13 05:50:24'),
(21, 2891, '1', 2.62111, 11, 1, '2017-09-13 05:50:24'),
(26, 2627, '4', -0.95, 41, 0, '2017-09-13 05:50:25'),
(13, 1385, '3', -2.66549, 13, 0, '2017-09-13 05:50:25'),
(10, 1950, '0', -0.256496, 40, 0, '2017-09-13 05:50:26'),
(30, 3000, '2', -0.00520833, 23, 0, '2017-09-13 05:50:26'),
(14, 2836, '4', 2.61218, 15, 1, '2017-09-13 05:50:26'),
(15, 2400, '3', 2.74837, 3, 1, '2017-09-13 05:50:26'),
(7, 2612, '2', -1.80187, 9, 0, '2017-09-13 05:50:26'),
(9, 1218, '0', -0.0075, 20, 0, '2017-09-13 05:50:28'),
(22, 472, '1', 0.991875, 17, 1, '2017-09-13 05:50:28'),
(4, 2864, '2', 2.69195, 9, 1, '2017-09-13 05:50:29'),
(16, 2975, '2', 2.87619, 6, 1, '2017-09-13 05:50:29'),
(7, 2611, '2', -2.43, 4, 0, '2017-09-13 05:50:31'),
(24, 2413, '3', -2.3255, 11, 0, '2017-09-13 05:50:31'),
(10, 1918, '3', 2.35714, 6, 1, '2017-09-13 05:50:31'),
(11, 102, '0', -0.0075, 20, 0, '2017-09-13 05:50:32'),
(8, 2657, '4', -2.71737, 16, 0, '2017-09-13 05:50:32'),
(15, 2410, '2', 2.58673, 6, 1, '2017-09-13 05:50:32'),
(25, 1368, '2', -2.18661, 30, 0, '2017-09-13 05:50:32'),
(3, 3422, '4', -0.0991736, 36, 0, '2017-09-13 05:50:32'),
(17, 767, '1', 1.50173, 31, 1, '2017-09-13 05:50:33'),
(26, 2616, '4', 2.55, 9, 1, '2017-09-13 05:50:34'),
(19, 2909, '4', 2.27357, 30, 1, '2017-09-13 05:50:36'),
(4, 2885, '4', 2.69195, 9, 1, '2017-09-13 05:50:38'),
(6, 101, '0', -0.1875, 16, 0, '2017-09-13 05:50:38'),
(10, 1889, '2', -2.63891, 7, 0, '2017-09-13 05:50:39'),
(30, 2933, '1', -0.630208, 13, 0, '2017-09-13 05:50:39'),
(25, 1102, '2', -2.79285, 8, 0, '2017-09-13 05:50:40'),
(15, 1121, '1', -1.08, 8, 0, '2017-09-13 05:50:40'),
(24, 386, '1', -0.6075, 11, 0, '2017-09-13 05:50:42'),
(2, 3421, '4', 0.619835, 24, 1, '2017-09-13 05:50:42'),
(7, 2620, '4', 2.00083, 11, 1, '2017-09-13 05:50:42'),
(28, 475, '2', -0.886106, 21, 0, '2017-09-13 05:50:44'),
(17, 775, '4', 2.45246, 12, 1, '2017-09-13 05:50:44'),
(1, 2822, '2', -1.31672, 27, 0, '2017-09-13 05:50:46'),
(6, 97, '4', 1.65, 9, 1, '2017-09-13 05:50:47'),
(3, 3421, '4', 1.21488, 16, 1, '2017-09-13 05:50:48'),
(7, 2619, '3', 2.34083, 7, 1, '2017-09-13 05:50:49'),
(4, 2874, '3', -2.71109, 11, 0, '2017-09-13 05:50:49'),
(9, 1174, '3', 0.110947, 21, 1, '2017-09-13 05:50:49'),
(1, 2843, '1', 2.7075, 4, 1, '2017-09-13 05:50:51'),
(11, 106, '3', 1.47, 18, 1, '2017-09-13 05:50:51'),
(8, 2438, '0', 0, 20, -1, '2017-09-13 05:50:52'),
(7, 2628, '3', -2.7075, 3, 0, '2017-09-13 05:50:52'),
(29, 752, '2', -0.326087, 41, 0, '2017-09-13 05:50:53'),
(10, 717, '4', 1.75, 15, 1, '2017-09-13 05:50:54'),
(25, 1381, '4', 2.50998, 15, 1, '2017-09-13 05:50:55'),
(16, 2962, '2', -2.50665, 25, 0, '2017-09-13 05:50:55'),
(19, 2894, '2', 2.52515, 21, 1, '2017-09-13 05:50:56'),
(4, 2883, '0', 0, 7, -1, '2017-09-13 05:50:56'),
(24, 1149, '1', 0.27, 14, 1, '2017-09-13 05:50:56'),
(7, 2629, '3', -2.52083, 5, 0, '2017-09-13 05:50:57'),
(15, 377, '3', -0.0675, 17, 0, '2017-09-13 05:50:57'),
(13, 383, '0', -0.0075, 20, 0, '2017-09-13 05:50:57'),
(26, 2629, '4', -1.8, 24, 0, '2017-09-13 05:50:58'),
(25, 1306, '4', 2.90861, 3, 1, '2017-09-13 05:50:58'),
(21, 2894, '0', 0, 35, -1, '2017-09-13 05:50:59'),
(11, 100, '3', 0.03, 9, 1, '2017-09-13 05:50:59'),
(18, 2427, '2', -0.0075, 114, 0, '2017-09-13 05:50:59'),
(7, 2617, '1', 2.7075, 3, 1, '2017-09-13 05:51:00'),
(22, 738, '3', -0.0233564, 31, 0, '2017-09-13 05:51:00'),
(26, 2617, '1', 2.75, 5, 1, '2017-09-13 05:51:03'),
(2, 3418, '2', -0.819731, 21, 0, '2017-09-13 05:51:03'),
(12, 1910, '4', -0.574219, 27, 0, '2017-09-13 05:51:04'),
(16, 2966, '4', -2.789, 10, 0, '2017-09-13 05:51:05'),
(7, 2623, '2', 2.52083, 5, 1, '2017-09-13 05:51:05'),
(28, 762, '3', 0.6075, 22, 1, '2017-09-13 05:51:06'),
(4, 2879, '2', 2.65665, 10, 1, '2017-09-13 05:51:07'),
(6, 96, '4', 0, 20, 0, '2017-09-13 05:51:07'),
(29, 747, '1', -1.91667, 13, 0, '2017-09-13 05:51:07'),
(19, 2910, '2', -2.78495, 12, 0, '2017-09-13 05:51:08'),
(18, 2408, '3', 2.44175, 9, 1, '2017-09-13 05:51:08'),
(5, 2796, '2', -0.176939, 53, 0, '2017-09-13 05:51:08'),
(8, 1145, '3', -0.45, 17, 0, '2017-09-13 05:51:08'),
(27, 2427, '4', 0.935208, 53, 1, '2017-09-13 05:51:09'),
(11, 96, '4', -0.6075, 11, 0, '2017-09-13 05:51:10'),
(6, 100, '3', 2.1, 3, 1, '2017-09-13 05:51:11'),
(15, 1139, '3', -0.27, 14, 0, '2017-09-13 05:51:11'),
(1, 601, '4', 1.6875, 14, 1, '2017-09-13 05:51:11'),
(21, 2907, '2', -2.68328, 12, 0, '2017-09-13 05:51:11'),
(7, 2635, '2', -2.34083, 7, 0, '2017-09-13 05:51:13'),
(9, 1184, '0', -0.00520833, 24, 0, '2017-09-13 05:51:14'),
(27, 365, '2', -1.47, 6, 0, '2017-09-13 05:51:15'),
(19, 2896, '3', 2.85477, 7, 1, '2017-09-13 05:51:16'),
(11, 97, '4', 1.2675, 7, 1, '2017-09-13 05:51:17'),
(25, 1390, '1', -2.3622, 19, 0, '2017-09-13 05:51:17'),
(16, 2973, '3', 2.72082, 13, 1, '2017-09-13 05:51:18'),
(17, 770, '1', -1.38151, 33, 0, '2017-09-13 05:51:18'),
(12, 1899, '2', -1.4518, 14, 0, '2017-09-13 05:51:18'),
(7, 2624, '2', 2.34083, 7, 1, '2017-09-13 05:51:19'),
(30, 1477, '1', -0.201646, 40, 0, '2017-09-13 05:51:19'),
(13, 2408, '2', -1.6875, 23, 0, '2017-09-13 05:51:20'),
(15, 370, '4', -0.75, 10, 0, '2017-09-13 05:51:21'),
(2, 3434, '2', -0.968492, 19, 0, '2017-09-13 05:51:22'),
(6, 105, '1', -0.75, 12, 0, '2017-09-13 05:51:22'),
(28, 770, '2', 1.2513, 17, 1, '2017-09-13 05:51:23'),
(27, 1131, '1', 0.9075, 9, 1, '2017-09-13 05:51:24'),
(29, 499, '1', 1.65789, 17, 1, '2017-09-13 05:51:24'),
(1, 996, '4', -1.5552, 14, 0, '2017-09-13 05:51:25'),
(7, 2622, '2', 2.43, 6, 1, '2017-09-13 05:51:25'),
(3, 3425, '2', -0.0759298, 37, 0, '2017-09-13 05:51:26'),
(5, 2795, '3', 1.65551, 18, 1, '2017-09-13 05:51:27'),
(19, 2918, '4', -2.80416, 11, 0, '2017-09-13 05:51:27'),
(4, 2859, '2', 2.41868, 21, 1, '2017-09-13 05:51:28'),
(11, 108, '2', 0.75, 10, 1, '2017-09-13 05:51:28'),
(18, 366, '4', 0, 20, 1, '2017-09-13 05:51:28'),
(13, 1115, '1', 1.08, 8, 1, '2017-09-13 05:51:29'),
(8, 2450, '0', 0, 22, -1, '2017-09-13 05:51:31'),
(22, 750, '3', -0.318998, 31, 0, '2017-09-13 05:51:31'),
(16, 2979, '4', -2.69752, 14, 0, '2017-09-13 05:51:32'),
(7, 2618, '3', 2.34083, 7, 1, '2017-09-13 05:51:32'),
(6, 102, '4', -1.35, 11, 0, '2017-09-13 05:51:33'),
(9, 1170, '2', 0.130208, 19, 1, '2017-09-13 05:51:33'),
(17, 777, '2', 2.20571, 17, 1, '2017-09-13 05:51:35'),
(27, 376, '1', -0.6075, 11, 0, '2017-09-13 05:51:35'),
(15, 1120, '4', -0.27, 14, 0, '2017-09-13 05:51:35'),
(26, 2634, '3', -1.35, 33, 0, '2017-09-13 05:51:36'),
(1, 1124, '1', -1.84083, 13, 0, '2017-09-13 05:51:37'),
(16, 2971, '2', 2.87619, 6, 1, '2017-09-13 05:51:38'),
(7, 2626, '3', 2.43, 6, 1, '2017-09-13 05:51:39'),
(10, 1887, '0', -0.240706, 44, 0, '2017-09-13 05:51:39'),
(5, 2806, '2', -1.98918, 13, 0, '2017-09-13 05:51:40'),
(12, 1905, '2', -0.816635, 22, 0, '2017-09-13 05:51:41'),
(18, 397, '3', 0.27, 14, 1, '2017-09-13 05:51:43'),
(7, 2627, '2', 2.75, 5, 1, '2017-09-13 05:51:43'),
(17, 766, '3', -2.50258, 10, 0, '2017-09-13 05:51:45'),
(4, 2862, '4', 2.50998, 18, 1, '2017-09-13 05:51:45'),
(14, 3405, '2', -0.213333, 22, 0, '2017-09-13 05:51:46'),
(28, 766, '3', -0.491497, 25, 0, '2017-09-13 05:51:48'),
(9, 1291, '4', 0.12, 16, 1, '2017-09-13 05:51:48'),
(27, 2414, '1', -2.17911, 13, 0, '2017-09-13 05:51:49'),
(10, 684, '2', -2.36512, 12, 0, '2017-09-13 05:51:51'),
(7, 2634, '2', -2.55, 9, 0, '2017-09-13 05:51:52'),
(4, 2865, '3', 2.81957, 7, 1, '2017-09-13 05:51:53'),
(6, 98, '0', -0.15, 20, 0, '2017-09-13 05:51:53'),
(15, 379, '3', 0.03, 18, 1, '2017-09-13 05:51:53'),
(22, 739, '2', -0.453704, 22, 0, '2017-09-13 05:51:54'),
(28, 764, '1', -1.94676, 7, 0, '2017-09-13 05:51:55'),
(26, 2622, '2', 2, 20, 1, '2017-09-13 05:51:56'),
(3, 3435, '4', 0.303719, 30, 1, '2017-09-13 05:51:56'),
(10, 698, '4', 2.4, 6, 1, '2017-09-13 05:51:57'),
(24, 2435, '3', -0.845148, 61, 0, '2017-09-13 05:51:57'),
(12, 1890, '2', -1.00554, 16, 0, '2017-09-13 05:51:57'),
(7, 2632, '3', 2.75, 5, 1, '2017-09-13 05:51:58'),
(14, 3406, '3', -1.20333, 11, 0, '2017-09-13 05:51:58'),
(4, 2868, '2', 2.87228, 5, 1, '2017-09-13 05:51:58'),
(9, 1197, '3', -1.02083, 10, 0, '2017-09-13 05:51:59'),
(29, 745, '2', 0.3, 36, 1, '2017-09-13 05:52:00'),
(27, 400, '4', 0.3675, 13, 1, '2017-09-13 05:52:01'),
(11, 104, '2', -2.7525, 33, 0, '2017-09-13 05:52:01'),
(7, 2621, '2', -2.7, 6, 0, '2017-09-13 05:52:04'),
(1, 1301, '2', -1.00269, 27, 0, '2017-09-13 05:52:05'),
(5, 2818, '4', -1.18531, 26, 0, '2017-09-13 05:52:06'),
(7, 2630, '2', 2.7, 6, 1, '2017-09-13 05:52:09'),
(17, 492, '4', -1.62865, 24, 0, '2017-09-13 05:52:09'),
(4, 2909, '0', 0, 12, -1, '2017-09-13 05:52:10'),
(16, 2964, '2', -2.24295, 31, 0, '2017-09-13 05:52:10'),
(10, 1951, '1', 2.30847, 13, 1, '2017-09-13 05:52:10'),
(9, 1190, '4', 1.10587, 11, 1, '2017-09-13 05:52:10'),
(8, 720, '4', 2.26247, 5, 1, '2017-09-13 05:52:10'),
(18, 2400, '3', 1.08, 28, 1, '2017-09-13 05:52:11'),
(24, 2434, '1', 2.2376, 15, 1, '2017-09-13 05:52:11'),
(21, 1109, '3', 1.47, 6, 1, '2017-09-13 05:52:12'),
(14, 3407, '1', 0.853333, 14, 1, '2017-09-13 05:52:12'),
(7, 2631, '2', -2.9, 2, 0, '2017-09-13 05:52:12'),
(30, 1485, '0', -0.00110947, 52, 0, '2017-09-13 05:52:12'),
(19, 364, '2', 1.2675, 7, 1, '2017-09-13 05:52:12'),
(3, 3419, '3', -0.968492, 19, 0, '2017-09-13 05:52:15'),
(11, 118, '3', -1.6875, 15, 0, '2017-09-13 05:52:16'),
(27, 385, '4', -0.1875, 15, 0, '2017-09-13 05:52:16'),
(28, 760, '4', 0.6075, 22, 1, '2017-09-13 05:52:18'),
(16, 2969, '4', 2.8331, 8, 1, '2017-09-13 05:52:18'),
(5, 2797, '1', -1.98918, 13, 0, '2017-09-13 05:52:19'),
(1, 607, '0', 0, 14, -1, '2017-09-13 05:52:19'),
(7, 2633, '3', 2.6, 8, 1, '2017-09-13 05:52:20'),
(18, 363, '3', 0.75, 10, 1, '2017-09-13 05:52:20'),
(17, 772, '3', 2.47645, 12, 1, '2017-09-13 05:52:21'),
(12, 1943, '2', -1.17188, 24, 0, '2017-09-13 05:52:21'),
(4, 2903, '2', 2.74383, 12, 1, '2017-09-13 05:52:22'),
(29, 746, '4', 1, 24, 1, '2017-09-13 05:52:24'),
(7, 2625, '3', 2.8, 4, 1, '2017-09-13 05:52:24'),
(10, 1963, '2', 2.33688, 15, 1, '2017-09-13 05:52:25'),
(4, 2899, '2', 2.93908, 3, 1, '2017-09-13 05:52:25'),
(16, 2977, '1', -2.8331, 8, 0, '2017-09-13 05:52:26'),
(21, 384, '1', 0.0075, 19, 1, '2017-09-13 05:52:30'),
(13, 2419, '2', 0.725208, 61, 1, '2017-09-13 05:52:31'),
(7, 2616, '1', -2.6, 8, 0, '2017-09-13 05:52:32'),
(4, 2891, '1', 2.85477, 7, 1, '2017-09-13 05:52:32'),
(19, 371, '0', -0.0075, 20, 0, '2017-09-13 05:52:33'),
(10, 672, '3', -2.39719, 8, 0, '2017-09-13 05:52:34'),
(5, 2808, '4', -1.78531, 16, 0, '2017-09-13 05:52:35'),
(11, 117, '3', -0.403333, 19, 0, '2017-09-13 05:52:35'),
(25, 2614, '4', 2.43, 4, 1, '2017-09-13 05:52:36'),
(17, 765, '2', 2.19301, 15, 1, '2017-09-13 05:52:36'),
(8, 736, '1', 0.16609, 26, 1, '2017-09-13 05:52:36'),
(14, 3410, '1', 0.0833333, 25, 1, '2017-09-13 05:52:37'),
(27, 371, '0', -0.0075, 20, 0, '2017-09-13 05:52:37'),
(18, 1147, '4', 0.6, 16, 1, '2017-09-13 05:52:37'),
(30, 1471, '2', -1.02083, 25, 0, '2017-09-13 05:52:37'),
(29, 480, '2', 1.95, 14, 1, '2017-09-13 05:52:38'),
(4, 2925, '1', 2.89647, 6, 1, '2017-09-13 05:52:38'),
(16, 2885, '4', 2.74383, 12, 1, '2017-09-13 05:52:38'),
(27, 2429, '2', -2.9149, 2, 0, '2017-09-13 05:52:39'),
(12, 1931, '2', -0.9075, 18, 0, '2017-09-13 05:52:39'),
(7, 2816, '4', 2.65, 7, 1, '2017-09-13 05:52:39'),
(19, 379, '3', 1.08, 8, 1, '2017-09-13 05:52:41'),
(22, 475, '0', -0.00141777, 46, 0, '2017-09-13 05:52:41'),
(11, 116, '2', -0.48, 6, 0, '2017-09-13 05:52:41'),
(25, 2607, '4', 2.1675, 6, 1, '2017-09-13 05:52:41'),
(6, 104, '1', 2.6475, 47, 1, '2017-09-13 05:52:42'),
(15, 2403, '2', 0.592593, 50, 1, '2017-09-13 05:52:43'),
(28, 765, '1', -0.316875, 27, 0, '2017-09-13 05:52:44'),
(30, 1484, '2', -1.96599, 8, 0, '2017-09-13 05:52:45'),
(13, 375, '1', 0.1875, 15, 1, '2017-09-13 05:52:45'),
(27, 402, '2', -1.2675, 7, 0, '2017-09-13 05:52:46'),
(16, 2887, '2', -2.81118, 9, 0, '2017-09-13 05:52:47'),
(25, 2603, '0', 0, 6, -1, '2017-09-13 05:52:47'),
(14, 3408, '3', 1.20333, 11, 1, '2017-09-13 05:52:48'),
(3, 3427, '3', -0.1875, 33, 0, '2017-09-13 05:52:49'),
(4, 2916, '1', -2.80416, 11, 0, '2017-09-13 05:52:49'),
(7, 2729, '2', 2.45, 11, 1, '2017-09-13 05:52:50'),
(21, 395, '0', -0.0075, 20, 0, '2017-09-13 05:52:50'),
(17, 768, '2', -2.38385, 14, 0, '2017-09-13 05:52:51'),
(25, 2613, '4', 2.43, 4, 1, '2017-09-13 05:52:51'),
(28, 492, '2', 1.92, 8, 1, '2017-09-13 05:52:52'),
(30, 1469, '2', 2.04187, 7, 1, '2017-09-13 05:52:53'),
(15, 1138, '1', -0.75, 10, 0, '2017-09-13 05:52:53'),
(25, 2605, '2', 2.7075, 2, 1, '2017-09-13 05:52:54'),
(9, 1270, '3', -0.00567108, 44, 0, '2017-09-13 05:52:55'),
(26, 2621, '0', -0.05, 60, 0, '2017-09-13 05:52:56'),
(24, 2456, '4', -1.3129, 44, 0, '2017-09-13 05:52:56'),
(18, 1144, '4', -0.15, 19, 0, '2017-09-13 05:52:56'),
(25, 2601, '2', 2.43, 4, 1, '2017-09-13 05:52:57'),
(8, 730, '3', -0.391204, 23, 0, '2017-09-13 05:53:00'),
(7, 2823, '2', -2.5, 10, 0, '2017-09-13 05:53:00'),
(1, 595, '4', 0.134246, 41, 1, '2017-09-13 05:53:00'),
(5, 2610, '3', 1.92, 8, 1, '2017-09-13 05:53:04'),
(15, 378, '1', 0.6075, 11, 1, '2017-09-13 05:53:04'),
(27, 382, '4', 0.0075, 19, 1, '2017-09-13 05:53:05'),
(24, 1153, '1', -0.75, 10, 0, '2017-09-13 05:53:06'),
(13, 388, '0', -0.0075, 20, 0, '2017-09-13 05:53:06'),
(26, 2635, '3', -2.5, 10, 0, '2017-09-13 05:53:06'),
(17, 488, '3', 2.09443, 15, 1, '2017-09-13 05:53:06'),
(14, 3409, '2', 0.48, 18, 1, '2017-09-13 05:53:06'),
(10, 700, '0', -0.297638, 32, 0, '2017-09-13 05:53:06'),
(7, 2730, '2', -2.7, 6, 0, '2017-09-13 05:53:06'),
(1, 606, '1', -2.34083, 7, 0, '2017-09-13 05:53:07'),
(25, 2633, '3', 2.5, 10, 1, '2017-09-13 05:53:08'),
(4, 2910, '2', -2.62074, 20, 0, '2017-09-13 05:53:09'),
(19, 2419, '2', 1.76333, 28, 1, '2017-09-13 05:53:10'),
(26, 2631, '0', 0, 4, -1, '2017-09-13 05:53:10'),
(8, 734, '3', -1.33333, 10, 0, '2017-09-13 05:53:10'),
(17, 491, '1', -2.73071, 5, 0, '2017-09-13 05:53:10'),
(21, 1121, '0', -0.0075, 20, 0, '2017-09-13 05:53:10'),
(10, 1955, '3', -2.67272, 7, 0, '2017-09-13 05:53:13'),
(25, 2631, '0', 0, 6, -1, '2017-09-13 05:53:13'),
(30, 1472, '1', -0.6075, 22, 0, '2017-09-13 05:53:14'),
(7, 2847, '2', -2.55, 9, 0, '2017-09-13 05:53:15'),
(15, 1116, '4', 0.6075, 11, 1, '2017-09-13 05:53:15'),
(24, 1155, '4', 0.9075, 9, 1, '2017-09-13 05:53:15'),
(5, 2604, '1', -1.47, 12, 0, '2017-09-13 05:53:16'),
(21, 369, '2', 1.47, 6, 1, '2017-09-13 05:53:16'),
(13, 365, '1', -0.6075, 11, 0, '2017-09-13 05:53:17'),
(27, 1136, '2', 0.48, 12, 1, '2017-09-13 05:53:18'),
(9, 1196, '0', -0.00520833, 24, 0, '2017-09-13 05:53:19'),
(9, 1185, '4', 0.0612245, 24, 1, '2017-09-13 05:53:19'),
(7, 2838, '3', 2.8, 4, 1, '2017-09-13 05:53:19'),
(16, 2889, '1', -2.21169, 32, 0, '2017-09-13 05:53:20'),
(29, 773, '2', -0.486068, 43, 0, '2017-09-13 05:53:21'),
(14, 3414, '2', 0.75, 15, 1, '2017-09-13 05:53:21'),
(30, 1480, '3', -2.08333, 7, 0, '2017-09-13 05:53:22'),
(15, 2418, '2', 2.43, 8, 1, '2017-09-13 05:53:23'),
(7, 2731, '3', -2.8, 4, 0, '2017-09-13 05:53:23'),
(2, 1183, '2', 0.154959, 17, 1, '2017-09-13 05:53:24'),
(1, 852, '4', 1.61333, 16, 1, '2017-09-13 05:53:24'),
(3, 3428, '3', -0.125517, 35, 0, '2017-09-13 05:53:24'),
(27, 391, '2', 1.2675, 7, 1, '2017-09-13 05:53:24'),
(5, 2614, '4', 1.57687, 11, 1, '2017-09-13 05:53:26'),
(22, 755, '1', 0.00520833, 46, 1, '2017-09-13 05:53:27'),
(17, 758, '3', -2.08392, 16, 0, '2017-09-13 05:53:27'),
(4, 2908, '3', 2.60112, 18, 1, '2017-09-13 05:53:27'),
(16, 2881, '3', -2.789, 10, 0, '2017-09-13 05:53:30'),
(7, 2732, '3', -2.6, 8, 0, '2017-09-13 05:53:31'),
(28, 775, '3', -0.0907372, 38, 0, '2017-09-13 05:53:32'),
(21, 365, '1', -0.12, 16, 0, '2017-09-13 05:53:32'),
(7, 2728, '0', 0, 3, -1, '2017-09-13 05:53:34'),
(2, 1218, '1', -0.6075, 11, 0, '2017-09-13 05:53:35'),
(17, 493, '1', 2.36512, 9, 1, '2017-09-13 05:53:36'),
(24, 2448, '4', -1.73677, 22, 0, '2017-09-13 05:53:37'),
(13, 398, '0', -0.0075, 20, 0, '2017-09-13 05:53:38'),
(19, 2404, '1', 1.4518, 28, 1, '2017-09-13 05:53:38'),
(27, 1121, '4', 0.27, 14, 1, '2017-09-13 05:53:38'),
(16, 2865, '3', 2.789, 10, 1, '2017-09-13 05:53:40'),
(12, 1913, '0', -0.000833333, 60, 0, '2017-09-13 05:53:40'),
(14, 3402, '4', -0.495117, 19, 0, '2017-09-13 05:53:40'),
(7, 2819, '0', 0, 6, -1, '2017-09-13 05:53:41'),
(9, 1216, '4', 0.0208333, 22, 1, '2017-09-13 05:53:41'),
(28, 768, '3', 1.88021, 10, 1, '2017-09-13 05:53:42'),
(5, 2605, '2', 1.17188, 15, 1, '2017-09-13 05:53:42'),
(25, 2629, '1', 1.55, 29, 1, '2017-09-13 05:53:43'),
(10, 1945, '0', -0.310723, 30, 0, '2017-09-13 05:53:44'),
(7, 2734, '0', 0, 3, -1, '2017-09-13 05:53:44'),
(19, 1137, '2', 1.47, 6, 1, '2017-09-13 05:53:44'),
(16, 2870, '2', -2.87619, 6, 0, '2017-09-13 05:53:46'),
(5, 2601, '2', 2.1675, 6, 1, '2017-09-13 05:53:48'),
(30, 1483, '2', -0.207756, 28, 0, '2017-09-13 05:53:50'),
(28, 470, '0', 0, 8, -1, '2017-09-13 05:53:50'),
(29, 470, '4', 1.26865, 29, 1, '2017-09-13 05:53:50'),
(27, 386, '1', -0.48, 12, 0, '2017-09-13 05:53:51'),
(8, 737, '0', -0.001875, 40, 0, '2017-09-13 05:53:51'),
(21, 397, '0', -0.0075, 20, 0, '2017-09-13 05:53:52'),
(2, 1216, '4', 0.255208, 17, 1, '2017-09-13 05:53:52'),
(13, 1122, '3', -0.1875, 15, 0, '2017-09-13 05:53:53'),
(19, 2418, '2', 2.23172, 11, 1, '2017-09-13 05:53:55'),
(24, 1147, '4', 0.0075, 19, 1, '2017-09-13 05:53:56'),
(9, 1194, '1', 0.55102, 16, 1, '2017-09-13 05:53:57'),
(16, 2861, '2', 2.74383, 12, 1, '2017-09-13 05:53:58'),
(1, 598, '2', -0.563333, 34, 0, '2017-09-13 05:53:58'),
(21, 1138, '2', 0.9075, 9, 1, '2017-09-13 05:54:01'),
(3, 3426, '3', -0.0759298, 37, 0, '2017-09-13 05:54:01'),
(14, 3400, '2', -0.354492, 21, 0, '2017-09-13 05:54:02'),
(28, 773, '3', 1.54395, 13, 1, '2017-09-13 05:54:02'),
(4, 2923, '3', 2.27019, 34, 1, '2017-09-13 05:54:02'),
(22, 740, '0', -0.00231481, 36, 0, '2017-09-13 05:54:03'),
(5, 2615, '1', 0.9075, 18, 1, '2017-09-13 05:54:05'),
(7, 2825, '4', -1.20333, 22, 0, '2017-09-13 05:54:05'),
(17, 797, '1', 1.54495, 29, 1, '2017-09-13 05:54:06'),
(25, 2634, '4', 1.85, 23, 1, '2017-09-13 05:54:06'),
(27, 1116, '4', 0.1875, 15, 1, '2017-09-13 05:54:06'),
(13, 367, '3', 0.12, 16, 1, '2017-09-13 05:54:09'),
(16, 2820, '1', -2.76655, 11, 0, '2017-09-13 05:54:09'),
(2, 1172, '4', 0.03, 18, 1, '2017-09-13 05:54:10'),
(26, 2835, '0', -0.05, 60, 0, '2017-09-13 05:54:10'),
(28, 491, '3', 1.86981, 8, 1, '2017-09-13 05:54:10'),
(21, 1130, '3', -0.75, 10, 0, '2017-09-13 05:54:12'),
(18, 2457, '2', 1.18548, 75, 1, '2017-09-13 05:54:12'),
(4, 2931, '4', 2.80416, 11, 1, '2017-09-13 05:54:13'),
(30, 1470, '1', 0.8748, 23, 1, '2017-09-13 05:54:13'),
(16, 2838, '3', 2.89738, 5, 1, '2017-09-13 05:54:13'),
(8, 465, '2', 0.163333, 23, 1, '2017-09-13 05:54:13'),
(27, 373, '3', -1.08, 8, 0, '2017-09-13 05:54:14'),
(5, 2611, '3', 1.80187, 9, 1, '2017-09-13 05:54:15'),
(7, 2835, '4', -2.1675, 9, 0, '2017-09-13 05:54:15'),
(19, 378, '0', -0.0075, 20, 0, '2017-09-13 05:54:16'),
(16, 2734, '3', 2.89738, 5, 1, '2017-09-13 05:54:19'),
(9, 1183, '0', -0.00619835, 22, 0, '2017-09-13 05:54:19'),
(5, 2606, '1', 2.29688, 5, 1, '2017-09-13 05:54:20'),
(25, 2632, '3', 2.25, 15, 1, '2017-09-13 05:54:21'),
(4, 2918, '4', -2.86026, 8, 0, '2017-09-13 05:54:21'),
(28, 471, '2', 1.20333, 11, 1, '2017-09-13 05:54:22'),
(3, 3418, '1', 0.892562, 20, 1, '2017-09-13 05:54:22'),
(17, 782, '2', 2.19301, 18, 1, '2017-09-13 05:54:24'),
(30, 1482, '2', -1.6875, 11, 0, '2017-09-13 05:54:24'),
(24, 2454, '2', 1.91334, 29, 1, '2017-09-13 05:54:24'),
(16, 2845, '1', 2.87619, 6, 1, '2017-09-13 05:54:25'),
(7, 2735, '2', -2.08333, 10, 0, '2017-09-13 05:54:25'),
(13, 1114, '0', 0, 16, -1, '2017-09-13 05:54:25'),
(8, 466, '4', -1.08, 12, 0, '2017-09-13 05:54:25'),
(4, 2924, '3', -2.86026, 8, 0, '2017-09-13 05:54:29'),
(13, 369, '2', 1.6875, 5, 1, '2017-09-13 05:54:30'),
(28, 484, '1', 2.04726, 8, 1, '2017-09-13 05:54:30'),
(22, 757, '2', 0.567108, 26, 1, '2017-09-13 05:54:30'),
(14, 3411, '2', -0.0133333, 28, 0, '2017-09-13 05:54:30'),
(8, 723, '1', 2.22454, 5, 1, '2017-09-13 05:54:31'),
(27, 2413, '4', -1.99374, 17, 0, '2017-09-13 05:54:31'),
(7, 2852, '3', -2.43, 6, 0, '2017-09-13 05:54:31'),
(21, 377, '0', -0.0075, 20, 0, '2017-09-13 05:54:32'),
(24, 1152, '1', -1.08, 8, 0, '2017-09-13 05:54:33'),
(2, 1227, '0', -0.00520833, 24, 0, '2017-09-13 05:54:34'),
(29, 770, '2', 0.22714, 47, 1, '2017-09-13 05:54:37'),
(27, 2404, '2', -2.68277, 5, 0, '2017-09-13 05:54:37'),
(8, 487, '4', 2.1675, 6, 1, '2017-09-13 05:54:37'),
(5, 2631, '3', 2.1, 18, 1, '2017-09-13 05:54:38'),
(16, 2729, '1', -2.76548, 13, 0, '2017-09-13 05:54:38'),
(7, 2733, '3', -2.34083, 7, 0, '2017-09-13 05:54:38'),
(14, 3398, '2', -1.29199, 11, 0, '2017-09-13 05:54:42'),
(21, 2420, '3', 2.46387, 9, 1, '2017-09-13 05:54:42'),
(4, 2921, '4', -2.78495, 12, 0, '2017-09-13 05:54:42'),
(2, 1190, '4', 1.53061, 8, 1, '2017-09-13 05:54:42'),
(26, 2732, '4', 1.3, 34, 1, '2017-09-13 05:54:43'),
(13, 1117, '2', 0.27, 14, 1, '2017-09-13 05:54:44'),
(22, 474, '1', 1.17188, 15, 1, '2017-09-13 05:54:44'),
(5, 2618, '3', 2.65, 7, 1, '2017-09-13 05:54:45'),
(17, 790, '2', -1.69582, 23, 0, '2017-09-13 05:54:47'),
(19, 2411, '1', -1.54736, 31, 0, '2017-09-13 05:54:47'),
(8, 735, '4', 1.20333, 11, 1, '2017-09-13 05:54:48'),
(7, 2841, '3', 2.08333, 10, 1, '2017-09-13 05:54:48'),
(28, 776, '4', -1.76087, 19, 0, '2017-09-13 05:54:49'),
(18, 2443, '1', -1.79348, 37, 0, '2017-09-13 05:54:50'),
(15, 2443, '1', -0.163043, 87, 0, '2017-09-13 05:54:50'),
(3, 3423, '1', 0.26188, 31, 1, '2017-09-13 05:54:53'),
(26, 2729, '2', 2.55, 9, 1, '2017-09-13 05:54:53'),
(13, 2400, '1', -2.05959, 12, 0, '2017-09-13 05:54:56'),
(27, 390, '2', 0, 20, 0, '2017-09-13 05:54:56'),
(9, 1261, '2', 0, 38, 0, '2017-09-13 05:54:58'),
(30, 1486, '3', -0.1875, 33, 0, '2017-09-13 05:54:58'),
(4, 2902, '2', 2.62572, 17, 1, '2017-09-13 05:54:58'),
(19, 400, '1', -0.3675, 13, 0, '2017-09-13 05:55:01'),
(1, 602, '4', -0.000732422, 63, 0, '2017-09-13 05:55:02'),
(1, 403, '4', 2.25333, 8, 1, '2017-09-13 05:55:09'),
(18, 1152, '1', -0.15, 19, 0, '2017-09-13 05:55:09'),
(15, 1153, '0', -0.15, 20, 0, '2017-09-13 05:55:10'),
(14, 3401, '4', -0.0117188, 30, 0, '2017-09-13 05:55:11'),
(21, 2432, '4', 1.47, 33, 1, '2017-09-13 05:55:14'),
(13, 376, '0', 0, 18, -1, '2017-09-13 05:55:14'),
(1, 850, '3', 2.34083, 7, 1, '2017-09-13 05:55:16'),
(27, 378, '0', -0.0075, 20, 0, '2017-09-13 05:55:17'),
(18, 1109, '3', 1.08, 8, 1, '2017-09-13 05:55:17'),
(5, 2622, '2', 1.3, 34, 1, '2017-09-13 05:55:19'),
(2, 1261, '1', -0.00207756, 37, 0, '2017-09-13 05:55:19'),
(9, 1227, '3', 0.0208333, 22, 1, '2017-09-13 05:55:21'),
(29, 763, '1', -0.370939, 44, 0, '2017-09-13 05:55:21'),
(19, 393, '0', -0.0075, 20, 0, '2017-09-13 05:55:21'),
(25, 2852, '0', -0.195743, 60, 0, '2017-09-13 05:55:22'),
(7, 2845, '3', -0.563333, 34, 0, '2017-09-13 05:55:23'),
(17, 798, '3', -0.880815, 37, 0, '2017-09-13 05:55:23'),
(8, 729, '0', -0.00231481, 36, 0, '2017-09-13 05:55:25'),
(28, 488, '0', -0.00231481, 36, 0, '2017-09-13 05:55:25'),
(27, 1109, '4', -1.08, 8, 0, '2017-09-13 05:55:25'),
(30, 1497, '2', 0.333333, 28, 1, '2017-09-13 05:55:26'),
(15, 2451, '2', -2.625, 17, 0, '2017-09-13 05:55:27'),
(3, 3434, '1', 0.154959, 34, 1, '2017-09-13 05:55:27'),
(14, 3397, '2', 0.75, 16, 1, '2017-09-13 05:55:28'),
(18, 1156, '1', 1.35, 11, 1, '2017-09-13 05:55:29'),
(22, 749, '2', 0.0208333, 44, 1, '2017-09-13 05:55:29'),
(7, 2820, '1', -2.34083, 7, 0, '2017-09-13 05:55:30'),
(13, 393, '0', 0, 15, -1, '2017-09-13 05:55:30'),
(1, 853, '2', 1.76333, 14, 1, '2017-09-13 05:55:31'),
(15, 384, '3', -1.92, 4, 0, '2017-09-13 05:55:31'),
(28, 763, '3', -2.04726, 8, 0, '2017-09-13 05:55:33'),
(21, 390, '0', -0.0075, 20, 0, '2017-09-13 05:55:35'),
(17, 495, '4', -2.2693, 13, 0, '2017-09-13 05:55:37'),
(2, 1173, '0', -0.0075, 20, 0, '2017-09-13 05:55:40'),
(9, 1172, '0', -0.0075, 20, 0, '2017-09-13 05:55:41'),
(19, 377, '0', -0.0075, 20, 0, '2017-09-13 05:55:41'),
(7, 2833, '1', -1.92, 12, 0, '2017-09-13 05:55:42'),
(1, 600, '3', 1.85204, 12, 1, '2017-09-13 05:55:43'),
(29, 766, '1', 1.7679, 23, 1, '2017-09-13 05:55:44'),
(4, 2907, '3', 1.67615, 46, 1, '2017-09-13 05:55:44'),
(27, 1115, '1', 0, 20, 1, '2017-09-13 05:55:45'),
(13, 378, '2', -0.0075, 19, 0, '2017-09-13 05:55:48'),
(24, 1, '2', -0.1875, 15, 0, '2017-09-13 05:55:50'),
(1, 613, '1', -2.08333, 10, 0, '2017-09-13 05:55:53'),
(26, 2735, '0', -0.05, 60, 0, '2017-09-13 05:55:53'),
(18, 2453, '2', -2.44853, 25, 0, '2017-09-13 05:55:54'),
(27, 368, '3', 0.9075, 9, 1, '2017-09-13 05:55:54'),
(7, 2862, '1', -1.84083, 13, 0, '2017-09-13 05:55:55'),
(21, 2408, '3', 1.78674, 21, 1, '2017-09-13 05:55:55'),
(3, 3424, '1', -0.447831, 27, 0, '2017-09-13 05:55:55'),
(13, 374, '4', 1.2675, 7, 1, '2017-09-13 05:55:56'),
(5, 2626, '3', 1.2, 36, 1, '2017-09-13 05:55:56'),
(24, 88, '1', 1.47, 6, 1, '2017-09-13 05:55:56'),
(30, 3076, '0', -0.00333333, 30, 0, '2017-09-13 05:55:56'),
(17, 779, '2', -2.05084, 20, 0, '2017-09-13 05:55:57'),
(28, 758, '2', -0.351108, 25, 0, '2017-09-13 05:55:59'),
(29, 777, '2', 2.30599, 15, 1, '2017-09-13 05:55:59'),
(19, 396, '1', -0.0075, 19, 0, '2017-09-13 05:56:01'),
(7, 2865, '1', -2.43, 6, 0, '2017-09-13 05:56:01'),
(4, 2926, '3', 2.70534, 16, 1, '2017-09-13 05:56:01'),
(2, 1174, '3', 0.0177515, 24, 1, '2017-09-13 05:56:04'),
(24, 17, '1', 0.9075, 9, 1, '2017-09-13 05:56:05'),
(8, 498, '0', -0.001875, 40, 0, '2017-09-13 05:56:05'),
(16, 1276, '0', -0.00292969, 32, 0, '2017-09-13 05:56:06'),
(21, 366, '4', 0.6075, 11, 1, '2017-09-13 05:56:06'),
(9, 1292, '2', -0.03, 27, 0, '2017-09-13 05:56:08'),
(7, 2874, '1', 2.34083, 7, 1, '2017-09-13 05:56:08'),
(19, 1140, '1', 1.08, 8, 1, '2017-09-13 05:56:08'),
(27, 367, '4', -0.27, 14, 0, '2017-09-13 05:56:08'),
(22, 745, '0', -0.001875, 40, 0, '2017-09-13 05:56:10'),
(1, 1311, '4', 1.2288, 18, 1, '2017-09-13 05:56:11'),
(24, 12, '2', -1.2675, 7, 0, '2017-09-13 05:56:12'),
(27, 401, '4', 1.92, 4, 1, '2017-09-13 05:56:12'),
(8, 725, '1', -1.75433, 8, 0, '2017-09-13 05:56:12'),
(28, 777, '4', -1.4518, 14, 0, '2017-09-13 05:56:13'),
(30, 1506, '2', -1.3068, 17, 0, '2017-09-13 05:56:14'),
(16, 1196, '4', 0.880208, 11, 1, '2017-09-13 05:56:18'),
(19, 366, '4', 0.6075, 11, 1, '2017-09-13 05:56:19'),
(11, 363, '3', 1.47, 6, 1, '2017-09-13 05:56:20'),
(24, 19, '4', -1.08, 8, 0, '2017-09-13 05:56:20'),
(2, 1195, '4', 0.0675, 17, 1, '2017-09-13 05:56:22'),
(4, 2934, '0', 0, 21, -1, '2017-09-13 05:56:22'),
(1, 1318, '2', 1.93718, 11, 1, '2017-09-13 05:56:22');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(25, 2731, '0', -0.195743, 60, 0, '2017-09-13 05:56:23'),
(9, 1198, '1', -0.1875, 15, 0, '2017-09-13 05:56:23'),
(26, 2819, '2', 1.45, 31, 1, '2017-09-13 05:56:24'),
(11, 1110, '2', 2.1675, 3, 1, '2017-09-13 05:56:24'),
(5, 2625, '3', 1.6, 28, 1, '2017-09-13 05:56:24'),
(16, 1177, '2', 1.39463, 7, 1, '2017-09-13 05:56:24'),
(21, 372, '0', -0.0075, 20, 0, '2017-09-13 05:56:26'),
(17, 795, '4', -1.48376, 30, 0, '2017-09-13 05:56:28'),
(26, 2841, '3', 2.83093, 5, 1, '2017-09-13 05:56:29'),
(11, 2416, '3', 2.60486, 6, 1, '2017-09-13 05:56:30'),
(25, 2623, '3', -2.65, 7, 0, '2017-09-13 05:56:30'),
(4, 2914, '1', 2.86026, 8, 1, '2017-09-13 05:56:31'),
(3, 3432, '3', -0.0759298, 37, 0, '2017-09-13 05:56:32'),
(16, 1184, '3', -1.02083, 10, 0, '2017-09-13 05:56:34'),
(29, 765, '2', 0.64633, 36, 1, '2017-09-13 05:56:35'),
(24, 18, '3', -0.1875, 15, 0, '2017-09-13 05:56:35'),
(5, 2621, '3', 2.4, 12, 1, '2017-09-13 05:56:36'),
(21, 2410, '2', 2.26573, 11, 1, '2017-09-13 05:56:37'),
(17, 787, '4', 2.50258, 10, 1, '2017-09-13 05:56:37'),
(7, 2859, '1', -0.75, 30, 0, '2017-09-13 05:56:38'),
(14, 3029, '2', -2.25333, 4, 0, '2017-09-13 05:56:39'),
(19, 392, '2', 0, 20, 0, '2017-09-13 05:56:39'),
(4, 2911, '1', 2.82311, 10, 1, '2017-09-13 05:56:41'),
(13, 2422, '2', -1.26141, 45, 0, '2017-09-13 05:56:41'),
(28, 774, '1', 0.470052, 29, 1, '2017-09-13 05:56:42'),
(8, 472, '3', -0.1875, 30, 0, '2017-09-13 05:56:43'),
(21, 2449, '3', 2.79, 7, 1, '2017-09-13 05:56:44'),
(24, 2, '3', 0.9075, 9, 1, '2017-09-13 05:56:45'),
(30, 1495, '2', 0.205782, 31, 1, '2017-09-13 05:56:45'),
(11, 387, '4', 0.1875, 15, 1, '2017-09-13 05:56:45'),
(29, 492, '3', -2.4211, 11, 0, '2017-09-13 05:56:46'),
(7, 2881, '4', -2.25333, 8, 0, '2017-09-13 05:56:46'),
(25, 2630, '2', 2.2, 16, 1, '2017-09-13 05:56:46'),
(14, 3014, '4', -1.76333, 7, 0, '2017-09-13 05:56:46'),
(9, 1210, '0', -0.00520833, 24, 0, '2017-09-13 05:56:48'),
(22, 476, '0', -0.001875, 40, 0, '2017-09-13 05:56:51'),
(4, 2928, '3', 2.80416, 11, 1, '2017-09-13 05:56:52'),
(25, 2628, '4', -2.75, 5, 0, '2017-09-13 05:56:52'),
(1, 624, '1', 0.653333, 32, 1, '2017-09-13 05:56:55'),
(16, 1292, '2', -0.27, 21, 0, '2017-09-13 05:56:55'),
(19, 373, '2', -0.12, 16, 0, '2017-09-13 05:56:56'),
(3, 3438, '4', -0.259516, 24, 0, '2017-09-13 05:56:56'),
(14, 3053, '2', -1.20333, 11, 0, '2017-09-13 05:56:57'),
(27, 2419, '2', 1.17188, 45, 1, '2017-09-13 05:56:58'),
(30, 1504, '1', 1.98047, 15, 1, '2017-09-13 05:57:00'),
(24, 5, '4', -0.03, 18, 0, '2017-09-13 05:57:02'),
(5, 2730, '3', -1.97297, 28, 0, '2017-09-13 05:57:05'),
(11, 397, '0', -0.0075, 20, 0, '2017-09-13 05:57:05'),
(4, 2948, '2', -2.74572, 14, 0, '2017-09-13 05:57:05'),
(25, 2624, '0', 0, 14, -1, '2017-09-13 05:57:05'),
(2, 1270, '0', -0.00141777, 46, 0, '2017-09-13 05:57:08'),
(24, 4, '3', -1.08, 8, 0, '2017-09-13 05:57:11'),
(19, 374, '4', 0.12, 16, 1, '2017-09-13 05:57:11'),
(28, 761, '3', 0.362949, 30, 1, '2017-09-13 05:57:12'),
(17, 778, '1', -1.31941, 34, 0, '2017-09-13 05:57:12'),
(7, 1172, '1', -0.1875, 15, 0, '2017-09-13 05:57:13'),
(8, 731, '3', -0.113426, 29, 0, '2017-09-13 05:57:13'),
(13, 2411, '2', -1.50843, 32, 0, '2017-09-13 05:57:13'),
(4, 2940, '3', -2.86026, 8, 0, '2017-09-13 05:57:13'),
(29, 769, '1', 1.46402, 29, 1, '2017-09-13 05:57:15'),
(21, 2453, '4', 2.25, 34, 1, '2017-09-13 05:57:18'),
(27, 394, '0', -0.0075, 20, 0, '2017-09-13 05:57:18'),
(6, 2419, '2', 0.541875, 69, 1, '2017-09-13 05:57:19'),
(4, 2957, '1', -2.89647, 6, 0, '2017-09-13 05:57:20'),
(13, 1104, '3', 1.2675, 7, 1, '2017-09-13 05:57:20'),
(14, 3075, '3', 0.0833333, 25, 1, '2017-09-13 05:57:22'),
(25, 2622, '1', -2.15, 17, 0, '2017-09-13 05:57:23'),
(5, 2630, '2', 2.05, 19, 1, '2017-09-13 05:57:24'),
(11, 383, '4', 0.0075, 19, 1, '2017-09-13 05:57:24'),
(22, 477, '3', -0.204159, 34, 0, '2017-09-13 05:57:25'),
(28, 759, '3', 1.63894, 12, 1, '2017-09-13 05:57:25'),
(24, 10, '3', -0.1875, 15, 0, '2017-09-13 05:57:25'),
(3, 3462, '2', -0.0934256, 28, 0, '2017-09-13 05:57:25'),
(9, 1263, '3', -0.0075, 38, 0, '2017-09-13 05:57:25'),
(8, 509, '1', 1.22454, 13, 1, '2017-09-13 05:57:25'),
(27, 2403, '2', 2.43, 9, 1, '2017-09-13 05:57:27'),
(6, 1138, '1', -0.9075, 9, 0, '2017-09-13 05:57:28'),
(17, 781, '2', -2.28943, 16, 0, '2017-09-13 05:57:28'),
(13, 1116, '4', 1.2675, 7, 1, '2017-09-13 05:57:28'),
(14, 3059, '1', 1.76333, 7, 1, '2017-09-13 05:57:29'),
(26, 2845, '0', -0.195743, 60, 0, '2017-09-13 05:57:29'),
(25, 2620, '4', 2.7, 6, 1, '2017-09-13 05:57:29'),
(24, 11, '1', 1.6875, 5, 1, '2017-09-13 05:57:30'),
(1, 619, '0', 0, 35, -1, '2017-09-13 05:57:30'),
(19, 398, '3', -0.03, 18, 0, '2017-09-13 05:57:30'),
(11, 376, '1', -1.47, 6, 0, '2017-09-13 05:57:30'),
(8, 494, '3', 2.08333, 5, 1, '2017-09-13 05:57:31'),
(21, 2444, '0', 0, 13, -1, '2017-09-13 05:57:31'),
(5, 2816, '4', 2.69195, 9, 1, '2017-09-13 05:57:33'),
(27, 374, '1', -0.9075, 9, 0, '2017-09-13 05:57:36'),
(4, 2959, '2', -2.70534, 16, 0, '2017-09-13 05:57:36'),
(2, 1185, '3', 0, 28, 0, '2017-09-13 05:57:37'),
(7, 1227, '0', -0.00520833, 24, 0, '2017-09-13 05:57:37'),
(24, 3, '3', 1.08, 8, 1, '2017-09-13 05:57:38'),
(6, 373, '1', 0.6075, 11, 1, '2017-09-13 05:57:39'),
(28, 771, '1', 1.4518, 14, 1, '2017-09-13 05:57:39'),
(29, 471, '2', 0.90856, 25, 1, '2017-09-13 05:57:40'),
(21, 1149, '1', 1.65, 9, 1, '2017-09-13 05:57:40'),
(17, 788, '1', 2.07143, 13, 1, '2017-09-13 05:57:41'),
(3, 3453, '1', -0.84083, 16, 0, '2017-09-13 05:57:41'),
(16, 1270, '0', -0.00141777, 46, 0, '2017-09-13 05:57:42'),
(19, 1104, '3', 0.48, 12, 1, '2017-09-13 05:57:42'),
(14, 3134, '3', -1.2675, 14, 0, '2017-09-13 05:57:44'),
(4, 2939, '0', 0, 8, -1, '2017-09-13 05:57:44'),
(27, 1105, '2', 0.9075, 9, 1, '2017-09-13 05:57:46'),
(30, 1503, '0', -0.00141777, 46, 0, '2017-09-13 05:57:46'),
(28, 493, '1', 1.47, 9, 1, '2017-09-13 05:57:48'),
(5, 2847, '4', 2.47645, 15, 1, '2017-09-13 05:57:48'),
(13, 370, '0', -0.0075, 20, 0, '2017-09-13 05:57:48'),
(29, 768, '3', 2.61218, 9, 1, '2017-09-13 05:57:49'),
(26, 2733, '2', 2.25111, 21, 1, '2017-09-13 05:57:49'),
(9, 1169, '0', -0.00520833, 24, 0, '2017-09-13 05:57:50'),
(11, 394, '0', -0.0075, 20, 0, '2017-09-13 05:57:51'),
(1, 614, '3', 1.12037, 21, 1, '2017-09-13 05:57:51'),
(16, 1198, '4', 0.9075, 9, 1, '2017-09-13 05:57:51'),
(6, 391, '1', -0.48, 12, 0, '2017-09-13 05:57:52'),
(24, 7, '2', -0.27, 14, 0, '2017-09-13 05:57:52'),
(4, 2945, '4', 2.82311, 10, 1, '2017-09-13 05:57:54'),
(8, 733, '2', -0.421875, 25, 0, '2017-09-13 05:57:55'),
(6, 2400, '3', 2.58673, 5, 1, '2017-09-13 05:57:56'),
(17, 500, '3', -2.19301, 15, 0, '2017-09-13 05:57:56'),
(14, 3064, '4', 0.963333, 13, 1, '2017-09-13 05:57:57'),
(19, 376, '1', -0.1875, 15, 0, '2017-09-13 05:57:57'),
(3, 3451, '3', 0.75, 17, 1, '2017-09-13 05:57:58'),
(28, 772, '3', 2.3125, 11, 1, '2017-09-13 05:57:59'),
(29, 488, '3', 2.35259, 11, 1, '2017-09-13 05:58:00'),
(26, 2838, '3', 2.62111, 11, 1, '2017-09-13 05:58:01'),
(9, 1173, '2', 0.6075, 11, 1, '2017-09-13 05:58:01'),
(11, 2432, '3', -2.47934, 10, 0, '2017-09-13 05:58:01'),
(7, 1169, '2', 0.00520833, 23, 1, '2017-09-13 05:58:01'),
(8, 464, '3', 1.77515, 6, 1, '2017-09-13 05:58:02'),
(21, 2443, '4', 2.28261, 22, 1, '2017-09-13 05:58:02'),
(14, 3010, '4', 2.08333, 5, 1, '2017-09-13 05:58:02'),
(24, 14, '1', 0.6075, 11, 1, '2017-09-13 05:58:04'),
(22, 480, '0', -0.001875, 40, 0, '2017-09-13 05:58:05'),
(29, 491, '1', -2.67526, 6, 0, '2017-09-13 05:58:06'),
(27, 372, '0', -0.0075, 20, 0, '2017-09-13 05:58:06'),
(16, 1197, '3', -0.421875, 15, 0, '2017-09-13 05:58:07'),
(13, 399, '3', 0, 20, 0, '2017-09-13 05:58:08'),
(2, 1276, '2', 0, 32, 0, '2017-09-13 05:58:09'),
(1, 1303, '1', 1.40083, 19, 1, '2017-09-13 05:58:10'),
(7, 1186, '3', 1.38138, 9, 1, '2017-09-13 05:58:10'),
(4, 2950, '4', -2.66371, 18, 0, '2017-09-13 05:58:12'),
(8, 490, '3', -1.56481, 10, 0, '2017-09-13 05:58:12'),
(13, 401, '3', -1.92, 4, 0, '2017-09-13 05:58:12'),
(24, 8, '4', -0.75, 10, 0, '2017-09-13 05:58:13'),
(11, 381, '1', 0.3675, 13, 1, '2017-09-13 05:58:13'),
(28, 769, '2', -1.97727, 15, 0, '2017-09-13 05:58:14'),
(6, 400, '4', 0.0675, 17, 1, '2017-09-13 05:58:14'),
(9, 1186, '3', 0.860969, 13, 1, '2017-09-13 05:58:14'),
(16, 1172, '4', 0.9075, 9, 1, '2017-09-13 05:58:16'),
(19, 1136, '3', 0, 20, 0, '2017-09-13 05:58:17'),
(28, 767, '2', -2.8125, 3, 0, '2017-09-13 05:58:17'),
(1, 594, '3', 2.0172, 9, 1, '2017-09-13 05:58:19'),
(4, 2955, '3', -2.87848, 7, 0, '2017-09-13 05:58:20'),
(8, 718, '1', 1.61333, 8, 1, '2017-09-13 05:58:20'),
(9, 1177, '2', 1.21488, 8, 1, '2017-09-13 05:58:22'),
(6, 375, '1', 0.9075, 9, 1, '2017-09-13 05:58:22'),
(13, 389, '3', -0.6075, 11, 0, '2017-09-13 05:58:23'),
(7, 1183, '2', 0.396694, 14, 1, '2017-09-13 05:58:24'),
(15, 5, '3', 0.48, 12, 1, '2017-09-13 05:58:25'),
(11, 1120, '4', -0.48, 12, 0, '2017-09-13 05:58:25'),
(5, 2735, '3', -1.58309, 37, 0, '2017-09-13 05:58:26'),
(3, 3442, '2', -0.0934256, 28, 0, '2017-09-13 05:58:26'),
(27, 383, '0', -0.0075, 20, 0, '2017-09-13 05:58:26'),
(18, 16, '1', 0.6075, 11, 1, '2017-09-13 05:58:27'),
(19, 402, '1', -0.9075, 9, 0, '2017-09-13 05:58:27'),
(26, 2728, '4', 1.93165, 29, 1, '2017-09-13 05:58:29'),
(24, 16, '2', -0.0675, 17, 0, '2017-09-13 05:58:30'),
(25, 2616, '0', -0.05, 60, 0, '2017-09-13 05:58:30'),
(16, 1263, '3', -1.08, 16, 0, '2017-09-13 05:58:32'),
(30, 1498, '2', -0.00520833, 46, 0, '2017-09-13 05:58:32'),
(14, 3086, '0', -0.00333333, 30, 0, '2017-09-13 05:58:33'),
(13, 392, '3', 0.75, 10, 1, '2017-09-13 05:58:33'),
(8, 732, '1', -1.22454, 13, 0, '2017-09-13 05:58:33'),
(19, 2406, '1', -2.54171, 7, 0, '2017-09-13 05:58:34'),
(27, 1114, '3', -1.08, 8, 0, '2017-09-13 05:58:35'),
(6, 1139, '2', 0.3675, 13, 1, '2017-09-13 05:58:36'),
(15, 7, '2', -0.6075, 11, 0, '2017-09-13 05:58:36'),
(25, 2626, '3', 2.65, 7, 1, '2017-09-13 05:58:37'),
(4, 2894, '4', -2.62572, 17, 0, '2017-09-13 05:58:37'),
(24, 6, '3', -1.2675, 7, 0, '2017-09-13 05:58:38'),
(21, 2654, '4', -2.3166, 36, 0, '2017-09-13 05:58:39'),
(2, 1203, '3', 0, 30, 1, '2017-09-13 05:58:39'),
(7, 1174, '3', 0.536982, 15, 1, '2017-09-13 05:58:40'),
(13, 402, '3', 1.2675, 7, 1, '2017-09-13 05:58:41'),
(9, 1297, '3', 1.47, 18, 1, '2017-09-13 05:58:41'),
(27, 393, '3', -1.2675, 7, 0, '2017-09-13 05:58:41'),
(18, 7, '2', -0.1875, 15, 0, '2017-09-13 05:58:42'),
(5, 2734, '3', 2.40251, 17, 1, '2017-09-13 05:58:43'),
(24, 9, '2', 1.47, 6, 1, '2017-09-13 05:58:43'),
(25, 2619, '3', 2.65, 7, 1, '2017-09-13 05:58:44'),
(1, 1103, '3', -1.95833, 25, 0, '2017-09-13 05:58:44'),
(27, 1117, '3', -2.1675, 3, 0, '2017-09-13 05:58:45'),
(14, 3025, '3', 1.08, 12, 1, '2017-09-13 05:58:45'),
(15, 17, '1', 0.9075, 9, 1, '2017-09-13 05:58:45'),
(29, 760, '2', -0.256496, 39, 0, '2017-09-13 05:58:45'),
(11, 399, '0', -0.0075, 20, 0, '2017-09-13 05:58:46'),
(16, 1195, '4', 0.27, 14, 1, '2017-09-13 05:58:46'),
(4, 2898, '4', 2.789, 10, 1, '2017-09-13 05:58:47'),
(19, 1121, '2', -0.27, 14, 0, '2017-09-13 05:58:48'),
(22, 751, '0', -0.00154959, 44, 0, '2017-09-13 05:58:50'),
(24, 13, '4', -0.75, 10, 0, '2017-09-13 05:58:53'),
(3, 3446, '2', 0.127163, 27, 1, '2017-09-13 05:58:53'),
(16, 1194, '1', 1.53061, 8, 1, '2017-09-13 05:58:55'),
(5, 2732, '3', -2.54929, 13, 0, '2017-09-13 05:58:55'),
(15, 1, '4', 0.6075, 11, 1, '2017-09-13 05:58:56'),
(6, 393, '0', -0.0075, 20, 0, '2017-09-13 05:58:56'),
(26, 2734, '2', -1.97297, 28, 0, '2017-09-13 05:58:57'),
(2, 1263, '2', -0.9075, 18, 0, '2017-09-13 05:58:57'),
(4, 2892, '2', 2.76655, 11, 1, '2017-09-13 05:58:58'),
(18, 4, '2', -0.12, 16, 0, '2017-09-13 05:58:58'),
(14, 3091, '2', 0.963333, 13, 1, '2017-09-13 05:58:58'),
(25, 2841, '3', 2.47645, 15, 1, '2017-09-13 05:58:59'),
(11, 1116, '4', 0.1875, 15, 1, '2017-09-13 05:59:01'),
(16, 1186, '3', 1.53061, 8, 1, '2017-09-13 05:59:02'),
(6, 364, '2', 1.2675, 7, 1, '2017-09-13 05:59:03'),
(27, 398, '0', -0.0075, 20, 0, '2017-09-13 05:59:05'),
(30, 1502, '3', -0.277883, 32, 0, '2017-09-13 05:59:06'),
(9, 1203, '3', 0.03, 27, 1, '2017-09-13 05:59:08'),
(27, 2400, '3', 2.66694, 4, 1, '2017-09-13 05:59:08'),
(19, 384, '0', -0.0075, 20, 0, '2017-09-13 05:59:08'),
(4, 2937, '4', -2.80416, 11, 0, '2017-09-13 05:59:09'),
(1, 593, '1', 0.963333, 26, 1, '2017-09-13 05:59:10'),
(2, 1197, '1', 0.520833, 14, 1, '2017-09-13 05:59:12'),
(5, 2729, '2', 2.43962, 16, 1, '2017-09-13 05:59:12'),
(8, 728, '0', -0.00207756, 38, 0, '2017-09-13 05:59:12'),
(11, 1114, '3', -0.6075, 11, 0, '2017-09-13 05:59:12'),
(24, 30, '2', 0.0075, 19, 1, '2017-09-13 05:59:12'),
(16, 1170, '2', 1.02083, 10, 1, '2017-09-13 05:59:13'),
(14, 3082, '3', 0.853333, 14, 1, '2017-09-13 05:59:13'),
(25, 2728, '2', -2.513, 14, 0, '2017-09-13 05:59:13'),
(18, 8, '1', -0.12, 16, 0, '2017-09-13 05:59:14'),
(15, 16, '3', -0.0075, 19, 0, '2017-09-13 05:59:15'),
(22, 482, '4', 0.491497, 25, 1, '2017-09-13 05:59:15'),
(27, 2416, '3', 2.47934, 8, 1, '2017-09-13 05:59:16'),
(26, 2847, '4', 2.32743, 19, 1, '2017-09-13 05:59:16'),
(7, 1261, '0', -0.00207756, 38, 0, '2017-09-13 05:59:18'),
(11, 2403, '2', 2.55148, 7, 1, '2017-09-13 05:59:19'),
(6, 1105, '2', 0.0675, 17, 1, '2017-09-13 05:59:20'),
(29, 767, '1', 1.19055, 36, 1, '2017-09-13 05:59:21'),
(4, 2900, '2', 2.74383, 12, 1, '2017-09-13 05:59:21'),
(3, 3450, '1', -0.0934256, 28, 0, '2017-09-13 05:59:21'),
(2, 1292, '2', -1.33333, 10, 0, '2017-09-13 05:59:21'),
(19, 363, '1', -0.3675, 13, 0, '2017-09-13 05:59:22'),
(21, 2457, '2', 1.93548, 44, 1, '2017-09-13 05:59:22'),
(24, 23, '1', 0.75, 10, 1, '2017-09-13 05:59:23'),
(30, 1489, '3', -0.89966, 19, 0, '2017-09-13 05:59:25'),
(18, 88, '1', 0.6075, 11, 1, '2017-09-13 05:59:26'),
(16, 1174, '3', 0.536982, 15, 1, '2017-09-13 05:59:27'),
(9, 1195, '4', 0, 20, 1, '2017-09-13 05:59:28'),
(26, 2730, '4', 2.513, 14, 1, '2017-09-13 05:59:30'),
(7, 1216, '4', 0.75, 12, 1, '2017-09-13 05:59:31'),
(2, 1170, '2', 1.02083, 10, 1, '2017-09-13 05:59:31'),
(8, 719, '3', 0.592593, 20, 1, '2017-09-13 05:59:32'),
(15, 18, '4', 0.0675, 17, 1, '2017-09-13 05:59:32'),
(29, 762, '1', -2.30847, 13, 0, '2017-09-13 05:59:34'),
(14, 3031, '2', -0.213333, 22, 0, '2017-09-13 05:59:35'),
(3, 3455, '2', -1.03806, 14, 0, '2017-09-13 05:59:35'),
(8, 486, '1', 2.52083, 3, 1, '2017-09-13 05:59:35'),
(1, 603, '1', 0.693417, 27, 1, '2017-09-13 05:59:38'),
(2, 1169, '2', 1.50521, 7, 1, '2017-09-13 05:59:39'),
(24, 40, '2', -0.0675, 17, 0, '2017-09-13 05:59:39'),
(27, 2431, '4', 1.73677, 22, 1, '2017-09-13 05:59:39'),
(11, 372, '0', -0.0075, 20, 0, '2017-09-13 05:59:40'),
(16, 1169, '2', 0.630208, 13, 1, '2017-09-13 05:59:41'),
(18, 10, '3', -0.0675, 17, 0, '2017-09-13 05:59:42'),
(15, 14, '1', 0.6075, 11, 1, '2017-09-13 05:59:43'),
(8, 724, '4', -1.61333, 8, 0, '2017-09-13 05:59:45'),
(7, 1195, '4', 0.03, 18, 1, '2017-09-13 05:59:49'),
(18, 17, '1', 1.2675, 7, 1, '2017-09-13 05:59:49'),
(4, 2952, '2', 2.43288, 28, 1, '2017-09-13 05:59:49'),
(2, 1177, '2', 0.75, 11, 1, '2017-09-13 05:59:50'),
(24, 31, '3', -0.6075, 11, 0, '2017-09-13 05:59:50'),
(22, 747, '1', -0.00231481, 35, 0, '2017-09-13 05:59:51'),
(21, 2651, '4', 2.28113, 31, 1, '2017-09-13 05:59:53'),
(11, 388, '4', -0.27, 14, 0, '2017-09-13 05:59:53'),
(14, 3038, '1', 0.333333, 20, 1, '2017-09-13 05:59:55'),
(27, 389, '4', -0.12, 16, 0, '2017-09-13 05:59:55'),
(5, 2845, '4', -1.24289, 44, 0, '2017-09-13 05:59:56'),
(8, 726, '1', 1.14446, 13, 1, '2017-09-13 05:59:56'),
(26, 2852, '4', -2.05434, 26, 0, '2017-09-13 05:59:56'),
(3, 3439, '4', 0.438581, 21, 1, '2017-09-13 05:59:57'),
(29, 764, '2', 1.5213, 23, 1, '2017-09-13 05:59:57'),
(9, 1276, '2', -0.0263672, 29, 0, '2017-09-13 05:59:58'),
(1, 1322, '4', -2.0625, 20, 0, '2017-09-13 05:59:58'),
(21, 1158, '2', 2.36512, 6, 1, '2017-09-13 05:59:59'),
(2, 1198, '4', 0.75, 10, 1, '2017-09-13 06:00:00'),
(8, 727, '2', 2.37037, 4, 1, '2017-09-13 06:00:00'),
(24, 25, '3', -0.75, 10, 0, '2017-09-13 06:00:01'),
(15, 4, '2', -0.0075, 19, 0, '2017-09-13 06:00:02'),
(4, 2942, '2', 2.76548, 13, 1, '2017-09-13 06:00:02'),
(11, 401, '3', -0.75, 10, 0, '2017-09-13 06:00:04'),
(26, 2820, '0', 0, 8, -1, '2017-09-13 06:00:05'),
(21, 1165, '4', 2.25111, 7, 1, '2017-09-13 06:00:06'),
(18, 14, '3', -0.0075, 19, 0, '2017-09-13 06:00:08'),
(24, 24, '3', 0.9075, 9, 1, '2017-09-13 06:00:09'),
(7, 1197, '3', -0.046875, 21, 0, '2017-09-13 06:00:10'),
(19, 2427, '4', 1.08, 48, 1, '2017-09-13 06:00:11'),
(1, 596, '2', -1.72942, 13, 0, '2017-09-13 06:00:11'),
(8, 478, '1', -2.34, 11, 0, '2017-09-13 06:00:12'),
(27, 395, '4', -0.12, 16, 0, '2017-09-13 06:00:12'),
(11, 366, '4', 1.08, 8, 1, '2017-09-13 06:00:12'),
(4, 2969, '1', -2.82311, 10, 0, '2017-09-13 06:00:13'),
(5, 2731, '0', 0, 17, -1, '2017-09-13 06:00:13'),
(25, 2835, '0', -0.195743, 60, 0, '2017-09-13 06:00:14'),
(16, 1261, '2', -0.0519391, 33, 0, '2017-09-13 06:00:15'),
(30, 1507, '1', 0.00443787, 50, 1, '2017-09-13 06:00:15'),
(18, 19, '3', -1.08, 8, 0, '2017-09-13 06:00:16'),
(11, 2418, '2', 2.63672, 5, 1, '2017-09-13 06:00:17'),
(6, 2411, '1', -0.696446, 57, 0, '2017-09-13 06:00:18'),
(2, 1291, '4', 0.03, 18, 1, '2017-09-13 06:00:18'),
(21, 2656, '4', -2.82406, 13, 0, '2017-09-13 06:00:19'),
(14, 3085, '1', 0.12, 24, 1, '2017-09-13 06:00:19'),
(15, 8, '1', -0.03, 18, 0, '2017-09-13 06:00:20'),
(8, 481, '2', -1.80187, 9, 0, '2017-09-13 06:00:20'),
(7, 1190, '4', 1.10587, 11, 1, '2017-09-13 06:00:21'),
(11, 364, '2', 1.6875, 5, 1, '2017-09-13 06:00:21'),
(24, 20, '2', 0.27, 14, 1, '2017-09-13 06:00:23'),
(9, 1282, '2', -0.0533333, 26, 0, '2017-09-13 06:00:24'),
(19, 381, '1', 0.27, 14, 1, '2017-09-13 06:00:25'),
(15, 19, '3', -1.6875, 5, 0, '2017-09-13 06:00:26'),
(3, 3456, '4', -0.0648789, 29, 0, '2017-09-13 06:00:26'),
(2, 1194, '1', 1.38138, 9, 1, '2017-09-13 06:00:27'),
(22, 746, '0', -0.00231481, 36, 0, '2017-09-13 06:00:28'),
(11, 373, '2', -1.47, 6, 0, '2017-09-13 06:00:28'),
(6, 1122, '3', -0.6075, 11, 0, '2017-09-13 06:00:29'),
(5, 2733, '2', 2.40251, 17, 1, '2017-09-13 06:00:30'),
(7, 1198, '4', 0.9075, 9, 1, '2017-09-13 06:00:30'),
(9, 1265, '1', -2.24667, 7, 0, '2017-09-13 06:00:31'),
(8, 721, '2', -1.57687, 11, 0, '2017-09-13 06:00:32'),
(27, 384, '3', 0, 20, 0, '2017-09-13 06:00:32'),
(14, 3057, '3', -1.08, 12, 0, '2017-09-13 06:00:32'),
(4, 2979, '1', 2.6424, 19, 1, '2017-09-13 06:00:32'),
(25, 2847, '4', 2.36512, 18, 1, '2017-09-13 06:00:32'),
(21, 1159, '1', 1.48993, 13, 1, '2017-09-13 06:00:32'),
(26, 2823, '4', -1.93165, 29, 0, '2017-09-13 06:00:33'),
(8, 722, '3', 2.67593, 2, 1, '2017-09-13 06:00:34'),
(1, 1308, '3', 1.14083, 23, 1, '2017-09-13 06:00:35'),
(18, 13, '1', 0, 20, 1, '2017-09-13 06:00:37'),
(7, 1173, '2', 1.47, 6, 1, '2017-09-13 06:00:37'),
(24, 38, '2', 0.27, 14, 1, '2017-09-13 06:00:37'),
(30, 1493, '3', -0.6075, 22, 0, '2017-09-13 06:00:38'),
(29, 771, '4', -0.588829, 42, 0, '2017-09-13 06:00:38'),
(2, 1184, '4', 0.75, 12, 1, '2017-09-13 06:00:39'),
(16, 1210, '0', -0.00520833, 24, 0, '2017-09-13 06:00:39'),
(27, 2443, '4', 2.38327, 10, 1, '2017-09-13 06:00:42'),
(5, 2841, '3', 2.58532, 12, 1, '2017-09-13 06:00:42'),
(29, 493, '1', 2.65665, 5, 1, '2017-09-13 06:00:43'),
(18, 3, '3', 1.2675, 7, 1, '2017-09-13 06:00:44'),
(11, 380, '3', -0.12, 16, 0, '2017-09-13 06:00:44'),
(21, 1164, '3', 1.62865, 12, 1, '2017-09-13 06:00:44'),
(2, 1186, '3', 1.85204, 6, 1, '2017-09-13 06:00:45'),
(19, 383, '2', 0, 20, 0, '2017-09-13 06:00:45'),
(14, 3036, '1', 0.853333, 14, 1, '2017-09-13 06:00:45'),
(15, 13, '0', -0.0075, 20, 0, '2017-09-13 06:00:46'),
(16, 1183, '2', 1.04752, 9, 1, '2017-09-13 06:00:48'),
(6, 398, '0', -0.0075, 20, 0, '2017-09-13 06:00:50'),
(24, 39, '2', 0.27, 14, 1, '2017-09-13 06:00:51'),
(1, 622, '2', 1.54083, 17, 1, '2017-09-13 06:00:52'),
(11, 382, '2', -1.08, 8, 0, '2017-09-13 06:00:52'),
(4, 2964, '4', -2.59872, 21, 0, '2017-09-13 06:00:52'),
(27, 2450, '4', -2.55917, 11, 0, '2017-09-13 06:00:53'),
(5, 2825, '3', 2.54929, 13, 1, '2017-09-13 06:00:55'),
(3, 3448, '3', 0.0648789, 29, 1, '2017-09-13 06:00:56'),
(2, 1297, '3', 2.00083, 11, 1, '2017-09-13 06:00:57'),
(15, 12, '4', 0.6075, 11, 1, '2017-09-13 06:00:57'),
(4, 2966, '2', -2.91424, 5, 0, '2017-09-13 06:00:58'),
(16, 1216, '4', 0.880208, 11, 1, '2017-09-13 06:00:59'),
(8, 489, '4', -0.421875, 25, 0, '2017-09-13 06:00:59'),
(26, 2825, '3', 2.05434, 26, 1, '2017-09-13 06:01:00'),
(24, 32, '3', 0.9075, 9, 1, '2017-09-13 06:01:00'),
(18, 2, '2', -0.12, 16, 0, '2017-09-13 06:01:00'),
(11, 375, '1', 1.08, 8, 1, '2017-09-13 06:01:01'),
(29, 758, '4', 1.95562, 18, 1, '2017-09-13 06:01:02'),
(7, 1185, '4', 0.0153061, 26, 1, '2017-09-13 06:01:03'),
(8, 485, '1', 2.26843, 6, 1, '2017-09-13 06:01:05'),
(14, 3088, '2', -0.333333, 20, 0, '2017-09-13 06:01:06'),
(6, 389, '3', -0.0675, 17, 0, '2017-09-13 06:01:07'),
(1, 599, '1', 1.61333, 16, 1, '2017-09-13 06:01:08'),
(15, 2, '1', -0.48, 12, 0, '2017-09-13 06:01:09'),
(5, 2852, '3', -2.513, 14, 0, '2017-09-13 06:01:10'),
(22, 752, '4', -0.0127599, 43, 0, '2017-09-13 06:01:10'),
(16, 1218, '3', -0.48, 12, 0, '2017-09-13 06:01:11'),
(4, 2977, '1', -2.74572, 14, 0, '2017-09-13 06:01:12'),
(11, 2406, '2', -2.17911, 13, 0, '2017-09-13 06:01:14'),
(1, 1329, '3', 2.65, 7, 1, '2017-09-13 06:01:15'),
(24, 36, '4', 0.12, 16, 1, '2017-09-13 06:01:16'),
(6, 2432, '3', -2.38116, 12, 0, '2017-09-13 06:01:18'),
(4, 2906, '3', -2.85477, 7, 0, '2017-09-13 06:01:19'),
(27, 2453, '4', 1.96259, 26, 1, '2017-09-13 06:01:20'),
(9, 1257, '0', -0.00130208, 48, 0, '2017-09-13 06:01:20'),
(18, 11, '2', 0, 20, 0, '2017-09-13 06:01:20'),
(5, 2833, '3', 2.65665, 10, 1, '2017-09-13 06:01:20'),
(2, 1210, '0', -0.00520833, 24, 0, '2017-09-13 06:01:21'),
(26, 2731, '4', 2.17348, 23, 1, '2017-09-13 06:01:23'),
(8, 475, '1', -1.82609, 18, 0, '2017-09-13 06:01:23'),
(16, 1291, '4', 0.48, 12, 1, '2017-09-13 06:01:24'),
(30, 1499, '0', -0.00141777, 46, 0, '2017-09-13 06:01:24'),
(14, 3070, '3', -0.48, 18, 0, '2017-09-13 06:01:25'),
(15, 88, '3', -0.12, 16, 0, '2017-09-13 06:01:25'),
(24, 28, '4', -0.6075, 11, 0, '2017-09-13 06:01:28'),
(7, 1170, '0', -0.00520833, 24, 0, '2017-09-13 06:01:28'),
(11, 1109, '4', -0.27, 14, 0, '2017-09-13 06:01:28'),
(18, 9, '2', 1.08, 8, 1, '2017-09-13 06:01:28'),
(25, 2729, '1', -0.572357, 55, 0, '2017-09-13 06:01:28'),
(4, 2897, '1', -2.789, 10, 0, '2017-09-13 06:01:29'),
(9, 1191, '3', 1.2398, 10, 1, '2017-09-13 06:01:29'),
(3, 3444, '0', -0.00259516, 34, 0, '2017-09-13 06:01:30'),
(21, 2661, '1', -2.43091, 46, 0, '2017-09-13 06:01:30'),
(3, 3463, '0', 0, 1, -1, '2017-09-13 06:01:30'),
(8, 474, '2', -2.04187, 7, 0, '2017-09-13 06:01:30'),
(1, 1326, '1', 2.17241, 16, 1, '2017-09-13 06:01:31'),
(30, 1501, '1', -1.89824, 9, 0, '2017-09-13 06:01:33'),
(26, 2833, '3', 2.54929, 13, 1, '2017-09-13 06:01:35'),
(2, 1196, '4', 0.421875, 15, 1, '2017-09-13 06:01:37'),
(27, 2442, '3', -1.86047, 17, 0, '2017-09-13 06:01:37'),
(7, 1177, '2', 1.04752, 9, 1, '2017-09-13 06:01:37'),
(6, 1121, '2', -0.03, 18, 0, '2017-09-13 06:01:37'),
(14, 3033, '1', -0.853333, 14, 0, '2017-09-13 06:01:38'),
(5, 2835, '3', 2.28943, 20, 1, '2017-09-13 06:01:40'),
(29, 7, '3', -0.0075, 19, 0, '2017-09-13 06:01:40'),
(30, 1490, '1', 2.00826, 8, 1, '2017-09-13 06:01:41'),
(24, 21, '3', -0.1875, 15, 0, '2017-09-13 06:01:43'),
(15, 3, '3', 0.03, 18, 1, '2017-09-13 06:01:43'),
(18, 1, '3', -0.12, 16, 0, '2017-09-13 06:01:45'),
(22, 748, '4', -0.046875, 35, 0, '2017-09-13 06:01:46'),
(15, 9, '2', 2.1675, 3, 1, '2017-09-13 06:01:46'),
(29, 2, '3', 1.47, 6, 1, '2017-09-13 06:01:46'),
(19, 2431, '3', -0.318998, 62, 0, '2017-09-13 06:01:48'),
(30, 1505, '1', 2.36297, 9, 1, '2017-09-13 06:01:50'),
(16, 1185, '4', 0.00382653, 27, 1, '2017-09-13 06:01:50'),
(14, 3017, '2', 0.963333, 13, 1, '2017-09-13 06:01:51'),
(21, 2659, '4', 2.56373, 21, 1, '2017-09-13 06:01:51'),
(19, 369, '2', 1.92, 4, 1, '2017-09-13 06:01:52'),
(27, 1146, '2', -0.12, 16, 0, '2017-09-13 06:01:53'),
(25, 2823, '3', 2.09443, 25, 1, '2017-09-13 06:01:54'),
(4, 2904, '2', -2.44558, 24, 0, '2017-09-13 06:01:54'),
(5, 2868, '2', 2.62679, 14, 1, '2017-09-13 06:01:54'),
(6, 383, '0', -0.0075, 20, 0, '2017-09-13 06:01:57'),
(8, 738, '2', 0.127163, 27, 1, '2017-09-13 06:01:57'),
(25, 2833, '3', 2.86514, 4, 1, '2017-09-13 06:01:57'),
(3, 3470, '0', 0, 27, -1, '2017-09-13 06:01:58'),
(14, 3021, '1', 1.76333, 7, 1, '2017-09-13 06:01:58'),
(7, 1210, '1', 0.0208333, 22, 1, '2017-09-13 06:01:59'),
(24, 34, '1', -0.0675, 17, 0, '2017-09-13 06:02:00'),
(15, 11, '2', -0.1875, 15, 0, '2017-09-13 06:02:01'),
(5, 2866, '4', 2.81957, 7, 1, '2017-09-13 06:02:01'),
(30, 1492, '2', 1.58678, 12, 1, '2017-09-13 06:02:02'),
(2, 1281, '1', -0.5, 25, 0, '2017-09-13 06:02:02'),
(19, 2414, '1', -2.35692, 10, 0, '2017-09-13 06:02:02'),
(1, 1328, '2', -1.45, 31, 0, '2017-09-13 06:02:03'),
(29, 18, '4', 0.0675, 17, 1, '2017-09-13 06:02:03'),
(16, 1227, '0', 0, 13, -1, '2017-09-13 06:02:03'),
(18, 12, '3', -0.0075, 19, 0, '2017-09-13 06:02:04'),
(6, 368, '3', 1.2675, 7, 1, '2017-09-13 06:02:05'),
(26, 2888, '0', 0, 29, -1, '2017-09-13 06:02:05'),
(25, 2825, '3', 2.72703, 8, 1, '2017-09-13 06:02:05'),
(14, 3067, '3', 1.61333, 8, 1, '2017-09-13 06:02:06'),
(8, 502, '2', 1.94093, 9, 1, '2017-09-13 06:02:07'),
(5, 2886, '1', 2.84605, 6, 1, '2017-09-13 06:02:07'),
(18, 5, '3', 1.47, 6, 1, '2017-09-13 06:02:10'),
(25, 2838, '3', 2.79651, 6, 1, '2017-09-13 06:02:11'),
(4, 2901, '4', 2.60112, 18, 1, '2017-09-13 06:02:12'),
(15, 10, '3', -0.6075, 11, 0, '2017-09-13 06:02:12'),
(2, 1284, '3', 0.6075, 11, 1, '2017-09-13 06:02:13'),
(29, 4, '1', -0.6075, 11, 0, '2017-09-13 06:02:14'),
(14, 3061, '3', 1.61333, 8, 1, '2017-09-13 06:02:14'),
(1, 1315, '4', 2.32759, 13, 1, '2017-09-13 06:02:15'),
(25, 2816, '4', 2.83093, 5, 1, '2017-09-13 06:02:16'),
(27, 2448, '2', 1.63894, 24, 1, '2017-09-13 06:02:17'),
(24, 29, '2', 0, 20, 0, '2017-09-13 06:02:19'),
(8, 482, '4', 1.43027, 13, 1, '2017-09-13 06:02:20'),
(9, 1208, '0', -0.0012, 50, 0, '2017-09-13 06:02:20'),
(3, 3458, '4', -0.373702, 22, 0, '2017-09-13 06:02:20'),
(26, 2871, '2', 2.53969, 17, 1, '2017-09-13 06:02:21'),
(4, 2896, '3', 2.789, 10, 1, '2017-09-13 06:02:21'),
(27, 1142, '4', 1.6875, 5, 1, '2017-09-13 06:02:22'),
(29, 5, '3', 0.9075, 9, 1, '2017-09-13 06:02:23'),
(22, 741, '0', -0.00207756, 38, 0, '2017-09-13 06:02:24'),
(14, 3078, '1', -1.33333, 10, 0, '2017-09-13 06:02:25'),
(29, 17, '1', 2.1675, 3, 1, '2017-09-13 06:02:26'),
(18, 6, '2', 0.12, 16, 1, '2017-09-13 06:02:26'),
(8, 739, '1', 2.33333, 8, 1, '2017-09-13 06:02:28'),
(25, 2887, '3', 2.71109, 11, 1, '2017-09-13 06:02:28'),
(4, 2895, '2', 2.85477, 7, 1, '2017-09-13 06:02:29'),
(5, 2882, '1', 2.38747, 22, 1, '2017-09-13 06:02:29'),
(1, 1132, '2', -2.35, 13, 0, '2017-09-13 06:02:29'),
(7, 1203, '0', -0.00333333, 30, 0, '2017-09-13 06:02:30'),
(15, 6, '2', 0.03, 18, 1, '2017-09-13 06:02:30'),
(2, 1202, '3', -1.58333, 17, 0, '2017-09-13 06:02:30'),
(29, 10, '3', -1.47, 6, 0, '2017-09-13 06:02:32'),
(16, 1297, '3', 0.75, 30, 1, '2017-09-13 06:02:34'),
(3, 3466, '1', -1.03806, 14, 0, '2017-09-13 06:02:35'),
(24, 35, '1', -0.12, 16, 0, '2017-09-13 06:02:35'),
(9, 1284, '3', 0.1875, 15, 1, '2017-09-13 06:02:35'),
(18, 18, '4', 0.9075, 9, 1, '2017-09-13 06:02:35'),
(11, 2427, '0', 0, 68, -1, '2017-09-13 06:02:36'),
(1, 1320, '3', 2.52, 8, 1, '2017-09-13 06:02:37'),
(14, 3072, '4', 1.08, 12, 1, '2017-09-13 06:02:37'),
(8, 752, '0', 0, 10, -1, '2017-09-13 06:02:38'),
(24, 26, '4', 1.47, 6, 1, '2017-09-13 06:02:42'),
(4, 2905, '1', 2.72082, 13, 1, '2017-09-13 06:02:42'),
(22, 756, '2', 1.17188, 18, 1, '2017-09-13 06:02:42'),
(5, 2905, '1', 2.69752, 14, 1, '2017-09-13 06:02:44'),
(29, 13, '4', -0.3675, 13, 0, '2017-09-13 06:02:45'),
(7, 1292, '3', -0.75, 15, 0, '2017-09-13 06:02:45'),
(26, 2859, '4', -2.35584, 23, 0, '2017-09-13 06:02:45'),
(15, 40, '1', -0.03, 18, 0, '2017-09-13 06:02:48'),
(6, 2431, '2', -0.816635, 44, 0, '2017-09-13 06:02:49'),
(5, 2899, '0', 0, 6, -1, '2017-09-13 06:02:50'),
(18, 22, '1', 0.1875, 15, 1, '2017-09-13 06:02:50'),
(24, 22, '1', 0.9075, 9, 1, '2017-09-13 06:02:50'),
(1, 1321, '3', 2.34375, 14, 1, '2017-09-13 06:02:51'),
(16, 1203, '3', 0.563333, 17, 1, '2017-09-13 06:02:52'),
(19, 2410, '1', -0.491497, 50, 0, '2017-09-13 06:02:53'),
(29, 11, '2', -0.9075, 9, 0, '2017-09-13 06:02:54'),
(11, 365, '2', -0.03, 18, 0, '2017-09-13 06:02:55'),
(27, 2456, '1', 1.70485, 32, 1, '2017-09-13 06:02:55'),
(7, 1218, '1', -0.9075, 9, 0, '2017-09-13 06:02:55'),
(4, 2973, '3', 2.76548, 13, 1, '2017-09-13 06:02:55'),
(30, 395, '0', -0.0075, 20, 0, '2017-09-13 06:02:57'),
(21, 2642, '2', -1.78686, 67, 0, '2017-09-13 06:02:58'),
(16, 1190, '4', 1.6875, 7, 1, '2017-09-13 06:02:59'),
(9, 1294, '0', -0.00520833, 24, 0, '2017-09-13 06:03:00'),
(29, 9, '2', 1.47, 6, 1, '2017-09-13 06:03:00'),
(15, 33, '3', 0.3675, 13, 1, '2017-09-13 06:03:01'),
(3, 3457, '4', 0.16609, 26, 1, '2017-09-13 06:03:01'),
(5, 2891, '1', 2.72082, 13, 1, '2017-09-13 06:03:03'),
(2, 1208, '1', 0.3468, 33, 1, '2017-09-13 06:03:03'),
(14, 3022, '3', -0.0133333, 28, 0, '2017-09-13 06:03:05'),
(7, 1184, '4', 0.880208, 11, 1, '2017-09-13 06:03:05'),
(24, 37, '1', 0.12, 16, 1, '2017-09-13 06:03:06'),
(30, 1112, '4', 0.75, 10, 1, '2017-09-13 06:03:08'),
(6, 1116, '0', -0.0075, 20, 0, '2017-09-13 06:03:09'),
(18, 32, '3', 0, 20, 1, '2017-09-13 06:03:10'),
(15, 26, '4', 0.75, 10, 1, '2017-09-13 06:03:11'),
(11, 2413, '4', -1.99374, 17, 0, '2017-09-13 06:03:12'),
(5, 2900, '2', 2.789, 10, 1, '2017-09-13 06:03:13'),
(19, 394, '0', -0.0075, 20, 0, '2017-09-13 06:03:13'),
(16, 1175, '4', 1.59375, 15, 1, '2017-09-13 06:03:14'),
(24, 33, '3', 1.2675, 7, 1, '2017-09-13 06:03:14'),
(7, 1263, '4', -1.92, 8, 0, '2017-09-13 06:03:14'),
(27, 1147, '0', -0.0075, 20, 0, '2017-09-13 06:03:15'),
(3, 3440, '2', 1.03806, 14, 1, '2017-09-13 06:03:15'),
(6, 2404, '1', 2.50095, 8, 1, '2017-09-13 06:03:18'),
(21, 2643, '3', 2.65665, 21, 1, '2017-09-13 06:03:19'),
(4, 2962, '2', -2.5303, 24, 0, '2017-09-13 06:03:19'),
(14, 3080, '1', 0.853333, 14, 1, '2017-09-13 06:03:19'),
(29, 8, '2', 0, 20, 1, '2017-09-13 06:03:20'),
(18, 36, '4', 0.6075, 11, 1, '2017-09-13 06:03:21'),
(8, 479, '0', -0.0652174, 46, 0, '2017-09-13 06:03:25'),
(19, 1114, '1', 0.3675, 13, 1, '2017-09-13 06:03:26'),
(4, 2981, '4', 2.89647, 6, 1, '2017-09-13 06:03:26'),
(9, 1287, '2', -0.574219, 27, 0, '2017-09-13 06:03:26'),
(29, 12, '4', 1.08, 8, 1, '2017-09-13 06:03:28'),
(6, 1109, '4', -0.6075, 11, 0, '2017-09-13 06:03:28'),
(25, 2871, '0', -0.387298, 60, 0, '2017-09-13 06:03:29'),
(22, 479, '0', -0.00141777, 46, 0, '2017-09-13 06:03:29'),
(1, 1126, '0', 0, 38, -1, '2017-09-13 06:03:29'),
(11, 2429, '4', 2.31566, 17, 1, '2017-09-13 06:03:29'),
(15, 24, '3', 0.03, 18, 1, '2017-09-13 06:03:29'),
(7, 1291, '4', 0.12, 16, 1, '2017-09-13 06:03:29'),
(4, 2975, '2', 2.91424, 5, 1, '2017-09-13 06:03:30'),
(27, 2444, '3', 2.1168, 16, 1, '2017-09-13 06:03:31'),
(30, 2408, '3', 1.6875, 23, 1, '2017-09-13 06:03:31'),
(19, 365, '1', -1.47, 6, 0, '2017-09-13 06:03:32'),
(6, 1107, '4', 1.92, 4, 1, '2017-09-13 06:03:32'),
(14, 3094, '2', 0.963333, 13, 1, '2017-09-13 06:03:33'),
(24, 48, '2', 0, 20, 1, '2017-09-13 06:03:33'),
(5, 2916, '3', -2.59872, 21, 0, '2017-09-13 06:03:34'),
(9, 1171, '4', 1.08, 8, 1, '2017-09-13 06:03:34'),
(4, 2971, '3', -2.91424, 5, 0, '2017-09-13 06:03:35'),
(29, 1, '4', 1.08, 8, 1, '2017-09-13 06:03:36'),
(6, 1137, '2', 1.6875, 5, 1, '2017-09-13 06:03:37'),
(19, 2400, '1', -2.50776, 6, 0, '2017-09-13 06:03:38'),
(3, 3468, '4', -0.314014, 23, 0, '2017-09-13 06:03:38'),
(1, 1113, '1', 2.59091, 9, 1, '2017-09-13 06:03:38'),
(21, 2649, '4', 2.70007, 19, 1, '2017-09-13 06:03:39'),
(24, 51, '3', -1.47, 6, 0, '2017-09-13 06:03:39'),
(25, 2866, '4', 2.71109, 11, 1, '2017-09-13 06:03:39'),
(18, 30, '2', 0.03, 18, 1, '2017-09-13 06:03:40'),
(16, 1269, '0', 0, 27, -1, '2017-09-13 06:03:41'),
(29, 3, '3', 1.2675, 7, 1, '2017-09-13 06:03:43'),
(6, 1131, '3', -1.47, 6, 0, '2017-09-13 06:03:43'),
(26, 2879, '0', -0.387298, 60, 0, '2017-09-13 06:03:45'),
(15, 29, '3', -0.0675, 17, 0, '2017-09-13 06:03:46'),
(9, 1269, '2', -1.41797, 15, 0, '2017-09-13 06:03:49'),
(30, 369, '2', 0.03, 18, 1, '2017-09-13 06:03:50'),
(18, 23, '1', 0.75, 10, 1, '2017-09-13 06:03:50'),
(19, 1112, '4', 0.3675, 13, 1, '2017-09-13 06:03:51'),
(16, 1220, '2', 1.92857, 10, 1, '2017-09-13 06:03:51'),
(2, 1269, '3', 0, 48, 0, '2017-09-13 06:03:52'),
(27, 2449, '3', 1.8723, 21, 1, '2017-09-13 06:03:52'),
(14, 3113, '4', -0.75, 20, 0, '2017-09-13 06:03:53'),
(6, 363, '3', 0.75, 10, 1, '2017-09-13 06:03:53'),
(4, 2890, '3', -2.6424, 19, 0, '2017-09-13 06:03:55'),
(21, 1161, '3', -0.846932, 17, 0, '2017-09-13 06:03:55'),
(24, 53, '2', 0.0675, 17, 1, '2017-09-13 06:03:56'),
(3, 3460, '0', 0, 22, -1, '2017-09-13 06:04:00'),
(24, 59, '3', -1.6875, 5, 0, '2017-09-13 06:04:01'),
(29, 16, '1', 0.03, 18, 1, '2017-09-13 06:04:01'),
(25, 2855, '1', -2.38747, 22, 0, '2017-09-13 06:04:02'),
(7, 1297, '3', 0.653333, 32, 1, '2017-09-13 06:04:02'),
(30, 1121, '2', -0.3675, 13, 0, '2017-09-13 06:04:03'),
(16, 1282, '0', 0, 11, -1, '2017-09-13 06:04:03'),
(1, 1095, '3', -2.13414, 24, 0, '2017-09-13 06:04:03'),
(14, 3162, '2', 1.8252, 11, 1, '2017-09-13 06:04:04'),
(4, 2893, '4', 2.82311, 10, 1, '2017-09-13 06:04:05'),
(15, 39, '2', 0.0075, 19, 1, '2017-09-13 06:04:05'),
(21, 1163, '1', 1.88988, 10, 1, '2017-09-13 06:04:06'),
(9, 1220, '3', -0.382653, 18, 0, '2017-09-13 06:04:08'),
(27, 2439, '1', 2.1675, 15, 1, '2017-09-13 06:04:08'),
(7, 1276, '3', -1.83105, 7, 0, '2017-09-13 06:04:09'),
(24, 41, '1', 1.08, 8, 1, '2017-09-13 06:04:09'),
(8, 749, '2', 0.1875, 45, 1, '2017-09-13 06:04:10'),
(18, 25, '2', 0, 20, 1, '2017-09-13 06:04:10'),
(4, 2866, '4', 2.89647, 6, 1, '2017-09-13 06:04:11'),
(19, 390, '0', -0.0075, 20, 0, '2017-09-13 06:04:11'),
(5, 2906, '3', -2.00831, 38, 0, '2017-09-13 06:04:12'),
(6, 366, '4', 0.0075, 19, 1, '2017-09-13 06:04:13'),
(21, 2646, '1', 2.83779, 8, 1, '2017-09-13 06:04:13'),
(27, 1156, '1', 2.1, 6, 1, '2017-09-13 06:04:14'),
(15, 25, '2', 0.6075, 11, 1, '2017-09-13 06:04:16'),
(25, 2861, '2', 2.59808, 15, 1, '2017-09-13 06:04:17'),
(11, 2422, '0', 0, 47, -1, '2017-09-13 06:04:17'),
(30, 2404, '1', 2.15643, 14, 1, '2017-09-13 06:04:17'),
(24, 44, '2', -1.08, 8, 0, '2017-09-13 06:04:17'),
(4, 2886, '1', 2.87848, 7, 1, '2017-09-13 06:04:18'),
(14, 3154, '2', 1.2675, 14, 1, '2017-09-13 06:04:18'),
(2, 1282, '4', -0.0533333, 26, 0, '2017-09-13 06:04:18'),
(8, 747, '2', 2.25, 9, 1, '2017-09-13 06:04:19'),
(29, 14, '3', -0.0075, 19, 0, '2017-09-13 06:04:20'),
(19, 2416, '3', 2.41774, 9, 1, '2017-09-13 06:04:20'),
(6, 2408, '3', 2.50095, 8, 1, '2017-09-13 06:04:21'),
(9, 1219, '3', 0.396694, 14, 1, '2017-09-13 06:04:22'),
(4, 2889, '1', -2.93179, 4, 0, '2017-09-13 06:04:22'),
(16, 1281, '3', 1, 20, 1, '2017-09-13 06:04:22'),
(27, 1149, '1', 1.65, 9, 1, '2017-09-13 06:04:23'),
(25, 2870, '0', 0, 8, -1, '2017-09-13 06:04:25'),
(22, 1449, '1', -1.36688, 13, 0, '2017-09-13 06:04:25'),
(8, 499, '1', 2.44737, 7, 1, '2017-09-13 06:04:27'),
(1, 1327, '3', 1.56, 24, 1, '2017-09-13 06:04:27'),
(30, 1133, '3', 0.75, 10, 1, '2017-09-13 06:04:27'),
(27, 1151, '2', 2.25, 5, 1, '2017-09-13 06:04:28'),
(4, 2887, '2', -2.89647, 6, 0, '2017-09-13 06:04:28'),
(2, 1220, '2', 1.2398, 10, 1, '2017-09-13 06:04:28'),
(11, 378, '2', -0.3675, 13, 0, '2017-09-13 06:04:30'),
(18, 21, '2', 0, 20, 1, '2017-09-13 06:04:30'),
(29, 6, '2', 0.6075, 11, 1, '2017-09-13 06:04:31'),
(15, 21, '2', 0.1875, 15, 1, '2017-09-13 06:04:31'),
(5, 2903, '2', 2.57617, 19, 1, '2017-09-13 06:04:32'),
(14, 3148, '1', -1.17188, 15, 0, '2017-09-13 06:04:32'),
(16, 1257, '2', -2.125, 14, 0, '2017-09-13 06:04:36'),
(24, 52, '1', 0, 20, 1, '2017-09-13 06:04:37'),
(29, 88, '3', -1.2675, 7, 0, '2017-09-13 06:04:38'),
(25, 2885, '4', 2.65518, 13, 1, '2017-09-13 06:04:38'),
(19, 391, '1', -0.03, 18, 0, '2017-09-13 06:04:39'),
(5, 2896, '3', 2.85477, 7, 1, '2017-09-13 06:04:39'),
(6, 387, '0', -0.0075, 20, 0, '2017-09-13 06:04:41'),
(25, 2893, '4', 2.93908, 3, 1, '2017-09-13 06:04:41'),
(22, 1467, '3', 1.40083, 19, 1, '2017-09-13 06:04:43'),
(27, 1152, '3', -0.75, 15, 0, '2017-09-13 06:04:43'),
(26, 2881, '0', -0.387298, 60, 0, '2017-09-13 06:04:45'),
(1, 1111, '1', -2.44578, 19, 0, '2017-09-13 06:04:46'),
(25, 2906, '1', -2.87619, 6, 0, '2017-09-13 06:04:47'),
(2, 1293, '1', -0.5, 20, 0, '2017-09-13 06:04:48'),
(18, 37, '1', 0.03, 18, 1, '2017-09-13 06:04:48'),
(19, 1116, '4', 0.75, 10, 1, '2017-09-13 06:04:49'),
(5, 2921, '4', -2.80416, 11, 0, '2017-09-13 06:04:49'),
(15, 30, '1', -0.0075, 19, 0, '2017-09-13 06:04:50'),
(24, 42, '2', 0.27, 14, 1, '2017-09-13 06:04:51'),
(3, 1261, '4', -0.0747922, 32, 0, '2017-09-13 06:04:52'),
(27, 2447, '4', 2.69318, 9, 1, '2017-09-13 06:04:52'),
(11, 2411, '1', -1.87661, 23, 0, '2017-09-13 06:04:53'),
(15, 35, '2', 1.92, 4, 1, '2017-09-13 06:04:54'),
(16, 1199, '3', 1.40625, 17, 1, '2017-09-13 06:04:54'),
(14, 3110, '4', 0.676875, 21, 1, '2017-09-13 06:04:54'),
(9, 1199, '0', -0.00292969, 32, 0, '2017-09-13 06:04:54'),
(7, 1270, '0', -0.00141777, 46, 0, '2017-09-13 06:04:55'),
(19, 1117, '2', 1.2675, 7, 1, '2017-09-13 06:04:56'),
(6, 2429, '2', -2.39158, 15, 0, '2017-09-13 06:04:56'),
(29, 19, '4', 0, 20, 0, '2017-09-13 06:04:58'),
(29, 22, '0', -0.0075, 20, 0, '2017-09-13 06:04:58'),
(24, 56, '3', 0.9075, 9, 1, '2017-09-13 06:05:00'),
(21, 2664, '3', -2.22439, 47, 0, '2017-09-13 06:05:00'),
(1, 1106, '1', -2.3, 14, 0, '2017-09-13 06:05:01'),
(15, 38, '3', -1.2675, 7, 0, '2017-09-13 06:05:01'),
(4, 1641, '3', 0.46301, 17, 1, '2017-09-13 06:05:01'),
(5, 2907, '0', 0, 11, -1, '2017-09-13 06:05:01'),
(6, 1110, '2', 1.6875, 5, 1, '2017-09-13 06:05:01'),
(18, 38, '2', 0.27, 14, 1, '2017-09-13 06:05:03'),
(27, 1165, '2', -1.76169, 11, 0, '2017-09-13 06:05:03'),
(14, 3131, '4', 1.80187, 9, 1, '2017-09-13 06:05:03'),
(29, 24, '3', 1.08, 8, 1, '2017-09-13 06:05:06'),
(26, 2887, '2', -2.44949, 20, 0, '2017-09-13 06:05:06'),
(1, 1334, '4', 2.7, 6, 1, '2017-09-13 06:05:07'),
(3, 1169, '3', -0.421875, 15, 0, '2017-09-13 06:05:07'),
(24, 50, '1', 0.9075, 9, 1, '2017-09-13 06:05:09'),
(7, 1194, '3', -0.860969, 13, 0, '2017-09-13 06:05:09'),
(19, 1138, '1', -0.3675, 13, 0, '2017-09-13 06:05:09'),
(11, 1136, '4', -0.12, 16, 0, '2017-09-13 06:05:10'),
(6, 2416, '3', 2.35692, 10, 1, '2017-09-13 06:05:11'),
(25, 2901, '4', 2.44558, 24, 1, '2017-09-13 06:05:12'),
(15, 22, '1', 0.6075, 11, 1, '2017-09-13 06:05:12'),
(14, 3135, '1', -2.175, 11, 0, '2017-09-13 06:05:14'),
(8, 755, '0', -0.0625, 48, 0, '2017-09-13 06:05:15'),
(22, 1455, '1', 0.12, 32, 1, '2017-09-13 06:05:16'),
(18, 39, '2', 0.3675, 13, 1, '2017-09-13 06:05:16'),
(30, 2431, '2', -0.625236, 50, 0, '2017-09-13 06:05:17'),
(29, 31, '3', -0.6075, 11, 0, '2017-09-13 06:05:17'),
(24, 54, '3', -0.9075, 9, 0, '2017-09-13 06:05:19'),
(15, 23, '1', 1.2675, 7, 1, '2017-09-13 06:05:19'),
(21, 1160, '1', -0.407163, 19, 0, '2017-09-13 06:05:19'),
(5, 2895, '2', 2.57617, 19, 1, '2017-09-13 06:05:21'),
(18, 35, '2', 1.6875, 5, 1, '2017-09-13 06:05:21'),
(16, 1200, '4', 0.75, 27, 1, '2017-09-13 06:05:21'),
(19, 1133, '3', 0.3675, 13, 1, '2017-09-13 06:05:23'),
(4, 1632, '2', -0.213333, 22, 0, '2017-09-13 06:05:23'),
(27, 2435, '2', -2.53846, 20, 0, '2017-09-13 06:05:23'),
(3, 1291, '1', -0.0675, 17, 0, '2017-09-13 06:05:24'),
(8, 742, '3', -2.175, 11, 0, '2017-09-13 06:05:26'),
(24, 49, '2', 0.9075, 9, 1, '2017-09-13 06:05:27'),
(15, 31, '3', -1.08, 8, 0, '2017-09-13 06:05:28'),
(9, 1202, '3', -0.0208333, 33, 0, '2017-09-13 06:05:28'),
(25, 2904, '2', -2.6739, 15, 0, '2017-09-13 06:05:29'),
(11, 396, '1', 0, 20, 0, '2017-09-13 06:05:29'),
(18, 26, '4', 0.9075, 9, 1, '2017-09-13 06:05:30'),
(7, 1196, '4', 0.0208333, 22, 1, '2017-09-13 06:05:31'),
(29, 20, '2', 0.1875, 15, 1, '2017-09-13 06:05:32'),
(16, 1294, '3', 1.375, 13, 1, '2017-09-13 06:05:35'),
(21, 2636, '2', 2.73604, 16, 1, '2017-09-13 06:05:35'),
(5, 2924, '3', -2.70534, 16, 0, '2017-09-13 06:05:37'),
(2, 1257, '0', -0.00130208, 48, 0, '2017-09-13 06:05:37'),
(18, 24, '3', 1.95, 7, 1, '2017-09-13 06:05:37'),
(30, 383, '0', -0.0075, 20, 0, '2017-09-13 06:05:37'),
(15, 32, '1', -0.6075, 11, 0, '2017-09-13 06:05:38'),
(4, 1633, '2', 0.639053, 14, 1, '2017-09-13 06:05:38'),
(14, 3116, '1', -0.421875, 25, 0, '2017-09-13 06:05:39'),
(24, 58, '3', -0.27, 14, 0, '2017-09-13 06:05:41'),
(7, 1219, '3', 0.892562, 10, 1, '2017-09-13 06:05:41'),
(19, 401, '3', 0, 20, 0, '2017-09-13 06:05:42'),
(11, 395, '4', -0.3675, 13, 0, '2017-09-13 06:05:43'),
(22, 1456, '1', 0.316875, 27, 1, '2017-09-13 06:05:44'),
(30, 1130, '1', -1.2675, 7, 0, '2017-09-13 06:05:45'),
(3, 1184, '1', -0.0833333, 20, 0, '2017-09-13 06:05:45'),
(8, 753, '4', 1.64286, 19, 1, '2017-09-13 06:05:45'),
(15, 36, '4', 1.08, 8, 1, '2017-09-13 06:05:46'),
(4, 1635, '4', 1.47, 9, 1, '2017-09-13 06:05:47'),
(8, 748, '4', -2.7, 4, 0, '2017-09-13 06:05:49'),
(24, 43, '1', 1.08, 8, 1, '2017-09-13 06:05:50'),
(29, 39, '2', 0.0075, 19, 1, '2017-09-13 06:05:51'),
(7, 1294, '3', 1.17188, 9, 1, '2017-09-13 06:05:51'),
(2, 1191, '4', -0.75, 14, 0, '2017-09-13 06:05:51'),
(4, 1634, '3', 1.88021, 5, 1, '2017-09-13 06:05:52'),
(11, 1139, '2', 0.75, 10, 1, '2017-09-13 06:05:53'),
(15, 20, '2', 1.2675, 7, 1, '2017-09-13 06:05:53'),
(3, 1177, '2', 0.892562, 10, 1, '2017-09-13 06:05:54'),
(14, 3130, '2', 1.08, 16, 1, '2017-09-13 06:05:55'),
(18, 40, '3', -0.3, 18, 0, '2017-09-13 06:05:55'),
(24, 57, '1', 1.2675, 7, 1, '2017-09-13 06:05:56'),
(8, 480, '2', 2.475, 7, 1, '2017-09-13 06:05:56'),
(5, 2909, '1', -2.49905, 22, 0, '2017-09-13 06:05:59'),
(1, 1340, '2', 0.435484, 53, 1, '2017-09-13 06:06:00'),
(6, 2438, '4', -1.86923, 49, 0, '2017-09-13 06:06:01'),
(19, 387, '4', 0.0075, 19, 1, '2017-09-13 06:06:02'),
(26, 2816, '2', -0.310723, 58, 0, '2017-09-13 06:06:04'),
(7, 1287, '3', 1.50521, 14, 1, '2017-09-13 06:06:04'),
(30, 381, '0', -0.0075, 20, 0, '2017-09-13 06:06:05'),
(8, 741, '2', 2.28947, 9, 1, '2017-09-13 06:06:05'),
(24, 55, '2', -0.9075, 9, 0, '2017-09-13 06:06:05'),
(15, 28, '3', -0.48, 12, 0, '2017-09-13 06:06:05'),
(11, 1138, '2', 0.1875, 15, 1, '2017-09-13 06:06:08'),
(29, 29, '3', -0.0675, 17, 0, '2017-09-13 06:06:08'),
(18, 34, '2', 1.05, 13, 1, '2017-09-13 06:06:08'),
(4, 1679, '0', 0, 18, -1, '2017-09-13 06:06:10'),
(22, 3051, '0', -0.00443787, 26, 0, '2017-09-13 06:06:10'),
(1, 1343, '4', 2.28, 12, 1, '2017-09-13 06:06:12'),
(16, 1208, '1', 0.66, 39, 1, '2017-09-13 06:06:13'),
(11, 1117, '2', 1.2675, 7, 1, '2017-09-13 06:06:15'),
(19, 386, '1', -0.3675, 13, 0, '2017-09-13 06:06:15'),
(30, 2410, '1', -2.32823, 10, 0, '2017-09-13 06:06:15'),
(24, 47, '2', -0.75, 10, 0, '2017-09-13 06:06:15'),
(6, 371, '2', -0.1875, 15, 0, '2017-09-13 06:06:16'),
(14, 3108, '3', 0.75, 20, 1, '2017-09-13 06:06:16'),
(9, 1268, '0', -0.00130208, 48, 0, '2017-09-13 06:06:17'),
(3, 1227, '0', 0, 23, -1, '2017-09-13 06:06:17'),
(15, 34, '2', 0.48, 12, 1, '2017-09-13 06:06:17'),
(29, 35, '2', 0.75, 10, 1, '2017-09-13 06:06:18'),
(1, 610, '1', -2.74448, 7, 0, '2017-09-13 06:06:19'),
(6, 1117, '2', 2.1675, 3, 1, '2017-09-13 06:06:19'),
(8, 751, '2', 1.97727, 15, 1, '2017-09-13 06:06:20'),
(4, 1677, '2', 1.88021, 10, 1, '2017-09-13 06:06:21'),
(16, 1293, '2', 1.875, 9, 1, '2017-09-13 06:06:23'),
(19, 1110, '2', 1.08, 8, 1, '2017-09-13 06:06:23'),
(22, 3035, '2', 0.75, 14, 1, '2017-09-13 06:06:24'),
(11, 400, '1', -0.75, 10, 0, '2017-09-13 06:06:25'),
(24, 60, '2', -0.48, 12, 0, '2017-09-13 06:06:27'),
(18, 33, '3', 0.3, 18, 1, '2017-09-13 06:06:27'),
(29, 32, '3', 0.9075, 9, 1, '2017-09-13 06:06:27'),
(25, 2890, '0', -0.583258, 60, 0, '2017-09-13 06:06:30'),
(27, 2457, '4', -1.33065, 69, 0, '2017-09-13 06:06:33'),
(11, 1105, '2', 0.9075, 9, 1, '2017-09-13 06:06:34'),
(29, 26, '4', 1.2675, 7, 1, '2017-09-13 06:06:34'),
(7, 1269, '3', -0.421875, 30, 0, '2017-09-13 06:06:35'),
(8, 774, '1', 2.38385, 14, 1, '2017-09-13 06:06:35'),
(16, 1250, '3', -2.58532, 12, 0, '2017-09-13 06:06:35'),
(30, 399, '0', -0.0075, 20, 0, '2017-09-13 06:06:35'),
(15, 37, '0', -0.0075, 20, 0, '2017-09-13 06:06:38'),
(18, 29, '4', 1.35, 11, 1, '2017-09-13 06:06:38'),
(25, 2877, '2', 2.76586, 9, 1, '2017-09-13 06:06:39'),
(2, 1265, '3', -0.0277367, 47, 0, '2017-09-13 06:06:39'),
(9, 1175, '4', 0.1875, 24, 1, '2017-09-13 06:06:41'),
(3, 1194, '1', 0.0956633, 23, 1, '2017-09-13 06:06:41'),
(1, 1325, '1', 1.82143, 22, 1, '2017-09-13 06:06:42'),
(29, 25, '3', -0.9075, 9, 0, '2017-09-13 06:06:43'),
(24, 46, '3', -0.12, 16, 0, '2017-09-13 06:06:43'),
(5, 2894, '3', -1.72305, 45, 0, '2017-09-13 06:06:45'),
(14, 3107, '2', -0.675, 31, 0, '2017-09-13 06:06:47'),
(21, 2693, '1', -1.89737, 72, 0, '2017-09-13 06:06:47'),
(1, 1347, '3', 2.73479, 7, 1, '2017-09-13 06:06:49'),
(29, 28, '3', -1.47, 6, 0, '2017-09-13 06:06:49'),
(8, 776, '4', -2.25613, 16, 0, '2017-09-13 06:06:51'),
(15, 44, '2', -0.27, 14, 0, '2017-09-13 06:06:51'),
(5, 2901, '4', 2.85477, 7, 1, '2017-09-13 06:06:52'),
(24, 45, '4', -0.9075, 9, 0, '2017-09-13 06:06:52'),
(11, 402, '3', 0.0075, 19, 1, '2017-09-13 06:06:53'),
(27, 2438, '4', -2.53846, 20, 0, '2017-09-13 06:06:53'),
(18, 20, '1', -0.75, 15, 0, '2017-09-13 06:06:54'),
(3, 1170, '2', 0.520833, 14, 1, '2017-09-13 06:06:55'),
(14, 3111, '3', -1.92, 8, 0, '2017-09-13 06:06:55'),
(4, 1700, '2', -0.2352, 36, 0, '2017-09-13 06:06:57'),
(15, 55, '2', -1.47, 6, 0, '2017-09-13 06:06:57'),
(11, 369, '2', 1.6875, 5, 1, '2017-09-13 06:06:58'),
(18, 28, '0', 0, 6, -1, '2017-09-13 06:07:00'),
(2, 1189, '3', 0.0956633, 23, 1, '2017-09-13 06:07:02'),
(6, 2446, '1', -1.95968, 43, 0, '2017-09-13 06:07:02'),
(9, 1293, '1', -0.046875, 21, 0, '2017-09-13 06:07:02'),
(26, 2855, '0', -0.195743, 60, 0, '2017-09-13 06:07:04'),
(27, 1153, '4', -1.35, 11, 0, '2017-09-13 06:07:05'),
(22, 1463, '2', 0.0139463, 41, 1, '2017-09-13 06:07:06'),
(11, 370, '4', -1.08, 8, 0, '2017-09-13 06:07:06'),
(14, 3120, '2', 1.57687, 11, 1, '2017-09-13 06:07:06'),
(19, 2413, '1', 0.851016, 43, 1, '2017-09-13 06:07:07'),
(18, 31, '3', -1.5, 10, 0, '2017-09-13 06:07:09'),
(29, 34, '0', -0.0075, 20, 0, '2017-09-13 06:07:09'),
(15, 41, '4', -0.27, 14, 0, '2017-09-13 06:07:11'),
(11, 1115, '1', 1.6875, 5, 1, '2017-09-13 06:07:11'),
(21, 2653, '4', 2.5186, 24, 1, '2017-09-13 06:07:11'),
(7, 1208, '2', -0.2352, 36, 0, '2017-09-13 06:07:12'),
(24, 79, '0', -0.0075, 20, 0, '2017-09-13 06:07:12'),
(4, 1661, '3', 0.443787, 16, 1, '2017-09-13 06:07:12'),
(25, 2892, '4', -2.14709, 34, 0, '2017-09-13 06:07:13'),
(9, 1189, '3', 0.75, 14, 1, '2017-09-13 06:07:16'),
(18, 49, '2', 1.95, 7, 1, '2017-09-13 06:07:16'),
(14, 3141, '2', 1.6875, 10, 1, '2017-09-13 06:07:17'),
(24, 73, '3', -1.08, 8, 0, '2017-09-13 06:07:20'),
(26, 2886, '1', 2.40251, 17, 1, '2017-09-13 06:07:20'),
(6, 381, '1', 0.03, 18, 1, '2017-09-13 06:07:21'),
(19, 1130, '1', -0.1875, 15, 0, '2017-09-13 06:07:21'),
(5, 2890, '1', -2.21169, 32, 0, '2017-09-13 06:07:23'),
(29, 30, '2', 0.1875, 15, 1, '2017-09-13 06:07:24'),
(11, 371, '4', 0.3675, 13, 1, '2017-09-13 06:07:24'),
(3, 1270, '2', -0.362949, 30, 0, '2017-09-13 06:07:26'),
(14, 3104, '2', -2.175, 11, 0, '2017-09-13 06:07:28'),
(6, 376, '1', -1.2675, 7, 0, '2017-09-13 06:07:28'),
(9, 1217, '4', -0.48, 12, 0, '2017-09-13 06:07:28'),
(16, 1265, '0', -0.0576923, 52, 0, '2017-09-13 06:07:28'),
(24, 61, '2', -0.9075, 9, 0, '2017-09-13 06:07:29'),
(7, 1281, '1', -0.48, 18, 0, '2017-09-13 06:07:29'),
(8, 772, '3', 1.05429, 38, 1, '2017-09-13 06:07:30'),
(2, 1199, '3', 0.0732422, 27, 1, '2017-09-13 06:07:30'),
(15, 50, '0', -0.0075, 20, 0, '2017-09-13 06:07:31'),
(26, 2889, '1', -2.62111, 11, 0, '2017-09-13 06:07:31'),
(1, 1304, '1', -1.13316, 43, 0, '2017-09-13 06:07:32'),
(11, 374, '4', 1.08, 8, 1, '2017-09-13 06:07:32'),
(18, 59, '3', -0.45, 17, 0, '2017-09-13 06:07:34'),
(7, 1191, '3', 2.20408, 4, 1, '2017-09-13 06:07:34'),
(5, 2898, '2', -2.76655, 11, 0, '2017-09-13 06:07:34'),
(6, 382, '4', 1.2675, 7, 1, '2017-09-13 06:07:35'),
(4, 1644, '3', 0.0956633, 23, 1, '2017-09-13 06:07:36'),
(7, 1265, '3', -2.55621, 4, 0, '2017-09-13 06:07:38'),
(25, 2894, '3', -2.41818, 25, 0, '2017-09-13 06:07:38'),
(24, 71, '3', -0.9075, 9, 0, '2017-09-13 06:07:38'),
(22, 1464, '4', -0.255208, 34, 0, '2017-09-13 06:07:40'),
(19, 2422, '1', 2.21558, 18, 1, '2017-09-13 06:07:40'),
(26, 2870, '3', 2.69195, 9, 1, '2017-09-13 06:07:41'),
(15, 49, '2', 0.75, 10, 1, '2017-09-13 06:07:41'),
(8, 759, '4', -2.45246, 12, 0, '2017-09-13 06:07:41'),
(3, 1198, '4', 0.0675, 17, 1, '2017-09-13 06:07:43'),
(29, 21, '0', -0.0075, 20, 0, '2017-09-13 06:07:44'),
(7, 1220, '1', -1.85204, 6, 0, '2017-09-13 06:07:44'),
(18, 56, '3', 1.35, 11, 1, '2017-09-13 06:07:45'),
(16, 1287, '2', -1.9375, 17, 0, '2017-09-13 06:07:45'),
(11, 386, '3', -0.3675, 13, 0, '2017-09-13 06:07:45'),
(6, 392, '1', -0.6075, 11, 0, '2017-09-13 06:07:46'),
(1, 1363, '2', 2.54477, 14, 1, '2017-09-13 06:07:46'),
(25, 2865, '3', 2.79285, 8, 1, '2017-09-13 06:07:47'),
(2, 1171, '2', -0.03, 18, 0, '2017-09-13 06:07:48'),
(29, 38, '2', 1.92, 4, 1, '2017-09-13 06:07:48'),
(24, 64, '4', 0.6075, 11, 1, '2017-09-13 06:07:49'),
(6, 1104, '3', 2.1675, 3, 1, '2017-09-13 06:07:49'),
(19, 1157, '1', 1.5, 10, 1, '2017-09-13 06:07:50'),
(9, 1200, '2', -0.453704, 22, 0, '2017-09-13 06:07:51'),
(4, 1715, '1', 1.64609, 14, 1, '2017-09-13 06:07:51'),
(21, 2655, '3', 2.55734, 41, 1, '2017-09-13 06:07:52'),
(7, 1284, '2', -0.9075, 9, 0, '2017-09-13 06:07:53'),
(30, 2427, '4', 0.350208, 79, 1, '2017-09-13 06:07:55'),
(15, 54, '2', 0.1875, 15, 1, '2017-09-13 06:07:56'),
(19, 2442, '4', 2.7375, 7, 1, '2017-09-13 06:07:57'),
(2, 1219, '3', 0.892562, 10, 1, '2017-09-13 06:07:58'),
(8, 757, '3', -1.8913, 17, 0, '2017-09-13 06:07:58'),
(14, 3096, '4', -0.151875, 31, 0, '2017-09-13 06:07:59'),
(7, 1282, '2', -1.76333, 7, 0, '2017-09-13 06:08:00'),
(11, 398, '3', -0.27, 14, 0, '2017-09-13 06:08:00'),
(24, 63, '2', -0.48, 12, 0, '2017-09-13 06:08:01'),
(5, 2904, '3', 2.36193, 27, 1, '2017-09-13 06:08:02'),
(22, 3044, '3', 0.0208333, 22, 1, '2017-09-13 06:08:02'),
(25, 2900, '3', -2.62572, 17, 0, '2017-09-13 06:08:04'),
(18, 48, '1', -0.15, 19, 0, '2017-09-13 06:08:04'),
(11, 1131, '1', 1.6875, 5, 1, '2017-09-13 06:08:05'),
(24, 70, '3', -1.6875, 5, 0, '2017-09-13 06:08:06'),
(29, 36, '1', -0.0075, 19, 0, '2017-09-13 06:08:07'),
(6, 1148, '0', -0.15, 20, 0, '2017-09-13 06:08:10'),
(8, 476, '2', -2.175, 11, 0, '2017-09-13 06:08:10'),
(21, 2680, '1', 2.55841, 18, 1, '2017-09-13 06:08:11'),
(3, 1203, '3', 0.00333333, 29, 1, '2017-09-13 06:08:11'),
(16, 1268, '2', -1.375, 26, 0, '2017-09-13 06:08:12'),
(30, 386, '2', -0.0675, 17, 0, '2017-09-13 06:08:12'),
(1, 1118, '3', -2.09443, 25, 0, '2017-09-13 06:08:12'),
(24, 80, '3', -1.2675, 7, 0, '2017-09-13 06:08:13'),
(15, 60, '3', -0.03, 18, 0, '2017-09-13 06:08:14'),
(4, 1646, '4', -0.0177515, 24, 0, '2017-09-13 06:08:15'),
(9, 1281, '3', 0.12, 24, 1, '2017-09-13 06:08:15'),
(6, 1150, '3', -1.65, 9, 0, '2017-09-13 06:08:19'),
(2, 1200, '4', 0.520833, 21, 1, '2017-09-13 06:08:19'),
(24, 75, '2', -1.2675, 7, 0, '2017-09-13 06:08:20'),
(18, 58, '4', -0.6, 16, 0, '2017-09-13 06:08:20'),
(11, 389, '2', 0.0675, 17, 1, '2017-09-13 06:08:22'),
(5, 2902, '4', -2.55085, 20, 0, '2017-09-13 06:08:22'),
(3, 1297, '3', 1.92, 12, 1, '2017-09-13 06:08:24'),
(4, 1681, '3', 1.78255, 11, 1, '2017-09-13 06:08:25'),
(1, 1349, '1', 2.513, 14, 1, '2017-09-13 06:08:25'),
(19, 2447, '3', -2.01136, 29, 0, '2017-09-13 06:08:26'),
(29, 37, '3', -0.0075, 19, 0, '2017-09-13 06:08:26'),
(7, 1202, '2', -0.231481, 26, 0, '2017-09-13 06:08:26'),
(2, 1217, '4', -1.65, 9, 0, '2017-09-13 06:08:28'),
(26, 1183, '2', 0.22314, 16, 1, '2017-09-13 06:08:30'),
(6, 1133, '3', 0.75, 10, 1, '2017-09-13 06:08:30'),
(14, 3118, '1', -0.151875, 31, 0, '2017-09-13 06:08:30'),
(30, 393, '0', -0.0075, 20, 0, '2017-09-13 06:08:32'),
(11, 384, '3', -0.6075, 11, 0, '2017-09-13 06:08:33'),
(15, 51, '0', -0.0075, 20, 0, '2017-09-13 06:08:34'),
(1, 1344, '2', -2.69195, 9, 0, '2017-09-13 06:08:34');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(7, 1189, '3', 1.38138, 9, 1, '2017-09-13 06:08:36'),
(16, 1202, '3', -1, 24, 0, '2017-09-13 06:08:36'),
(26, 1169, '2', 1.50521, 7, 1, '2017-09-13 06:08:37'),
(24, 72, '4', -0.0675, 17, 0, '2017-09-13 06:08:37'),
(4, 1637, '1', 0.880208, 11, 1, '2017-09-13 06:08:37'),
(18, 45, '3', -0.45, 17, 0, '2017-09-13 06:08:37'),
(3, 1197, '3', -0.520833, 14, 0, '2017-09-13 06:08:38'),
(6, 2406, '1', -2.41774, 9, 0, '2017-09-13 06:08:39'),
(14, 3098, '2', 1.92, 8, 1, '2017-09-13 06:08:39'),
(22, 1458, '0', -0.00231481, 36, 0, '2017-09-13 06:08:39'),
(5, 2892, '2', 2.62572, 17, 1, '2017-09-13 06:08:39'),
(29, 40, '4', 0.1875, 15, 1, '2017-09-13 06:08:41'),
(11, 2414, '3', 2.47934, 8, 1, '2017-09-13 06:08:42'),
(4, 1674, '1', 2.71154, 5, 1, '2017-09-13 06:08:42'),
(18, 54, '2', 2.25, 5, 1, '2017-09-13 06:08:42'),
(16, 1217, '3', 1.95, 7, 1, '2017-09-13 06:08:42'),
(19, 1145, '3', -0.3, 18, 0, '2017-09-13 06:08:44'),
(6, 378, '4', -1.47, 6, 0, '2017-09-13 06:08:45'),
(8, 746, '0', -0.0833333, 36, 0, '2017-09-13 06:08:46'),
(29, 23, '1', 1.47, 6, 1, '2017-09-13 06:08:47'),
(1, 1353, '2', 2.47645, 15, 1, '2017-09-13 06:08:49'),
(30, 402, '1', -0.03, 18, 0, '2017-09-13 06:08:51'),
(5, 2897, '1', -2.72082, 13, 0, '2017-09-13 06:08:52'),
(24, 77, '3', -0.12, 16, 0, '2017-09-13 06:08:53'),
(6, 1136, '1', -0.9075, 9, 0, '2017-09-13 06:08:54'),
(15, 53, '0', -0.0075, 20, 0, '2017-09-13 06:08:54'),
(1, 1108, '2', -2.74448, 7, 0, '2017-09-13 06:08:56'),
(26, 1291, '0', -0.0075, 20, 0, '2017-09-13 06:08:57'),
(4, 1707, '4', 2.11111, 16, 1, '2017-09-13 06:08:58'),
(7, 1175, '4', 0.237305, 23, 1, '2017-09-13 06:08:58'),
(16, 1189, '1', -1.28571, 16, 0, '2017-09-13 06:08:59'),
(22, 1465, '1', 0.244898, 20, 1, '2017-09-13 06:08:59'),
(11, 2448, '2', 2.41304, 18, 1, '2017-09-13 06:09:00'),
(3, 1210, '1', 0.0208333, 22, 1, '2017-09-13 06:09:00'),
(2, 1175, '0', -0.00292969, 32, 0, '2017-09-13 06:09:01'),
(29, 33, '1', -0.75, 15, 0, '2017-09-13 06:09:02'),
(19, 1147, '3', -0.45, 17, 0, '2017-09-13 06:09:02'),
(18, 52, '0', -0.15, 20, 0, '2017-09-13 06:09:03'),
(25, 2859, '2', 0.387298, 59, 1, '2017-09-13 06:09:03'),
(24, 62, '1', -0.6075, 11, 0, '2017-09-13 06:09:04'),
(8, 740, '1', 1.33333, 20, 1, '2017-09-13 06:09:06'),
(15, 58, '3', -0.48, 12, 0, '2017-09-13 06:09:06'),
(7, 1217, '1', -0.9075, 9, 0, '2017-09-13 06:09:07'),
(30, 2416, '3', 1.89824, 18, 1, '2017-09-13 06:09:09'),
(16, 1219, '3', 1.63636, 10, 1, '2017-09-13 06:09:09'),
(14, 3115, '4', -0.6, 32, 0, '2017-09-13 06:09:11'),
(6, 388, '4', 0, 20, 0, '2017-09-13 06:09:13'),
(4, 1696, '1', -1.90909, 16, 0, '2017-09-13 06:09:14'),
(24, 67, '3', 0.6075, 11, 1, '2017-09-13 06:09:15'),
(30, 1110, '2', 1.2675, 7, 1, '2017-09-13 06:09:16'),
(21, 2660, '4', 2.18109, 66, 1, '2017-09-13 06:09:17'),
(26, 1172, '3', 0, 20, 0, '2017-09-13 06:09:17'),
(26, 1210, '0', -0.130208, 20, 0, '2017-09-13 06:09:17'),
(29, 42, '4', -0.0675, 17, 0, '2017-09-13 06:09:19'),
(3, 1292, '2', -0.333333, 20, 0, '2017-09-13 06:09:20'),
(11, 1154, '0', -0.15, 20, 0, '2017-09-13 06:09:20'),
(22, 1451, '1', 0.520833, 21, 1, '2017-09-13 06:09:20'),
(16, 1171, '4', 1.2, 12, 1, '2017-09-13 06:09:21'),
(1, 617, '3', -2.13414, 24, 0, '2017-09-13 06:09:21'),
(24, 78, '1', 1.47, 6, 1, '2017-09-13 06:09:22'),
(9, 1264, '0', -0.000688705, 66, 0, '2017-09-13 06:09:22'),
(19, 1146, '3', 0, 20, 0, '2017-09-13 06:09:22'),
(5, 2908, '4', -2.30359, 29, 0, '2017-09-13 06:09:22'),
(18, 57, '0', -0.15, 20, 0, '2017-09-13 06:09:23'),
(30, 376, '1', -1.08, 8, 0, '2017-09-13 06:09:24'),
(4, 1660, '3', -1.84615, 10, 0, '2017-09-13 06:09:25'),
(15, 52, '0', -0.0075, 20, 0, '2017-09-13 06:09:26'),
(6, 2420, '3', 2.24251, 13, 1, '2017-09-13 06:09:27'),
(14, 3151, '1', -0.991875, 17, 0, '2017-09-13 06:09:28'),
(26, 1198, '2', -0.27, 14, 0, '2017-09-13 06:09:30'),
(24, 69, '1', 0.9075, 9, 1, '2017-09-13 06:09:31'),
(11, 1153, '4', -1.35, 11, 0, '2017-09-13 06:09:31'),
(7, 1199, '4', -0.143555, 25, 0, '2017-09-13 06:09:33'),
(4, 1668, '3', 2.325, 9, 1, '2017-09-13 06:09:33'),
(8, 477, '3', -1.17391, 28, 0, '2017-09-13 06:09:35'),
(18, 50, '3', -1.2, 12, 0, '2017-09-13 06:09:35'),
(19, 2443, '4', 2.54348, 14, 1, '2017-09-13 06:09:36'),
(14, 3146, '1', 1.80187, 9, 1, '2017-09-13 06:09:37'),
(29, 46, '1', 0.03, 18, 1, '2017-09-13 06:09:37'),
(11, 2442, '4', 2.775, 6, 1, '2017-09-13 06:09:37'),
(1, 1366, '4', 2.43962, 16, 1, '2017-09-13 06:09:37'),
(16, 1284, '3', 0.6, 16, 1, '2017-09-13 06:09:37'),
(2, 1287, '2', -0.130208, 38, 0, '2017-09-13 06:09:39'),
(5, 2861, '2', 2.50998, 18, 1, '2017-09-13 06:09:40'),
(3, 1190, '4', 0.137755, 22, 1, '2017-09-13 06:09:42'),
(22, 1454, '2', 0.391204, 23, 1, '2017-09-13 06:09:43'),
(8, 483, '4', -2.41304, 9, 0, '2017-09-13 06:09:43'),
(16, 1191, '3', 2.35714, 6, 1, '2017-09-13 06:09:44'),
(7, 1171, '4', 0.6075, 11, 1, '2017-09-13 06:09:44'),
(6, 2414, '1', -1.95287, 17, 0, '2017-09-13 06:09:44'),
(14, 3127, '3', 2.325, 9, 1, '2017-09-13 06:09:46'),
(15, 46, '0', -0.0075, 20, 0, '2017-09-13 06:09:46'),
(5, 2893, '2', -2.87619, 6, 0, '2017-09-13 06:09:47'),
(24, 74, '2', -0.03, 18, 0, '2017-09-13 06:09:48'),
(21, 2673, '3', 2.63818, 34, 1, '2017-09-13 06:09:50'),
(29, 47, '1', 0.1875, 15, 1, '2017-09-13 06:09:52'),
(18, 46, '1', 0.3, 18, 1, '2017-09-13 06:09:53'),
(4, 1706, '0', 0, 22, -1, '2017-09-13 06:09:56'),
(15, 43, '2', -0.75, 10, 0, '2017-09-13 06:09:56'),
(6, 401, '0', 0, 15, -1, '2017-09-13 06:09:59'),
(29, 54, '3', -1.08, 8, 0, '2017-09-13 06:10:00'),
(14, 3138, '1', 1.95, 14, 1, '2017-09-13 06:10:00'),
(18, 60, '1', 1.5, 10, 1, '2017-09-13 06:10:03'),
(4, 1666, '4', -2.45455, 8, 0, '2017-09-13 06:10:03'),
(16, 1283, '4', 0.5, 20, 1, '2017-09-13 06:10:03'),
(30, 2411, '1', -1.21488, 40, 0, '2017-09-13 06:10:04'),
(25, 2862, '0', -0.387298, 60, 0, '2017-09-13 06:10:04'),
(6, 2403, '2', 2.61333, 6, 1, '2017-09-13 06:10:05'),
(7, 1200, '4', 0.453704, 22, 1, '2017-09-13 06:10:06'),
(29, 44, '2', -1.47, 6, 0, '2017-09-13 06:10:06'),
(2, 1268, '1', 0.574219, 27, 1, '2017-09-13 06:10:06'),
(3, 1185, '4', 0.0956633, 23, 1, '2017-09-13 06:10:06'),
(5, 2874, '1', 2.44949, 20, 1, '2017-09-13 06:10:07'),
(24, 76, '0', -0.0075, 20, 0, '2017-09-13 06:10:08'),
(19, 2449, '1', -2.01, 33, 0, '2017-09-13 06:10:09'),
(7, 1257, '4', 2.52083, 4, 1, '2017-09-13 06:10:10'),
(26, 1263, '0', -0.001875, 40, 0, '2017-09-13 06:10:10'),
(18, 44, '3', -1.8, 8, 0, '2017-09-13 06:10:12'),
(15, 57, '0', -0.0075, 20, 0, '2017-09-13 06:10:16'),
(7, 1293, '1', -1.6875, 6, 0, '2017-09-13 06:10:17'),
(14, 3157, '3', 1.65, 18, 1, '2017-09-13 06:10:18'),
(1, 1362, '2', -1.51642, 41, 0, '2017-09-13 06:10:19'),
(11, 2456, '4', -2.05385, 41, 0, '2017-09-13 06:10:19'),
(6, 2410, '2', 2.08333, 14, 1, '2017-09-13 06:10:19'),
(26, 1292, '1', 1.47, 9, 1, '2017-09-13 06:10:19'),
(29, 55, '2', -0.1875, 15, 0, '2017-09-13 06:10:21'),
(22, 1459, '2', 0.0075, 38, 1, '2017-09-13 06:10:21'),
(24, 68, '3', 0.27, 14, 1, '2017-09-13 06:10:22'),
(4, 1663, '2', -1.2, 18, 0, '2017-09-13 06:10:22'),
(3, 1174, '3', 0.443787, 16, 1, '2017-09-13 06:10:22'),
(15, 59, '3', -1.2675, 7, 0, '2017-09-13 06:10:23'),
(30, 400, '1', -0.0075, 19, 0, '2017-09-13 06:10:24'),
(8, 744, '0', -0.075, 40, 0, '2017-09-13 06:10:24'),
(18, 55, '0', 0, 14, -1, '2017-09-13 06:10:26'),
(29, 59, '3', -1.6875, 5, 0, '2017-09-13 06:10:26'),
(5, 2928, '1', -2.55085, 20, 0, '2017-09-13 06:10:27'),
(2, 1294, '3', 0.046875, 21, 1, '2017-09-13 06:10:27'),
(21, 2676, '2', -2.57617, 38, 0, '2017-09-13 06:10:28'),
(11, 1144, '3', 1.5, 10, 1, '2017-09-13 06:10:28'),
(7, 1268, '1', 1.59505, 13, 1, '2017-09-13 06:10:29'),
(9, 171, '1', 0.0675, 68, 1, '2017-09-13 06:10:30'),
(8, 745, '2', 2.55, 6, 1, '2017-09-13 06:10:30'),
(3, 1183, '2', 1.04752, 9, 1, '2017-09-13 06:10:31'),
(7, 1264, '1', -2.82094, 2, 0, '2017-09-13 06:10:31'),
(14, 3125, '1', -1.95, 14, 0, '2017-09-13 06:10:32'),
(15, 42, '2', 0.75, 10, 1, '2017-09-13 06:10:33'),
(24, 65, '3', 0.48, 12, 1, '2017-09-13 06:10:34'),
(26, 1216, '2', -0.421875, 15, 0, '2017-09-13 06:10:35'),
(4, 1672, '2', 2.0625, 15, 1, '2017-09-13 06:10:37'),
(19, 2451, '3', 2.38235, 28, 1, '2017-09-13 06:10:37'),
(30, 2413, '1', 2.15643, 14, 1, '2017-09-13 06:10:37'),
(7, 1296, '4', -1.6875, 6, 0, '2017-09-13 06:10:38'),
(29, 56, '3', 0.27, 14, 1, '2017-09-13 06:10:40'),
(3, 1173, '2', 0.9075, 9, 1, '2017-09-13 06:10:40'),
(6, 2427, '4', 2.04187, 21, 1, '2017-09-13 06:10:41'),
(9, 1295, '3', -0.880208, 11, 0, '2017-09-13 06:10:41'),
(24, 82, '3', -1.2675, 7, 0, '2017-09-13 06:10:42'),
(8, 743, '4', 2, 12, 1, '2017-09-13 06:10:43'),
(7, 1187, '1', -1.83105, 7, 0, '2017-09-13 06:10:44'),
(11, 1155, '4', 0.6, 16, 1, '2017-09-13 06:10:45'),
(18, 43, '3', 0, 20, 0, '2017-09-13 06:10:46'),
(14, 3122, '1', 1.95, 14, 1, '2017-09-13 06:10:46'),
(16, 171, '2', -1.79417, 43, 0, '2017-09-13 06:10:48'),
(21, 2637, '3', -2.77263, 21, 0, '2017-09-13 06:10:49'),
(26, 1174, '3', 0.536982, 15, 1, '2017-09-13 06:10:49'),
(15, 48, '1', -0.03, 18, 0, '2017-09-13 06:10:51'),
(8, 754, '4', 2.35714, 9, 1, '2017-09-13 06:10:51'),
(25, 2889, '1', -1.28452, 49, 0, '2017-09-13 06:10:54'),
(19, 2448, '1', -2.44565, 17, 0, '2017-09-13 06:10:55'),
(14, 3143, '1', -2.325, 9, 0, '2017-09-13 06:10:56'),
(11, 1143, '2', -1.2, 12, 0, '2017-09-13 06:10:57'),
(29, 51, '4', 0.0675, 17, 1, '2017-09-13 06:10:57'),
(6, 1152, '3', -0.45, 17, 0, '2017-09-13 06:10:58'),
(30, 396, '0', -0.0075, 20, 0, '2017-09-13 06:10:58'),
(3, 1218, '4', 0.03, 18, 1, '2017-09-13 06:10:59'),
(5, 2871, '4', -2.01246, 33, 0, '2017-09-13 06:11:00'),
(4, 1709, '1', -1.5, 23, 0, '2017-09-13 06:11:00'),
(2, 1275, '4', 0.453704, 33, 1, '2017-09-13 06:11:01'),
(25, 2883, '3', 2.81957, 7, 1, '2017-09-13 06:11:01'),
(22, 1460, '1', 0.0510397, 40, 1, '2017-09-13 06:11:01'),
(18, 42, '4', -0.6, 16, 0, '2017-09-13 06:11:02'),
(24, 89, '0', -0.0075, 20, 0, '2017-09-13 06:11:02'),
(16, 1299, '3', 2.27273, 16, 1, '2017-09-13 06:11:03'),
(8, 773, '3', 2.45246, 12, 1, '2017-09-13 06:11:04'),
(19, 1143, '2', -1.65, 9, 0, '2017-09-13 06:11:04'),
(1, 618, '3', -0.542616, 48, 0, '2017-09-13 06:11:07'),
(11, 1147, '4', 1.5, 10, 1, '2017-09-13 06:11:07'),
(4, 1655, '2', -2.52273, 7, 0, '2017-09-13 06:11:07'),
(1, 1098, '3', -2.93296, 2, 0, '2017-09-13 06:11:09'),
(5, 2885, '4', 2.76586, 9, 1, '2017-09-13 06:11:09'),
(15, 45, '3', 0, 20, 0, '2017-09-13 06:11:11'),
(3, 1195, '4', 0.48, 12, 1, '2017-09-13 06:11:11'),
(30, 378, '3', -0.1875, 15, 0, '2017-09-13 06:11:13'),
(18, 41, '1', 1.35, 11, 1, '2017-09-13 06:11:13'),
(29, 48, '2', 0.12, 16, 1, '2017-09-13 06:11:13'),
(9, 1250, '4', -0.653333, 32, 0, '2017-09-13 06:11:14'),
(15, 56, '0', 0, 5, -1, '2017-09-13 06:11:16'),
(3, 1186, '3', 1.85204, 6, 1, '2017-09-13 06:11:17'),
(8, 770, '2', 2.28943, 16, 1, '2017-09-13 06:11:19'),
(14, 3128, '2', -1.2, 24, 0, '2017-09-13 06:11:20'),
(4, 1712, '1', -1.81481, 12, 0, '2017-09-13 06:11:20'),
(24, 95, '4', -0.03, 18, 0, '2017-09-13 06:11:20'),
(26, 1276, '1', 0.00292969, 31, 1, '2017-09-13 06:11:21'),
(9, 1187, '3', -1.83105, 7, 0, '2017-09-13 06:11:21'),
(16, 1176, '3', -1.51014, 18, 0, '2017-09-13 06:11:21'),
(7, 1206, '3', -0.48, 36, 0, '2017-09-13 06:11:21'),
(19, 1155, '4', 0.3, 18, 1, '2017-09-13 06:11:22'),
(1, 1090, '4', -2.25, 15, 0, '2017-09-13 06:11:24'),
(15, 47, '4', -0.6075, 11, 0, '2017-09-13 06:11:27'),
(3, 1172, '4', 0.48, 12, 1, '2017-09-13 06:11:28'),
(5, 2887, '3', 2.47992, 19, 1, '2017-09-13 06:11:29'),
(29, 41, '2', -0.12, 16, 0, '2017-09-13 06:11:29'),
(4, 1708, '3', -1.98047, 9, 0, '2017-09-13 06:11:29'),
(30, 1131, '3', -0.12, 16, 0, '2017-09-13 06:11:29'),
(9, 1298, '2', -2.08333, 10, 0, '2017-09-13 06:11:31'),
(22, 3004, '2', -0.00333333, 29, 0, '2017-09-13 06:11:31'),
(7, 1286, '3', -2.00083, 11, 0, '2017-09-13 06:11:32'),
(18, 51, '3', -0.15, 19, 0, '2017-09-13 06:11:33'),
(11, 2440, '0', 0, 26, -1, '2017-09-13 06:11:33'),
(24, 92, '2', -0.046875, 14, 0, '2017-09-13 06:11:34'),
(1, 1333, '2', 2.4, 12, 1, '2017-09-13 06:11:36'),
(9, 1283, '1', -1.6875, 6, 0, '2017-09-13 06:11:37'),
(30, 1117, '2', 0.9075, 9, 1, '2017-09-13 06:11:38'),
(4, 1647, '3', 1.13609, 10, 1, '2017-09-13 06:11:39'),
(29, 53, '2', 0.75, 10, 1, '2017-09-13 06:11:39'),
(11, 2443, '4', 2.77174, 7, 1, '2017-09-13 06:11:40'),
(14, 3174, '0', 0, 22, -1, '2017-09-13 06:11:42'),
(16, 1296, '4', -0.5, 20, 0, '2017-09-13 06:11:42'),
(24, 93, '2', 0.55102, 8, 1, '2017-09-13 06:11:42'),
(1, 1341, '2', -2.65, 7, 0, '2017-09-13 06:11:43'),
(19, 2454, '2', 2.52083, 23, 1, '2017-09-13 06:11:46'),
(15, 77, '4', -0.0075, 19, 0, '2017-09-13 06:11:46'),
(26, 1203, '3', 0.03, 27, 1, '2017-09-13 06:11:48'),
(30, 1104, '3', 0.75, 10, 1, '2017-09-13 06:11:48'),
(9, 1289, '2', 1.47, 12, 1, '2017-09-13 06:11:49'),
(24, 90, '2', 1.2675, 7, 1, '2017-09-13 06:11:49'),
(8, 471, '0', -0.310723, 30, 0, '2017-09-13 06:11:50'),
(18, 53, '1', -0.15, 19, 0, '2017-09-13 06:11:51'),
(22, 1452, '2', 0.75, 20, 1, '2017-09-13 06:11:52'),
(21, 2686, '1', -2.16972, 62, 0, '2017-09-13 06:11:52'),
(19, 1142, '4', 2.1, 6, 1, '2017-09-13 06:11:52'),
(6, 2453, '4', 1.80882, 54, 1, '2017-09-13 06:11:52'),
(5, 2931, '4', 2.41818, 25, 1, '2017-09-13 06:11:53'),
(3, 1263, '1', 0.48, 24, 1, '2017-09-13 06:11:53'),
(2, 1286, '1', -0.0408333, 53, 0, '2017-09-13 06:11:54'),
(26, 1173, '2', 1.2675, 7, 1, '2017-09-13 06:11:55'),
(7, 1275, '4', 0.925926, 24, 1, '2017-09-13 06:11:56'),
(29, 45, '0', -0.0075, 20, 0, '2017-09-13 06:12:00'),
(6, 1141, '1', 1.95, 7, 1, '2017-09-13 06:12:00'),
(11, 1148, '0', -0.15, 20, 0, '2017-09-13 06:12:01'),
(1, 1092, '2', -2.15, 17, 0, '2017-09-13 06:12:01'),
(8, 764, '2', 2.35259, 11, 1, '2017-09-13 06:12:01'),
(5, 2918, '2', -2.8331, 8, 0, '2017-09-13 06:12:01'),
(9, 1176, '2', -0.979592, 12, 0, '2017-09-13 06:12:02'),
(30, 366, '4', 0.3675, 13, 1, '2017-09-13 06:12:02'),
(25, 2874, '0', -0.387298, 60, 0, '2017-09-13 06:12:02'),
(15, 63, '3', -0.03, 18, 0, '2017-09-13 06:12:04'),
(16, 1289, '4', -1.35, 22, 0, '2017-09-13 06:12:04'),
(1, 1312, '1', -2.81818, 4, 0, '2017-09-13 06:12:05'),
(11, 1156, '1', 2.25, 5, 1, '2017-09-13 06:12:05'),
(14, 3183, '1', -1.62, 23, 0, '2017-09-13 06:12:05'),
(24, 85, '3', -0.03, 18, 0, '2017-09-13 06:12:07'),
(9, 172, '2', 2.68165, 6, 1, '2017-09-13 06:12:07'),
(29, 43, '3', -1.08, 8, 0, '2017-09-13 06:12:08'),
(6, 1154, '3', -1.8, 8, 0, '2017-09-13 06:12:08'),
(8, 768, '3', 2.61218, 9, 1, '2017-09-13 06:12:10'),
(18, 47, '0', -0.15, 20, 0, '2017-09-13 06:12:11'),
(5, 2926, '1', -2.74383, 12, 0, '2017-09-13 06:12:13'),
(6, 1144, '4', -1.95, 7, 0, '2017-09-13 06:12:14'),
(22, 2929, '0', -0.00520833, 24, 0, '2017-09-13 06:12:16'),
(25, 2868, '2', 2.62679, 14, 1, '2017-09-13 06:12:16'),
(11, 2639, '3', 2.74448, 12, 1, '2017-09-13 06:12:18'),
(3, 1216, '0', -0.00520833, 24, 0, '2017-09-13 06:12:18'),
(26, 1185, '4', 0.0612245, 24, 1, '2017-09-13 06:12:19'),
(15, 72, '3', -0.1875, 15, 0, '2017-09-13 06:12:19'),
(24, 81, '3', -0.3675, 13, 0, '2017-09-13 06:12:20'),
(7, 1209, '4', -0.75, 25, 0, '2017-09-13 06:12:21'),
(30, 390, '0', -0.0075, 20, 0, '2017-09-13 06:12:22'),
(25, 2891, '1', 2.87619, 6, 1, '2017-09-13 06:12:23'),
(14, 3181, '4', -1.98, 17, 0, '2017-09-13 06:12:23'),
(4, 1675, '4', 0.0833333, 45, 1, '2017-09-13 06:12:24'),
(11, 2662, '2', -2.85233, 7, 0, '2017-09-13 06:12:25'),
(6, 2439, '1', 2.67, 11, 1, '2017-09-13 06:12:26'),
(18, 69, '4', -0.9, 14, 0, '2017-09-13 06:12:26'),
(3, 1196, '4', 1.17188, 9, 1, '2017-09-13 06:12:27'),
(29, 58, '0', -0.0075, 20, 0, '2017-09-13 06:12:28'),
(26, 1218, '1', -0.75, 10, 0, '2017-09-13 06:12:28'),
(9, 1204, '4', 0.75, 24, 1, '2017-09-13 06:12:31'),
(30, 1139, '2', 0.6075, 11, 1, '2017-09-13 06:12:33'),
(4, 1658, '4', -1.61333, 8, 0, '2017-09-13 06:12:33'),
(15, 74, '4', -0.12, 16, 0, '2017-09-13 06:12:35'),
(5, 2879, '2', 2.38747, 22, 1, '2017-09-13 06:12:35'),
(25, 2903, '2', 2.72082, 13, 1, '2017-09-13 06:12:36'),
(22, 1453, '1', 1.08, 20, 1, '2017-09-13 06:12:36'),
(11, 1160, '2', 1.62865, 12, 1, '2017-09-13 06:12:37'),
(24, 94, '2', -0.0675, 17, 0, '2017-09-13 06:12:37'),
(18, 76, '3', -1.2, 12, 0, '2017-09-13 06:12:38'),
(4, 1711, '1', 2.12138, 7, 1, '2017-09-13 06:12:39'),
(1, 1096, '4', -1.25, 35, 0, '2017-09-13 06:12:39'),
(9, 173, '2', -2.5392, 8, 0, '2017-09-13 06:12:39'),
(6, 2448, '2', 2.51087, 15, 1, '2017-09-13 06:12:41'),
(29, 52, '4', -0.1875, 15, 0, '2017-09-13 06:12:43'),
(21, 2663, '2', 2.25832, 52, 1, '2017-09-13 06:12:43'),
(30, 385, '3', -0.6075, 11, 0, '2017-09-13 06:12:44'),
(8, 488, '1', -0.572357, 33, 0, '2017-09-13 06:12:44'),
(11, 2648, '4', 2.86043, 8, 1, '2017-09-13 06:12:45'),
(2, 1209, '0', -0.0012, 50, 0, '2017-09-13 06:12:45'),
(26, 1184, '4', 0.255208, 17, 1, '2017-09-13 06:12:45'),
(16, 1286, '4', 0.9, 42, 1, '2017-09-13 06:12:46'),
(19, 2438, '4', -1.70769, 56, 0, '2017-09-13 06:12:48'),
(6, 2434, '1', 2.80909, 7, 1, '2017-09-13 06:12:48'),
(15, 62, '1', -0.3675, 13, 0, '2017-09-13 06:12:48'),
(24, 87, '3', -0.6075, 11, 0, '2017-09-13 06:12:48'),
(18, 61, '2', -1.5, 10, 0, '2017-09-13 06:12:48'),
(7, 1298, '4', -0.963333, 26, 0, '2017-09-13 06:12:48'),
(14, 3208, '1', -0.75, 25, 0, '2017-09-13 06:12:49'),
(5, 2934, '0', 0, 17, -1, '2017-09-13 06:12:53'),
(11, 2649, '4', 2.87562, 8, 1, '2017-09-13 06:12:53'),
(22, 1461, '3', 1.19234, 17, 1, '2017-09-13 06:12:54'),
(3, 1276, '1', 0.0732422, 27, 1, '2017-09-13 06:12:54'),
(29, 49, '3', -0.6075, 11, 0, '2017-09-13 06:12:54'),
(1, 597, '4', -1.64609, 14, 0, '2017-09-13 06:12:54'),
(2, 1296, '2', 1.02083, 10, 1, '2017-09-13 06:12:56'),
(7, 1188, '4', -1.2398, 10, 0, '2017-09-13 06:12:58'),
(14, 3178, '4', -1.92, 10, 0, '2017-09-13 06:12:58'),
(26, 1186, '3', 0.860969, 13, 1, '2017-09-13 06:12:59'),
(19, 2445, '1', -2.74615, 11, 0, '2017-09-13 06:12:59'),
(4, 1665, '1', -0.683368, 23, 0, '2017-09-13 06:13:02'),
(16, 1188, '4', -1.28571, 16, 0, '2017-09-13 06:13:03'),
(29, 57, '1', 0.9075, 9, 1, '2017-09-13 06:13:03'),
(30, 389, '0', -0.0075, 20, 0, '2017-09-13 06:13:05'),
(7, 1176, '3', -1.6875, 7, 0, '2017-09-13 06:13:05'),
(2, 1295, '3', -1.625, 11, 0, '2017-09-13 06:13:06'),
(15, 79, '2', -0.03, 18, 0, '2017-09-13 06:13:06'),
(24, 84, '4', -0.03, 18, 0, '2017-09-13 06:13:06'),
(18, 77, '2', 0.3, 18, 1, '2017-09-13 06:13:07'),
(5, 2914, '1', 2.69752, 14, 1, '2017-09-13 06:13:07'),
(4, 1657, '2', -1.92, 4, 0, '2017-09-13 06:13:07'),
(29, 50, '2', -1.08, 8, 0, '2017-09-13 06:13:11'),
(7, 1295, '4', 1.6875, 6, 1, '2017-09-13 06:13:12'),
(18, 78, '1', 2.1, 6, 1, '2017-09-13 06:13:13'),
(15, 69, '1', 0.6075, 11, 1, '2017-09-13 06:13:17'),
(5, 2910, '3', -2.76655, 11, 0, '2017-09-13 06:13:18'),
(24, 83, '4', -0.3675, 13, 0, '2017-09-13 06:13:19'),
(4, 1667, '3', 1.53061, 12, 1, '2017-09-13 06:13:19'),
(6, 2440, '4', 2.12727, 32, 1, '2017-09-13 06:13:21'),
(8, 777, '2', 1.08463, 36, 1, '2017-09-13 06:13:21'),
(14, 3194, '4', 0.75, 25, 1, '2017-09-13 06:13:23'),
(29, 60, '1', 0.27, 14, 1, '2017-09-13 06:13:25'),
(30, 372, '0', -0.0075, 20, 0, '2017-09-13 06:13:25'),
(21, 2666, '1', 2.54558, 42, 1, '2017-09-13 06:13:25'),
(4, 1698, '4', -2.24667, 7, 0, '2017-09-13 06:13:26'),
(16, 1275, '1', -1.66667, 24, 0, '2017-09-13 06:13:27'),
(18, 80, '3', -0.6, 16, 0, '2017-09-13 06:13:29'),
(15, 76, '0', 0, 13, -1, '2017-09-13 06:13:30'),
(9, 1206, '3', -0.0833333, 50, 0, '2017-09-13 06:13:30'),
(15, 64, '0', 0, 0, -1, '2017-09-13 06:13:30'),
(24, 86, '1', -0.48, 12, 0, '2017-09-13 06:13:31'),
(22, 1466, '2', 0.1728, 38, 1, '2017-09-13 06:13:32'),
(4, 1671, '3', 2.20408, 6, 1, '2017-09-13 06:13:32'),
(1, 609, '3', -0.3675, 39, 0, '2017-09-13 06:13:33'),
(26, 1297, '3', 0.520833, 35, 1, '2017-09-13 06:13:34'),
(7, 1204, '2', -0.813802, 23, 0, '2017-09-13 06:13:34'),
(6, 1160, '2', 1.34442, 14, 1, '2017-09-13 06:13:35'),
(14, 3204, '1', 1.6428, 13, 1, '2017-09-13 06:13:36'),
(25, 2898, '0', -0.583258, 60, 0, '2017-09-13 06:13:36'),
(24, 91, '4', -1.47, 6, 0, '2017-09-13 06:13:38'),
(4, 1676, '4', 2.3232, 6, 1, '2017-09-13 06:13:38'),
(3, 1265, '3', -0.0399408, 46, 0, '2017-09-13 06:13:40'),
(1, 854, '1', 2.43, 7, 1, '2017-09-13 06:13:41'),
(5, 2923, '3', 2.47253, 23, 1, '2017-09-13 06:13:42'),
(30, 1114, '2', -0.0675, 17, 0, '2017-09-13 06:13:42'),
(24, 101, '1', 0.949219, 7, 1, '2017-09-13 06:13:44'),
(29, 67, '0', -0.0075, 20, 0, '2017-09-13 06:13:45'),
(6, 1165, '4', 1.76169, 11, 1, '2017-09-13 06:13:45'),
(1, 1089, '4', -2.52083, 5, 0, '2017-09-13 06:13:46'),
(11, 2653, '2', -1.86557, 53, 0, '2017-09-13 06:13:47'),
(15, 61, '2', -0.03, 18, 0, '2017-09-13 06:13:48'),
(2, 1229, '0', 0, 41, -1, '2017-09-13 06:13:48'),
(18, 72, '1', 0.15, 19, 1, '2017-09-13 06:13:48'),
(8, 761, '3', 1.60496, 28, 1, '2017-09-13 06:13:49'),
(19, 2457, '2', 1.81452, 49, 1, '2017-09-13 06:13:49'),
(6, 1158, '2', 2.58532, 4, 1, '2017-09-13 06:13:50'),
(5, 2911, '1', 2.76655, 11, 1, '2017-09-13 06:13:52'),
(14, 3196, '2', -1.3872, 16, 0, '2017-09-13 06:13:53'),
(26, 1195, '0', -0.0075, 20, 0, '2017-09-13 06:13:54'),
(4, 1693, '2', -1.33333, 16, 0, '2017-09-13 06:13:55'),
(16, 172, '2', 2.26364, 27, 1, '2017-09-13 06:13:55'),
(9, 1299, '3', 1.15771, 25, 1, '2017-09-13 06:13:55'),
(1, 1310, '3', -1.77515, 12, 0, '2017-09-13 06:13:57'),
(11, 1167, '2', 1.76169, 11, 1, '2017-09-13 06:13:58'),
(22, 3039, '0', -0.00443787, 26, 0, '2017-09-13 06:13:58'),
(7, 1229, '2', -0.925926, 24, 0, '2017-09-13 06:13:59'),
(4, 1662, '2', -2.02423, 5, 0, '2017-09-13 06:13:59'),
(15, 80, '1', -0.3675, 13, 0, '2017-09-13 06:14:01'),
(9, 1229, '2', -2.37037, 6, 0, '2017-09-13 06:14:02'),
(30, 382, '0', -0.0075, 20, 0, '2017-09-13 06:14:03'),
(11, 2665, '3', -2.85539, 5, 0, '2017-09-13 06:14:03'),
(7, 1299, '2', -2.64738, 4, 0, '2017-09-13 06:14:03'),
(24, 98, '1', 0, 20, 0, '2017-09-13 06:14:04'),
(29, 75, '3', 0, 20, 1, '2017-09-13 06:14:05'),
(26, 1196, '4', 0.75, 12, 1, '2017-09-13 06:14:06'),
(8, 492, '2', 2.07443, 17, 1, '2017-09-13 06:14:06'),
(18, 75, '3', 0.3, 18, 1, '2017-09-13 06:14:06'),
(9, 1275, '2', -2.27263, 7, 0, '2017-09-13 06:14:08'),
(5, 2925, '1', 2.64998, 16, 1, '2017-09-13 06:14:09'),
(4, 1643, '1', -1.28254, 9, 0, '2017-09-13 06:14:09'),
(15, 70, '3', -0.9075, 9, 0, '2017-09-13 06:14:10'),
(22, 1462, '1', 1.47, 12, 1, '2017-09-13 06:14:10'),
(14, 3192, '1', -1.2288, 18, 0, '2017-09-13 06:14:10'),
(2, 1283, '0', -0.00520833, 24, 0, '2017-09-13 06:14:13'),
(25, 2902, '1', -2.07943, 36, 0, '2017-09-13 06:14:13'),
(24, 108, '2', 0.6075, 11, 1, '2017-09-13 06:14:16'),
(21, 2652, '0', 0, 51, -1, '2017-09-13 06:14:16'),
(16, 1298, '3', -1.9, 22, 0, '2017-09-13 06:14:16'),
(1, 604, '3', 1.40083, 19, 1, '2017-09-13 06:14:16'),
(15, 78, '2', -1.08, 8, 0, '2017-09-13 06:14:18'),
(3, 1208, '2', -0.2028, 37, 0, '2017-09-13 06:14:18'),
(4, 1704, '3', -1.9571, 10, 0, '2017-09-13 06:14:19'),
(1, 611, '2', -2.43, 5, 0, '2017-09-13 06:14:22'),
(30, 394, '1', 0, 20, 0, '2017-09-13 06:14:23'),
(7, 1117, '2', 1.92, 4, 1, '2017-09-13 06:14:24'),
(29, 70, '3', -0.0075, 19, 0, '2017-09-13 06:14:24'),
(24, 100, '3', 0.03, 9, 1, '2017-09-13 06:14:25'),
(22, 1457, '4', 1.17188, 15, 1, '2017-09-13 06:14:25'),
(18, 70, '3', 0, 20, 0, '2017-09-13 06:14:26'),
(4, 1695, '3', 2.08333, 9, 1, '2017-09-13 06:14:28'),
(5, 2955, '3', -2.57617, 19, 0, '2017-09-13 06:14:28'),
(2, 1289, '4', -0.991875, 17, 0, '2017-09-13 06:14:29'),
(15, 71, '2', -0.48, 12, 0, '2017-09-13 06:14:30'),
(19, 2444, '3', 1.77, 41, 1, '2017-09-13 06:14:30'),
(14, 3180, '4', -1.1532, 19, 0, '2017-09-13 06:14:30'),
(7, 1136, '1', -1.2675, 7, 0, '2017-09-13 06:14:31'),
(1, 605, '2', 2.08333, 10, 1, '2017-09-13 06:14:32'),
(4, 1694, '1', 2.15643, 7, 1, '2017-09-13 06:14:34'),
(29, 72, '1', 0.6075, 11, 1, '2017-09-13 06:14:35'),
(7, 402, '1', -1.47, 6, 0, '2017-09-13 06:14:37'),
(30, 2420, '1', -2.1888, 14, 0, '2017-09-13 06:14:37'),
(4, 1702, '1', -2.47934, 4, 0, '2017-09-13 06:14:39'),
(7, 1120, '0', 0, 3, -1, '2017-09-13 06:14:40'),
(15, 68, '3', 0.6075, 11, 1, '2017-09-13 06:14:41'),
(7, 2432, '0', 0, 2, -1, '2017-09-13 06:14:42'),
(1, 1091, '2', -2.00083, 11, 0, '2017-09-13 06:14:43'),
(26, 1261, '0', -0.00207756, 38, 0, '2017-09-13 06:14:44'),
(7, 372, '0', 0, 2, -1, '2017-09-13 06:14:44'),
(6, 2661, '3', -2.3252, 54, 0, '2017-09-13 06:14:45'),
(4, 1714, '3', 2.12742, 6, 1, '2017-09-13 06:14:45'),
(18, 79, '2', -0.15, 19, 0, '2017-09-13 06:14:46'),
(19, 2434, '1', 2.59091, 15, 1, '2017-09-13 06:14:46'),
(5, 2948, '1', -2.60112, 18, 0, '2017-09-13 06:14:46'),
(8, 470, '0', -0.256496, 40, 0, '2017-09-13 06:14:46'),
(21, 2669, '3', 2.12132, 30, 1, '2017-09-13 06:14:46'),
(2, 1298, '1', 1.54083, 17, 1, '2017-09-13 06:14:47'),
(7, 2408, '1', -2.7448, 4, 0, '2017-09-13 06:14:48'),
(22, 1450, '3', -0.333333, 24, 0, '2017-09-13 06:14:50'),
(4, 1648, '2', -1.77515, 6, 0, '2017-09-13 06:14:51'),
(29, 71, '3', -0.03, 18, 0, '2017-09-13 06:14:53'),
(11, 2642, '3', -2.12648, 50, 0, '2017-09-13 06:14:53'),
(7, 2420, '3', 2.57845, 7, 1, '2017-09-13 06:14:55'),
(26, 1177, '2', 0.619835, 12, 1, '2017-09-13 06:14:55'),
(30, 367, '0', -0.0075, 20, 0, '2017-09-13 06:14:57'),
(14, 3167, '2', -0.6348, 27, 0, '2017-09-13 06:14:57'),
(15, 65, '3', 0.03, 18, 1, '2017-09-13 06:14:59'),
(4, 1719, '1', 1.92, 8, 1, '2017-09-13 06:14:59'),
(9, 1209, '0', -0.0012, 50, 0, '2017-09-13 06:14:59'),
(6, 2651, '4', 2.66434, 15, 1, '2017-09-13 06:15:00'),
(18, 64, '4', 0.9, 14, 1, '2017-09-13 06:15:00'),
(3, 1287, '2', -0.0638021, 41, 0, '2017-09-13 06:15:00'),
(11, 1164, '3', 2.13414, 8, 1, '2017-09-13 06:15:02'),
(4, 1653, '0', 0, 5, -1, '2017-09-13 06:15:04'),
(1, 1317, '3', 1.2675, 21, 1, '2017-09-13 06:15:04'),
(30, 2418, '2', 2.49797, 7, 1, '2017-09-13 06:15:04'),
(6, 1164, '3', 2.47645, 5, 1, '2017-09-13 06:15:05'),
(19, 1154, '3', 0, 20, 0, '2017-09-13 06:15:06'),
(29, 79, '3', -0.3675, 13, 0, '2017-09-13 06:15:06'),
(22, 2933, '1', -0.255208, 17, 0, '2017-09-13 06:15:07'),
(7, 2431, '2', -2.15643, 14, 0, '2017-09-13 06:15:09'),
(9, 1296, '1', -1.02083, 10, 0, '2017-09-13 06:15:09'),
(18, 68, '3', 1.5, 10, 1, '2017-09-13 06:15:10'),
(15, 75, '2', -0.27, 14, 0, '2017-09-13 06:15:13'),
(25, 2909, '0', -0.583258, 60, 0, '2017-09-13 06:15:14'),
(11, 1166, '1', 1.62865, 12, 1, '2017-09-13 06:15:14'),
(9, 1188, '3', -1.85204, 6, 0, '2017-09-13 06:15:16'),
(29, 80, '4', 0.75, 10, 1, '2017-09-13 06:15:16'),
(4, 1642, '3', 1.08, 12, 1, '2017-09-13 06:15:16'),
(15, 67, '2', -1.6875, 5, 0, '2017-09-13 06:15:18'),
(4, 1720, '3', 2.43, 4, 1, '2017-09-13 06:15:20'),
(7, 2413, '2', -2.3255, 11, 0, '2017-09-13 06:15:20'),
(11, 1165, '4', 2.25111, 7, 1, '2017-09-13 06:15:21'),
(14, 3172, '3', -0.8748, 23, 0, '2017-09-13 06:15:21'),
(19, 1141, '1', 0.75, 15, 1, '2017-09-13 06:15:21'),
(6, 1168, '4', -1.02599, 16, 0, '2017-09-13 06:15:21'),
(25, 2905, '1', 2.8331, 8, 1, '2017-09-13 06:15:22'),
(9, 1286, '3', -2.25333, 8, 0, '2017-09-13 06:15:23'),
(18, 62, '1', -0.9, 14, 0, '2017-09-13 06:15:23'),
(16, 1264, '0', -0.0454545, 66, 0, '2017-09-13 06:15:23'),
(5, 2959, '4', -2.04433, 37, 0, '2017-09-13 06:15:23'),
(30, 377, '0', -0.0075, 20, 0, '2017-09-13 06:15:25'),
(4, 1650, '4', -1.77515, 6, 0, '2017-09-13 06:15:26'),
(1, 615, '2', 1.20333, 22, 1, '2017-09-13 06:15:26'),
(24, 110, '0', 0, 62, -1, '2017-09-13 06:15:26'),
(7, 375, '1', 1.47, 6, 1, '2017-09-13 06:15:27'),
(6, 2640, '2', 2.82346, 8, 1, '2017-09-13 06:15:28'),
(16, 1187, '1', -2.34375, 7, 0, '2017-09-13 06:15:31'),
(11, 2646, '1', 2.79651, 10, 1, '2017-09-13 06:15:31'),
(15, 73, '1', 0.3675, 13, 1, '2017-09-13 06:15:32'),
(29, 61, '0', 0, 16, -1, '2017-09-13 06:15:32'),
(19, 1151, '2', 1.35, 11, 1, '2017-09-13 06:15:32'),
(22, 1480, '3', -0.491497, 25, 0, '2017-09-13 06:15:32'),
(1, 1331, '2', 2.1675, 6, 1, '2017-09-13 06:15:33'),
(5, 2942, '4', -2.76655, 11, 0, '2017-09-13 06:15:35'),
(8, 767, '0', -0.22714, 48, 0, '2017-09-13 06:15:35'),
(6, 1166, '1', 2.13414, 8, 1, '2017-09-13 06:15:37'),
(7, 2410, '1', -2.26573, 11, 0, '2017-09-13 06:15:38'),
(30, 2422, '3', -2.42157, 13, 0, '2017-09-13 06:15:38'),
(1, 1332, '3', 2.34083, 7, 1, '2017-09-13 06:15:39'),
(4, 1721, '2', 1.39463, 14, 1, '2017-09-13 06:15:40'),
(24, 96, '2', -0.27, 14, 0, '2017-09-13 06:15:41'),
(29, 63, '2', -0.9075, 9, 0, '2017-09-13 06:15:41'),
(26, 1270, '0', -0.00141777, 46, 0, '2017-09-13 06:15:42'),
(15, 91, '3', -0.6075, 11, 0, '2017-09-13 06:15:42'),
(18, 63, '2', -0.15, 19, 0, '2017-09-13 06:15:43'),
(2, 173, '4', 0.5547, 57, 1, '2017-09-13 06:15:44'),
(3, 1268, '3', -0.0117188, 45, 0, '2017-09-13 06:15:44'),
(19, 1152, '2', 1.05, 13, 1, '2017-09-13 06:15:45'),
(7, 1114, '1', 0.75, 10, 1, '2017-09-13 06:15:47'),
(8, 762, '2', -2.36512, 12, 0, '2017-09-13 06:15:48'),
(4, 1717, '2', -1.92, 8, 0, '2017-09-13 06:15:48'),
(21, 2645, '4', 2.16972, 62, 1, '2017-09-13 06:15:48'),
(24, 97, '4', 1.08, 8, 1, '2017-09-13 06:15:48'),
(30, 379, '3', 0.48, 12, 1, '2017-09-13 06:15:50'),
(26, 1190, '4', 1.53061, 8, 1, '2017-09-13 06:15:50'),
(1, 1335, '1', -2.41071, 11, 0, '2017-09-13 06:15:50'),
(6, 1163, '2', -1.34442, 14, 0, '2017-09-13 06:15:51'),
(19, 2648, '4', 2.87806, 7, 1, '2017-09-13 06:15:52'),
(14, 3164, '4', -0.3072, 34, 0, '2017-09-13 06:15:55'),
(15, 81, '1', -0.3675, 13, 0, '2017-09-13 06:15:55'),
(18, 71, '3', -1.2, 12, 0, '2017-09-13 06:15:56'),
(7, 394, '1', -1.08, 8, 0, '2017-09-13 06:15:56'),
(11, 2654, '3', -2.49606, 27, 0, '2017-09-13 06:15:59'),
(21, 2672, '1', -2.86505, 10, 0, '2017-09-13 06:15:59'),
(7, 382, '4', 1.92, 4, 1, '2017-09-13 06:16:00'),
(26, 1194, '1', 1.10587, 11, 1, '2017-09-13 06:16:00'),
(29, 69, '1', 0, 20, 1, '2017-09-13 06:16:01'),
(4, 1748, '1', 1.54395, 13, 1, '2017-09-13 06:16:01'),
(19, 1166, '3', -1.88988, 10, 0, '2017-09-13 06:16:02'),
(1, 995, '2', -1.92, 12, 0, '2017-09-13 06:16:03'),
(24, 109, '1', -0.653333, 16, 0, '2017-09-13 06:16:05'),
(7, 389, '1', -1.6875, 5, 0, '2017-09-13 06:16:05'),
(6, 2662, '4', 2.70074, 14, 1, '2017-09-13 06:16:06'),
(11, 2640, '2', 2.82346, 8, 1, '2017-09-13 06:16:06'),
(3, 1293, '1', -0.00520833, 23, 0, '2017-09-13 06:16:08'),
(16, 1209, '2', 0.78, 37, 1, '2017-09-13 06:16:08'),
(29, 78, '1', 1.08, 8, 1, '2017-09-13 06:16:09'),
(30, 374, '2', 0, 20, 0, '2017-09-13 06:16:10'),
(7, 401, '1', -1.2675, 7, 0, '2017-09-13 06:16:12'),
(15, 87, '2', -0.03, 18, 0, '2017-09-13 06:16:13'),
(18, 67, '2', -0.3, 18, 0, '2017-09-13 06:16:13'),
(21, 2683, '4', 2.74955, 16, 1, '2017-09-13 06:16:14'),
(22, 1484, '0', -0.00170068, 42, 0, '2017-09-13 06:16:15'),
(11, 2643, '3', 2.87163, 8, 1, '2017-09-13 06:16:15'),
(14, 3168, '2', 1.0092, 21, 1, '2017-09-13 06:16:16'),
(6, 2653, '0', 0, 10, -1, '2017-09-13 06:16:16'),
(4, 1765, '3', -1.2398, 15, 0, '2017-09-13 06:16:17'),
(29, 65, '4', -0.48, 12, 0, '2017-09-13 06:16:21'),
(25, 2907, '0', -0.583258, 60, 0, '2017-09-13 06:16:23'),
(14, 3188, '4', -2.1168, 8, 0, '2017-09-13 06:16:24'),
(26, 1170, '0', -0.00520833, 24, 0, '2017-09-13 06:16:24'),
(4, 1752, '4', -2.0172, 9, 0, '2017-09-13 06:16:25'),
(21, 2687, '3', 2.86337, 11, 1, '2017-09-13 06:16:25'),
(8, 765, '3', -0.533534, 37, 0, '2017-09-13 06:16:25'),
(7, 2414, '3', 2.12138, 14, 1, '2017-09-13 06:16:26'),
(3, 1191, '3', 0.309949, 19, 1, '2017-09-13 06:16:27'),
(30, 397, '1', -0.0075, 19, 0, '2017-09-13 06:16:29'),
(15, 89, '3', -0.0675, 17, 0, '2017-09-13 06:16:30'),
(7, 373, '3', -1.92, 4, 0, '2017-09-13 06:16:30'),
(18, 74, '3', -0.3, 18, 0, '2017-09-13 06:16:31'),
(19, 2649, '4', 2.53536, 29, 1, '2017-09-13 06:16:31'),
(6, 2636, '1', -2.71913, 17, 0, '2017-09-13 06:16:32'),
(14, 3202, '4', 2.1168, 8, 1, '2017-09-13 06:16:32'),
(29, 64, '4', 0.6075, 11, 1, '2017-09-13 06:16:32'),
(4, 1782, '1', -2.04187, 7, 0, '2017-09-13 06:16:32'),
(11, 1168, '4', -0.407163, 19, 0, '2017-09-13 06:16:33'),
(5, 2864, '0', -0.387298, 60, 0, '2017-09-13 06:16:36'),
(7, 1107, '4', 1.47, 6, 1, '2017-09-13 06:16:37'),
(1, 387, '0', -0.0075, 20, 0, '2017-09-13 06:16:37'),
(11, 1159, '1', 2.58532, 4, 1, '2017-09-13 06:16:38'),
(3, 1220, '0', 0, 11, -1, '2017-09-13 06:16:38'),
(16, 173, '2', -2.1, 30, 0, '2017-09-13 06:16:39'),
(15, 82, '3', -0.9075, 9, 0, '2017-09-13 06:16:39'),
(7, 379, '3', 1.47, 6, 1, '2017-09-13 06:16:42'),
(29, 73, '1', 0.75, 10, 1, '2017-09-13 06:16:42'),
(6, 2648, '3', -2.82501, 10, 0, '2017-09-13 06:16:42'),
(8, 771, '2', -2.15471, 18, 0, '2017-09-13 06:16:43'),
(14, 3200, '3', -1.8252, 11, 0, '2017-09-13 06:16:43'),
(21, 2679, '3', 2.81325, 19, 1, '2017-09-13 06:16:44'),
(18, 65, '2', -1.05, 13, 0, '2017-09-13 06:16:45'),
(22, 1483, '3', -0.132964, 30, 0, '2017-09-13 06:16:45'),
(15, 90, '3', -1.47, 6, 0, '2017-09-13 06:16:45'),
(7, 399, '3', -1.6875, 5, 0, '2017-09-13 06:16:48'),
(26, 1227, '0', -0.00520833, 24, 0, '2017-09-13 06:16:49'),
(9, 3158, '3', -2.12742, 6, 0, '2017-09-13 06:16:49'),
(30, 371, '0', -0.0075, 20, 0, '2017-09-13 06:16:50'),
(9, 3073, '2', -2.39158, 3, 0, '2017-09-13 06:16:52'),
(9, 3066, '4', -2.39158, 3, 0, '2017-09-13 06:16:55'),
(5, 2883, '3', 2.47992, 19, 1, '2017-09-13 06:16:55'),
(7, 374, '3', -0.9075, 9, 0, '2017-09-13 06:16:56'),
(11, 2637, '3', -2.79508, 19, 0, '2017-09-13 06:16:57'),
(9, 3009, '2', -2.58673, 2, 0, '2017-09-13 06:16:57'),
(1, 385, '0', -0.0075, 20, 0, '2017-09-13 06:16:57'),
(4, 1753, '3', -0.559401, 25, 0, '2017-09-13 06:16:58'),
(26, 1197, '1', 1.17188, 9, 1, '2017-09-13 06:16:58'),
(30, 2403, '2', 2.43, 9, 1, '2017-09-13 06:16:59'),
(9, 3047, '1', -2.58673, 2, 0, '2017-09-13 06:16:59'),
(2, 171, '1', 0.1875, 75, 1, '2017-09-13 06:17:00'),
(14, 3185, '1', -1.3068, 17, 0, '2017-09-13 06:17:00'),
(21, 2678, '0', 0, 16, -1, '2017-09-13 06:17:00'),
(29, 62, '0', -0.0075, 20, 0, '2017-09-13 06:17:02'),
(15, 84, '2', -0.0675, 17, 0, '2017-09-13 06:17:03'),
(8, 758, '0', 0, 20, -1, '2017-09-13 06:17:03'),
(16, 1206, '3', -1.8, 24, 0, '2017-09-13 06:17:03'),
(21, 2682, '0', 0, 3, -1, '2017-09-13 06:17:04'),
(18, 73, '2', 0, 20, 0, '2017-09-13 06:17:05'),
(6, 2657, '3', 2.60756, 22, 1, '2017-09-13 06:17:05'),
(30, 1109, '2', -1.08, 8, 0, '2017-09-13 06:17:06'),
(7, 1115, '1', 0.75, 10, 1, '2017-09-13 06:17:07'),
(19, 2659, '3', -2.22796, 36, 0, '2017-09-13 06:17:08'),
(4, 1739, '1', 1.88021, 10, 1, '2017-09-13 06:17:08'),
(8, 775, '0', 0, 5, -1, '2017-09-13 06:17:09'),
(1, 370, '4', -0.48, 12, 0, '2017-09-13 06:17:10'),
(7, 392, '1', -1.92, 4, 0, '2017-09-13 06:17:11'),
(9, 713, '3', 2.55621, 2, 1, '2017-09-13 06:17:11'),
(24, 104, '1', 2.07917, 67, 1, '2017-09-13 06:17:11'),
(8, 763, '0', 0, 3, -1, '2017-09-13 06:17:12'),
(22, 1481, '3', -0.226875, 29, 0, '2017-09-13 06:17:14'),
(5, 2945, '4', 2.57617, 19, 1, '2017-09-13 06:17:14'),
(14, 3161, '4', -1.5552, 14, 0, '2017-09-13 06:17:15'),
(7, 364, '2', 1.92, 4, 1, '2017-09-13 06:17:15'),
(9, 676, '1', -2.02423, 5, 0, '2017-09-13 06:17:16'),
(18, 93, '1', -0.428571, 12, 0, '2017-09-13 06:17:17'),
(8, 493, '1', 2.58532, 6, 1, '2017-09-13 06:17:17'),
(15, 92, '3', 0, 16, 0, '2017-09-13 06:17:18'),
(9, 2011, '3', -2.61333, 2, 0, '2017-09-13 06:17:18'),
(24, 99, '1', -1.2675, 7, 0, '2017-09-13 06:17:19'),
(29, 74, '2', -0.03, 18, 0, '2017-09-13 06:17:20'),
(9, 1996, '2', -2.25333, 4, 0, '2017-09-13 06:17:22'),
(3, 1257, '4', 0.0325521, 43, 1, '2017-09-13 06:17:22'),
(7, 2404, '1', 2.50095, 8, 1, '2017-09-13 06:17:23'),
(4, 1788, '4', 1.2675, 14, 1, '2017-09-13 06:17:23'),
(8, 766, '1', 2.75691, 5, 1, '2017-09-13 06:17:23'),
(25, 2897, '0', -0.583258, 60, 0, '2017-09-13 06:17:24'),
(9, 659, '4', -2.43, 2, 0, '2017-09-13 06:17:24'),
(30, 2400, '3', 1.7198, 17, 1, '2017-09-13 06:17:24'),
(26, 1208, '2', -1.38, 27, 0, '2017-09-13 06:17:24'),
(15, 83, '2', -0.9075, 9, 0, '2017-09-13 06:17:27'),
(5, 2950, '4', -2.72082, 13, 0, '2017-09-13 06:17:27'),
(18, 84, '4', -1.5, 10, 0, '2017-09-13 06:17:27'),
(9, 703, '1', -2.08333, 4, 0, '2017-09-13 06:17:28'),
(29, 77, '4', -1.08, 8, 0, '2017-09-13 06:17:28'),
(16, 1204, '1', -1.375, 26, 0, '2017-09-13 06:17:30'),
(4, 1760, '2', 2.00826, 8, 1, '2017-09-13 06:17:30'),
(9, 679, '3', -2.29688, 3, 0, '2017-09-13 06:17:31'),
(25, 2896, '1', -2.85477, 7, 0, '2017-09-13 06:17:31'),
(6, 2664, '3', -2.58532, 26, 0, '2017-09-13 06:17:31'),
(24, 102, '3', 0.27, 14, 1, '2017-09-13 06:17:32'),
(29, 68, '3', 1.47, 6, 1, '2017-09-13 06:17:34'),
(5, 2952, '2', 2.81118, 9, 1, '2017-09-13 06:17:36'),
(15, 94, '2', -0.75, 10, 0, '2017-09-13 06:17:37'),
(30, 387, '3', -0.27, 14, 0, '2017-09-13 06:17:39'),
(7, 384, '1', 0.12, 16, 1, '2017-09-13 06:17:39'),
(3, 1189, '3', 0.46301, 17, 1, '2017-09-13 06:17:39'),
(18, 94, '3', -1.2, 12, 0, '2017-09-13 06:17:40'),
(16, 1173, '2', 0.75, 10, 1, '2017-09-13 06:17:40'),
(29, 76, '3', -1.47, 6, 0, '2017-09-13 06:17:40'),
(11, 2664, '3', -2.2953, 43, 0, '2017-09-13 06:17:41'),
(6, 2659, '3', -2.73401, 13, 0, '2017-09-13 06:17:44'),
(14, 3190, '3', -0.48, 30, 0, '2017-09-13 06:17:45'),
(5, 2957, '3', -2.76655, 11, 0, '2017-09-13 06:17:47'),
(15, 95, '3', 0.27, 14, 1, '2017-09-13 06:17:51'),
(16, 1295, '4', 0.75, 12, 1, '2017-09-13 06:17:51'),
(24, 103, '1', -0.75, 20, 0, '2017-09-13 06:17:52'),
(26, 1200, '2', -0.148148, 28, 0, '2017-09-13 06:17:52'),
(3, 1284, '3', 0.1875, 15, 1, '2017-09-13 06:17:55'),
(6, 2654, '0', 0, 10, -1, '2017-09-13 06:17:55'),
(22, 1475, '2', 0.0354442, 41, 1, '2017-09-13 06:17:55'),
(7, 2422, '3', -2.25604, 17, 0, '2017-09-13 06:17:56'),
(2, 1264, '0', 0, 56, -1, '2017-09-13 06:17:57'),
(18, 85, '2', 0.03, 18, 1, '2017-09-13 06:17:57'),
(29, 84, '4', -0.03, 18, 0, '2017-09-13 06:17:58'),
(16, 1229, '4', 2.61111, 7, 1, '2017-09-13 06:17:58'),
(14, 3175, '3', -1.6428, 13, 0, '2017-09-13 06:17:58'),
(30, 1137, '0', -0.0075, 20, 0, '2017-09-13 06:17:59'),
(7, 380, '3', -1.92, 4, 0, '2017-09-13 06:18:00'),
(15, 93, '1', -0.244898, 10, 0, '2017-09-13 06:18:02'),
(5, 2937, '2', 2.6739, 15, 1, '2017-09-13 06:18:03'),
(2, 1176, '4', 2.25, 7, 1, '2017-09-13 06:18:04'),
(24, 107, '1', -1.47, 12, 0, '2017-09-13 06:18:04'),
(26, 1219, '3', 0.75, 11, 1, '2017-09-13 06:18:04'),
(4, 1754, '1', -0.411523, 34, 0, '2017-09-13 06:18:04'),
(29, 93, '1', -0.382653, 9, 0, '2017-09-13 06:18:07'),
(25, 1174, '3', 0.869823, 12, 1, '2017-09-13 06:18:09'),
(7, 2429, '3', -2.54709, 11, 0, '2017-09-13 06:18:11'),
(16, 1235, '3', -2.36364, 14, 0, '2017-09-13 06:18:13'),
(26, 1293, '2', 1.02083, 10, 1, '2017-09-13 06:18:14'),
(18, 83, '2', -0.0675, 17, 0, '2017-09-13 06:18:15'),
(15, 86, '3', -0.27, 14, 0, '2017-09-13 06:18:15'),
(21, 854, '1', 1.85204, 15, 1, '2017-09-13 06:18:16'),
(30, 398, '3', -0.03, 18, 0, '2017-09-13 06:18:17'),
(22, 1469, '2', 0.676875, 21, 1, '2017-09-13 06:18:17'),
(4, 1759, '2', -1.12965, 17, 0, '2017-09-13 06:18:21'),
(11, 2644, '3', -2.33034, 41, 0, '2017-09-13 06:18:22'),
(6, 2639, '2', -2.38385, 28, 0, '2017-09-13 06:18:23'),
(22, 1491, '1', -2.20408, 6, 0, '2017-09-13 06:18:23'),
(19, 1308, '3', 1.20333, 22, 1, '2017-09-13 06:18:23'),
(25, 1194, '1', 0.75, 14, 1, '2017-09-13 06:18:24'),
(3, 1282, '2', -0.00333333, 29, 0, '2017-09-13 06:18:24'),
(29, 85, '0', 0, 20, -1, '2017-09-13 06:18:27'),
(4, 1743, '1', -2.04726, 8, 0, '2017-09-13 06:18:30'),
(26, 1284, '1', -0.45, 17, 0, '2017-09-13 06:18:30'),
(21, 852, '4', 1.61333, 16, 1, '2017-09-13 06:18:32'),
(11, 1162, '3', 1.88988, 10, 1, '2017-09-13 06:18:32'),
(14, 3186, '2', -0.3072, 34, 0, '2017-09-13 06:18:32'),
(25, 1177, '2', 1.21488, 8, 1, '2017-09-13 06:18:32'),
(15, 85, '1', -0.03, 18, 0, '2017-09-13 06:18:33'),
(6, 2638, '3', -2.72703, 12, 0, '2017-09-13 06:18:35'),
(18, 95, '0', -0.0075, 20, 0, '2017-09-13 06:18:35'),
(16, 1266, '1', -1.8, 24, 0, '2017-09-13 06:18:37'),
(30, 384, '0', -0.0075, 20, 0, '2017-09-13 06:18:37'),
(11, 1163, '1', 2.36512, 6, 1, '2017-09-13 06:18:38'),
(26, 1171, '4', 1.95, 7, 1, '2017-09-13 06:18:38'),
(5, 1635, '4', 0.12, 24, 1, '2017-09-13 06:18:42'),
(14, 3177, '4', 1.92, 10, 1, '2017-09-13 06:18:42'),
(4, 1732, '4', -1.6875, 14, 0, '2017-09-13 06:18:44'),
(11, 2651, '1', -2.82346, 8, 0, '2017-09-13 06:18:46'),
(29, 91, '0', -0.0075, 20, 0, '2017-09-13 06:18:47'),
(14, 3206, '3', -2.2188, 7, 0, '2017-09-13 06:18:49'),
(26, 1189, '3', 1.71429, 12, 1, '2017-09-13 06:18:50'),
(18, 91, '3', -0.12, 16, 0, '2017-09-13 06:18:51'),
(30, 1120, '1', -0.12, 16, 0, '2017-09-13 06:18:53'),
(1, 2432, '3', -0.0158678, 102, 0, '2017-09-13 06:18:53'),
(21, 1301, '2', -1.35425, 21, 0, '2017-09-13 06:18:53'),
(24, 106, '3', 0.100833, 49, 1, '2017-09-13 06:18:54'),
(16, 169, '2', 1.2513, 17, 1, '2017-09-13 06:18:54'),
(3, 1281, '0', -0.00333333, 30, 0, '2017-09-13 06:18:54'),
(29, 90, '2', 0.9075, 9, 1, '2017-09-13 06:18:56'),
(4, 1773, '3', -1.60207, 14, 0, '2017-09-13 06:18:58'),
(6, 2646, '2', -2.49841, 24, 0, '2017-09-13 06:18:59'),
(5, 1641, '3', 0.382653, 18, 1, '2017-09-13 06:19:01'),
(11, 2656, '4', -2.79651, 15, 0, '2017-09-13 06:19:01'),
(6, 1149, '1', 2.25, 5, 1, '2017-09-13 06:19:04'),
(14, 3209, '1', 1.5552, 14, 1, '2017-09-13 06:19:04'),
(24, 105, '1', -0.292969, 11, 0, '2017-09-13 06:19:04'),
(4, 1740, '3', 2.2376, 6, 1, '2017-09-13 06:19:04'),
(25, 1276, '0', -0.00292969, 32, 0, '2017-09-13 06:19:05'),
(26, 1175, '4', 1.5, 16, 1, '2017-09-13 06:19:06'),
(1, 396, '2', -0.27, 14, 0, '2017-09-13 06:19:07'),
(22, 1488, '0', -0.00154959, 44, 0, '2017-09-13 06:19:08'),
(19, 602, '3', -0.264404, 45, 0, '2017-09-13 06:19:08'),
(11, 2638, '3', -2.84236, 7, 0, '2017-09-13 06:19:09'),
(18, 86, '1', -0.0675, 17, 0, '2017-09-13 06:19:09'),
(6, 1161, '3', -2.13414, 8, 0, '2017-09-13 06:19:13'),
(30, 401, '0', -0.0075, 20, 0, '2017-09-13 06:19:13'),
(3, 1175, '4', 0.354492, 21, 1, '2017-09-13 06:19:15'),
(22, 1468, '2', 1.92, 8, 1, '2017-09-13 06:19:15'),
(29, 95, '4', -0.0075, 19, 0, '2017-09-13 06:19:16'),
(11, 2636, '2', 2.88601, 7, 1, '2017-09-13 06:19:16'),
(4, 1736, '1', -1.6875, 14, 0, '2017-09-13 06:19:18'),
(25, 1292, '2', -0.75, 15, 0, '2017-09-13 06:19:20'),
(5, 1632, '1', -0.333333, 20, 0, '2017-09-13 06:19:21'),
(1, 371, '2', -0.12, 16, 0, '2017-09-13 06:19:23'),
(11, 1158, '2', 2.13414, 8, 1, '2017-09-13 06:19:24'),
(18, 92, '3', 0, 16, 0, '2017-09-13 06:19:25'),
(6, 1157, '2', -0.9, 14, 0, '2017-09-13 06:19:26'),
(14, 3170, '3', 0.8112, 24, 1, '2017-09-13 06:19:27'),
(26, 1199, '2', -0.84375, 23, 0, '2017-09-13 06:19:29'),
(19, 606, '1', -1.33333, 20, 0, '2017-09-13 06:19:29'),
(30, 1115, '1', 0.3675, 13, 1, '2017-09-13 06:19:30'),
(24, 117, '4', 0.0533333, 26, 1, '2017-09-13 06:19:30'),
(29, 94, '2', -0.03, 18, 0, '2017-09-13 06:19:33'),
(30, 1138, '0', -0.0075, 20, 0, '2017-09-13 06:19:33'),
(5, 1633, '2', 0.536982, 15, 1, '2017-09-13 06:19:36'),
(1, 401, '1', -0.48, 12, 0, '2017-09-13 06:19:36'),
(6, 1147, '2', -1.5, 10, 0, '2017-09-13 06:19:36'),
(4, 1725, '3', -1.17188, 18, 0, '2017-09-13 06:19:36'),
(22, 1485, '4', 1.0662, 21, 1, '2017-09-13 06:19:37'),
(18, 89, '3', -0.27, 14, 0, '2017-09-13 06:19:38'),
(16, 1230, '1', -0.292969, 44, 0, '2017-09-13 06:19:39'),
(11, 2657, '0', 0, 15, -1, '2017-09-13 06:19:39'),
(29, 86, '1', -1.08, 8, 0, '2017-09-13 06:19:41'),
(6, 1142, '4', 2.25, 5, 1, '2017-09-13 06:19:41'),
(24, 120, '1', -0.48, 12, 0, '2017-09-13 06:19:42'),
(5, 1634, '3', 1.6875, 6, 1, '2017-09-13 06:19:42'),
(14, 3198, '1', -1.47, 15, 0, '2017-09-13 06:19:43'),
(3, 1199, '3', 0.046875, 28, 1, '2017-09-13 06:19:43'),
(25, 1263, '3', -0.48, 24, 0, '2017-09-13 06:19:44'),
(21, 602, '4', -0.0732422, 54, 0, '2017-09-13 06:19:47'),
(11, 2659, '3', -2.83779, 8, 0, '2017-09-13 06:19:47'),
(6, 2456, '0', 0, 7, -1, '2017-09-13 06:19:49'),
(18, 82, '1', 0.75, 10, 1, '2017-09-13 06:19:49'),
(30, 370, '2', 0.0675, 23, 1, '2017-09-13 06:19:50'),
(24, 116, '0', -0.03, 10, 0, '2017-09-13 06:19:52'),
(4, 1786, '1', -1.51886, 15, 0, '2017-09-13 06:19:52'),
(22, 1486, '4', -1.3032, 15, 0, '2017-09-13 06:19:52'),
(29, 92, '4', 0.105469, 13, 1, '2017-09-13 06:19:54'),
(1, 397, '1', -0.0075, 19, 0, '2017-09-13 06:19:55'),
(14, 3258, '1', 1.6875, 12, 1, '2017-09-13 06:19:55'),
(18, 90, '2', 1.47, 6, 1, '2017-09-13 06:19:55'),
(6, 1146, '2', -1.65, 9, 0, '2017-09-13 06:19:57'),
(4, 1775, '2', -1.92, 6, 0, '2017-09-13 06:19:58'),
(24, 112, '1', -2.1675, 6, 0, '2017-09-13 06:19:59'),
(30, 1116, '2', -0.48, 12, 0, '2017-09-13 06:20:02'),
(4, 1761, '3', 2.35692, 5, 1, '2017-09-13 06:20:03'),
(6, 1156, '1', 2.1, 6, 1, '2017-09-13 06:20:03'),
(19, 593, '2', -0.520833, 35, 0, '2017-09-13 06:20:04'),
(4, 1774, '2', -2.29688, 5, 0, '2017-09-13 06:20:08'),
(1, 2408, '3', 2.10149, 15, 1, '2017-09-13 06:20:10'),
(24, 119, '3', 2.6838, 13, 1, '2017-09-13 06:20:11'),
(29, 82, '1', 0.03, 18, 1, '2017-09-13 06:20:12'),
(25, 1297, '3', 0.800833, 29, 1, '2017-09-13 06:20:13'),
(18, 87, '2', -0.3, 18, 0, '2017-09-13 06:20:13'),
(3, 1200, '4', 0.0578704, 31, 1, '2017-09-13 06:20:15'),
(26, 1268, '0', -0.0625, 48, 0, '2017-09-13 06:20:17'),
(16, 1274, '3', -0.309949, 38, 0, '2017-09-13 06:20:17'),
(22, 1482, '2', -0.559401, 25, 0, '2017-09-13 06:20:18'),
(14, 3191, '3', 0.813802, 23, 1, '2017-09-13 06:20:19'),
(29, 83, '1', 1.2675, 7, 1, '2017-09-13 06:20:19'),
(6, 1155, '0', -0.15, 20, 0, '2017-09-13 06:20:24'),
(4, 1756, '1', 1.02083, 20, 1, '2017-09-13 06:20:28'),
(11, 2661, '2', 2.48292, 42, 1, '2017-09-13 06:20:29'),
(30, 2414, '3', 1.39463, 28, 1, '2017-09-13 06:20:30'),
(22, 1476, '0', 0, 15, -1, '2017-09-13 06:20:33'),
(18, 81, '1', -0.15, 19, 0, '2017-09-13 06:20:33'),
(25, 1210, '3', -0.0833333, 20, 0, '2017-09-13 06:20:33'),
(21, 619, '1', -0.163333, 46, 0, '2017-09-13 06:20:33'),
(4, 1784, '4', 1.47, 6, 1, '2017-09-13 06:20:34'),
(6, 1143, '2', -1.5, 10, 0, '2017-09-13 06:20:34'),
(29, 81, '1', -0.1875, 15, 0, '2017-09-13 06:20:34'),
(19, 597, '4', -0.643004, 29, 0, '2017-09-13 06:20:34'),
(5, 1698, '0', -0.00110947, 52, 0, '2017-09-13 06:20:35'),
(4, 1785, '2', -2.14793, 8, 0, '2017-09-13 06:20:42'),
(26, 1281, '4', -0.5, 25, 0, '2017-09-13 06:20:42'),
(19, 1310, '4', 2.05141, 9, 1, '2017-09-13 06:20:43'),
(14, 3212, '1', -0.688802, 25, 0, '2017-09-13 06:20:44'),
(25, 1216, '0', 0, 10, -1, '2017-09-13 06:20:44'),
(30, 392, '0', 0, 14, -1, '2017-09-13 06:20:44'),
(11, 1161, '3', -1.19055, 15, 0, '2017-09-13 06:20:45'),
(21, 1091, '3', -1.84083, 13, 0, '2017-09-13 06:20:46'),
(6, 2449, '3', 2.61, 13, 1, '2017-09-13 06:20:47'),
(1, 2429, '4', 1.59245, 38, 1, '2017-09-13 06:20:48'),
(30, 363, '3', 1.6875, 5, 1, '2017-09-13 06:20:49'),
(29, 87, '1', 0.03, 18, 1, '2017-09-13 06:20:52'),
(19, 596, '2', -1.81481, 12, 0, '2017-09-13 06:20:55'),
(11, 2660, '2', -2.82602, 12, 0, '2017-09-13 06:20:56'),
(21, 600, '3', 1.93718, 11, 1, '2017-09-13 06:20:57'),
(5, 1681, '2', -0.880208, 22, 0, '2017-09-13 06:20:57'),
(3, 1269, '4', -0.046875, 42, 0, '2017-09-13 06:20:57'),
(22, 1474, '0', 0, 25, -1, '2017-09-13 06:20:58'),
(6, 1162, '2', -1.62865, 12, 0, '2017-09-13 06:20:59'),
(30, 1140, '1', 0.75, 10, 1, '2017-09-13 06:20:59'),
(14, 3225, '1', -1.2513, 17, 0, '2017-09-13 06:21:01'),
(11, 2655, '2', -2.94643, 4, 0, '2017-09-13 06:21:01'),
(4, 1726, '2', -1.0092, 21, 0, '2017-09-13 06:21:03'),
(11, 2652, '1', 2.88783, 7, 1, '2017-09-13 06:21:08'),
(1, 399, '2', 0, 20, 0, '2017-09-13 06:21:08'),
(29, 89, '1', -0.03, 18, 0, '2017-09-13 06:21:10'),
(6, 2447, '2', -2.52273, 14, 0, '2017-09-13 06:21:13'),
(21, 996, '4', -1.3872, 16, 0, '2017-09-13 06:21:13'),
(19, 604, '3', 1.40083, 19, 1, '2017-09-13 06:21:14'),
(4, 1738, '3', -1.43027, 13, 0, '2017-09-13 06:21:16'),
(22, 1471, '1', -1.33333, 20, 0, '2017-09-13 06:21:18'),
(30, 1147, '2', 0, 20, 0, '2017-09-13 06:21:20'),
(30, 2450, '0', -2.60417, 20, 0, '2017-09-13 06:21:20'),
(26, 1257, '3', -0.5625, 39, 0, '2017-09-13 06:21:21'),
(4, 1728, '1', -2.40166, 4, 0, '2017-09-13 06:21:21'),
(6, 1145, '3', -1.8, 8, 0, '2017-09-13 06:21:21'),
(25, 1261, '0', -0.00207756, 38, 0, '2017-09-13 06:21:22'),
(29, 108, '3', -0.3675, 13, 0, '2017-09-13 06:21:23'),
(5, 1658, '2', -0.0533333, 26, 0, '2017-09-13 06:21:23'),
(1, 378, '2', -0.12, 16, 0, '2017-09-13 06:21:24'),
(4, 1792, '3', -2.2376, 6, 0, '2017-09-13 06:21:27'),
(11, 2693, '1', -2.65665, 20, 0, '2017-09-13 06:21:28'),
(14, 3189, '3', 0.574219, 27, 1, '2017-09-13 06:21:28'),
(3, 1202, '1', 0.037037, 32, 1, '2017-09-13 06:21:30'),
(11, 2677, '1', -2.91946, 4, 0, '2017-09-13 06:21:32'),
(30, 373, '2', -0.3675, 13, 0, '2017-09-13 06:21:32'),
(25, 1183, '2', 0.75, 11, 1, '2017-09-13 06:21:33'),
(29, 105, '4', 0.292969, 11, 1, '2017-09-13 06:21:34'),
(1, 373, '1', 0.75, 10, 1, '2017-09-13 06:21:35'),
(3, 1171, '4', 0.6075, 11, 1, '2017-09-13 06:21:41'),
(14, 3228, '2', -1.59505, 13, 0, '2017-09-13 06:21:41'),
(29, 107, '4', -2.04187, 7, 0, '2017-09-13 06:21:41'),
(22, 3000, '0', -0.00520833, 24, 0, '2017-09-13 06:21:42'),
(1, 1122, '4', 0.9075, 9, 1, '2017-09-13 06:21:43'),
(19, 1318, '2', 0.697385, 29, 1, '2017-09-13 06:21:44'),
(16, 498, '1', -1.36688, 13, 0, '2017-09-13 06:21:45'),
(25, 1170, '2', 0.130208, 19, 1, '2017-09-13 06:21:53'),
(15, 110, '1', -0.75, 200, 0, '2017-09-13 06:21:53'),
(5, 1668, '2', -0.1875, 30, 0, '2017-09-13 06:21:53'),
(1, 384, '1', 0.6075, 11, 1, '2017-09-13 06:21:55'),
(16, 489, '4', -1.57687, 11, 0, '2017-09-13 06:21:56'),
(25, 1186, '3', 1.85204, 6, 1, '2017-09-13 06:21:59'),
(3, 1217, '2', -0.3, 18, 0, '2017-09-13 06:21:59'),
(22, 1470, '1', 1.1532, 19, 1, '2017-09-13 06:22:01'),
(25, 1270, '0', 0, 3, -1, '2017-09-13 06:22:02'),
(21, 853, '3', -0.100833, 49, 0, '2017-09-13 06:22:02'),
(1, 379, '3', 0.9075, 9, 1, '2017-09-13 06:22:04'),
(16, 734, '2', 1.08, 12, 1, '2017-09-13 06:22:08'),
(26, 1269, '0', -0.0625, 48, 0, '2017-09-13 06:22:09'),
(15, 108, '2', 0.12, 16, 1, '2017-09-13 06:22:09'),
(25, 1190, '4', 1.38138, 9, 1, '2017-09-13 06:22:10'),
(5, 1672, '1', -1.02083, 20, 0, '2017-09-13 06:22:14'),
(1, 1121, '2', -0.27, 14, 0, '2017-09-13 06:22:17'),
(30, 2419, '3', -1.14083, 46, 0, '2017-09-13 06:22:19'),
(22, 1473, '1', 1.3068, 17, 1, '2017-09-13 06:22:19'),
(16, 725, '1', -1.25606, 12, 0, '2017-09-13 06:22:20'),
(3, 1219, '0', -0.136364, 22, 0, '2017-09-13 06:22:21'),
(21, 599, '1', 1.2675, 21, 1, '2017-09-13 06:22:23'),
(14, 1210, '0', -0.00520833, 24, 0, '2017-09-13 06:22:25'),
(14, 1218, '3', -0.12, 24, 0, '2017-09-13 06:22:25'),
(19, 619, '1', -0.300833, 41, 0, '2017-09-13 06:22:25'),
(30, 368, '3', 1.47, 6, 1, '2017-09-13 06:22:25'),
(24, 2425, '4', 0.541875, 23, 1, '2017-09-13 06:22:26'),
(11, 2603, '1', 0.991875, 17, 1, '2017-09-13 06:22:30'),
(15, 107, '1', -0.48, 24, 0, '2017-09-13 06:22:33'),
(25, 1185, '4', 0.0956633, 23, 1, '2017-09-13 06:22:34'),
(11, 2611, '3', 2.29688, 5, 1, '2017-09-13 06:22:35'),
(30, 2406, '1', -2.29688, 11, 0, '2017-09-13 06:22:36'),
(1, 380, '0', -0.0075, 20, 0, '2017-09-13 06:22:38'),
(26, 1265, '0', 0, 29, -1, '2017-09-13 06:22:38'),
(22, 1487, '0', 0, 21, -1, '2017-09-13 06:22:40'),
(3, 1294, '2', -0.625, 19, 0, '2017-09-13 06:22:41'),
(24, 2460, '3', -1.08, 16, 0, '2017-09-13 06:22:42'),
(16, 733, '3', 0.6075, 22, 1, '2017-09-13 06:22:42'),
(19, 609, '2', 1.54083, 17, 1, '2017-09-13 06:22:42'),
(11, 2613, '4', 1.80187, 9, 1, '2017-09-13 06:22:44'),
(1, 366, '4', 1.08, 8, 1, '2017-09-13 06:22:46'),
(22, 3008, '1', -1.53061, 8, 0, '2017-09-13 06:22:48'),
(16, 490, '3', -2.08333, 6, 0, '2017-09-13 06:22:48'),
(25, 1173, '2', 0.1875, 15, 1, '2017-09-13 06:22:49'),
(16, 722, '3', 2.37037, 4, 1, '2017-09-13 06:22:52'),
(6, 2281, '2', -1.63894, 12, 0, '2017-09-13 06:22:53'),
(26, 1202, '3', -1.58333, 17, 0, '2017-09-13 06:22:55'),
(30, 391, '0', -0.0075, 20, 0, '2017-09-13 06:22:56'),
(11, 2609, '3', -1.47, 12, 0, '2017-09-13 06:22:57'),
(14, 1276, '0', -0.00292969, 32, 0, '2017-09-13 06:22:57'),
(5, 1695, '1', -0.0833333, 45, 0, '2017-09-13 06:22:59'),
(1, 2418, '2', 2.10422, 13, 1, '2017-09-13 06:22:59'),
(22, 3002, '3', -0.75, 13, 0, '2017-09-13 06:23:02'),
(15, 103, '3', 0.226875, 29, 1, '2017-09-13 06:23:02'),
(16, 509, '2', -1.6875, 9, 0, '2017-09-13 06:23:02'),
(26, 1191, '3', 2.14286, 8, 1, '2017-09-13 06:23:03'),
(11, 2605, '2', 2.1675, 6, 1, '2017-09-13 06:23:03'),
(6, 2284, '2', -1.51454, 11, 0, '2017-09-13 06:23:04'),
(5, 1702, '4', -2.00826, 8, 0, '2017-09-13 06:23:08'),
(24, 2430, '1', -0.3675, 26, 0, '2017-09-13 06:23:08');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(11, 2606, '1', 2.29688, 5, 1, '2017-09-13 06:23:08'),
(1, 1107, '4', 0.6075, 11, 1, '2017-09-13 06:23:10'),
(14, 1173, '2', 0.3675, 13, 1, '2017-09-13 06:23:11'),
(6, 2271, '1', 1.76333, 7, 1, '2017-09-13 06:23:11'),
(25, 1227, '0', -0.00520833, 24, 0, '2017-09-13 06:23:14'),
(16, 732, '2', -1.02083, 15, 0, '2017-09-13 06:23:17'),
(19, 598, '2', -0.563333, 34, 0, '2017-09-13 06:23:17'),
(14, 1198, '4', 1.08, 8, 1, '2017-09-13 06:23:19'),
(21, 607, '0', -0.000956633, 56, 0, '2017-09-13 06:23:19'),
(5, 1694, '1', 1.54395, 13, 1, '2017-09-13 06:23:20'),
(11, 2614, '4', 1.47, 12, 1, '2017-09-13 06:23:20'),
(29, 104, '2', -1.65392, 103, 0, '2017-09-13 06:23:24'),
(24, 2390, '3', -0.991875, 17, 0, '2017-09-13 06:23:25'),
(21, 594, '3', 2.2188, 7, 1, '2017-09-13 06:23:26'),
(16, 487, '4', 1.6875, 10, 1, '2017-09-13 06:23:27'),
(22, 1478, '2', 0.316875, 27, 1, '2017-09-13 06:23:28'),
(18, 110, '1', -1.695, 174, 0, '2017-09-13 06:23:29'),
(11, 2610, '3', 1.80187, 9, 1, '2017-09-13 06:23:29'),
(14, 1184, '4', 0.880208, 11, 1, '2017-09-13 06:23:30'),
(6, 2286, '1', -0.668981, 19, 0, '2017-09-13 06:23:30'),
(3, 1229, '1', -0.0164609, 50, 0, '2017-09-13 06:23:31'),
(29, 110, '1', -2.8812, 8, 0, '2017-09-13 06:23:32'),
(25, 1218, '0', -0.0075, 20, 0, '2017-09-13 06:23:34'),
(24, 2436, '2', -1.80187, 9, 0, '2017-09-13 06:23:34'),
(11, 2632, '2', -2.6, 8, 0, '2017-09-13 06:23:37'),
(21, 603, '4', -1.6875, 13, 0, '2017-09-13 06:23:39'),
(30, 2432, '1', -1.14645, 42, 0, '2017-09-13 06:23:39'),
(26, 1287, '1', -0.75, 36, 0, '2017-09-13 06:23:39'),
(19, 624, '1', 1.20333, 22, 1, '2017-09-13 06:23:39'),
(6, 2275, '2', -1.94093, 9, 0, '2017-09-13 06:23:39'),
(24, 2417, '3', 1.92, 8, 1, '2017-09-13 06:23:42'),
(3, 1188, '1', 1.10587, 11, 1, '2017-09-13 06:23:42'),
(16, 728, '4', -1.09903, 15, 0, '2017-09-13 06:23:42'),
(5, 1646, '0', -0.00443787, 26, 0, '2017-09-13 06:23:46'),
(14, 1195, '4', 0.0675, 17, 1, '2017-09-13 06:23:47'),
(19, 605, '4', -2.08333, 10, 0, '2017-09-13 06:23:49'),
(22, 1472, '4', -0.676875, 21, 0, '2017-09-13 06:23:50'),
(6, 2280, '3', -1.44676, 11, 0, '2017-09-13 06:23:50'),
(26, 1294, '1', -1.375, 13, 0, '2017-09-13 06:23:52'),
(25, 1197, '3', -0.1875, 18, 0, '2017-09-13 06:23:53'),
(11, 2615, '4', -0.991875, 17, 0, '2017-09-13 06:23:54'),
(16, 481, '1', 0.9075, 18, 1, '2017-09-13 06:24:00'),
(5, 1708, '2', -1.50521, 14, 0, '2017-09-13 06:24:01'),
(29, 103, '1', -0.151875, 31, 0, '2017-09-13 06:24:03'),
(24, 2387, '4', 0.676875, 21, 1, '2017-09-13 06:24:03'),
(26, 1282, '0', 0, 13, -1, '2017-09-13 06:24:05'),
(21, 601, '4', 0.860969, 26, 1, '2017-09-13 06:24:05'),
(11, 2607, '4', 1.57687, 11, 1, '2017-09-13 06:24:05'),
(1, 2427, '4', 0.853333, 56, 1, '2017-09-13 06:24:07'),
(22, 1479, '3', 0.892562, 20, 1, '2017-09-13 06:24:10'),
(3, 1176, '0', -0.107143, 28, 0, '2017-09-13 06:24:10'),
(6, 2366, '4', 2.53496, 21, 1, '2017-09-13 06:24:11'),
(14, 1185, '4', 0.0612245, 24, 1, '2017-09-13 06:24:12'),
(29, 101, '3', -0.421875, 10, 0, '2017-09-13 06:24:13'),
(1, 389, '0', 0, 6, -1, '2017-09-13 06:24:13'),
(16, 464, '1', -0.75, 13, 0, '2017-09-13 06:24:13'),
(11, 2604, '1', -1.6875, 10, 0, '2017-09-13 06:24:15'),
(19, 613, '4', -0.853333, 28, 0, '2017-09-13 06:24:17'),
(25, 1184, '0', -0.00520833, 24, 0, '2017-09-13 06:24:18'),
(24, 2461, '1', -1.17188, 15, 0, '2017-09-13 06:24:18'),
(6, 2273, '1', 1.81481, 8, 1, '2017-09-13 06:24:19'),
(11, 2601, '2', 2.43, 4, 1, '2017-09-13 06:24:20'),
(29, 97, '4', 1.2675, 7, 1, '2017-09-13 06:24:20'),
(16, 724, '4', -1.61333, 8, 0, '2017-09-13 06:24:22'),
(26, 1220, '3', -1.07143, 18, 0, '2017-09-13 06:24:23'),
(6, 2287, '2', 1.96599, 8, 1, '2017-09-13 06:24:27'),
(1, 392, '0', 0, 15, -1, '2017-09-13 06:24:28'),
(19, 614, '2', -1.64609, 14, 0, '2017-09-13 06:24:31'),
(11, 2623, '3', -2.35, 13, 0, '2017-09-13 06:24:33'),
(21, 595, '3', -0.586908, 29, 0, '2017-09-13 06:24:34'),
(26, 1217, '4', -1.2, 12, 0, '2017-09-13 06:24:35'),
(14, 1203, '3', 0.12, 24, 1, '2017-09-13 06:24:35'),
(25, 1195, '0', -0.0075, 20, 0, '2017-09-13 06:24:38'),
(6, 1555, '3', 1.73677, 11, 1, '2017-09-13 06:24:38'),
(5, 1706, '0', 0, 38, -1, '2017-09-13 06:24:39'),
(1, 2420, '3', 2.35189, 11, 1, '2017-09-13 06:24:39'),
(29, 102, '0', -0.0075, 20, 0, '2017-09-13 06:24:40'),
(30, 2429, '4', 0.955255, 61, 1, '2017-09-13 06:24:40'),
(21, 403, '4', 2.25333, 8, 1, '2017-09-13 06:24:42'),
(19, 595, '4', 1.86501, 11, 1, '2017-09-13 06:24:42'),
(16, 726, '1', 0.373702, 22, 1, '2017-09-13 06:24:44'),
(14, 1183, '2', 1.21488, 8, 1, '2017-09-13 06:24:44'),
(6, 2272, '1', 1.94676, 7, 1, '2017-09-13 06:24:46'),
(30, 365, '1', -1.6875, 5, 0, '2017-09-13 06:24:46'),
(25, 1172, '4', 1.08, 8, 1, '2017-09-13 06:24:46'),
(21, 1317, '3', 2.34083, 7, 1, '2017-09-13 06:24:49'),
(14, 1170, '2', 1.02083, 10, 1, '2017-09-13 06:24:53'),
(25, 1196, '4', 1.33333, 8, 1, '2017-09-13 06:24:54'),
(24, 2397, '4', -0.016875, 37, 0, '2017-09-13 06:24:54'),
(1, 2447, '4', 2.42045, 17, 1, '2017-09-13 06:24:56'),
(21, 613, '3', -2.1675, 9, 0, '2017-09-13 06:24:58'),
(11, 2612, '2', -0.3675, 26, 0, '2017-09-13 06:24:59'),
(26, 172, '1', -1.70802, 27, 0, '2017-09-13 06:25:02'),
(14, 1197, '3', -1.17188, 9, 0, '2017-09-13 06:25:03'),
(22, 1477, '0', -0.00102881, 54, 0, '2017-09-13 06:25:04'),
(11, 2608, '3', 2.29688, 5, 1, '2017-09-13 06:25:05'),
(29, 109, '1', -0.0833333, 25, 0, '2017-09-13 06:25:05'),
(19, 603, '1', 0.869823, 24, 1, '2017-09-13 06:25:07'),
(30, 388, '0', -0.0075, 20, 0, '2017-09-13 06:25:07'),
(6, 2279, '3', -0.6075, 22, 0, '2017-09-13 06:25:08'),
(5, 1679, '3', -0.303719, 30, 0, '2017-09-13 06:25:09'),
(11, 2602, '3', 1.92, 8, 1, '2017-09-13 06:25:12'),
(16, 721, '4', -0.151875, 31, 0, '2017-09-13 06:25:15'),
(25, 1203, '3', 0.27, 21, 1, '2017-09-13 06:25:16'),
(24, 2392, '1', -0.676875, 21, 0, '2017-09-13 06:25:16'),
(3, 1264, '0', -0.0454545, 66, 0, '2017-09-13 06:25:17'),
(11, 2620, '4', 2.75, 5, 1, '2017-09-13 06:25:18'),
(6, 2276, '1', 1.6875, 12, 1, '2017-09-13 06:25:20'),
(11, 2617, '1', 2.8, 4, 1, '2017-09-13 06:25:21'),
(30, 1105, '2', 0.12, 16, 1, '2017-09-13 06:25:23'),
(29, 98, '1', -0.03, 18, 0, '2017-09-13 06:25:23'),
(5, 1704, '2', 1.60207, 14, 1, '2017-09-13 06:25:24'),
(22, 1506, '2', -1.0092, 21, 0, '2017-09-13 06:25:25'),
(26, 1283, '0', -0.00520833, 24, 0, '2017-09-13 06:25:26'),
(16, 736, '2', -1.37284, 11, 0, '2017-09-13 06:25:26'),
(19, 853, '4', -1.33333, 20, 0, '2017-09-13 06:25:27'),
(4, 490, '3', -1.6875, 9, 0, '2017-09-13 06:25:27'),
(24, 2423, '3', 1.36688, 13, 1, '2017-09-13 06:25:29'),
(21, 624, '4', -0.700833, 31, 0, '2017-09-13 06:25:29'),
(3, 1295, '4', 1.5, 12, 1, '2017-09-13 06:25:29'),
(30, 1107, '4', 1.08, 8, 1, '2017-09-13 06:25:30'),
(19, 601, '4', 2.58673, 4, 1, '2017-09-13 06:25:31'),
(29, 99, '2', 0.6075, 11, 1, '2017-09-13 06:25:34'),
(25, 1169, '2', 0.1875, 18, 1, '2017-09-13 06:25:34'),
(11, 2630, '3', -2.35, 13, 0, '2017-09-13 06:25:35'),
(16, 730, '1', -1.33333, 12, 0, '2017-09-13 06:25:38'),
(11, 2627, '2', 2.8, 4, 1, '2017-09-13 06:25:38'),
(1, 2438, '2', -2.03077, 42, 0, '2017-09-13 06:25:39'),
(6, 2270, '1', 1.03355, 19, 1, '2017-09-13 06:25:39'),
(14, 1261, '0', -0.00207756, 38, 0, '2017-09-13 06:25:41'),
(19, 1091, '3', -2.00083, 11, 0, '2017-09-13 06:25:42'),
(16, 720, '4', 2.40166, 4, 1, '2017-09-13 06:25:42'),
(24, 2421, '2', 1.2675, 14, 1, '2017-09-13 06:25:43'),
(11, 2621, '3', 2.75, 5, 1, '2017-09-13 06:25:44'),
(4, 481, '3', -1.08, 16, 0, '2017-09-13 06:25:44'),
(3, 1283, '2', -0.875, 17, 0, '2017-09-13 06:25:47'),
(25, 1291, '1', -0.3675, 13, 0, '2017-09-13 06:25:47'),
(29, 96, '3', 0.1875, 15, 1, '2017-09-13 06:25:49'),
(16, 727, '2', 1.94676, 7, 1, '2017-09-13 06:25:49'),
(30, 380, '0', -0.0075, 20, 0, '2017-09-13 06:25:50'),
(24, 2388, '3', 1.92, 8, 1, '2017-09-13 06:25:51'),
(4, 736, '2', -1.37284, 11, 0, '2017-09-13 06:25:54'),
(6, 2269, '4', 1.06293, 17, 1, '2017-09-13 06:25:56'),
(30, 375, '1', 1.2675, 7, 1, '2017-09-13 06:25:58'),
(25, 1198, '4', 0.6075, 11, 1, '2017-09-13 06:25:58'),
(1, 1152, '0', -0.15, 20, 0, '2017-09-13 06:25:59'),
(21, 1308, '3', 0.75, 30, 1, '2017-09-13 06:25:59'),
(29, 100, '0', -0.03, 10, 0, '2017-09-13 06:26:00'),
(19, 1301, '2', -1.5498, 18, 0, '2017-09-13 06:26:00'),
(11, 2733, '2', 2.40251, 17, 1, '2017-09-13 06:26:00'),
(6, 2282, '2', 2.25333, 4, 1, '2017-09-13 06:26:01'),
(22, 1501, '3', 0.0759298, 37, 1, '2017-09-13 06:26:03'),
(5, 1676, '3', -0.12, 40, 0, '2017-09-13 06:26:05'),
(4, 472, '3', -1.57687, 11, 0, '2017-09-13 06:26:05'),
(11, 2819, '2', 2.83093, 5, 1, '2017-09-13 06:26:06'),
(3, 1275, '1', -1.88889, 20, 0, '2017-09-13 06:26:07'),
(6, 2268, '1', 2.04187, 7, 1, '2017-09-13 06:26:08'),
(1, 1151, '2', 1.5, 10, 1, '2017-09-13 06:26:09'),
(29, 106, '1', -1.92, 12, 0, '2017-09-13 06:26:12'),
(11, 2729, '2', 2.72703, 8, 1, '2017-09-13 06:26:14'),
(1, 2439, '1', 2.82, 6, 1, '2017-09-13 06:26:15'),
(16, 731, '2', 0.231481, 26, 1, '2017-09-13 06:26:16'),
(4, 466, '2', -1.20333, 11, 0, '2017-09-13 06:26:17'),
(24, 2428, '2', -0.3675, 26, 0, '2017-09-13 06:26:17'),
(30, 1136, '0', -0.0075, 20, 0, '2017-09-13 06:26:18'),
(29, 111, '1', -0.75, 8, 0, '2017-09-13 06:26:20'),
(11, 2732, '4', 2.79651, 6, 1, '2017-09-13 06:26:20'),
(14, 1270, '3', -0.0510397, 40, 0, '2017-09-13 06:26:21'),
(5, 1666, '1', -1.04752, 18, 0, '2017-09-13 06:26:22'),
(16, 718, '1', 1.61333, 8, 1, '2017-09-13 06:26:24'),
(3, 1298, '1', 1.47, 18, 1, '2017-09-13 06:26:25'),
(30, 364, '2', 0.75, 10, 1, '2017-09-13 06:26:28'),
(4, 509, '3', -1.22454, 13, 0, '2017-09-13 06:26:30'),
(16, 729, '0', 0, 6, -1, '2017-09-13 06:26:30'),
(19, 607, '1', -0.506059, 33, 0, '2017-09-13 06:26:33'),
(14, 1292, '1', 0.75, 15, 1, '2017-09-13 06:26:37'),
(4, 730, '1', -1.81481, 8, 0, '2017-09-13 06:26:38'),
(6, 2290, '4', -1.125, 30, 0, '2017-09-13 06:26:38'),
(16, 472, '3', -1.92, 8, 0, '2017-09-13 06:26:38'),
(16, 486, '1', 2.22454, 5, 1, '2017-09-13 06:26:43'),
(11, 2734, '3', 2.17348, 23, 1, '2017-09-13 06:26:43'),
(30, 1122, '4', 0.12, 16, 1, '2017-09-13 06:26:45'),
(4, 465, '2', 1.76333, 7, 1, '2017-09-13 06:26:45'),
(25, 1269, '0', -0.00130208, 48, 0, '2017-09-13 06:26:47'),
(14, 1190, '4', 1.10587, 11, 1, '2017-09-13 06:26:48'),
(6, 2304, '2', -2.30769, 12, 0, '2017-09-13 06:26:50'),
(15, 1177, '2', 1.58678, 6, 1, '2017-09-13 06:26:52'),
(11, 2731, '4', 2.62111, 11, 1, '2017-09-13 06:26:54'),
(22, 1500, '4', 0.00110947, 51, 1, '2017-09-13 06:26:55'),
(14, 1196, '4', 1.33333, 8, 1, '2017-09-13 06:26:56'),
(21, 622, '2', 0.0075, 57, 1, '2017-09-13 06:26:57'),
(16, 719, '1', -1.12037, 14, 0, '2017-09-13 06:26:57'),
(24, 2405, '0', -0.001875, 40, 0, '2017-09-13 06:26:57'),
(25, 1284, '3', 0.75, 10, 1, '2017-09-13 06:26:57'),
(29, 1197, '3', -1.6875, 6, 0, '2017-09-13 06:26:57'),
(11, 2883, '3', 2.87228, 5, 1, '2017-09-13 06:26:59'),
(18, 1170, '1', -0.75, 12, 0, '2017-09-13 06:27:03'),
(16, 466, '3', 1.61333, 8, 1, '2017-09-13 06:27:05'),
(30, 1146, '0', -0.0075, 20, 0, '2017-09-13 06:27:05'),
(19, 611, '2', -0.4332, 31, 0, '2017-09-13 06:27:05'),
(6, 2278, '4', -1.02083, 15, 0, '2017-09-13 06:27:05'),
(5, 1700, '1', 0.0588, 43, 1, '2017-09-13 06:27:05'),
(15, 1194, '1', 0.860969, 13, 1, '2017-09-13 06:27:06'),
(26, 173, '0', -0.0003, 100, 0, '2017-09-13 06:27:06'),
(24, 2459, '3', 1.80187, 9, 1, '2017-09-13 06:27:06'),
(21, 606, '1', -1.92, 12, 0, '2017-09-13 06:27:08'),
(3, 1209, '0', 0, 42, -1, '2017-09-13 06:27:08'),
(29, 1184, '4', 0.75, 12, 1, '2017-09-13 06:27:10'),
(11, 2862, '0', 0, 11, -1, '2017-09-13 06:27:10'),
(4, 733, '4', -0.421875, 25, 0, '2017-09-13 06:27:11'),
(25, 1293, '1', -1.125, 15, 0, '2017-09-13 06:27:12'),
(5, 1674, '1', 2.14793, 8, 1, '2017-09-13 06:27:14'),
(22, 1493, '3', -0.826875, 19, 0, '2017-09-13 06:27:14'),
(26, 1229, '0', 0, 9, -1, '2017-09-13 06:27:15'),
(1, 2456, '3', -1.61538, 60, 0, '2017-09-13 06:27:15'),
(16, 485, '2', -1.73677, 11, 0, '2017-09-13 06:27:16'),
(14, 1216, '4', 0.0833333, 20, 1, '2017-09-13 06:27:17'),
(18, 1173, '2', 0.27, 14, 1, '2017-09-13 06:27:17'),
(30, 1145, '1', 0.3675, 13, 1, '2017-09-13 06:27:17'),
(4, 727, '4', -1.94676, 7, 0, '2017-09-13 06:27:18'),
(6, 1638, '2', 1.58678, 12, 1, '2017-09-13 06:27:18'),
(11, 2881, '1', -2.79285, 8, 0, '2017-09-13 06:27:18'),
(16, 737, '0', 0, 5, -1, '2017-09-13 06:27:21'),
(19, 1124, '2', -1.54083, 17, 0, '2017-09-13 06:27:22'),
(15, 1186, '3', 0.46301, 17, 1, '2017-09-13 06:27:22'),
(29, 1186, '3', 0.860969, 13, 1, '2017-09-13 06:27:22'),
(14, 1194, '1', 1.6875, 7, 1, '2017-09-13 06:27:24'),
(24, 2393, '4', -0.826875, 19, 0, '2017-09-13 06:27:25'),
(21, 598, '3', -1.47, 18, 0, '2017-09-13 06:27:26'),
(19, 622, '2', 2.1675, 9, 1, '2017-09-13 06:27:31'),
(16, 735, '4', 1.08, 12, 1, '2017-09-13 06:27:34'),
(11, 2885, '4', 2.59808, 15, 1, '2017-09-13 06:27:34'),
(15, 1196, '4', 0.75, 12, 1, '2017-09-13 06:27:34'),
(24, 2389, '3', -1.6875, 10, 0, '2017-09-13 06:27:35'),
(25, 1294, '0', -0.00520833, 24, 0, '2017-09-13 06:27:36'),
(30, 1148, '0', -0.0075, 20, 0, '2017-09-13 06:27:38'),
(5, 1709, '4', 0.6862, 24, 1, '2017-09-13 06:27:38'),
(3, 1204, '4', 1.125, 30, 1, '2017-09-13 06:27:38'),
(29, 1196, '4', 0.255208, 17, 1, '2017-09-13 06:27:39'),
(14, 1186, '3', 0.55102, 16, 1, '2017-09-13 06:27:39'),
(11, 2865, '0', 0, 8, -1, '2017-09-13 06:27:41'),
(25, 1220, '0', 0, 5, -1, '2017-09-13 06:27:42'),
(21, 1303, '1', 1.61333, 16, 1, '2017-09-13 06:27:42'),
(15, 1218, '1', -0.9075, 9, 0, '2017-09-13 06:27:44'),
(16, 494, '3', 1.20333, 11, 1, '2017-09-13 06:27:44'),
(1, 2445, '1', -2.30769, 30, 0, '2017-09-13 06:27:46'),
(24, 2415, '1', -1.47, 12, 0, '2017-09-13 06:27:47'),
(29, 1177, '2', 1.21488, 8, 1, '2017-09-13 06:27:47'),
(30, 1150, '3', -0.6075, 11, 0, '2017-09-13 06:27:49'),
(16, 723, '1', 2.22454, 5, 1, '2017-09-13 06:27:49'),
(21, 604, '3', 2.08333, 10, 1, '2017-09-13 06:27:52'),
(11, 2868, '2', 2.68328, 12, 1, '2017-09-13 06:27:53'),
(19, 599, '1', 1.20333, 22, 1, '2017-09-13 06:27:54'),
(6, 2285, '2', 0.0272109, 38, 1, '2017-09-13 06:27:55'),
(18, 1263, '1', 0.001875, 39, 1, '2017-09-13 06:27:56'),
(21, 1318, '2', 2.39158, 6, 1, '2017-09-13 06:27:58'),
(16, 465, '3', -1.20333, 11, 0, '2017-09-13 06:28:01'),
(1, 1150, '4', -0.75, 15, 0, '2017-09-13 06:28:01'),
(5, 1655, '2', -0.75, 22, 0, '2017-09-13 06:28:01'),
(3, 1206, '3', -1.85, 23, 0, '2017-09-13 06:28:01'),
(6, 2277, '2', 2.1168, 8, 1, '2017-09-13 06:28:04'),
(14, 1297, '3', 1.02083, 25, 1, '2017-09-13 06:28:05'),
(11, 2888, '3', 2.68328, 12, 1, '2017-09-13 06:28:06'),
(16, 744, '4', -2.29688, 5, 0, '2017-09-13 06:28:06'),
(19, 996, '4', -1.6428, 13, 0, '2017-09-13 06:28:07'),
(15, 1203, '3', 0.03, 27, 1, '2017-09-13 06:28:10'),
(21, 593, '1', 1.92, 12, 1, '2017-09-13 06:28:11'),
(11, 2871, '2', 2.87228, 5, 1, '2017-09-13 06:28:11'),
(26, 1206, '0', -0.000833333, 60, 0, '2017-09-13 06:28:15'),
(6, 2301, '4', -2.28, 12, 0, '2017-09-13 06:28:16'),
(22, 1505, '1', 0.135469, 63, 1, '2017-09-13 06:28:18'),
(11, 2905, '0', 0, 9, -1, '2017-09-13 06:28:20'),
(3, 1296, '3', -0.1875, 18, 0, '2017-09-13 06:28:20'),
(29, 1270, '3', -0.204159, 34, 0, '2017-09-13 06:28:21'),
(1, 1148, '0', -0.15, 20, 0, '2017-09-13 06:28:21'),
(19, 594, '2', -1.5552, 14, 0, '2017-09-13 06:28:21'),
(24, 2412, '4', -0.046875, 35, 0, '2017-09-13 06:28:22'),
(6, 2274, '3', -2.20408, 6, 0, '2017-09-13 06:28:22'),
(14, 1174, '3', 0.359467, 17, 1, '2017-09-13 06:28:22'),
(15, 1169, '2', 0.520833, 14, 1, '2017-09-13 06:28:24'),
(5, 1643, '1', 0, 26, 0, '2017-09-13 06:28:27'),
(6, 2283, '4', -1.83105, 7, 0, '2017-09-13 06:28:29'),
(4, 2406, '2', -1.6875, 22, 0, '2017-09-13 06:28:29'),
(25, 1257, '0', -0.00130208, 48, 0, '2017-09-13 06:28:30'),
(16, 477, '3', -0.459357, 28, 0, '2017-09-13 06:28:34'),
(18, 1297, '3', 0.403333, 38, 1, '2017-09-13 06:28:35'),
(19, 1303, '1', 1.6875, 15, 1, '2017-09-13 06:28:35'),
(25, 1171, '4', 1.47, 6, 1, '2017-09-13 06:28:36'),
(5, 1660, '4', 1.13609, 10, 1, '2017-09-13 06:28:36'),
(24, 2458, '1', -1.08, 16, 0, '2017-09-13 06:28:38'),
(1, 2443, '1', -2.44565, 17, 0, '2017-09-13 06:28:39'),
(30, 601, '2', -0.860969, 26, 0, '2017-09-13 06:28:39'),
(19, 1089, '4', -2.61333, 4, 0, '2017-09-13 06:28:40'),
(6, 2288, '1', 1.48915, 13, 1, '2017-09-13 06:28:42'),
(15, 1185, '2', -0.382653, 18, 0, '2017-09-13 06:28:43'),
(26, 1176, '0', -0.00382653, 28, 0, '2017-09-13 06:28:43'),
(3, 1289, '3', -0.541875, 23, 0, '2017-09-13 06:28:43'),
(22, 3076, '1', 0.00333333, 29, 1, '2017-09-13 06:28:47'),
(11, 2902, '2', 2.36193, 27, 1, '2017-09-13 06:28:47'),
(19, 854, '1', 2.35347, 8, 1, '2017-09-13 06:28:48'),
(29, 1185, '4', 0.00382653, 27, 1, '2017-09-13 06:28:48'),
(4, 364, '0', -0.0075, 20, 0, '2017-09-13 06:28:49'),
(25, 1199, '2', -1.6875, 14, 0, '2017-09-13 06:28:50'),
(30, 605, '2', 1.84083, 13, 1, '2017-09-13 06:28:52'),
(11, 2901, '3', -2.89738, 5, 0, '2017-09-13 06:28:52'),
(5, 1637, '1', 0.333333, 16, 1, '2017-09-13 06:28:53'),
(29, 1174, '3', 1.9571, 5, 1, '2017-09-13 06:28:53'),
(24, 2395, '3', -1.08, 16, 0, '2017-09-13 06:28:54'),
(18, 1195, '0', -0.0075, 20, 0, '2017-09-13 06:28:55'),
(16, 755, '0', 0, 24, -1, '2017-09-13 06:28:59'),
(29, 1172, '4', 1.47, 6, 1, '2017-09-13 06:28:59'),
(19, 403, '4', 1.92, 12, 1, '2017-09-13 06:29:00'),
(14, 1257, '2', -0.5625, 39, 0, '2017-09-13 06:29:02'),
(18, 1186, '3', 1.38138, 9, 1, '2017-09-13 06:29:05'),
(30, 1308, '3', 1.84083, 13, 1, '2017-09-13 06:29:05'),
(19, 850, '3', 2.43, 6, 1, '2017-09-13 06:29:06'),
(15, 1174, '3', 0, 26, 1, '2017-09-13 06:29:08'),
(4, 1136, '1', -0.0075, 19, 0, '2017-09-13 06:29:09'),
(1, 2413, '0', 0, 30, -1, '2017-09-13 06:29:09'),
(21, 850, '0', -0.000833333, 60, 0, '2017-09-13 06:29:11'),
(29, 1297, '3', 2.00083, 11, 1, '2017-09-13 06:29:11'),
(11, 2909, '3', -2.60112, 18, 0, '2017-09-13 06:29:11'),
(16, 745, '2', 1.2675, 14, 1, '2017-09-13 06:29:13'),
(14, 1169, '2', 0.75, 12, 1, '2017-09-13 06:29:14'),
(4, 1110, '2', 1.6875, 5, 1, '2017-09-13 06:29:14'),
(22, 1507, '1', 0.639053, 28, 1, '2017-09-13 06:29:16'),
(29, 1190, '4', 1.85204, 6, 1, '2017-09-13 06:29:16'),
(11, 2870, '3', 2.84605, 6, 1, '2017-09-13 06:29:17'),
(1, 1112, '1', -1.08, 8, 0, '2017-09-13 06:29:17'),
(6, 2300, '1', 0.17155, 35, 1, '2017-09-13 06:29:18'),
(24, 2399, '4', 0.48, 24, 1, '2017-09-13 06:29:18'),
(30, 600, '3', 1.76881, 13, 1, '2017-09-13 06:29:18'),
(5, 1693, '2', -0.688802, 25, 0, '2017-09-13 06:29:19'),
(18, 1194, '1', 0.75, 14, 1, '2017-09-13 06:29:19'),
(21, 1089, '4', -2.1675, 9, 0, '2017-09-13 06:29:20'),
(26, 1275, '2', -0.124486, 43, 0, '2017-09-13 06:29:26'),
(16, 743, '4', 0.925926, 16, 1, '2017-09-13 06:29:28'),
(30, 854, '1', 2.13122, 11, 1, '2017-09-13 06:29:29'),
(29, 1195, '4', 0.3675, 13, 1, '2017-09-13 06:29:29'),
(1, 363, '3', 0.48, 12, 1, '2017-09-13 06:29:29'),
(3, 172, '2', 1.01554, 46, 1, '2017-09-13 06:29:29'),
(6, 2293, '1', -1.50521, 14, 0, '2017-09-13 06:29:32'),
(19, 1317, '3', 0.963333, 26, 1, '2017-09-13 06:29:32'),
(21, 605, '3', -1.84083, 13, 0, '2017-09-13 06:29:33'),
(11, 2895, '2', 2.62572, 17, 1, '2017-09-13 06:29:34'),
(4, 399, '4', 0, 20, 0, '2017-09-13 06:29:34'),
(4, 2420, '0', -1.93001, 20, 0, '2017-09-13 06:29:34'),
(24, 2424, '4', -0.991875, 17, 0, '2017-09-13 06:29:35'),
(14, 1200, '2', -1.25, 21, 0, '2017-09-13 06:29:35'),
(29, 1263, '1', 2.1675, 6, 1, '2017-09-13 06:29:36'),
(16, 741, '4', -1.86981, 8, 0, '2017-09-13 06:29:37'),
(19, 1311, '4', 2.43, 5, 1, '2017-09-13 06:29:38'),
(21, 596, '2', -2.47016, 5, 0, '2017-09-13 06:29:39'),
(6, 2305, '2', -2.15643, 7, 0, '2017-09-13 06:29:39'),
(16, 747, '2', 2.22454, 5, 1, '2017-09-13 06:29:42'),
(4, 1105, '2', 1.08, 8, 1, '2017-09-13 06:29:43'),
(25, 1265, '0', -0.00110947, 52, 0, '2017-09-13 06:29:43'),
(11, 2894, '4', -2.789, 10, 0, '2017-09-13 06:29:44'),
(30, 595, '4', 1.43787, 16, 1, '2017-09-13 06:29:46'),
(21, 1311, '4', 2.1168, 8, 1, '2017-09-13 06:29:46'),
(4, 1137, '2', 2.1675, 3, 1, '2017-09-13 06:29:46'),
(5, 1662, '0', -0.00382653, 28, 0, '2017-09-13 06:29:47'),
(24, 2463, '1', 1.36688, 13, 1, '2017-09-13 06:29:48'),
(1, 394, '4', -0.0075, 19, 0, '2017-09-13 06:29:48'),
(6, 2303, '0', 0, 10, -1, '2017-09-13 06:29:49'),
(16, 754, '4', 2.08333, 7, 1, '2017-09-13 06:29:49'),
(18, 1276, '2', -0.0117188, 30, 0, '2017-09-13 06:29:49'),
(14, 1172, '4', 0.1875, 15, 1, '2017-09-13 06:29:50'),
(11, 2896, '3', 2.81118, 9, 1, '2017-09-13 06:29:53'),
(15, 1270, '3', -0.00141777, 45, 0, '2017-09-13 06:29:54'),
(4, 1112, '1', -0.75, 10, 0, '2017-09-13 06:29:56'),
(1, 1115, '1', 1.08, 8, 1, '2017-09-13 06:29:57'),
(29, 1175, '2', -0.84375, 23, 0, '2017-09-13 06:29:58'),
(24, 2407, '2', 1.47, 12, 1, '2017-09-13 06:30:00'),
(6, 2307, '3', 2.00826, 12, 1, '2017-09-13 06:30:00'),
(19, 600, '3', 1.04177, 23, 1, '2017-09-13 06:30:01'),
(16, 738, '4', -1.25606, 12, 0, '2017-09-13 06:30:01'),
(26, 1289, '1', -0.03, 36, 0, '2017-09-13 06:30:02'),
(4, 2404, '2', -2.62146, 6, 0, '2017-09-13 06:30:02'),
(15, 1173, '2', 0.9075, 9, 1, '2017-09-13 06:30:02'),
(1, 1117, '2', 1.47, 6, 1, '2017-09-13 06:30:02'),
(30, 613, '1', -1.40083, 19, 0, '2017-09-13 06:30:04'),
(5, 1675, '0', 0, 18, -1, '2017-09-13 06:30:05'),
(21, 615, '1', -1.33333, 20, 0, '2017-09-13 06:30:06'),
(4, 375, '1', 1.92, 4, 1, '2017-09-13 06:30:07'),
(3, 3063, '1', 0.137755, 22, 1, '2017-09-13 06:30:10'),
(30, 1089, '4', -2.25333, 8, 0, '2017-09-13 06:30:12'),
(11, 2907, '3', 2.55085, 20, 1, '2017-09-13 06:30:13'),
(1, 1146, '1', 1.2, 12, 1, '2017-09-13 06:30:14'),
(19, 615, '4', -1.84083, 13, 0, '2017-09-13 06:30:14'),
(18, 1203, '3', 0.0833333, 25, 1, '2017-09-13 06:30:14'),
(15, 1198, '4', 0.48, 12, 1, '2017-09-13 06:30:14'),
(6, 2291, '3', -1.36248, 15, 0, '2017-09-13 06:30:16'),
(24, 2452, '4', 1.08, 16, 1, '2017-09-13 06:30:16'),
(21, 1310, '4', 1.9571, 10, 1, '2017-09-13 06:30:16'),
(5, 1707, '3', -1.81481, 12, 0, '2017-09-13 06:30:17'),
(6, 2295, '2', -2.90477, 4, 0, '2017-09-13 06:30:20'),
(11, 2890, '4', 2.81118, 9, 1, '2017-09-13 06:30:22'),
(11, 2899, '2', 2.93908, 3, 1, '2017-09-13 06:30:25'),
(18, 1190, '4', 1.10587, 11, 1, '2017-09-13 06:30:26'),
(21, 614, '3', 1.99177, 10, 1, '2017-09-13 06:30:26'),
(14, 1263, '1', 0.016875, 37, 1, '2017-09-13 06:30:28'),
(6, 2299, '4', -2.1168, 8, 0, '2017-09-13 06:30:28'),
(5, 1647, '3', 0.869823, 12, 1, '2017-09-13 06:30:29'),
(30, 603, '1', 1.3591, 17, 1, '2017-09-13 06:30:30'),
(26, 1188, '0', -0.00382653, 28, 0, '2017-09-13 06:30:30'),
(15, 1263, '2', -0.9075, 18, 0, '2017-09-13 06:30:32'),
(16, 749, '1', -0.333333, 32, 0, '2017-09-13 06:30:34'),
(24, 2433, '1', 0.9075, 18, 1, '2017-09-13 06:30:34'),
(25, 1208, '0', -0.0012, 50, 0, '2017-09-13 06:30:34'),
(19, 852, '1', -1.2675, 21, 0, '2017-09-13 06:30:35'),
(11, 2923, '3', 2.78495, 12, 1, '2017-09-13 06:30:37'),
(6, 2298, '4', -2.1132, 9, 0, '2017-09-13 06:30:38'),
(16, 753, '4', 2.32823, 5, 1, '2017-09-13 06:30:39'),
(21, 609, '2', 1.84083, 13, 1, '2017-09-13 06:30:39'),
(19, 1333, '2', 2.52083, 5, 1, '2017-09-13 06:30:40'),
(1, 2434, '2', -2.23636, 28, 0, '2017-09-13 06:30:43'),
(3, 3158, '3', -0.0519391, 33, 0, '2017-09-13 06:30:44'),
(16, 748, '1', -2.04187, 7, 0, '2017-09-13 06:30:45'),
(14, 1291, '1', -0.0075, 19, 0, '2017-09-13 06:30:46'),
(30, 604, '4', -1.61333, 16, 0, '2017-09-13 06:30:47'),
(29, 1265, '3', -0.173077, 49, 0, '2017-09-13 06:30:48'),
(19, 1325, '1', 2.20408, 8, 1, '2017-09-13 06:30:48'),
(21, 611, '2', -1.92, 10, 0, '2017-09-13 06:30:49'),
(15, 1195, '4', 0.03, 18, 1, '2017-09-13 06:30:50'),
(11, 2924, '2', 2.76548, 13, 1, '2017-09-13 06:30:51'),
(4, 2427, '0', 0, 46, -1, '2017-09-13 06:30:52'),
(24, 2409, '3', -0.75, 20, 0, '2017-09-13 06:30:54'),
(6, 2302, '2', -1.30963, 19, 0, '2017-09-13 06:30:57'),
(16, 479, '2', -1.73677, 11, 0, '2017-09-13 06:30:57'),
(11, 2934, '0', 0, 8, -1, '2017-09-13 06:30:58'),
(18, 1261, '3', 0.00831025, 36, 1, '2017-09-13 06:31:02'),
(16, 739, '2', -2.08333, 6, 0, '2017-09-13 06:31:03'),
(15, 1292, '1', 0.75, 15, 1, '2017-09-13 06:31:05'),
(30, 1301, '0', 0, 21, -1, '2017-09-13 06:31:07'),
(5, 1665, '4', -0.0557851, 38, 0, '2017-09-13 06:31:08'),
(11, 2931, '4', 2.82311, 10, 1, '2017-09-13 06:31:09'),
(4, 371, '1', -0.12, 16, 0, '2017-09-13 06:31:09'),
(3, 3026, '2', 0.0344388, 25, 1, '2017-09-13 06:31:10'),
(6, 2306, '1', 1.84083, 13, 1, '2017-09-13 06:31:10'),
(25, 1200, '2', 0, 36, 0, '2017-09-13 06:31:10'),
(14, 1227, '0', -0.00520833, 24, 0, '2017-09-13 06:31:11'),
(19, 1335, '2', 1.04177, 23, 1, '2017-09-13 06:31:11'),
(29, 1261, '3', 0.407202, 24, 1, '2017-09-13 06:31:11'),
(21, 1124, '3', -0.963333, 26, 0, '2017-09-13 06:31:15'),
(11, 2925, '2', -2.86026, 8, 0, '2017-09-13 06:31:16'),
(4, 374, '1', -1.08, 8, 0, '2017-09-13 06:31:17'),
(1, 2455, '4', -1.95, 35, 0, '2017-09-13 06:31:18'),
(14, 1177, '2', 1.39463, 7, 1, '2017-09-13 06:31:18'),
(25, 1189, '3', 1.38138, 9, 1, '2017-09-13 06:31:19'),
(24, 2441, '4', -0.3675, 26, 0, '2017-09-13 06:31:20'),
(19, 1339, '2', 2.25333, 8, 1, '2017-09-13 06:31:20'),
(6, 2294, '4', -1.73677, 11, 0, '2017-09-13 06:31:21'),
(11, 2910, '0', 0, 5, -1, '2017-09-13 06:31:22'),
(3, 3052, '2', -0.860969, 13, 0, '2017-09-13 06:31:22'),
(21, 597, '1', -1.90226, 11, 0, '2017-09-13 06:31:26'),
(18, 1169, '2', 0, 24, 1, '2017-09-13 06:31:27'),
(18, 1183, '0', -0.00619835, 24, 0, '2017-09-13 06:31:27'),
(11, 2911, '3', -2.91424, 5, 0, '2017-09-13 06:31:27'),
(4, 380, '4', -0.6075, 11, 0, '2017-09-13 06:31:28'),
(6, 2297, '1', -2.35347, 8, 0, '2017-09-13 06:31:29'),
(15, 1227, '0', -0.00520833, 24, 0, '2017-09-13 06:31:29'),
(19, 1132, '1', 2.5, 10, 1, '2017-09-13 06:31:30'),
(16, 757, '3', -0.511815, 27, 0, '2017-09-13 06:31:30'),
(24, 2402, '2', -1.47, 12, 0, '2017-09-13 06:31:32'),
(29, 1199, '3', 1.03125, 21, 1, '2017-09-13 06:31:32'),
(30, 1124, '3', -0.963333, 26, 0, '2017-09-13 06:31:34'),
(3, 3020, '1', -0.979592, 12, 0, '2017-09-13 06:31:34'),
(6, 2296, '3', 2.50776, 6, 1, '2017-09-13 06:31:35'),
(1, 386, '1', -0.0675, 17, 0, '2017-09-13 06:31:35'),
(25, 1281, '1', -1.3, 17, 0, '2017-09-13 06:31:36'),
(16, 480, '2', 1.92, 8, 1, '2017-09-13 06:31:38'),
(21, 1092, '0', 0, 12, -1, '2017-09-13 06:31:38'),
(11, 2916, '1', -2.76548, 13, 0, '2017-09-13 06:31:40'),
(15, 1276, '3', -1.17188, 12, 0, '2017-09-13 06:31:41'),
(4, 400, '1', -0.3675, 13, 0, '2017-09-13 06:31:42'),
(18, 1291, '4', 0.1875, 15, 1, '2017-09-13 06:31:42'),
(14, 1208, '3', -1.56, 24, 0, '2017-09-13 06:31:42'),
(1, 2400, '2', -2.27816, 9, 0, '2017-09-13 06:31:44'),
(6, 2292, '0', 0, 11, -1, '2017-09-13 06:31:45'),
(3, 3028, '2', 1.10587, 11, 1, '2017-09-13 06:31:45'),
(5, 1715, '3', -0.263374, 38, 0, '2017-09-13 06:31:46'),
(24, 2394, '3', -0.991875, 17, 0, '2017-09-13 06:31:49'),
(15, 1183, '2', 1.21488, 8, 1, '2017-09-13 06:31:49'),
(30, 607, '3', 1.53061, 16, 1, '2017-09-13 06:31:50'),
(26, 171, '0', -0.00046875, 80, 0, '2017-09-13 06:31:50'),
(5, 1711, '1', 2.35692, 5, 1, '2017-09-13 06:31:51'),
(1, 1138, '2', 1.2675, 7, 1, '2017-09-13 06:31:51'),
(16, 740, '1', 1.12037, 14, 1, '2017-09-13 06:31:52'),
(11, 2914, '4', -2.78495, 12, 0, '2017-09-13 06:31:52'),
(11, 2891, '1', 2.91834, 4, 1, '2017-09-13 06:31:56'),
(19, 1337, '2', -1.73438, 27, 0, '2017-09-13 06:31:58'),
(15, 1291, '4', 0.75, 10, 1, '2017-09-13 06:31:59'),
(16, 474, '1', 2.04187, 7, 1, '2017-09-13 06:31:59'),
(30, 996, '4', -1.92, 10, 0, '2017-09-13 06:32:00'),
(6, 2289, '3', -1.36248, 15, 0, '2017-09-13 06:32:01'),
(25, 1287, '2', -0.75, 24, 0, '2017-09-13 06:32:01'),
(18, 1185, '4', 0.244898, 20, 1, '2017-09-13 06:32:02'),
(4, 384, '2', 0, 20, 0, '2017-09-13 06:32:02'),
(1, 1140, '1', 0.3675, 13, 1, '2017-09-13 06:32:05'),
(15, 1190, '4', 1.85204, 6, 1, '2017-09-13 06:32:05'),
(24, 2398, '1', -1.08, 16, 0, '2017-09-13 06:32:05'),
(3, 3083, '4', -0.309949, 19, 0, '2017-09-13 06:32:05'),
(14, 1281, '3', 0.0833333, 25, 1, '2017-09-13 06:32:07'),
(21, 1323, '3', 0.65918, 34, 1, '2017-09-13 06:32:12'),
(18, 1172, '4', 0.6075, 11, 1, '2017-09-13 06:32:12'),
(29, 1257, '1', -0.4375, 41, 0, '2017-09-13 06:32:13'),
(24, 2426, '1', 1.80187, 9, 1, '2017-09-13 06:32:14'),
(19, 1113, '3', -2.22727, 17, 0, '2017-09-13 06:32:15'),
(16, 756, '3', -1.2513, 17, 0, '2017-09-13 06:32:16'),
(4, 1122, '4', 0.1875, 15, 1, '2017-09-13 06:32:17'),
(15, 1216, '4', 0.75, 12, 1, '2017-09-13 06:32:18'),
(1, 1131, '2', -0.27, 14, 0, '2017-09-13 06:32:18'),
(24, 2437, '2', 2.04187, 7, 1, '2017-09-13 06:32:21'),
(15, 1172, '4', 1.47, 6, 1, '2017-09-13 06:32:23'),
(11, 2926, '1', -2.40727, 29, 0, '2017-09-13 06:32:25'),
(3, 3045, '1', 0.244898, 20, 1, '2017-09-13 06:32:25'),
(1, 375, '1', 1.2675, 7, 1, '2017-09-13 06:32:26'),
(5, 1667, '3', 0.0833333, 35, 1, '2017-09-13 06:32:26'),
(19, 1332, '3', 1.92, 12, 1, '2017-09-13 06:32:27'),
(29, 1293, '2', 1.25, 14, 1, '2017-09-13 06:32:28'),
(25, 1202, '1', 0.1875, 27, 1, '2017-09-13 06:32:28'),
(1, 368, '3', 2.1675, 3, 1, '2017-09-13 06:32:29'),
(16, 751, '1', -1.48915, 13, 0, '2017-09-13 06:32:30'),
(4, 401, '3', -0.27, 14, 0, '2017-09-13 06:32:30'),
(11, 2918, '1', -2.89647, 6, 0, '2017-09-13 06:32:32'),
(30, 599, '1', 0.653333, 32, 1, '2017-09-13 06:32:33'),
(19, 1315, '4', 2.63793, 7, 1, '2017-09-13 06:32:34'),
(3, 3013, '3', -1.2398, 10, 0, '2017-09-13 06:32:35'),
(6, 2314, '4', -0.46301, 34, 0, '2017-09-13 06:32:35'),
(16, 482, '2', -1.96599, 8, 0, '2017-09-13 06:32:37'),
(11, 2908, '4', -2.81118, 9, 0, '2017-09-13 06:32:40'),
(15, 1210, '1', 0.255208, 17, 1, '2017-09-13 06:32:40'),
(5, 1677, '3', -1.41797, 15, 0, '2017-09-13 06:32:41'),
(4, 1116, '4', 0.75, 10, 1, '2017-09-13 06:32:41'),
(18, 1292, '1', 0.0133333, 28, 1, '2017-09-13 06:32:41'),
(16, 746, '4', 2.08333, 6, 1, '2017-09-13 06:32:44'),
(30, 1318, '4', -1.76881, 13, 0, '2017-09-13 06:32:45'),
(1, 1153, '2', 0.45, 17, 1, '2017-09-13 06:32:46'),
(6, 2315, '3', 2.02992, 11, 1, '2017-09-13 06:32:47'),
(19, 1090, '4', -2.35, 13, 0, '2017-09-13 06:32:47'),
(16, 499, '1', 2.40166, 4, 1, '2017-09-13 06:32:48'),
(11, 2898, '4', 2.81118, 9, 1, '2017-09-13 06:32:49'),
(26, 1286, '0', -0.000833333, 60, 0, '2017-09-13 06:32:50'),
(4, 389, '0', 0, 9, -1, '2017-09-13 06:32:50'),
(6, 2313, '0', 0, 5, -1, '2017-09-13 06:32:52'),
(18, 1184, '4', 0.880208, 11, 1, '2017-09-13 06:32:52'),
(14, 1269, '0', 0, 45, -1, '2017-09-13 06:32:53'),
(5, 1671, '3', 1.43027, 13, 1, '2017-09-13 06:32:55'),
(21, 1340, '2', 0.281738, 43, 1, '2017-09-13 06:32:55'),
(3, 3068, '4', -0.0956633, 23, 0, '2017-09-13 06:32:58'),
(29, 1202, '3', -0.333333, 32, 0, '2017-09-13 06:33:00'),
(24, 2396, '0', -0.001875, 40, 0, '2017-09-13 06:33:01'),
(19, 1341, '2', -2.2, 16, 0, '2017-09-13 06:33:03'),
(14, 1219, '1', -0.892562, 10, 0, '2017-09-13 06:33:03'),
(15, 1297, '3', 1.08, 24, 1, '2017-09-13 06:33:04'),
(11, 2892, '2', 2.6739, 15, 1, '2017-09-13 06:33:05'),
(26, 1295, '3', -0.421875, 15, 0, '2017-09-13 06:33:05'),
(21, 1313, '2', 1.99177, 10, 1, '2017-09-13 06:33:05'),
(6, 2308, '3', -1.6875, 16, 0, '2017-09-13 06:33:08'),
(30, 1310, '4', 0.869823, 24, 1, '2017-09-13 06:33:09'),
(4, 397, '1', 0, 20, 0, '2017-09-13 06:33:10'),
(25, 1268, '2', -0.0325521, 43, 0, '2017-09-13 06:33:12'),
(29, 1294, '3', 1.125, 15, 1, '2017-09-13 06:33:14'),
(3, 3047, '3', 0.55102, 16, 1, '2017-09-13 06:33:15'),
(24, 2462, '2', 1.2675, 14, 1, '2017-09-13 06:33:15'),
(11, 2906, '3', -2.76655, 11, 0, '2017-09-13 06:33:16'),
(19, 1323, '1', -1.90503, 13, 0, '2017-09-13 06:33:16'),
(18, 1210, '0', -0.00520833, 24, 0, '2017-09-13 06:33:16'),
(11, 2893, '4', 2.91834, 4, 1, '2017-09-13 06:33:20'),
(5, 1712, '1', -0.806584, 26, 0, '2017-09-13 06:33:21'),
(4, 381, '3', -0.3675, 13, 0, '2017-09-13 06:33:23'),
(24, 2391, '1', -1.92, 8, 0, '2017-09-13 06:33:23'),
(3, 3079, '3', -1.38138, 9, 0, '2017-09-13 06:33:23'),
(6, 2310, '2', -1.33333, 16, 0, '2017-09-13 06:33:24'),
(19, 1343, '4', 2.0172, 9, 1, '2017-09-13 06:33:25'),
(16, 750, '4', -0.114839, 37, 0, '2017-09-13 06:33:25'),
(14, 1175, '4', 0.292969, 22, 1, '2017-09-13 06:33:26'),
(15, 1282, '1', -0.8, 22, 0, '2017-09-13 06:33:27'),
(18, 1174, '3', 0.998521, 11, 1, '2017-09-13 06:33:27'),
(30, 1091, '3', -1.47, 18, 0, '2017-09-13 06:33:28'),
(4, 385, '2', -1.2675, 7, 0, '2017-09-13 06:33:30'),
(5, 1714, '3', 1.51454, 11, 1, '2017-09-13 06:33:32'),
(6, 2309, '3', 1.90226, 11, 1, '2017-09-13 06:33:35'),
(16, 478, '4', 1.92, 10, 1, '2017-09-13 06:33:36'),
(29, 1191, '3', 0.642857, 22, 1, '2017-09-13 06:33:36'),
(11, 2897, '4', -2.62572, 17, 0, '2017-09-13 06:33:37'),
(21, 1326, '1', 0.602854, 32, 1, '2017-09-13 06:33:37'),
(24, 2480, '2', 1.5552, 14, 1, '2017-09-13 06:33:37'),
(30, 1303, '1', 2.08333, 10, 1, '2017-09-13 06:33:37'),
(4, 2408, '3', 2.56085, 7, 1, '2017-09-13 06:33:38'),
(14, 1217, '3', 0.48, 12, 1, '2017-09-13 06:33:38'),
(25, 1175, '4', 0.046875, 28, 1, '2017-09-13 06:33:40'),
(3, 3066, '1', 0.1875, 21, 1, '2017-09-13 06:33:45'),
(1, 2450, '4', -1.77083, 59, 0, '2017-09-13 06:33:45'),
(24, 2465, '2', 2.0172, 9, 1, '2017-09-13 06:33:46'),
(19, 1126, '0', 0, 24, -1, '2017-09-13 06:33:50'),
(18, 1227, '2', -0.0208333, 22, 0, '2017-09-13 06:33:50'),
(1, 1110, '2', 1.6875, 5, 1, '2017-09-13 06:33:50'),
(15, 1184, '0', -0.00520833, 24, 0, '2017-09-13 06:33:51'),
(30, 853, '2', 1.6875, 15, 1, '2017-09-13 06:33:53'),
(14, 1220, '1', -0.55102, 16, 0, '2017-09-13 06:33:54'),
(1, 1149, '1', 2.1, 6, 1, '2017-09-13 06:33:57'),
(6, 2316, '1', 1.15577, 22, 1, '2017-09-13 06:33:57'),
(4, 396, '0', -0.0075, 20, 0, '2017-09-13 06:33:58'),
(29, 1281, '3', 0.8, 22, 1, '2017-09-13 06:33:58'),
(5, 1644, '1', -0.00382653, 27, 0, '2017-09-13 06:34:00'),
(25, 1217, '0', -0.0075, 20, 0, '2017-09-13 06:34:00'),
(15, 1261, '3', 1.51454, 11, 1, '2017-09-13 06:34:01'),
(16, 476, '2', -0.3675, 26, 0, '2017-09-13 06:34:01'),
(19, 1338, '3', -1.6875, 14, 0, '2017-09-13 06:34:03'),
(3, 3006, '2', -0.244898, 20, 0, '2017-09-13 06:34:06'),
(16, 483, '1', -2.38327, 5, 0, '2017-09-13 06:34:06'),
(5, 1661, '3', 1.43787, 8, 1, '2017-09-13 06:34:08'),
(11, 2904, '3', 2.24295, 31, 1, '2017-09-13 06:34:08'),
(4, 1109, '4', -0.75, 10, 0, '2017-09-13 06:34:09'),
(18, 1218, '0', -0.0075, 20, 0, '2017-09-13 06:34:10'),
(19, 1322, '1', -2.13574, 10, 0, '2017-09-13 06:34:13'),
(18, 1216, '4', 1.88021, 5, 1, '2017-09-13 06:34:15'),
(4, 1115, '3', -1.2675, 7, 0, '2017-09-13 06:34:15'),
(21, 1338, '4', -0.276467, 39, 0, '2017-09-13 06:34:16'),
(6, 2311, '4', -0.958412, 20, 0, '2017-09-13 06:34:18'),
(11, 2903, '3', -2.81118, 9, 0, '2017-09-13 06:34:18'),
(24, 2499, '2', -0.3888, 32, 0, '2017-09-13 06:34:18'),
(15, 1220, '2', 0.964286, 19, 1, '2017-09-13 06:34:20'),
(5, 1663, '2', -0.853333, 14, 0, '2017-09-13 06:34:21'),
(30, 1317, '0', 0, 29, -1, '2017-09-13 06:34:23'),
(16, 752, '2', -1.03355, 19, 0, '2017-09-13 06:34:26'),
(19, 1106, '1', -1.92, 12, 0, '2017-09-13 06:34:26'),
(4, 392, '4', -0.48, 12, 0, '2017-09-13 06:34:28'),
(15, 1219, '1', -1.90909, 8, 0, '2017-09-13 06:34:28'),
(25, 1282, '0', -0.00333333, 30, 0, '2017-09-13 06:34:30'),
(29, 1200, '2', -0.25, 33, 0, '2017-09-13 06:34:32'),
(3, 3040, '1', 0.00382653, 27, 1, '2017-09-13 06:34:33'),
(4, 382, '3', -1.08, 8, 0, '2017-09-13 06:34:35'),
(18, 1197, '3', -0.0208333, 22, 0, '2017-09-13 06:34:37'),
(5, 1657, '2', -0.0675, 17, 0, '2017-09-13 06:34:39'),
(11, 2900, '3', -2.47253, 23, 0, '2017-09-13 06:34:41'),
(6, 2317, '2', 1.02083, 25, 1, '2017-09-13 06:34:43'),
(14, 1268, '0', -0.00130208, 48, 0, '2017-09-13 06:34:43'),
(18, 1177, '2', 1.58678, 6, 1, '2017-09-13 06:34:43'),
(16, 742, '1', 0.991875, 17, 1, '2017-09-13 06:34:44'),
(3, 3009, '2', -0.75, 14, 0, '2017-09-13 06:34:46'),
(25, 1191, '3', 0.46301, 17, 1, '2017-09-13 06:34:48'),
(4, 2422, '2', -2.46387, 12, 0, '2017-09-13 06:34:48'),
(16, 502, '2', 2.15643, 7, 1, '2017-09-13 06:34:50'),
(25, 1219, '3', 1.58678, 6, 1, '2017-09-13 06:34:54'),
(30, 624, '1', 0.6075, 33, 1, '2017-09-13 06:34:56'),
(5, 1696, '4', 1.04752, 18, 1, '2017-09-13 06:34:57'),
(11, 2921, '2', -2.62572, 17, 0, '2017-09-13 06:34:58'),
(18, 1198, '1', -0.12, 16, 0, '2017-09-13 06:34:59'),
(3, 3050, '3', 0.860969, 13, 1, '2017-09-13 06:35:00'),
(14, 1199, '4', -0.495117, 19, 0, '2017-09-13 06:35:02'),
(15, 1202, '3', -0.0833333, 35, 0, '2017-09-13 06:35:03'),
(4, 393, '2', -0.12, 16, 0, '2017-09-13 06:35:04'),
(11, 2928, '1', -2.85477, 7, 0, '2017-09-13 06:35:05'),
(6, 2312, '1', -1.29199, 22, 0, '2017-09-13 06:35:05'),
(24, 2468, '0', -0.0012, 50, 0, '2017-09-13 06:35:08'),
(16, 475, '1', -1.11153, 18, 0, '2017-09-13 06:35:08'),
(3, 3042, '2', 1.38138, 9, 1, '2017-09-13 06:35:09'),
(4, 373, '1', 1.47, 6, 1, '2017-09-13 06:35:10'),
(11, 2884, '4', -2.87228, 5, 0, '2017-09-13 06:35:11'),
(14, 1189, '2', -0.979592, 12, 0, '2017-09-13 06:35:14'),
(29, 1269, '1', 0.3125, 43, 1, '2017-09-13 06:35:14'),
(3, 3032, '2', 1.6875, 7, 1, '2017-09-13 06:35:15'),
(19, 1327, '2', 0, 50, 0, '2017-09-13 06:35:17'),
(4, 370, '4', -1.2675, 7, 0, '2017-09-13 06:35:17'),
(30, 622, '2', 1.20333, 22, 1, '2017-09-13 06:35:18'),
(16, 766, '1', 1.63435, 11, 1, '2017-09-13 06:35:20'),
(24, 2467, '4', -1.7328, 12, 0, '2017-09-13 06:35:20'),
(6, 2337, '1', 1.36248, 15, 1, '2017-09-13 06:35:20'),
(21, 1337, '0', -0.000732422, 64, 0, '2017-09-13 06:35:21'),
(11, 2879, '3', -2.68328, 12, 0, '2017-09-13 06:35:23'),
(18, 1270, '3', -0.6862, 24, 0, '2017-09-13 06:35:24'),
(4, 391, '2', 1.08, 8, 1, '2017-09-13 06:35:25'),
(24, 2483, '3', 2.1168, 8, 1, '2017-09-13 06:35:28'),
(14, 1284, '1', -0.1875, 15, 0, '2017-09-13 06:35:29'),
(21, 1106, '1', -2.25333, 8, 0, '2017-09-13 06:35:29'),
(25, 172, '2', 1.96364, 38, 1, '2017-09-13 06:35:32'),
(15, 1281, '0', -0.1, 30, 0, '2017-09-13 06:35:33'),
(29, 1284, '1', 0, 20, 0, '2017-09-13 06:35:34'),
(3, 3073, '2', -0.309949, 19, 0, '2017-09-13 06:35:35'),
(5, 1719, '0', -0.001875, 40, 0, '2017-09-13 06:35:37'),
(16, 493, '1', 0.403333, 19, 1, '2017-09-13 06:35:38'),
(14, 1171, '4', 0.75, 10, 1, '2017-09-13 06:35:39'),
(19, 1328, '2', -1.20333, 22, 0, '2017-09-13 06:35:39'),
(4, 2429, '2', -2.43, 14, 0, '2017-09-13 06:35:40'),
(24, 2478, '1', -1.6428, 13, 0, '2017-09-13 06:35:41'),
(18, 1196, '4', 0.255208, 17, 1, '2017-09-13 06:35:41'),
(11, 2859, '2', 2.47992, 19, 1, '2017-09-13 06:35:42'),
(21, 1329, '3', 1.6875, 15, 1, '2017-09-13 06:35:44'),
(1, 2435, '2', -0.553846, 106, 0, '2017-09-13 06:35:44'),
(14, 1191, '3', 1.85204, 6, 1, '2017-09-13 06:35:46'),
(19, 1331, '2', 1.92, 8, 1, '2017-09-13 06:35:47'),
(30, 593, '3', -0.75, 30, 0, '2017-09-13 06:35:48'),
(4, 2410, '2', 2.39158, 9, 1, '2017-09-13 06:35:48'),
(11, 2887, '3', 2.79285, 8, 1, '2017-09-13 06:35:50'),
(21, 1322, '4', -2.37964, 7, 0, '2017-09-13 06:35:51'),
(3, 3016, '1', 0.46301, 17, 1, '2017-09-13 06:35:52'),
(5, 1650, '1', 0.536982, 15, 1, '2017-09-13 06:35:52'),
(15, 1170, '1', -0.0833333, 20, 0, '2017-09-13 06:35:53'),
(29, 1220, '4', -0.964286, 19, 0, '2017-09-13 06:35:54'),
(1, 1142, '1', -1.35, 11, 0, '2017-09-13 06:35:54'),
(6, 2335, '1', -0.27, 35, 0, '2017-09-13 06:35:55'),
(4, 2413, '3', -2.56085, 7, 0, '2017-09-13 06:35:55'),
(15, 1197, '3', -2.29688, 3, 0, '2017-09-13 06:35:57'),
(18, 1175, '4', 0.75, 16, 1, '2017-09-13 06:35:57'),
(16, 771, '4', -1.11153, 18, 0, '2017-09-13 06:35:57'),
(29, 1217, '3', 2.25, 5, 1, '2017-09-13 06:35:58'),
(24, 2466, '1', 1.1532, 19, 1, '2017-09-13 06:36:00'),
(1, 1144, '4', -2.1, 6, 0, '2017-09-13 06:36:01'),
(21, 1332, '3', 2.00083, 11, 1, '2017-09-13 06:36:02'),
(5, 1648, '1', -1.13609, 10, 0, '2017-09-13 06:36:03'),
(1, 2403, '2', 2.80333, 3, 1, '2017-09-13 06:36:04'),
(14, 1265, '0', 0, 20, -1, '2017-09-13 06:36:05'),
(11, 2855, '1', -2.53969, 17, 0, '2017-09-13 06:36:07'),
(6, 2329, '3', 1.22454, 13, 1, '2017-09-13 06:36:08'),
(19, 1096, '3', 1.14083, 23, 1, '2017-09-13 06:36:10'),
(4, 386, '1', -0.0675, 17, 0, '2017-09-13 06:36:12'),
(25, 1289, '0', -0.075, 40, 0, '2017-09-13 06:36:12'),
(15, 1294, '3', 0.333333, 16, 1, '2017-09-13 06:36:13'),
(26, 1310, '3', -2.24667, 7, 0, '2017-09-13 06:36:13'),
(3, 3056, '2', -0.0612245, 24, 0, '2017-09-13 06:36:16'),
(4, 2418, '2', 2.7075, 4, 1, '2017-09-13 06:36:17'),
(11, 2889, '2', 2.73861, 10, 1, '2017-09-13 06:36:17'),
(14, 1294, '4', -0.520833, 14, 0, '2017-09-13 06:36:19'),
(4, 2403, '2', 2.73926, 4, 1, '2017-09-13 06:36:20'),
(26, 606, '1', -2.34083, 7, 0, '2017-09-13 06:36:21'),
(1, 1154, '1', 0.15, 19, 1, '2017-09-13 06:36:23'),
(11, 2874, '1', 2.84605, 6, 1, '2017-09-13 06:36:24'),
(19, 1324, '3', 1.86226, 14, 1, '2017-09-13 06:36:24'),
(24, 2495, '1', 0.75, 25, 1, '2017-09-13 06:36:25'),
(6, 2320, '2', -1.42687, 18, 0, '2017-09-13 06:36:27'),
(21, 1307, '4', -1.14446, 26, 0, '2017-09-13 06:36:28'),
(16, 775, '3', -0.318998, 31, 0, '2017-09-13 06:36:29'),
(3, 3018, '3', -0.860969, 13, 0, '2017-09-13 06:36:30'),
(30, 619, '2', -0.27, 42, 0, '2017-09-13 06:36:30'),
(5, 1642, '0', -0.00333333, 30, 0, '2017-09-13 06:36:34'),
(19, 1329, '3', 2.00083, 11, 1, '2017-09-13 06:36:35'),
(24, 2494, '4', -1.92, 10, 0, '2017-09-13 06:36:35'),
(21, 1341, '3', -2.1675, 9, 0, '2017-09-13 06:36:37'),
(15, 1200, '2', -0.280093, 25, 0, '2017-09-13 06:36:37'),
(1, 1147, '4', 0.6, 16, 1, '2017-09-13 06:36:39'),
(30, 850, '1', -2.1675, 9, 0, '2017-09-13 06:36:40'),
(6, 2334, '4', -1.59505, 13, 0, '2017-09-13 06:36:40'),
(18, 1287, '1', -0.0208333, 44, 0, '2017-09-13 06:36:42'),
(11, 2955, '3', -2.60112, 18, 0, '2017-09-13 06:36:42'),
(15, 1293, '2', 1.88021, 5, 1, '2017-09-13 06:36:42'),
(19, 1334, '4', 2.34083, 7, 1, '2017-09-13 06:36:42'),
(14, 1202, '3', -0.391204, 23, 0, '2017-09-13 06:36:43'),
(16, 762, '2', -1.08, 16, 0, '2017-09-13 06:36:45'),
(21, 1320, '3', 2.1168, 8, 1, '2017-09-13 06:36:45'),
(29, 1268, '4', 0, 48, 0, '2017-09-13 06:36:47'),
(29, 1171, '0', 4.05, 48, 0, '2017-09-13 06:36:47'),
(24, 2482, '3', -1.5552, 14, 0, '2017-09-13 06:36:49'),
(30, 1311, '4', 1.92, 10, 1, '2017-09-13 06:36:49'),
(21, 1333, '2', 2.43, 6, 1, '2017-09-13 06:36:51'),
(16, 777, '4', -2.04726, 8, 0, '2017-09-13 06:36:52'),
(6, 2332, '4', -1.6875, 13, 0, '2017-09-13 06:36:53'),
(3, 3024, '2', -0.0956633, 23, 0, '2017-09-13 06:36:53'),
(19, 1321, '3', 2.29688, 15, 1, '2017-09-13 06:36:57'),
(29, 1189, '3', 1.82143, 11, 1, '2017-09-13 06:36:58'),
(21, 1315, '4', 2.31956, 7, 1, '2017-09-13 06:36:58'),
(6, 2330, '1', -2.1168, 8, 0, '2017-09-13 06:37:01'),
(30, 611, '2', -1.7328, 12, 0, '2017-09-13 06:37:02'),
(5, 1653, '0', -0.00382653, 28, 0, '2017-09-13 06:37:02'),
(3, 3055, '4', 1.2398, 10, 1, '2017-09-13 06:37:03'),
(24, 2471, '4', -1.47, 15, 0, '2017-09-13 06:37:04'),
(1, 2454, '2', 2.4375, 27, 1, '2017-09-13 06:37:07'),
(25, 1229, '0', -0.0555556, 54, 0, '2017-09-13 06:37:07'),
(21, 1321, '4', -2.53125, 10, 0, '2017-09-13 06:37:08'),
(11, 2866, '4', 2.12132, 30, 1, '2017-09-13 06:37:12'),
(5, 1717, '4', 1.6875, 10, 1, '2017-09-13 06:37:13'),
(4, 2432, '0', 0, 53, -1, '2017-09-13 06:37:15'),
(19, 995, '2', -2.1, 18, 0, '2017-09-13 06:37:16'),
(24, 2469, '2', -1.6428, 13, 0, '2017-09-13 06:37:17'),
(11, 2940, '3', -2.85477, 7, 0, '2017-09-13 06:37:18'),
(3, 3011, '3', -0.55102, 16, 0, '2017-09-13 06:37:19'),
(18, 1268, '3', -0.157552, 37, 0, '2017-09-13 06:37:19'),
(25, 1295, '3', -1.375, 13, 0, '2017-09-13 06:37:20'),
(26, 852, '0', -0.000833333, 60, 0, '2017-09-13 06:37:21'),
(30, 596, '2', -1.12037, 21, 0, '2017-09-13 06:37:23'),
(4, 2414, '3', 2.41774, 9, 1, '2017-09-13 06:37:23'),
(16, 773, '2', -0.318998, 31, 0, '2017-09-13 06:37:24'),
(15, 1265, '3', -0.110947, 42, 0, '2017-09-13 06:37:24'),
(1, 2453, '4', 2.60294, 18, 1, '2017-09-13 06:37:25'),
(14, 1287, '3', 0.00520833, 46, 1, '2017-09-13 06:37:30'),
(19, 1320, '1', -2.04, 16, 0, '2017-09-13 06:37:31'),
(16, 488, '3', 1.94676, 7, 1, '2017-09-13 06:37:32'),
(24, 2464, '2', -1.47, 15, 0, '2017-09-13 06:37:32'),
(4, 1104, '3', 0.75, 10, 1, '2017-09-13 06:37:34'),
(5, 1720, '3', 0.676875, 21, 1, '2017-09-13 06:37:34'),
(11, 2882, '1', 2.53969, 17, 1, '2017-09-13 06:37:36'),
(18, 1220, '2', 0.309949, 19, 1, '2017-09-13 06:37:38'),
(25, 1204, '1', -1.875, 18, 0, '2017-09-13 06:37:39'),
(4, 377, '3', -0.6075, 11, 0, '2017-09-13 06:37:44'),
(5, 1721, '2', 1.79132, 10, 1, '2017-09-13 06:37:44'),
(19, 1313, '2', 2.27778, 13, 1, '2017-09-13 06:37:45'),
(21, 1328, '4', -0.440833, 37, 0, '2017-09-13 06:37:45'),
(1, 2444, '2', -2.4, 20, 0, '2017-09-13 06:37:45'),
(11, 2945, '1', -2.74383, 12, 0, '2017-09-13 06:37:48'),
(4, 1140, '1', 1.92, 4, 1, '2017-09-13 06:37:49'),
(29, 1229, '2', -0.209987, 53, 0, '2017-09-13 06:37:50'),
(3, 3117, '3', -0.101801, 31, 0, '2017-09-13 06:37:51'),
(5, 1740, '3', 1.89824, 9, 1, '2017-09-13 06:37:53'),
(18, 1294, '2', -0.421875, 15, 0, '2017-09-13 06:37:54'),
(14, 1293, '0', -0.00520833, 24, 0, '2017-09-13 06:37:54'),
(30, 609, '1', -0.700833, 31, 0, '2017-09-13 06:37:54'),
(11, 2864, '2', 2.79285, 8, 1, '2017-09-13 06:37:57'),
(19, 1092, '3', -2.4, 12, 0, '2017-09-13 06:37:57'),
(4, 1130, '1', -0.6075, 11, 0, '2017-09-13 06:38:00'),
(3, 3123, '1', -1.09903, 15, 0, '2017-09-13 06:38:06'),
(24, 2473, '2', 0.2028, 37, 1, '2017-09-13 06:38:09'),
(19, 1307, '2', 2.42647, 13, 1, '2017-09-13 06:38:10'),
(30, 594, '3', 1.3872, 16, 1, '2017-09-13 06:38:11'),
(18, 1171, '2', -0.03, 18, 0, '2017-09-13 06:38:11'),
(16, 760, '0', -0.001875, 40, 0, '2017-09-13 06:38:12'),
(15, 1268, '0', -0.00130208, 48, 0, '2017-09-13 06:38:13'),
(4, 1131, '2', -0.12, 16, 0, '2017-09-13 06:38:16'),
(21, 995, '0', 0, 31, -1, '2017-09-13 06:38:16'),
(1, 2449, '1', -2.04, 32, 0, '2017-09-13 06:38:17'),
(11, 2937, '2', 2.49905, 22, 1, '2017-09-13 06:38:18'),
(16, 764, '1', -2.08333, 6, 0, '2017-09-13 06:38:19'),
(29, 1204, '4', 1.56006, 30, 1, '2017-09-13 06:38:20'),
(26, 598, '0', -0.000833333, 60, 0, '2017-09-13 06:38:21'),
(14, 1282, '2', -0.0133333, 28, 0, '2017-09-13 06:38:22'),
(3, 3105, '2', -0.916205, 17, 0, '2017-09-13 06:38:23'),
(21, 1335, '2', 2.29688, 7, 1, '2017-09-13 06:38:23'),
(5, 1749, '1', 1.0625, 31, 1, '2017-09-13 06:38:24'),
(16, 484, '1', 2.04726, 8, 1, '2017-09-13 06:38:26'),
(1, 1155, '4', 1.35, 11, 1, '2017-09-13 06:38:28'),
(11, 2959, '2', -2.789, 10, 0, '2017-09-13 06:38:29'),
(18, 1293, '2', 0.1875, 18, 1, '2017-09-13 06:38:30'),
(25, 1209, '0', -0.0012, 50, 0, '2017-09-13 06:38:30'),
(14, 1188, '1', 1.38138, 9, 1, '2017-09-13 06:38:31'),
(16, 774, '1', 2.52083, 4, 1, '2017-09-13 06:38:31'),
(1, 1143, '2', -2.1, 6, 0, '2017-09-13 06:38:35'),
(21, 1132, '1', 2.4, 12, 1, '2017-09-13 06:38:35'),
(4, 372, '3', -0.0075, 19, 0, '2017-09-13 06:38:35'),
(30, 615, '4', -0.9075, 27, 0, '2017-09-13 06:38:38'),
(19, 1340, '4', -1.59677, 29, 0, '2017-09-13 06:38:40'),
(4, 1121, '1', -1.6875, 5, 0, '2017-09-13 06:38:40'),
(21, 1339, '2', 2.7, 6, 1, '2017-09-13 06:38:41'),
(16, 471, '2', 0.75, 15, 1, '2017-09-13 06:38:46'),
(24, 2502, '2', 0.12, 40, 1, '2017-09-13 06:38:49'),
(11, 2957, '3', -2.49905, 22, 0, '2017-09-13 06:38:50'),
(6, 737, '4', 0.226875, 29, 1, '2017-09-13 06:38:54'),
(21, 1324, '3', 2.40909, 13, 1, '2017-09-13 06:38:55'),
(24, 2477, '3', -2.2188, 7, 0, '2017-09-13 06:38:56'),
(30, 598, '4', 1.40083, 19, 1, '2017-09-13 06:38:57'),
(15, 1257, '3', -0.00130208, 47, 0, '2017-09-13 06:39:00'),
(4, 388, '3', 0, 20, 0, '2017-09-13 06:39:00'),
(1, 2440, '2', -2.31818, 25, 0, '2017-09-13 06:39:00'),
(3, 3288, '0', -0.00207756, 38, 0, '2017-09-13 06:39:01'),
(19, 1326, '3', -1.86207, 22, 0, '2017-09-13 06:39:02'),
(15, 1191, '3', 1.85204, 6, 1, '2017-09-13 06:39:05'),
(30, 597, '2', 2.08333, 9, 1, '2017-09-13 06:39:06'),
(26, 593, '1', 0.163333, 46, 1, '2017-09-13 06:39:06'),
(24, 2490, '4', -1.8252, 11, 0, '2017-09-13 06:39:07'),
(11, 2877, '2', 2.53969, 17, 1, '2017-09-13 06:39:07'),
(5, 1746, '0', -0.0681818, 44, 0, '2017-09-13 06:39:08'),
(14, 1275, '1', -0.888889, 38, 0, '2017-09-13 06:39:10'),
(4, 368, '3', 0.6075, 11, 1, '2017-09-13 06:39:12'),
(6, 733, '1', -0.991875, 17, 0, '2017-09-13 06:39:12'),
(21, 1325, '1', 1.98214, 19, 1, '2017-09-13 06:39:14'),
(1, 2442, '4', 2.475, 14, 1, '2017-09-13 06:39:14'),
(25, 1275, '1', -0.0833333, 45, 0, '2017-09-13 06:39:15'),
(26, 594, '3', 2.0172, 9, 1, '2017-09-13 06:39:15'),
(18, 1257, '1', -0.00520833, 46, 0, '2017-09-13 06:39:17'),
(4, 2431, '2', -2.62146, 6, 0, '2017-09-13 06:39:17'),
(3, 3293, '3', -0.916205, 17, 0, '2017-09-13 06:39:19'),
(6, 466, '3', 1.61333, 8, 1, '2017-09-13 06:39:19'),
(11, 2950, '4', -2.74383, 12, 0, '2017-09-13 06:39:20'),
(24, 2472, '2', -1.3872, 16, 0, '2017-09-13 06:39:23'),
(29, 1264, '0', 0, 63, -1, '2017-09-13 06:39:23'),
(30, 602, '0', 0, 17, -1, '2017-09-13 06:39:23'),
(16, 772, '3', 0.130208, 38, 1, '2017-09-13 06:39:24'),
(19, 1312, '1', -1.27342, 23, 0, '2017-09-13 06:39:25'),
(5, 1744, '2', 2.15625, 18, 1, '2017-09-13 06:39:27'),
(14, 1187, '1', -0.574219, 18, 0, '2017-09-13 06:39:28'),
(15, 1199, '3', 0.75, 24, 1, '2017-09-13 06:39:30'),
(26, 1318, '1', -1.6081, 15, 0, '2017-09-13 06:39:30'),
(6, 487, '2', -1.57687, 11, 0, '2017-09-13 06:39:31'),
(11, 2861, '2', 2.68328, 12, 1, '2017-09-13 06:39:32'),
(3, 3100, '0', 0, 15, -1, '2017-09-13 06:39:34'),
(21, 1113, '0', 0, 23, -1, '2017-09-13 06:39:36'),
(4, 383, '3', 0, 20, 0, '2017-09-13 06:39:37'),
(18, 1219, '1', -0.00619835, 21, 0, '2017-09-13 06:39:37'),
(6, 719, '3', 1.94676, 7, 1, '2017-09-13 06:39:38'),
(24, 2486, '2', 1.47, 15, 1, '2017-09-13 06:39:38'),
(5, 1767, '4', 1.625, 22, 1, '2017-09-13 06:39:49'),
(21, 1312, '1', -2.27273, 16, 0, '2017-09-13 06:39:52'),
(14, 1204, '2', -0.688802, 25, 0, '2017-09-13 06:39:52'),
(6, 726, '2', -0.936851, 15, 0, '2017-09-13 06:39:53'),
(4, 402, '1', -0.12, 16, 0, '2017-09-13 06:39:53'),
(21, 1331, '2', 2.625, 5, 1, '2017-09-13 06:39:57'),
(30, 852, '4', 0.48, 36, 1, '2017-09-13 06:40:00'),
(15, 1175, '0', -0.09375, 32, 0, '2017-09-13 06:40:02'),
(19, 1103, '2', 0.708912, 37, 1, '2017-09-13 06:40:02'),
(21, 1361, '3', 2.83093, 5, 1, '2017-09-13 06:40:02'),
(1, 2446, '3', -1.83871, 48, 0, '2017-09-13 06:40:02'),
(3, 3290, '2', -0.132964, 30, 0, '2017-09-13 06:40:04'),
(11, 2942, '4', -2.21169, 32, 0, '2017-09-13 06:40:05'),
(4, 2416, '3', 2.12138, 14, 1, '2017-09-13 06:40:07'),
(11, 2886, '1', 2.87228, 5, 1, '2017-09-13 06:40:10'),
(16, 763, '0', -0.00141777, 46, 0, '2017-09-13 06:40:11'),
(19, 1360, '2', 2.08333, 10, 1, '2017-09-13 06:40:12'),
(30, 403, '4', 1.84083, 13, 1, '2017-09-13 06:40:13'),
(6, 731, '3', -0.520833, 21, 0, '2017-09-13 06:40:14'),
(24, 2470, '2', -0.1728, 38, 0, '2017-09-13 06:40:16'),
(11, 2952, '2', 2.87619, 6, 1, '2017-09-13 06:40:16'),
(14, 1289, '3', -0.48, 24, 0, '2017-09-13 06:40:17'),
(4, 1117, '2', 0.75, 10, 1, '2017-09-13 06:40:18'),
(5, 1786, '3', -1.32692, 29, 0, '2017-09-13 06:40:19'),
(18, 1208, '2', -0.0588, 43, 0, '2017-09-13 06:40:21'),
(29, 1250, '3', -0.310723, 58, 0, '2017-09-13 06:40:22'),
(25, 1264, '0', -0.000688705, 66, 0, '2017-09-13 06:40:22'),
(6, 498, '1', -1.80187, 9, 0, '2017-09-13 06:40:23'),
(26, 607, '0', -0.000956633, 56, 0, '2017-09-13 06:40:26'),
(16, 769, '1', 1.3032, 15, 1, '2017-09-13 06:40:27'),
(5, 1739, '1', 2.25, 12, 1, '2017-09-13 06:40:30'),
(4, 395, '4', -0.3675, 13, 0, '2017-09-13 06:40:30'),
(3, 3112, '4', -0.251385, 27, 0, '2017-09-13 06:40:31'),
(11, 2939, '4', -2.64998, 16, 0, '2017-09-13 06:40:32'),
(19, 1099, '4', 2.07353, 21, 1, '2017-09-13 06:40:34'),
(24, 2491, '3', -1.2288, 18, 0, '2017-09-13 06:40:34'),
(30, 614, '2', -1.0535, 22, 0, '2017-09-13 06:40:35'),
(26, 403, '4', 2.00083, 11, 1, '2017-09-13 06:40:38'),
(6, 730, '1', -1.02083, 15, 0, '2017-09-13 06:40:38'),
(15, 1287, '3', 0.6875, 37, 1, '2017-09-13 06:40:39'),
(5, 1731, '2', -2.18182, 12, 0, '2017-09-13 06:40:43'),
(16, 761, '3', 1.27599, 16, 1, '2017-09-13 06:40:43'),
(6, 725, '1', -2.18253, 5, 0, '2017-09-13 06:40:44'),
(30, 606, '1', -2.1675, 9, 0, '2017-09-13 06:40:44'),
(11, 2948, '4', 2.72082, 13, 1, '2017-09-13 06:40:45'),
(14, 1299, '3', 0.892562, 30, 1, '2017-09-13 06:40:47'),
(4, 398, '3', -0.0675, 17, 0, '2017-09-13 06:40:48'),
(18, 1189, '3', 0.00382653, 27, 1, '2017-09-13 06:40:49'),
(29, 1187, '1', -0.619111, 29, 0, '2017-09-13 06:40:50'),
(15, 1284, '3', 1.05, 13, 1, '2017-09-13 06:40:51');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(19, 1352, '1', -2.15, 17, 0, '2017-09-13 06:40:51'),
(5, 1726, '0', 0, 10, -1, '2017-09-13 06:40:53'),
(24, 2479, '3', 1.1532, 19, 1, '2017-09-13 06:40:53'),
(21, 1362, '3', 1.03665, 51, 1, '2017-09-13 06:40:53'),
(15, 1171, '4', 2.25, 5, 1, '2017-09-13 06:40:56'),
(30, 1335, '2', 1.85204, 12, 1, '2017-09-13 06:40:56'),
(4, 376, '1', -0.9075, 9, 0, '2017-09-13 06:40:57'),
(14, 1298, '1', 2.00083, 11, 1, '2017-09-13 06:40:58'),
(26, 1301, '4', -1.29199, 22, 0, '2017-09-13 06:41:00'),
(6, 734, '3', -0.563333, 17, 0, '2017-09-13 06:41:00'),
(11, 2969, '1', -2.64998, 16, 0, '2017-09-13 06:41:01'),
(1, 2457, '1', -1.52419, 61, 0, '2017-09-13 06:41:04'),
(5, 1757, '1', 2.21739, 12, 1, '2017-09-13 06:41:04'),
(19, 612, '2', -2.3, 14, 0, '2017-09-13 06:41:06'),
(3, 3294, '4', 0.033241, 34, 1, '2017-09-13 06:41:06'),
(24, 2487, '4', 1.6428, 13, 1, '2017-09-13 06:41:06'),
(6, 481, '3', -2.04187, 7, 0, '2017-09-13 06:41:08'),
(29, 1299, '3', 2.35829, 20, 1, '2017-09-13 06:41:11'),
(1, 1109, '3', 1.2675, 7, 1, '2017-09-13 06:41:11'),
(6, 490, '4', -2.08333, 6, 0, '2017-09-13 06:41:13'),
(11, 2964, '4', -2.74383, 12, 0, '2017-09-13 06:41:13'),
(3, 3136, '2', 1.74723, 9, 1, '2017-09-13 06:41:15'),
(5, 1724, '1', -2.21739, 12, 0, '2017-09-13 06:41:17'),
(21, 1108, '2', -1.97884, 26, 0, '2017-09-13 06:41:19'),
(18, 1199, '3', 0.0117188, 30, 1, '2017-09-13 06:41:19'),
(11, 2971, '3', -2.81957, 7, 0, '2017-09-13 06:41:20'),
(19, 1346, '4', 1.75854, 15, 1, '2017-09-13 06:41:21'),
(6, 465, '0', 0, 8, -1, '2017-09-13 06:41:21'),
(26, 854, '1', 1.41061, 22, 1, '2017-09-13 06:41:22'),
(25, 1286, '0', -0.000833333, 60, 0, '2017-09-13 06:41:23'),
(16, 765, '0', -0.001875, 40, 0, '2017-09-13 06:41:23'),
(24, 2501, '1', -1.2288, 18, 0, '2017-09-13 06:41:24'),
(21, 1353, '3', -2.76188, 7, 0, '2017-09-13 06:41:26'),
(4, 2411, '1', -1.62669, 29, 0, '2017-09-13 06:41:26'),
(6, 728, '4', -1.99654, 7, 0, '2017-09-13 06:41:29'),
(4, 369, '2', 2.1675, 3, 1, '2017-09-13 06:41:29'),
(18, 1282, '4', -0.963333, 13, 0, '2017-09-13 06:41:32'),
(30, 1113, '3', -0.661846, 35, 0, '2017-09-13 06:41:32'),
(3, 3149, '4', -0.916205, 17, 0, '2017-09-13 06:41:32'),
(4, 366, '4', 1.47, 6, 1, '2017-09-13 06:41:35'),
(15, 1269, '4', -0.5625, 39, 0, '2017-09-13 06:41:36'),
(24, 2475, '1', -1.7328, 12, 0, '2017-09-13 06:41:36'),
(16, 758, '4', 1.09903, 15, 1, '2017-09-13 06:41:38'),
(14, 1229, '2', -0.722222, 41, 0, '2017-09-13 06:41:40'),
(30, 1339, '2', 2.1675, 9, 1, '2017-09-13 06:41:41'),
(21, 1334, '4', 2.25, 15, 1, '2017-09-13 06:41:42'),
(26, 1124, '3', -1.33333, 20, 0, '2017-09-13 06:41:42'),
(11, 2979, '3', -2.22486, 27, 0, '2017-09-13 06:41:47'),
(3, 3102, '0', 0, 16, -1, '2017-09-13 06:41:48'),
(4, 1120, '3', 0.27, 14, 1, '2017-09-13 06:41:50'),
(21, 1349, '4', -2.65665, 10, 0, '2017-09-13 06:41:51'),
(16, 768, '3', 1.59505, 13, 1, '2017-09-13 06:41:52'),
(5, 1776, '0', -0.0789474, 38, 0, '2017-09-13 06:41:55'),
(4, 1139, '1', -1.2675, 7, 0, '2017-09-13 06:41:57'),
(19, 1344, '4', 1.1, 38, 1, '2017-09-13 06:41:58'),
(1, 1292, '2', -0.563333, 17, 0, '2017-09-13 06:41:59'),
(11, 2962, '1', -2.65518, 13, 0, '2017-09-13 06:42:00'),
(5, 1750, '1', 2.475, 7, 1, '2017-09-13 06:42:03'),
(24, 2496, '2', -0.5808, 28, 0, '2017-09-13 06:42:04'),
(30, 1312, '1', -1.21488, 24, 0, '2017-09-13 06:42:05'),
(4, 367, '3', 0.75, 10, 1, '2017-09-13 06:42:06'),
(18, 1202, '1', 0.00231481, 35, 1, '2017-09-13 06:42:07'),
(11, 2977, '3', -2.81957, 7, 0, '2017-09-13 06:42:08'),
(29, 171, '1', 1.22991, 59, 1, '2017-09-13 06:42:09'),
(15, 1208, '1', 0.78, 37, 1, '2017-09-13 06:42:12'),
(11, 2847, '4', 2.69195, 9, 1, '2017-09-13 06:42:17'),
(30, 1321, '2', -1.83105, 14, 0, '2017-09-13 06:42:20'),
(25, 1299, '3', 0.0557851, 57, 1, '2017-09-13 06:42:20'),
(4, 387, '3', -0.1875, 15, 0, '2017-09-13 06:42:22'),
(15, 1189, '3', 1.92857, 10, 1, '2017-09-13 06:42:22'),
(19, 1118, '2', 1.7, 26, 1, '2017-09-13 06:42:25'),
(11, 2966, '2', -2.79285, 8, 0, '2017-09-13 06:42:25'),
(3, 3119, '0', -0.00207756, 38, 0, '2017-09-13 06:42:27'),
(29, 1283, '4', 1.05429, 19, 1, '2017-09-13 06:42:28'),
(26, 602, '0', 0, 48, -1, '2017-09-13 06:42:30'),
(5, 1738, '4', -1, 28, 0, '2017-09-13 06:42:31'),
(11, 2825, '3', 2.76188, 7, 1, '2017-09-13 06:42:32'),
(18, 1281, '3', 0.0833333, 25, 1, '2017-09-13 06:42:33'),
(1, 1261, '3', 0.0519391, 33, 1, '2017-09-13 06:42:33'),
(15, 1217, '3', 1.2, 12, 1, '2017-09-13 06:42:34'),
(4, 390, '4', 0.12, 16, 1, '2017-09-13 06:42:38'),
(16, 767, '0', -0.00130208, 48, 0, '2017-09-13 06:42:40'),
(4, 1133, '3', 1.92, 4, 1, '2017-09-13 06:42:42'),
(11, 2975, '2', 2.73861, 10, 1, '2017-09-13 06:42:43'),
(30, 1325, '2', -0.919324, 25, 0, '2017-09-13 06:42:45'),
(18, 1265, '3', -1.6875, 13, 0, '2017-09-13 06:42:46'),
(26, 609, '1', -1.47, 18, 0, '2017-09-13 06:42:47'),
(1, 1196, '4', 0.421875, 15, 1, '2017-09-13 06:42:48'),
(3, 3140, '1', -0.531856, 22, 0, '2017-09-13 06:42:49'),
(16, 759, '4', -1.94093, 9, 0, '2017-09-13 06:42:49'),
(11, 2981, '4', 2.79285, 8, 1, '2017-09-13 06:42:50'),
(19, 1366, '4', 1.65, 27, 1, '2017-09-13 06:42:52'),
(4, 378, '3', -0.75, 10, 0, '2017-09-13 06:42:52'),
(29, 1206, '3', -2.13414, 24, 0, '2017-09-13 06:42:53'),
(30, 1315, '4', 1.80589, 13, 1, '2017-09-13 06:42:57'),
(24, 1196, '0', -0.00520833, 24, 0, '2017-09-13 06:43:00'),
(5, 1761, '3', 0.954545, 30, 1, '2017-09-13 06:43:01'),
(14, 481, '1', 0.826875, 19, 1, '2017-09-13 06:43:02'),
(4, 394, '4', -0.27, 14, 0, '2017-09-13 06:43:06'),
(18, 1284, '0', -0.0075, 20, 0, '2017-09-13 06:43:07'),
(1, 1227, '2', -0.130208, 19, 0, '2017-09-13 06:43:07'),
(14, 736, '1', 1.89187, 7, 1, '2017-09-13 06:43:08'),
(11, 2973, '3', 2.50998, 18, 1, '2017-09-13 06:43:08'),
(4, 365, '2', -2.1675, 3, 0, '2017-09-13 06:43:10'),
(26, 615, '2', 1.14083, 23, 1, '2017-09-13 06:43:10'),
(3, 3292, '3', 0.467452, 23, 1, '2017-09-13 06:43:12'),
(4, 2400, '3', 2.58673, 5, 1, '2017-09-13 06:43:14'),
(15, 1298, '2', -1, 40, 0, '2017-09-13 06:43:15'),
(11, 2841, '3', 2.81957, 7, 1, '2017-09-13 06:43:16'),
(19, 1316, '2', -1.8, 24, 0, '2017-09-13 06:43:16'),
(18, 1217, '3', 0.75, 10, 1, '2017-09-13 06:43:17'),
(5, 1748, '1', 1.8913, 17, 1, '2017-09-13 06:43:18'),
(4, 1107, '4', 1.92, 4, 1, '2017-09-13 06:43:18'),
(26, 1317, '1', -1.92, 12, 0, '2017-09-13 06:43:22'),
(14, 720, '4', 1.09903, 15, 1, '2017-09-13 06:43:24'),
(11, 2835, '3', 2.81118, 9, 1, '2017-09-13 06:43:24'),
(1, 1195, '0', -0.0075, 20, 0, '2017-09-13 06:43:28'),
(5, 1735, '4', -2.25, 10, 0, '2017-09-13 06:43:28'),
(4, 379, '4', -0.75, 10, 0, '2017-09-13 06:43:29'),
(24, 1261, '3', 0.0747922, 32, 1, '2017-09-13 06:43:33'),
(11, 2730, '4', 2.8331, 8, 1, '2017-09-13 06:43:33'),
(5, 1785, '1', 2.59615, 7, 1, '2017-09-13 06:43:35'),
(11, 2816, '4', 2.87619, 6, 1, '2017-09-13 06:43:39'),
(1, 1190, '4', 0.979592, 12, 1, '2017-09-13 06:43:40'),
(4, 1138, '1', -0.3675, 13, 0, '2017-09-13 06:43:41'),
(26, 603, '1', 1.0662, 21, 1, '2017-09-13 06:43:44'),
(25, 387, '2', -0.12, 16, 0, '2017-09-13 06:43:44'),
(14, 731, '2', 0.520833, 21, 1, '2017-09-13 06:43:45'),
(5, 363, '3', 1.6875, 5, 1, '2017-09-13 06:43:47'),
(29, 1275, '0', -0.209987, 54, 0, '2017-09-13 06:43:47'),
(3, 3155, '1', 0.00831025, 36, 1, '2017-09-13 06:43:49'),
(11, 2838, '3', 2.78495, 12, 1, '2017-09-13 06:43:51'),
(18, 1200, '4', 0.00231481, 35, 1, '2017-09-13 06:43:52'),
(30, 1340, '2', 0.0382414, 55, 1, '2017-09-13 06:43:53'),
(1, 1172, '4', 0.12, 16, 1, '2017-09-13 06:43:55'),
(24, 1184, '0', -0.00520833, 24, 0, '2017-09-13 06:43:57'),
(14, 466, '1', -1.08, 12, 0, '2017-09-13 06:43:57'),
(26, 1311, '4', 1.47, 15, 1, '2017-09-13 06:43:59'),
(18, 1191, '3', 1.53061, 8, 1, '2017-09-13 06:44:00'),
(30, 1331, '2', 1.57687, 11, 1, '2017-09-13 06:44:04'),
(25, 383, '0', -0.0075, 20, 0, '2017-09-13 06:44:04'),
(15, 1206, '1', -0.5, 50, 0, '2017-09-13 06:44:04'),
(1, 1177, '2', 0.75, 11, 1, '2017-09-13 06:44:07'),
(5, 380, '0', -0.0075, 20, 0, '2017-09-13 06:44:07'),
(26, 1308, '1', -2.1675, 9, 0, '2017-09-13 06:44:07'),
(14, 732, '3', -1.44676, 11, 0, '2017-09-13 06:44:09'),
(24, 1197, '3', -0.630208, 13, 0, '2017-09-13 06:44:10'),
(15, 1176, '4', 2.35714, 6, 1, '2017-09-13 06:44:10'),
(3, 3287, '3', -0.600416, 21, 0, '2017-09-13 06:44:10'),
(18, 1269, '1', 1.78255, 11, 1, '2017-09-13 06:44:11'),
(25, 385, '0', 0, 6, -1, '2017-09-13 06:44:11'),
(30, 1106, '1', -1.84083, 13, 0, '2017-09-13 06:44:18'),
(1, 1170, '2', 0.75, 12, 1, '2017-09-13 06:44:19'),
(24, 1173, '2', 0.3675, 13, 1, '2017-09-13 06:44:23'),
(4, 2419, '2', 1.30021, 41, 1, '2017-09-13 06:44:23'),
(15, 1295, '1', -1.78337, 13, 0, '2017-09-13 06:44:23'),
(5, 379, '1', -0.0675, 17, 0, '2017-09-13 06:44:23'),
(11, 2735, '3', -2.29893, 33, 0, '2017-09-13 06:44:25'),
(3, 3295, '0', 0, 20, -1, '2017-09-13 06:44:30'),
(25, 380, '0', -0.0075, 20, 0, '2017-09-13 06:44:31'),
(29, 1286, '3', -1.13703, 46, 0, '2017-09-13 06:44:32'),
(30, 1103, '2', 1.81481, 16, 1, '2017-09-13 06:44:34'),
(15, 1187, '0', 0, 12, -1, '2017-09-13 06:44:35'),
(14, 737, '4', 0.27, 28, 1, '2017-09-13 06:44:36'),
(11, 2852, '3', -2.74572, 14, 0, '2017-09-13 06:44:39'),
(5, 2414, '3', 1.95287, 17, 1, '2017-09-13 06:44:41'),
(30, 1329, '3', 2.34083, 7, 1, '2017-09-13 06:44:41'),
(1, 1210, '2', -0.00520833, 23, 0, '2017-09-13 06:44:42'),
(4, 1114, '0', -0.0075, 20, 0, '2017-09-13 06:44:43'),
(25, 389, '2', 0.3675, 13, 1, '2017-09-13 06:44:44'),
(4, 363, '3', 2.1675, 3, 1, '2017-09-13 06:44:46'),
(15, 173, '0', 0, 11, -1, '2017-09-13 06:44:46'),
(29, 1295, '4', 1.67358, 14, 1, '2017-09-13 06:44:47'),
(15, 172, '0', 0, 2, -1, '2017-09-13 06:44:49'),
(18, 1209, '2', 0.66, 39, 1, '2017-09-13 06:44:51'),
(1, 1174, '3', 1.13609, 10, 1, '2017-09-13 06:44:52'),
(14, 490, '2', 0.835648, 17, 1, '2017-09-13 06:44:53'),
(5, 1116, '4', 0.1875, 15, 1, '2017-09-13 06:44:56'),
(25, 1120, '3', 0.48, 12, 1, '2017-09-13 06:44:56'),
(4, 2447, '4', 2.29688, 11, 1, '2017-09-13 06:44:58'),
(3, 3153, '4', 0.168283, 29, 1, '2017-09-13 06:45:00'),
(25, 1131, '1', 1.47, 6, 1, '2017-09-13 06:45:02'),
(1, 1297, '3', 1.84083, 13, 1, '2017-09-13 06:45:05'),
(26, 619, '0', -0.000833333, 60, 0, '2017-09-13 06:45:07'),
(5, 371, '2', -0.48, 12, 0, '2017-09-13 06:45:08'),
(30, 1337, '3', 1.6875, 28, 1, '2017-09-13 06:45:10'),
(24, 1297, '3', 0.12, 48, 1, '2017-09-13 06:45:11'),
(11, 2823, '2', -2.14709, 34, 0, '2017-09-13 06:45:13'),
(4, 1156, '1', 0.03, 18, 1, '2017-09-13 06:45:16'),
(14, 489, '4', -0.3675, 26, 0, '2017-09-13 06:45:20'),
(25, 1121, '0', -0.0075, 20, 0, '2017-09-13 06:45:22'),
(11, 2845, '2', -2.74383, 12, 0, '2017-09-13 06:45:25'),
(5, 367, '3', 0.03, 18, 1, '2017-09-13 06:45:26'),
(26, 622, '1', -1.33333, 20, 0, '2017-09-13 06:45:27'),
(15, 1204, '2', -0.375, 42, 0, '2017-09-13 06:45:30'),
(3, 3291, '2', 0.0747922, 32, 1, '2017-09-13 06:45:32'),
(1, 1276, '1', 0.105469, 26, 1, '2017-09-13 06:45:32'),
(30, 1324, '3', 1.95455, 23, 1, '2017-09-13 06:45:33'),
(24, 1216, '4', 0.0208333, 22, 1, '2017-09-13 06:45:33'),
(26, 996, '4', -2.3232, 6, 0, '2017-09-13 06:45:33'),
(4, 2451, '3', 2.0346, 24, 1, '2017-09-13 06:45:40'),
(11, 2820, '1', -2.64998, 16, 0, '2017-09-13 06:45:41'),
(3, 3090, '1', -1.74723, 9, 0, '2017-09-13 06:45:41'),
(25, 371, '4', 0.0075, 19, 1, '2017-09-13 06:45:41'),
(1, 1218, '1', -0.75, 10, 0, '2017-09-13 06:45:42'),
(30, 1332, '3', 2.55, 9, 1, '2017-09-13 06:45:42'),
(11, 2833, '3', 2.89738, 5, 1, '2017-09-13 06:45:46'),
(14, 734, '2', 0, 30, 1, '2017-09-13 06:45:50'),
(18, 1250, '1', 0.05, 59, 1, '2017-09-13 06:45:50'),
(24, 1186, '3', 0.382653, 18, 1, '2017-09-13 06:45:50'),
(29, 173, '3', -1.48993, 65, 0, '2017-09-13 06:45:51'),
(5, 2429, '2', -2.05959, 24, 0, '2017-09-13 06:45:51'),
(4, 1155, '1', -1.35, 11, 0, '2017-09-13 06:45:51'),
(26, 597, '4', -1.12037, 21, 0, '2017-09-13 06:45:55'),
(14, 724, '4', -1.92, 6, 0, '2017-09-13 06:45:56'),
(15, 1209, '2', 1.38, 27, 1, '2017-09-13 06:45:57'),
(3, 3097, '2', -0.831025, 18, 0, '2017-09-13 06:45:59'),
(4, 1142, '1', -1.08, 8, 0, '2017-09-13 06:45:59'),
(11, 2728, '4', 2.72082, 13, 1, '2017-09-13 06:45:59'),
(25, 393, '0', -0.0075, 20, 0, '2017-09-13 06:46:02'),
(30, 1323, '2', -1.92188, 23, 0, '2017-09-13 06:46:04'),
(1, 1203, '2', -0.163333, 23, 0, '2017-09-13 06:46:05'),
(11, 2626, '3', 2.87619, 6, 1, '2017-09-13 06:46:05'),
(26, 599, '3', -1.76333, 14, 0, '2017-09-13 06:46:08'),
(14, 485, '1', 1.54395, 13, 1, '2017-09-13 06:46:09'),
(15, 1296, '3', -1, 16, 0, '2017-09-13 06:46:13'),
(14, 729, '0', 0, 4, -1, '2017-09-13 06:46:14'),
(19, 472, '1', 1.08, 16, 1, '2017-09-13 06:46:14'),
(11, 2625, '1', -2.81118, 9, 0, '2017-09-13 06:46:15'),
(5, 2413, '4', -1.63894, 24, 0, '2017-09-13 06:46:15'),
(24, 1203, '3', 0.0133333, 28, 1, '2017-09-13 06:46:19'),
(29, 172, '2', 2.42616, 30, 1, '2017-09-13 06:46:21'),
(1, 1216, '0', 0, 20, -1, '2017-09-13 06:46:25'),
(15, 1188, '2', -1.71429, 12, 0, '2017-09-13 06:46:25'),
(18, 172, '2', 2.04545, 35, 1, '2017-09-13 06:46:26'),
(11, 2634, '2', -2.72082, 13, 0, '2017-09-13 06:46:27'),
(19, 465, '2', 0.963333, 13, 1, '2017-09-13 06:46:28'),
(21, 509, '1', 1.33333, 12, 1, '2017-09-13 06:46:29'),
(15, 1250, '1', 2.7, 6, 1, '2017-09-13 06:46:32'),
(24, 1172, '4', 0.27, 14, 1, '2017-09-13 06:46:32'),
(3, 3289, '3', 0.00831025, 36, 1, '2017-09-13 06:46:35'),
(4, 2438, '4', -1.56852, 36, 0, '2017-09-13 06:46:36'),
(30, 1090, '4', -1.45, 31, 0, '2017-09-13 06:46:36'),
(25, 2431, '0', 0, 35, -1, '2017-09-13 06:46:37'),
(15, 1299, '1', -2.63636, 8, 0, '2017-09-13 06:46:40'),
(11, 2622, '2', 2.69752, 14, 1, '2017-09-13 06:46:41'),
(5, 2420, '3', 1.59505, 26, 1, '2017-09-13 06:46:42'),
(1, 1185, '4', 0.382653, 18, 1, '2017-09-13 06:46:43'),
(30, 1313, '2', 2.44444, 10, 1, '2017-09-13 06:46:46'),
(24, 1185, '4', 0.646684, 15, 1, '2017-09-13 06:46:48'),
(4, 1150, '3', -0.1875, 15, 0, '2017-09-13 06:46:50'),
(25, 375, '1', 0.1875, 15, 1, '2017-09-13 06:46:52'),
(14, 721, '0', -0.001875, 40, 0, '2017-09-13 06:46:54'),
(19, 733, '1', -0.316875, 27, 0, '2017-09-13 06:46:54'),
(18, 1275, '3', -1.33333, 30, 0, '2017-09-13 06:46:56'),
(30, 1343, '4', 2.22, 13, 1, '2017-09-13 06:47:00'),
(4, 1147, '3', -0.9075, 9, 0, '2017-09-13 06:47:00'),
(5, 401, '1', -0.0075, 19, 0, '2017-09-13 06:47:00'),
(1, 1183, '2', 0.0991736, 18, 1, '2017-09-13 06:47:01'),
(19, 729, '1', -1.94676, 7, 0, '2017-09-13 06:47:01'),
(21, 481, '1', 0.0075, 38, 1, '2017-09-13 06:47:07'),
(11, 2624, '2', 2.3903, 26, 1, '2017-09-13 06:47:08'),
(14, 726, '1', 1.14446, 13, 1, '2017-09-13 06:47:08'),
(15, 1264, '2', -1.63636, 30, 0, '2017-09-13 06:47:09'),
(29, 1209, '2', 0.350882, 48, 1, '2017-09-13 06:47:10'),
(25, 388, '3', -0.03, 18, 0, '2017-09-13 06:47:11'),
(3, 3093, '4', -0.00831025, 36, 0, '2017-09-13 06:47:12'),
(24, 1263, '2', -0.3675, 26, 0, '2017-09-13 06:47:13'),
(14, 723, '1', 2.08333, 6, 1, '2017-09-13 06:47:14'),
(11, 2631, '3', 2.87619, 6, 1, '2017-09-13 06:47:14'),
(21, 725, '1', -1.37284, 11, 0, '2017-09-13 06:47:18'),
(1, 1291, '1', -0.12, 16, 0, '2017-09-13 06:47:18'),
(5, 1133, '3', 0.0675, 17, 1, '2017-09-13 06:47:18'),
(19, 509, '1', 0.668981, 19, 1, '2017-09-13 06:47:21'),
(14, 727, '2', 1.6875, 9, 1, '2017-09-13 06:47:23'),
(30, 995, '3', -1.75, 25, 0, '2017-09-13 06:47:25'),
(29, 1298, '1', 2.40251, 17, 1, '2017-09-13 06:47:26'),
(1, 1197, '3', -1.17188, 9, 0, '2017-09-13 06:47:27'),
(14, 722, '3', 1.94676, 7, 1, '2017-09-13 06:47:30'),
(29, 1296, '2', 2.47645, 6, 1, '2017-09-13 06:47:32'),
(1, 1169, '2', 1.6875, 6, 1, '2017-09-13 06:47:32'),
(24, 1210, '4', -0.0833333, 20, 0, '2017-09-13 06:47:33'),
(21, 464, '3', 0.359467, 17, 1, '2017-09-13 06:47:35'),
(30, 1334, '4', 2.45, 11, 1, '2017-09-13 06:47:36'),
(5, 393, '0', -0.0075, 20, 0, '2017-09-13 06:47:38'),
(3, 3142, '3', -0.251385, 27, 0, '2017-09-13 06:47:40'),
(25, 2420, '3', 1.46126, 29, 1, '2017-09-13 06:47:40'),
(1, 1198, '4', 1.2675, 7, 1, '2017-09-13 06:47:40'),
(29, 1188, '2', -2.39719, 8, 0, '2017-09-13 06:47:40'),
(24, 1177, '2', 1.39463, 7, 1, '2017-09-13 06:47:41'),
(14, 719, '3', 1.33333, 12, 1, '2017-09-13 06:47:42'),
(19, 487, '4', 0.541875, 23, 1, '2017-09-13 06:47:45'),
(18, 1206, '3', -0.55, 49, 0, '2017-09-13 06:47:45'),
(15, 1286, '2', -1.2, 36, 0, '2017-09-13 06:47:45'),
(4, 2453, '4', 1.28476, 47, 1, '2017-09-13 06:47:47'),
(5, 364, '2', 0.48, 12, 1, '2017-09-13 06:47:50'),
(30, 1333, '2', 2.3, 14, 1, '2017-09-13 06:47:50'),
(14, 478, '4', 2.52, 8, 1, '2017-09-13 06:47:51'),
(29, 1176, '4', 1.97884, 13, 1, '2017-09-13 06:47:54'),
(19, 466, '3', 1.33333, 10, 1, '2017-09-13 06:47:54'),
(18, 1204, '4', 2.4375, 9, 1, '2017-09-13 06:47:55'),
(11, 733, '1', -1.17188, 15, 0, '2017-09-13 06:47:57'),
(4, 1143, '4', -0.75, 10, 0, '2017-09-13 06:47:57'),
(3, 3145, '2', 0.831025, 18, 1, '2017-09-13 06:47:57'),
(24, 1169, '2', 0.255208, 17, 1, '2017-09-13 06:47:57'),
(30, 1349, '1', 2.65665, 10, 1, '2017-09-13 06:47:59'),
(21, 736, '3', -0.210208, 25, 0, '2017-09-13 06:47:59'),
(1, 1263, '1', 0.676875, 21, 1, '2017-09-13 06:48:01'),
(14, 475, '4', 2.21739, 12, 1, '2017-09-13 06:48:03'),
(5, 2406, '2', -2.17911, 13, 0, '2017-09-13 06:48:03'),
(19, 464, '1', -1.13609, 10, 0, '2017-09-13 06:48:04'),
(18, 1296, '3', -1.75, 10, 0, '2017-09-13 06:48:05'),
(4, 2446, '1', -2.44745, 12, 0, '2017-09-13 06:48:09'),
(11, 730, '1', -1.33333, 12, 0, '2017-09-13 06:48:10'),
(24, 1227, '1', -0.333333, 16, 0, '2017-09-13 06:48:13'),
(25, 2408, '3', 1.23381, 33, 1, '2017-09-13 06:48:14'),
(11, 509, '1', 2.08333, 6, 1, '2017-09-13 06:48:15'),
(4, 1149, '1', 1.47, 6, 1, '2017-09-13 06:48:16'),
(25, 372, '0', 0, 5, -1, '2017-09-13 06:48:19'),
(30, 1346, '3', -2.33688, 20, 0, '2017-09-13 06:48:20'),
(19, 481, '3', -1.08, 16, 0, '2017-09-13 06:48:21'),
(11, 734, '2', 1.61333, 8, 1, '2017-09-13 06:48:23'),
(15, 1229, '3', -0.611111, 43, 0, '2017-09-13 06:48:28'),
(24, 1183, '2', 0.303719, 15, 1, '2017-09-13 06:48:29'),
(3, 3296, '2', -0.318998, 31, 0, '2017-09-13 06:48:29'),
(11, 729, '1', -2.08333, 6, 0, '2017-09-13 06:48:30'),
(4, 1148, '1', -0.27, 14, 0, '2017-09-13 06:48:30'),
(29, 1289, '2', 0.533534, 37, 1, '2017-09-13 06:48:30'),
(25, 1116, '4', 0.12, 16, 1, '2017-09-13 06:48:35'),
(21, 729, '0', -0.00231481, 36, 0, '2017-09-13 06:48:36'),
(19, 485, '2', -1.36248, 15, 0, '2017-09-13 06:48:36'),
(1, 1270, '0', 0, 35, -1, '2017-09-13 06:48:36'),
(1, 1194, '0', 0, 0, -1, '2017-09-13 06:48:37'),
(30, 1304, '2', 2.3166, 18, 1, '2017-09-13 06:48:38'),
(11, 498, '2', 1.80187, 9, 1, '2017-09-13 06:48:38'),
(14, 480, '4', -0.3, 36, 0, '2017-09-13 06:48:39'),
(15, 1289, '3', -2.1, 12, 0, '2017-09-13 06:48:40'),
(25, 364, '2', 1.47, 6, 1, '2017-09-13 06:48:41'),
(21, 718, '1', 1.92, 6, 1, '2017-09-13 06:48:41'),
(11, 720, '4', 2.40166, 4, 1, '2017-09-13 06:48:43'),
(1, 1173, '2', 1.2675, 7, 1, '2017-09-13 06:48:43'),
(18, 1289, '0', -0.075, 40, 0, '2017-09-13 06:48:45'),
(18, 1187, '2', -0.75, 40, 1, '2017-09-13 06:48:46'),
(24, 1218, '1', -0.03, 18, 0, '2017-09-13 06:48:46'),
(4, 2450, '4', -2.33348, 17, 0, '2017-09-13 06:48:46'),
(14, 482, '4', 2.14286, 12, 1, '2017-09-13 06:48:51'),
(11, 735, '4', 1.47, 9, 1, '2017-09-13 06:48:52'),
(24, 1190, '4', 1.38138, 9, 1, '2017-09-13 06:48:55'),
(3, 3317, '4', -0.362949, 30, 0, '2017-09-13 06:49:00'),
(1, 1184, '4', 0.255208, 17, 1, '2017-09-13 06:49:01'),
(25, 384, '0', -0.0075, 20, 0, '2017-09-13 06:49:01'),
(11, 464, '3', 0.998521, 11, 1, '2017-09-13 06:49:03'),
(1, 1186, '3', 1.85204, 6, 1, '2017-09-13 06:49:07'),
(11, 486, '1', 2.37037, 4, 1, '2017-09-13 06:49:07'),
(30, 1361, '2', -1.93165, 29, 0, '2017-09-13 06:49:08'),
(11, 490, '2', 2.37037, 4, 1, '2017-09-13 06:49:11'),
(18, 1176, '4', 0.214286, 26, 1, '2017-09-13 06:49:12'),
(15, 171, '2', -1.8, 32, 0, '2017-09-13 06:49:12'),
(25, 2416, '3', 2.35692, 10, 1, '2017-09-13 06:49:12'),
(19, 490, '4', 0, 36, 0, '2017-09-13 06:49:12'),
(3, 3301, '4', -1.36248, 15, 0, '2017-09-13 06:49:15'),
(1, 1293, '1', -2, 8, 0, '2017-09-13 06:49:15'),
(24, 1291, '4', 0, 20, 1, '2017-09-13 06:49:15'),
(11, 753, '4', 2.71429, 4, 1, '2017-09-13 06:49:15'),
(4, 2444, '3', 1.4283, 31, 1, '2017-09-13 06:49:18'),
(25, 379, '3', 1.47, 6, 1, '2017-09-13 06:49:18'),
(1, 1220, '1', -2.02423, 5, 0, '2017-09-13 06:49:20'),
(29, 1240, '0', -0.221042, 50, 0, '2017-09-13 06:49:21'),
(11, 740, '1', 2.5, 6, 1, '2017-09-13 06:49:21'),
(21, 733, '0', -0.001875, 40, 0, '2017-09-13 06:49:21'),
(5, 2411, '1', -0.22314, 80, 0, '2017-09-13 06:49:24'),
(30, 1098, '4', -2.36512, 18, 0, '2017-09-13 06:49:26'),
(18, 1295, '3', -0.375, 21, 0, '2017-09-13 06:49:33'),
(24, 1170, '2', 0.1875, 18, 1, '2017-09-13 06:49:33'),
(15, 1275, '1', -1.12037, 21, 0, '2017-09-13 06:49:34'),
(11, 482, '2', -2.07143, 13, 0, '2017-09-13 06:49:34'),
(21, 487, '4', 1.2675, 14, 1, '2017-09-13 06:49:36'),
(29, 169, '2', 2.19301, 18, 1, '2017-09-13 06:49:38'),
(1, 1284, '3', 0.03, 18, 1, '2017-09-13 06:49:38'),
(14, 752, '0', -0.0652174, 46, 0, '2017-09-13 06:49:38'),
(4, 2440, '4', 1.96388, 21, 1, '2017-09-13 06:49:39'),
(24, 1198, '4', 1.08, 8, 1, '2017-09-13 06:49:41'),
(15, 1283, '2', -1.17188, 9, 0, '2017-09-13 06:49:42'),
(5, 366, '0', -0.0075, 20, 0, '2017-09-13 06:49:44'),
(30, 1328, '2', -2.05, 19, 0, '2017-09-13 06:49:45'),
(25, 2448, '2', 2.11957, 27, 1, '2017-09-13 06:49:45'),
(24, 1194, '1', 1.53061, 8, 1, '2017-09-13 06:49:49'),
(18, 1286, '0', 0, 17, -1, '2017-09-13 06:49:50'),
(11, 474, '3', -1.8, 16, 0, '2017-09-13 06:49:50'),
(14, 740, '4', -1.91667, 13, 0, '2017-09-13 06:49:50'),
(21, 735, '3', -0.653333, 16, 0, '2017-09-13 06:49:52'),
(19, 721, '0', -0.001875, 40, 0, '2017-09-13 06:49:53'),
(21, 723, '1', 1.94676, 7, 1, '2017-09-13 06:49:58'),
(4, 2449, '3', 1.92, 20, 1, '2017-09-13 06:49:59'),
(1, 1199, '2', -0.292969, 22, 0, '2017-09-13 06:49:59'),
(3, 3313, '0', -0.00141777, 46, 0, '2017-09-13 06:50:02'),
(11, 476, '2', -2.1, 12, 0, '2017-09-13 06:50:02'),
(5, 368, '3', 0, 20, 1, '2017-09-13 06:50:04'),
(19, 728, '1', 1.40443, 12, 1, '2017-09-13 06:50:05'),
(25, 2446, '1', -2.54032, 19, 0, '2017-09-13 06:50:05'),
(18, 173, '3', -2.55, 15, 0, '2017-09-13 06:50:05'),
(21, 494, '2', -1.61333, 8, 0, '2017-09-13 06:50:07'),
(14, 756, '2', 1.9375, 17, 1, '2017-09-13 06:50:08'),
(30, 1126, '2', 1.85, 23, 1, '2017-09-13 06:50:08'),
(11, 487, '4', 2.04187, 7, 1, '2017-09-13 06:50:09'),
(24, 1195, '0', -0.0075, 20, 0, '2017-09-13 06:50:09'),
(15, 1230, '2', -1.00269, 27, 0, '2017-09-13 06:50:10'),
(21, 732, '3', -1.44676, 11, 0, '2017-09-13 06:50:18'),
(14, 751, '2', 2.25, 11, 1, '2017-09-13 06:50:19'),
(24, 1270, '1', -1.63894, 12, 0, '2017-09-13 06:50:21'),
(30, 1320, '3', 2.16, 14, 1, '2017-09-13 06:50:22'),
(5, 389, '1', -0.0075, 19, 0, '2017-09-13 06:50:23'),
(29, 1249, '0', -0.233677, 46, 0, '2017-09-13 06:50:24'),
(21, 486, '1', 1.94676, 7, 1, '2017-09-13 06:50:24'),
(4, 2455, '4', -1.6428, 26, 0, '2017-09-13 06:50:26'),
(14, 483, '2', 2.47826, 8, 1, '2017-09-13 06:50:27'),
(19, 498, '1', -0.6075, 22, 0, '2017-09-13 06:50:27'),
(11, 757, '3', -1.8913, 17, 0, '2017-09-13 06:50:27'),
(18, 1298, '1', 1.08, 24, 1, '2017-09-13 06:50:29'),
(3, 3297, '4', -0.362949, 30, 0, '2017-09-13 06:50:32'),
(24, 1174, '3', 0.869823, 12, 1, '2017-09-13 06:50:33'),
(5, 1109, '3', 0.75, 10, 1, '2017-09-13 06:50:34'),
(19, 718, '4', -1.08, 12, 0, '2017-09-13 06:50:39'),
(15, 1285, '0', -0.00333333, 30, 0, '2017-09-13 06:50:40'),
(11, 489, '2', -1.36688, 13, 0, '2017-09-13 06:50:40'),
(21, 721, '4', -1.08, 16, 0, '2017-09-13 06:50:41'),
(4, 1154, '3', -0.12, 16, 0, '2017-09-13 06:50:42'),
(1, 1287, '3', 0.00520833, 46, 1, '2017-09-13 06:50:47'),
(11, 466, '0', 0, 8, -1, '2017-09-13 06:50:48'),
(30, 1354, '3', -1.97297, 28, 0, '2017-09-13 06:50:50'),
(14, 759, '4', -1.88988, 23, 0, '2017-09-13 06:50:51'),
(21, 489, '2', -1.6875, 10, 0, '2017-09-13 06:50:51'),
(15, 169, '1', -1.6875, 12, 0, '2017-09-13 06:50:51'),
(11, 727, '2', 2.37037, 4, 1, '2017-09-13 06:50:52'),
(5, 1136, '1', -0.0075, 19, 0, '2017-09-13 06:50:53'),
(18, 1283, '0', -0.125, 24, 0, '2017-09-13 06:50:54'),
(19, 735, '1', -0.75, 15, 0, '2017-09-13 06:50:55'),
(24, 1276, '2', -0.105469, 26, 0, '2017-09-13 06:51:00'),
(3, 3307, '3', 0.409735, 29, 1, '2017-09-13 06:51:01'),
(11, 751, '0', 0, 14, -1, '2017-09-13 06:51:06'),
(14, 749, '0', 0, 16, -1, '2017-09-13 06:51:07'),
(19, 730, '2', 0.925926, 16, 1, '2017-09-13 06:51:10'),
(21, 465, '3', -0.333333, 20, 0, '2017-09-13 06:51:11'),
(14, 738, '4', -2.47059, 6, 0, '2017-09-13 06:51:12'),
(24, 1292, '1', 0.963333, 13, 1, '2017-09-13 06:51:12'),
(30, 1327, '3', 1.68, 22, 1, '2017-09-13 06:51:13'),
(3, 3299, '1', 1.54395, 13, 1, '2017-09-13 06:51:14'),
(5, 2404, '1', 1.6875, 23, 1, '2017-09-13 06:51:16'),
(25, 2438, '4', -1.36154, 71, 0, '2017-09-13 06:51:17'),
(29, 1260, '4', -0.870298, 54, 0, '2017-09-13 06:51:18'),
(11, 756, '3', -2.125, 14, 0, '2017-09-13 06:51:20'),
(30, 1347, '3', 2.69586, 8, 1, '2017-09-13 06:51:21'),
(5, 369, '2', 1.2675, 7, 1, '2017-09-13 06:51:23'),
(11, 723, '1', 2.52083, 3, 1, '2017-09-13 06:51:23'),
(4, 2456, '4', -1.34361, 43, 0, '2017-09-13 06:51:25'),
(14, 748, '2', 1.95, 14, 1, '2017-09-13 06:51:27'),
(21, 731, '1', -0.75, 18, 0, '2017-09-13 06:51:28'),
(15, 1278, '4', -0.3675, 39, 0, '2017-09-13 06:51:30'),
(1, 1269, '3', -0.0208333, 44, 0, '2017-09-13 06:51:31'),
(30, 1360, '2', 2.43962, 16, 1, '2017-09-13 06:51:37'),
(25, 377, '0', -0.0075, 20, 0, '2017-09-13 06:51:37'),
(3, 3303, '2', 0.75, 23, 1, '2017-09-13 06:51:38'),
(14, 741, '4', -1.97368, 13, 0, '2017-09-13 06:51:39'),
(19, 727, '4', -0.0833333, 30, 0, '2017-09-13 06:51:40'),
(11, 754, '4', 1.71429, 18, 1, '2017-09-13 06:51:42'),
(5, 396, '0', -0.0075, 20, 0, '2017-09-13 06:51:43'),
(21, 485, '2', -1.03355, 19, 0, '2017-09-13 06:51:48'),
(11, 746, '4', 2.41667, 7, 1, '2017-09-13 06:51:49'),
(25, 2418, '2', 2.1675, 12, 1, '2017-09-13 06:51:50'),
(19, 732, '3', -1.56481, 10, 0, '2017-09-13 06:51:50'),
(14, 747, '1', -1.91667, 13, 0, '2017-09-13 06:51:53'),
(5, 1112, '4', 0.75, 10, 1, '2017-09-13 06:51:53'),
(3, 3319, '4', 1.03355, 19, 1, '2017-09-13 06:51:56'),
(19, 720, '4', 1.99654, 7, 1, '2017-09-13 06:51:58'),
(21, 724, '1', 1.08, 12, 1, '2017-09-13 06:51:59'),
(24, 1269, '0', -0.00130208, 48, 0, '2017-09-13 06:52:00'),
(5, 1122, '4', 1.08, 8, 1, '2017-09-13 06:52:01'),
(18, 171, '2', -0.3, 72, 0, '2017-09-13 06:52:07'),
(30, 1345, '2', -1.81273, 35, 0, '2017-09-13 06:52:13'),
(3, 3304, '1', -1.19234, 17, 0, '2017-09-13 06:52:14'),
(25, 2434, '2', -2.34545, 24, 0, '2017-09-13 06:52:14'),
(21, 472, '2', -1.08, 16, 0, '2017-09-13 06:52:15'),
(4, 2457, '4', -0.983546, 53, 0, '2017-09-13 06:52:19'),
(1, 1208, '1', 0.0048, 48, 1, '2017-09-13 06:52:20'),
(30, 1353, '3', -2.72703, 8, 0, '2017-09-13 06:52:21'),
(24, 1220, '4', -0.244898, 20, 0, '2017-09-13 06:52:21'),
(5, 1138, '0', -0.0075, 20, 0, '2017-09-13 06:52:22'),
(19, 736, '3', -0.210208, 25, 0, '2017-09-13 06:52:23'),
(21, 737, '0', 0, 10, -1, '2017-09-13 06:52:25'),
(11, 750, '4', -0.456522, 39, 0, '2017-09-13 06:52:28'),
(21, 727, '4', -2.52083, 3, 0, '2017-09-13 06:52:28'),
(5, 1130, '1', -1.2675, 7, 0, '2017-09-13 06:52:29'),
(19, 726, '1', 1.49481, 10, 1, '2017-09-13 06:52:33'),
(4, 1144, '4', -0.1875, 15, 0, '2017-09-13 06:52:34'),
(25, 381, '0', -0.0075, 20, 0, '2017-09-13 06:52:35'),
(14, 750, '3', -0.0652174, 45, 0, '2017-09-13 06:52:38'),
(3, 3311, '2', -0.625236, 25, 0, '2017-09-13 06:52:39'),
(11, 742, '4', -2.1, 12, 0, '2017-09-13 06:52:40'),
(25, 369, '2', 1.47, 6, 1, '2017-09-13 06:52:40'),
(21, 728, '4', -1.40443, 12, 0, '2017-09-13 06:52:40'),
(24, 1284, '0', -0.0075, 20, 0, '2017-09-13 06:52:41'),
(1, 1175, '4', 0.292969, 22, 1, '2017-09-13 06:52:42'),
(4, 1151, '2', 1.08, 8, 1, '2017-09-13 06:52:43'),
(19, 719, '1', -1.56481, 10, 0, '2017-09-13 06:52:44'),
(14, 746, '4', 2.33333, 8, 1, '2017-09-13 06:52:46'),
(4, 1145, '3', -1.6875, 5, 0, '2017-09-13 06:52:47'),
(5, 2422, '3', -2.13574, 20, 0, '2017-09-13 06:52:48'),
(11, 479, '1', -2.34783, 10, 0, '2017-09-13 06:52:50'),
(21, 722, '2', -1.56481, 10, 0, '2017-09-13 06:52:51'),
(24, 1257, '3', -1.78255, 11, 0, '2017-09-13 06:52:52'),
(19, 725, '4', 1.62197, 9, 1, '2017-09-13 06:52:52'),
(14, 502, '2', 2.47826, 8, 1, '2017-09-13 06:52:54'),
(25, 1138, '2', 0.1875, 15, 1, '2017-09-13 06:52:56'),
(3, 3315, '2', -1.19234, 17, 0, '2017-09-13 06:52:56'),
(11, 475, '0', 0, 7, -1, '2017-09-13 06:52:58'),
(30, 1118, '1', -1.71792, 34, 0, '2017-09-13 06:52:58'),
(5, 1140, '1', 0.75, 10, 1, '2017-09-13 06:52:59'),
(21, 720, '3', -1.74723, 9, 0, '2017-09-13 06:53:00'),
(4, 2434, '1', 2.33281, 13, 1, '2017-09-13 06:53:01'),
(1, 1282, '4', -0.333333, 20, 0, '2017-09-13 06:53:02'),
(19, 734, '2', 1.33333, 10, 1, '2017-09-13 06:53:02'),
(14, 774, '1', 2.5221, 11, 1, '2017-09-13 06:53:06'),
(4, 1157, '1', 1.2675, 7, 1, '2017-09-13 06:53:08'),
(3, 3309, '2', -1.36248, 15, 0, '2017-09-13 06:53:11'),
(19, 724, '1', 1.20333, 11, 1, '2017-09-13 06:53:13'),
(11, 752, '1', -1.95652, 16, 0, '2017-09-13 06:53:14'),
(4, 2443, '4', 2.50095, 8, 1, '2017-09-13 06:53:15'),
(21, 730, '1', -0.925926, 16, 0, '2017-09-13 06:53:16'),
(5, 365, '2', -0.03, 18, 0, '2017-09-13 06:53:17'),
(24, 1199, '3', 0.046875, 28, 1, '2017-09-13 06:53:19'),
(3, 3298, '2', -2.04726, 8, 0, '2017-09-13 06:53:19'),
(11, 485, '1', 2.26843, 6, 1, '2017-09-13 06:53:20'),
(1, 1281, '1', -0.48, 18, 0, '2017-09-13 06:53:20'),
(14, 471, '2', 1.88988, 15, 1, '2017-09-13 06:53:21'),
(21, 719, '3', 1.81481, 8, 1, '2017-09-13 06:53:24'),
(5, 1110, '2', 1.08, 8, 1, '2017-09-13 06:53:25'),
(25, 2445, '1', -2.28462, 31, 0, '2017-09-13 06:53:27'),
(1, 1171, '4', 1.2675, 7, 1, '2017-09-13 06:53:28'),
(30, 1132, '3', -1.35, 33, 0, '2017-09-13 06:53:28'),
(24, 1282, '1', -1.33333, 10, 0, '2017-09-13 06:53:29'),
(21, 466, '3', 1.08, 12, 1, '2017-09-13 06:53:35'),
(25, 1137, '2', 0.48, 12, 1, '2017-09-13 06:53:40'),
(5, 381, '1', 0.1875, 15, 1, '2017-09-13 06:53:40'),
(3, 3302, '3', 0.6862, 24, 1, '2017-09-13 06:53:43'),
(19, 737, '4', 0.1875, 30, 1, '2017-09-13 06:53:44'),
(11, 755, '1', 1.125, 30, 1, '2017-09-13 06:53:50'),
(24, 1294, '2', -0.0208333, 22, 0, '2017-09-13 06:53:51'),
(11, 499, '1', 2.76316, 3, 1, '2017-09-13 06:53:53'),
(19, 722, '2', -1.6875, 9, 0, '2017-09-13 06:53:53'),
(5, 399, '0', 0, 16, -1, '2017-09-13 06:53:56'),
(3, 3305, '3', 1.54395, 13, 1, '2017-09-13 06:53:57'),
(30, 1632, '4', -0.563333, 17, 0, '2017-09-13 06:53:57'),
(11, 743, '2', -2.5, 6, 0, '2017-09-13 06:53:58'),
(21, 490, '2', 0.333333, 24, 1, '2017-09-13 06:53:59'),
(11, 502, '2', 2.6087, 6, 1, '2017-09-13 06:54:05'),
(19, 731, '2', 1.33333, 12, 1, '2017-09-13 06:54:05'),
(5, 1105, '2', 1.08, 8, 1, '2017-09-13 06:54:05'),
(14, 767, '1', 0.572357, 44, 1, '2017-09-13 06:54:05'),
(1, 1265, '1', -0.134246, 41, 0, '2017-09-13 06:54:08'),
(24, 1281, '1', -0.403333, 19, 0, '2017-09-13 06:54:10'),
(21, 734, '3', -1.20333, 11, 0, '2017-09-13 06:54:11'),
(19, 489, '4', -1.57687, 11, 0, '2017-09-13 06:54:16'),
(5, 370, '4', -0.3675, 13, 0, '2017-09-13 06:54:17'),
(11, 478, '4', 2.28, 12, 1, '2017-09-13 06:54:17'),
(14, 772, '3', 2.43037, 13, 1, '2017-09-13 06:54:18'),
(24, 1189, '3', 0.979592, 12, 1, '2017-09-13 06:54:22'),
(11, 483, '1', -2.54348, 7, 0, '2017-09-13 06:54:24'),
(19, 494, '3', 1.61333, 8, 1, '2017-09-13 06:54:24'),
(3, 3324, '2', 0.511815, 27, 1, '2017-09-13 06:54:25'),
(30, 1635, '2', 0, 30, 0, '2017-09-13 06:54:27'),
(21, 726, '1', 0.75, 17, 1, '2017-09-13 06:54:28'),
(19, 723, '1', 1.94676, 7, 1, '2017-09-13 06:54:31'),
(5, 385, '0', -0.0075, 20, 0, '2017-09-13 06:54:38'),
(1, 1200, '4', 0.0833333, 30, 1, '2017-09-13 06:54:39'),
(14, 765, '2', 1.82635, 21, 1, '2017-09-13 06:54:40'),
(19, 486, '1', 1.6875, 9, 1, '2017-09-13 06:54:40'),
(21, 498, '1', -1.2675, 14, 0, '2017-09-13 06:54:42'),
(30, 1641, '3', 0.46301, 17, 1, '2017-09-13 06:54:44'),
(21, 476, '1', -2.1675, 6, 0, '2017-09-13 06:54:47'),
(24, 1175, '4', 0.0117188, 30, 1, '2017-09-13 06:54:52'),
(14, 762, '3', 2.19301, 15, 1, '2017-09-13 06:54:55'),
(5, 397, '0', -0.0075, 20, 0, '2017-09-13 06:54:58'),
(11, 745, '3', -0.45, 34, 0, '2017-09-13 06:54:58'),
(30, 1634, '3', 0.333333, 16, 1, '2017-09-13 06:55:01'),
(24, 1202, '3', -1.56481, 10, 0, '2017-09-13 06:55:02'),
(1, 1257, '2', -0.75, 24, 0, '2017-09-13 06:55:03'),
(3, 3322, '3', 0.0510397, 40, 1, '2017-09-13 06:55:04'),
(30, 1633, '3', -1.60207, 7, 0, '2017-09-13 06:55:07'),
(14, 771, '1', 2.35532, 14, 1, '2017-09-13 06:55:08'),
(11, 741, '1', -2.21053, 10, 0, '2017-09-13 06:55:09'),
(19, 747, '2', 0.113426, 29, 1, '2017-09-13 06:55:09'),
(30, 1644, '3', 2.39158, 3, 1, '2017-09-13 06:55:10'),
(25, 2411, '1', -0.0803306, 92, 0, '2017-09-13 06:55:13'),
(5, 2427, '0', 0, 16, -1, '2017-09-13 06:55:14'),
(11, 744, '4', -2.475, 7, 0, '2017-09-13 06:55:16'),
(30, 1694, '1', 2.26843, 6, 1, '2017-09-13 06:55:17'),
(24, 1268, '3', -1.33333, 16, 0, '2017-09-13 06:55:18'),
(1, 1294, '1', -0.255208, 17, 0, '2017-09-13 06:55:20'),
(25, 1115, '1', 0.75, 10, 1, '2017-09-13 06:55:23'),
(30, 1677, '4', -1.98047, 9, 0, '2017-09-13 06:55:25'),
(19, 482, '1', -0.979592, 18, 0, '2017-09-13 06:55:28'),
(1, 1189, '1', -0.860969, 13, 0, '2017-09-13 06:55:33'),
(30, 1696, '1', -1.89824, 9, 0, '2017-09-13 06:55:34'),
(5, 382, '0', -0.0075, 20, 0, '2017-09-13 06:55:34'),
(24, 1265, '0', 0, 18, -1, '2017-09-13 06:55:36'),
(19, 476, '1', -1.6875, 10, 0, '2017-09-13 06:55:38'),
(11, 737, '4', 0.541875, 23, 1, '2017-09-13 06:55:39'),
(1, 1191, '3', 1.53061, 8, 1, '2017-09-13 06:55:41'),
(14, 769, '1', 1.19055, 33, 1, '2017-09-13 06:55:42'),
(25, 396, '0', -0.0075, 20, 0, '2017-09-13 06:55:43'),
(1, 1219, '3', 1.79132, 5, 1, '2017-09-13 06:55:46'),
(11, 728, '4', -1.29848, 13, 0, '2017-09-13 06:55:53'),
(5, 390, '0', -0.0075, 20, 0, '2017-09-13 06:55:54'),
(14, 784, '3', -2.44949, 14, 0, '2017-09-13 06:55:56'),
(24, 1171, '4', 0, 20, 1, '2017-09-13 06:55:56'),
(30, 1668, '3', 0.541875, 23, 1, '2017-09-13 06:55:58'),
(11, 722, '3', 1.94676, 7, 1, '2017-09-13 06:55:59'),
(5, 373, '2', -1.08, 8, 0, '2017-09-13 06:56:03'),
(14, 766, '2', -2.65665, 7, 0, '2017-09-13 06:56:03'),
(30, 1702, '2', 2.00826, 8, 1, '2017-09-13 06:56:05'),
(15, 720, '4', 2.40166, 4, 1, '2017-09-13 06:56:08'),
(19, 757, '2', 0.362949, 30, 1, '2017-09-13 06:56:08'),
(5, 2418, '2', 2.49797, 7, 1, '2017-09-13 06:56:09'),
(18, 464, '1', -0.998521, 11, 0, '2017-09-13 06:56:16'),
(11, 738, '2', 1.41176, 18, 1, '2017-09-13 06:56:17'),
(15, 472, '1', 1.2675, 14, 1, '2017-09-13 06:56:22'),
(24, 1208, '2', -0.6912, 26, 0, '2017-09-13 06:56:22'),
(5, 1114, '1', 0.1875, 15, 1, '2017-09-13 06:56:25'),
(11, 477, '3', -2.28261, 11, 0, '2017-09-13 06:56:28'),
(24, 1219, '3', 0.75, 11, 1, '2017-09-13 06:56:34'),
(18, 465, '3', -0.403333, 19, 0, '2017-09-13 06:56:35'),
(1, 1268, '0', -0.00130208, 48, 0, '2017-09-13 06:56:35'),
(11, 472, '3', -2.04187, 7, 0, '2017-09-13 06:56:35'),
(14, 770, '1', -1.31941, 34, 0, '2017-09-13 06:56:38'),
(30, 1679, '4', -0.125517, 35, 0, '2017-09-13 06:56:42'),
(15, 737, '4', 0.6075, 22, 1, '2017-09-13 06:56:43'),
(14, 484, '1', 2.77847, 5, 1, '2017-09-13 06:56:43'),
(19, 751, '2', 0.0991736, 36, 1, '2017-09-13 06:56:44'),
(5, 2408, '3', 1.73677, 22, 1, '2017-09-13 06:56:47'),
(11, 719, '3', 1.33333, 12, 1, '2017-09-13 06:56:48'),
(24, 1293, '2', 0.255208, 17, 1, '2017-09-13 06:56:50'),
(1, 1202, '1', 0.925926, 16, 1, '2017-09-13 06:56:51'),
(15, 498, '0', 0, 8, -1, '2017-09-13 06:56:52'),
(14, 491, '1', -2.4474, 10, 0, '2017-09-13 06:56:53'),
(11, 724, '2', -1.92, 6, 0, '2017-09-13 06:56:54'),
(24, 1217, '3', 1.08, 8, 1, '2017-09-13 06:56:58'),
(19, 748, '4', -1.2675, 14, 0, '2017-09-13 06:56:58'),
(1, 1217, '3', 0.9075, 9, 1, '2017-09-13 06:57:00'),
(18, 733, '1', -0.3675, 26, 0, '2017-09-13 06:57:00'),
(14, 775, '4', 2.64122, 8, 1, '2017-09-13 06:57:01'),
(19, 753, '1', -2.45578, 4, 0, '2017-09-13 06:57:03'),
(30, 1637, '1', 0.0208333, 22, 1, '2017-09-13 06:57:04'),
(5, 1115, '1', 0.0675, 17, 1, '2017-09-13 06:57:04'),
(25, 2422, '1', 0.370789, 83, 1, '2017-09-13 06:57:07'),
(24, 1191, '3', 1.2398, 10, 1, '2017-09-13 06:57:08'),
(11, 732, '3', -1.02083, 15, 0, '2017-09-13 06:57:09'),
(19, 478, '0', 0, 8, -1, '2017-09-13 06:57:11'),
(14, 760, '0', 0, 14, -1, '2017-09-13 06:57:16'),
(15, 489, '1', 0.421875, 25, 1, '2017-09-13 06:57:16'),
(30, 1681, '2', -1.50521, 14, 0, '2017-09-13 06:57:18'),
(11, 721, '1', 1.57687, 11, 1, '2017-09-13 06:57:20'),
(19, 743, '4', 1.56481, 10, 1, '2017-09-13 06:57:21'),
(15, 486, '1', 2.37037, 4, 1, '2017-09-13 06:57:21'),
(14, 764, '1', -2.65665, 6, 0, '2017-09-13 06:57:22'),
(5, 1131, '4', -0.0075, 19, 0, '2017-09-13 06:57:23'),
(30, 1674, '1', 2.05141, 9, 1, '2017-09-13 06:57:26'),
(25, 394, '4', -0.0075, 19, 0, '2017-09-13 06:57:26'),
(24, 1200, '2', -0.520833, 21, 0, '2017-09-13 06:57:29'),
(11, 481, '4', -1.80187, 9, 0, '2017-09-13 06:57:30'),
(18, 487, '4', 0.226875, 29, 1, '2017-09-13 06:57:30'),
(30, 1661, '3', 1.60207, 7, 1, '2017-09-13 06:57:34'),
(5, 2410, '2', 2.26573, 11, 1, '2017-09-13 06:57:35'),
(19, 480, '4', -1.2675, 14, 0, '2017-09-13 06:57:35'),
(25, 2406, '3', 2.29688, 11, 1, '2017-09-13 06:57:37'),
(11, 465, '2', 1.47, 9, 1, '2017-09-13 06:57:38'),
(24, 1287, '0', 0, 11, -1, '2017-09-13 06:57:41'),
(1, 1206, '3', -0.9, 42, 0, '2017-09-13 06:57:43'),
(5, 1121, '1', -0.9075, 9, 0, '2017-09-13 06:57:43'),
(11, 718, '1', 2.08333, 5, 1, '2017-09-13 06:57:43'),
(24, 1298, '1', 2.52083, 5, 1, '2017-09-13 06:57:46'),
(15, 727, '2', 0.231481, 26, 1, '2017-09-13 06:57:46'),
(14, 763, '1', -1.72175, 26, 0, '2017-09-13 06:57:47'),
(1, 1188, '1', 1.85204, 6, 1, '2017-09-13 06:57:48'),
(11, 725, '1', -1.75433, 8, 0, '2017-09-13 06:57:52'),
(25, 1155, '4', 0.15, 19, 1, '2017-09-13 06:57:56'),
(11, 736, '1', 1.75433, 8, 1, '2017-09-13 06:57:59'),
(25, 1144, '3', 2.1, 6, 1, '2017-09-13 06:58:03'),
(18, 730, '1', -0.0208333, 33, 0, '2017-09-13 06:58:03'),
(5, 384, '0', -0.0075, 20, 0, '2017-09-13 06:58:04'),
(14, 758, '4', 1.88988, 19, 1, '2017-09-13 06:58:06'),
(30, 1704, '2', 0.359467, 34, 1, '2017-09-13 06:58:08'),
(11, 726, '1', 1.62197, 9, 1, '2017-09-13 06:58:08'),
(24, 172, '2', 1.83372, 24, 1, '2017-09-13 06:58:09'),
(15, 719, '3', 0.333333, 24, 1, '2017-09-13 06:58:11'),
(18, 727, '2', 1.94676, 7, 1, '2017-09-13 06:58:11'),
(14, 493, '3', -2.58532, 6, 0, '2017-09-13 06:58:12'),
(30, 1655, '2', -2.12138, 7, 0, '2017-09-13 06:58:15'),
(19, 477, '3', -0.00141777, 45, 0, '2017-09-13 06:58:21'),
(18, 498, '2', 1.6875, 10, 1, '2017-09-13 06:58:21'),
(14, 488, '3', 2.47645, 9, 1, '2017-09-13 06:58:21'),
(5, 1120, '0', -0.0075, 20, 0, '2017-09-13 06:58:24'),
(24, 1264, '0', 0, 19, -1, '2017-09-13 06:58:28'),
(11, 480, '2', 1.425, 21, 1, '2017-09-13 06:58:29'),
(18, 509, '3', -1.56481, 10, 0, '2017-09-13 06:58:31'),
(14, 492, '4', -2.53118, 9, 0, '2017-09-13 06:58:31'),
(29, 389, '1', -0.03, 18, 0, '2017-09-13 06:58:33'),
(15, 726, '1', 0.259516, 24, 1, '2017-09-13 06:58:35'),
(11, 747, '2', 2.41667, 7, 1, '2017-09-13 06:58:37'),
(18, 729, '3', -1.81481, 8, 0, '2017-09-13 06:58:39'),
(29, 365, '1', -1.2675, 7, 0, '2017-09-13 06:58:40'),
(30, 1708, '3', -0.630208, 26, 0, '2017-09-13 06:58:42'),
(14, 777, '4', -2.45246, 12, 0, '2017-09-13 06:58:43'),
(5, 372, '0', -0.0075, 20, 0, '2017-09-13 06:58:44'),
(24, 1296, '2', 0.255208, 17, 1, '2017-09-13 06:58:45'),
(11, 739, '1', 2.25, 9, 1, '2017-09-13 06:58:46'),
(1, 171, '1', 0.825, 58, 1, '2017-09-13 06:58:48'),
(15, 733, '3', 1.08, 16, 1, '2017-09-13 06:58:51'),
(14, 776, '4', -2.64122, 8, 0, '2017-09-13 06:58:51'),
(30, 1672, '2', 1.78255, 11, 1, '2017-09-13 06:58:52'),
(19, 738, '3', 0, 34, 0, '2017-09-13 06:58:54'),
(18, 721, '1', 0.991875, 17, 1, '2017-09-13 06:58:56'),
(24, 1295, '4', 0.630208, 13, 1, '2017-09-13 06:58:58'),
(1, 1176, '3', -1.71429, 12, 0, '2017-09-13 06:59:00'),
(30, 1657, '2', -1.08, 8, 0, '2017-09-13 06:59:00'),
(29, 397, '0', -0.0075, 20, 0, '2017-09-13 06:59:01'),
(11, 749, '2', 1.9375, 17, 1, '2017-09-13 06:59:03'),
(19, 741, '1', -1.74723, 9, 0, '2017-09-13 06:59:04'),
(5, 374, '0', -0.0075, 20, 0, '2017-09-13 06:59:04'),
(30, 1711, '1', 2.12138, 7, 1, '2017-09-13 06:59:08'),
(25, 2456, '1', 1.5, 65, 1, '2017-09-13 06:59:08'),
(11, 748, '2', 2.475, 7, 1, '2017-09-13 06:59:10'),
(15, 724, '1', 0.163333, 23, 1, '2017-09-13 06:59:13'),
(29, 1115, '1', 0.0075, 19, 1, '2017-09-13 06:59:19'),
(18, 490, '2', 0.391204, 23, 1, '2017-09-13 06:59:19'),
(11, 775, '2', -2.45246, 12, 0, '2017-09-13 06:59:23'),
(15, 466, '3', 1.47, 9, 1, '2017-09-13 06:59:23'),
(11, 774, '1', 2.625, 6, 1, '2017-09-13 06:59:28'),
(25, 1148, '0', -0.15, 20, 0, '2017-09-13 06:59:29'),
(18, 720, '4', 1.62881, 10, 1, '2017-09-13 06:59:29'),
(5, 2432, '3', -1.70802, 27, 0, '2017-09-13 06:59:32'),
(29, 1105, '2', 0.3675, 13, 1, '2017-09-13 06:59:33'),
(30, 1660, '3', 0, 26, 0, '2017-09-13 06:59:34'),
(19, 752, '3', 0.239603, 33, 1, '2017-09-13 06:59:37'),
(15, 745, '1', -1.725, 17, 0, '2017-09-13 06:59:40'),
(24, 1275, '1', -0.148148, 42, 0, '2017-09-13 06:59:40'),
(1, 1289, '0', -0.075, 40, 0, '2017-09-13 06:59:40'),
(30, 1712, '3', -1.99177, 10, 0, '2017-09-13 06:59:44'),
(19, 744, '2', -1.80187, 9, 0, '2017-09-13 06:59:46'),
(30, 1667, '3', 2.45578, 4, 1, '2017-09-13 06:59:48'),
(29, 395, '2', -0.03, 18, 0, '2017-09-13 06:59:50'),
(5, 383, '0', -0.0075, 20, 0, '2017-09-13 06:59:52'),
(30, 1709, '2', -2.26843, 6, 0, '2017-09-13 06:59:55'),
(18, 731, '2', 0.0578704, 31, 1, '2017-09-13 07:00:00'),
(15, 731, '2', 0.333333, 24, 1, '2017-09-13 07:00:03'),
(5, 394, '2', 0.48, 12, 1, '2017-09-13 07:00:04'),
(11, 767, '1', 1.19055, 36, 1, '2017-09-13 07:00:04'),
(30, 1715, '3', -1.72942, 13, 0, '2017-09-13 07:00:08'),
(29, 377, '3', 0, 20, 0, '2017-09-13 07:00:10'),
(11, 471, '3', -2.43962, 8, 0, '2017-09-13 07:00:12'),
(5, 1117, '3', -0.75, 10, 0, '2017-09-13 07:00:14'),
(15, 728, '2', -1.51454, 11, 0, '2017-09-13 07:00:14'),
(15, 735, '3', -2.43, 3, 0, '2017-09-13 07:00:18'),
(29, 371, '4', 1.08, 8, 1, '2017-09-13 07:00:18'),
(30, 1698, '3', -1.6875, 13, 0, '2017-09-13 07:00:21'),
(15, 494, '3', 2.25333, 4, 1, '2017-09-13 07:00:22'),
(1, 1204, '2', -0.3125, 43, 0, '2017-09-13 07:00:23'),
(18, 724, '1', 0.0533333, 26, 1, '2017-09-13 07:00:27'),
(19, 749, '1', -0.0638021, 41, 0, '2017-09-13 07:00:27'),
(5, 388, '0', 0, 14, -1, '2017-09-13 07:00:28'),
(15, 718, '1', 1.92, 6, 1, '2017-09-13 07:00:28'),
(18, 494, '3', 2.25333, 4, 1, '2017-09-13 07:00:31'),
(11, 773, '3', 2.10309, 19, 1, '2017-09-13 07:00:32'),
(1, 1296, '1', -1.875, 9, 0, '2017-09-13 07:00:32'),
(5, 2400, '3', 2.66694, 4, 1, '2017-09-13 07:00:32'),
(29, 1122, '0', -0.0075, 20, 0, '2017-09-13 07:00:38'),
(30, 1707, '0', 0, 19, -1, '2017-09-13 07:00:40'),
(19, 756, '2', 1.59505, 13, 1, '2017-09-13 07:00:41'),
(24, 171, '1', 0.151875, 62, 1, '2017-09-13 07:00:42'),
(15, 734, '2', 0.75, 15, 1, '2017-09-13 07:00:43'),
(11, 760, '1', -2.25111, 14, 0, '2017-09-13 07:00:46'),
(25, 2450, '1', -1.39583, 77, 0, '2017-09-13 07:00:46'),
(5, 1137, '2', 0.0675, 17, 1, '2017-09-13 07:00:49'),
(18, 472, '1', 0.826875, 19, 1, '2017-09-13 07:00:51'),
(11, 770, '1', -2.70074, 7, 0, '2017-09-13 07:00:53'),
(24, 1299, '3', 2.00826, 12, 1, '2017-09-13 07:00:55'),
(19, 499, '2', -1.09903, 15, 0, '2017-09-13 07:00:56'),
(29, 364, '4', 0, 20, 0, '2017-09-13 07:00:58'),
(30, 1693, '4', 0.949219, 21, 1, '2017-09-13 07:01:01'),
(11, 769, '1', 2.25, 11, 1, '2017-09-13 07:01:04'),
(19, 742, '3', -1.2675, 14, 0, '2017-09-13 07:01:10'),
(30, 1695, '3', 1.81481, 12, 1, '2017-09-13 07:01:13'),
(29, 372, '2', -0.0675, 17, 0, '2017-09-13 07:01:15'),
(11, 764, '4', -2.08333, 11, 0, '2017-09-13 07:01:15'),
(29, 2400, '3', 2.83102, 2, 1, '2017-09-13 07:01:17'),
(19, 483, '1', -2.15643, 7, 0, '2017-09-13 07:01:18'),
(15, 748, '4', -0.3, 36, 0, '2017-09-13 07:01:19'),
(18, 486, '1', 0.0578704, 31, 1, '2017-09-13 07:01:22'),
(15, 725, '4', 1.75433, 8, 1, '2017-09-13 07:01:26'),
(5, 2416, '3', 0.968492, 38, 1, '2017-09-13 07:01:28'),
(30, 1658, '1', 0.75, 15, 1, '2017-09-13 07:01:28'),
(11, 492, '4', -2.025, 13, 0, '2017-09-13 07:01:29'),
(18, 726, '1', 1.49481, 10, 1, '2017-09-13 07:01:32'),
(1, 1286, '0', -0.000833333, 60, 0, '2017-09-13 07:01:33'),
(11, 491, '1', -2.52632, 6, 0, '2017-09-13 07:01:35'),
(18, 722, '3', 2.37037, 4, 1, '2017-09-13 07:01:36'),
(5, 1146, '1', 1.65, 9, 1, '2017-09-13 07:01:37'),
(11, 484, '4', -2.67391, 5, 0, '2017-09-13 07:01:40'),
(15, 742, '1', 1.95, 14, 1, '2017-09-13 07:01:41'),
(19, 755, '4', -0.688802, 25, 0, '2017-09-13 07:01:42'),
(24, 1250, '1', 0.55, 49, 1, '2017-09-13 07:01:43'),
(25, 2440, '4', 1.41818, 58, 1, '2017-09-13 07:01:45'),
(19, 479, '1', -2.62146, 3, 0, '2017-09-13 07:01:45'),
(25, 1143, '1', 2.25, 5, 1, '2017-09-13 07:01:51'),
(24, 1286, '1', -2.65, 7, 0, '2017-09-13 07:01:51'),
(19, 739, '1', 2.08333, 6, 1, '2017-09-13 07:01:52'),
(15, 744, '2', -2.175, 11, 0, '2017-09-13 07:01:52'),
(29, 2403, '2', 1.12037, 35, 1, '2017-09-13 07:01:52'),
(11, 488, '3', 1.75, 15, 1, '2017-09-13 07:01:55'),
(25, 1142, '4', 2.25, 5, 1, '2017-09-13 07:01:56'),
(5, 2447, '4', 2.31818, 20, 1, '2017-09-13 07:01:56'),
(19, 502, '4', -2.26843, 6, 0, '2017-09-13 07:01:58'),
(29, 2422, '3', -2.63672, 8, 0, '2017-09-13 07:02:00'),
(19, 746, '2', -2.37037, 4, 0, '2017-09-13 07:02:02'),
(30, 1700, '2', -0.3468, 33, 0, '2017-09-13 07:02:02'),
(1, 172, '2', 1.62669, 29, 1, '2017-09-13 07:02:03'),
(15, 747, '2', 2, 12, 1, '2017-09-13 07:02:04'),
(18, 735, '4', 0.03, 27, 1, '2017-09-13 07:02:04'),
(25, 1151, '2', 1.5, 10, 1, '2017-09-13 07:02:06'),
(11, 758, '4', 2.13158, 11, 1, '2017-09-13 07:02:06'),
(18, 737, '0', 0, 6, -1, '2017-09-13 07:02:09'),
(15, 483, '0', 0, 7, -1, '2017-09-13 07:02:10'),
(30, 1671, '3', 1.53061, 12, 1, '2017-09-13 07:02:14'),
(29, 1130, '1', -0.27, 14, 0, '2017-09-13 07:02:15'),
(11, 761, '4', -2.41304, 9, 0, '2017-09-13 07:02:15'),
(18, 725, '4', 1.25606, 12, 1, '2017-09-13 07:02:21'),
(30, 1647, '1', -1.28254, 9, 0, '2017-09-13 07:02:22'),
(11, 768, '3', 2.375, 10, 1, '2017-09-13 07:02:26'),
(29, 2406, '1', -2.17911, 13, 0, '2017-09-13 07:02:27'),
(5, 2455, '2', -2.1, 30, 0, '2017-09-13 07:02:27'),
(15, 738, '2', 1.5, 17, 1, '2017-09-13 07:02:28'),
(29, 1112, '4', 1.47, 6, 1, '2017-09-13 07:02:33'),
(30, 1665, '3', -1.48915, 13, 0, '2017-09-13 07:02:36'),
(11, 777, '2', 2.28261, 11, 1, '2017-09-13 07:02:36'),
(15, 502, '2', 2.41304, 9, 1, '2017-09-13 07:02:37'),
(24, 1209, '2', 0.0108, 47, 1, '2017-09-13 07:02:37'),
(25, 2653, '4', 2.32597, 33, 1, '2017-09-13 07:02:39'),
(29, 386, '2', -1.08, 8, 0, '2017-09-13 07:02:41'),
(5, 1147, '3', -0.75, 15, 0, '2017-09-13 07:02:42'),
(11, 765, '3', -2.25, 10, 0, '2017-09-13 07:02:46'),
(24, 1176, '3', -1.2398, 10, 0, '2017-09-13 07:02:47'),
(15, 756, '2', 2.125, 14, 1, '2017-09-13 07:02:51'),
(30, 1714, '3', 1.09903, 15, 1, '2017-09-13 07:02:51'),
(25, 2662, '4', 2.72265, 13, 1, '2017-09-13 07:02:52'),
(18, 752, '4', -0.978261, 31, 0, '2017-09-13 07:02:53'),
(15, 478, '2', -2.64, 6, 0, '2017-09-13 07:02:56'),
(11, 470, '4', 2.175, 11, 1, '2017-09-13 07:02:58'),
(29, 369, '2', 0.0675, 17, 1, '2017-09-13 07:02:58'),
(5, 1141, '2', -0.3, 18, 0, '2017-09-13 07:03:01'),
(18, 734, '2', 1.47, 9, 1, '2017-09-13 07:03:02'),
(25, 1161, '1', -1.88988, 10, 0, '2017-09-13 07:03:03'),
(30, 1643, '1', -0.869823, 12, 0, '2017-09-13 07:03:03'),
(15, 480, '2', 2.475, 7, 1, '2017-09-13 07:03:04'),
(29, 2416, '3', 2.54171, 7, 1, '2017-09-13 07:03:05'),
(1, 1299, '2', -0.000688705, 65, 0, '2017-09-13 07:03:08'),
(5, 2439, '1', 2.76, 8, 1, '2017-09-13 07:03:08'),
(11, 759, '1', -2.21739, 12, 0, '2017-09-13 07:03:10'),
(29, 1121, '2', -1.6875, 5, 0, '2017-09-13 07:03:10'),
(30, 1662, '1', 1.38138, 9, 1, '2017-09-13 07:03:13'),
(24, 1229, '3', -0.806584, 26, 0, '2017-09-13 07:03:13'),
(1, 1187, '1', -2.13574, 5, 0, '2017-09-13 07:03:13'),
(29, 1110, '2', 1.92, 4, 1, '2017-09-13 07:03:14'),
(30, 1666, '2', 2.35692, 5, 1, '2017-09-13 07:03:17'),
(30, 1646, '2', 1.60207, 7, 1, '2017-09-13 07:03:24'),
(24, 1187, '1', -1.17188, 12, 0, '2017-09-13 07:03:25'),
(5, 1150, '3', -0.3, 18, 0, '2017-09-13 07:03:27'),
(15, 741, '1', -1.02632, 25, 0, '2017-09-13 07:03:28'),
(18, 742, '1', 0.975, 27, 1, '2017-09-13 07:03:29'),
(29, 391, '1', 0, 20, 0, '2017-09-13 07:03:34'),
(29, 373, '3', -1.47, 6, 0, '2017-09-13 07:03:40'),
(11, 763, '4', -0.913043, 32, 0, '2017-09-13 07:03:42'),
(30, 1676, '3', -1.1532, 19, 0, '2017-09-13 07:03:44'),
(11, 493, '1', 2.5, 5, 1, '2017-09-13 07:03:47'),
(5, 2444, '3', 2.34, 22, 1, '2017-09-13 07:03:49'),
(25, 2643, '2', -2.10392, 52, 0, '2017-09-13 07:03:55'),
(11, 762, '3', 2.325, 9, 1, '2017-09-13 07:03:56'),
(29, 363, '3', 0.0675, 17, 1, '2017-09-13 07:03:57'),
(30, 1663, '1', 0.75, 15, 1, '2017-09-13 07:03:59'),
(15, 750, '1', -0.652174, 36, 0, '2017-09-13 07:04:05'),
(18, 750, '1', -0.717391, 35, 0, '2017-09-13 07:04:05'),
(25, 2648, '3', -2.80721, 11, 0, '2017-09-13 07:04:06'),
(30, 1706, '0', 0, 9, -1, '2017-09-13 07:04:08'),
(1, 1264, '4', 0.0833333, 55, 1, '2017-09-13 07:04:09'),
(5, 1155, '0', -0.15, 20, 0, '2017-09-13 07:04:10'),
(18, 747, '2', 2.25, 9, 1, '2017-09-13 07:04:14'),
(15, 755, '1', 2.4375, 9, 1, '2017-09-13 07:04:14'),
(30, 1675, '4', 2.37037, 6, 1, '2017-09-13 07:04:14'),
(24, 1206, '3', -0.100833, 49, 0, '2017-09-13 07:04:15'),
(29, 387, '0', -0.0075, 20, 0, '2017-09-13 07:04:17'),
(11, 771, '2', -1.56522, 22, 0, '2017-09-13 07:04:18'),
(5, 2434, '1', 2.7, 11, 1, '2017-09-13 07:04:20'),
(25, 1156, '1', 0.75, 15, 1, '2017-09-13 07:04:21'),
(15, 491, '1', -2.56259, 8, 0, '2017-09-13 07:04:21'),
(30, 1717, '3', -1.47, 12, 0, '2017-09-13 07:04:26'),
(29, 380, '3', -0.75, 10, 0, '2017-09-13 07:04:27'),
(1, 1298, '1', 1.47, 18, 1, '2017-09-13 07:04:27'),
(25, 1163, '1', 2.36512, 6, 1, '2017-09-13 07:04:27'),
(11, 776, '4', -2.34783, 10, 0, '2017-09-13 07:04:28'),
(11, 766, '1', 2.57143, 6, 1, '2017-09-13 07:04:34'),
(30, 1721, '2', 1.6875, 11, 1, '2017-09-13 07:04:37'),
(29, 374, '4', 0.75, 10, 1, '2017-09-13 07:04:37'),
(5, 2449, '2', -2.34, 22, 0, '2017-09-13 07:04:42'),
(24, 173, '1', -1.5123, 29, 0, '2017-09-13 07:04:44'),
(30, 1719, '1', 1.6875, 10, 1, '2017-09-13 07:04:47'),
(11, 772, '3', 2.1875, 13, 1, '2017-09-13 07:04:48'),
(29, 396, '1', -0.27, 14, 0, '2017-09-13 07:04:51'),
(18, 748, '1', -0.15, 38, 0, '2017-09-13 07:04:52'),
(30, 1720, '3', 2.325, 9, 1, '2017-09-13 07:04:56'),
(29, 379, '1', -1.47, 6, 0, '2017-09-13 07:04:57'),
(11, 500, '2', 2.025, 13, 1, '2017-09-13 07:05:01'),
(15, 757, '1', -0.26087, 42, 0, '2017-09-13 07:05:03'),
(30, 1648, '4', 1.96154, 9, 1, '2017-09-13 07:05:05'),
(15, 482, '2', -2.64286, 5, 0, '2017-09-13 07:05:08'),
(1, 1229, '1', -0.124486, 43, 0, '2017-09-13 07:05:11'),
(11, 496, '2', -2.27205, 15, 0, '2017-09-13 07:05:16'),
(29, 2413, '3', -1.88882, 19, 0, '2017-09-13 07:05:16'),
(11, 788, '1', 2.78571, 3, 1, '2017-09-13 07:05:19'),
(30, 1653, '3', 1.39286, 15, 1, '2017-09-13 07:05:20'),
(1, 1283, '4', 0.333333, 16, 1, '2017-09-13 07:05:27'),
(11, 778, '3', 2.61218, 9, 1, '2017-09-13 07:05:28'),
(15, 752, '2', -1.69565, 20, 0, '2017-09-13 07:05:29'),
(24, 1204, '1', 0, 48, 0, '2017-09-13 07:05:31'),
(18, 474, '1', 0.075, 39, 1, '2017-09-13 07:05:32'),
(24, 1188, '1', 2.02423, 5, 1, '2017-09-13 07:05:37'),
(30, 1642, '1', -1.4, 16, 0, '2017-09-13 07:05:37'),
(1, 1295, '4', 0.00520833, 23, 1, '2017-09-13 07:05:50'),
(11, 785, '1', 1.88988, 23, 1, '2017-09-13 07:05:51'),
(30, 1650, '4', -1.26923, 15, 0, '2017-09-13 07:05:52'),
(25, 2664, '3', -1.457, 86, 0, '2017-09-13 07:05:54'),
(24, 1283, '4', 0.130208, 19, 1, '2017-09-13 07:05:55'),
(30, 1785, '2', -2.59615, 7, 0, '2017-09-13 07:05:59'),
(29, 2411, '1', -1.11298, 43, 0, '2017-09-13 07:05:59'),
(11, 469, '3', -2.53722, 8, 0, '2017-09-13 07:05:59'),
(15, 749, '3', -0.8125, 35, 0, '2017-09-13 07:06:04'),
(25, 1164, '3', 1.88988, 10, 1, '2017-09-13 07:06:04'),
(18, 479, '1', -0.847826, 33, 0, '2017-09-13 07:06:05'),
(15, 746, '1', -2.66667, 4, 0, '2017-09-13 07:06:07'),
(5, 2435, '4', -1.03846, 85, 0, '2017-09-13 07:06:09');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(25, 1159, '1', 2.25111, 7, 1, '2017-09-13 07:06:11'),
(25, 2636, '1', -2.93513, 4, 0, '2017-09-13 07:06:15'),
(15, 736, '2', -1.75433, 8, 0, '2017-09-13 07:06:16'),
(11, 791, '4', -2.07443, 17, 0, '2017-09-13 07:06:17'),
(29, 381, '0', -0.0075, 20, 0, '2017-09-13 07:06:19'),
(15, 481, '1', 2.1675, 6, 1, '2017-09-13 07:06:22'),
(5, 1157, '2', -0.75, 15, 0, '2017-09-13 07:06:24'),
(30, 1759, '2', -1.29545, 25, 0, '2017-09-13 07:06:24'),
(25, 1160, '1', -2.01386, 9, 0, '2017-09-13 07:06:25'),
(18, 756, '2', 1.625, 22, 1, '2017-09-13 07:06:28'),
(15, 730, '1', -1.44676, 11, 0, '2017-09-13 07:06:33'),
(24, 1289, '0', -0.001875, 40, 0, '2017-09-13 07:06:35'),
(29, 401, '3', -0.0675, 17, 0, '2017-09-13 07:06:36'),
(5, 1149, '3', -0.9, 14, 0, '2017-09-13 07:06:37'),
(15, 485, '2', -2.38327, 5, 0, '2017-09-13 07:06:38'),
(30, 1760, '4', -1.3032, 15, 0, '2017-09-13 07:06:39'),
(11, 521, '3', -1.59835, 22, 0, '2017-09-13 07:06:39'),
(29, 400, '1', -1.2675, 7, 0, '2017-09-13 07:06:43'),
(18, 478, '2', -2.04, 16, 0, '2017-09-13 07:06:44'),
(1, 173, '3', -0.5808, 56, 0, '2017-09-13 07:06:47'),
(18, 754, '4', 2.5, 7, 1, '2017-09-13 07:06:51'),
(24, 1285, '4', -0.563333, 17, 0, '2017-09-13 07:06:52'),
(15, 487, '4', 0.9075, 18, 1, '2017-09-13 07:06:55'),
(30, 1739, '1', 1.2513, 17, 1, '2017-09-13 07:06:56'),
(18, 746, '4', 2.5, 6, 1, '2017-09-13 07:06:57'),
(1, 1275, '2', -1.90226, 11, 0, '2017-09-13 07:06:58'),
(25, 2657, '4', -2.39995, 33, 0, '2017-09-13 07:06:58'),
(15, 722, '3', 2.52083, 3, 1, '2017-09-13 07:06:59'),
(29, 385, '3', 0, 20, 0, '2017-09-13 07:07:03'),
(29, 376, '0', -0.0075, 20, 0, '2017-09-13 07:07:03'),
(30, 1735, '4', -1.92, 8, 0, '2017-09-13 07:07:04'),
(11, 522, '4', -1.19055, 27, 0, '2017-09-13 07:07:06'),
(25, 2439, '1', 2.76, 8, 1, '2017-09-13 07:07:07'),
(24, 1247, '4', -1.79132, 15, 0, '2017-09-13 07:07:07'),
(29, 375, '1', 1.6875, 5, 1, '2017-09-13 07:07:08'),
(24, 1266, '4', -2.61333, 4, 0, '2017-09-13 07:07:11'),
(25, 2659, '4', 2.81719, 9, 1, '2017-09-13 07:07:15'),
(29, 370, '4', -1.2675, 7, 0, '2017-09-13 07:07:16'),
(15, 509, '3', -0.668981, 19, 0, '2017-09-13 07:07:18'),
(30, 1756, '3', -1.41797, 15, 0, '2017-09-13 07:07:19'),
(5, 2440, '4', 1.85455, 42, 1, '2017-09-13 07:07:20'),
(25, 1162, '3', 2.01386, 9, 1, '2017-09-13 07:07:25'),
(15, 465, '3', -0.75, 15, 0, '2017-09-13 07:07:32'),
(11, 789, '4', -1.375, 26, 0, '2017-09-13 07:07:32'),
(25, 1167, '1', -1.88988, 10, 0, '2017-09-13 07:07:35'),
(24, 1278, '4', -1.14083, 23, 0, '2017-09-13 07:07:35'),
(29, 388, '4', 0, 20, 0, '2017-09-13 07:07:35'),
(30, 1766, '3', 1.12965, 17, 1, '2017-09-13 07:07:37'),
(15, 729, '3', -2.22454, 5, 0, '2017-09-13 07:07:37'),
(5, 2445, '2', -2.51538, 21, 0, '2017-09-13 07:07:41'),
(15, 464, '3', 1.9571, 5, 1, '2017-09-13 07:07:43'),
(18, 757, '3', 0, 46, 0, '2017-09-13 07:07:43'),
(30, 1790, '1', -1.77515, 12, 0, '2017-09-13 07:07:49'),
(11, 793, '2', -1.575, 19, 0, '2017-09-13 07:07:51'),
(15, 490, '2', 1.6875, 9, 1, '2017-09-13 07:07:52'),
(15, 732, '2', -1.81481, 8, 0, '2017-09-13 07:07:59'),
(18, 744, '2', -1.65, 18, 0, '2017-09-13 07:08:01'),
(15, 723, '1', 2.22454, 5, 1, '2017-09-13 07:08:05'),
(11, 468, '4', -0.6, 24, 0, '2017-09-13 07:08:16'),
(15, 721, '1', 0.676875, 21, 1, '2017-09-13 07:08:25'),
(11, 795, '4', -2.34783, 10, 0, '2017-09-13 07:08:26'),
(15, 743, '2', -2.66667, 4, 0, '2017-09-13 07:08:30'),
(29, 2410, '1', -0.309949, 57, 0, '2017-09-13 07:08:32'),
(11, 495, '3', 2.36842, 8, 1, '2017-09-13 07:08:34'),
(11, 794, '3', 2.72727, 4, 1, '2017-09-13 07:08:38'),
(18, 483, '2', 0.521739, 38, 1, '2017-09-13 07:08:40'),
(29, 402, '3', 0.6075, 11, 1, '2017-09-13 07:08:43'),
(30, 1734, '3', -0.0440771, 58, 0, '2017-09-13 07:08:48'),
(11, 787, '4', 2.28571, 10, 1, '2017-09-13 07:08:49'),
(18, 502, '1', -2.02174, 15, 0, '2017-09-13 07:08:55'),
(30, 1742, '0', 0, 10, -1, '2017-09-13 07:08:58'),
(29, 2427, '3', -2.12521, 19, 0, '2017-09-13 07:09:02'),
(15, 475, '2', -0.17155, 35, 0, '2017-09-13 07:09:05'),
(15, 479, '3', -2.15643, 7, 0, '2017-09-13 07:09:12'),
(29, 384, '1', 0.48, 12, 1, '2017-09-13 07:09:14'),
(11, 497, '1', -1.66387, 27, 0, '2017-09-13 07:09:15'),
(30, 1788, '1', -0.541875, 23, 0, '2017-09-13 07:09:21'),
(30, 1786, '1', -2.14793, 8, 0, '2017-09-13 07:09:29'),
(15, 476, '1', -0.826875, 19, 0, '2017-09-13 07:09:31'),
(11, 780, '2', 1.875, 15, 1, '2017-09-13 07:09:31'),
(18, 743, '0', -0.0833333, 36, 0, '2017-09-13 07:09:31'),
(29, 1136, '1', 0, 20, 0, '2017-09-13 07:09:34'),
(30, 1775, '4', -1.47, 9, 0, '2017-09-13 07:09:38'),
(29, 382, '4', 0.9075, 9, 1, '2017-09-13 07:09:43'),
(11, 786, '4', -2.27414, 17, 0, '2017-09-13 07:09:48'),
(30, 1743, '3', 1.27599, 16, 1, '2017-09-13 07:09:54'),
(29, 392, '4', -0.12, 16, 0, '2017-09-13 07:10:00'),
(15, 754, '1', -0.205782, 31, 0, '2017-09-13 07:10:02'),
(18, 482, '4', 0.785714, 31, 1, '2017-09-13 07:10:02'),
(30, 1770, '3', -1.33333, 18, 0, '2017-09-13 07:10:12'),
(15, 751, '2', 1.58678, 12, 1, '2017-09-13 07:10:13'),
(29, 2431, '2', -2.04726, 16, 0, '2017-09-13 07:10:15'),
(18, 476, '2', -1.95, 14, 0, '2017-09-13 07:10:17'),
(11, 779, '1', -1.1087, 29, 0, '2017-09-13 07:10:17'),
(29, 2418, '2', 2.77922, 3, 1, '2017-09-13 07:10:18'),
(18, 740, '1', 2.75, 3, 1, '2017-09-13 07:10:20'),
(30, 1778, '3', -1.6875, 12, 0, '2017-09-13 07:10:24'),
(11, 783, '4', -2.54348, 7, 0, '2017-09-13 07:10:25'),
(29, 2414, '4', -2.54171, 7, 0, '2017-09-13 07:10:25'),
(29, 393, '2', -1.2675, 7, 0, '2017-09-13 07:10:32'),
(25, 1457, '4', 2.29688, 5, 1, '2017-09-13 07:10:37'),
(30, 1748, '1', 1.54395, 13, 1, '2017-09-13 07:10:38'),
(11, 796, '3', -2.04545, 14, 0, '2017-09-13 07:10:39'),
(30, 1746, '1', 2.00826, 8, 1, '2017-09-13 07:10:46'),
(11, 797, '1', 2.47826, 8, 1, '2017-09-13 07:10:47'),
(11, 792, '3', -2.35714, 9, 0, '2017-09-13 07:10:55'),
(15, 477, '0', -0.00141777, 46, 0, '2017-09-13 07:10:59'),
(25, 3051, '0', -0.00443787, 26, 0, '2017-09-13 07:11:04'),
(18, 755, '2', -0.25, 44, 0, '2017-09-13 07:11:05'),
(15, 499, '1', 2.12742, 6, 1, '2017-09-13 07:11:05'),
(25, 3004, '2', -2.43, 3, 0, '2017-09-13 07:11:08'),
(30, 1751, '3', -1.04177, 23, 0, '2017-09-13 07:11:09'),
(25, 1452, '2', 2.1675, 6, 1, '2017-09-13 07:11:14'),
(11, 781, '1', 1.6875, 21, 1, '2017-09-13 07:11:17'),
(25, 3035, '2', 1.85204, 6, 1, '2017-09-13 07:11:20'),
(30, 1750, '1', 1.57687, 11, 1, '2017-09-13 07:11:20'),
(5, 725, '4', 1.25606, 12, 1, '2017-09-13 07:11:20'),
(18, 477, '1', -1.17391, 28, 0, '2017-09-13 07:11:33'),
(15, 739, '3', -0.148148, 28, 0, '2017-09-13 07:11:33'),
(30, 1768, '4', -1.40844, 17, 0, '2017-09-13 07:11:37'),
(5, 489, '1', 0.9075, 18, 1, '2017-09-13 07:11:39'),
(15, 474, '1', 1.92, 8, 1, '2017-09-13 07:11:42'),
(25, 1463, '2', 0.683368, 23, 1, '2017-09-13 07:11:43'),
(18, 475, '1', -1.8913, 17, 0, '2017-09-13 07:11:50'),
(15, 753, '1', -1.7415, 10, 0, '2017-09-13 07:11:51'),
(11, 790, '0', -0.075, 40, 0, '2017-09-13 07:11:58'),
(15, 740, '1', 1.94676, 7, 1, '2017-09-13 07:11:58'),
(18, 499, '2', -2.13158, 11, 0, '2017-09-13 07:12:01'),
(15, 763, '0', 0, 5, -1, '2017-09-13 07:12:04'),
(18, 723, '1', 2.52083, 3, 1, '2017-09-13 07:12:04'),
(5, 509, '2', -0.231481, 26, 0, '2017-09-13 07:12:05'),
(30, 1723, '4', 0.520833, 28, 1, '2017-09-13 07:12:05'),
(25, 1454, '2', 0.333333, 24, 1, '2017-09-13 07:12:07'),
(11, 784, '4', 1.92857, 15, 1, '2017-09-13 07:12:14'),
(11, 501, '4', 2.67391, 5, 1, '2017-09-13 07:12:19'),
(25, 1453, '1', 1.2288, 18, 1, '2017-09-13 07:12:25'),
(18, 739, '1', 1.08333, 23, 1, '2017-09-13 07:12:28'),
(30, 1754, '2', -0.865226, 25, 0, '2017-09-13 07:12:31'),
(25, 1455, '1', 1.6875, 10, 1, '2017-09-13 07:12:36'),
(18, 751, '2', 2.38636, 9, 1, '2017-09-13 07:12:37'),
(5, 737, '2', -0.091875, 33, 0, '2017-09-13 07:12:38'),
(11, 473, '3', 1, 20, 1, '2017-09-13 07:12:38'),
(15, 767, '1', 0.8125, 35, 1, '2017-09-13 07:12:39'),
(11, 782, '4', -2.8125, 3, 0, '2017-09-13 07:12:42'),
(25, 1462, '1', 1.92, 8, 1, '2017-09-13 07:12:43'),
(30, 1724, '4', 1.54395, 13, 1, '2017-09-13 07:12:44'),
(5, 720, '4', 1.99654, 7, 1, '2017-09-13 07:12:45'),
(18, 753, '1', -2.21429, 11, 0, '2017-09-13 07:12:48'),
(25, 1451, '1', 1.94676, 7, 1, '2017-09-13 07:12:51'),
(30, 1784, '4', 1.2675, 7, 1, '2017-09-13 07:12:51'),
(11, 798, '3', -2.31818, 10, 0, '2017-09-13 07:12:51'),
(11, 805, '2', 2.82, 3, 1, '2017-09-13 07:12:55'),
(25, 1488, '0', 0, 5, -1, '2017-09-13 07:12:56'),
(30, 1740, '3', 2.35692, 5, 1, '2017-09-13 07:12:56'),
(15, 493, '1', 1.2, 18, 1, '2017-09-13 07:12:56'),
(25, 1481, '0', 0, 5, -1, '2017-09-13 07:13:01'),
(5, 719, '3', 0.520833, 21, 1, '2017-09-13 07:13:06'),
(30, 1792, '1', -1.6875, 11, 0, '2017-09-13 07:13:07'),
(15, 774, '1', 2, 16, 1, '2017-09-13 07:13:13'),
(30, 1761, '3', 1.79132, 10, 1, '2017-09-13 07:13:17'),
(25, 1468, '2', 1.5, 20, 1, '2017-09-13 07:13:21'),
(15, 484, '1', 2.28261, 11, 1, '2017-09-13 07:13:24'),
(18, 749, '2', 0.75, 36, 1, '2017-09-13 07:13:25'),
(25, 1484, '0', 0, 4, -1, '2017-09-13 07:13:25'),
(30, 1783, '2', -1.3032, 15, 0, '2017-09-13 07:13:33'),
(18, 480, '1', -1.875, 15, 0, '2017-09-13 07:13:39'),
(5, 732, '1', -0.00925926, 34, 0, '2017-09-13 07:13:40'),
(30, 1774, '3', -1.6875, 10, 0, '2017-09-13 07:13:42'),
(18, 738, '2', 2.20588, 9, 1, '2017-09-13 07:13:48'),
(15, 771, '2', -1.23913, 27, 0, '2017-09-13 07:13:51'),
(18, 741, '4', -1.97368, 13, 0, '2017-09-13 07:14:02'),
(25, 1479, '1', -0.477273, 37, 0, '2017-09-13 07:14:02'),
(30, 1789, '2', 0.816635, 22, 1, '2017-09-13 07:14:05'),
(15, 775, '2', -1.95652, 16, 0, '2017-09-13 07:14:06'),
(5, 472, '1', 0.151875, 31, 1, '2017-09-13 07:14:12'),
(30, 1776, '4', -1.51454, 11, 0, '2017-09-13 07:14:16'),
(30, 1744, '2', 2.37964, 7, 1, '2017-09-13 07:14:23'),
(5, 730, '1', -1.33333, 12, 0, '2017-09-13 07:14:24'),
(15, 488, '3', 1.58333, 17, 1, '2017-09-13 07:14:24'),
(18, 745, '2', 0.375, 35, 1, '2017-09-13 07:14:37'),
(30, 1726, '2', -1.5552, 14, 0, '2017-09-13 07:14:38'),
(18, 488, '3', 2.58333, 5, 1, '2017-09-13 07:14:42'),
(30, 1728, '4', -1.86981, 8, 0, '2017-09-13 07:14:45'),
(25, 1487, '0', -0.0652174, 46, 0, '2017-09-13 07:14:49'),
(15, 772, '2', -1.4375, 25, 0, '2017-09-13 07:14:49'),
(5, 466, '2', -0.0533333, 26, 0, '2017-09-13 07:14:51'),
(30, 1762, '1', -1.6875, 10, 0, '2017-09-13 07:14:55'),
(18, 764, '4', -1.41667, 19, 0, '2017-09-13 07:15:01'),
(5, 735, '4', 1.20333, 11, 1, '2017-09-13 07:15:01'),
(30, 1757, '1', 2.15643, 7, 1, '2017-09-13 07:15:03'),
(15, 769, '3', -1.97727, 15, 0, '2017-09-13 07:15:04'),
(18, 766, '1', 2.42857, 8, 1, '2017-09-13 07:15:09'),
(30, 1731, '2', -2.00826, 8, 0, '2017-09-13 07:15:11'),
(5, 729, '1', -1.33333, 12, 0, '2017-09-13 07:15:14'),
(5, 722, '3', 2.22454, 5, 1, '2017-09-13 07:15:19'),
(18, 471, '2', 1.9, 11, 1, '2017-09-13 07:15:21'),
(30, 1773, '3', -1.77515, 12, 0, '2017-09-13 07:15:22'),
(15, 471, '2', 0.9, 21, 1, '2017-09-13 07:15:24'),
(30, 1732, '3', 1.85204, 12, 1, '2017-09-13 07:15:35'),
(25, 1475, '0', -0.0652174, 46, 0, '2017-09-13 07:15:35'),
(15, 765, '2', 2.1, 12, 1, '2017-09-13 07:15:37'),
(18, 768, '3', 1.875, 18, 1, '2017-09-13 07:15:39'),
(5, 736, '1', 0.16609, 26, 1, '2017-09-13 07:15:45'),
(15, 777, '2', 2.28261, 11, 1, '2017-09-13 07:15:48'),
(30, 1753, '1', -1.3032, 15, 0, '2017-09-13 07:15:50'),
(15, 758, '3', -2.36842, 8, 0, '2017-09-13 07:15:55'),
(25, 3000, '0', -0.125, 24, 0, '2017-09-13 07:16:00'),
(18, 767, '3', -2.04426, 21, 0, '2017-09-13 07:16:00'),
(30, 1782, '2', -1.57687, 11, 0, '2017-09-13 07:16:01'),
(18, 777, '2', 2.34783, 10, 1, '2017-09-13 07:16:10'),
(15, 470, '4', 1.875, 15, 1, '2017-09-13 07:16:10'),
(11, 1458, '1', -0.925926, 16, 0, '2017-09-13 07:16:17'),
(30, 1767, '4', 0.949219, 21, 1, '2017-09-13 07:16:22'),
(11, 1457, '4', 1.92, 8, 1, '2017-09-13 07:16:24'),
(5, 733, '0', -0.001875, 40, 0, '2017-09-13 07:16:26'),
(11, 1459, '3', -2.04187, 7, 0, '2017-09-13 07:16:32'),
(18, 760, '0', 0, 24, -1, '2017-09-13 07:16:34'),
(25, 1477, '1', -0.944444, 37, 0, '2017-09-13 07:16:38'),
(15, 773, '4', -1.17391, 28, 0, '2017-09-13 07:16:39'),
(11, 1452, '2', 1.6875, 10, 1, '2017-09-13 07:16:41'),
(25, 1470, '1', 2.52, 8, 1, '2017-09-13 07:16:46'),
(5, 487, '1', -0.75, 20, 0, '2017-09-13 07:16:46'),
(15, 776, '4', -2.21739, 12, 0, '2017-09-13 07:16:51'),
(11, 3051, '3', 0.536982, 15, 1, '2017-09-13 07:16:57'),
(11, 1449, '1', -2.29688, 5, 0, '2017-09-13 07:17:01'),
(30, 1765, '0', -0.00170068, 42, 0, '2017-09-13 07:17:04'),
(18, 763, '2', 1.22481, 34, 1, '2017-09-13 07:17:08'),
(5, 498, '1', -0.48, 24, 0, '2017-09-13 07:17:10'),
(11, 1467, '3', 1.92, 12, 1, '2017-09-13 07:17:13'),
(30, 1738, '1', 1.85204, 9, 1, '2017-09-13 07:17:14'),
(18, 492, '1', -2.69195, 6, 0, '2017-09-13 07:17:15'),
(11, 1454, '2', 1.81481, 8, 1, '2017-09-13 07:17:22'),
(5, 721, '1', 1.17188, 15, 1, '2017-09-13 07:17:25'),
(25, 1478, '0', -0.075, 40, 0, '2017-09-13 07:17:26'),
(18, 759, '4', -2.21739, 12, 0, '2017-09-13 07:17:27'),
(30, 1752, '3', -1.47, 15, 0, '2017-09-13 07:17:29'),
(11, 2929, '4', 1.50521, 7, 1, '2017-09-13 07:17:29'),
(15, 761, '1', -0.456522, 39, 0, '2017-09-13 07:17:30'),
(11, 1464, '2', 2.08333, 8, 1, '2017-09-13 07:17:37'),
(30, 1771, '2', -2.04726, 8, 0, '2017-09-13 07:17:37'),
(15, 770, '1', -2.25, 12, 0, '2017-09-13 07:17:42'),
(18, 769, '1', 1.70455, 19, 1, '2017-09-13 07:17:46'),
(11, 3035, '2', 0.979592, 12, 1, '2017-09-13 07:17:49'),
(15, 759, '1', -2.47826, 8, 0, '2017-09-13 07:17:50'),
(18, 761, '3', 2.6087, 6, 1, '2017-09-13 07:17:52'),
(5, 731, '2', 0.0578704, 31, 1, '2017-09-13 07:17:56'),
(15, 764, '1', -1.6875, 9, 0, '2017-09-13 07:17:59'),
(5, 718, '1', 1.61333, 8, 1, '2017-09-13 07:18:04'),
(11, 1466, '2', 1.47, 15, 1, '2017-09-13 07:18:04'),
(25, 1483, '0', -0.0789474, 38, 0, '2017-09-13 07:18:05'),
(15, 768, '3', 2.1888, 7, 1, '2017-09-13 07:18:05'),
(30, 1736, '1', -0.646684, 30, 0, '2017-09-13 07:18:08'),
(25, 1469, '2', 2.625, 5, 1, '2017-09-13 07:18:10'),
(15, 762, '1', -2.1675, 6, 0, '2017-09-13 07:18:12'),
(18, 771, '2', -2.05084, 20, 0, '2017-09-13 07:18:12'),
(11, 1456, '1', 1.80187, 9, 1, '2017-09-13 07:18:13'),
(5, 464, '1', -1.13609, 10, 0, '2017-09-13 07:18:14'),
(30, 1725, '1', 2.08333, 8, 1, '2017-09-13 07:18:15'),
(30, 1749, '1', 2.63672, 3, 1, '2017-09-13 07:18:19'),
(18, 776, '0', 0, 8, -1, '2017-09-13 07:18:20'),
(15, 766, '1', 0.89966, 19, 1, '2017-09-13 07:18:31'),
(11, 1478, '1', -1.65, 18, 0, '2017-09-13 07:18:32'),
(5, 734, '2', 0.48, 18, 1, '2017-09-13 07:18:33'),
(18, 493, '1', 0.8, 22, 1, '2017-09-13 07:18:42'),
(11, 1455, '1', 1.36688, 13, 1, '2017-09-13 07:18:44'),
(18, 484, '1', 2.86957, 2, 1, '2017-09-13 07:18:45'),
(15, 760, '3', -0.676875, 21, 0, '2017-09-13 07:18:51'),
(25, 1485, '4', 0.461538, 44, 1, '2017-09-13 07:18:54'),
(5, 490, '2', 0.333333, 24, 1, '2017-09-13 07:18:57'),
(15, 492, '1', -2.1675, 6, 0, '2017-09-13 07:18:57'),
(11, 1468, '3', -2.025, 13, 0, '2017-09-13 07:18:58'),
(11, 3044, '3', 2.29688, 3, 1, '2017-09-13 07:19:01'),
(18, 775, '2', -2.25613, 16, 0, '2017-09-13 07:19:01'),
(5, 727, '2', 1.56481, 10, 1, '2017-09-13 07:19:06'),
(11, 1482, '2', -2.38636, 9, 0, '2017-09-13 07:19:10'),
(18, 774, '1', 2.5221, 11, 1, '2017-09-13 07:19:12'),
(15, 469, '4', -1.02083, 15, 0, '2017-09-13 07:19:13'),
(11, 3039, '1', 0.869823, 12, 1, '2017-09-13 07:19:22'),
(18, 770, '1', -2.5221, 11, 0, '2017-09-13 07:19:23'),
(11, 3004, '3', 1.76333, 7, 1, '2017-09-13 07:19:29'),
(25, 1480, '3', -0.5, 35, 0, '2017-09-13 07:19:30'),
(15, 785, '4', -1.03355, 19, 0, '2017-09-13 07:19:31'),
(5, 465, '0', -0.00333333, 30, 0, '2017-09-13 07:19:37'),
(15, 784, '4', 1.85204, 9, 1, '2017-09-13 07:19:40'),
(25, 3002, '1', 1.26923, 15, 1, '2017-09-13 07:19:45'),
(11, 1477, '3', 2.05556, 17, 1, '2017-09-13 07:19:47'),
(11, 3000, '3', 2.125, 7, 1, '2017-09-13 07:19:54'),
(5, 481, '1', 0.826875, 19, 1, '2017-09-13 07:19:57'),
(11, 1480, '3', -2.35714, 9, 0, '2017-09-13 07:20:03'),
(18, 773, '2', -0.486068, 43, 0, '2017-09-13 07:20:06'),
(25, 1471, '1', -1.85, 23, 0, '2017-09-13 07:20:08'),
(11, 1491, '1', -2.42857, 8, 0, '2017-09-13 07:20:10'),
(5, 485, '1', 1.4518, 14, 1, '2017-09-13 07:20:10'),
(25, 1472, '4', -2.625, 5, 0, '2017-09-13 07:20:13'),
(11, 1486, '3', -2.65909, 5, 0, '2017-09-13 07:20:16'),
(5, 743, '1', -2.5, 6, 0, '2017-09-13 07:20:16'),
(5, 723, '1', 2.37037, 4, 1, '2017-09-13 07:20:20'),
(25, 1486, '4', -2.52273, 7, 0, '2017-09-13 07:20:20'),
(15, 794, '4', -0.0247934, 40, 0, '2017-09-13 07:20:20'),
(18, 765, '2', 2.19301, 15, 1, '2017-09-13 07:20:21'),
(11, 1463, '1', -2.2376, 6, 0, '2017-09-13 07:20:22'),
(11, 1465, '2', -1.38138, 9, 0, '2017-09-13 07:20:31'),
(15, 791, '1', 1.47, 12, 1, '2017-09-13 07:20:32'),
(15, 782, '2', 2.1888, 7, 1, '2017-09-13 07:20:39'),
(11, 1462, '3', -1.80187, 9, 0, '2017-09-13 07:20:40'),
(15, 787, '3', -2.20408, 6, 0, '2017-09-13 07:20:45'),
(5, 479, '4', 1.30435, 26, 1, '2017-09-13 07:20:47'),
(11, 1461, '3', 2.15643, 7, 1, '2017-09-13 07:20:47'),
(18, 762, '1', -1.41811, 27, 0, '2017-09-13 07:20:49'),
(25, 1476, '3', 1.15385, 32, 1, '2017-09-13 07:20:52'),
(18, 470, '1', -2.63891, 7, 0, '2017-09-13 07:20:57'),
(5, 482, '3', -2.07143, 13, 0, '2017-09-13 07:20:59'),
(11, 1450, '4', 0.835648, 17, 1, '2017-09-13 07:21:04'),
(18, 491, '1', -1.89474, 14, 0, '2017-09-13 07:21:11'),
(25, 1473, '1', 1.86, 19, 1, '2017-09-13 07:21:11'),
(18, 758, '1', -2.36842, 8, 0, '2017-09-13 07:21:18'),
(25, 1482, '2', -2.38636, 9, 0, '2017-09-13 07:21:20'),
(11, 1460, '1', 0.816635, 22, 1, '2017-09-13 07:21:26'),
(25, 1491, '1', -2.57143, 6, 0, '2017-09-13 07:21:27'),
(5, 726, '1', 0.0934256, 28, 1, '2017-09-13 07:21:28'),
(25, 1456, '1', 2.04187, 7, 1, '2017-09-13 07:21:35'),
(11, 1453, '1', 1.92, 10, 1, '2017-09-13 07:21:36'),
(5, 728, '4', -1.29848, 13, 0, '2017-09-13 07:21:41'),
(25, 1474, '1', -2.42857, 8, 0, '2017-09-13 07:21:42'),
(25, 1459, '2', 2.56687, 3, 1, '2017-09-13 07:21:45'),
(11, 1451, '1', 1.22454, 13, 1, '2017-09-13 07:21:50'),
(25, 3008, '1', -2.35714, 6, 0, '2017-09-13 07:21:51'),
(11, 1481, '4', -2.04187, 7, 0, '2017-09-13 07:21:57'),
(25, 3044, '3', 1.50521, 7, 1, '2017-09-13 07:21:58'),
(5, 494, '0', -0.00333333, 30, 0, '2017-09-13 07:22:11'),
(11, 1471, '2', -1.61333, 16, 0, '2017-09-13 07:22:13'),
(25, 2933, '0', -0.125, 24, 0, '2017-09-13 07:22:22'),
(11, 1470, '1', 1.8252, 11, 1, '2017-09-13 07:22:24'),
(5, 724, '2', -0.653333, 16, 0, '2017-09-13 07:22:28'),
(5, 486, '1', 2.08333, 6, 1, '2017-09-13 07:22:34'),
(25, 1450, '2', -1.22454, 13, 0, '2017-09-13 07:22:36'),
(11, 1487, '1', 1.54395, 13, 1, '2017-09-13 07:22:37'),
(11, 1483, '0', 0, 9, -1, '2017-09-13 07:22:46'),
(11, 1474, '2', 1.96599, 8, 1, '2017-09-13 07:22:54'),
(25, 1466, '4', -0.9408, 22, 0, '2017-09-13 07:22:58'),
(5, 751, '2', 0.396694, 28, 1, '2017-09-13 07:23:02'),
(11, 3002, '3', -1.96154, 9, 0, '2017-09-13 07:23:03'),
(25, 1449, '1', -2.29688, 5, 0, '2017-09-13 07:23:03'),
(25, 2929, '4', 2.29688, 3, 1, '2017-09-13 07:23:06'),
(25, 1458, '1', -2.22454, 5, 0, '2017-09-13 07:23:11'),
(11, 2933, '1', -1.33333, 8, 0, '2017-09-13 07:23:11'),
(11, 1484, '2', -2.20408, 6, 0, '2017-09-13 07:23:18'),
(25, 1460, '1', 1.4518, 14, 1, '2017-09-13 07:23:25'),
(5, 476, '2', -0.825, 29, 0, '2017-09-13 07:23:31'),
(25, 3039, '1', 1.60207, 7, 1, '2017-09-13 07:23:32'),
(11, 1473, '2', -1.47, 15, 0, '2017-09-13 07:23:33'),
(25, 1461, '4', -2.38327, 5, 0, '2017-09-13 07:23:37'),
(11, 1472, '4', -2.29688, 5, 0, '2017-09-13 07:23:38'),
(25, 1464, '2', 1.98047, 9, 1, '2017-09-13 07:23:47'),
(11, 1475, '0', 0, 10, -1, '2017-09-13 07:23:47'),
(5, 757, '3', -0.625236, 25, 0, '2017-09-13 07:23:57'),
(11, 1485, '4', 1.3591, 17, 1, '2017-09-13 07:24:05'),
(11, 1488, '0', 0, 7, -1, '2017-09-13 07:24:12'),
(25, 1465, '0', -0.00382653, 28, 0, '2017-09-13 07:24:15'),
(11, 1469, '3', -2.43, 4, 0, '2017-09-13 07:24:16'),
(5, 747, '2', 0.453704, 22, 1, '2017-09-13 07:24:19'),
(11, 1479, '1', -2.47934, 4, 0, '2017-09-13 07:24:21'),
(11, 3008, '1', -2.02423, 5, 0, '2017-09-13 07:24:25'),
(11, 1476, '1', -2.34763, 6, 0, '2017-09-13 07:24:31'),
(5, 499, '1', 1.29848, 13, 1, '2017-09-13 07:24:32'),
(5, 749, '0', 0, 10, -1, '2017-09-13 07:24:42'),
(11, 1494, '1', -1.29848, 13, 0, '2017-09-13 07:24:44'),
(11, 1493, '2', -1.08, 16, 0, '2017-09-13 07:25:01'),
(25, 1467, '3', 0.0133333, 56, 1, '2017-09-13 07:25:12'),
(11, 1505, '1', 1.47, 24, 1, '2017-09-13 07:25:25'),
(5, 755, '0', -0.0625, 48, 0, '2017-09-13 07:25:30'),
(11, 1499, '1', -1.83743, 10, 0, '2017-09-13 07:25:35'),
(11, 1507, '1', 1.9571, 10, 1, '2017-09-13 07:25:45'),
(25, 1496, '0', -0.00154959, 44, 0, '2017-09-13 07:25:56'),
(11, 1489, '2', -1.53061, 12, 0, '2017-09-13 07:25:57'),
(5, 477, '3', -0.717391, 35, 0, '2017-09-13 07:26:06'),
(25, 1497, '2', 1.7415, 10, 1, '2017-09-13 07:26:06'),
(11, 2947, '4', -0.653333, 16, 0, '2017-09-13 07:26:14'),
(5, 754, '4', 1.63435, 11, 1, '2017-09-13 07:26:17'),
(11, 1506, '1', 2.0172, 9, 1, '2017-09-13 07:26:23'),
(5, 740, '1', 2.16667, 10, 1, '2017-09-13 07:26:27'),
(11, 1498, '3', 1.41797, 15, 1, '2017-09-13 07:26:38'),
(25, 1493, '0', -0.001875, 40, 0, '2017-09-13 07:26:47'),
(5, 748, '1', -0.9, 28, 0, '2017-09-13 07:26:55'),
(11, 3076, '3', -0.27, 21, 0, '2017-09-13 07:26:59'),
(25, 1498, '3', 1.02083, 20, 1, '2017-09-13 07:27:07'),
(25, 1495, '3', -2.5, 7, 0, '2017-09-13 07:27:15'),
(11, 1502, '3', -1.11153, 18, 0, '2017-09-13 07:27:17'),
(11, 1496, '1', -1.3032, 15, 0, '2017-09-13 07:27:32'),
(5, 745, '0', -0.075, 40, 0, '2017-09-13 07:27:36'),
(25, 3062, '1', 0.237305, 23, 1, '2017-09-13 07:27:38'),
(5, 741, '0', 0, 8, -1, '2017-09-13 07:27:44'),
(11, 1500, '3', -0.933062, 23, 0, '2017-09-13 07:27:56'),
(11, 1501, '1', -2.47934, 4, 0, '2017-09-13 07:28:00'),
(5, 744, '4', -1.2, 24, 0, '2017-09-13 07:28:08'),
(5, 756, '0', 0, 14, -1, '2017-09-13 07:28:23'),
(25, 1500, '0', -0.00110947, 52, 0, '2017-09-13 07:28:31'),
(25, 3054, '1', -0.27, 21, 0, '2017-09-13 07:28:52'),
(25, 1489, '4', -0.89966, 19, 0, '2017-09-13 07:29:11'),
(25, 1490, '1', 2.35692, 5, 1, '2017-09-13 07:29:16'),
(25, 1505, '1', 1.52297, 23, 1, '2017-09-13 07:29:39'),
(25, 1499, '0', -0.0652174, 46, 0, '2017-09-13 07:30:26'),
(25, 1507, '1', 2.30769, 12, 1, '2017-09-13 07:30:39'),
(25, 1494, '4', 2.60526, 5, 1, '2017-09-13 07:30:44'),
(25, 1503, '3', -1.43478, 24, 0, '2017-09-13 07:31:08'),
(34, 1169, '2', 0.75, 12, 1, '2017-09-13 07:40:32'),
(39, 1190, '4', 0.1875, 21, 1, '2017-09-13 07:40:34'),
(61, 3407, '1', 1.61333, 8, 1, '2017-09-13 07:40:43'),
(39, 1216, '3', -0.75, 12, 0, '2017-09-13 07:40:47'),
(34, 1263, '4', -1.08, 16, 0, '2017-09-13 07:40:48'),
(61, 3410, '3', -1.76333, 7, 0, '2017-09-13 07:40:51'),
(40, 1195, '0', -0.0075, 20, 0, '2017-09-13 07:40:54'),
(48, 487, '4', 0.541875, 23, 1, '2017-09-13 07:41:01'),
(34, 1196, '2', -0.130208, 19, 0, '2017-09-13 07:41:07'),
(61, 3416, '4', 0.563333, 17, 1, '2017-09-13 07:41:07'),
(39, 1170, '0', -0.00520833, 24, 0, '2017-09-13 07:41:11'),
(61, 3401, '3', 1.98047, 6, 1, '2017-09-13 07:41:13'),
(52, 874, '1', 2.4882, 5, 1, '2017-09-13 07:41:15'),
(34, 1172, '4', 0.9075, 9, 1, '2017-09-13 07:41:16'),
(37, 1136, '1', -0.27, 14, 0, '2017-09-13 07:41:18'),
(61, 3405, '4', -1.61333, 8, 0, '2017-09-13 07:41:22'),
(52, 868, '1', 2.46387, 6, 1, '2017-09-13 07:41:22'),
(39, 1172, '3', -0.3675, 13, 0, '2017-09-13 07:41:23'),
(61, 3409, '4', -1.20333, 11, 0, '2017-09-13 07:41:32'),
(40, 1263, '0', -0.001875, 40, 0, '2017-09-13 07:41:35'),
(33, 2156, '3', -0.48, 30, 0, '2017-09-13 07:41:35'),
(37, 377, '0', -0.0075, 20, 0, '2017-09-13 07:41:38'),
(39, 1210, '1', 0.333333, 16, 1, '2017-09-13 07:41:39'),
(61, 3413, '1', -1.61333, 8, 0, '2017-09-13 07:41:41'),
(41, 1261, '4', -0.00831025, 36, 0, '2017-09-13 07:41:41'),
(48, 498, '0', -0.001875, 40, 0, '2017-09-13 07:41:42'),
(34, 1185, '0', -0.00382653, 28, 0, '2017-09-13 07:41:44'),
(40, 1218, '4', 0.6075, 11, 1, '2017-09-13 07:41:46'),
(52, 1125, '2', 0.9075, 27, 1, '2017-09-13 07:41:48'),
(61, 3411, '1', 1.47, 9, 1, '2017-09-13 07:41:50'),
(39, 1173, '2', 0.27, 14, 1, '2017-09-13 07:41:53'),
(41, 1174, '3', 0.869823, 12, 1, '2017-09-13 07:41:53'),
(37, 2418, '2', 1.80187, 18, 1, '2017-09-13 07:41:56'),
(34, 1198, '4', 0.27, 14, 1, '2017-09-13 07:41:58'),
(61, 3414, '3', -1.47, 9, 0, '2017-09-13 07:41:59'),
(52, 340, '1', -2.1675, 12, 0, '2017-09-13 07:42:00'),
(35, 1197, '3', -0.630208, 13, 0, '2017-09-13 07:42:01'),
(48, 719, '3', 0.592593, 20, 1, '2017-09-13 07:42:01'),
(40, 1210, '1', 0.421875, 15, 1, '2017-09-13 07:42:02'),
(39, 1218, '1', -0.6075, 11, 0, '2017-09-13 07:42:05'),
(61, 3397, '0', 0, 8, -1, '2017-09-13 07:42:07'),
(52, 1639, '4', 2.40166, 8, 1, '2017-09-13 07:42:09'),
(33, 2159, '3', -0.255208, 34, 0, '2017-09-13 07:42:10'),
(40, 1198, '4', 0.9075, 9, 1, '2017-09-13 07:42:10'),
(35, 1218, '2', -0.6075, 11, 0, '2017-09-13 07:42:13'),
(39, 1177, '2', 0.75, 11, 1, '2017-09-13 07:42:15'),
(61, 3408, '1', -1.47, 9, 0, '2017-09-13 07:42:16'),
(41, 1196, '0', -0.00520833, 24, 0, '2017-09-13 07:42:18'),
(34, 1227, '2', -0.0208333, 22, 0, '2017-09-13 07:42:20'),
(40, 1190, '4', 1.10587, 11, 1, '2017-09-13 07:42:21'),
(61, 3415, '0', 0, 8, -1, '2017-09-13 07:42:24'),
(35, 1198, '4', 0.48, 12, 1, '2017-09-13 07:42:25'),
(51, 1452, '2', 0.75, 20, 1, '2017-09-13 07:42:32'),
(48, 732, '3', -0.0208333, 33, 0, '2017-09-13 07:42:34'),
(34, 1297, '3', 1.6875, 15, 1, '2017-09-13 07:42:35'),
(36, 1186, '3', 0.0344388, 25, 1, '2017-09-13 07:42:37'),
(61, 3404, '4', 1.05762, 13, 1, '2017-09-13 07:42:38'),
(35, 1174, '3', 0.75, 13, 1, '2017-09-13 07:42:38'),
(41, 1197, '2', -0.046875, 21, 0, '2017-09-13 07:42:38'),
(48, 723, '1', 1.94676, 7, 1, '2017-09-13 07:42:41'),
(40, 1174, '3', 0.159763, 20, 1, '2017-09-13 07:42:42'),
(47, 509, '1', 0.280093, 25, 1, '2017-09-13 07:42:44'),
(52, 872, '0', 0, 36, -1, '2017-09-13 07:42:45'),
(53, 1456, '1', 0.226875, 29, 1, '2017-09-13 07:42:45'),
(60, 865, '1', -2.08333, 10, 0, '2017-09-13 07:42:45'),
(61, 3402, '0', 0, 8, -1, '2017-09-13 07:42:45'),
(35, 1177, '2', 1.21488, 8, 1, '2017-09-13 07:42:46'),
(33, 2147, '4', 0.3675, 39, 1, '2017-09-13 07:42:49'),
(37, 2429, '3', -1.10587, 55, 0, '2017-09-13 07:42:50'),
(41, 1218, '1', -0.48, 12, 0, '2017-09-13 07:42:50'),
(34, 1216, '4', 0.333333, 16, 1, '2017-09-13 07:42:51'),
(45, 1261, '0', -0.00207756, 38, 0, '2017-09-13 07:42:52'),
(40, 1291, '4', 0.6075, 11, 1, '2017-09-13 07:42:52'),
(42, 1203, '0', -0.00333333, 30, 0, '2017-09-13 07:42:53'),
(39, 1270, '2', -0.0694707, 39, 0, '2017-09-13 07:42:54'),
(43, 1456, '1', 0.0675, 34, 1, '2017-09-13 07:42:54'),
(36, 1194, '1', 0.309949, 19, 1, '2017-09-13 07:42:56'),
(49, 1466, '1', -0.12, 40, 0, '2017-09-13 07:42:57'),
(40, 1177, '2', 1.79132, 5, 1, '2017-09-13 07:42:58'),
(35, 1216, '4', 0.75, 12, 1, '2017-09-13 07:42:58'),
(55, 2608, '3', 1.2675, 14, 1, '2017-09-13 07:42:59'),
(61, 3403, '4', -0.84668, 15, 0, '2017-09-13 07:43:00'),
(34, 1184, '4', 1.02083, 10, 1, '2017-09-13 07:43:01'),
(52, 858, '3', -1.54083, 17, 0, '2017-09-13 07:43:02'),
(60, 345, '3', -1.47, 18, 0, '2017-09-13 07:43:03'),
(47, 722, '2', -0.668981, 19, 0, '2017-09-13 07:43:04'),
(51, 1454, '2', 0.00925926, 34, 1, '2017-09-13 07:43:06'),
(37, 371, '1', -0.0675, 17, 0, '2017-09-13 07:43:07'),
(45, 1172, '4', 0.1875, 15, 1, '2017-09-13 07:43:08'),
(38, 2613, '4', 0.151875, 31, 1, '2017-09-13 07:43:09'),
(40, 1292, '2', -1.08, 12, 0, '2017-09-13 07:43:09'),
(61, 3400, '4', -1.29199, 11, 0, '2017-09-13 07:43:12'),
(52, 346, '1', 2.02423, 10, 1, '2017-09-13 07:43:12'),
(34, 1292, '1', 1.08, 12, 1, '2017-09-13 07:43:13'),
(33, 2160, '2', -0.0833333, 25, 0, '2017-09-13 07:43:14'),
(38, 2601, '2', 2.29688, 5, 1, '2017-09-13 07:43:14'),
(35, 1263, '1', 0.991875, 17, 1, '2017-09-13 07:43:15'),
(62, 489, '2', -0.001875, 39, 0, '2017-09-13 07:43:18'),
(65, 2611, '3', 1.57687, 11, 1, '2017-09-13 07:43:18'),
(36, 1276, '0', 0, 22, -1, '2017-09-13 07:43:18'),
(51, 1455, '1', 1.47, 12, 1, '2017-09-13 07:43:18'),
(53, 1461, '4', -0.204159, 34, 0, '2017-09-13 07:43:19'),
(45, 1218, '1', -0.48, 12, 0, '2017-09-13 07:43:20'),
(52, 867, '1', -2.25333, 8, 0, '2017-09-13 07:43:20'),
(43, 3051, '0', -0.00443787, 26, 0, '2017-09-13 07:43:21'),
(48, 737, '0', -0.001875, 40, 0, '2017-09-13 07:43:21'),
(37, 368, '3', 0.27, 14, 1, '2017-09-13 07:43:22'),
(31, 613, '4', -0.563333, 34, 0, '2017-09-13 07:43:23'),
(55, 2603, '1', 0.3675, 26, 1, '2017-09-13 07:43:25'),
(41, 1270, '3', -0.114839, 37, 0, '2017-09-13 07:43:28'),
(45, 1183, '2', 1.04752, 9, 1, '2017-09-13 07:43:30'),
(51, 1461, '3', 1.63894, 12, 1, '2017-09-13 07:43:30'),
(61, 3406, '1', -0.333333, 20, 0, '2017-09-13 07:43:31'),
(42, 1261, '0', -0.00207756, 38, 0, '2017-09-13 07:43:32'),
(34, 1170, '4', -0.130208, 19, 0, '2017-09-13 07:43:32'),
(48, 720, '4', 1.40443, 12, 1, '2017-09-13 07:43:33'),
(39, 1263, '0', -0.001875, 40, 0, '2017-09-13 07:43:34'),
(54, 609, '1', -1.02083, 25, 0, '2017-09-13 07:43:36'),
(59, 1276, '4', -0.75, 16, 0, '2017-09-13 07:43:36'),
(44, 1593, '2', -0.1875, 33, 0, '2017-09-13 07:43:38'),
(49, 1461, '4', -0.0354442, 41, 0, '2017-09-13 07:43:39'),
(47, 732, '1', -0.00231481, 35, 0, '2017-09-13 07:43:39'),
(52, 873, '2', 1.52135, 19, 1, '2017-09-13 07:43:40'),
(38, 2611, '3', 0.3675, 26, 1, '2017-09-13 07:43:41'),
(60, 871, '4', -0.579201, 37, 0, '2017-09-13 07:43:41'),
(37, 373, '0', -0.0075, 20, 0, '2017-09-13 07:43:42'),
(57, 3051, '2', -0.284024, 18, 0, '2017-09-13 07:43:42'),
(36, 1292, '0', 0, 25, -1, '2017-09-13 07:43:43'),
(45, 1184, '4', 0.520833, 14, 1, '2017-09-13 07:43:44'),
(41, 1291, '1', -0.12, 16, 0, '2017-09-13 07:43:44'),
(56, 2604, '1', -0.75, 20, 0, '2017-09-13 07:43:44'),
(31, 614, '3', 1.0535, 22, 1, '2017-09-13 07:43:45'),
(35, 1203, '0', -0.00333333, 30, 0, '2017-09-13 07:43:46'),
(61, 3399, '4', -0.949219, 14, 0, '2017-09-13 07:43:46'),
(62, 509, '3', -0.113426, 29, 0, '2017-09-13 07:43:47'),
(34, 1291, '4', 0.12, 16, 1, '2017-09-13 07:43:48'),
(40, 1261, '0', -0.00207756, 38, 0, '2017-09-13 07:43:48'),
(64, 2606, '1', 2.04187, 7, 1, '2017-09-13 07:43:48'),
(65, 2602, '2', -0.1875, 30, 0, '2017-09-13 07:43:48'),
(54, 613, '4', -1.6875, 15, 0, '2017-09-13 07:43:50'),
(43, 1467, '3', 0.75, 30, 1, '2017-09-13 07:43:51'),
(47, 719, '3', 1.44676, 11, 1, '2017-09-13 07:43:51'),
(52, 923, '4', 2.2376, 12, 1, '2017-09-13 07:43:51'),
(49, 1462, '1', 1.2675, 14, 1, '2017-09-13 07:43:53'),
(37, 1114, '4', -0.6075, 11, 0, '2017-09-13 07:43:53'),
(61, 3398, '2', -1.6875, 8, 0, '2017-09-13 07:43:54'),
(64, 2613, '4', 2.1675, 6, 1, '2017-09-13 07:43:54'),
(38, 2608, '3', 1.2675, 14, 1, '2017-09-13 07:43:54'),
(48, 728, '4', -0.600416, 21, 0, '2017-09-13 07:43:55'),
(50, 400, '2', -0.3675, 13, 0, '2017-09-13 07:43:56'),
(59, 1210, '1', 0.046875, 21, 1, '2017-09-13 07:43:58'),
(39, 1186, '3', 0.0612245, 24, 1, '2017-09-13 07:43:58'),
(55, 2604, '1', -0.091875, 33, 0, '2017-09-13 07:43:58'),
(62, 722, '3', 1.44676, 11, 1, '2017-09-13 07:43:59'),
(40, 1169, '2', 0.880208, 11, 1, '2017-09-13 07:43:59'),
(42, 1185, '2', -0.00382653, 27, 0, '2017-09-13 07:44:00'),
(60, 923, '4', 1.8444, 19, 1, '2017-09-13 07:44:00'),
(36, 1197, '1', 0.255208, 17, 1, '2017-09-13 07:44:00'),
(49, 2929, '4', 1.33333, 8, 1, '2017-09-13 07:44:01'),
(44, 1575, '4', 1.14083, 23, 1, '2017-09-13 07:44:01'),
(56, 2603, '4', -0.991875, 17, 0, '2017-09-13 07:44:01'),
(52, 2401, '2', -2.47934, 10, 0, '2017-09-13 07:44:02'),
(65, 2614, '4', 1.2675, 14, 1, '2017-09-13 07:44:02'),
(35, 1184, '4', 0.255208, 17, 1, '2017-09-13 07:44:03'),
(43, 1449, '1', -1.47, 12, 0, '2017-09-13 07:44:03'),
(53, 1466, '4', -0.0588, 43, 0, '2017-09-13 07:44:03'),
(41, 1195, '1', 0, 20, 0, '2017-09-13 07:44:03'),
(54, 595, '3', -1.6875, 13, 0, '2017-09-13 07:44:04'),
(33, 2151, '0', -0.0012, 50, 0, '2017-09-13 07:44:05'),
(55, 2601, '2', 2.1675, 6, 1, '2017-09-13 07:44:05'),
(50, 2420, '3', 2.46387, 9, 1, '2017-09-13 07:44:06'),
(57, 1460, '3', -0.625236, 25, 0, '2017-09-13 07:44:08'),
(62, 464, '3', 1.13609, 10, 1, '2017-09-13 07:44:08'),
(61, 3412, '4', 0.853333, 14, 1, '2017-09-13 07:44:08'),
(52, 863, '2', 2.22949, 8, 1, '2017-09-13 07:44:10'),
(65, 2605, '2', 1.92, 8, 1, '2017-09-13 07:44:11'),
(37, 1131, '2', -0.03, 18, 0, '2017-09-13 07:44:11'),
(41, 1186, '3', 1.38138, 9, 1, '2017-09-13 07:44:12'),
(47, 489, '3', -0.6075, 22, 0, '2017-09-13 07:44:12'),
(40, 1197, '1', 0.630208, 13, 1, '2017-09-13 07:44:13'),
(36, 1170, '2', 0.630208, 13, 1, '2017-09-13 07:44:13'),
(48, 736, '3', -0.373702, 22, 0, '2017-09-13 07:44:16'),
(33, 2161, '1', -1.25606, 12, 0, '2017-09-13 07:44:17'),
(60, 361, '4', -1.45504, 17, 0, '2017-09-13 07:44:17'),
(62, 720, '4', 1.74723, 9, 1, '2017-09-13 07:44:17'),
(31, 607, '2', -0.506059, 33, 0, '2017-09-13 07:44:19'),
(51, 1466, '2', 0.0012, 49, 1, '2017-09-13 07:44:19'),
(39, 1276, '1', 0.354492, 21, 1, '2017-09-13 07:44:20'),
(55, 2614, '4', 1.17188, 15, 1, '2017-09-13 07:44:20'),
(46, 2401, '0', 0, 36, -1, '2017-09-13 07:44:20'),
(65, 2608, '3', 1.6875, 10, 1, '2017-09-13 07:44:21'),
(61, 3428, '4', 1.48915, 13, 1, '2017-09-13 07:44:21'),
(37, 1140, '1', 0.75, 10, 1, '2017-09-13 07:44:21'),
(35, 1227, '4', -0.130208, 19, 0, '2017-09-13 07:44:22'),
(59, 1227, '0', -0.00520833, 24, 0, '2017-09-13 07:44:22'),
(50, 387, '4', 0.03, 18, 1, '2017-09-13 07:44:23'),
(44, 1596, '4', -0.998521, 22, 0, '2017-09-13 07:44:23'),
(47, 735, '4', 1.20333, 11, 1, '2017-09-13 07:44:24'),
(45, 1263, '0', -0.001875, 40, 0, '2017-09-13 07:44:24'),
(49, 1451, '1', 0.333333, 24, 1, '2017-09-13 07:44:24'),
(41, 1169, '2', 0.630208, 13, 1, '2017-09-13 07:44:26'),
(62, 472, '1', 1.6875, 10, 1, '2017-09-13 07:44:27'),
(37, 1112, '4', 1.2675, 7, 1, '2017-09-13 07:44:28'),
(42, 1292, '0', -0.00333333, 30, 0, '2017-09-13 07:44:30'),
(64, 2604, '1', -0.016875, 37, 0, '2017-09-13 07:44:31'),
(54, 1124, '3', -0.9075, 27, 0, '2017-09-13 07:44:31'),
(57, 1461, '4', -0.625236, 25, 0, '2017-09-13 07:44:33'),
(34, 1270, '0', -0.00141777, 46, 0, '2017-09-13 07:44:34'),
(38, 2602, '1', -0.001875, 39, 0, '2017-09-13 07:44:34'),
(55, 2602, '1', -1.2675, 14, 0, '2017-09-13 07:44:34'),
(47, 494, '3', 1.33333, 10, 1, '2017-09-13 07:44:34'),
(31, 1124, '3', -1.61333, 16, 0, '2017-09-13 07:44:35'),
(53, 1463, '4', -0.1875, 33, 0, '2017-09-13 07:44:37'),
(40, 1184, '0', -0.00520833, 24, 0, '2017-09-13 07:44:37'),
(51, 1463, '4', -0.968492, 19, 0, '2017-09-13 07:44:38'),
(56, 2609, '2', 0.03, 36, 1, '2017-09-13 07:44:38'),
(59, 1297, '3', 1.54083, 17, 1, '2017-09-13 07:44:39'),
(45, 1195, '4', 0.12, 16, 1, '2017-09-13 07:44:40'),
(35, 1195, '1', -0.0075, 19, 0, '2017-09-13 07:44:41'),
(42, 1198, '2', -0.6075, 11, 0, '2017-09-13 07:44:41'),
(46, 872, '1', -1.2675, 21, 0, '2017-09-13 07:44:42'),
(50, 384, '0', -0.0075, 20, 0, '2017-09-13 07:44:43'),
(39, 1227, '0', -0.00520833, 24, 0, '2017-09-13 07:44:44'),
(61, 3418, '4', -0.75, 22, 0, '2017-09-13 07:44:44'),
(40, 1173, '2', 1.2675, 7, 1, '2017-09-13 07:44:44'),
(34, 1218, '4', 0.6075, 11, 1, '2017-09-13 07:44:45'),
(44, 1591, '2', -1.12037, 21, 0, '2017-09-13 07:44:45'),
(33, 2146, '0', -0.00382653, 28, 0, '2017-09-13 07:44:45'),
(55, 2605, '2', 1.47, 12, 1, '2017-09-13 07:44:46'),
(38, 2607, '4', 1.47, 12, 1, '2017-09-13 07:44:46'),
(43, 1466, '4', -0.0588, 43, 0, '2017-09-13 07:44:46'),
(66, 1216, '0', -0.00520833, 24, 0, '2017-09-13 07:44:47'),
(49, 1452, '3', -0.541875, 23, 0, '2017-09-13 07:44:47'),
(46, 868, '1', 2.46387, 6, 1, '2017-09-13 07:44:48'),
(37, 382, '4', 0, 20, 1, '2017-09-13 07:44:48'),
(52, 857, '3', 0.333333, 40, 1, '2017-09-13 07:44:50'),
(62, 737, '1', -0.541875, 23, 0, '2017-09-13 07:44:50'),
(36, 1261, '0', -0.00207756, 38, 0, '2017-09-13 07:44:52'),
(56, 2610, '3', 1.2675, 14, 1, '2017-09-13 07:44:52'),
(45, 1190, '4', 0.979592, 12, 1, '2017-09-13 07:44:52'),
(55, 2613, '4', 2.04187, 7, 1, '2017-09-13 07:44:53'),
(47, 481, '3', -0.826875, 19, 0, '2017-09-13 07:44:53'),
(48, 733, '2', -0.0075, 38, 0, '2017-09-13 07:44:54'),
(54, 1310, '3', -0.869823, 24, 0, '2017-09-13 07:44:55'),
(41, 1203, '0', -0.00333333, 30, 0, '2017-09-13 07:44:56'),
(39, 1198, '4', 0.12, 16, 1, '2017-09-13 07:44:59'),
(51, 1464, '0', 0, 22, -1, '2017-09-13 07:45:00'),
(52, 345, '1', 2.08333, 10, 1, '2017-09-13 07:45:00'),
(53, 1453, '1', 0.8112, 24, 1, '2017-09-13 07:45:01'),
(65, 2615, '0', -0.001875, 40, 0, '2017-09-13 07:45:01'),
(59, 1292, '0', 0, 22, -1, '2017-09-13 07:45:01'),
(50, 380, '4', -0.0675, 17, 0, '2017-09-13 07:45:01'),
(60, 362, '3', 0.213333, 44, 1, '2017-09-13 07:45:02'),
(42, 1186, '3', 0.1875, 21, 1, '2017-09-13 07:45:02'),
(31, 619, '0', 0, 28, -1, '2017-09-13 07:45:03'),
(36, 1184, '4', 0.630208, 13, 1, '2017-09-13 07:45:04'),
(33, 2180, '1', -0.244898, 20, 0, '2017-09-13 07:45:04'),
(43, 1455, '1', 0.826875, 19, 1, '2017-09-13 07:45:05'),
(44, 1553, '4', 0.886106, 21, 1, '2017-09-13 07:45:06'),
(64, 2602, '3', 0.046875, 35, 1, '2017-09-13 07:45:06'),
(50, 2418, '2', 2.56687, 6, 1, '2017-09-13 07:45:07'),
(63, 1133, '0', -0.0075, 20, 0, '2017-09-13 07:45:07'),
(41, 1173, '2', 0.48, 12, 1, '2017-09-13 07:45:08'),
(62, 481, '3', -0.991875, 17, 0, '2017-09-13 07:45:08'),
(57, 1466, '2', 0.2352, 36, 1, '2017-09-13 07:45:09'),
(34, 1210, '0', -0.00520833, 24, 0, '2017-09-13 07:45:09'),
(61, 3423, '4', -0.559401, 25, 0, '2017-09-13 07:45:09'),
(52, 310, '3', 2.46, 9, 1, '2017-09-13 07:45:09'),
(54, 1091, '3', -1.76333, 14, 0, '2017-09-13 07:45:10'),
(43, 3044, '3', 1.88021, 5, 1, '2017-09-13 07:45:11'),
(39, 1297, '3', 1.92, 12, 1, '2017-09-13 07:45:11'),
(46, 859, '4', 1.29551, 24, 1, '2017-09-13 07:45:11'),
(66, 1227, '0', -0.00520833, 24, 0, '2017-09-13 07:45:11'),
(59, 1263, '4', -1.6875, 10, 0, '2017-09-13 07:45:12'),
(37, 2413, '4', -1.63894, 24, 0, '2017-09-13 07:45:12'),
(38, 2610, '3', 0.3675, 26, 1, '2017-09-13 07:45:12'),
(55, 2610, '3', 0.826875, 19, 1, '2017-09-13 07:45:12'),
(65, 2604, '1', -1.47, 12, 0, '2017-09-13 07:45:13'),
(42, 1263, '2', -1.47, 12, 0, '2017-09-13 07:45:14'),
(34, 1186, '3', 1.6875, 7, 1, '2017-09-13 07:45:16'),
(40, 1276, '0', -0.00292969, 32, 0, '2017-09-13 07:45:16'),
(45, 1276, '1', 0.1875, 24, 1, '2017-09-13 07:45:17'),
(49, 1463, '1', -0.303719, 30, 0, '2017-09-13 07:45:17'),
(50, 378, '3', -0.6075, 11, 0, '2017-09-13 07:45:18'),
(63, 376, '1', -0.75, 10, 0, '2017-09-13 07:45:18'),
(33, 2149, '4', 1.19668, 14, 1, '2017-09-13 07:45:19'),
(37, 1137, '2', 1.08, 8, 1, '2017-09-13 07:45:21'),
(55, 2607, '4', 1.6875, 10, 1, '2017-09-13 07:45:22'),
(54, 604, '3', 1.92, 12, 1, '2017-09-13 07:45:22'),
(46, 340, '3', 2.23172, 11, 1, '2017-09-13 07:45:22'),
(36, 1218, '1', -0.03, 18, 0, '2017-09-13 07:45:23'),
(66, 1172, '1', -0.6075, 11, 0, '2017-09-13 07:45:23'),
(50, 1110, '2', 1.47, 6, 1, '2017-09-13 07:45:24'),
(34, 1173, '2', 1.08, 8, 1, '2017-09-13 07:45:24'),
(41, 1185, '4', 0.46301, 17, 1, '2017-09-13 07:45:24'),
(56, 2615, '1', 0.091875, 33, 1, '2017-09-13 07:45:25'),
(65, 2607, '4', 1.36688, 13, 1, '2017-09-13 07:45:26'),
(40, 1186, '3', 1.2398, 10, 1, '2017-09-13 07:45:26'),
(53, 1455, '1', 0.3675, 26, 1, '2017-09-13 07:45:27'),
(35, 1270, '0', -0.00141777, 46, 0, '2017-09-13 07:45:27'),
(31, 595, '3', -0.808802, 25, 0, '2017-09-13 07:45:28'),
(45, 1170, '2', 0.630208, 13, 1, '2017-09-13 07:45:30'),
(51, 1456, '1', 0.1875, 30, 1, '2017-09-13 07:45:30'),
(48, 490, '0', -0.00231481, 36, 0, '2017-09-13 07:45:31'),
(58, 1183, '0', -0.00619835, 22, 0, '2017-09-13 07:45:31'),
(50, 2408, '3', 2.50095, 8, 1, '2017-09-13 07:45:32'),
(44, 1563, '1', -0.75, 26, 0, '2017-09-13 07:45:32'),
(65, 2606, '1', 2.04187, 7, 1, '2017-09-13 07:45:32'),
(61, 3425, '4', -0.619835, 24, 0, '2017-09-13 07:45:33'),
(54, 1318, '2', 1.85204, 12, 1, '2017-09-13 07:45:34'),
(47, 733, '0', -0.001875, 40, 0, '2017-09-13 07:45:34'),
(42, 1173, '0', -0.0075, 20, 0, '2017-09-13 07:45:34'),
(49, 1458, '0', 0, 17, -1, '2017-09-13 07:45:34'),
(38, 2604, '1', -0.6075, 22, 0, '2017-09-13 07:45:34'),
(46, 855, '1', -1.90503, 13, 0, '2017-09-13 07:45:36'),
(34, 1194, '1', 0.860969, 13, 1, '2017-09-13 07:45:37'),
(66, 1174, '3', 0.536982, 15, 1, '2017-09-13 07:45:38'),
(63, 395, '0', -0.0075, 20, 0, '2017-09-13 07:45:38'),
(31, 596, '1', 1.99177, 10, 1, '2017-09-13 07:45:38'),
(62, 726, '2', -0.0233564, 31, 0, '2017-09-13 07:45:39'),
(64, 2608, '3', 0.091875, 33, 1, '2017-09-13 07:45:39'),
(65, 2609, '2', 2.04187, 7, 1, '2017-09-13 07:45:40'),
(48, 486, '1', 1.56481, 10, 1, '2017-09-13 07:45:40'),
(50, 1133, '3', 1.08, 8, 1, '2017-09-13 07:45:40'),
(41, 1172, '4', 0.12, 16, 1, '2017-09-13 07:45:41'),
(60, 1125, '2', 0.3675, 39, 1, '2017-09-13 07:45:41'),
(56, 2614, '4', 1.08, 16, 1, '2017-09-13 07:45:42'),
(43, 1453, '1', 0.3888, 32, 1, '2017-09-13 07:45:43'),
(59, 1270, '0', 0, 32, -1, '2017-09-13 07:45:43'),
(37, 2404, '4', -1.6875, 23, 0, '2017-09-13 07:45:44'),
(57, 1456, '2', -0.046875, 35, 0, '2017-09-13 07:45:44'),
(61, 3430, '1', 1.58678, 12, 1, '2017-09-13 07:45:45'),
(35, 1292, '1', 0.563333, 17, 1, '2017-09-13 07:45:45'),
(65, 2617, '1', 2.65, 7, 1, '2017-09-13 07:45:46'),
(62, 725, '4', 1.89187, 7, 1, '2017-09-13 07:45:47'),
(49, 3004, '2', -1.08, 12, 0, '2017-09-13 07:45:47'),
(36, 1227, '0', -0.00520833, 24, 0, '2017-09-13 07:45:47'),
(51, 3039, '1', 0.359467, 17, 1, '2017-09-13 07:45:47'),
(66, 1173, '1', -0.9075, 9, 0, '2017-09-13 07:45:47'),
(63, 368, '3', 0.75, 10, 1, '2017-09-13 07:45:48'),
(39, 1261, '3', 0.00207756, 37, 1, '2017-09-13 07:45:48'),
(33, 2144, '4', 0.470052, 29, 1, '2017-09-13 07:45:48'),
(34, 1276, '1', 1.17188, 12, 1, '2017-09-13 07:45:49'),
(54, 1317, '3', 1.6875, 15, 1, '2017-09-13 07:45:49'),
(55, 2609, '3', -0.316875, 27, 0, '2017-09-13 07:45:49'),
(64, 2609, '4', -1.57687, 11, 0, '2017-09-13 07:45:50'),
(71, 1216, '1', -0.520833, 14, 0, '2017-09-13 07:45:50'),
(40, 1185, '4', 0.0612245, 24, 1, '2017-09-13 07:45:51'),
(42, 1291, '1', -0.12, 16, 0, '2017-09-13 07:45:51'),
(52, 305, '3', -1.19118, 41, 0, '2017-09-13 07:45:51'),
(50, 365, '1', -0.6075, 11, 0, '2017-09-13 07:45:51'),
(53, 3051, '0', -0.00443787, 26, 0, '2017-09-13 07:45:53'),
(49, 3044, '3', 1.50521, 7, 1, '2017-09-13 07:45:53'),
(57, 3039, '1', 1.13609, 10, 1, '2017-09-13 07:45:54'),
(41, 1177, '0', 0, 14, -1, '2017-09-13 07:45:54'),
(45, 1210, '0', -0.00520833, 24, 0, '2017-09-13 07:45:54'),
(56, 2611, '3', 1.36688, 13, 1, '2017-09-13 07:45:55'),
(63, 364, '2', 1.08, 8, 1, '2017-09-13 07:45:56'),
(50, 1104, '3', 1.6875, 5, 1, '2017-09-13 07:45:56'),
(60, 868, '3', -1.5498, 18, 0, '2017-09-13 07:45:59'),
(44, 3034, '1', 0, 28, 0, '2017-09-13 07:46:00'),
(63, 369, '2', 1.47, 6, 1, '2017-09-13 07:46:02'),
(33, 2155, '2', 1.33333, 14, 1, '2017-09-13 07:46:03'),
(46, 326, '0', 0, 27, -1, '2017-09-13 07:46:03'),
(45, 1291, '4', 0.9075, 9, 1, '2017-09-13 07:46:03'),
(58, 1276, '0', -0.00292969, 32, 0, '2017-09-13 07:46:04'),
(65, 2619, '4', -2.15, 17, 0, '2017-09-13 07:46:04'),
(37, 385, '0', -0.0075, 20, 0, '2017-09-13 07:46:04'),
(40, 1297, '3', 1.6875, 15, 1, '2017-09-13 07:46:06'),
(49, 3035, '2', 0.860969, 13, 1, '2017-09-13 07:46:06'),
(59, 1184, '4', 0.00520833, 23, 1, '2017-09-13 07:46:07'),
(41, 1184, '4', 0.75, 12, 1, '2017-09-13 07:46:07'),
(35, 1210, '1', 0.0208333, 22, 1, '2017-09-13 07:46:07'),
(42, 1297, '3', 1.54083, 17, 1, '2017-09-13 07:46:07'),
(66, 1297, '3', 1.33333, 20, 1, '2017-09-13 07:46:07'),
(53, 1457, '4', 1.2675, 14, 1, '2017-09-13 07:46:08'),
(62, 466, '4', -0.27, 21, 0, '2017-09-13 07:46:08'),
(38, 2615, '1', 0.091875, 33, 1, '2017-09-13 07:46:08'),
(48, 724, '4', -0.00333333, 29, 0, '2017-09-13 07:46:09'),
(52, 357, '0', 0, 20, -1, '2017-09-13 07:46:10'),
(47, 729, '0', -0.00231481, 36, 0, '2017-09-13 07:46:10'),
(45, 1198, '4', 1.08, 8, 1, '2017-09-13 07:46:11'),
(54, 614, '4', -1.0535, 22, 0, '2017-09-13 07:46:11'),
(55, 2615, '1', 0.6075, 22, 1, '2017-09-13 07:46:12'),
(63, 2418, '2', 2.29688, 10, 1, '2017-09-13 07:46:12'),
(71, 1227, '0', -0.00520833, 24, 0, '2017-09-13 07:46:15'),
(61, 2156, '0', 0, 16, -1, '2017-09-13 07:46:15'),
(65, 2622, '1', -2.35, 13, 0, '2017-09-13 07:46:16'),
(39, 1185, '0', -0.00382653, 28, 0, '2017-09-13 07:46:16'),
(35, 1194, '1', 1.2398, 10, 1, '2017-09-13 07:46:17'),
(36, 1203, '0', -0.00333333, 30, 0, '2017-09-13 07:46:17'),
(57, 1454, '2', 0.391204, 23, 1, '2017-09-13 07:46:17'),
(44, 1586, '1', 1.19234, 17, 1, '2017-09-13 07:46:18'),
(37, 386, '2', -0.27, 14, 0, '2017-09-13 07:46:18'),
(60, 855, '0', 0, 20, -1, '2017-09-13 07:46:20'),
(47, 464, '1', -1.13609, 10, 0, '2017-09-13 07:46:20'),
(46, 858, '3', -1.47, 18, 0, '2017-09-13 07:46:21'),
(31, 597, '2', 0.148148, 42, 1, '2017-09-13 07:46:21'),
(34, 1202, '1', 0.333333, 32, 1, '2017-09-13 07:46:21'),
(55, 2612, '2', -1.6875, 10, 0, '2017-09-13 07:46:22'),
(62, 494, '3', 0.853333, 14, 1, '2017-09-13 07:46:22'),
(51, 1462, '1', 0.046875, 35, 1, '2017-09-13 07:46:22'),
(42, 1218, '1', -0.12, 16, 0, '2017-09-13 07:46:23'),
(56, 2607, '4', 0.226875, 29, 1, '2017-09-13 07:46:24'),
(64, 2605, '0', 0, 35, -1, '2017-09-13 07:46:25'),
(49, 3039, '1', 0.217456, 19, 1, '2017-09-13 07:46:25'),
(36, 1183, '2', 0.892562, 10, 1, '2017-09-13 07:46:27'),
(41, 1183, '3', -0.00619835, 21, 0, '2017-09-13 07:46:27'),
(58, 1196, '0', -0.00520833, 24, 0, '2017-09-13 07:46:28'),
(47, 486, '1', 1.81481, 8, 1, '2017-09-13 07:46:28'),
(43, 1460, '1', 0.00141777, 45, 1, '2017-09-13 07:46:28'),
(52, 358, '2', 2.20312, 17, 1, '2017-09-13 07:46:28'),
(59, 1183, '0', -0.00619835, 22, 0, '2017-09-13 07:46:29'),
(65, 2612, '1', 1.36688, 13, 1, '2017-09-13 07:46:29'),
(54, 600, '3', 1.30963, 19, 1, '2017-09-13 07:46:31'),
(53, 3004, '2', -0.12, 24, 0, '2017-09-13 07:46:32'),
(66, 1196, '0', -0.00520833, 24, 0, '2017-09-13 07:46:32'),
(45, 1186, '3', 0.1875, 21, 1, '2017-09-13 07:46:32'),
(63, 393, '0', -0.0075, 20, 0, '2017-09-13 07:46:32'),
(69, 3051, '0', -0.00443787, 26, 0, '2017-09-13 07:46:33'),
(39, 1292, '1', 0.563333, 17, 1, '2017-09-13 07:46:33'),
(65, 2613, '4', 2.1675, 6, 1, '2017-09-13 07:46:35'),
(47, 718, '1', 1.76333, 7, 1, '2017-09-13 07:46:35'),
(42, 1177, '2', 0.75, 11, 1, '2017-09-13 07:46:36'),
(38, 2605, '3', -0.27, 28, 0, '2017-09-13 07:46:37'),
(48, 466, '4', -0.0133333, 28, 0, '2017-09-13 07:46:37'),
(71, 1185, '2', -0.0956633, 23, 0, '2017-09-13 07:46:38'),
(51, 3051, '3', 0.443787, 16, 1, '2017-09-13 07:46:38'),
(36, 1297, '3', 1.92, 12, 1, '2017-09-13 07:46:39'),
(59, 1194, '1', 1.10587, 11, 1, '2017-09-13 07:46:40'),
(68, 1454, '0', -0.00231481, 36, 0, '2017-09-13 07:46:40'),
(33, 2153, '1', -0.217456, 38, 0, '2017-09-13 07:46:41'),
(55, 2611, '3', 0.826875, 19, 1, '2017-09-13 07:46:41'),
(35, 1196, '1', 0, 24, 0, '2017-09-13 07:46:41'),
(35, 1190, '0', -0.0956633, 24, 0, '2017-09-13 07:46:41'),
(41, 1263, '3', -1.2675, 14, 0, '2017-09-13 07:46:41'),
(50, 2455, '4', -1.65, 45, 0, '2017-09-13 07:46:42'),
(31, 850, '0', 0, 20, -1, '2017-09-13 07:46:42'),
(66, 1169, '2', 1.02083, 10, 1, '2017-09-13 07:46:42'),
(69, 1457, '4', 1.6875, 10, 1, '2017-09-13 07:46:44'),
(57, 1449, '1', -0.3675, 26, 0, '2017-09-13 07:46:44'),
(40, 1208, '2', -0.72, 38, 0, '2017-09-13 07:46:44'),
(58, 1173, '1', -0.12, 16, 0, '2017-09-13 07:46:44'),
(38, 2612, '2', -1.92, 8, 0, '2017-09-13 07:46:45'),
(60, 874, '4', -0.860969, 26, 0, '2017-09-13 07:46:46'),
(55, 2606, '1', 2.1675, 6, 1, '2017-09-13 07:46:47'),
(56, 2613, '3', -0.6075, 22, 0, '2017-09-13 07:46:47'),
(71, 1197, '3', -1.17188, 9, 0, '2017-09-13 07:46:47'),
(62, 730, '1', -0.280093, 25, 0, '2017-09-13 07:46:47'),
(64, 2612, '2', -0.6075, 22, 0, '2017-09-13 07:46:47'),
(51, 1465, '1', 1.38138, 9, 1, '2017-09-13 07:46:47'),
(68, 3044, '3', 1.50521, 7, 1, '2017-09-13 07:46:48'),
(52, 882, '4', 1.96875, 22, 1, '2017-09-13 07:46:50'),
(65, 2624, '4', -2.25, 15, 0, '2017-09-13 07:46:50'),
(44, 1597, '3', 0.333333, 32, 1, '2017-09-13 07:46:51'),
(53, 1462, '1', 0.826875, 19, 1, '2017-09-13 07:46:51'),
(34, 1208, '1', 1.14, 31, 1, '2017-09-13 07:46:52'),
(40, 1172, '4', 1.08, 8, 1, '2017-09-13 07:46:52'),
(63, 373, '4', 0, 20, 0, '2017-09-13 07:46:52'),
(38, 2603, '2', -1.92, 8, 0, '2017-09-13 07:46:52'),
(61, 2153, '4', -0.24963, 37, 0, '2017-09-13 07:46:53'),
(64, 2601, '2', 2.1675, 6, 1, '2017-09-13 07:46:53'),
(45, 1197, '1', 0.0208333, 22, 1, '2017-09-13 07:46:55'),
(43, 3039, '0', -0.00443787, 26, 0, '2017-09-13 07:46:55'),
(46, 1125, '2', 0.563333, 34, 1, '2017-09-13 07:46:55'),
(62, 729, '1', -1.81481, 8, 0, '2017-09-13 07:46:55'),
(41, 1297, '1', -1.76333, 14, 0, '2017-09-13 07:46:56'),
(42, 1195, '0', -0.0075, 20, 0, '2017-09-13 07:46:56'),
(71, 1218, '1', -0.9075, 9, 0, '2017-09-13 07:46:56'),
(38, 2614, '4', 2.43, 4, 1, '2017-09-13 07:46:56'),
(68, 2929, '4', 1.17188, 9, 1, '2017-09-13 07:46:57'),
(47, 727, '2', 0.453704, 22, 1, '2017-09-13 07:46:58'),
(61, 2151, '0', 0, 5, -1, '2017-09-13 07:46:58'),
(35, 1291, '1', -0.0675, 17, 0, '2017-09-13 07:46:58'),
(36, 1195, '0', -0.0075, 20, 0, '2017-09-13 07:47:00'),
(31, 611, '3', 1.1532, 19, 1, '2017-09-13 07:47:00'),
(50, 395, '0', -0.0075, 20, 0, '2017-09-13 07:47:02'),
(59, 1196, '4', 0.0208333, 22, 1, '2017-09-13 07:47:02'),
(65, 2603, '2', -1.47, 12, 0, '2017-09-13 07:47:02'),
(66, 1185, '3', -0.1875, 21, 0, '2017-09-13 07:47:03'),
(43, 1458, '0', 0, 8, -1, '2017-09-13 07:47:03'),
(39, 1203, '0', -0.00333333, 30, 0, '2017-09-13 07:47:03'),
(40, 1220, '0', 0, 12, -1, '2017-09-13 07:47:03'),
(55, 2619, '3', 2.1, 18, 1, '2017-09-13 07:47:05'),
(62, 486, '1', 1.44676, 11, 1, '2017-09-13 07:47:06'),
(46, 871, '0', 0, 11, -1, '2017-09-13 07:47:06'),
(49, 1460, '2', -0.0354442, 41, 0, '2017-09-13 07:47:07'),
(52, 304, '4', -2.08929, 17, 0, '2017-09-13 07:47:07'),
(37, 2419, '2', 1.05021, 49, 1, '2017-09-13 07:47:08'),
(41, 1216, '4', 0.75, 12, 1, '2017-09-13 07:47:08'),
(36, 1190, '4', 1.38138, 9, 1, '2017-09-13 07:47:08'),
(65, 2601, '2', 2.04187, 7, 1, '2017-09-13 07:47:09'),
(57, 1464, '3', -0.630208, 26, 0, '2017-09-13 07:47:09'),
(56, 2608, '3', 0.541875, 23, 1, '2017-09-13 07:47:09'),
(38, 2609, '3', -1.2675, 14, 0, '2017-09-13 07:47:10'),
(33, 2152, '3', -0.376302, 31, 0, '2017-09-13 07:47:12'),
(35, 1297, '3', 1.84083, 13, 1, '2017-09-13 07:47:12'),
(58, 1185, '0', -0.00382653, 28, 0, '2017-09-13 07:47:12'),
(64, 2611, '3', 0.826875, 19, 1, '2017-09-13 07:47:12'),
(63, 385, '0', -0.0075, 20, 0, '2017-09-13 07:47:12'),
(59, 1190, '4', 1.2398, 10, 1, '2017-09-13 07:47:13'),
(42, 1184, '4', 0.333333, 16, 1, '2017-09-13 07:47:13'),
(53, 3039, '2', -0.0710059, 22, 0, '2017-09-13 07:47:13'),
(48, 730, '0', -0.00231481, 36, 0, '2017-09-13 07:47:13'),
(69, 1464, '4', -0.421875, 30, 0, '2017-09-13 07:47:14'),
(45, 1203, '3', 0.333333, 20, 1, '2017-09-13 07:47:15'),
(55, 2617, '1', 2.5, 10, 1, '2017-09-13 07:47:15'),
(31, 605, '4', -1.6875, 15, 0, '2017-09-13 07:47:15'),
(38, 2606, '1', 2.29688, 5, 1, '2017-09-13 07:47:16'),
(71, 1203, '3', 0.403333, 19, 1, '2017-09-13 07:47:16'),
(54, 593, '0', 0, 45, -1, '2017-09-13 07:47:16'),
(52, 875, '1', 2.55, 9, 1, '2017-09-13 07:47:17'),
(61, 2146, '3', -0.309949, 19, 0, '2017-09-13 07:47:17'),
(34, 1175, '4', 0.46875, 27, 1, '2017-09-13 07:47:19'),
(41, 1190, '4', 1.10587, 11, 1, '2017-09-13 07:47:19'),
(62, 733, '1', -1.36688, 13, 0, '2017-09-13 07:47:19'),
(65, 2628, '3', -2.45, 11, 0, '2017-09-13 07:47:20'),
(49, 1465, '0', 0, 14, -1, '2017-09-13 07:47:21'),
(46, 361, '2', -1.6081, 15, 0, '2017-09-13 07:47:21'),
(39, 1291, '4', 0.03, 18, 1, '2017-09-13 07:47:21'),
(68, 1465, '1', 0.0344388, 25, 1, '2017-09-13 07:47:22'),
(50, 383, '0', -0.0075, 20, 0, '2017-09-13 07:47:22'),
(66, 1270, '3', -0.886106, 21, 0, '2017-09-13 07:47:25'),
(43, 1462, '1', 0.6075, 22, 1, '2017-09-13 07:47:25'),
(37, 1120, '4', -0.03, 18, 0, '2017-09-13 07:47:26'),
(61, 2150, '4', -1.74723, 9, 0, '2017-09-13 07:47:26'),
(71, 1173, '1', -0.48, 12, 0, '2017-09-13 07:47:28'),
(62, 735, '2', -1.61333, 8, 0, '2017-09-13 07:47:28'),
(58, 1216, '2', -0.255208, 17, 0, '2017-09-13 07:47:28'),
(45, 1292, '3', -0.963333, 13, 0, '2017-09-13 07:47:29');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(50, 369, '2', 1.2675, 7, 1, '2017-09-13 07:47:29'),
(65, 2610, '3', 1.80187, 9, 1, '2017-09-13 07:47:30'),
(33, 2145, '4', -0.359467, 17, 0, '2017-09-13 07:47:30'),
(51, 1467, '3', 0.240833, 43, 1, '2017-09-13 07:47:30'),
(46, 864, '3', 2.08333, 10, 1, '2017-09-13 07:47:30'),
(52, 891, '1', 1.83333, 14, 1, '2017-09-13 07:47:30'),
(63, 394, '1', -0.03, 18, 0, '2017-09-13 07:47:31'),
(36, 1216, '4', 0.00520833, 23, 1, '2017-09-13 07:47:31'),
(34, 1217, '3', 1.2, 12, 1, '2017-09-13 07:47:31'),
(70, 365, '3', 1.08, 8, 1, '2017-09-13 07:47:31'),
(56, 2612, '2', -0.541875, 23, 0, '2017-09-13 07:47:32'),
(59, 1218, '0', -0.0075, 20, 0, '2017-09-13 07:47:33'),
(42, 1210, '3', -0.0833333, 20, 0, '2017-09-13 07:47:33'),
(66, 1276, '0', 0, 10, -1, '2017-09-13 07:47:34'),
(44, 1595, '0', 0, 44, -1, '2017-09-13 07:47:35'),
(64, 2615, '3', -0.541875, 23, 0, '2017-09-13 07:47:35'),
(51, 1458, '0', 0, 5, -1, '2017-09-13 07:47:35'),
(44, 1589, '0', 0, 44, -1, '2017-09-13 07:47:35'),
(48, 722, '3', 0.453704, 22, 1, '2017-09-13 07:47:36'),
(50, 367, '1', -1.2675, 7, 0, '2017-09-13 07:47:36'),
(65, 2627, '2', 2.25333, 8, 1, '2017-09-13 07:47:37'),
(57, 1451, '1', 0.148148, 28, 1, '2017-09-13 07:47:37'),
(55, 2629, '2', -1.85, 23, 0, '2017-09-13 07:47:38'),
(47, 737, '0', -0.001875, 40, 0, '2017-09-13 07:47:38'),
(60, 859, '4', 0.198367, 52, 1, '2017-09-13 07:47:39'),
(56, 2606, '1', 2.04187, 7, 1, '2017-09-13 07:47:39'),
(45, 1297, '3', 1.92, 12, 1, '2017-09-13 07:47:40'),
(58, 1172, '1', -0.6075, 11, 0, '2017-09-13 07:47:40'),
(31, 1303, '1', 1.02083, 25, 1, '2017-09-13 07:47:41'),
(35, 1276, '3', -0.0263672, 29, 0, '2017-09-13 07:47:41'),
(41, 1227, '0', 0, 23, -1, '2017-09-13 07:47:41'),
(41, 1194, '0', 0, 23, -1, '2017-09-13 07:47:41'),
(62, 498, '2', 1.2675, 14, 1, '2017-09-13 07:47:41'),
(66, 1183, '2', 1.21488, 8, 1, '2017-09-13 07:47:42'),
(68, 1456, '1', 0.75, 20, 1, '2017-09-13 07:47:42'),
(50, 373, '1', 1.2675, 7, 1, '2017-09-13 07:47:43'),
(71, 1195, '4', 0.12, 16, 1, '2017-09-13 07:47:44'),
(45, 1173, '2', 1.92, 4, 1, '2017-09-13 07:47:44'),
(39, 1194, '1', 0.0612245, 24, 1, '2017-09-13 07:47:46'),
(37, 1109, '0', -0.0075, 20, 0, '2017-09-13 07:47:46'),
(64, 2614, '4', 1.57687, 11, 1, '2017-09-13 07:47:46'),
(61, 2143, '1', -0.676875, 21, 0, '2017-09-13 07:47:47'),
(57, 1452, '3', -1.57687, 11, 0, '2017-09-13 07:47:49'),
(43, 1465, '0', 0, 24, -1, '2017-09-13 07:47:49'),
(62, 736, '2', -1.75433, 8, 0, '2017-09-13 07:47:49'),
(42, 1172, '4', 0.0675, 17, 1, '2017-09-13 07:47:50'),
(53, 1460, '2', -0.141777, 36, 0, '2017-09-13 07:47:50'),
(54, 1308, '3', 0.6075, 33, 1, '2017-09-13 07:47:50'),
(49, 1456, '1', 0.1875, 30, 1, '2017-09-13 07:47:50'),
(40, 1257, '4', 0.125, 46, 1, '2017-09-13 07:47:51'),
(45, 1177, '2', 1.58678, 6, 1, '2017-09-13 07:47:51'),
(34, 1284, '0', -0.15, 20, 0, '2017-09-13 07:47:51'),
(38, 2635, '0', 0, 35, -1, '2017-09-13 07:47:51'),
(37, 1122, '4', 1.47, 6, 1, '2017-09-13 07:47:52'),
(71, 1196, '4', 1.33333, 8, 1, '2017-09-13 07:47:52'),
(47, 487, '2', -1.17188, 15, 0, '2017-09-13 07:47:52'),
(66, 1292, '1', 1.20333, 11, 1, '2017-09-13 07:47:54'),
(65, 2623, '4', -2.15, 17, 0, '2017-09-13 07:47:55'),
(41, 1198, '4', 0.27, 14, 1, '2017-09-13 07:47:55'),
(36, 1185, '2', -0.0612245, 24, 0, '2017-09-13 07:47:55'),
(43, 1457, '4', 1.92, 8, 1, '2017-09-13 07:47:57'),
(35, 1183, '2', 0.154959, 17, 1, '2017-09-13 07:47:58'),
(69, 1466, '4', -0.0432, 44, 0, '2017-09-13 07:47:58'),
(70, 2431, '1', -1.49752, 27, 0, '2017-09-13 07:47:59'),
(52, 1683, '0', 0, 28, -1, '2017-09-13 07:47:59'),
(33, 2154, '1', -0.0833333, 30, 0, '2017-09-13 07:47:59'),
(38, 2618, '3', 2.25333, 8, 1, '2017-09-13 07:47:59'),
(51, 1451, '1', 0.280093, 25, 1, '2017-09-13 07:48:01'),
(54, 597, '0', 0, 11, -1, '2017-09-13 07:48:01'),
(71, 1169, '2', 1.17188, 9, 1, '2017-09-13 07:48:01'),
(31, 1317, '3', 1.33333, 20, 1, '2017-09-13 07:48:01'),
(57, 1462, '3', -1.36688, 13, 0, '2017-09-13 07:48:02'),
(39, 1195, '4', 0.03, 18, 1, '2017-09-13 07:48:03'),
(50, 399, '0', -0.0075, 20, 0, '2017-09-13 07:48:04'),
(58, 1210, '0', -0.00520833, 24, 0, '2017-09-13 07:48:04'),
(48, 721, '1', 0.1875, 30, 1, '2017-09-13 07:48:05'),
(66, 1197, '1', 0.75, 12, 1, '2017-09-13 07:48:05'),
(71, 1177, '2', 1.79132, 5, 1, '2017-09-13 07:48:06'),
(68, 1451, '1', 0.280093, 25, 1, '2017-09-13 07:48:08'),
(45, 1281, '3', 1.2, 18, 1, '2017-09-13 07:48:09'),
(69, 1458, '3', 1.44676, 11, 1, '2017-09-13 07:48:09'),
(55, 2624, '2', 1.5, 30, 1, '2017-09-13 07:48:09'),
(62, 721, '1', 0.75, 20, 1, '2017-09-13 07:48:09'),
(47, 465, '3', -0.653333, 16, 0, '2017-09-13 07:48:09'),
(57, 3035, '2', 1.53061, 8, 1, '2017-09-13 07:48:10'),
(59, 1261, '0', -0.00207756, 38, 0, '2017-09-13 07:48:11'),
(42, 1216, '0', 0, 21, -1, '2017-09-13 07:48:12'),
(37, 1139, '0', -0.0075, 20, 0, '2017-09-13 07:48:12'),
(67, 1310, '4', 1.86501, 11, 1, '2017-09-13 07:48:15'),
(39, 1174, '3', 0.869823, 12, 1, '2017-09-13 07:48:15'),
(61, 2159, '0', 0, 28, -1, '2017-09-13 07:48:16'),
(62, 490, '2', 2.08333, 6, 1, '2017-09-13 07:48:16'),
(38, 2629, '2', -1.47, 18, 0, '2017-09-13 07:48:17'),
(53, 1454, '3', -0.1875, 27, 0, '2017-09-13 07:48:17'),
(65, 2635, '4', -1.14083, 23, 0, '2017-09-13 07:48:18'),
(59, 1173, '2', 1.2675, 7, 1, '2017-09-13 07:48:18'),
(41, 1210, '3', -0.00520833, 23, 0, '2017-09-13 07:48:19'),
(54, 603, '1', 1.28254, 18, 1, '2017-09-13 07:48:19'),
(70, 388, '0', -0.0075, 20, 0, '2017-09-13 07:48:19'),
(51, 1460, '0', 0, 20, -1, '2017-09-13 07:48:20'),
(46, 867, '3', 0.100833, 49, 1, '2017-09-13 07:48:20'),
(56, 2602, '0', -0.001875, 40, 0, '2017-09-13 07:48:20'),
(37, 2416, '3', 2.47934, 8, 1, '2017-09-13 07:48:20'),
(35, 1169, '2', 0.0208333, 22, 1, '2017-09-13 07:48:21'),
(43, 1452, '2', 0.541875, 23, 1, '2017-09-13 07:48:21'),
(68, 1453, '1', 1.6428, 13, 1, '2017-09-13 07:48:21'),
(50, 1116, '2', -0.03, 18, 0, '2017-09-13 07:48:22'),
(31, 854, '1', 1.47, 21, 1, '2017-09-13 07:48:22'),
(61, 2144, '4', 2.1888, 7, 1, '2017-09-13 07:48:22'),
(71, 1263, '1', 1.08, 16, 1, '2017-09-13 07:48:23'),
(45, 1220, '3', -1.39286, 15, 0, '2017-09-13 07:48:24'),
(52, 876, '4', -1.7, 26, 0, '2017-09-13 07:48:25'),
(67, 601, '2', -1.93718, 11, 0, '2017-09-13 07:48:26'),
(64, 2610, '0', -0.001875, 40, 0, '2017-09-13 07:48:26'),
(70, 1140, '1', 1.2675, 7, 1, '2017-09-13 07:48:26'),
(34, 1200, '0', -0.0833333, 36, 0, '2017-09-13 07:48:27'),
(40, 1202, '0', -0.0833333, 36, 0, '2017-09-13 07:48:27'),
(44, 1571, '0', -0.00110947, 52, 0, '2017-09-13 07:48:28'),
(49, 1455, '4', -0.0075, 38, 0, '2017-09-13 07:48:28'),
(58, 1227, '0', -0.00520833, 24, 0, '2017-09-13 07:48:28'),
(61, 2160, '3', 1.76333, 7, 1, '2017-09-13 07:48:29'),
(51, 3035, '2', 1.38138, 9, 1, '2017-09-13 07:48:29'),
(47, 728, '2', -0.67313, 20, 0, '2017-09-13 07:48:30'),
(65, 2616, '1', -1.92, 12, 0, '2017-09-13 07:48:30'),
(31, 403, '4', 2.1675, 9, 1, '2017-09-13 07:48:31'),
(64, 2603, '0', 0, 6, -1, '2017-09-13 07:48:32'),
(40, 1191, '3', 2.35714, 6, 1, '2017-09-13 07:48:32'),
(33, 2150, '4', -0.033241, 34, 0, '2017-09-13 07:48:34'),
(63, 2411, '0', 0, 63, -1, '2017-09-13 07:48:34'),
(42, 1227, '2', -0.00520833, 23, 0, '2017-09-13 07:48:34'),
(53, 1450, '2', -0.835648, 17, 0, '2017-09-13 07:48:35'),
(56, 2605, '2', 1.2675, 14, 1, '2017-09-13 07:48:35'),
(57, 3004, '3', 0.0833333, 25, 1, '2017-09-13 07:48:35'),
(71, 1184, '4', 0.75, 12, 1, '2017-09-13 07:48:35'),
(69, 1465, '1', 0.00382653, 27, 1, '2017-09-13 07:48:36'),
(38, 2616, '1', -1.40083, 19, 0, '2017-09-13 07:48:36'),
(48, 509, '1', 0.0578704, 31, 1, '2017-09-13 07:48:36'),
(61, 2155, '2', 2.08333, 7, 1, '2017-09-13 07:48:37'),
(62, 465, '3', -0.27, 21, 0, '2017-09-13 07:48:37'),
(37, 392, '1', -0.0675, 17, 0, '2017-09-13 07:48:37'),
(65, 2620, '4', 2.25333, 8, 1, '2017-09-13 07:48:38'),
(67, 606, '1', -1.92, 12, 0, '2017-09-13 07:48:38'),
(59, 1197, '3', -0.0833333, 20, 0, '2017-09-13 07:48:38'),
(39, 1184, '0', -0.00520833, 24, 0, '2017-09-13 07:48:39'),
(41, 1276, '1', 0.354492, 21, 1, '2017-09-13 07:48:39'),
(56, 2601, '2', 2.29688, 5, 1, '2017-09-13 07:48:39'),
(45, 1174, '3', 0.443787, 16, 1, '2017-09-13 07:48:40'),
(55, 2625, '2', -1.45, 31, 0, '2017-09-13 07:48:40'),
(71, 1186, '3', 1.85204, 6, 1, '2017-09-13 07:48:41'),
(51, 3044, '3', 0.75, 12, 1, '2017-09-13 07:48:41'),
(36, 1270, '0', -0.00141777, 46, 0, '2017-09-13 07:48:41'),
(36, 1172, '0', 0, 46, -1, '2017-09-13 07:48:42'),
(38, 2617, '1', 2.43, 6, 1, '2017-09-13 07:48:43'),
(42, 1197, '1', 1.17188, 9, 1, '2017-09-13 07:48:43'),
(70, 390, '4', 0.0675, 17, 1, '2017-09-13 07:48:43'),
(66, 1261, '0', -0.00207756, 38, 0, '2017-09-13 07:48:44'),
(62, 727, '2', 1.81481, 8, 1, '2017-09-13 07:48:45'),
(57, 1450, '4', 1.44676, 11, 1, '2017-09-13 07:48:46'),
(68, 1458, '1', -0.280093, 25, 0, '2017-09-13 07:48:47'),
(61, 2152, '2', 1.78255, 11, 1, '2017-09-13 07:48:48'),
(58, 1195, '0', -0.0075, 20, 0, '2017-09-13 07:48:48'),
(69, 2929, '4', 0.75, 12, 1, '2017-09-13 07:48:49'),
(39, 1183, '2', 0.892562, 10, 1, '2017-09-13 07:48:49'),
(37, 2410, '2', 2.20408, 12, 1, '2017-09-13 07:48:49'),
(43, 1464, '2', 0.421875, 30, 1, '2017-09-13 07:48:50'),
(44, 1582, '2', 0.680272, 22, 1, '2017-09-13 07:48:51'),
(51, 1459, '2', 1.80187, 9, 1, '2017-09-13 07:48:51'),
(31, 600, '3', 1.2398, 20, 1, '2017-09-13 07:48:51'),
(45, 1284, '3', 1.35, 11, 1, '2017-09-13 07:48:51'),
(47, 726, '1', 0.373702, 22, 1, '2017-09-13 07:48:51'),
(68, 3039, '1', 1.43787, 8, 1, '2017-09-13 07:48:54'),
(41, 1292, '1', 0.75, 15, 1, '2017-09-13 07:48:55'),
(50, 2419, '2', 1.57687, 33, 1, '2017-09-13 07:48:55'),
(65, 2634, '3', -1.47, 18, 0, '2017-09-13 07:48:56'),
(52, 881, '1', -2.07, 31, 0, '2017-09-13 07:48:56'),
(70, 2432, '3', -2.33281, 13, 0, '2017-09-13 07:48:56'),
(55, 2626, '2', -2.15, 17, 0, '2017-09-13 07:48:57'),
(34, 2610, '4', -0.9075, 18, 0, '2017-09-13 07:48:58'),
(39, 1197, '3', -1.17188, 9, 0, '2017-09-13 07:48:58'),
(36, 1291, '1', -0.03, 18, 0, '2017-09-13 07:48:59'),
(35, 1261, '0', -0.00207756, 38, 0, '2017-09-13 07:48:59'),
(60, 2401, '2', -0.22314, 80, 0, '2017-09-13 07:48:59'),
(71, 1198, '3', -0.0075, 19, 0, '2017-09-13 07:49:00'),
(69, 1459, '1', -1.47, 12, 0, '2017-09-13 07:49:01'),
(49, 1450, '4', 0.0208333, 33, 1, '2017-09-13 07:49:01'),
(66, 1263, '0', 0, 18, -1, '2017-09-13 07:49:02'),
(37, 2420, '3', 2.24251, 13, 1, '2017-09-13 07:49:03'),
(59, 1169, '0', -0.00520833, 24, 0, '2017-09-13 07:49:03'),
(67, 597, '2', 0.865226, 25, 1, '2017-09-13 07:49:04'),
(56, 2628, '3', -1.08, 24, 0, '2017-09-13 07:49:04'),
(53, 1451, '1', 0.0833333, 30, 1, '2017-09-13 07:49:04'),
(39, 1196, '4', 1.50521, 7, 1, '2017-09-13 07:49:05'),
(70, 382, '4', 0.9075, 9, 1, '2017-09-13 07:49:05'),
(54, 611, '2', -0.0108, 47, 0, '2017-09-13 07:49:06'),
(42, 1276, '1', 0.292969, 22, 1, '2017-09-13 07:49:06'),
(48, 465, '0', -0.00333333, 30, 0, '2017-09-13 07:49:06'),
(50, 1144, '2', -1.2, 12, 0, '2017-09-13 07:49:07'),
(58, 1292, '2', -0.333333, 20, 0, '2017-09-13 07:49:08'),
(34, 2612, '2', -1.57687, 11, 0, '2017-09-13 07:49:09'),
(51, 1449, '1', -0.826875, 19, 0, '2017-09-13 07:49:10'),
(46, 346, '1', 0.0344388, 50, 1, '2017-09-13 07:49:10'),
(47, 485, '1', 1.11153, 18, 1, '2017-09-13 07:49:10'),
(71, 1183, '2', 0.892562, 10, 1, '2017-09-13 07:49:10'),
(41, 1170, '2', 0.333333, 16, 1, '2017-09-13 07:49:10'),
(43, 1451, '1', 0.592593, 20, 1, '2017-09-13 07:49:11'),
(65, 2630, '2', 1.61333, 16, 1, '2017-09-13 07:49:11'),
(33, 2158, '1', 0.157552, 37, 1, '2017-09-13 07:49:12'),
(62, 719, '3', 0.1875, 27, 1, '2017-09-13 07:49:12'),
(64, 2607, '0', -0.001875, 40, 0, '2017-09-13 07:49:12'),
(34, 2601, '2', 2.29688, 5, 1, '2017-09-13 07:49:14'),
(67, 1124, '1', -2.00083, 11, 0, '2017-09-13 07:49:15'),
(69, 1454, '2', 1.12037, 14, 1, '2017-09-13 07:49:15'),
(37, 364, '2', 0.1875, 15, 1, '2017-09-13 07:49:17'),
(70, 1109, '4', -0.6075, 11, 0, '2017-09-13 07:49:17'),
(31, 1318, '2', 0.860969, 26, 1, '2017-09-13 07:49:18'),
(41, 1191, '3', 1.6875, 7, 1, '2017-09-13 07:49:18'),
(50, 2434, '1', 2.7, 11, 1, '2017-09-13 07:49:18'),
(61, 2147, '4', 0.700833, 31, 1, '2017-09-13 07:49:19'),
(42, 1174, '3', 0.75, 13, 1, '2017-09-13 07:49:19'),
(68, 1467, '3', 1.02083, 25, 1, '2017-09-13 07:49:19'),
(39, 1169, '2', 0.520833, 14, 1, '2017-09-13 07:49:20'),
(53, 3035, '2', 0.646684, 15, 1, '2017-09-13 07:49:20'),
(36, 1210, '1', 0.0208333, 22, 1, '2017-09-13 07:49:21'),
(63, 2419, '2', 1.11021, 47, 1, '2017-09-13 07:49:21'),
(65, 2633, '3', 2.00083, 11, 1, '2017-09-13 07:49:22'),
(71, 1190, '4', 0.979592, 12, 1, '2017-09-13 07:49:22'),
(40, 1265, '0', 0, 49, -1, '2017-09-13 07:49:23'),
(59, 1172, '0', -0.0075, 20, 0, '2017-09-13 07:49:23'),
(67, 615, '2', 2.1675, 9, 1, '2017-09-13 07:49:24'),
(44, 1578, '3', -0.204159, 34, 0, '2017-09-13 07:49:25'),
(53, 3044, '3', 1.6875, 6, 1, '2017-09-13 07:49:25'),
(62, 487, '4', 1.36688, 13, 1, '2017-09-13 07:49:26'),
(68, 1459, '3', -2.04187, 7, 0, '2017-09-13 07:49:26'),
(35, 1185, '2', -0.00382653, 27, 0, '2017-09-13 07:49:26'),
(66, 1210, '0', -0.00520833, 24, 0, '2017-09-13 07:49:27'),
(46, 874, '1', 1.45504, 17, 1, '2017-09-13 07:49:27'),
(70, 364, '2', 1.08, 8, 1, '2017-09-13 07:49:27'),
(58, 1194, '1', 0.244898, 20, 1, '2017-09-13 07:49:27'),
(37, 1117, '2', 0.6075, 11, 1, '2017-09-13 07:49:28'),
(61, 2145, '1', -1.28254, 9, 0, '2017-09-13 07:49:28'),
(57, 1463, '3', -0.00154959, 43, 0, '2017-09-13 07:49:30'),
(39, 1189, '2', -1.10587, 11, 0, '2017-09-13 07:49:30'),
(36, 1177, '2', 1.04752, 9, 1, '2017-09-13 07:49:31'),
(38, 2622, '1', -0.12, 48, 0, '2017-09-13 07:49:31'),
(34, 2615, '1', 0.9075, 18, 1, '2017-09-13 07:49:32'),
(48, 727, '2', 0.231481, 26, 1, '2017-09-13 07:49:32'),
(41, 1219, '3', 0.303719, 15, 1, '2017-09-13 07:49:32'),
(54, 1301, '0', 0, 26, -1, '2017-09-13 07:49:32'),
(66, 1186, '3', 1.85204, 6, 1, '2017-09-13 07:49:33'),
(52, 890, '0', -0.0833333, 36, 0, '2017-09-13 07:49:33'),
(50, 2445, '1', -2.65385, 15, 0, '2017-09-13 07:49:34'),
(47, 731, '3', -0.280093, 25, 0, '2017-09-13 07:49:34'),
(51, 1453, '1', 0.75, 25, 1, '2017-09-13 07:49:34'),
(70, 1105, '2', 0.75, 10, 1, '2017-09-13 07:49:34'),
(56, 2632, '3', 0.653333, 32, 1, '2017-09-13 07:49:36'),
(37, 2400, '3', 2.35347, 8, 1, '2017-09-13 07:49:36'),
(42, 1194, '2', -0.382653, 18, 0, '2017-09-13 07:49:37'),
(43, 1454, '3', -0.113426, 29, 0, '2017-09-13 07:49:40'),
(45, 1287, '0', -0.0625, 48, 0, '2017-09-13 07:49:40'),
(34, 2614, '4', 1.92, 8, 1, '2017-09-13 07:49:40'),
(66, 1177, '2', 1.21488, 8, 1, '2017-09-13 07:49:40'),
(62, 734, '2', 0.75, 15, 1, '2017-09-13 07:49:41'),
(46, 345, '2', -1.6875, 15, 0, '2017-09-13 07:49:41'),
(65, 2626, '3', 2.05, 19, 1, '2017-09-13 07:49:41'),
(38, 2625, '2', -2.08333, 10, 0, '2017-09-13 07:49:42'),
(33, 2143, '1', -0.1875, 30, 0, '2017-09-13 07:49:42'),
(64, 2632, '3', 0.75, 30, 1, '2017-09-13 07:49:42'),
(40, 1281, '3', 1.1, 19, 1, '2017-09-13 07:49:42'),
(47, 472, '1', 2.04187, 7, 1, '2017-09-13 07:49:42'),
(35, 1170, '2', 0.333333, 16, 1, '2017-09-13 07:49:42'),
(58, 1291, '4', 0.1875, 15, 1, '2017-09-13 07:49:43'),
(68, 1462, '1', 0.9075, 18, 1, '2017-09-13 07:49:44'),
(50, 1155, '1', -1.2, 12, 0, '2017-09-13 07:49:45'),
(55, 2618, '2', -0.6, 48, 0, '2017-09-13 07:49:46'),
(69, 1456, '1', 0.151875, 31, 1, '2017-09-13 07:49:46'),
(49, 1453, '4', -0.03, 45, 0, '2017-09-13 07:49:47'),
(67, 1089, '2', -1.14083, 23, 0, '2017-09-13 07:49:47'),
(34, 2608, '3', 2.04187, 7, 1, '2017-09-13 07:49:48'),
(70, 2419, '2', 2.38521, 13, 1, '2017-09-13 07:49:48'),
(63, 2408, '3', 1.54395, 26, 1, '2017-09-13 07:49:48'),
(31, 852, '0', 0, 31, -1, '2017-09-13 07:49:49'),
(61, 2149, '2', -0.600416, 21, 0, '2017-09-13 07:49:49'),
(54, 601, '4', 1.45504, 17, 1, '2017-09-13 07:49:49'),
(66, 1291, '4', 0.9075, 9, 1, '2017-09-13 07:49:50'),
(40, 1293, '2', 2, 8, 1, '2017-09-13 07:49:50'),
(65, 2629, '1', 2.6, 8, 1, '2017-09-13 07:49:50'),
(43, 1459, '2', 1.6875, 10, 1, '2017-09-13 07:49:50'),
(53, 1458, '0', 0, 27, -1, '2017-09-13 07:49:53'),
(59, 1203, '4', 0, 30, 0, '2017-09-13 07:49:53'),
(39, 1191, '3', 0.0956633, 23, 1, '2017-09-13 07:49:54'),
(47, 723, '1', 1.33333, 12, 1, '2017-09-13 07:49:54'),
(36, 1169, '2', 0, 24, 1, '2017-09-13 07:49:54'),
(34, 2613, '4', 2.04187, 7, 1, '2017-09-13 07:49:54'),
(35, 1186, '3', 0.979592, 12, 1, '2017-09-13 07:49:54'),
(50, 393, '1', 0.6075, 11, 1, '2017-09-13 07:49:56'),
(67, 1303, '1', 2.1675, 9, 1, '2017-09-13 07:49:56'),
(46, 865, '1', -1.6875, 15, 0, '2017-09-13 07:49:56'),
(69, 1461, '3', 1.83743, 10, 1, '2017-09-13 07:49:57'),
(60, 340, '3', 0.27, 56, 1, '2017-09-13 07:49:57'),
(65, 2621, '2', -2.6, 8, 0, '2017-09-13 07:49:57'),
(54, 1303, '1', 2.25333, 8, 1, '2017-09-13 07:49:58'),
(57, 1467, '3', 0.800833, 29, 1, '2017-09-13 07:49:59'),
(66, 1184, '4', 1.17188, 9, 1, '2017-09-13 07:49:59'),
(36, 1173, '2', 1.47, 6, 1, '2017-09-13 07:50:01'),
(52, 307, '2', -1.44643, 29, 0, '2017-09-13 07:50:02'),
(71, 1270, '4', 0.0694707, 39, 1, '2017-09-13 07:50:02'),
(65, 2618, '3', 2.75, 5, 1, '2017-09-13 07:50:02'),
(56, 2625, '3', 0.9075, 27, 1, '2017-09-13 07:50:03'),
(44, 1616, '2', 0.0907372, 38, 1, '2017-09-13 07:50:03'),
(61, 2158, '2', -1.41797, 15, 0, '2017-09-13 07:50:04'),
(55, 2622, '1', -2.05, 19, 0, '2017-09-13 07:50:04'),
(41, 1200, '4', 0.037037, 32, 1, '2017-09-13 07:50:04'),
(47, 734, '2', 1.20333, 11, 1, '2017-09-13 07:50:05'),
(45, 1257, '4', 1.4375, 25, 1, '2017-09-13 07:50:05'),
(43, 3004, '1', -0.75, 15, 0, '2017-09-13 07:50:05'),
(70, 1116, '4', 0.0675, 17, 1, '2017-09-13 07:50:06'),
(48, 485, '2', -0.204159, 34, 0, '2017-09-13 07:50:06'),
(35, 1173, '2', 0.48, 12, 1, '2017-09-13 07:50:06'),
(63, 1116, '4', 0.03, 18, 1, '2017-09-13 07:50:06'),
(51, 1450, '2', -0.037037, 32, 0, '2017-09-13 07:50:06'),
(60, 856, '1', -2.13574, 10, 0, '2017-09-13 07:50:06'),
(34, 2603, '1', 1.36688, 13, 1, '2017-09-13 07:50:07'),
(57, 1453, '1', 1.92, 10, 1, '2017-09-13 07:50:09'),
(65, 2625, '3', 2.65, 7, 1, '2017-09-13 07:50:09'),
(50, 379, '3', 0.3675, 13, 1, '2017-09-13 07:50:10'),
(68, 1464, '3', -0.688802, 25, 0, '2017-09-13 07:50:10'),
(39, 1171, '4', 0.0675, 17, 1, '2017-09-13 07:50:10'),
(59, 1291, '4', 0.03, 18, 1, '2017-09-13 07:50:11'),
(47, 720, '4', 2.12742, 6, 1, '2017-09-13 07:50:12'),
(34, 2607, '4', 2.43, 4, 1, '2017-09-13 07:50:12'),
(62, 732, '4', 0.0578704, 31, 1, '2017-09-13 07:50:12'),
(67, 1301, '3', 1.75854, 15, 1, '2017-09-13 07:50:12'),
(54, 606, '1', -1.76333, 14, 0, '2017-09-13 07:50:12'),
(36, 1196, '4', 0.75, 12, 1, '2017-09-13 07:50:12'),
(49, 3051, '0', -0.00443787, 26, 0, '2017-09-13 07:50:13'),
(63, 1110, '2', 1.47, 6, 1, '2017-09-13 07:50:13'),
(58, 1203, '0', -0.00333333, 30, 0, '2017-09-13 07:50:13'),
(38, 2624, '2', 0.653333, 32, 1, '2017-09-13 07:50:14'),
(50, 2403, '2', 2.61333, 6, 1, '2017-09-13 07:50:15'),
(52, 303, '2', 2.44286, 13, 1, '2017-09-13 07:50:15'),
(44, 1592, '1', -1.92, 12, 0, '2017-09-13 07:50:16'),
(33, 2181, '1', -1.3068, 34, 0, '2017-09-13 07:50:16'),
(51, 2929, '4', 1.02083, 10, 1, '2017-09-13 07:50:16'),
(55, 2632, '3', 1.92, 12, 1, '2017-09-13 07:50:16'),
(56, 2627, '2', 1.76333, 14, 1, '2017-09-13 07:50:17'),
(34, 2616, '4', 2.65, 7, 1, '2017-09-13 07:50:18'),
(69, 1467, '3', 1.20333, 22, 1, '2017-09-13 07:50:18'),
(66, 1195, '0', -0.0075, 20, 0, '2017-09-13 07:50:19'),
(62, 728, '4', -1.86981, 8, 0, '2017-09-13 07:50:19'),
(41, 1220, '2', 0.646684, 15, 1, '2017-09-13 07:50:20'),
(65, 2631, '4', -2.45, 11, 0, '2017-09-13 07:50:21'),
(68, 1449, '1', -1.57687, 11, 0, '2017-09-13 07:50:21'),
(53, 1464, '4', -0.520833, 28, 0, '2017-09-13 07:50:21'),
(70, 371, '1', -0.12, 16, 0, '2017-09-13 07:50:22'),
(47, 739, '1', 2.16667, 10, 1, '2017-09-13 07:50:22'),
(37, 2453, '3', -2.00735, 45, 0, '2017-09-13 07:50:22'),
(42, 1270, '3', -0.00567108, 44, 0, '2017-09-13 07:50:22'),
(35, 1172, '1', -0.1875, 15, 0, '2017-09-13 07:50:22'),
(43, 3035, '2', 0.382653, 18, 1, '2017-09-13 07:50:24'),
(49, 1449, '1', -1.57687, 11, 0, '2017-09-13 07:50:24'),
(51, 3008, '1', -1.92857, 10, 0, '2017-09-13 07:50:26'),
(70, 2403, '2', 2.67593, 5, 1, '2017-09-13 07:50:26'),
(63, 2404, '1', 2.15643, 14, 1, '2017-09-13 07:50:27'),
(65, 2632, '3', 2.6, 8, 1, '2017-09-13 07:50:28'),
(69, 3004, '2', -1.20333, 11, 0, '2017-09-13 07:50:29'),
(45, 1202, '3', -0.916667, 25, 0, '2017-09-13 07:50:30'),
(71, 1261, '2', -0.207756, 28, 0, '2017-09-13 07:50:30'),
(58, 1170, '2', 0.255208, 17, 1, '2017-09-13 07:50:30'),
(48, 464, '1', -0.00443787, 25, 0, '2017-09-13 07:50:31'),
(46, 1639, '4', 0.916205, 34, 1, '2017-09-13 07:50:31'),
(57, 1459, '0', 0, 22, -1, '2017-09-13 07:50:31'),
(66, 1190, '4', 0.979592, 12, 1, '2017-09-13 07:50:31'),
(59, 1195, '0', -0.0075, 20, 0, '2017-09-13 07:50:31'),
(59, 1185, '4', 0.244898, 20, 1, '2017-09-13 07:50:31'),
(62, 485, '1', 1.63894, 12, 1, '2017-09-13 07:50:32'),
(61, 2180, '1', -0.00382653, 27, 0, '2017-09-13 07:50:32'),
(50, 2451, '2', -2.64706, 16, 0, '2017-09-13 07:50:32'),
(54, 853, '4', -1.33333, 20, 0, '2017-09-13 07:50:33'),
(51, 1457, '4', 2.04187, 7, 1, '2017-09-13 07:50:33'),
(34, 2623, '3', -2.25, 15, 0, '2017-09-13 07:50:33'),
(70, 378, '1', 1.08, 8, 1, '2017-09-13 07:50:34'),
(38, 2623, '3', -1.2675, 21, 0, '2017-09-13 07:50:34'),
(37, 1130, '3', -0.3675, 13, 0, '2017-09-13 07:50:35'),
(65, 2852, '2', 2.65, 7, 1, '2017-09-13 07:50:35'),
(50, 364, '2', 1.92, 4, 1, '2017-09-13 07:50:36'),
(33, 2165, '4', -0.75, 21, 0, '2017-09-13 07:50:37'),
(62, 723, '1', 2.22454, 5, 1, '2017-09-13 07:50:37'),
(47, 738, '1', -1.5, 17, 0, '2017-09-13 07:50:38'),
(40, 1269, '0', -0.0625, 48, 0, '2017-09-13 07:50:38'),
(43, 2929, '4', 0.421875, 15, 1, '2017-09-13 07:50:39'),
(61, 2154, '4', -1.94676, 7, 0, '2017-09-13 07:50:39'),
(41, 1284, '0', -0.0075, 20, 0, '2017-09-13 07:50:40'),
(59, 1170, '2', 1.33333, 8, 1, '2017-09-13 07:50:40'),
(66, 1194, '1', 1.38138, 9, 1, '2017-09-13 07:50:40'),
(42, 1190, '4', 0.309949, 19, 1, '2017-09-13 07:50:42'),
(64, 2635, '0', -0.000833333, 60, 0, '2017-09-13 07:50:42'),
(58, 1190, '4', 0.979592, 12, 1, '2017-09-13 07:50:42'),
(62, 738, '3', -2.38235, 7, 0, '2017-09-13 07:50:44'),
(54, 850, '3', 1.92, 12, 1, '2017-09-13 07:50:45'),
(53, 1465, '1', 0.0956633, 23, 1, '2017-09-13 07:50:45'),
(55, 2621, '0', 0, 28, -1, '2017-09-13 07:50:45'),
(50, 1157, '1', 1.65, 9, 1, '2017-09-13 07:50:45'),
(61, 2161, '3', 1.89187, 7, 1, '2017-09-13 07:50:46'),
(68, 1460, '1', 0.625236, 25, 1, '2017-09-13 07:50:46'),
(70, 385, '1', 0.48, 12, 1, '2017-09-13 07:50:46'),
(52, 918, '3', 2.03125, 31, 1, '2017-09-13 07:50:46'),
(39, 1202, '0', -0.00231481, 36, 0, '2017-09-13 07:50:47'),
(38, 2632, '0', 0, 12, -1, '2017-09-13 07:50:47'),
(46, 923, '4', 1.95287, 17, 1, '2017-09-13 07:50:47'),
(65, 2816, '4', 2.58532, 12, 1, '2017-09-13 07:50:48'),
(45, 1175, '4', 1.40625, 17, 1, '2017-09-13 07:50:48'),
(36, 1263, '3', -0.03, 36, 0, '2017-09-13 07:50:48'),
(48, 735, '4', 0.403333, 19, 1, '2017-09-13 07:50:50'),
(55, 2620, '4', 2.75, 5, 1, '2017-09-13 07:50:50'),
(43, 1461, '3', 1.63894, 12, 1, '2017-09-13 07:50:50'),
(62, 718, '1', 1.76333, 7, 1, '2017-09-13 07:50:51'),
(31, 602, '2', 0.0065918, 61, 1, '2017-09-13 07:50:51'),
(64, 2627, '0', 0, 9, -1, '2017-09-13 07:50:51'),
(38, 2627, '2', 2.52083, 5, 1, '2017-09-13 07:50:52'),
(34, 2633, '3', 2.05, 19, 1, '2017-09-13 07:50:52'),
(59, 1186, '3', 0.860969, 13, 1, '2017-09-13 07:50:53'),
(61, 2167, '1', -2.1888, 7, 0, '2017-09-13 07:50:53'),
(57, 1457, '4', 0.541875, 23, 1, '2017-09-13 07:50:54'),
(71, 1210, '0', -0.00520833, 24, 0, '2017-09-13 07:50:55'),
(44, 1566, '3', 0.0694707, 39, 1, '2017-09-13 07:50:55'),
(37, 389, '0', -0.0075, 20, 0, '2017-09-13 07:50:55'),
(52, 309, '4', 2.5, 10, 1, '2017-09-13 07:50:56'),
(34, 2617, '1', 2.8, 4, 1, '2017-09-13 07:50:56'),
(51, 2933, '0', -0.125, 24, 0, '2017-09-13 07:50:57'),
(67, 609, '2', 0.163333, 46, 1, '2017-09-13 07:50:57'),
(47, 747, '3', -1.25, 21, 0, '2017-09-13 07:50:59'),
(40, 1294, '3', 0.375, 21, 1, '2017-09-13 07:50:59'),
(41, 1199, '3', 0.421875, 20, 1, '2017-09-13 07:51:00'),
(70, 380, '1', 0.27, 14, 1, '2017-09-13 07:51:00'),
(57, 3044, '3', 1.6875, 6, 1, '2017-09-13 07:51:01'),
(68, 1463, '2', 1.3032, 15, 1, '2017-09-13 07:51:02'),
(48, 725, '1', -1.25606, 12, 0, '2017-09-13 07:51:02'),
(53, 1452, '1', -0.991875, 17, 0, '2017-09-13 07:51:02'),
(60, 872, '3', -0.0208333, 55, 0, '2017-09-13 07:51:02'),
(58, 1218, '0', -0.0075, 20, 0, '2017-09-13 07:51:02'),
(56, 2626, '1', -0.1875, 45, 0, '2017-09-13 07:51:03'),
(65, 2734, '3', 2.43962, 16, 1, '2017-09-13 07:51:04'),
(42, 1183, '0', -0.00619835, 22, 0, '2017-09-13 07:51:04'),
(43, 1463, '2', 1.3032, 15, 1, '2017-09-13 07:51:05'),
(45, 1217, '2', -0.3, 18, 0, '2017-09-13 07:51:05'),
(36, 1198, '4', 0.0675, 17, 1, '2017-09-13 07:51:06'),
(38, 2619, '3', 1.76333, 14, 1, '2017-09-13 07:51:06'),
(61, 2177, '1', 1.14446, 13, 1, '2017-09-13 07:51:06'),
(54, 622, '2', 1.20333, 22, 1, '2017-09-13 07:51:07'),
(39, 1284, '0', -0.0075, 20, 0, '2017-09-13 07:51:07'),
(34, 2626, '3', 2.45, 11, 1, '2017-09-13 07:51:07'),
(71, 1174, '3', 0.75, 13, 1, '2017-09-13 07:51:07'),
(69, 1463, '4', -0.0557851, 38, 0, '2017-09-13 07:51:08'),
(44, 1574, '1', 1.76881, 13, 1, '2017-09-13 07:51:08'),
(57, 2929, '4', 1.33333, 8, 1, '2017-09-13 07:51:09'),
(59, 1198, '4', 0.03, 18, 1, '2017-09-13 07:51:11'),
(64, 2626, '2', -1.33333, 20, 0, '2017-09-13 07:51:11'),
(47, 730, '1', -1.33333, 12, 0, '2017-09-13 07:51:12'),
(44, 1559, '4', 2.50095, 4, 1, '2017-09-13 07:51:12'),
(49, 1467, '3', 0.12, 48, 1, '2017-09-13 07:51:12'),
(35, 1265, '1', -0.00110947, 51, 0, '2017-09-13 07:51:13'),
(50, 2456, '3', -2.33077, 29, 0, '2017-09-13 07:51:13'),
(37, 380, '2', -0.03, 18, 0, '2017-09-13 07:51:14'),
(69, 3044, '3', 1.6875, 6, 1, '2017-09-13 07:51:14'),
(58, 1186, '3', 0.979592, 12, 1, '2017-09-13 07:51:14'),
(68, 3004, '2', -0.853333, 14, 0, '2017-09-13 07:51:15'),
(33, 2174, '0', -0.00207756, 38, 0, '2017-09-13 07:51:15'),
(62, 749, '1', -1.4375, 25, 0, '2017-09-13 07:51:16'),
(67, 619, '3', -1.40083, 19, 0, '2017-09-13 07:51:17'),
(70, 2422, '2', -2.29688, 16, 0, '2017-09-13 07:51:17'),
(47, 725, '4', 2.0346, 6, 1, '2017-09-13 07:51:18'),
(53, 2929, '4', 0.333333, 16, 1, '2017-09-13 07:51:18'),
(31, 624, '1', 0.853333, 28, 1, '2017-09-13 07:51:18'),
(65, 2729, '2', 2.47645, 15, 1, '2017-09-13 07:51:19'),
(36, 1174, '3', 0.639053, 14, 1, '2017-09-13 07:51:19'),
(45, 1191, '3', 1.5, 14, 1, '2017-09-13 07:51:20'),
(50, 1156, '3', -1.95, 7, 0, '2017-09-13 07:51:21'),
(44, 1594, '4', 1.98047, 9, 1, '2017-09-13 07:51:21'),
(42, 1170, '1', -0.255208, 17, 0, '2017-09-13 07:51:22'),
(70, 1137, '2', 1.6875, 5, 1, '2017-09-13 07:51:22'),
(52, 302, '4', -2.16667, 25, 0, '2017-09-13 07:51:22'),
(61, 2172, '1', -0.84083, 16, 0, '2017-09-13 07:51:22'),
(57, 1455, '1', 1.2675, 14, 1, '2017-09-13 07:51:23'),
(59, 1177, '2', 0.619835, 12, 1, '2017-09-13 07:51:23'),
(60, 1639, '4', 1.51454, 22, 1, '2017-09-13 07:51:25'),
(36, 1171, '4', 1.2675, 7, 1, '2017-09-13 07:51:26'),
(61, 2178, '1', -2.20408, 4, 0, '2017-09-13 07:51:26'),
(69, 1462, '1', 1.47, 12, 1, '2017-09-13 07:51:26'),
(37, 376, '1', -0.3675, 13, 0, '2017-09-13 07:51:26'),
(70, 363, '3', 1.92, 4, 1, '2017-09-13 07:51:26'),
(55, 2631, '3', 1.15, 37, 1, '2017-09-13 07:51:27'),
(71, 1297, '3', 1.33333, 20, 1, '2017-09-13 07:51:28'),
(41, 1208, '2', -0.5808, 28, 0, '2017-09-13 07:51:28'),
(68, 1452, '2', 1.47, 12, 1, '2017-09-13 07:51:28'),
(63, 2451, '3', 1.65441, 61, 1, '2017-09-13 07:51:28'),
(42, 1196, '4', 1.50521, 7, 1, '2017-09-13 07:51:29'),
(65, 2845, '4', -2.65665, 10, 0, '2017-09-13 07:51:29'),
(66, 1269, '0', -0.0625, 48, 0, '2017-09-13 07:51:29'),
(50, 1140, '1', 1.08, 8, 1, '2017-09-13 07:51:29'),
(61, 2163, '1', 2.37037, 4, 1, '2017-09-13 07:51:30'),
(38, 2631, '3', 1.08, 24, 1, '2017-09-13 07:51:31'),
(48, 718, '1', 0.00333333, 29, 1, '2017-09-13 07:51:31'),
(51, 1488, '2', 0.613636, 35, 1, '2017-09-13 07:51:32'),
(35, 1189, '1', -0.244898, 20, 0, '2017-09-13 07:51:34'),
(46, 857, '4', -0.140833, 47, 0, '2017-09-13 07:51:35'),
(37, 374, '4', 1.08, 8, 1, '2017-09-13 07:51:35'),
(68, 3035, '2', 1.6875, 7, 1, '2017-09-13 07:51:35'),
(66, 1219, '3', 2.18182, 6, 1, '2017-09-13 07:51:35'),
(43, 1478, '0', 0, 30, -1, '2017-09-13 07:51:36'),
(47, 745, '3', -1.575, 19, 0, '2017-09-13 07:51:37'),
(71, 1194, '1', 1.2398, 10, 1, '2017-09-13 07:51:38'),
(31, 598, '4', 1.40083, 19, 1, '2017-09-13 07:51:38'),
(55, 2634, '0', 0, 10, -1, '2017-09-13 07:51:38'),
(60, 858, '2', -1.76333, 14, 0, '2017-09-13 07:51:39'),
(45, 1219, '3', 0.409091, 19, 1, '2017-09-13 07:51:39'),
(34, 2631, '3', 1.4, 32, 1, '2017-09-13 07:51:39'),
(67, 624, '2', -1.20333, 22, 0, '2017-09-13 07:51:40'),
(57, 1458, '1', -0.75, 18, 0, '2017-09-13 07:51:40'),
(70, 401, '3', -0.1875, 15, 0, '2017-09-13 07:51:41'),
(68, 1457, '4', 2.04187, 7, 1, '2017-09-13 07:51:42'),
(53, 1459, '2', 0.48, 24, 1, '2017-09-13 07:51:42'),
(62, 731, '2', 0.231481, 26, 1, '2017-09-13 07:51:42'),
(49, 1454, '4', -0.0578704, 31, 0, '2017-09-13 07:51:43'),
(33, 2168, '2', -0.459357, 28, 0, '2017-09-13 07:51:43'),
(52, 308, '2', -2.05714, 22, 0, '2017-09-13 07:51:44'),
(69, 1453, '1', 1.1532, 19, 1, '2017-09-13 07:51:45'),
(43, 3008, '1', -2.03571, 9, 0, '2017-09-13 07:51:45'),
(66, 1287, '2', -2.3125, 11, 0, '2017-09-13 07:51:45'),
(70, 373, '2', -1.6875, 5, 0, '2017-09-13 07:51:46'),
(56, 2623, '2', 0.240833, 43, 1, '2017-09-13 07:51:46'),
(59, 1216, '0', -0.00520833, 24, 0, '2017-09-13 07:51:47'),
(71, 1293, '1', -1.875, 9, 0, '2017-09-13 07:51:47'),
(42, 1169, '2', 0.130208, 19, 1, '2017-09-13 07:51:48'),
(68, 3008, '1', -2.35714, 6, 0, '2017-09-13 07:51:48'),
(40, 1287, '0', -0.0625, 48, 0, '2017-09-13 07:51:48'),
(36, 1200, '3', -1.16667, 22, 0, '2017-09-13 07:51:48'),
(63, 1146, '0', -0.15, 20, 0, '2017-09-13 07:51:49'),
(46, 362, '4', -1.76333, 14, 0, '2017-09-13 07:51:49'),
(50, 1147, '3', 0, 20, 0, '2017-09-13 07:51:49'),
(70, 1117, '2', 1.92, 4, 1, '2017-09-13 07:51:51'),
(68, 1461, '3', 2.26843, 6, 1, '2017-09-13 07:51:53'),
(52, 306, '3', 2.51786, 9, 1, '2017-09-13 07:51:53'),
(46, 863, '2', 2.41142, 6, 1, '2017-09-13 07:51:55'),
(39, 1268, '0', -0.00130208, 48, 0, '2017-09-13 07:51:55'),
(37, 1152, '0', -0.15, 20, 0, '2017-09-13 07:51:55'),
(62, 724, '4', -1.08, 12, 0, '2017-09-13 07:51:55'),
(66, 1265, '3', -2.42308, 10, 0, '2017-09-13 07:51:56'),
(35, 1293, '2', 0.00520833, 23, 1, '2017-09-13 07:51:57'),
(43, 1450, '4', 1.33333, 12, 1, '2017-09-13 07:51:57'),
(51, 1478, '2', 1.05, 26, 1, '2017-09-13 07:51:58'),
(41, 1265, '1', -0.489275, 31, 0, '2017-09-13 07:51:58'),
(70, 402, '1', -1.08, 8, 0, '2017-09-13 07:51:58'),
(69, 3039, '1', 0.75, 13, 1, '2017-09-13 07:51:59'),
(52, 887, '1', 2.71875, 6, 1, '2017-09-13 07:51:59'),
(48, 731, '2', 0.148148, 28, 1, '2017-09-13 07:52:00'),
(67, 1318, '2', 1.2398, 20, 1, '2017-09-13 07:52:00'),
(58, 1270, '0', -0.00141777, 46, 0, '2017-09-13 07:52:00'),
(47, 498, '2', 0.541875, 23, 1, '2017-09-13 07:52:00'),
(36, 1220, '4', -0.860969, 13, 0, '2017-09-13 07:52:01'),
(62, 502, '1', -2.15643, 7, 0, '2017-09-13 07:52:02'),
(59, 1174, '3', 0.536982, 15, 1, '2017-09-13 07:52:02'),
(50, 1152, '2', 1.05, 13, 1, '2017-09-13 07:52:02'),
(55, 2633, '3', 1.6, 28, 1, '2017-09-13 07:52:05'),
(40, 1171, '4', 0.3, 18, 1, '2017-09-13 07:52:06'),
(54, 598, '4', 0.000833333, 59, 1, '2017-09-13 07:52:06'),
(57, 1465, '2', -0.0153061, 26, 0, '2017-09-13 07:52:07'),
(70, 392, '1', -0.9075, 9, 0, '2017-09-13 07:52:07'),
(71, 1291, '0', -0.0075, 20, 0, '2017-09-13 07:52:08'),
(45, 1268, '2', -1.1875, 29, 0, '2017-09-13 07:52:08'),
(46, 856, '2', -1.75854, 15, 0, '2017-09-13 07:52:10'),
(58, 1169, '2', 1.02083, 10, 1, '2017-09-13 07:52:10'),
(62, 750, '0', 0, 8, -1, '2017-09-13 07:52:10'),
(67, 1317, '3', 2.00083, 11, 1, '2017-09-13 07:52:10'),
(50, 1149, '1', 1.8, 8, 1, '2017-09-13 07:52:10'),
(69, 1473, '1', 2.22, 13, 1, '2017-09-13 07:52:11'),
(64, 2634, '0', -0.000833333, 60, 0, '2017-09-13 07:52:12'),
(53, 1467, '3', 0.800833, 29, 1, '2017-09-13 07:52:12'),
(34, 2618, '3', 1.25, 35, 1, '2017-09-13 07:52:14'),
(33, 2167, '1', -0.421875, 30, 0, '2017-09-13 07:52:15'),
(38, 2630, '4', -0.1875, 45, 0, '2017-09-13 07:52:15'),
(44, 1590, '0', 0, 54, -1, '2017-09-13 07:52:16'),
(61, 2168, '0', -0.00141777, 46, 0, '2017-09-13 07:52:17'),
(49, 1459, '2', 0.091875, 33, 1, '2017-09-13 07:52:17'),
(35, 1269, '2', -0.949219, 21, 0, '2017-09-13 07:52:18'),
(47, 736, '1', 0.66436, 18, 1, '2017-09-13 07:52:19'),
(65, 2823, '3', 0.90856, 50, 1, '2017-09-13 07:52:19'),
(37, 2447, '4', 2.18182, 24, 1, '2017-09-13 07:52:19'),
(67, 600, '3', 2.1132, 9, 1, '2017-09-13 07:52:20'),
(64, 2620, '4', 2.1675, 9, 1, '2017-09-13 07:52:20'),
(31, 609, '4', -0.27, 42, 0, '2017-09-13 07:52:20'),
(48, 494, '3', 0.213333, 22, 1, '2017-09-13 07:52:21'),
(70, 379, '3', 0.3675, 13, 1, '2017-09-13 07:52:21'),
(41, 1281, '1', -0.12, 24, 0, '2017-09-13 07:52:23'),
(68, 1471, '4', 1.55, 29, 1, '2017-09-13 07:52:23'),
(53, 1449, '1', -1.47, 12, 0, '2017-09-13 07:52:24'),
(38, 2621, '3', 2.25333, 8, 1, '2017-09-13 07:52:24'),
(43, 1479, '3', 1.15909, 27, 1, '2017-09-13 07:52:24'),
(66, 1203, '3', 0.00333333, 29, 1, '2017-09-13 07:52:25'),
(33, 2164, '0', 0, 11, -1, '2017-09-13 07:52:26'),
(35, 1191, '3', 1.53061, 8, 1, '2017-09-13 07:52:26'),
(38, 2620, '4', 2.85, 3, 1, '2017-09-13 07:52:27'),
(39, 1200, '2', -0.0208333, 33, 0, '2017-09-13 07:52:28'),
(71, 1172, '0', -0.0075, 20, 0, '2017-09-13 07:52:28'),
(40, 1199, '3', 0.84375, 23, 1, '2017-09-13 07:52:29'),
(46, 873, '1', -1.4573, 20, 0, '2017-09-13 07:52:29'),
(63, 2449, '4', -1.77, 41, 0, '2017-09-13 07:52:29'),
(56, 2629, '1', 0.240833, 43, 1, '2017-09-13 07:52:30'),
(59, 1220, '0', -0.00382653, 28, 0, '2017-09-13 07:52:30'),
(58, 1263, '3', -0.676875, 21, 0, '2017-09-13 07:52:30'),
(60, 346, '3', -0.0153061, 52, 0, '2017-09-13 07:52:31'),
(37, 1141, '1', 1.05, 13, 1, '2017-09-13 07:52:32'),
(67, 854, '1', 2.05959, 12, 1, '2017-09-13 07:52:32'),
(55, 2628, '3', -1.7, 26, 0, '2017-09-13 07:52:32'),
(36, 1199, '1', 0, 32, 0, '2017-09-13 07:52:33'),
(38, 2628, '3', -2.7, 6, 0, '2017-09-13 07:52:33'),
(65, 2731, '2', -2.47645, 15, 0, '2017-09-13 07:52:33'),
(42, 1269, '0', 0, 45, -1, '2017-09-13 07:52:33'),
(70, 1121, '2', -0.3675, 13, 0, '2017-09-13 07:52:34'),
(66, 1170, '2', 1.17188, 9, 1, '2017-09-13 07:52:34'),
(34, 2847, '4', 2.28943, 20, 1, '2017-09-13 07:52:34'),
(47, 746, '4', 1.66667, 16, 1, '2017-09-13 07:52:34'),
(39, 1220, '2', 1.6875, 7, 1, '2017-09-13 07:52:34'),
(41, 1293, '2', 0.630208, 13, 1, '2017-09-13 07:52:36'),
(39, 1219, '2', -2.2376, 3, 0, '2017-09-13 07:52:38'),
(69, 1483, '3', -0.947368, 26, 0, '2017-09-13 07:52:38'),
(51, 1479, '3', 0.204545, 41, 1, '2017-09-13 07:52:39'),
(46, 310, '2', -1.92, 10, 0, '2017-09-13 07:52:39'),
(31, 622, '1', -1.40083, 19, 0, '2017-09-13 07:52:40'),
(48, 734, '2', 0.403333, 19, 1, '2017-09-13 07:52:40'),
(61, 2174, '4', -0.467452, 23, 0, '2017-09-13 07:52:40'),
(65, 2833, '3', 2.76188, 7, 1, '2017-09-13 07:52:40'),
(45, 1269, '2', -1.0625, 31, 0, '2017-09-13 07:52:40'),
(33, 2175, '4', -1.09903, 15, 0, '2017-09-13 07:52:40'),
(66, 1198, '4', 1.2675, 7, 1, '2017-09-13 07:52:41'),
(71, 1292, '2', -0.963333, 13, 0, '2017-09-13 07:52:41'),
(40, 1219, '3', 1.36364, 12, 1, '2017-09-13 07:52:42'),
(47, 743, '4', 2.33333, 8, 1, '2017-09-13 07:52:43'),
(70, 374, '1', -0.75, 10, 0, '2017-09-13 07:52:44'),
(52, 313, '2', -0.974673, 44, 0, '2017-09-13 07:52:44'),
(38, 2626, '3', 2.4, 12, 1, '2017-09-13 07:52:45'),
(37, 1157, '1', 1.05, 13, 1, '2017-09-13 07:52:46'),
(62, 743, '4', 0, 36, 1, '2017-09-13 07:52:46'),
(57, 1477, '3', 0.173868, 41, 1, '2017-09-13 07:52:48'),
(44, 1602, '2', -0.653333, 32, 0, '2017-09-13 07:52:48'),
(65, 2820, '2', 2.69195, 9, 1, '2017-09-13 07:52:50'),
(58, 1198, '0', -0.0075, 20, 0, '2017-09-13 07:52:51'),
(59, 1284, '0', -0.0075, 20, 0, '2017-09-13 07:52:51'),
(50, 2454, '2', 2.16667, 40, 1, '2017-09-13 07:52:51'),
(70, 366, '4', 0.9075, 9, 1, '2017-09-13 07:52:53'),
(44, 1603, '2', 2.45081, 5, 1, '2017-09-13 07:52:54'),
(47, 744, '1', -2.1, 12, 0, '2017-09-13 07:52:55'),
(66, 1284, '3', 0.9, 14, 1, '2017-09-13 07:52:55'),
(31, 1091, '3', -1.61333, 16, 0, '2017-09-13 07:52:56'),
(65, 2819, '2', 2.76188, 7, 1, '2017-09-13 07:52:56'),
(46, 308, '3', 1.7198, 17, 1, '2017-09-13 07:52:57'),
(49, 1457, '0', -0.001875, 40, 0, '2017-09-13 07:52:57'),
(33, 2163, '1', 0.835648, 17, 1, '2017-09-13 07:52:57'),
(45, 1294, '1', -0.75, 18, 0, '2017-09-13 07:52:58'),
(62, 752, '0', 0, 13, -1, '2017-09-13 07:52:59'),
(40, 1282, '3', 1.3, 17, 1, '2017-09-13 07:52:59'),
(70, 1130, '1', -1.2675, 7, 0, '2017-09-13 07:53:00'),
(52, 892, '2', -1.2, 18, 0, '2017-09-13 07:53:02'),
(57, 2933, '1', -0.520833, 14, 0, '2017-09-13 07:53:02'),
(70, 2418, '2', 2.7075, 4, 1, '2017-09-13 07:53:04'),
(45, 1293, '2', 2.25, 6, 1, '2017-09-13 07:53:04'),
(69, 1487, '4', -1.30435, 26, 0, '2017-09-13 07:53:04'),
(42, 1208, '1', 0.4332, 31, 1, '2017-09-13 07:53:05'),
(34, 2820, '4', -1.84765, 31, 0, '2017-09-13 07:53:05'),
(33, 2171, '2', 1.17188, 9, 1, '2017-09-13 07:53:06'),
(46, 891, '3', -1.56481, 10, 0, '2017-09-13 07:53:07'),
(54, 599, '0', -0.000833333, 60, 0, '2017-09-13 07:53:07'),
(70, 1104, '3', 2.1675, 3, 1, '2017-09-13 07:53:07'),
(48, 726, '1', 0.127163, 27, 1, '2017-09-13 07:53:08'),
(50, 2448, '1', -2.44565, 17, 0, '2017-09-13 07:53:08'),
(68, 1477, '2', -0.5, 45, 0, '2017-09-13 07:53:08'),
(41, 1287, '2', -0.255208, 34, 0, '2017-09-13 07:53:09'),
(53, 1485, '2', -0.0543639, 45, 0, '2017-09-13 07:53:10'),
(39, 1199, '0', -0.00292969, 32, 0, '2017-09-13 07:53:10'),
(55, 2616, '4', 1.15, 37, 1, '2017-09-13 07:53:10'),
(58, 1297, '3', 1.40083, 19, 1, '2017-09-13 07:53:10'),
(67, 602, '2', 0.495117, 38, 1, '2017-09-13 07:53:10'),
(66, 1294, '3', 1, 16, 1, '2017-09-13 07:53:11'),
(71, 1276, '4', -0.0117188, 30, 0, '2017-09-13 07:53:12'),
(44, 1599, '1', 1.17188, 18, 1, '2017-09-13 07:53:12'),
(70, 1143, '1', 2.1, 6, 1, '2017-09-13 07:53:13'),
(35, 1268, '0', -0.00130208, 48, 0, '2017-09-13 07:53:15'),
(56, 2624, '2', 0.213333, 44, 1, '2017-09-13 07:53:15'),
(34, 2729, '2', 2.62111, 11, 1, '2017-09-13 07:53:16'),
(33, 2166, '3', -1.56481, 10, 0, '2017-09-13 07:53:16'),
(49, 1464, '4', -1.09505, 19, 0, '2017-09-13 07:53:17'),
(52, 893, '2', -1.66667, 16, 0, '2017-09-13 07:53:18'),
(70, 1157, '1', 2.25, 5, 1, '2017-09-13 07:53:18'),
(51, 1476, '1', -0.75, 39, 0, '2017-09-13 07:53:18'),
(43, 1477, '1', -0.0555556, 53, 0, '2017-09-13 07:53:19'),
(61, 2175, '0', -0.00207756, 38, 0, '2017-09-13 07:53:19'),
(59, 1202, '1', 0.148148, 28, 1, '2017-09-13 07:53:19'),
(54, 854, '1', 2.05959, 12, 1, '2017-09-13 07:53:19'),
(38, 2634, '3', -1.25, 35, 0, '2017-09-13 07:53:20'),
(64, 2621, '0', -0.000833333, 60, 0, '2017-09-13 07:53:20'),
(42, 1284, '1', -0.12, 16, 0, '2017-09-13 07:53:21'),
(67, 996, '3', -1.8252, 11, 0, '2017-09-13 07:53:21'),
(46, 304, '3', -1.6081, 15, 0, '2017-09-13 07:53:22'),
(71, 1170, '2', 1.02083, 10, 1, '2017-09-13 07:53:22'),
(60, 873, '4', -0.154959, 51, 0, '2017-09-13 07:53:23'),
(50, 2447, '4', 2.52273, 14, 1, '2017-09-13 07:53:23'),
(36, 1208, '3', 0, 50, 0, '2017-09-13 07:53:23'),
(69, 3000, '4', -0.625, 19, 0, '2017-09-13 07:53:23'),
(61, 2165, '2', 2.08333, 7, 1, '2017-09-13 07:53:26'),
(31, 606, '3', 0.75, 30, 1, '2017-09-13 07:53:26'),
(45, 1199, '2', -0.9375, 22, 0, '2017-09-13 07:53:27'),
(50, 1143, '1', 1.95, 7, 1, '2017-09-13 07:53:29'),
(70, 1147, '4', 1.2, 12, 1, '2017-09-13 07:53:31'),
(33, 2173, '1', 0.536982, 15, 1, '2017-09-13 07:53:31'),
(42, 1217, '1', -0.75, 10, 0, '2017-09-13 07:53:32'),
(35, 1171, '4', 0.0675, 17, 1, '2017-09-13 07:53:32'),
(45, 1171, '4', 2.1, 6, 1, '2017-09-13 07:53:33'),
(66, 1281, '2', -0.8, 22, 0, '2017-09-13 07:53:33'),
(62, 477, '0', 0, 35, -1, '2017-09-13 07:53:35'),
(38, 2633, '2', -2.3, 14, 0, '2017-09-13 07:53:35'),
(43, 3000, '3', 0.875, 17, 1, '2017-09-13 07:53:35'),
(68, 1475, '3', -1.23913, 27, 0, '2017-09-13 07:53:35'),
(53, 1469, '1', -0.3675, 26, 0, '2017-09-13 07:53:36'),
(47, 755, '0', 0, 43, -1, '2017-09-13 07:53:38'),
(69, 3035, '2', 0.646684, 15, 1, '2017-09-13 07:53:38'),
(52, 911, '2', -2.25, 20, 0, '2017-09-13 07:53:38'),
(57, 1474, '3', -0.0612245, 36, 0, '2017-09-13 07:53:39'),
(59, 1217, '0', -0.0075, 20, 0, '2017-09-13 07:53:39'),
(33, 2162, '3', -1.6875, 8, 0, '2017-09-13 07:53:40'),
(67, 593, '1', 1.40083, 19, 1, '2017-09-13 07:53:40'),
(46, 358, '1', -1.41797, 20, 0, '2017-09-13 07:53:41'),
(41, 1175, '0', -0.00292969, 32, 0, '2017-09-13 07:53:41'),
(68, 1479, '3', 2.52273, 7, 1, '2017-09-13 07:53:42'),
(55, 2623, '3', -1.3, 34, 0, '2017-09-13 07:53:43'),
(50, 1145, '1', 0.75, 15, 1, '2017-09-13 07:53:44'),
(43, 1472, '4', -2.325, 9, 0, '2017-09-13 07:53:45'),
(61, 2181, '4', -1.92, 20, 0, '2017-09-13 07:53:45'),
(71, 1294, '2', -0.00520833, 23, 0, '2017-09-13 07:53:46'),
(39, 1257, '4', 0.1875, 36, 1, '2017-09-13 07:53:46'),
(52, 901, '3', -2.78182, 8, 0, '2017-09-13 07:53:46'),
(44, 1610, '1', -0.3072, 34, 0, '2017-09-13 07:53:46'),
(66, 1217, '2', -1.05, 13, 0, '2017-09-13 07:53:47'),
(45, 1200, '4', 1.83333, 14, 1, '2017-09-13 07:53:47'),
(51, 1483, '2', -0.710526, 29, 0, '2017-09-13 07:53:47'),
(48, 472, '0', -0.001875, 40, 0, '2017-09-13 07:53:48'),
(31, 599, '1', 1.2675, 21, 1, '2017-09-13 07:53:48'),
(58, 1261, '0', -0.00207756, 38, 0, '2017-09-13 07:53:48'),
(35, 1220, '2', 0.55102, 16, 1, '2017-09-13 07:53:48'),
(42, 1282, '0', 0, 19, -1, '2017-09-13 07:53:51'),
(68, 1468, '2', 2.4, 8, 1, '2017-09-13 07:53:51'),
(61, 2166, '4', 2.08333, 6, 1, '2017-09-13 07:53:52'),
(33, 2179, '1', -0.630208, 13, 0, '2017-09-13 07:53:52'),
(63, 2456, '3', -1.10769, 82, 0, '2017-09-13 07:53:53'),
(56, 2631, '3', 1.05, 39, 1, '2017-09-13 07:53:54'),
(62, 475, '4', 0.958412, 20, 1, '2017-09-13 07:53:55'),
(34, 2731, '4', 1.48993, 39, 1, '2017-09-13 07:53:55'),
(69, 1480, '3', -1.71429, 18, 0, '2017-09-13 07:53:56'),
(38, 2732, '4', 1.9, 22, 1, '2017-09-13 07:53:56'),
(65, 2835, '0', -0.195743, 60, 0, '2017-09-13 07:53:56'),
(61, 2173, '2', -1.77515, 6, 0, '2017-09-13 07:53:58'),
(49, 1486, '1', 0.00619835, 42, 1, '2017-09-13 07:53:58'),
(53, 1470, '1', 0.9408, 22, 1, '2017-09-13 07:53:58'),
(41, 1171, '4', 0.03, 18, 1, '2017-09-13 07:54:00'),
(58, 1174, '3', 0.869823, 12, 1, '2017-09-13 07:54:00'),
(40, 1250, '0', -0.195743, 60, 0, '2017-09-13 07:54:00'),
(43, 1469, '1', -1.08, 16, 0, '2017-09-13 07:54:00'),
(68, 1469, '2', 2.325, 9, 1, '2017-09-13 07:54:00'),
(34, 2833, '3', 2.76188, 7, 1, '2017-09-13 07:54:02'),
(33, 2178, '4', 1.2398, 10, 1, '2017-09-13 07:54:03'),
(46, 307, '2', -1.10587, 22, 0, '2017-09-13 07:54:04'),
(50, 2443, '0', 0, 19, -1, '2017-09-13 07:54:04'),
(62, 742, '3', -1.6875, 10, 0, '2017-09-13 07:54:05'),
(40, 1217, '3', 1.65, 9, 1, '2017-09-13 07:54:08'),
(39, 1175, '4', 0.237305, 23, 1, '2017-09-13 07:54:08'),
(34, 2838, '3', 2.72703, 8, 1, '2017-09-13 07:54:10'),
(57, 1478, '2', 0.151875, 31, 1, '2017-09-13 07:54:10'),
(60, 857, '0', 0, 47, -1, '2017-09-13 07:54:10'),
(36, 1269, '1', 0, 48, 1, '2017-09-13 07:54:11'),
(36, 1189, '0', -1.38138, 48, 0, '2017-09-13 07:54:11'),
(52, 963, '1', 2.27885, 25, 1, '2017-09-13 07:54:12'),
(40, 1298, '0', 0, 3, -1, '2017-09-13 07:54:12'),
(56, 2620, '2', -2.1, 18, 0, '2017-09-13 07:54:12'),
(38, 2823, '1', -2.25, 15, 0, '2017-09-13 07:54:12'),
(68, 1486, '3', -2.11364, 13, 0, '2017-09-13 07:54:13'),
(59, 1268, '1', 0.292969, 33, 1, '2017-09-13 07:54:13'),
(44, 1615, '3', 0.857015, 27, 1, '2017-09-13 07:54:13'),
(63, 372, '0', -0.0075, 20, 0, '2017-09-13 07:54:13'),
(31, 1308, '3', 0.853333, 28, 1, '2017-09-13 07:54:16'),
(70, 2435, '1', 1.96154, 45, 1, '2017-09-13 07:54:16'),
(71, 1202, '4', -0.0578704, 31, 0, '2017-09-13 07:54:16'),
(53, 1472, '4', -0.826875, 19, 0, '2017-09-13 07:54:17'),
(66, 1175, '4', 0.09375, 31, 1, '2017-09-13 07:54:18'),
(58, 1177, '2', 0.0991736, 18, 1, '2017-09-13 07:54:18'),
(50, 1148, '1', -0.9, 14, 0, '2017-09-13 07:54:18'),
(42, 1175, '2', -0.046875, 28, 0, '2017-09-13 07:54:18'),
(55, 2630, '2', 1.3, 34, 1, '2017-09-13 07:54:18'),
(54, 624, '0', -0.000833333, 60, 0, '2017-09-13 07:54:20'),
(47, 750, '4', -0.26087, 42, 0, '2017-09-13 07:54:20'),
(64, 2623, '0', -0.000833333, 60, 0, '2017-09-13 07:54:20'),
(57, 1482, '1', 1.6875, 11, 1, '2017-09-13 07:54:22'),
(61, 2170, '2', -0.979592, 24, 0, '2017-09-13 07:54:22'),
(49, 3000, '0', -0.00520833, 24, 0, '2017-09-13 07:54:22'),
(38, 2845, '3', -2.00083, 11, 0, '2017-09-13 07:54:23'),
(66, 1257, '3', -2.625, 6, 0, '2017-09-13 07:54:24'),
(48, 729, '0', -0.00231481, 36, 0, '2017-09-13 07:54:24'),
(35, 1287, '1', -0.1875, 36, 0, '2017-09-13 07:54:24'),
(50, 2444, '0', 0, 6, -1, '2017-09-13 07:54:24'),
(69, 1450, '1', -0.1875, 27, 0, '2017-09-13 07:54:24'),
(52, 315, '4', -2.25, 13, 0, '2017-09-13 07:54:24'),
(44, 1611, '4', 1.63894, 12, 1, '2017-09-13 07:54:26'),
(65, 2730, '4', 1.88988, 30, 1, '2017-09-13 07:54:26'),
(34, 2735, '4', -2.40251, 17, 0, '2017-09-13 07:54:27'),
(43, 1486, '2', -0.502066, 26, 0, '2017-09-13 07:54:27'),
(68, 3000, '4', -1.25, 14, 0, '2017-09-13 07:54:27'),
(58, 1197, '3', -0.880208, 11, 0, '2017-09-13 07:54:29'),
(67, 599, '1', 0.12, 48, 1, '2017-09-13 07:54:29'),
(70, 1149, '1', 0.75, 15, 1, '2017-09-13 07:54:31'),
(36, 1175, '2', -0.421875, 20, 0, '2017-09-13 07:54:31'),
(31, 1310, '4', 1.43787, 16, 1, '2017-09-13 07:54:32'),
(47, 476, '1', -2.175, 11, 0, '2017-09-13 07:54:32'),
(34, 2841, '3', 2.79651, 6, 1, '2017-09-13 07:54:33'),
(33, 2169, '1', 0.132964, 30, 1, '2017-09-13 07:54:33'),
(63, 388, '0', -0.0075, 20, 0, '2017-09-13 07:54:34'),
(57, 1486, '4', -1.39463, 14, 0, '2017-09-13 07:54:36'),
(62, 747, '1', -0.0578704, 31, 0, '2017-09-13 07:54:36'),
(66, 1218, '2', -0.3675, 13, 0, '2017-09-13 07:54:37'),
(51, 1473, '0', -0.06, 50, 0, '2017-09-13 07:54:37'),
(41, 1269, '1', 0.130208, 38, 1, '2017-09-13 07:54:37'),
(52, 314, '4', -2.22, 13, 0, '2017-09-13 07:54:37'),
(36, 1191, '3', 1.6875, 7, 1, '2017-09-13 07:54:38'),
(47, 724, '4', -1.76333, 7, 0, '2017-09-13 07:54:39'),
(61, 2164, '2', 1.06293, 17, 1, '2017-09-13 07:54:39'),
(64, 2629, '1', 1.40083, 19, 1, '2017-09-13 07:54:39'),
(45, 1265, '0', -0.0576923, 52, 0, '2017-09-13 07:54:40'),
(71, 1281, '1', -0.163333, 23, 0, '2017-09-13 07:54:40'),
(62, 476, '1', -2.29688, 5, 0, '2017-09-13 07:54:41'),
(68, 1474, '3', -2, 14, 0, '2017-09-13 07:54:41'),
(65, 2825, '3', 2.47645, 15, 1, '2017-09-13 07:54:42'),
(37, 2435, '1', 0.3, 117, 1, '2017-09-13 07:54:42'),
(70, 2443, '4', 2.6413, 11, 1, '2017-09-13 07:54:42'),
(44, 1604, '3', -1.9375, 17, 0, '2017-09-13 07:54:42'),
(63, 1140, '1', 0.75, 10, 1, '2017-09-13 07:54:43'),
(67, 852, '2', -1.76333, 14, 0, '2017-09-13 07:54:43'),
(58, 1184, '4', 0.421875, 15, 1, '2017-09-13 07:54:44'),
(52, 864, '3', 2.34083, 7, 1, '2017-09-13 07:54:45'),
(69, 1460, '1', 0.816635, 22, 1, '2017-09-13 07:54:46'),
(49, 1469, '1', -0.421875, 25, 0, '2017-09-13 07:54:48'),
(46, 882, '4', 0.292969, 44, 1, '2017-09-13 07:54:48'),
(42, 1200, '4', 0.0833333, 30, 1, '2017-09-13 07:54:49'),
(71, 1220, '0', 0, 10, -1, '2017-09-13 07:54:50'),
(53, 1478, '2', 0.12, 32, 1, '2017-09-13 07:54:50'),
(34, 2730, '4', 2.36512, 18, 1, '2017-09-13 07:54:51'),
(68, 1481, '1', -2.25, 10, 0, '2017-09-13 07:54:51'),
(65, 2888, '3', 2.71109, 11, 1, '2017-09-13 07:54:52'),
(70, 1165, '4', 1.88988, 10, 1, '2017-09-13 07:54:52'),
(35, 1175, '2', -0.0263672, 29, 0, '2017-09-13 07:54:53'),
(45, 1282, '4', -1.6, 14, 0, '2017-09-13 07:54:53'),
(66, 1220, '1', -0.55102, 16, 0, '2017-09-13 07:54:53'),
(41, 1189, '3', 0.55102, 16, 1, '2017-09-13 07:54:53'),
(47, 466, '0', 0, 15, -1, '2017-09-13 07:54:54'),
(37, 1145, '4', -0.9, 14, 0, '2017-09-13 07:54:56'),
(39, 1269, '0', -0.00130208, 48, 0, '2017-09-13 07:54:56'),
(43, 1483, '4', 0.132964, 30, 1, '2017-09-13 07:54:57'),
(69, 1449, '1', -1.57687, 11, 0, '2017-09-13 07:54:57'),
(34, 2816, '4', 2.79651, 6, 1, '2017-09-13 07:54:57'),
(63, 1144, '0', 0, 15, -1, '2017-09-13 07:54:58'),
(52, 316, '4', -2.39062, 13, 0, '2017-09-13 07:54:58'),
(57, 1487, '2', -0.75, 23, 0, '2017-09-13 07:54:59'),
(55, 2635, '4', -0.95, 41, 0, '2017-09-13 07:54:59'),
(56, 2622, '2', 0.12, 48, 1, '2017-09-13 07:55:00'),
(59, 1257, '0', -0.00130208, 48, 0, '2017-09-13 07:55:02'),
(48, 489, '1', 0.0075, 38, 1, '2017-09-13 07:55:02'),
(67, 613, '0', 0, 19, -1, '2017-09-13 07:55:02'),
(66, 1191, '3', 1.2398, 10, 1, '2017-09-13 07:55:03'),
(47, 490, '3', -1.6875, 9, 0, '2017-09-13 07:55:03'),
(46, 302, '4', -1.92, 18, 0, '2017-09-13 07:55:06'),
(64, 2631, '3', 0.9075, 27, 1, '2017-09-13 07:55:06'),
(65, 2865, '4', -2.62679, 14, 0, '2017-09-13 07:55:06'),
(49, 1470, '1', 1.1532, 19, 1, '2017-09-13 07:55:06'),
(38, 2847, '2', -0.240833, 43, 0, '2017-09-13 07:55:07'),
(36, 1282, '2', -0.00333333, 29, 0, '2017-09-13 07:55:07'),
(58, 1175, '4', 0.237305, 23, 1, '2017-09-13 07:55:07'),
(52, 362, '4', -2.08333, 10, 0, '2017-09-13 07:55:08'),
(33, 2170, '4', 0.421875, 35, 1, '2017-09-13 07:55:09'),
(51, 1477, '3', 1.16667, 33, 1, '2017-09-13 07:55:10'),
(70, 2638, '4', 2.6092, 17, 1, '2017-09-13 07:55:10'),
(68, 1450, '4', 0.592593, 20, 1, '2017-09-13 07:55:11'),
(60, 326, '4', 0.333333, 60, 1, '2017-09-13 07:55:12'),
(50, 2457, '1', -1.83871, 48, 0, '2017-09-13 07:55:12'),
(34, 2862, '3', -2.53969, 17, 0, '2017-09-13 07:55:14'),
(62, 744, '4', -0.12, 32, 0, '2017-09-13 07:55:14'),
(69, 1452, '2', 0.991875, 17, 1, '2017-09-13 07:55:14'),
(61, 2176, '4', -0.320636, 35, 0, '2017-09-13 07:55:15'),
(43, 2933, '1', -0.0833333, 20, 0, '2017-09-13 07:55:17'),
(58, 1171, '1', -0.6075, 11, 0, '2017-09-13 07:55:18'),
(41, 1294, '0', -0.00520833, 24, 0, '2017-09-13 07:55:18'),
(53, 1483, '2', -0.207756, 28, 0, '2017-09-13 07:55:18'),
(64, 2633, '3', 2.4, 12, 1, '2017-09-13 07:55:18'),
(44, 1609, '4', -0.220052, 35, 0, '2017-09-13 07:55:18'),
(40, 1264, '0', -0.183693, 66, 0, '2017-09-13 07:55:19'),
(31, 1312, '4', -0.863636, 47, 0, '2017-09-13 07:55:19'),
(68, 1484, '2', -2.42857, 8, 0, '2017-09-13 07:55:19'),
(70, 1166, '1', 1.88988, 10, 1, '2017-09-13 07:55:19'),
(57, 1481, '1', -0.676875, 21, 0, '2017-09-13 07:55:20'),
(50, 2439, '1', 2.79, 7, 1, '2017-09-13 07:55:20'),
(47, 721, '2', -0.991875, 17, 0, '2017-09-13 07:55:20'),
(33, 2172, '4', 1.37284, 11, 1, '2017-09-13 07:55:20'),
(51, 3000, '4', -1.75, 10, 0, '2017-09-13 07:55:20'),
(39, 1281, '3', 0.0833333, 25, 1, '2017-09-13 07:55:21'),
(61, 2179, '1', -1.33333, 8, 0, '2017-09-13 07:55:23'),
(65, 2862, '3', -2.50998, 18, 0, '2017-09-13 07:55:24'),
(44, 1607, '1', 2.31956, 7, 1, '2017-09-13 07:55:25'),
(66, 1200, '4', 0.453704, 22, 1, '2017-09-13 07:55:25'),
(36, 1294, '3', 0.130208, 19, 1, '2017-09-13 07:55:26'),
(68, 1455, '1', 2.04187, 7, 1, '2017-09-13 07:55:27'),
(47, 754, '4', 1.96599, 8, 1, '2017-09-13 07:55:28'),
(38, 2735, '4', -1.14083, 23, 0, '2017-09-13 07:55:29'),
(35, 1202, '0', -0.00231481, 36, 0, '2017-09-13 07:55:30'),
(71, 1287, '1', -0.105469, 39, 0, '2017-09-13 07:55:30'),
(37, 2444, '3', 1.98, 34, 1, '2017-09-13 07:55:30'),
(50, 1141, '1', 1.2, 12, 1, '2017-09-13 07:55:31'),
(67, 850, '3', 0.800833, 29, 1, '2017-09-13 07:55:31'),
(34, 2734, '1', -2.40251, 17, 0, '2017-09-13 07:55:32'),
(55, 2627, '2', 1.45, 31, 1, '2017-09-13 07:55:32'),
(65, 2732, '3', -2.72703, 8, 0, '2017-09-13 07:55:32'),
(61, 2171, '3', -1.02083, 10, 0, '2017-09-13 07:55:33'),
(59, 1200, '2', -0.037037, 32, 0, '2017-09-13 07:55:33'),
(31, 1301, '1', -1.83105, 14, 0, '2017-09-13 07:55:34'),
(45, 1208, '1', 0.6, 40, 1, '2017-09-13 07:55:34'),
(69, 1451, '1', 0.520833, 21, 1, '2017-09-13 07:55:36'),
(71, 1189, '4', -1.53061, 8, 0, '2017-09-13 07:55:38'),
(42, 1287, '0', -0.00130208, 48, 0, '2017-09-13 07:55:38'),
(40, 1283, '4', 1.05429, 19, 1, '2017-09-13 07:55:38'),
(45, 1189, '3', 2.25, 7, 1, '2017-09-13 07:55:41'),
(46, 890, '2', 0, 36, 1, '2017-09-13 07:55:41'),
(34, 2819, '2', 2.65665, 10, 1, '2017-09-13 07:55:41');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(53, 1487, '2', -0.75, 23, 0, '2017-09-13 07:55:41'),
(37, 1142, '4', 1.35, 11, 1, '2017-09-13 07:55:41'),
(58, 1294, '0', -0.00520833, 24, 0, '2017-09-13 07:55:42'),
(64, 2616, '1', -1.8, 24, 0, '2017-09-13 07:55:42'),
(48, 481, '0', -0.001875, 40, 0, '2017-09-13 07:55:42'),
(51, 1471, '4', 1.9, 22, 1, '2017-09-13 07:55:42'),
(62, 483, '4', -0.459357, 28, 0, '2017-09-13 07:55:42'),
(52, 326, '2', -1.16148, 34, 0, '2017-09-13 07:55:43'),
(49, 1484, '1', -0.042517, 37, 0, '2017-09-13 07:55:43'),
(65, 2838, '3', 2.62111, 11, 1, '2017-09-13 07:55:43'),
(47, 752, '4', -1.36248, 15, 0, '2017-09-13 07:55:43'),
(39, 1282, '3', 0.213333, 22, 1, '2017-09-13 07:55:43'),
(35, 1282, '1', -0.853333, 14, 0, '2017-09-13 07:55:44'),
(58, 1269, '4', -2.75521, 2, 0, '2017-09-13 07:55:44'),
(69, 1455, '1', 1.80187, 9, 1, '2017-09-13 07:55:44'),
(66, 1293, '2', 0.130208, 19, 1, '2017-09-13 07:55:45'),
(56, 2630, '0', 0, 44, -1, '2017-09-13 07:55:46'),
(33, 2177, '1', 0.16609, 26, 1, '2017-09-13 07:55:46'),
(46, 306, '2', -2.4882, 5, 0, '2017-09-13 07:55:46'),
(34, 2732, '4', 2.79651, 6, 1, '2017-09-13 07:55:47'),
(60, 867, '3', 0.403333, 38, 1, '2017-09-13 07:55:50'),
(52, 856, '4', 2.29688, 8, 1, '2017-09-13 07:55:50'),
(68, 3051, '3', 0.0399408, 23, 1, '2017-09-13 07:55:50'),
(62, 753, '4', 1.85204, 9, 1, '2017-09-13 07:55:51'),
(57, 1480, '3', -0.205782, 31, 0, '2017-09-13 07:55:51'),
(55, 2852, '3', -2, 20, 0, '2017-09-13 07:55:51'),
(36, 1202, '1', 0.280093, 25, 1, '2017-09-13 07:55:52'),
(38, 2816, '2', -1.14083, 23, 0, '2017-09-13 07:55:53'),
(41, 1268, '2', -0.130208, 38, 0, '2017-09-13 07:55:55'),
(67, 853, '4', -1.08, 24, 0, '2017-09-13 07:55:56'),
(34, 2865, '3', 2.76586, 9, 1, '2017-09-13 07:55:56'),
(46, 309, '1', -2.08333, 10, 0, '2017-09-13 07:55:56'),
(43, 1474, '2', 0.0153061, 39, 1, '2017-09-13 07:55:56'),
(66, 1189, '3', 0.979592, 12, 1, '2017-09-13 07:55:57'),
(71, 1199, '1', -0.421875, 20, 0, '2017-09-13 07:55:58'),
(35, 1219, '3', 0.396694, 14, 1, '2017-09-13 07:55:58'),
(47, 742, '2', -1.17188, 15, 0, '2017-09-13 07:55:59'),
(55, 2841, '3', 2.6, 8, 1, '2017-09-13 07:56:00'),
(36, 1293, '2', 1.17188, 9, 1, '2017-09-13 07:56:00'),
(42, 1294, '4', -0.00520833, 23, 0, '2017-09-13 07:56:01'),
(67, 1311, '4', 2.43, 5, 1, '2017-09-13 07:56:01'),
(50, 2440, '0', 0, 31, -1, '2017-09-13 07:56:03'),
(34, 2889, '0', 0, 7, -1, '2017-09-13 07:56:03'),
(62, 754, '4', 1.53061, 12, 1, '2017-09-13 07:56:03'),
(70, 2664, '2', 2.27767, 44, 1, '2017-09-13 07:56:05'),
(44, 1617, '2', -0.456522, 39, 0, '2017-09-13 07:56:05'),
(35, 1217, '3', 1.2675, 7, 1, '2017-09-13 07:56:05'),
(37, 2446, '3', -2.39516, 25, 0, '2017-09-13 07:56:06'),
(69, 1474, '4', -1.42857, 22, 0, '2017-09-13 07:56:07'),
(53, 1482, '2', -0.502066, 26, 0, '2017-09-13 07:56:08'),
(33, 2176, '1', -1.0662, 21, 0, '2017-09-13 07:56:08'),
(65, 2735, '2', -2.13414, 24, 0, '2017-09-13 07:56:08'),
(47, 748, '1', -1.80187, 9, 0, '2017-09-13 07:56:08'),
(50, 1151, '2', 2.25, 5, 1, '2017-09-13 07:56:08'),
(61, 2169, '2', -0.0186981, 35, 0, '2017-09-13 07:56:08'),
(58, 1200, '2', -0.280093, 25, 0, '2017-09-13 07:56:09'),
(56, 2621, '3', 1.14083, 23, 1, '2017-09-13 07:56:09'),
(63, 2455, '1', 0.93, 69, 1, '2017-09-13 07:56:09'),
(51, 1486, '3', -1.15909, 27, 0, '2017-09-13 07:56:09'),
(67, 622, '2', 2.08333, 10, 1, '2017-09-13 07:56:11'),
(55, 2819, '2', 2.4, 12, 1, '2017-09-13 07:56:12'),
(31, 1311, '4', 0.1728, 38, 1, '2017-09-13 07:56:12'),
(48, 499, '1', 0.132964, 30, 1, '2017-09-13 07:56:12'),
(54, 2413, '0', 0, 38, -1, '2017-09-13 07:56:12'),
(50, 1159, '1', 2.47645, 5, 1, '2017-09-13 07:56:13'),
(34, 2866, '4', 2.73861, 10, 1, '2017-09-13 07:56:13'),
(61, 2162, '3', -2.13574, 5, 0, '2017-09-13 07:56:14'),
(36, 1217, '3', 0.9, 14, 1, '2017-09-13 07:56:14'),
(66, 1282, '1', -1.2, 18, 0, '2017-09-13 07:56:14'),
(57, 1473, '4', -0.8112, 24, 0, '2017-09-13 07:56:16'),
(38, 2825, '2', -1.14083, 23, 0, '2017-09-13 07:56:17'),
(69, 1486, '4', -1.6875, 11, 0, '2017-09-13 07:56:18'),
(68, 1487, '4', -1.17391, 28, 0, '2017-09-13 07:56:18'),
(62, 740, '3', -1.02083, 15, 0, '2017-09-13 07:56:18'),
(31, 996, '4', -2.3232, 6, 0, '2017-09-13 07:56:18'),
(59, 600, '3', 2.29688, 7, 1, '2017-09-13 07:56:18'),
(34, 2870, '3', 2.84605, 6, 1, '2017-09-13 07:56:19'),
(52, 865, '3', -0.700833, 31, 0, '2017-09-13 07:56:21'),
(61, 2188, '4', -2.05141, 9, 0, '2017-09-13 07:56:22'),
(53, 1491, '1', -1.33333, 14, 0, '2017-09-13 07:56:22'),
(49, 1472, '2', -0.001875, 39, 0, '2017-09-13 07:56:23'),
(60, 863, '2', 0.602854, 32, 1, '2017-09-13 07:56:23'),
(54, 376, '1', -0.75, 10, 0, '2017-09-13 07:56:23'),
(57, 3008, '1', -1.6875, 7, 0, '2017-09-13 07:56:23'),
(56, 2635, '0', 0, 14, -1, '2017-09-13 07:56:23'),
(41, 1282, '1', -0.0133333, 28, 0, '2017-09-13 07:56:23'),
(59, 594, '3', 2.3232, 6, 1, '2017-09-13 07:56:24'),
(70, 1162, '3', 0, 20, 1, '2017-09-13 07:56:24'),
(47, 756, '3', -1.2513, 17, 0, '2017-09-13 07:56:25'),
(63, 2438, '0', 0, 17, -1, '2017-09-13 07:56:26'),
(43, 1475, '4', -0.409735, 29, 0, '2017-09-13 07:56:26'),
(50, 2651, '4', 2.66434, 15, 1, '2017-09-13 07:56:27'),
(61, 2200, '2', -2.2376, 6, 0, '2017-09-13 07:56:28'),
(62, 745, '3', -1.6875, 10, 0, '2017-09-13 07:56:28'),
(58, 1284, '0', -0.0075, 20, 0, '2017-09-13 07:56:29'),
(71, 1208, '4', -0.4332, 31, 0, '2017-09-13 07:56:29'),
(46, 2612, '2', -1.92, 8, 0, '2017-09-13 07:56:30'),
(54, 1140, '1', 1.08, 8, 1, '2017-09-13 07:56:30'),
(38, 2833, '3', 1.76333, 14, 1, '2017-09-13 07:56:31'),
(34, 2896, '1', -2.74383, 12, 0, '2017-09-13 07:56:31'),
(42, 1281, '1', 0, 30, 0, '2017-09-13 07:56:31'),
(44, 1612, '4', 1.5, 26, 1, '2017-09-13 07:56:31'),
(70, 1158, '2', 2.13414, 8, 1, '2017-09-13 07:56:32'),
(52, 855, '1', -2.05737, 11, 0, '2017-09-13 07:56:33'),
(37, 2445, '1', -2.37692, 27, 0, '2017-09-13 07:56:33'),
(48, 741, '2', 0.600416, 21, 1, '2017-09-13 07:56:33'),
(39, 1208, '0', -0.0012, 50, 0, '2017-09-13 07:56:34'),
(43, 1482, '2', -2.00826, 8, 0, '2017-09-13 07:56:34'),
(67, 603, '1', 0.933062, 23, 1, '2017-09-13 07:56:34'),
(46, 2613, '4', 2.29688, 5, 1, '2017-09-13 07:56:35'),
(50, 1160, '3', -2.13414, 8, 0, '2017-09-13 07:56:36'),
(51, 1481, '3', -0.975, 27, 0, '2017-09-13 07:56:36'),
(53, 3008, '1', -0.55102, 16, 0, '2017-09-13 07:56:38'),
(68, 1466, '3', -1.08, 20, 0, '2017-09-13 07:56:38'),
(52, 859, '4', 2.43, 7, 1, '2017-09-13 07:56:39'),
(47, 475, '0', 0, 16, -1, '2017-09-13 07:56:41'),
(31, 603, '4', -0.933062, 23, 0, '2017-09-13 07:56:41'),
(67, 1313, '2', 2.61111, 7, 1, '2017-09-13 07:56:42'),
(63, 1155, '1', -0.6, 16, 0, '2017-09-13 07:56:42'),
(64, 2630, '0', -0.05, 60, 0, '2017-09-13 07:56:42'),
(33, 2195, '4', -0.255208, 34, 0, '2017-09-13 07:56:42'),
(35, 1208, '2', -0.2028, 37, 0, '2017-09-13 07:56:43'),
(57, 1471, '4', 1.2675, 21, 1, '2017-09-13 07:56:43'),
(62, 499, '1', 1.09903, 15, 1, '2017-09-13 07:56:44'),
(46, 2607, '4', 1.80187, 9, 1, '2017-09-13 07:56:44'),
(39, 1293, '1', -0.880208, 11, 0, '2017-09-13 07:56:44'),
(70, 2659, '1', -2.75492, 12, 0, '2017-09-13 07:56:45'),
(37, 2439, '1', 2.64, 12, 1, '2017-09-13 07:56:45'),
(50, 1165, '1', -2.01386, 9, 0, '2017-09-13 07:56:46'),
(68, 3002, '3', -1.43787, 8, 0, '2017-09-13 07:56:46'),
(45, 1264, '0', -0.0454545, 66, 0, '2017-09-13 07:56:48'),
(66, 1208, '1', 0.3468, 33, 1, '2017-09-13 07:56:48'),
(71, 1282, '1', -0.403333, 19, 0, '2017-09-13 07:56:48'),
(47, 499, '1', 1.86981, 8, 1, '2017-09-13 07:56:49'),
(56, 2616, '1', -1.7, 26, 0, '2017-09-13 07:56:49'),
(64, 2617, '1', 2.6, 8, 1, '2017-09-13 07:56:50'),
(69, 1479, '3', 0.22314, 32, 1, '2017-09-13 07:56:50'),
(49, 3008, '0', -0.00382653, 28, 0, '2017-09-13 07:56:51'),
(54, 398, '0', -0.0075, 20, 0, '2017-09-13 07:56:51'),
(54, 367, '3', 0, 20, 1, '2017-09-13 07:56:51'),
(65, 2728, '3', -1.29416, 43, 0, '2017-09-13 07:56:51'),
(60, 864, '3', 0.800833, 29, 1, '2017-09-13 07:56:51'),
(44, 1605, '3', 1.95, 21, 1, '2017-09-13 07:56:52'),
(46, 2605, '2', 1.92, 8, 1, '2017-09-13 07:56:52'),
(48, 739, '1', 0.520833, 21, 1, '2017-09-13 07:56:54'),
(34, 2881, '4', -2.32379, 24, 0, '2017-09-13 07:56:55'),
(68, 1470, '1', 2.0172, 9, 1, '2017-09-13 07:56:55'),
(36, 1268, '4', -0.4375, 41, 0, '2017-09-13 07:56:56'),
(39, 1265, '1', -1.77515, 12, 0, '2017-09-13 07:56:56'),
(47, 478, '2', -2.2188, 7, 0, '2017-09-13 07:56:56'),
(55, 2731, '4', 0.8, 44, 1, '2017-09-13 07:56:56'),
(64, 2618, '3', 2.65, 7, 1, '2017-09-13 07:56:57'),
(62, 755, '1', 1.41797, 15, 1, '2017-09-13 07:56:59'),
(52, 361, '4', -1.30963, 19, 0, '2017-09-13 07:56:59'),
(71, 1175, '4', 1.17188, 12, 1, '2017-09-13 07:57:00'),
(53, 1473, '2', -0.9408, 22, 0, '2017-09-13 07:57:01'),
(31, 853, '1', -1.33333, 20, 0, '2017-09-13 07:57:01'),
(38, 2819, '2', 0.75, 30, 1, '2017-09-13 07:57:01'),
(58, 1202, '2', -0.037037, 32, 0, '2017-09-13 07:57:01'),
(63, 1154, '0', -0.15, 20, 0, '2017-09-13 07:57:02'),
(68, 1472, '4', -2.04187, 7, 0, '2017-09-13 07:57:03'),
(47, 483, '1', -2.15643, 7, 0, '2017-09-13 07:57:03'),
(70, 2643, '4', -2.70701, 18, 0, '2017-09-13 07:57:03'),
(65, 2847, '4', 2.54929, 13, 1, '2017-09-13 07:57:03'),
(43, 1473, '1', 0.5292, 29, 1, '2017-09-13 07:57:04'),
(69, 1476, '1', -1.60207, 14, 0, '2017-09-13 07:57:04'),
(61, 2191, '3', -0.619835, 36, 0, '2017-09-13 07:57:05'),
(57, 1485, '4', 0.998521, 22, 1, '2017-09-13 07:57:05'),
(34, 2879, '2', 2.68328, 12, 1, '2017-09-13 07:57:07'),
(65, 2841, '3', 2.83093, 5, 1, '2017-09-13 07:57:08'),
(62, 741, '1', -1.62881, 10, 0, '2017-09-13 07:57:08'),
(58, 1191, '3', 1.53061, 8, 1, '2017-09-13 07:57:09'),
(60, 892, '2', -0.48, 18, 0, '2017-09-13 07:57:10'),
(41, 1257, '4', 0.00130208, 47, 1, '2017-09-13 07:57:10'),
(35, 1200, '2', -0.1875, 27, 0, '2017-09-13 07:57:10'),
(54, 397, '0', -0.0075, 20, 0, '2017-09-13 07:57:11'),
(52, 871, '1', -1.93457, 13, 0, '2017-09-13 07:57:12'),
(70, 2656, '4', -2.86514, 10, 0, '2017-09-13 07:57:13'),
(50, 2653, '4', 2.43393, 28, 1, '2017-09-13 07:57:13'),
(47, 477, '4', -1.83743, 10, 0, '2017-09-13 07:57:14'),
(34, 2874, '3', -2.81957, 7, 0, '2017-09-13 07:57:14'),
(46, 2603, '1', 0.6075, 22, 1, '2017-09-13 07:57:14'),
(63, 2434, '1', 2.67273, 12, 1, '2017-09-13 07:57:14'),
(65, 2877, '2', 2.84605, 6, 1, '2017-09-13 07:57:15'),
(31, 594, '3', 1.6428, 13, 1, '2017-09-13 07:57:15'),
(62, 479, '1', -2.15643, 7, 0, '2017-09-13 07:57:16'),
(36, 1284, '0', -0.15, 20, 0, '2017-09-13 07:57:16'),
(48, 476, '2', -0.6075, 22, 0, '2017-09-13 07:57:16'),
(36, 1257, '4', 1.6875, 21, 1, '2017-09-13 07:57:16'),
(37, 2449, '1', -2.04, 32, 0, '2017-09-13 07:57:18'),
(46, 2606, '1', 2.43, 4, 1, '2017-09-13 07:57:18'),
(38, 2852, '2', 1.54083, 17, 1, '2017-09-13 07:57:18'),
(59, 613, '3', -0.03, 54, 0, '2017-09-13 07:57:19'),
(62, 756, '1', -2.63672, 3, 0, '2017-09-13 07:57:19'),
(40, 173, '0', -0.139248, 100, 0, '2017-09-13 07:57:19'),
(54, 2427, '0', 0, 10, -1, '2017-09-13 07:57:21'),
(65, 2883, '3', 2.81957, 7, 1, '2017-09-13 07:57:21'),
(70, 2649, '4', 2.87562, 8, 1, '2017-09-13 07:57:21'),
(56, 2634, '0', 0, 32, -1, '2017-09-13 07:57:22'),
(51, 1475, '2', 0, 46, 1, '2017-09-13 07:57:22'),
(44, 1606, '2', 1.45, 31, 1, '2017-09-13 07:57:23'),
(34, 2886, '4', -2.76586, 9, 0, '2017-09-13 07:57:23'),
(67, 1326, '1', 0.827586, 42, 1, '2017-09-13 07:57:24'),
(42, 1265, '0', -0.00110947, 52, 0, '2017-09-13 07:57:24'),
(38, 2841, '3', 2.43, 6, 1, '2017-09-13 07:57:24'),
(55, 2823, '4', -1.97297, 28, 0, '2017-09-13 07:57:24'),
(66, 1268, '3', -0.1875, 36, 0, '2017-09-13 07:57:25'),
(63, 1142, '4', 1.35, 11, 1, '2017-09-13 07:57:25'),
(49, 1482, '2', -0.125517, 35, 0, '2017-09-13 07:57:25'),
(57, 1470, '1', 1.08, 20, 1, '2017-09-13 07:57:26'),
(50, 2646, '1', 2.75492, 12, 1, '2017-09-13 07:57:26'),
(31, 1089, '4', -2.00083, 11, 0, '2017-09-13 07:57:26'),
(58, 1217, '2', -0.0675, 17, 0, '2017-09-13 07:57:26'),
(41, 1202, '1', 0.835648, 17, 1, '2017-09-13 07:57:28'),
(54, 1107, '4', 1.08, 8, 1, '2017-09-13 07:57:29'),
(47, 480, '3', -1.17188, 15, 0, '2017-09-13 07:57:29'),
(70, 2646, '1', 2.83779, 8, 1, '2017-09-13 07:57:29'),
(48, 753, '4', 1.43027, 13, 1, '2017-09-13 07:57:29'),
(60, 882, '2', -1.48315, 19, 0, '2017-09-13 07:57:30'),
(59, 598, '3', -2.00083, 11, 0, '2017-09-13 07:57:30'),
(35, 1284, '1', 0, 20, 0, '2017-09-13 07:57:30'),
(55, 2838, '3', 2.65, 7, 1, '2017-09-13 07:57:32'),
(68, 1488, '4', -0.303719, 30, 0, '2017-09-13 07:57:33'),
(50, 2665, '4', 2.73701, 9, 1, '2017-09-13 07:57:35'),
(70, 1163, '1', 2.25111, 7, 1, '2017-09-13 07:57:36'),
(58, 1220, '1', -1.10587, 11, 0, '2017-09-13 07:57:37'),
(53, 1475, '2', 0.141777, 36, 1, '2017-09-13 07:57:37'),
(52, 894, '3', -0.259516, 24, 0, '2017-09-13 07:57:37'),
(62, 482, '2', -0.979592, 18, 0, '2017-09-13 07:57:37'),
(54, 1115, '1', 0.9075, 9, 1, '2017-09-13 07:57:38'),
(45, 1209, '0', -0.06, 50, 0, '2017-09-13 07:57:38'),
(57, 3000, '4', -0.75, 12, 0, '2017-09-13 07:57:39'),
(65, 2881, '4', -2.53969, 17, 0, '2017-09-13 07:57:39'),
(67, 1320, '3', 2.1, 15, 1, '2017-09-13 07:57:39'),
(56, 2618, '3', 1.47, 18, 1, '2017-09-13 07:57:39'),
(59, 622, '2', 2.1675, 9, 1, '2017-09-13 07:57:39'),
(61, 2182, '0', -0.00259516, 34, 0, '2017-09-13 07:57:39'),
(69, 1477, '1', -0.371399, 35, 0, '2017-09-13 07:57:40'),
(33, 2187, '1', 0.379259, 58, 1, '2017-09-13 07:57:40'),
(68, 1482, '3', -2.12138, 7, 0, '2017-09-13 07:57:40'),
(50, 1163, '1', 2.36512, 6, 1, '2017-09-13 07:57:41'),
(36, 1281, '3', 0.5, 25, 1, '2017-09-13 07:57:41'),
(46, 2602, '3', 0.48, 24, 1, '2017-09-13 07:57:42'),
(39, 1287, '1', -0.0117188, 45, 0, '2017-09-13 07:57:42'),
(34, 2887, '3', 2.47992, 19, 1, '2017-09-13 07:57:42'),
(62, 474, '2', -2.1675, 6, 0, '2017-09-13 07:57:43'),
(41, 1217, '3', 0.1875, 15, 1, '2017-09-13 07:57:43'),
(71, 1268, '2', -0.046875, 42, 0, '2017-09-13 07:57:43'),
(43, 1485, '4', 0.134246, 41, 1, '2017-09-13 07:57:45'),
(45, 1188, '1', 2.35714, 6, 1, '2017-09-13 07:57:45'),
(42, 1219, '3', 0.0247934, 20, 1, '2017-09-13 07:57:45'),
(37, 2448, '1', -2.05435, 29, 0, '2017-09-13 07:57:46'),
(47, 474, '1', 0.9075, 18, 1, '2017-09-13 07:57:46'),
(52, 899, '2', -2.40755, 10, 0, '2017-09-13 07:57:47'),
(38, 2820, '2', 1.85, 23, 1, '2017-09-13 07:57:47'),
(31, 615, '4', -1.2675, 21, 0, '2017-09-13 07:57:47'),
(53, 1486, '4', -1.6875, 11, 0, '2017-09-13 07:57:47'),
(34, 2885, '1', -2.84605, 6, 0, '2017-09-13 07:57:48'),
(35, 1199, '3', 0.574219, 18, 1, '2017-09-13 07:57:49'),
(57, 1483, '3', -1.51454, 11, 0, '2017-09-13 07:57:49'),
(51, 1470, '1', 1.38, 27, 1, '2017-09-13 07:57:49'),
(66, 1199, '4', -0.105469, 26, 0, '2017-09-13 07:57:50'),
(50, 1164, '2', -1.88988, 10, 0, '2017-09-13 07:57:50'),
(62, 746, '2', -1.81481, 8, 0, '2017-09-13 07:57:51'),
(39, 1294, '3', 0.75, 12, 1, '2017-09-13 07:57:54'),
(38, 2734, '3', 2.6, 8, 1, '2017-09-13 07:57:55'),
(56, 2619, '2', -2.2, 16, 0, '2017-09-13 07:57:56'),
(43, 1476, '1', -1.86501, 11, 0, '2017-09-13 07:57:56'),
(66, 1171, '4', 1.6875, 5, 1, '2017-09-13 07:57:56'),
(65, 2861, '2', 2.47992, 19, 1, '2017-09-13 07:57:57'),
(64, 2625, '0', -0.05, 60, 0, '2017-09-13 07:57:57'),
(46, 2614, '4', 1.08, 16, 1, '2017-09-13 07:57:58'),
(37, 1150, '3', -1.05, 13, 0, '2017-09-13 07:57:59'),
(34, 2888, '3', 2.65518, 13, 1, '2017-09-13 07:58:01'),
(39, 1217, '3', 1.08, 8, 1, '2017-09-13 07:58:01'),
(52, 904, '2', 1.85204, 15, 1, '2017-09-13 07:58:01'),
(60, 306, '3', 0.46301, 34, 1, '2017-09-13 07:58:04'),
(37, 363, '3', 1.6875, 5, 1, '2017-09-13 07:58:04'),
(31, 601, '4', 1.38138, 18, 1, '2017-09-13 07:58:05'),
(69, 1471, '1', -1.02083, 25, 0, '2017-09-13 07:58:05'),
(67, 1090, '4', -1.7, 26, 0, '2017-09-13 07:58:05'),
(35, 1294, '3', 1, 16, 1, '2017-09-13 07:58:05'),
(48, 475, '2', -0.141777, 36, 0, '2017-09-13 07:58:05'),
(44, 1614, '4', 0.722222, 41, 1, '2017-09-13 07:58:05'),
(54, 2414, '1', -1.4415, 27, 0, '2017-09-13 07:58:05'),
(71, 1265, '0', 0, 22, -1, '2017-09-13 07:58:06'),
(58, 1199, '4', -0.0263672, 29, 0, '2017-09-13 07:58:06'),
(70, 2653, '3', -2.39104, 30, 0, '2017-09-13 07:58:07'),
(41, 1296, '0', -0.00520833, 24, 0, '2017-09-13 07:58:07'),
(64, 2628, '4', -2.45, 11, 0, '2017-09-13 07:58:08'),
(61, 2193, '2', 0.207756, 28, 1, '2017-09-13 07:58:08'),
(55, 2728, '1', -1.58309, 37, 0, '2017-09-13 07:58:09'),
(49, 1477, '2', -0.102881, 44, 0, '2017-09-13 07:58:09'),
(51, 1472, '3', 1.425, 21, 1, '2017-09-13 07:58:11'),
(66, 1202, '3', -1.75, 15, 0, '2017-09-13 07:58:11'),
(42, 1189, '1', -0.00382653, 27, 0, '2017-09-13 07:58:12'),
(34, 2871, '4', -2.71109, 11, 0, '2017-09-13 07:58:12'),
(53, 1468, '2', 0.48, 24, 1, '2017-09-13 07:58:12'),
(57, 1488, '4', -0.683368, 23, 0, '2017-09-13 07:58:13'),
(47, 757, '3', -0.567108, 26, 0, '2017-09-13 07:58:13'),
(33, 2201, '4', -0.6075, 33, 0, '2017-09-13 07:58:14'),
(59, 595, '4', 0.320636, 35, 1, '2017-09-13 07:58:14'),
(71, 1191, '3', 1.38138, 9, 1, '2017-09-13 07:58:14'),
(52, 356, '1', 1.93457, 13, 1, '2017-09-13 07:58:15'),
(65, 2866, '4', 2.50998, 18, 1, '2017-09-13 07:58:15'),
(55, 2732, '4', 2.65, 7, 1, '2017-09-13 07:58:15'),
(56, 2633, '3', 1.33333, 20, 1, '2017-09-13 07:58:16'),
(38, 2729, '3', -1.9, 22, 0, '2017-09-13 07:58:17'),
(61, 2190, '4', -1.83743, 10, 0, '2017-09-13 07:58:18'),
(70, 2657, '3', 2.80721, 11, 1, '2017-09-13 07:58:18'),
(54, 2400, '3', 1.98918, 13, 1, '2017-09-13 07:58:18'),
(68, 1476, '1', -0.217456, 38, 0, '2017-09-13 07:58:19'),
(35, 1281, '1', -1.6, 14, 0, '2017-09-13 07:58:19'),
(50, 2654, '1', -2.45675, 29, 0, '2017-09-13 07:58:19'),
(60, 918, '1', -2.03158, 17, 0, '2017-09-13 07:58:21'),
(47, 479, '3', -1.94093, 9, 0, '2017-09-13 07:58:21'),
(40, 171, '4', -1.1098, 62, 0, '2017-09-13 07:58:22'),
(65, 2874, '3', -2.79285, 8, 0, '2017-09-13 07:58:23'),
(34, 2882, '1', 2.68328, 12, 1, '2017-09-13 07:58:24'),
(44, 1601, '2', 2.03571, 18, 1, '2017-09-13 07:58:24'),
(59, 1124, '0', 0, 10, -1, '2017-09-13 07:58:24'),
(67, 1332, '3', 2, 20, 1, '2017-09-13 07:58:25'),
(57, 3002, '2', -0.75, 13, 0, '2017-09-13 07:58:25'),
(64, 2619, '3', 2.05, 19, 1, '2017-09-13 07:58:27'),
(50, 1161, '2', 2.13414, 8, 1, '2017-09-13 07:58:28'),
(39, 1250, '3', -0.9075, 27, 0, '2017-09-13 07:58:29'),
(54, 1131, '1', 0.6075, 11, 1, '2017-09-13 07:58:29'),
(52, 902, '3', -2.15643, 14, 0, '2017-09-13 07:58:29'),
(36, 1287, '0', -0.0625, 48, 0, '2017-09-13 07:58:29'),
(62, 1210, '0', -0.00520833, 24, 0, '2017-09-13 07:58:30'),
(65, 2871, '2', 2.76586, 9, 1, '2017-09-13 07:58:32'),
(34, 2877, '2', 2.79285, 8, 1, '2017-09-13 07:58:32'),
(70, 1167, '2', 1.19055, 15, 1, '2017-09-13 07:58:33'),
(66, 1289, '4', -0.6075, 22, 0, '2017-09-13 07:58:34'),
(51, 1482, '2', -1.36364, 24, 0, '2017-09-13 07:58:34'),
(43, 1487, '3', -0.0694707, 39, 0, '2017-09-13 07:58:35'),
(56, 2617, '1', 1.40083, 19, 1, '2017-09-13 07:58:35'),
(47, 740, '2', -1.12037, 14, 0, '2017-09-13 07:58:36'),
(68, 2933, '1', -0.130208, 19, 0, '2017-09-13 07:58:38'),
(46, 2615, '0', -0.001875, 40, 0, '2017-09-13 07:58:38'),
(53, 1476, '4', -0.75, 26, 0, '2017-09-13 07:58:39'),
(70, 2651, '4', 2.84583, 7, 1, '2017-09-13 07:58:40'),
(45, 1229, '0', -0.209987, 54, 0, '2017-09-13 07:58:40'),
(65, 2886, '4', -2.79285, 8, 0, '2017-09-13 07:58:40'),
(36, 1219, '3', 1.5, 11, 1, '2017-09-13 07:58:40'),
(62, 1196, '4', 1.02083, 10, 1, '2017-09-13 07:58:40'),
(71, 1200, '4', 0.231481, 26, 1, '2017-09-13 07:58:40'),
(49, 1473, '0', 0, 32, -1, '2017-09-13 07:58:42'),
(67, 1338, '0', 0, 17, -1, '2017-09-13 07:58:42'),
(31, 593, '2', -0.440833, 37, 0, '2017-09-13 07:58:43'),
(64, 2624, '4', -2.2, 16, 0, '2017-09-13 07:58:43'),
(34, 2883, '3', 2.71109, 11, 1, '2017-09-13 07:58:44'),
(42, 1199, '0', -0.00292969, 32, 0, '2017-09-13 07:58:44'),
(68, 1491, '1', -2.08333, 7, 0, '2017-09-13 07:58:44'),
(48, 480, '4', 0, 40, 0, '2017-09-13 07:58:45'),
(66, 1188, '2', -0.979592, 12, 0, '2017-09-13 07:58:46'),
(57, 1476, '1', -1.13609, 20, 0, '2017-09-13 07:58:46'),
(33, 2198, '1', -0.091875, 33, 0, '2017-09-13 07:58:47'),
(55, 2835, '1', -1.80492, 32, 0, '2017-09-13 07:58:48'),
(41, 1299, '2', -0.430441, 41, 0, '2017-09-13 07:58:48'),
(43, 1468, '1', -1.36688, 13, 0, '2017-09-13 07:58:48'),
(52, 910, '1', -1.8444, 19, 0, '2017-09-13 07:58:48'),
(46, 2609, '2', 1.57687, 11, 1, '2017-09-13 07:58:49'),
(60, 881, '4', -1.5552, 28, 0, '2017-09-13 07:58:49'),
(54, 396, '0', 0, 19, -1, '2017-09-13 07:58:49'),
(37, 2440, '3', -1.77273, 45, 0, '2017-09-13 07:58:49'),
(66, 1286, '2', -2.52083, 5, 0, '2017-09-13 07:58:50'),
(61, 1634, '4', -1.33333, 8, 0, '2017-09-13 07:58:51'),
(51, 3002, '3', -1.03846, 17, 0, '2017-09-13 07:58:51'),
(31, 604, '3', 2.08333, 10, 1, '2017-09-13 07:58:52'),
(69, 1485, '4', 0.0277367, 47, 1, '2017-09-13 07:58:52'),
(65, 2868, '2', 2.65518, 13, 1, '2017-09-13 07:58:54'),
(57, 1479, '2', -1.79132, 10, 0, '2017-09-13 07:58:55'),
(68, 1483, '3', -1.51454, 11, 0, '2017-09-13 07:58:55'),
(61, 1633, '2', 1.60207, 7, 1, '2017-09-13 07:58:57'),
(58, 1265, '0', -0.00110947, 52, 0, '2017-09-13 07:58:58'),
(38, 2731, '2', -1, 40, 0, '2017-09-13 07:58:58'),
(64, 2622, '1', -2.15, 17, 0, '2017-09-13 07:59:00'),
(31, 1313, '2', 2.27263, 7, 1, '2017-09-13 07:59:00'),
(34, 2900, '3', -2.62572, 17, 0, '2017-09-13 07:59:00'),
(45, 1299, '3', 2.35829, 20, 1, '2017-09-13 07:59:00'),
(52, 312, '1', -1.7328, 12, 0, '2017-09-13 07:59:01'),
(50, 2643, '4', -2.45017, 33, 0, '2017-09-13 07:59:01'),
(43, 1480, '3', -1.33333, 14, 0, '2017-09-13 07:59:03'),
(53, 2933, '4', 0, 24, 0, '2017-09-13 07:59:03'),
(53, 1488, '0', -0.683368, 24, 0, '2017-09-13 07:59:03'),
(42, 1220, '4', -0.309949, 19, 0, '2017-09-13 07:59:04'),
(63, 2453, '4', 0.838235, 98, 1, '2017-09-13 07:59:04'),
(62, 1169, '0', -0.00520833, 24, 0, '2017-09-13 07:59:05'),
(35, 1257, '2', -0.00520833, 46, 0, '2017-09-13 07:59:05'),
(44, 1608, '2', -0.576923, 42, 0, '2017-09-13 07:59:06'),
(41, 1275, '1', -1.26029, 19, 0, '2017-09-13 07:59:07'),
(56, 2845, '2', -1.4, 32, 0, '2017-09-13 07:59:08'),
(61, 1632, '2', -1.08, 12, 0, '2017-09-13 07:59:09'),
(38, 2730, '4', 2.45, 11, 1, '2017-09-13 07:59:09'),
(57, 1475, '1', -1.4518, 14, 0, '2017-09-13 07:59:09'),
(52, 908, '1', -2.35692, 10, 0, '2017-09-13 07:59:10'),
(64, 2825, '3', 2.45, 11, 1, '2017-09-13 07:59:11'),
(33, 2190, '2', 0.6862, 24, 1, '2017-09-13 07:59:12'),
(43, 1470, '1', 2.0172, 9, 1, '2017-09-13 07:59:12'),
(62, 1177, '2', 0.75, 11, 1, '2017-09-13 07:59:16'),
(47, 749, '1', -0.0833333, 40, 0, '2017-09-13 07:59:16'),
(59, 607, '1', -0.0239158, 51, 0, '2017-09-13 07:59:17'),
(50, 2659, '1', -2.69195, 15, 0, '2017-09-13 07:59:17'),
(40, 1275, '0', -0.209987, 54, 0, '2017-09-13 07:59:17'),
(43, 1491, '1', -2.08333, 7, 0, '2017-09-13 07:59:18'),
(55, 2833, '3', 1.88988, 30, 1, '2017-09-13 07:59:18'),
(57, 1484, '2', -1.85204, 9, 0, '2017-09-13 07:59:19'),
(52, 903, '4', 2.46387, 9, 1, '2017-09-13 07:59:19'),
(46, 2629, '0', 0, 31, -1, '2017-09-13 07:59:20'),
(53, 3002, '3', -0.359467, 17, 0, '2017-09-13 07:59:20'),
(51, 1469, '1', -0.825, 29, 0, '2017-09-13 07:59:20'),
(33, 2197, '2', -1.13609, 10, 0, '2017-09-13 07:59:21'),
(70, 2645, '2', -2.4542, 43, 0, '2017-09-13 07:59:23'),
(55, 2729, '3', -2.83093, 5, 0, '2017-09-13 07:59:24'),
(63, 1149, '0', -0.15, 20, 0, '2017-09-13 07:59:24'),
(50, 2649, '4', 2.87562, 8, 1, '2017-09-13 07:59:25'),
(43, 1484, '2', -2.20408, 6, 0, '2017-09-13 07:59:25'),
(48, 478, '2', -0.0972, 41, 0, '2017-09-13 07:59:26'),
(35, 1296, '3', -0.0208333, 22, 0, '2017-09-13 07:59:27'),
(49, 1485, '4', 0.0399408, 46, 1, '2017-09-13 07:59:28'),
(67, 1328, '2', -0.75, 45, 0, '2017-09-13 07:59:28'),
(38, 2835, '1', -2.05, 19, 0, '2017-09-13 07:59:28'),
(47, 753, '4', 1.53061, 12, 1, '2017-09-13 07:59:29'),
(71, 1269, '0', -0.00130208, 48, 0, '2017-09-13 07:59:29'),
(37, 2432, '4', 1.18041, 41, 1, '2017-09-13 07:59:30'),
(39, 172, '1', -0.57124, 62, 0, '2017-09-13 07:59:30'),
(40, 1295, '4', 1.67358, 14, 1, '2017-09-13 07:59:31'),
(54, 1190, '4', 0.0612245, 24, 1, '2017-09-13 07:59:31'),
(69, 1468, '1', -0.001875, 39, 0, '2017-09-13 07:59:31'),
(51, 3004, '2', -1.08, 12, 0, '2017-09-13 07:59:32'),
(36, 1265, '0', -0.0576923, 52, 0, '2017-09-13 07:59:32'),
(59, 1303, '1', 1.61333, 16, 1, '2017-09-13 07:59:32'),
(34, 2859, '1', -2.01246, 33, 0, '2017-09-13 07:59:33'),
(61, 1641, '3', 0.0956633, 23, 1, '2017-09-13 07:59:33'),
(46, 2621, '2', -2.35, 13, 0, '2017-09-13 07:59:33'),
(71, 1257, '0', 0, 4, -1, '2017-09-13 07:59:33'),
(57, 1468, '2', 1.2675, 14, 1, '2017-09-13 07:59:34'),
(67, 1339, '2', 2.7, 6, 1, '2017-09-13 07:59:34'),
(41, 1176, '0', -0.00382653, 28, 0, '2017-09-13 07:59:35'),
(55, 2733, '1', -2.4, 12, 0, '2017-09-13 07:59:35'),
(66, 171, '3', -0.574219, 45, 0, '2017-09-13 07:59:35'),
(33, 2188, '1', -1.60207, 14, 0, '2017-09-13 07:59:36'),
(62, 1291, '0', -0.0075, 20, 0, '2017-09-13 07:59:36'),
(68, 1473, '1', 0.12, 40, 1, '2017-09-13 07:59:36'),
(48, 502, '2', 1.83743, 10, 1, '2017-09-13 07:59:36'),
(65, 2879, '3', -1.59687, 43, 0, '2017-09-13 07:59:36'),
(39, 1283, '1', -1.50521, 7, 0, '2017-09-13 07:59:37'),
(44, 1598, '3', -1.21154, 31, 0, '2017-09-13 07:59:37'),
(38, 2733, '1', -2.5, 10, 0, '2017-09-13 07:59:38'),
(51, 1484, '2', -2.20408, 6, 0, '2017-09-13 07:59:38'),
(70, 1161, '3', -1.34442, 14, 0, '2017-09-13 07:59:38'),
(47, 502, '1', -1.83743, 10, 0, '2017-09-13 07:59:39'),
(43, 1471, '2', -1.6875, 15, 0, '2017-09-13 07:59:39'),
(64, 2734, '4', -1.55, 29, 0, '2017-09-13 07:59:40'),
(57, 1491, '1', -1.96599, 8, 0, '2017-09-13 07:59:41'),
(55, 2825, '1', -2.7, 6, 0, '2017-09-13 07:59:42'),
(50, 1166, '1', 0.846932, 17, 1, '2017-09-13 07:59:42'),
(65, 2884, '4', -2.81957, 7, 0, '2017-09-13 07:59:44'),
(53, 1481, '2', 0.48, 24, 1, '2017-09-13 07:59:44'),
(37, 2434, '1', 2.61818, 14, 1, '2017-09-13 07:59:44'),
(38, 2838, '3', 2.7, 6, 1, '2017-09-13 07:59:45'),
(58, 1257, '4', 0.00130208, 47, 1, '2017-09-13 07:59:45'),
(35, 1176, '4', 0.382653, 18, 1, '2017-09-13 07:59:46'),
(61, 1635, '4', 0.963333, 13, 1, '2017-09-13 07:59:46'),
(59, 611, '2', -1.5552, 14, 0, '2017-09-13 07:59:46'),
(47, 751, '2', 2.00826, 8, 1, '2017-09-13 07:59:47'),
(57, 1469, '2', 2.1675, 6, 1, '2017-09-13 07:59:47'),
(54, 1174, '3', 0.359467, 17, 1, '2017-09-13 07:59:48'),
(38, 2728, '1', -2.75, 5, 0, '2017-09-13 07:59:49'),
(65, 2870, '2', -2.79285, 8, 0, '2017-09-13 07:59:51'),
(71, 1217, '4', -0.0075, 19, 0, '2017-09-13 07:59:52'),
(42, 1268, '0', -0.00130208, 48, 0, '2017-09-13 07:59:52'),
(50, 2656, '2', -2.83779, 12, 0, '2017-09-13 07:59:54'),
(35, 1188, '2', -1.53061, 8, 0, '2017-09-13 07:59:54'),
(59, 854, '1', 2.35347, 8, 1, '2017-09-13 07:59:54'),
(47, 482, '1', -1.85204, 9, 0, '2017-09-13 07:59:55'),
(62, 1276, '4', -0.354492, 21, 0, '2017-09-13 07:59:57'),
(54, 1196, '4', 1.17188, 9, 1, '2017-09-13 07:59:57'),
(34, 2855, '3', -2.29129, 25, 0, '2017-09-13 07:59:58'),
(70, 1164, '0', -0.407163, 20, 0, '2017-09-13 07:59:58'),
(33, 2199, '0', 0, 23, -1, '2017-09-13 07:59:59'),
(31, 1337, '1', -0.0183105, 59, 0, '2017-09-13 07:59:59'),
(69, 1482, '3', -0.396694, 28, 0, '2017-09-13 08:00:00'),
(45, 1250, '0', -0.195743, 60, 0, '2017-09-13 08:00:01'),
(44, 1600, '2', -1.61538, 24, 0, '2017-09-13 08:00:01'),
(49, 1471, '4', 0.440833, 37, 1, '2017-09-13 08:00:04'),
(33, 2194, '4', -2.29688, 6, 0, '2017-09-13 08:00:04'),
(37, 1148, '0', -0.15, 20, 0, '2017-09-13 08:00:04'),
(56, 2838, '3', 0.0075, 57, 1, '2017-09-13 08:00:06'),
(70, 2640, '2', 2.84583, 7, 1, '2017-09-13 08:00:06'),
(64, 2728, '4', 1.7, 26, 1, '2017-09-13 08:00:06'),
(59, 1310, '4', 1.77515, 12, 1, '2017-09-13 08:00:06'),
(68, 1480, '3', -0.205782, 31, 0, '2017-09-13 08:00:07'),
(46, 2604, '1', -0.03, 36, 0, '2017-09-13 08:00:09'),
(53, 1480, '3', -0.491497, 25, 0, '2017-09-13 08:00:10'),
(62, 1218, '4', 0.3675, 13, 1, '2017-09-13 08:00:10'),
(58, 1282, '1', -0.0833333, 25, 0, '2017-09-13 08:00:10'),
(40, 1289, '0', -0.256496, 40, 0, '2017-09-13 08:00:11'),
(47, 741, '1', -1.00554, 16, 0, '2017-09-13 08:00:12'),
(51, 1474, '2', 0.108844, 34, 1, '2017-09-13 08:00:12'),
(41, 1289, '3', -0.0075, 38, 0, '2017-09-13 08:00:13'),
(52, 905, '3', -0.341719, 53, 0, '2017-09-13 08:00:13'),
(54, 1195, '4', 0.03, 18, 1, '2017-09-13 08:00:15'),
(43, 1481, '2', 0.046875, 35, 1, '2017-09-13 08:00:15'),
(71, 1139, '2', 0.27, 14, 1, '2017-09-13 08:00:15'),
(70, 2677, '4', 2.84605, 10, 1, '2017-09-13 08:00:16'),
(50, 2640, '2', 2.45246, 24, 1, '2017-09-13 08:00:18'),
(48, 751, '3', -0.00619835, 42, 0, '2017-09-13 08:00:18'),
(64, 2847, '4', 2.4, 12, 1, '2017-09-13 08:00:18'),
(38, 2881, '4', -1.55, 29, 0, '2017-09-13 08:00:19'),
(65, 2859, '4', -2.15639, 29, 0, '2017-09-13 08:00:20'),
(66, 1206, '1', -0.163333, 46, 0, '2017-09-13 08:00:22'),
(67, 1096, '3', 0.6, 48, 1, '2017-09-13 08:00:23'),
(62, 1190, '4', 0.860969, 13, 1, '2017-09-13 08:00:24'),
(37, 1154, '0', -0.15, 20, 0, '2017-09-13 08:00:24'),
(31, 1321, '3', 1.00269, 27, 1, '2017-09-13 08:00:27'),
(53, 3000, '3', 0.255208, 17, 1, '2017-09-13 08:00:27'),
(57, 1472, '0', -0.001875, 40, 0, '2017-09-13 08:00:28'),
(50, 2644, '1', 2.82829, 11, 1, '2017-09-13 08:00:29'),
(62, 1173, '2', 1.47, 6, 1, '2017-09-13 08:00:30'),
(60, 2427, '0', 0, 86, -1, '2017-09-13 08:00:30'),
(36, 1286, '4', 0.1, 58, 1, '2017-09-13 08:00:30'),
(46, 2608, '3', 0.6075, 22, 1, '2017-09-13 08:00:31'),
(43, 3002, '1', 0.443787, 16, 1, '2017-09-13 08:00:32'),
(59, 1301, '0', 0, 25, -1, '2017-09-13 08:00:32'),
(54, 1291, '0', 0, 17, -1, '2017-09-13 08:00:32'),
(33, 2196, '2', -0.853333, 28, 0, '2017-09-13 08:00:33'),
(55, 2845, '2', -0.45, 51, 0, '2017-09-13 08:00:33'),
(67, 1329, '3', 2.5, 10, 1, '2017-09-13 08:00:33'),
(66, 1296, '1', -0.880208, 11, 0, '2017-09-13 08:00:33'),
(70, 2691, '2', 2.73313, 17, 1, '2017-09-13 08:00:34'),
(61, 1693, '0', -0.00130208, 48, 0, '2017-09-13 08:00:34'),
(65, 2733, '2', 2.513, 14, 1, '2017-09-13 08:00:35'),
(34, 2884, '4', -1.85742, 37, 0, '2017-09-13 08:00:35'),
(69, 1475, '3', -0.17155, 35, 0, '2017-09-13 08:00:36'),
(42, 1257, '3', -0.0208333, 44, 0, '2017-09-13 08:00:37'),
(38, 2877, '2', 1.47, 18, 1, '2017-09-13 08:00:37'),
(68, 1485, '4', 0.586908, 29, 1, '2017-09-13 08:00:37'),
(53, 1471, '4', 2.08333, 10, 1, '2017-09-13 08:00:37'),
(39, 1206, '0', -0.000833333, 60, 0, '2017-09-13 08:00:37'),
(46, 2601, '2', 2.04187, 7, 1, '2017-09-13 08:00:38'),
(49, 1483, '2', -0.0186981, 35, 0, '2017-09-13 08:00:39'),
(64, 2735, '4', -1.8, 24, 0, '2017-09-13 08:00:42'),
(57, 1490, '2', -1.39463, 14, 0, '2017-09-13 08:00:42'),
(46, 2623, '0', 0, 4, -1, '2017-09-13 08:00:42'),
(50, 2639, '0', 0, 14, -1, '2017-09-13 08:00:43'),
(43, 1488, '2', 1.58678, 12, 1, '2017-09-13 08:00:44'),
(55, 2816, '4', 2.45, 11, 1, '2017-09-13 08:00:44'),
(44, 1613, '3', 0.9, 42, 1, '2017-09-13 08:00:44'),
(52, 964, '4', 1.21488, 32, 1, '2017-09-13 08:00:45'),
(69, 3008, '1', -1.2398, 10, 0, '2017-09-13 08:00:45'),
(65, 2887, '2', -2.71109, 11, 0, '2017-09-13 08:00:46'),
(67, 1118, '2', 2.513, 14, 1, '2017-09-13 08:00:47'),
(64, 2841, '3', 2.75, 5, 1, '2017-09-13 08:00:47'),
(61, 1711, '1', 1.58678, 12, 1, '2017-09-13 08:00:47'),
(62, 1216, '1', -0.1875, 18, 0, '2017-09-13 08:00:47'),
(39, 1264, '1', -2.15978, 10, 0, '2017-09-13 08:00:47'),
(54, 1194, '1', 0.646684, 15, 1, '2017-09-13 08:00:47'),
(38, 2887, '3', 2.08333, 10, 1, '2017-09-13 08:00:47'),
(35, 1250, '1', 0.0208333, 55, 1, '2017-09-13 08:00:50'),
(59, 596, '1', 1.33333, 18, 1, '2017-09-13 08:00:50'),
(50, 2636, '1', -2.88601, 7, 0, '2017-09-13 08:00:50'),
(34, 2864, '4', -2.56905, 16, 0, '2017-09-13 08:00:51'),
(56, 2852, '2', 0.163333, 46, 1, '2017-09-13 08:00:52'),
(52, 898, '4', -1.92, 8, 0, '2017-09-13 08:00:53'),
(47, 772, '3', 0.0208333, 44, 1, '2017-09-13 08:00:56'),
(54, 1170, '2', 1.17188, 9, 1, '2017-09-13 08:00:56'),
(61, 1637, '1', 0.880208, 11, 1, '2017-09-13 08:00:58'),
(69, 1481, '2', 1.47, 12, 1, '2017-09-13 08:00:58'),
(58, 1208, '2', -0.0048, 48, 0, '2017-09-13 08:00:58'),
(42, 1202, '3', -0.453704, 22, 0, '2017-09-13 08:00:59'),
(53, 1484, '4', 0.613946, 23, 1, '2017-09-13 08:01:00'),
(38, 2871, '2', 2.35, 13, 1, '2017-09-13 08:01:01'),
(65, 2882, '3', -2.47645, 15, 0, '2017-09-13 08:01:01'),
(45, 1286, '0', -0.195743, 60, 0, '2017-09-13 08:01:02'),
(51, 1485, '4', 0.00443787, 50, 1, '2017-09-13 08:01:02'),
(41, 1286, '4', 0.100833, 49, 1, '2017-09-13 08:01:03'),
(49, 1468, '2', 0.421875, 25, 1, '2017-09-13 08:01:04'),
(55, 2730, '4', 1.95, 21, 1, '2017-09-13 08:01:05'),
(71, 2429, '3', -1.2675, 49, 0, '2017-09-13 08:01:06'),
(65, 2889, '1', -2.79651, 6, 0, '2017-09-13 08:01:06'),
(48, 755, '0', -0.00130208, 48, 0, '2017-09-13 08:01:06'),
(40, 1229, '0', -0.209987, 54, 0, '2017-09-13 08:01:06'),
(62, 1203, '0', 0, 19, -1, '2017-09-13 08:01:06'),
(68, 1478, '4', -0.226875, 29, 0, '2017-09-13 08:01:07'),
(61, 1661, '3', 1.13609, 10, 1, '2017-09-13 08:01:08'),
(52, 896, '4', 1.08, 16, 1, '2017-09-13 08:01:09'),
(37, 2457, '2', 1.91129, 45, 1, '2017-09-13 08:01:09'),
(64, 2823, '3', 1.85, 23, 1, '2017-09-13 08:01:10'),
(65, 2885, '4', 2.83093, 5, 1, '2017-09-13 08:01:12'),
(50, 2661, '4', -2.73525, 22, 0, '2017-09-13 08:01:12'),
(33, 2185, '1', 0.105469, 39, 1, '2017-09-13 08:01:12'),
(51, 1480, '3', -1.53061, 12, 0, '2017-09-13 08:01:14'),
(43, 1498, '2', -0.333333, 32, 0, '2017-09-13 08:01:15'),
(38, 2884, '4', -2.2, 16, 0, '2017-09-13 08:01:16'),
(46, 2620, '4', 1.3, 34, 1, '2017-09-13 08:01:16'),
(64, 2835, '3', 2.7, 6, 1, '2017-09-13 08:01:16'),
(56, 2823, '3', 1.02083, 25, 1, '2017-09-13 08:01:17'),
(45, 1295, '4', 1.56006, 15, 1, '2017-09-13 08:01:17'),
(69, 1469, '2', 0.75, 20, 1, '2017-09-13 08:01:18'),
(62, 1183, '2', 0.619835, 12, 1, '2017-09-13 08:01:19'),
(47, 775, '3', -0.816635, 22, 0, '2017-09-13 08:01:19'),
(42, 1171, '0', -0.0075, 20, 0, '2017-09-13 08:01:20'),
(54, 1210, '0', -0.00520833, 24, 0, '2017-09-13 08:01:21'),
(34, 2825, '3', 1.88988, 30, 1, '2017-09-13 08:01:21'),
(44, 1625, '1', 0.625, 38, 1, '2017-09-13 08:01:22'),
(61, 1646, '2', 0.639053, 14, 1, '2017-09-13 08:01:22'),
(53, 1479, '2', -0.683368, 23, 0, '2017-09-13 08:01:24'),
(66, 1209, '0', -0.0012, 50, 0, '2017-09-13 08:01:24'),
(36, 1229, '0', -0.0555556, 54, 0, '2017-09-13 08:01:25'),
(31, 1326, '2', 0, 58, 0, '2017-09-13 08:01:25'),
(61, 1702, '2', 2.60486, 3, 1, '2017-09-13 08:01:25'),
(51, 1468, '1', -1.57687, 11, 0, '2017-09-13 08:01:26'),
(60, 2414, '4', -0.396694, 56, 0, '2017-09-13 08:01:26'),
(47, 484, '1', 2.15643, 7, 1, '2017-09-13 08:01:26'),
(46, 2634, '0', 0, 11, -1, '2017-09-13 08:01:27'),
(52, 897, '4', -0.9075, 18, 0, '2017-09-13 08:01:27'),
(62, 1174, '3', 1.13609, 10, 1, '2017-09-13 08:01:28'),
(68, 1503, '2', 0.816635, 22, 1, '2017-09-13 08:01:29'),
(48, 744, '3', 0.541875, 23, 1, '2017-09-13 08:01:29'),
(37, 1146, '0', -0.15, 20, 0, '2017-09-13 08:01:29'),
(51, 1491, '1', -2.32823, 5, 0, '2017-09-13 08:01:30'),
(64, 2819, '1', -2.47645, 15, 0, '2017-09-13 08:01:31'),
(43, 2947, '2', -0.653333, 16, 0, '2017-09-13 08:01:31'),
(54, 1216, '0', 0, 11, -1, '2017-09-13 08:01:32'),
(34, 2868, '3', -2.68328, 12, 0, '2017-09-13 08:01:33'),
(70, 2663, '2', 2.12132, 60, 1, '2017-09-13 08:01:34'),
(66, 1275, '2', -1.99177, 10, 0, '2017-09-13 08:01:34'),
(65, 2855, '2', -2.17348, 23, 0, '2017-09-13 08:01:34'),
(57, 1500, '0', -0.00110947, 52, 0, '2017-09-13 08:01:34'),
(61, 1679, '0', 0, 10, -1, '2017-09-13 08:01:35'),
(68, 1492, '2', 2.12138, 7, 1, '2017-09-13 08:01:35'),
(36, 1298, '1', 2.4, 12, 1, '2017-09-13 08:01:36'),
(49, 1480, '3', -0.170068, 32, 0, '2017-09-13 08:01:36'),
(55, 2847, '3', -1.45, 31, 0, '2017-09-13 08:01:37'),
(66, 1229, '1', -2.67593, 3, 0, '2017-09-13 08:01:37'),
(42, 1191, '3', 0.382653, 18, 1, '2017-09-13 08:01:39'),
(33, 2193, '3', -0.299169, 26, 0, '2017-09-13 08:01:39'),
(34, 2733, '2', 2.76188, 7, 1, '2017-09-13 08:01:40'),
(67, 623, '1', 1.65867, 53, 1, '2017-09-13 08:01:40'),
(54, 1173, '2', 1.08, 8, 1, '2017-09-13 08:01:40'),
(70, 2673, '2', -2.92916, 7, 0, '2017-09-13 08:01:41'),
(38, 2859, '1', -1.75, 25, 0, '2017-09-13 08:01:42'),
(61, 1677, '4', -2.08333, 8, 0, '2017-09-13 08:01:43'),
(47, 769, '2', -1.12965, 17, 0, '2017-09-13 08:01:43'),
(60, 385, '0', 0, 17, -1, '2017-09-13 08:01:43'),
(44, 1630, '3', -1.63043, 21, 0, '2017-09-13 08:01:44'),
(64, 2852, '4', -2.35, 13, 0, '2017-09-13 08:01:44'),
(69, 3002, '0', -0.00443787, 26, 0, '2017-09-13 08:01:45'),
(58, 1268, '3', 0, 48, 0, '2017-09-13 08:01:46'),
(68, 1499, '3', -1.63894, 12, 0, '2017-09-13 08:01:47'),
(66, 173, '4', 2.43, 10, 1, '2017-09-13 08:01:48'),
(57, 1494, '3', -1.29848, 13, 0, '2017-09-13 08:01:48'),
(65, 2864, '2', 2.513, 14, 1, '2017-09-13 08:01:48'),
(64, 2833, '4', -2.75, 5, 0, '2017-09-13 08:01:49'),
(37, 1144, '0', -0.15, 20, 0, '2017-09-13 08:01:49'),
(36, 1296, '1', -1.25, 14, 0, '2017-09-13 08:01:50'),
(63, 2450, '0', -0.0208333, 144, 0, '2017-09-13 08:01:50'),
(59, 995, '0', -0.05, 60, 0, '2017-09-13 08:01:51'),
(67, 1345, '1', 2.65665, 11, 1, '2017-09-13 08:01:51'),
(48, 745, '3', -0.6075, 22, 0, '2017-09-13 08:01:51'),
(31, 1113, '4', -1.10193, 26, 0, '2017-09-13 08:01:51'),
(34, 2861, '2', 2.68328, 12, 1, '2017-09-13 08:01:52'),
(52, 317, '1', 0.9075, 27, 1, '2017-09-13 08:01:54'),
(54, 1184, '4', 0.421875, 15, 1, '2017-09-13 08:01:56'),
(42, 1293, '2', 0.255208, 17, 1, '2017-09-13 08:01:56'),
(33, 2200, '1', 1.12965, 17, 1, '2017-09-13 08:01:56'),
(62, 1185, '0', -0.00382653, 28, 0, '2017-09-13 08:01:57'),
(34, 2899, '4', -2.87228, 5, 0, '2017-09-13 08:01:57'),
(53, 1474, '3', -0.0833333, 35, 0, '2017-09-13 08:01:59'),
(56, 2731, '4', 0.95, 41, 1, '2017-09-13 08:01:59'),
(65, 2908, '3', 2.62111, 11, 1, '2017-09-13 08:01:59'),
(43, 1500, '1', -0.693417, 27, 0, '2017-09-13 08:01:59'),
(61, 1715, '2', -1.4856, 16, 0, '2017-09-13 08:02:00'),
(66, 1187, '1', -1.17188, 12, 0, '2017-09-13 08:02:00'),
(57, 1489, '4', -1.43027, 13, 0, '2017-09-13 08:02:01'),
(59, 1329, '3', 2.5, 10, 1, '2017-09-13 08:02:01'),
(51, 1487, '3', -0.318998, 31, 0, '2017-09-13 08:02:01'),
(60, 1116, '4', 0.03, 18, 1, '2017-09-13 08:02:01'),
(70, 2696, '2', -2.72489, 21, 0, '2017-09-13 08:02:02'),
(47, 776, '4', -0.958412, 20, 0, '2017-09-13 08:02:03'),
(39, 173, '1', -0.1728, 76, 0, '2017-09-13 08:02:04'),
(46, 2625, '1', -1.1, 38, 0, '2017-09-13 08:02:05'),
(67, 1366, '1', -2.513, 14, 0, '2017-09-13 08:02:05'),
(62, 1197, '3', -1.17188, 9, 0, '2017-09-13 08:02:06'),
(38, 2864, '4', -1.8, 24, 0, '2017-09-13 08:02:06'),
(35, 172, '2', 0.286612, 76, 1, '2017-09-13 08:02:07'),
(59, 1313, '2', 2.66667, 6, 1, '2017-09-13 08:02:07'),
(65, 2895, '2', 2.76586, 9, 1, '2017-09-13 08:02:09'),
(50, 2642, '1', 2.00992, 56, 1, '2017-09-13 08:02:09'),
(37, 1155, '0', -0.15, 20, 0, '2017-09-13 08:02:10'),
(61, 1698, '4', -1.9571, 10, 0, '2017-09-13 08:02:10'),
(52, 360, '4', -1.79132, 15, 0, '2017-09-13 08:02:10'),
(49, 1479, '3', 0.125517, 35, 1, '2017-09-13 08:02:11'),
(56, 2732, '4', 2.4, 12, 1, '2017-09-13 08:02:11'),
(58, 1281, '2', -0.0833333, 25, 0, '2017-09-13 08:02:11'),
(66, 1250, '2', -1.84083, 13, 0, '2017-09-13 08:02:12'),
(40, 1299, '0', -0.183693, 66, 0, '2017-09-13 08:02:13'),
(50, 1158, '2', 2.58532, 4, 1, '2017-09-13 08:02:13'),
(55, 2735, '1', 1.15, 37, 1, '2017-09-13 08:02:14'),
(67, 1360, '0', 0, 8, -1, '2017-09-13 08:02:14'),
(61, 1709, '2', -2.50095, 4, 0, '2017-09-13 08:02:14'),
(62, 1194, '1', 1.38138, 9, 1, '2017-09-13 08:02:15'),
(36, 1206, '3', -1.7, 26, 0, '2017-09-13 08:02:17'),
(31, 1096, '1', -0.963333, 26, 0, '2017-09-13 08:02:17'),
(69, 1478, '2', 0.12, 32, 1, '2017-09-13 08:02:17'),
(54, 1276, '1', 0.237305, 23, 1, '2017-09-13 08:02:19'),
(52, 895, '3', -1.74723, 9, 0, '2017-09-13 08:02:19'),
(44, 1622, '4', 1.125, 35, 1, '2017-09-13 08:02:19'),
(35, 1298, '1', 1.84083, 13, 1, '2017-09-13 08:02:20'),
(41, 171, '1', 0.00046875, 79, 1, '2017-09-13 08:02:21'),
(60, 393, '3', -0.0075, 19, 0, '2017-09-13 08:02:21'),
(65, 2900, '3', -2.65518, 13, 0, '2017-09-13 08:02:22'),
(68, 1507, '4', -0.320636, 35, 0, '2017-09-13 08:02:23'),
(58, 1293, '1', -0.75, 12, 0, '2017-09-13 08:02:23'),
(38, 2855, '1', -1.33333, 20, 0, '2017-09-13 08:02:26'),
(62, 1170, '2', 0.75, 12, 1, '2017-09-13 08:02:27'),
(71, 2431, '2', -0.0428875, 81, 0, '2017-09-13 08:02:27'),
(40, 1176, '4', 1.79878, 15, 1, '2017-09-13 08:02:28'),
(67, 1356, '1', 2.47645, 15, 1, '2017-09-13 08:02:28'),
(59, 1090, '1', -1.9, 22, 0, '2017-09-13 08:02:29'),
(33, 2192, '4', -0.563333, 34, 0, '2017-09-13 08:02:30'),
(71, 1114, '2', -1.92, 4, 0, '2017-09-13 08:02:31'),
(69, 1470, '1', 1.5552, 14, 1, '2017-09-13 08:02:31'),
(52, 900, '3', -2.20408, 12, 0, '2017-09-13 08:02:31'),
(55, 2820, '1', -2.1, 18, 0, '2017-09-13 08:02:32'),
(48, 749, '2', 0.046875, 42, 1, '2017-09-13 08:02:33'),
(50, 1167, '0', -0.407163, 20, 0, '2017-09-13 08:02:34'),
(61, 1644, '2', -0.1875, 21, 0, '2017-09-13 08:02:35'),
(36, 1187, '1', -1.125, 20, 0, '2017-09-13 08:02:36'),
(65, 2890, '1', -2.59808, 15, 0, '2017-09-13 08:02:36'),
(58, 1219, '3', 0.502066, 13, 1, '2017-09-13 08:02:36'),
(34, 2144, '1', -0.688802, 25, 0, '2017-09-13 08:02:36'),
(45, 171, '0', -0.161583, 80, 0, '2017-09-13 08:02:38'),
(69, 1484, '2', -2.08333, 7, 0, '2017-09-13 08:02:38'),
(60, 387, '3', -0.0075, 19, 0, '2017-09-13 08:02:40'),
(37, 2454, '2', 2.3125, 33, 1, '2017-09-13 08:02:42'),
(40, 1204, '4', 2.33688, 15, 1, '2017-09-13 08:02:43'),
(67, 1361, '1', -2.58532, 12, 0, '2017-09-13 08:02:43'),
(48, 483, '2', 1.83743, 10, 1, '2017-09-13 08:02:43'),
(62, 1198, '2', -0.12, 16, 0, '2017-09-13 08:02:44'),
(47, 470, '0', -0.001875, 40, 0, '2017-09-13 08:02:44'),
(57, 1501, '0', 0, 43, -1, '2017-09-13 08:02:44'),
(35, 1299, '3', 1.90909, 24, 1, '2017-09-13 08:02:44'),
(59, 1343, '4', 2.1, 15, 1, '2017-09-13 08:02:44'),
(65, 2898, '4', 2.69195, 9, 1, '2017-09-13 08:02:45'),
(34, 2158, '1', 2.08333, 8, 1, '2017-09-13 08:02:45'),
(52, 909, '1', -2.2188, 14, 0, '2017-09-13 08:02:45'),
(63, 2448, '1', -1.23913, 54, 0, '2017-09-13 08:02:46'),
(54, 1203, '0', 0, 27, -1, '2017-09-13 08:02:46'),
(70, 2658, '1', -2.4542, 43, 0, '2017-09-13 08:02:46'),
(46, 2622, '1', -0.9, 42, 0, '2017-09-13 08:02:47'),
(49, 1474, '3', -0.0612245, 36, 0, '2017-09-13 08:02:47'),
(38, 2888, '0', 0, 21, -1, '2017-09-13 08:02:48'),
(50, 2662, '4', 2.67874, 15, 1, '2017-09-13 08:02:48'),
(71, 366, '4', 0.0675, 17, 1, '2017-09-13 08:02:49'),
(64, 2733, '0', -0.05, 60, 0, '2017-09-13 08:02:49'),
(36, 1299, '2', -2.36364, 14, 0, '2017-09-13 08:02:50'),
(51, 1507, '1', 0.00998521, 49, 1, '2017-09-13 08:02:50'),
(68, 3054, '4', 0.03, 27, 1, '2017-09-13 08:02:51'),
(53, 1477, '2', -0.00411523, 52, 0, '2017-09-13 08:02:51'),
(45, 1283, '4', 1.78337, 13, 1, '2017-09-13 08:02:51'),
(67, 618, '1', 2.5186, 12, 1, '2017-09-13 08:02:52'),
(55, 2734, '3', 1.95, 21, 1, '2017-09-13 08:02:53'),
(34, 2151, '3', -2.1168, 8, 0, '2017-09-13 08:02:53'),
(33, 2186, '2', -0.988683, 23, 0, '2017-09-13 08:02:53'),
(52, 969, '1', -2.45578, 8, 0, '2017-09-13 08:02:54'),
(65, 2906, '1', -2.76586, 9, 0, '2017-09-13 08:02:54'),
(63, 1156, '1', 1.65, 9, 1, '2017-09-13 08:02:55'),
(66, 1299, '3', 0.396694, 42, 1, '2017-09-13 08:02:55'),
(56, 2730, '4', 0.75, 45, 1, '2017-09-13 08:02:56'),
(37, 2442, '4', 2.4375, 15, 1, '2017-09-13 08:02:57'),
(60, 1114, '3', -0.03, 18, 0, '2017-09-13 08:02:58'),
(68, 3062, '1', 1.6875, 8, 1, '2017-09-13 08:02:58'),
(45, 1187, '1', -2.54477, 7, 0, '2017-09-13 08:02:59'),
(70, 2648, '3', -2.77145, 13, 0, '2017-09-13 08:02:59'),
(54, 1297, '3', 1.76333, 14, 1, '2017-09-13 08:03:00'),
(69, 1488, '2', 0.75, 22, 1, '2017-09-13 08:03:00'),
(61, 1681, '0', 0, 25, -1, '2017-09-13 08:03:01'),
(62, 1195, '4', 0.0675, 17, 1, '2017-09-13 08:03:01'),
(59, 1113, '2', -2.22727, 17, 0, '2017-09-13 08:03:02'),
(44, 1618, '2', -0.42, 43, 0, '2017-09-13 08:03:02'),
(67, 1316, '3', 2.65665, 10, 1, '2017-09-13 08:03:03'),
(39, 1298, '0', -0.000833333, 60, 0, '2017-09-13 08:03:04'),
(57, 1495, '2', 0.823129, 20, 1, '2017-09-13 08:03:04'),
(52, 907, '2', 2.26573, 11, 1, '2017-09-13 08:03:04'),
(46, 2610, '3', 0.9075, 18, 1, '2017-09-13 08:03:05'),
(45, 1176, '4', 2.55445, 6, 1, '2017-09-13 08:03:05'),
(38, 2886, '1', 1.47, 18, 1, '2017-09-13 08:03:06'),
(43, 1504, '2', -0.0792188, 67, 0, '2017-09-13 08:03:07'),
(70, 2665, '4', 2.76684, 8, 1, '2017-09-13 08:03:07'),
(71, 1133, '4', -0.0075, 19, 0, '2017-09-13 08:03:08'),
(49, 1488, '2', 0.819731, 21, 1, '2017-09-13 08:03:08'),
(31, 1340, '4', -0.0944329, 51, 0, '2017-09-13 08:03:09'),
(47, 777, '4', -0.625236, 25, 0, '2017-09-13 08:03:09'),
(39, 1275, '1', -2.37037, 6, 0, '2017-09-13 08:03:10'),
(46, 2628, '4', -2.75, 5, 0, '2017-09-13 08:03:10'),
(38, 2882, '1', 2.52083, 5, 1, '2017-09-13 08:03:11'),
(59, 1315, '4', 2.53448, 9, 1, '2017-09-13 08:03:11'),
(53, 1502, '4', -1.03355, 19, 0, '2017-09-13 08:03:11'),
(61, 1700, '1', 1.8252, 11, 1, '2017-09-13 08:03:12'),
(62, 1292, '0', 0, 11, -1, '2017-09-13 08:03:12'),
(37, 1149, '1', 0.6, 16, 1, '2017-09-13 08:03:13'),
(69, 1491, '1', -1.53061, 12, 0, '2017-09-13 08:03:13'),
(71, 2418, '2', 2.49797, 7, 1, '2017-09-13 08:03:15'),
(63, 1152, '0', -0.15, 20, 0, '2017-09-13 08:03:15'),
(46, 2611, '3', 2.1675, 6, 1, '2017-09-13 08:03:16'),
(38, 2866, '4', 2.7, 6, 1, '2017-09-13 08:03:16'),
(54, 1197, '3', -0.255208, 17, 0, '2017-09-13 08:03:17'),
(60, 398, '0', -0.0075, 20, 0, '2017-09-13 08:03:18'),
(34, 2150, '2', -0.251385, 27, 0, '2017-09-13 08:03:20'),
(51, 3076, '0', -0.00333333, 30, 0, '2017-09-13 08:03:20'),
(65, 2909, '4', 2.05434, 26, 1, '2017-09-13 08:03:21'),
(47, 758, '1', -1.40443, 12, 0, '2017-09-13 08:03:21'),
(55, 2884, '1', 1.5, 30, 1, '2017-09-13 08:03:23'),
(38, 2865, '3', 2.65, 7, 1, '2017-09-13 08:03:23'),
(42, 3400, '4', -0.046875, 28, 0, '2017-09-13 08:03:24'),
(58, 1287, '0', -0.00130208, 48, 0, '2017-09-13 08:03:24'),
(65, 2896, '3', 2.79651, 6, 1, '2017-09-13 08:03:26'),
(62, 1172, '4', 0.27, 14, 1, '2017-09-13 08:03:26'),
(57, 3076, '3', -0.163333, 23, 0, '2017-09-13 08:03:27'),
(43, 1489, '4', -0.823129, 20, 0, '2017-09-13 08:03:27'),
(68, 1500, '2', -0.586908, 29, 0, '2017-09-13 08:03:27'),
(67, 617, '2', -2.13414, 24, 0, '2017-09-13 08:03:27'),
(40, 1206, '4', 1.19055, 45, 1, '2017-09-13 08:03:29'),
(45, 1298, '1', 2.13414, 24, 1, '2017-09-13 08:03:29'),
(66, 1298, '3', -0.563333, 34, 0, '2017-09-13 08:03:29'),
(33, 2189, '0', 0, 35, -1, '2017-09-13 08:03:29'),
(48, 752, '0', -0.0652174, 46, 0, '2017-09-13 08:03:29'),
(46, 2616, '1', -2.3, 14, 0, '2017-09-13 08:03:30'),
(50, 2648, '3', -2.20308, 43, 0, '2017-09-13 08:03:32'),
(60, 379, '3', 0.3675, 13, 1, '2017-09-13 08:03:32'),
(55, 2885, '1', -2.55, 9, 0, '2017-09-13 08:03:33'),
(69, 1472, '4', -0.826875, 19, 0, '2017-09-13 08:03:33'),
(52, 869, '3', -0.99449, 28, 0, '2017-09-13 08:03:33'),
(65, 2891, '1', 2.84605, 6, 1, '2017-09-13 08:03:33'),
(34, 2155, '1', -1.43027, 13, 0, '2017-09-13 08:03:33'),
(38, 2868, '2', 2.5, 10, 1, '2017-09-13 08:03:34'),
(46, 2617, '1', 2.52083, 5, 1, '2017-09-13 08:03:35'),
(55, 2886, '1', 2.85, 3, 1, '2017-09-13 08:03:35'),
(71, 402, '0', -0.0075, 20, 0, '2017-09-13 08:03:35'),
(62, 1186, '3', 1.2398, 10, 1, '2017-09-13 08:03:36'),
(35, 173, '2', -1.38, 54, 0, '2017-09-13 08:03:39'),
(54, 1185, '4', 0.137755, 22, 1, '2017-09-13 08:03:39'),
(45, 1296, '4', -2.09443, 10, 0, '2017-09-13 08:03:39'),
(31, 1338, '4', -0.646684, 30, 0, '2017-09-13 08:03:40'),
(46, 2627, '1', -2.7, 6, 0, '2017-09-13 08:03:41'),
(41, 173, '2', -0.1323, 79, 0, '2017-09-13 08:03:41'),
(70, 2661, '3', -2.58532, 34, 0, '2017-09-13 08:03:41'),
(71, 1109, '4', -1.47, 6, 0, '2017-09-13 08:03:42'),
(34, 2161, '3', 1.49481, 10, 1, '2017-09-13 08:03:43'),
(35, 1286, '1', -2.8, 4, 0, '2017-09-13 08:03:43'),
(38, 2874, '1', 2.55, 9, 1, '2017-09-13 08:03:43'),
(68, 1506, '1', 1.3872, 16, 1, '2017-09-13 08:03:44'),
(52, 912, '2', 2.29688, 12, 1, '2017-09-13 08:03:45'),
(58, 1189, '1', -0.1875, 21, 0, '2017-09-13 08:03:46'),
(61, 1706, '0', 0, 34, -1, '2017-09-13 08:03:46'),
(57, 1502, '4', -1.03355, 19, 0, '2017-09-13 08:03:46'),
(56, 2728, '2', -0.55, 49, 0, '2017-09-13 08:03:46'),
(51, 1502, '4', -0.567108, 26, 0, '2017-09-13 08:03:46'),
(67, 1098, '4', -2.32743, 19, 0, '2017-09-13 08:03:47'),
(42, 3408, '3', 0.163333, 23, 1, '2017-09-13 08:03:48'),
(70, 1160, '2', 2.13414, 8, 1, '2017-09-13 08:03:49'),
(64, 2729, '0', -0.05, 60, 0, '2017-09-13 08:03:50'),
(31, 1092, '1', 2.08333, 10, 1, '2017-09-13 08:03:50'),
(63, 2445, '1', -2.16923, 36, 0, '2017-09-13 08:03:51'),
(66, 1204, '4', 0.880208, 22, 1, '2017-09-13 08:03:51'),
(55, 2871, '2', 2.2, 16, 1, '2017-09-13 08:03:52'),
(50, 1168, '0', -0.407163, 20, 0, '2017-09-13 08:03:52'),
(60, 390, '0', -0.0075, 20, 0, '2017-09-13 08:03:52'),
(65, 2894, '3', -2.44949, 20, 0, '2017-09-13 08:03:52'),
(38, 2889, '2', 2.69195, 9, 1, '2017-09-13 08:03:52'),
(45, 1275, '4', 2.45602, 14, 1, '2017-09-13 08:03:53'),
(49, 1476, '4', -0.0277367, 47, 0, '2017-09-13 08:03:55'),
(67, 608, '0', 0, 10, -1, '2017-09-13 08:03:56'),
(69, 2933, '0', -0.00520833, 24, 0, '2017-09-13 08:03:57'),
(71, 374, '4', 0.12, 16, 1, '2017-09-13 08:03:58'),
(61, 1675, '1', -1.81481, 12, 0, '2017-09-13 08:03:58'),
(63, 1151, '2', 1.95, 7, 1, '2017-09-13 08:03:58'),
(40, 172, '2', 2.42616, 30, 1, '2017-09-13 08:03:59'),
(62, 1261, '0', 0, 23, -1, '2017-09-13 08:03:59'),
(47, 2143, '4', 0.316875, 27, 1, '2017-09-13 08:04:00'),
(56, 2819, '2', 2.3, 14, 1, '2017-09-13 08:04:00'),
(44, 1645, '3', -0.328125, 57, 0, '2017-09-13 08:04:00'),
(43, 1507, '1', 0.359467, 34, 1, '2017-09-13 08:04:01'),
(42, 3413, '1', -0.853333, 14, 0, '2017-09-13 08:04:02'),
(52, 925, '2', 1.95287, 17, 1, '2017-09-13 08:04:02'),
(38, 2861, '2', 2.65665, 10, 1, '2017-09-13 08:04:02'),
(67, 1351, '3', -2.79651, 6, 0, '2017-09-13 08:04:02'),
(50, 2638, '3', -2.75028, 11, 0, '2017-09-13 08:04:03'),
(58, 1286, '1', -1.54083, 17, 0, '2017-09-13 08:04:03'),
(70, 1168, '3', -1.34442, 14, 0, '2017-09-13 08:04:03'),
(46, 2624, '4', -1.14083, 23, 0, '2017-09-13 08:04:04'),
(39, 1229, '0', -0.00102881, 54, 0, '2017-09-13 08:04:04'),
(66, 1283, '4', 0.520833, 14, 1, '2017-09-13 08:04:06'),
(65, 2902, '1', -2.59808, 15, 0, '2017-09-13 08:04:07'),
(40, 1188, '1', 2.3166, 9, 1, '2017-09-13 08:04:08'),
(70, 1159, '1', 2.58532, 4, 1, '2017-09-13 08:04:08'),
(48, 757, '2', 0.456522, 39, 1, '2017-09-13 08:04:08'),
(56, 2841, '3', 2.6, 8, 1, '2017-09-13 08:04:08'),
(31, 1106, '3', 1.40083, 19, 1, '2017-09-13 08:04:09'),
(57, 2947, '3', 0.163333, 23, 1, '2017-09-13 08:04:09'),
(60, 402, '4', -0.03, 18, 0, '2017-09-13 08:04:10'),
(68, 1493, '3', -0.3675, 26, 0, '2017-09-13 08:04:10'),
(53, 1505, '1', 0.206719, 59, 1, '2017-09-13 08:04:11'),
(59, 1126, '0', -0.05, 60, 0, '2017-09-13 08:04:12'),
(37, 2642, '1', 1.95036, 59, 1, '2017-09-13 08:04:12'),
(69, 1494, '4', 1.00554, 16, 1, '2017-09-13 08:04:14'),
(66, 1176, '3', -1.53061, 8, 0, '2017-09-13 08:04:14'),
(62, 1184, '4', 0.421875, 15, 1, '2017-09-13 08:04:15'),
(50, 1162, '3', 1.62865, 12, 1, '2017-09-13 08:04:15'),
(36, 172, '2', 0.681818, 85, 1, '2017-09-13 08:04:15'),
(46, 2626, '3', 1.92, 12, 1, '2017-09-13 08:04:16'),
(31, 1331, '2', 1.92, 8, 1, '2017-09-13 08:04:16'),
(42, 3402, '1', 0.84668, 15, 1, '2017-09-13 08:04:17'),
(38, 2879, '2', 2.47645, 15, 1, '2017-09-13 08:04:17'),
(54, 1261, '0', -0.00207756, 38, 0, '2017-09-13 08:04:18'),
(40, 1296, '4', -1.99347, 11, 0, '2017-09-13 08:04:19'),
(52, 324, '1', -1.38138, 18, 0, '2017-09-13 08:04:20'),
(49, 1487, '1', 0.567108, 26, 1, '2017-09-13 08:04:22'),
(65, 2901, '3', -2.62679, 14, 0, '2017-09-13 08:04:22'),
(60, 375, '4', -0.48, 12, 0, '2017-09-13 08:04:22'),
(57, 3062, '1', 1.05762, 13, 1, '2017-09-13 08:04:23'),
(35, 1289, '0', -0.001875, 40, 0, '2017-09-13 08:04:24'),
(71, 2419, '0', 0, 25, -1, '2017-09-13 08:04:24'),
(56, 2734, '3', 2.2, 16, 1, '2017-09-13 08:04:24'),
(51, 1497, '2', 0.0153061, 39, 1, '2017-09-13 08:04:25'),
(31, 1332, '3', 2.55, 9, 1, '2017-09-13 08:04:26'),
(55, 2864, '2', 1.71792, 34, 1, '2017-09-13 08:04:26'),
(59, 1339, '2', 2.25, 15, 1, '2017-09-13 08:04:27'),
(46, 2632, '3', 2.00083, 11, 1, '2017-09-13 08:04:27'),
(65, 2899, '2', 2.83093, 5, 1, '2017-09-13 08:04:27');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(37, 1167, '2', 1.19055, 15, 1, '2017-09-13 08:04:27'),
(66, 1295, '4', 0.630208, 13, 1, '2017-09-13 08:04:27'),
(45, 1289, '4', -0.846932, 34, 0, '2017-09-13 08:04:28'),
(54, 1177, '2', 0.75, 11, 1, '2017-09-13 08:04:29'),
(62, 1227, '4', -0.520833, 14, 0, '2017-09-13 08:04:29'),
(60, 389, '2', 1.08, 8, 1, '2017-09-13 08:04:30'),
(66, 172, '2', 2.78579, 4, 1, '2017-09-13 08:04:31'),
(52, 861, '3', 2.00083, 11, 1, '2017-09-13 08:04:31'),
(33, 2191, '2', 0.00619835, 63, 1, '2017-09-13 08:04:32'),
(48, 477, '3', -1.30435, 26, 0, '2017-09-13 08:04:34'),
(66, 1264, '1', -2.73347, 3, 0, '2017-09-13 08:04:34'),
(44, 1654, '4', 0.8125, 35, 1, '2017-09-13 08:04:36'),
(31, 1333, '2', 2.5, 10, 1, '2017-09-13 08:04:36'),
(42, 3404, '4', 0.421875, 20, 1, '2017-09-13 08:04:37'),
(68, 1505, '1', 1.2675, 28, 1, '2017-09-13 08:04:38'),
(57, 1506, '0', 0, 16, -1, '2017-09-13 08:04:38'),
(67, 1304, '2', 1.51014, 36, 1, '2017-09-13 08:04:39'),
(66, 1249, '2', -2.38327, 5, 0, '2017-09-13 08:04:39'),
(55, 2877, '2', 2.54929, 13, 1, '2017-09-13 08:04:39'),
(41, 172, '2', 0.644876, 59, 1, '2017-09-13 08:04:40'),
(43, 1497, '4', -0.0272109, 38, 0, '2017-09-13 08:04:40'),
(49, 3002, '3', -0.159763, 20, 0, '2017-09-13 08:04:41'),
(63, 2440, '4', 1.82727, 43, 1, '2017-09-13 08:04:42'),
(69, 1501, '2', -0.396694, 28, 0, '2017-09-13 08:04:42'),
(46, 2619, '3', 2.25, 15, 1, '2017-09-13 08:04:42'),
(60, 1140, '1', 0.48, 12, 1, '2017-09-13 08:04:43'),
(51, 1501, '1', -1.04752, 18, 0, '2017-09-13 08:04:43'),
(71, 396, '0', -0.0075, 20, 0, '2017-09-13 08:04:44'),
(39, 1289, '0', -0.001875, 40, 0, '2017-09-13 08:04:44'),
(58, 1275, '1', -0.148148, 42, 0, '2017-09-13 08:04:45'),
(65, 2403, '2', 2.49037, 8, 1, '2017-09-13 08:04:46'),
(68, 1497, '2', 1.85204, 9, 1, '2017-09-13 08:04:47'),
(43, 1490, '1', 1.89824, 9, 1, '2017-09-13 08:04:48'),
(39, 1286, '1', -2.61333, 4, 0, '2017-09-13 08:04:48'),
(38, 2862, '3', -1.84765, 31, 0, '2017-09-13 08:04:48'),
(47, 2158, '0', -0.00130208, 48, 0, '2017-09-13 08:04:49'),
(62, 1270, '1', -0.958412, 20, 0, '2017-09-13 08:04:49'),
(54, 1218, '0', -0.0075, 20, 0, '2017-09-13 08:04:49'),
(33, 2183, '1', 1.3591, 17, 1, '2017-09-13 08:04:49'),
(64, 2820, '0', -0.05, 60, 0, '2017-09-13 08:04:50'),
(42, 3415, '3', 0.963333, 13, 1, '2017-09-13 08:04:51'),
(69, 1490, '1', 1.89824, 9, 1, '2017-09-13 08:04:51'),
(53, 1499, '1', -0.0510397, 40, 0, '2017-09-13 08:04:51'),
(61, 1712, '0', -0.00102881, 54, 0, '2017-09-13 08:04:53'),
(46, 2635, '3', -2.4, 12, 0, '2017-09-13 08:04:54'),
(36, 1289, '0', -0.075, 40, 0, '2017-09-13 08:04:55'),
(50, 2664, '4', -2.34776, 40, 0, '2017-09-13 08:04:55'),
(56, 2729, '2', 1.76169, 33, 1, '2017-09-13 08:04:58'),
(38, 2870, '3', 2.65665, 10, 1, '2017-09-13 08:04:59'),
(39, 1295, '1', -0.880208, 11, 0, '2017-09-13 08:04:59'),
(49, 2933, '1', -0.130208, 19, 0, '2017-09-13 08:05:00'),
(51, 1506, '2', -1.3068, 17, 0, '2017-09-13 08:05:00'),
(43, 1494, '3', -1.40443, 12, 0, '2017-09-13 08:05:00'),
(48, 482, '4', 1, 28, 1, '2017-09-13 08:05:02'),
(60, 396, '0', -0.0075, 20, 0, '2017-09-13 08:05:03'),
(67, 610, '4', 2.06584, 24, 1, '2017-09-13 08:05:03'),
(52, 323, '3', -0.653333, 32, 0, '2017-09-13 08:05:04'),
(41, 1188, '2', -0.0344388, 25, 0, '2017-09-13 08:05:04'),
(71, 393, '0', -0.0075, 20, 0, '2017-09-13 08:05:04'),
(47, 2160, '2', -0.563333, 17, 0, '2017-09-13 08:05:06'),
(54, 1198, '4', 0.0675, 17, 1, '2017-09-13 08:05:06'),
(70, 2666, '4', -2.33666, 59, 0, '2017-09-13 08:05:08'),
(35, 1206, '3', -0.1875, 45, 0, '2017-09-13 08:05:09'),
(38, 2883, '3', 2.62111, 11, 1, '2017-09-13 08:05:09'),
(65, 2432, '3', -1.87661, 23, 0, '2017-09-13 08:05:09'),
(67, 1349, '1', 2.79651, 6, 1, '2017-09-13 08:05:10'),
(68, 1495, '3', -0.680272, 22, 0, '2017-09-13 08:05:10'),
(60, 1117, '2', 1.08, 8, 1, '2017-09-13 08:05:11'),
(61, 1704, '4', -1.3591, 17, 0, '2017-09-13 08:05:11'),
(52, 921, '2', 2.41774, 9, 1, '2017-09-13 08:05:13'),
(62, 1297, '3', 1.08, 24, 1, '2017-09-13 08:05:13'),
(69, 2947, '3', 0.213333, 22, 1, '2017-09-13 08:05:13'),
(50, 2657, '1', -2.68102, 18, 0, '2017-09-13 08:05:14'),
(57, 1498, '2', -0.1875, 36, 0, '2017-09-13 08:05:15'),
(44, 1619, '3', -0.692308, 40, 0, '2017-09-13 08:05:16'),
(35, 1187, '4', -1.83105, 7, 0, '2017-09-13 08:05:17'),
(40, 1286, '0', -0.195743, 60, 0, '2017-09-13 08:05:20'),
(66, 1260, '4', -0.387451, 41, 0, '2017-09-13 08:05:21'),
(71, 394, '4', -0.0675, 17, 0, '2017-09-13 08:05:21'),
(53, 1493, '4', 0.1875, 30, 1, '2017-09-13 08:05:21'),
(41, 1229, '4', 1.40844, 17, 1, '2017-09-13 08:05:21'),
(42, 3410, '0', -0.00333333, 30, 0, '2017-09-13 08:05:21'),
(65, 2406, '1', -2.2376, 12, 0, '2017-09-13 08:05:21'),
(55, 2855, '1', -1.34442, 42, 0, '2017-09-13 08:05:21'),
(35, 1295, '2', -1.50521, 7, 0, '2017-09-13 08:05:24'),
(43, 1495, '2', 0.613946, 23, 1, '2017-09-13 08:05:24'),
(62, 1263, '3', -1.57687, 11, 0, '2017-09-13 08:05:25'),
(33, 2184, '1', -0.568939, 35, 0, '2017-09-13 08:05:25'),
(60, 2422, '2', -2.33807, 15, 0, '2017-09-13 08:05:26'),
(52, 913, '2', -2.38521, 13, 0, '2017-09-13 08:05:26'),
(58, 1298, '1', 0.27, 42, 1, '2017-09-13 08:05:27'),
(59, 1328, '0', -0.05, 60, 0, '2017-09-13 08:05:28'),
(35, 1264, '2', -2.64738, 4, 0, '2017-09-13 08:05:28'),
(47, 2159, '3', -0.880208, 22, 0, '2017-09-13 08:05:28'),
(55, 2887, '3', 2.76188, 7, 1, '2017-09-13 08:05:28'),
(66, 1277, '2', 2.25333, 8, 1, '2017-09-13 08:05:29'),
(65, 1139, '2', 1.08, 8, 1, '2017-09-13 08:05:29'),
(67, 1354, '1', 2.32743, 19, 1, '2017-09-13 08:05:29'),
(31, 1103, '1', -0.791667, 53, 0, '2017-09-13 08:05:29'),
(49, 1481, '3', -0.1875, 30, 0, '2017-09-13 08:05:30'),
(69, 1497, '0', 0, 17, -1, '2017-09-13 08:05:31'),
(48, 754, '4', 0.928571, 29, 1, '2017-09-13 08:05:32'),
(68, 1496, '1', -0.683368, 23, 0, '2017-09-13 08:05:33'),
(57, 1507, '1', 1.28254, 18, 1, '2017-09-13 08:05:33'),
(46, 2631, '3', 1, 40, 1, '2017-09-13 08:05:34'),
(44, 1628, '3', -1.82609, 18, 0, '2017-09-13 08:05:35'),
(37, 2653, '4', 1.45148, 69, 1, '2017-09-13 08:05:36'),
(38, 2885, '1', -2.05434, 26, 0, '2017-09-13 08:05:36'),
(48, 474, '4', -2.625, 5, 0, '2017-09-13 08:05:37'),
(54, 1292, '0', -0.00333333, 30, 0, '2017-09-13 08:05:37'),
(70, 2654, '2', 2.43698, 30, 1, '2017-09-13 08:05:38'),
(53, 1496, '4', 1.12965, 17, 1, '2017-09-13 08:05:39'),
(62, 1269, '3', -1.50521, 14, 0, '2017-09-13 08:05:39'),
(60, 370, '4', -0.3675, 13, 0, '2017-09-13 08:05:40'),
(52, 929, '3', 2.2188, 14, 1, '2017-09-13 08:05:40'),
(46, 2618, '3', 2.7, 6, 1, '2017-09-13 08:05:40'),
(61, 1658, '0', -0.00333333, 30, 0, '2017-09-13 08:05:41'),
(67, 612, '1', -2.54929, 13, 0, '2017-09-13 08:05:42'),
(38, 2901, '4', 2.79651, 6, 1, '2017-09-13 08:05:42'),
(33, 2202, '4', 0.48, 18, 1, '2017-09-13 08:05:43'),
(63, 2457, '1', -1.54839, 60, 0, '2017-09-13 08:05:43'),
(41, 1283, '4', 0.0208333, 22, 1, '2017-09-13 08:05:44'),
(37, 1158, '2', 2.13414, 8, 1, '2017-09-13 08:05:44'),
(43, 3076, '1', 0.333333, 20, 1, '2017-09-13 08:05:44'),
(47, 2180, '1', -0.46301, 17, 0, '2017-09-13 08:05:45'),
(36, 1250, '4', -0.45, 51, 0, '2017-09-13 08:05:46'),
(65, 395, '2', -0.0675, 17, 0, '2017-09-13 08:05:47'),
(57, 1493, '1', -1.2675, 14, 0, '2017-09-13 08:05:47'),
(61, 1672, '2', 2.29688, 6, 1, '2017-09-13 08:05:47'),
(60, 1120, '3', 0.75, 10, 1, '2017-09-13 08:05:49'),
(64, 2730, '0', -0.05, 60, 0, '2017-09-13 08:05:50'),
(42, 3412, '4', 0, 30, 1, '2017-09-13 08:05:51'),
(55, 2866, '4', 2.13414, 24, 1, '2017-09-13 08:05:53'),
(41, 1295, '4', 1.02083, 10, 1, '2017-09-13 08:05:53'),
(56, 2820, '2', 0.493242, 56, 1, '2017-09-13 08:05:54'),
(39, 487, '4', 0.316875, 27, 1, '2017-09-13 08:05:55'),
(68, 1489, '3', -0.680272, 22, 0, '2017-09-13 08:05:55'),
(37, 1161, '3', -1.48993, 13, 0, '2017-09-13 08:05:57'),
(43, 1492, '2', 1.48915, 13, 1, '2017-09-13 08:05:57'),
(49, 1491, '1', -0.333333, 28, 0, '2017-09-13 08:05:58'),
(69, 1498, '1', -0.520833, 28, 0, '2017-09-13 08:05:59'),
(62, 1284, '0', -0.0075, 20, 0, '2017-09-13 08:05:59'),
(50, 2650, '3', -2.21125, 47, 0, '2017-09-13 08:06:01'),
(71, 2432, '1', -1.21488, 40, 0, '2017-09-13 08:06:02'),
(39, 720, '4', 1.99654, 7, 1, '2017-09-13 08:06:02'),
(70, 2693, '1', -2.68328, 24, 0, '2017-09-13 08:06:03'),
(67, 1348, '2', 2.31182, 22, 1, '2017-09-13 08:06:04'),
(43, 1501, '1', -2.12138, 7, 0, '2017-09-13 08:06:05'),
(61, 1714, '4', -0.831025, 18, 0, '2017-09-13 08:06:06'),
(51, 1504, '1', 0.091875, 66, 1, '2017-09-13 08:06:06'),
(44, 1620, '2', -1.0625, 31, 0, '2017-09-13 08:06:06'),
(65, 398, '0', -0.0075, 20, 0, '2017-09-13 08:06:07'),
(60, 1122, '1', -0.0675, 17, 0, '2017-09-13 08:06:07'),
(46, 2630, '1', -1.6, 28, 0, '2017-09-13 08:06:08'),
(39, 722, '3', 1.94676, 7, 1, '2017-09-13 08:06:09'),
(45, 173, '0', -0.139248, 100, 0, '2017-09-13 08:06:09'),
(35, 1229, '2', -0.148148, 42, 0, '2017-09-13 08:06:11'),
(33, 2182, '1', -0.0934256, 28, 0, '2017-09-13 08:06:12'),
(62, 1208, '3', -1.7328, 12, 0, '2017-09-13 08:06:12'),
(38, 2902, '2', 1.88988, 30, 1, '2017-09-13 08:06:12'),
(67, 1352, '3', 2.72703, 8, 1, '2017-09-13 08:06:12'),
(31, 1341, '3', -0.9, 42, 0, '2017-09-13 08:06:12'),
(71, 392, '0', 0, 11, -1, '2017-09-13 08:06:13'),
(68, 1490, '1', 1.04752, 18, 1, '2017-09-13 08:06:13'),
(45, 172, '4', -2.90839, 5, 0, '2017-09-13 08:06:14'),
(47, 2150, '4', -0.132964, 30, 0, '2017-09-13 08:06:15'),
(39, 725, '4', 1.89187, 7, 1, '2017-09-13 08:06:16'),
(53, 1489, '2', -0.0272109, 38, 0, '2017-09-13 08:06:17'),
(69, 3062, '3', -0.574219, 18, 0, '2017-09-13 08:06:17'),
(33, 2204, '2', -2.08333, 5, 0, '2017-09-13 08:06:17'),
(55, 2881, '4', -2.13414, 24, 0, '2017-09-13 08:06:18'),
(67, 1123, '3', 2.80944, 6, 1, '2017-09-13 08:06:18'),
(43, 3054, '1', -0.853333, 14, 0, '2017-09-13 08:06:18'),
(60, 364, '2', 0.48, 12, 1, '2017-09-13 08:06:18'),
(42, 3414, '2', 0.03, 27, 1, '2017-09-13 08:06:19'),
(62, 1219, '3', 1.21488, 8, 1, '2017-09-13 08:06:20'),
(52, 920, '2', -1.17188, 39, 0, '2017-09-13 08:06:20'),
(59, 1092, '0', 0, 52, -1, '2017-09-13 08:06:20'),
(64, 2845, '4', -1.45, 31, 0, '2017-09-13 08:06:21'),
(71, 2406, '1', -2.47934, 8, 0, '2017-09-13 08:06:21'),
(61, 1662, '1', 0.55102, 16, 1, '2017-09-13 08:06:21'),
(58, 173, '1', -0.6348, 54, 0, '2017-09-13 08:06:21'),
(65, 372, '4', 0.1875, 15, 1, '2017-09-13 08:06:22'),
(37, 3501, '2', -1.80187, 9, 0, '2017-09-13 08:06:22'),
(39, 490, '2', 1.6875, 9, 1, '2017-09-13 08:06:25'),
(68, 1498, '3', 1.6875, 12, 1, '2017-09-13 08:06:26'),
(70, 2662, '4', 2.47645, 24, 1, '2017-09-13 08:06:26'),
(65, 1117, '3', -1.47, 6, 0, '2017-09-13 08:06:28'),
(60, 1137, '2', 0.75, 10, 1, '2017-09-13 08:06:29'),
(33, 1462, '1', 2.1675, 6, 1, '2017-09-13 08:06:31'),
(43, 1499, '4', -1.54395, 13, 0, '2017-09-13 08:06:31'),
(57, 1496, '0', -0.00154959, 44, 0, '2017-09-13 08:06:32'),
(70, 2680, '1', 2.88413, 5, 1, '2017-09-13 08:06:32'),
(49, 1475, '2', 0.17155, 35, 1, '2017-09-13 08:06:33'),
(68, 1504, '1', 2.49797, 7, 1, '2017-09-13 08:06:33'),
(64, 2731, '4', 2.4, 12, 1, '2017-09-13 08:06:33'),
(65, 376, '1', -1.6875, 5, 0, '2017-09-13 08:06:33'),
(35, 1204, '1', -0.813802, 23, 0, '2017-09-13 08:06:34'),
(38, 2903, '2', 2.38747, 22, 1, '2017-09-13 08:06:34'),
(67, 1087, '3', -2.50357, 17, 0, '2017-09-13 08:06:35'),
(36, 1275, '1', -0.277778, 49, 0, '2017-09-13 08:06:35'),
(44, 1623, '2', -1.5, 30, 0, '2017-09-13 08:06:36'),
(71, 379, '4', -0.1875, 15, 0, '2017-09-13 08:06:36'),
(61, 1696, '3', -1.3032, 15, 0, '2017-09-13 08:06:37'),
(70, 2669, '3', 2.84605, 6, 1, '2017-09-13 08:06:37'),
(55, 2883, '3', 2.28943, 20, 1, '2017-09-13 08:06:37'),
(64, 2732, '4', 2.8, 4, 1, '2017-09-13 08:06:37'),
(42, 3409, '2', 0.403333, 19, 1, '2017-09-13 08:06:38'),
(50, 2693, '3', -2.36512, 36, 0, '2017-09-13 08:06:38'),
(39, 498, '1', -1.36688, 13, 0, '2017-09-13 08:06:38'),
(40, 3073, '0', -0.00382653, 28, 0, '2017-09-13 08:06:39'),
(62, 1171, '0', -0.0075, 20, 0, '2017-09-13 08:06:40'),
(48, 1460, '0', -0.00141777, 46, 0, '2017-09-13 08:06:40'),
(46, 2633, '3', 1.4, 32, 1, '2017-09-13 08:06:40'),
(43, 1506, '2', -2.0172, 9, 0, '2017-09-13 08:06:40'),
(61, 1694, '1', 2.62146, 3, 1, '2017-09-13 08:06:40'),
(68, 1501, '1', -2.00826, 8, 0, '2017-09-13 08:06:40'),
(65, 1114, '2', -1.08, 8, 0, '2017-09-13 08:06:41'),
(56, 2733, '2', 1.08222, 47, 1, '2017-09-13 08:06:41'),
(66, 170, '3', -0.2028, 74, 0, '2017-09-13 08:06:43'),
(64, 2838, '3', 2.65, 7, 1, '2017-09-13 08:06:44'),
(69, 1506, '2', -0.6348, 27, 0, '2017-09-13 08:06:44'),
(61, 1667, '3', 2.32823, 5, 1, '2017-09-13 08:06:45'),
(71, 1131, '1', 0.6075, 11, 1, '2017-09-13 08:06:47'),
(44, 1629, '3', 2.21739, 12, 1, '2017-09-13 08:06:48'),
(46, 2730, '4', 2.6, 8, 1, '2017-09-13 08:06:48'),
(50, 2449, '3', 2.67, 11, 1, '2017-09-13 08:06:49'),
(61, 1663, '1', 2.25333, 4, 1, '2017-09-13 08:06:49'),
(60, 397, '0', -0.0075, 20, 0, '2017-09-13 08:06:49'),
(41, 381, '1', 0.03, 18, 1, '2017-09-13 08:06:51'),
(70, 2686, '1', -2.84605, 13, 0, '2017-09-13 08:06:51'),
(48, 2929, '4', 0.880208, 11, 1, '2017-09-13 08:06:52'),
(51, 1503, '0', -0.00141777, 46, 0, '2017-09-13 08:06:52'),
(31, 1126, '4', -1, 40, 0, '2017-09-13 08:06:53'),
(71, 364, '2', 1.2675, 7, 1, '2017-09-13 08:06:54'),
(66, 1262, '3', 1.86501, 11, 1, '2017-09-13 08:06:55'),
(56, 2847, '4', 2.54929, 13, 1, '2017-09-13 08:06:55'),
(64, 2816, '3', -2.58532, 12, 0, '2017-09-13 08:06:56'),
(57, 1497, '2', 0.55102, 24, 1, '2017-09-13 08:06:56'),
(65, 381, '1', 0.1875, 15, 1, '2017-09-13 08:06:56'),
(68, 1502, '4', -1.36248, 15, 0, '2017-09-13 08:06:56'),
(67, 1095, '3', -2.25111, 21, 0, '2017-09-13 08:06:57'),
(38, 2892, '3', -2.38747, 22, 0, '2017-09-13 08:06:57'),
(33, 3051, '0', -0.00443787, 26, 0, '2017-09-13 08:06:58'),
(66, 1247, '2', -2.73347, 3, 0, '2017-09-13 08:06:58'),
(47, 2147, '1', -0.27, 42, 0, '2017-09-13 08:06:58'),
(44, 1631, '1', 2.42308, 10, 1, '2017-09-13 08:06:58'),
(71, 2400, '3', 2.66694, 4, 1, '2017-09-13 08:06:58'),
(70, 2652, '2', -2.9032, 8, 0, '2017-09-13 08:06:59'),
(69, 1492, '1', -1.3032, 15, 0, '2017-09-13 08:06:59'),
(53, 1490, '2', -0.00619835, 42, 0, '2017-09-13 08:07:00'),
(61, 1660, '3', -0.998521, 11, 0, '2017-09-13 08:07:00'),
(55, 2862, '4', 2.17348, 23, 1, '2017-09-13 08:07:01'),
(66, 1274, '3', -2.58673, 4, 0, '2017-09-13 08:07:02'),
(37, 3474, '0', -0.001875, 40, 0, '2017-09-13 08:07:02'),
(39, 734, '3', -0.12, 24, 0, '2017-09-13 08:07:02'),
(45, 1206, '3', -1.02599, 48, 0, '2017-09-13 08:07:03'),
(43, 1496, '4', 0.683368, 23, 1, '2017-09-13 08:07:04'),
(41, 2408, '3', 2.21207, 13, 1, '2017-09-13 08:07:04'),
(49, 1478, '1', -0.151875, 31, 0, '2017-09-13 08:07:04'),
(65, 1115, '1', 1.08, 8, 1, '2017-09-13 08:07:05'),
(66, 1266, '4', -2.7075, 3, 0, '2017-09-13 08:07:05'),
(42, 3401, '4', -0.0732422, 27, 0, '2017-09-13 08:07:05'),
(70, 2660, '3', -2.92404, 7, 0, '2017-09-13 08:07:06'),
(60, 377, '4', -0.0675, 17, 0, '2017-09-13 08:07:06'),
(40, 3079, '4', -0.00382653, 27, 0, '2017-09-13 08:07:07'),
(56, 2833, '3', 2.58532, 12, 1, '2017-09-13 08:07:07'),
(67, 1359, '3', 2.65665, 10, 1, '2017-09-13 08:07:07'),
(55, 2870, '3', 2.79651, 6, 1, '2017-09-13 08:07:07'),
(66, 1246, '1', -2.61333, 4, 0, '2017-09-13 08:07:09'),
(52, 2603, '4', -0.826875, 19, 0, '2017-09-13 08:07:09'),
(31, 1307, '4', -2.25, 17, 0, '2017-09-13 08:07:10'),
(65, 364, '2', 1.2675, 7, 1, '2017-09-13 08:07:11'),
(59, 1327, '0', -0.06, 50, 0, '2017-09-13 08:07:11'),
(70, 2636, '1', -2.9188, 5, 0, '2017-09-13 08:07:11'),
(57, 1492, '2', 1.21488, 16, 1, '2017-09-13 08:07:12'),
(39, 719, '3', 1.44676, 11, 1, '2017-09-13 08:07:13'),
(68, 2947, '4', -0.563333, 17, 0, '2017-09-13 08:07:13'),
(46, 2729, '2', 1.75, 25, 1, '2017-09-13 08:07:13'),
(60, 368, '3', 1.2675, 7, 1, '2017-09-13 08:07:14'),
(37, 3486, '3', 1.36688, 13, 1, '2017-09-13 08:07:15'),
(63, 2439, '2', -0.27, 91, 0, '2017-09-13 08:07:15'),
(52, 2613, '4', 2.1675, 6, 1, '2017-09-13 08:07:15'),
(58, 1206, '3', -0.0208333, 55, 0, '2017-09-13 08:07:16'),
(47, 2151, '0', 0, 18, -1, '2017-09-13 08:07:16'),
(62, 1202, '0', -0.00231481, 36, 0, '2017-09-13 08:07:16'),
(71, 370, '4', -0.03, 18, 0, '2017-09-13 08:07:17'),
(38, 2890, '2', -2.44949, 20, 0, '2017-09-13 08:07:17'),
(59, 1331, '2', 2.4, 8, 1, '2017-09-13 08:07:19'),
(71, 1104, '3', 1.92, 4, 1, '2017-09-13 08:07:20'),
(50, 2637, '3', -2.5523, 31, 0, '2017-09-13 08:07:20'),
(58, 1176, '3', -2.02423, 5, 0, '2017-09-13 08:07:21'),
(33, 1467, '3', 1.08, 24, 1, '2017-09-13 08:07:21'),
(42, 3398, '4', -0.65918, 17, 0, '2017-09-13 08:07:22'),
(52, 2611, '3', 2.04187, 7, 1, '2017-09-13 08:07:23'),
(48, 1450, '3', -0.0578704, 31, 0, '2017-09-13 08:07:23'),
(45, 1204, '4', 2.09443, 20, 1, '2017-09-13 08:07:23'),
(38, 2896, '3', 2.79651, 6, 1, '2017-09-13 08:07:24'),
(41, 387, '3', 0, 20, 0, '2017-09-13 08:07:24'),
(71, 2403, '2', 2.73926, 4, 1, '2017-09-13 08:07:24'),
(31, 1322, '1', -2.29688, 15, 0, '2017-09-13 08:07:25'),
(69, 1502, '0', 0, 27, -1, '2017-09-13 08:07:26'),
(68, 3076, '1', 0.853333, 14, 1, '2017-09-13 08:07:27'),
(47, 2156, '4', -1.7328, 12, 0, '2017-09-13 08:07:29'),
(39, 731, '3', -0.835648, 17, 0, '2017-09-13 08:07:30'),
(61, 1695, '1', -0.592593, 30, 0, '2017-09-13 08:07:30'),
(56, 2735, '1', 2.13414, 24, 1, '2017-09-13 08:07:32'),
(55, 2889, '3', -2.09443, 25, 0, '2017-09-13 08:07:32'),
(68, 1494, '4', 2.26247, 5, 1, '2017-09-13 08:07:32'),
(52, 2614, '4', 1.80187, 9, 1, '2017-09-13 08:07:32'),
(71, 1117, '2', 1.08, 8, 1, '2017-09-13 08:07:33'),
(43, 3062, '3', -0.0117188, 30, 0, '2017-09-13 08:07:33'),
(67, 1383, '3', -2.37171, 27, 0, '2017-09-13 08:07:34'),
(60, 388, '0', -0.0075, 20, 0, '2017-09-13 08:07:34'),
(40, 3083, '0', -0.00382653, 28, 0, '2017-09-13 08:07:35'),
(31, 1329, '3', 2.00083, 11, 1, '2017-09-13 08:07:36'),
(38, 2909, '3', -2.65518, 13, 0, '2017-09-13 08:07:36'),
(47, 2155, '3', -1.96599, 8, 0, '2017-09-13 08:07:37'),
(33, 1464, '4', -1.41797, 15, 0, '2017-09-13 08:07:37'),
(44, 1636, '4', 0.888889, 38, 1, '2017-09-13 08:07:37'),
(66, 2609, '4', -1.92, 8, 0, '2017-09-13 08:07:37'),
(52, 2605, '2', 2.1675, 6, 1, '2017-09-13 08:07:38'),
(63, 2447, '4', 2.18182, 24, 1, '2017-09-13 08:07:39'),
(70, 2642, '3', -2.51182, 29, 0, '2017-09-13 08:07:40'),
(65, 2413, '1', 1.31888, 31, 1, '2017-09-13 08:07:42'),
(64, 2859, '3', -0.7, 46, 0, '2017-09-13 08:07:42'),
(69, 1499, '2', 1.27599, 16, 1, '2017-09-13 08:07:42'),
(71, 1110, '2', 0.75, 10, 1, '2017-09-13 08:07:43'),
(66, 2611, '3', 2.1675, 6, 1, '2017-09-13 08:07:44'),
(36, 1122, '3', -0.03, 18, 0, '2017-09-13 08:07:44'),
(41, 393, '0', -0.0075, 20, 0, '2017-09-13 08:07:44'),
(37, 3491, '1', 0.1875, 30, 1, '2017-09-13 08:07:45'),
(67, 1350, '1', 2.62111, 11, 1, '2017-09-13 08:07:45'),
(52, 2610, '3', 1.80187, 9, 1, '2017-09-13 08:07:47'),
(62, 1199, '3', 0.00292969, 31, 1, '2017-09-13 08:07:47'),
(60, 2410, '3', -2.14328, 13, 0, '2017-09-13 08:07:48'),
(48, 3039, '1', 0.00443787, 25, 1, '2017-09-13 08:07:48'),
(64, 2883, '3', 2.65, 7, 1, '2017-09-13 08:07:49'),
(40, 3068, '1', 0.75, 14, 1, '2017-09-13 08:07:49'),
(65, 2416, '3', 2.54171, 7, 1, '2017-09-13 08:07:49'),
(33, 3004, '2', -0.963333, 13, 0, '2017-09-13 08:07:50'),
(62, 1220, '3', -2.39158, 3, 0, '2017-09-13 08:07:51'),
(70, 2644, '1', 2.82829, 11, 1, '2017-09-13 08:07:51'),
(55, 2868, '2', 2.32743, 19, 1, '2017-09-13 08:07:52'),
(39, 726, '1', 0.373702, 22, 1, '2017-09-13 08:07:52'),
(38, 2897, '2', 2.43962, 16, 1, '2017-09-13 08:07:53'),
(66, 2612, '3', -1.6875, 10, 0, '2017-09-13 08:07:53'),
(65, 368, '3', 1.6875, 5, 1, '2017-09-13 08:07:54'),
(42, 3397, '0', -0.00292969, 32, 0, '2017-09-13 08:07:55'),
(40, 3009, '1', -1.85204, 6, 0, '2017-09-13 08:07:56'),
(52, 2608, '3', 1.6875, 10, 1, '2017-09-13 08:07:57'),
(45, 1460, '1', 1.83743, 10, 1, '2017-09-13 08:07:59'),
(31, 1335, '2', 1.82143, 22, 1, '2017-09-13 08:07:59'),
(47, 2146, '3', -0.137755, 22, 0, '2017-09-13 08:07:59'),
(65, 1130, '1', -1.6875, 5, 0, '2017-09-13 08:07:59'),
(66, 2614, '4', 2.29688, 5, 1, '2017-09-13 08:07:59'),
(56, 2816, '4', 1.97297, 28, 1, '2017-09-13 08:08:00'),
(55, 2882, '2', -2.69195, 9, 0, '2017-09-13 08:08:00'),
(62, 1287, '3', 1.88021, 10, 1, '2017-09-13 08:08:01'),
(33, 3035, '2', 1.10587, 11, 1, '2017-09-13 08:08:01'),
(37, 3488, '1', -1.08, 16, 0, '2017-09-13 08:08:01'),
(65, 1110, '2', 2.1675, 3, 1, '2017-09-13 08:08:02'),
(70, 2639, '3', 2.74448, 12, 1, '2017-09-13 08:08:03'),
(71, 367, '0', -0.0075, 20, 0, '2017-09-13 08:08:03'),
(41, 372, '4', 0.0075, 19, 1, '2017-09-13 08:08:04'),
(52, 2618, '3', 2.65, 7, 1, '2017-09-13 08:08:04'),
(48, 1465, '1', 0.55102, 16, 1, '2017-09-13 08:08:04'),
(36, 372, '0', -0.0075, 20, 0, '2017-09-13 08:08:04'),
(39, 728, '4', -1.40443, 12, 0, '2017-09-13 08:08:04'),
(64, 2865, '3', 2.25, 15, 1, '2017-09-13 08:08:04'),
(68, 1528, '0', 0, 32, -1, '2017-09-13 08:08:05'),
(66, 2606, '1', 2.1675, 6, 1, '2017-09-13 08:08:05'),
(67, 1388, '1', 2.40535, 20, 1, '2017-09-13 08:08:05'),
(45, 1452, '2', 1.92, 8, 1, '2017-09-13 08:08:06'),
(61, 1665, '3', -0.125517, 35, 0, '2017-09-13 08:08:06'),
(42, 3403, '2', 1.17188, 12, 1, '2017-09-13 08:08:07'),
(60, 381, '0', -0.0075, 20, 0, '2017-09-13 08:08:08'),
(62, 1293, '1', -1.50521, 7, 0, '2017-09-13 08:08:08'),
(46, 2731, '4', 0.15, 57, 1, '2017-09-13 08:08:10'),
(71, 368, '3', 1.08, 8, 1, '2017-09-13 08:08:11'),
(50, 2450, '3', 1.95833, 50, 1, '2017-09-13 08:08:11'),
(58, 1209, '2', 0, 50, 1, '2017-09-13 08:08:11'),
(40, 3013, '2', 0.55102, 16, 1, '2017-09-13 08:08:11'),
(64, 2871, '3', -2.76188, 7, 0, '2017-09-13 08:08:11'),
(70, 2683, '4', 2.81719, 9, 1, '2017-09-13 08:08:12'),
(61, 1674, '1', 2.34763, 6, 1, '2017-09-13 08:08:12'),
(57, 1505, '3', -0.1875, 60, 0, '2017-09-13 08:08:12'),
(65, 2408, '1', -2.3255, 11, 0, '2017-09-13 08:08:13'),
(44, 1621, '2', -0.865385, 37, 0, '2017-09-13 08:08:14'),
(52, 2626, '3', 2.5, 10, 1, '2017-09-13 08:08:14'),
(69, 1500, '3', -0.443787, 32, 0, '2017-09-13 08:08:15'),
(39, 494, '3', 1.08, 12, 1, '2017-09-13 08:08:16'),
(46, 2833, '3', 2.65, 7, 1, '2017-09-13 08:08:17'),
(66, 2607, '2', -1.47, 12, 0, '2017-09-13 08:08:17'),
(43, 3408, '1', -0.0133333, 28, 0, '2017-09-13 08:08:18'),
(64, 2862, '3', -2.65, 7, 0, '2017-09-13 08:08:18'),
(59, 725, '4', 0.314014, 23, 1, '2017-09-13 08:08:18'),
(40, 3055, '4', 1.6875, 7, 1, '2017-09-13 08:08:19'),
(61, 1647, '3', 1.60207, 7, 1, '2017-09-13 08:08:19'),
(67, 1119, '1', -2.59808, 15, 0, '2017-09-13 08:08:20'),
(60, 2408, '4', -2.26843, 12, 0, '2017-09-13 08:08:20'),
(37, 3471, '1', -0.676875, 21, 0, '2017-09-13 08:08:22'),
(71, 383, '0', 0, 12, -1, '2017-09-13 08:08:23'),
(65, 1136, '4', -0.75, 10, 0, '2017-09-13 08:08:23'),
(64, 2879, '3', -2.75, 5, 0, '2017-09-13 08:08:23'),
(62, 1294, '3', 0.333333, 16, 1, '2017-09-13 08:08:24'),
(36, 390, '0', -0.0075, 20, 0, '2017-09-13 08:08:24'),
(55, 1173, '2', 0.9075, 9, 1, '2017-09-13 08:08:24'),
(42, 3405, '4', -0.403333, 19, 0, '2017-09-13 08:08:26'),
(33, 1456, '1', 0.421875, 25, 1, '2017-09-13 08:08:26'),
(38, 1292, '3', -1.33333, 10, 0, '2017-09-13 08:08:26'),
(61, 1666, '1', -2.12138, 7, 0, '2017-09-13 08:08:26'),
(41, 2422, '3', -1.94257, 25, 0, '2017-09-13 08:08:28'),
(64, 2881, '3', -2.7, 6, 0, '2017-09-13 08:08:29'),
(70, 2655, '1', -2.83549, 16, 0, '2017-09-13 08:08:29'),
(66, 2604, '2', 1.36688, 13, 1, '2017-09-13 08:08:30'),
(45, 3051, '2', -0.0177515, 24, 0, '2017-09-13 08:08:31'),
(40, 3011, '3', -0.860969, 13, 0, '2017-09-13 08:08:31'),
(39, 724, '4', -0.653333, 16, 0, '2017-09-13 08:08:32'),
(68, 1517, '3', -0.643004, 29, 0, '2017-09-13 08:08:33'),
(50, 2660, '3', -2.6617, 23, 0, '2017-09-13 08:08:34'),
(41, 363, '3', 1.47, 6, 1, '2017-09-13 08:08:34'),
(46, 2732, '4', 2.36512, 18, 1, '2017-09-13 08:08:35'),
(61, 1643, '1', -1.43787, 8, 0, '2017-09-13 08:08:35'),
(43, 3407, '1', 0.48, 18, 1, '2017-09-13 08:08:35'),
(47, 2153, '4', -0.284024, 36, 0, '2017-09-13 08:08:35'),
(48, 1452, '2', 0.151875, 31, 1, '2017-09-13 08:08:35'),
(45, 1461, '3', 2.38327, 5, 1, '2017-09-13 08:08:35'),
(60, 378, '3', -0.12, 16, 0, '2017-09-13 08:08:37'),
(66, 2603, '2', -2.04187, 7, 0, '2017-09-13 08:08:37'),
(64, 2889, '1', -2.55, 9, 0, '2017-09-13 08:08:38'),
(52, 2632, '3', 1.8, 24, 1, '2017-09-13 08:08:38'),
(39, 733, '4', -1.80187, 9, 0, '2017-09-13 08:08:41'),
(71, 399, '0', -0.0075, 20, 0, '2017-09-13 08:08:43'),
(37, 3480, '1', 0.6075, 22, 1, '2017-09-13 08:08:43'),
(48, 1461, '3', 1.83743, 10, 1, '2017-09-13 08:08:44'),
(68, 1514, '2', -1.6875, 11, 0, '2017-09-13 08:08:45'),
(62, 1281, '1', -0.27, 21, 0, '2017-09-13 08:08:45'),
(69, 1493, '1', -0.151875, 31, 0, '2017-09-13 08:08:46'),
(38, 1276, '2', -0.421875, 20, 0, '2017-09-13 08:08:46'),
(31, 1198, '0', -0.0075, 20, 0, '2017-09-13 08:08:47'),
(59, 481, '0', 0, 29, -1, '2017-09-13 08:08:47'),
(58, 1250, '2', -0.440833, 37, 0, '2017-09-13 08:08:48'),
(61, 1655, '1', 1.39463, 14, 1, '2017-09-13 08:08:48'),
(67, 1306, '1', -1.98997, 28, 0, '2017-09-13 08:08:48'),
(55, 1210, '0', -0.00520833, 24, 0, '2017-09-13 08:08:49'),
(43, 3399, '1', -1.05762, 13, 0, '2017-09-13 08:08:49'),
(39, 737, '4', 1.80187, 9, 1, '2017-09-13 08:08:50'),
(45, 1454, '3', -1.12037, 14, 0, '2017-09-13 08:08:50'),
(66, 2602, '2', -1.36688, 13, 0, '2017-09-13 08:08:50'),
(40, 3056, '3', -0.309949, 19, 0, '2017-09-13 08:08:51'),
(35, 729, '2', 1.56481, 10, 1, '2017-09-13 08:08:51'),
(60, 367, '4', -0.12, 16, 0, '2017-09-13 08:08:52'),
(41, 371, '3', -0.0075, 19, 0, '2017-09-13 08:08:53'),
(47, 2152, '0', 0, 18, -1, '2017-09-13 08:08:53'),
(42, 3399, '2', 0.0732422, 27, 1, '2017-09-13 08:08:53'),
(50, 1146, '0', -0.15, 20, 0, '2017-09-13 08:08:54'),
(52, 2634, '4', 2.2, 16, 1, '2017-09-13 08:08:55'),
(58, 1264, '2', -2.3168, 8, 0, '2017-09-13 08:08:56'),
(71, 1138, '4', -0.27, 14, 0, '2017-09-13 08:08:57'),
(58, 1229, '2', -2.67593, 3, 0, '2017-09-13 08:08:59'),
(33, 1452, '4', -0.12, 32, 0, '2017-09-13 08:08:59'),
(38, 1216, '4', 0.630208, 13, 1, '2017-09-13 08:08:59'),
(69, 1496, '1', -1.3032, 15, 0, '2017-09-13 08:09:01'),
(66, 2608, '4', -1.57687, 11, 0, '2017-09-13 08:09:01'),
(62, 1189, '1', -0.55102, 16, 0, '2017-09-13 08:09:01'),
(44, 3004, '3', 0.563333, 17, 1, '2017-09-13 08:09:02'),
(45, 1455, '1', 1.47, 12, 1, '2017-09-13 08:09:02'),
(40, 3066, '1', 0.75, 14, 1, '2017-09-13 08:09:05'),
(37, 3467, '4', 0.6075, 22, 1, '2017-09-13 08:09:05'),
(61, 1707, '4', 1.33333, 18, 1, '2017-09-13 08:09:06'),
(46, 2823, '1', -1.84765, 31, 0, '2017-09-13 08:09:06'),
(36, 2431, '3', -0.851016, 43, 0, '2017-09-13 08:09:07'),
(47, 2145, '2', 0.639053, 14, 1, '2017-09-13 08:09:08'),
(52, 2625, '4', -2.35, 13, 0, '2017-09-13 08:09:08'),
(60, 382, '4', 0.12, 16, 1, '2017-09-13 08:09:09'),
(55, 1186, '3', 0.1875, 21, 1, '2017-09-13 08:09:09'),
(31, 1210, '0', 0, 22, -1, '2017-09-13 08:09:10'),
(70, 2650, '2', 2.31914, 41, 1, '2017-09-13 08:09:10'),
(38, 1177, '4', -0.75, 11, 0, '2017-09-13 08:09:10'),
(43, 3402, '4', -0.292969, 22, 0, '2017-09-13 08:09:11'),
(42, 3416, '4', 0.563333, 17, 1, '2017-09-13 08:09:11'),
(57, 1120, '4', -0.9075, 9, 0, '2017-09-13 08:09:11'),
(39, 472, '3', -0.676875, 21, 0, '2017-09-13 08:09:11'),
(41, 2432, '3', -2.09851, 18, 0, '2017-09-13 08:09:11'),
(66, 2605, '4', -1.57687, 11, 0, '2017-09-13 08:09:13'),
(71, 398, '4', -0.12, 16, 0, '2017-09-13 08:09:13'),
(45, 1465, '1', 1.10587, 11, 1, '2017-09-13 08:09:13'),
(52, 2627, '2', 2.7, 6, 1, '2017-09-13 08:09:14'),
(35, 732, '3', -0.391204, 23, 0, '2017-09-13 08:09:14'),
(67, 1099, '2', -2.17578, 26, 0, '2017-09-13 08:09:15'),
(60, 1112, '4', 0.9075, 9, 1, '2017-09-13 08:09:18'),
(70, 2688, '1', 2.79651, 8, 1, '2017-09-13 08:09:18'),
(45, 1450, '1', -2.08333, 6, 0, '2017-09-13 08:09:19'),
(37, 3498, '4', -1.2675, 14, 0, '2017-09-13 08:09:19'),
(59, 728, '2', -0.0747922, 32, 0, '2017-09-13 08:09:20'),
(50, 1170, '1', -1.17188, 9, 0, '2017-09-13 08:09:21'),
(35, 727, '2', 1.94676, 7, 1, '2017-09-13 08:09:22'),
(45, 3004, '2', -2.43, 3, 0, '2017-09-13 08:09:22'),
(58, 1283, '0', -0.00520833, 24, 0, '2017-09-13 08:09:23'),
(68, 1512, '4', -0.217456, 38, 0, '2017-09-13 08:09:23'),
(41, 1115, '1', 0.48, 12, 1, '2017-09-13 08:09:24'),
(47, 2154, '1', -0.925926, 16, 0, '2017-09-13 08:09:24'),
(59, 718, '1', 2.43, 3, 1, '2017-09-13 08:09:24'),
(52, 2819, '2', 2.65665, 10, 1, '2017-09-13 08:09:24'),
(71, 1107, '4', 0.6075, 11, 1, '2017-09-13 08:09:24'),
(36, 375, '3', -0.03, 18, 0, '2017-09-13 08:09:24'),
(67, 1344, '4', 2.65665, 10, 1, '2017-09-13 08:09:24'),
(61, 1657, '2', -0.03, 18, 0, '2017-09-13 08:09:25'),
(70, 2647, '1', -2.92995, 6, 0, '2017-09-13 08:09:25'),
(55, 1218, '4', 0.12, 16, 1, '2017-09-13 08:09:25'),
(48, 1453, '1', 0.0972, 41, 1, '2017-09-13 08:09:26'),
(31, 1169, '2', 0.255208, 17, 1, '2017-09-13 08:09:26'),
(40, 3016, '3', -0.1875, 21, 0, '2017-09-13 08:09:27'),
(50, 1186, '3', 1.6875, 7, 1, '2017-09-13 08:09:27'),
(57, 364, '4', -0.12, 16, 0, '2017-09-13 08:09:27'),
(69, 1489, '2', -0.435374, 26, 0, '2017-09-13 08:09:28'),
(42, 3407, '1', 0.403333, 19, 1, '2017-09-13 08:09:30'),
(68, 1516, '4', 1.96599, 8, 1, '2017-09-13 08:09:32'),
(33, 1460, '1', 0.239603, 33, 1, '2017-09-13 08:09:32'),
(47, 2161, '3', 1.75433, 8, 1, '2017-09-13 08:09:32'),
(35, 466, '3', 1.33333, 10, 1, '2017-09-13 08:09:32'),
(44, 1463, '2', 0.26188, 31, 1, '2017-09-13 08:09:32'),
(65, 2411, '1', -0.416777, 69, 0, '2017-09-13 08:09:32'),
(39, 464, '3', 0.110947, 21, 1, '2017-09-13 08:09:32'),
(40, 3028, '2', 1.6875, 7, 1, '2017-09-13 08:09:33'),
(62, 1175, '0', -0.00292969, 32, 0, '2017-09-13 08:09:34'),
(60, 2406, '2', -2.00826, 16, 0, '2017-09-13 08:09:34'),
(67, 1363, '2', 2.71171, 9, 1, '2017-09-13 08:09:34'),
(66, 2615, '2', -0.6075, 22, 0, '2017-09-13 08:09:35'),
(71, 387, '4', 0.75, 10, 1, '2017-09-13 08:09:35'),
(45, 1462, '1', 1.36688, 13, 1, '2017-09-13 08:09:35'),
(50, 1177, '4', -1.21488, 8, 0, '2017-09-13 08:09:36'),
(70, 2637, '4', 2.83093, 12, 1, '2017-09-13 08:09:36'),
(52, 2845, '4', -2.513, 14, 0, '2017-09-13 08:09:38'),
(55, 1190, '4', 0.979592, 12, 1, '2017-09-13 08:09:38'),
(63, 2435, '3', -0.276923, 118, 0, '2017-09-13 08:09:38'),
(45, 1457, '4', 2.43, 4, 1, '2017-09-13 08:09:39'),
(43, 3400, '4', -0.0263672, 29, 0, '2017-09-13 08:09:40'),
(42, 3406, '3', -1.20333, 11, 0, '2017-09-13 08:09:40'),
(38, 1203, '0', -0.00333333, 30, 0, '2017-09-13 08:09:41'),
(39, 466, '1', -1.33333, 10, 0, '2017-09-13 08:09:42'),
(36, 393, '2', -0.03, 18, 0, '2017-09-13 08:09:43'),
(66, 2610, '4', -1.92, 8, 0, '2017-09-13 08:09:43'),
(68, 1521, '1', 1.85204, 12, 1, '2017-09-13 08:09:44'),
(47, 2144, '4', 1.59505, 13, 1, '2017-09-13 08:09:45'),
(60, 1105, '3', -0.6075, 11, 0, '2017-09-13 08:09:45'),
(58, 1295, '3', -0.0208333, 22, 0, '2017-09-13 08:09:45'),
(65, 2422, '2', -2.37964, 14, 0, '2017-09-13 08:09:46'),
(46, 2847, '3', -1.34442, 42, 0, '2017-09-13 08:09:48'),
(70, 2679, '1', -2.85591, 12, 0, '2017-09-13 08:09:49'),
(44, 2929, '4', 0.333333, 16, 1, '2017-09-13 08:09:49'),
(45, 1458, '4', -1.56481, 10, 0, '2017-09-13 08:09:49'),
(59, 465, '2', 0.0533333, 26, 1, '2017-09-13 08:09:50'),
(58, 1299, '3', 2.56267, 5, 1, '2017-09-13 08:09:50'),
(55, 1183, '2', 0.619835, 12, 1, '2017-09-13 08:09:50'),
(52, 2729, '2', 2.58532, 12, 1, '2017-09-13 08:09:50'),
(69, 3076, '1', 0.163333, 23, 1, '2017-09-13 08:09:51'),
(67, 1384, '1', 2.64326, 17, 1, '2017-09-13 08:09:51'),
(66, 2601, '2', 1.80187, 9, 1, '2017-09-13 08:09:52'),
(40, 3045, '3', -0.382653, 18, 0, '2017-09-13 08:09:52'),
(48, 3051, '0', -0.00443787, 26, 0, '2017-09-13 08:09:52'),
(62, 1200, '2', -0.592593, 20, 0, '2017-09-13 08:09:54'),
(35, 721, '4', -0.6075, 22, 0, '2017-09-13 08:09:54'),
(43, 3405, '1', 0.653333, 16, 1, '2017-09-13 08:09:56'),
(36, 2420, '3', 2.24251, 13, 1, '2017-09-13 08:09:56'),
(65, 393, '4', -0.75, 10, 0, '2017-09-13 08:09:56'),
(52, 2841, '3', 2.79651, 6, 1, '2017-09-13 08:09:57'),
(31, 1203, '0', -0.00333333, 30, 0, '2017-09-13 08:09:57'),
(64, 853, '0', -0.000833333, 60, 0, '2017-09-13 08:09:57'),
(66, 2613, '4', 2.1675, 6, 1, '2017-09-13 08:09:57'),
(60, 1133, '2', -0.3675, 13, 0, '2017-09-13 08:09:58'),
(37, 3482, '0', -0.001875, 40, 0, '2017-09-13 08:10:00'),
(62, 1257, '2', -2.29688, 6, 0, '2017-09-13 08:10:00'),
(39, 465, '1', -0.48, 18, 0, '2017-09-13 08:10:00'),
(71, 2413, '3', -1.49752, 27, 0, '2017-09-13 08:10:02'),
(40, 3050, '4', -1.2398, 10, 0, '2017-09-13 08:10:02'),
(67, 1368, '1', -2.73004, 11, 0, '2017-09-13 08:10:02'),
(35, 718, '1', 1.61333, 8, 1, '2017-09-13 08:10:02'),
(58, 1296, '4', -0.630208, 13, 0, '2017-09-13 08:10:03'),
(38, 1210, '0', -0.00520833, 24, 0, '2017-09-13 08:10:05'),
(33, 1453, '1', 0.3468, 33, 1, '2017-09-13 08:10:06'),
(37, 3543, '1', 2.3232, 6, 1, '2017-09-13 08:10:06'),
(42, 3411, '2', -0.0833333, 25, 0, '2017-09-13 08:10:07'),
(58, 1187, '4', -2.29688, 4, 0, '2017-09-13 08:10:07'),
(65, 371, '4', 0.6075, 11, 1, '2017-09-13 08:10:07'),
(56, 2429, '2', -0.884082, 64, 0, '2017-09-13 08:10:07'),
(62, 1191, '3', 1.53061, 8, 1, '2017-09-13 08:10:08'),
(61, 1227, '0', -0.00520833, 24, 0, '2017-09-13 08:10:08'),
(52, 2852, '4', -2.58532, 12, 0, '2017-09-13 08:10:08'),
(39, 727, '2', 1.81481, 8, 1, '2017-09-13 08:10:08'),
(45, 1459, '2', 0.75, 20, 1, '2017-09-13 08:10:09'),
(36, 2404, '3', -1.99374, 17, 0, '2017-09-13 08:10:12'),
(62, 1265, '3', -2.55621, 4, 0, '2017-09-13 08:10:12'),
(52, 2838, '3', 2.83093, 5, 1, '2017-09-13 08:10:14'),
(47, 2149, '1', -0.132964, 30, 0, '2017-09-13 08:10:15'),
(64, 624, '1', 1.54083, 17, 1, '2017-09-13 08:10:15'),
(61, 1173, '2', 1.2675, 7, 1, '2017-09-13 08:10:16'),
(59, 490, '3', -0.231481, 26, 0, '2017-09-13 08:10:16'),
(69, 1507, '1', 0.808802, 25, 1, '2017-09-13 08:10:16'),
(71, 369, '2', 0.1875, 15, 1, '2017-09-13 08:10:17'),
(45, 1464, '2', 1.98047, 9, 1, '2017-09-13 08:10:18'),
(43, 3411, '2', -0.213333, 22, 0, '2017-09-13 08:10:19'),
(46, 2728, '4', 1.84765, 31, 1, '2017-09-13 08:10:19'),
(36, 2418, '2', 2.49797, 7, 1, '2017-09-13 08:10:20'),
(66, 2633, '3', 1.20333, 22, 1, '2017-09-13 08:10:20'),
(52, 2833, '3', 2.76188, 7, 1, '2017-09-13 08:10:21'),
(58, 2608, '3', 2.1675, 6, 1, '2017-09-13 08:10:21'),
(56, 365, '2', -0.27, 14, 0, '2017-09-13 08:10:21'),
(68, 1522, '2', -0.6875, 37, 0, '2017-09-13 08:10:21'),
(48, 1459, '3', -0.1875, 30, 0, '2017-09-13 08:10:22'),
(64, 1089, '4', -2.34083, 7, 0, '2017-09-13 08:10:22'),
(50, 1270, '0', -0.00141777, 46, 0, '2017-09-13 08:10:22'),
(55, 1261, '2', -0.0186981, 35, 0, '2017-09-13 08:10:25'),
(67, 1389, '1', -2.27303, 23, 0, '2017-09-13 08:10:26'),
(44, 1458, '0', -0.00231481, 36, 0, '2017-09-13 08:10:26'),
(37, 3537, '4', -1.0092, 21, 0, '2017-09-13 08:10:27'),
(33, 1454, '1', -0.453704, 22, 0, '2017-09-13 08:10:27'),
(61, 1190, '4', 1.10587, 11, 1, '2017-09-13 08:10:27'),
(42, 3431, '3', -0.75, 22, 0, '2017-09-13 08:10:28'),
(40, 3026, '0', -0.00382653, 28, 0, '2017-09-13 08:10:30'),
(50, 1184, '4', 1.17188, 9, 1, '2017-09-13 08:10:32'),
(71, 400, '1', -0.27, 14, 0, '2017-09-13 08:10:32'),
(70, 2678, '4', -2.36825, 43, 0, '2017-09-13 08:10:33'),
(47, 2177, '3', -0.58391, 19, 0, '2017-09-13 08:10:34'),
(37, 3520, '4', -2.1168, 8, 0, '2017-09-13 08:10:35'),
(52, 2732, '4', 2.513, 14, 1, '2017-09-13 08:10:35'),
(38, 1297, '3', 0.75, 30, 1, '2017-09-13 08:10:35'),
(31, 1261, '0', -0.00207756, 38, 0, '2017-09-13 08:10:35'),
(35, 733, '2', -0.091875, 33, 0, '2017-09-13 08:10:35'),
(57, 2410, '2', 0.108844, 68, 1, '2017-09-13 08:10:36'),
(61, 1183, '2', 1.04752, 9, 1, '2017-09-13 08:10:36'),
(48, 1455, '1', 1.2675, 14, 1, '2017-09-13 08:10:36'),
(56, 371, '2', -0.1875, 15, 0, '2017-09-13 08:10:37'),
(69, 1504, '1', 1.57687, 22, 1, '2017-09-13 08:10:38'),
(39, 721, '1', 0.12, 32, 1, '2017-09-13 08:10:40'),
(62, 1268, '3', -0.574219, 27, 0, '2017-09-13 08:10:40'),
(36, 380, '4', 0, 20, 0, '2017-09-13 08:10:40'),
(67, 1367, '1', -2.59728, 14, 0, '2017-09-13 08:10:40'),
(33, 1459, '2', 1.36688, 13, 1, '2017-09-13 08:10:41'),
(57, 1104, '3', 1.6875, 5, 1, '2017-09-13 08:10:42'),
(45, 1456, '1', 0.541875, 23, 1, '2017-09-13 08:10:42'),
(47, 2166, '3', -1.81481, 8, 0, '2017-09-13 08:10:42'),
(38, 1190, '4', 1.6875, 7, 1, '2017-09-13 08:10:42'),
(50, 1292, '1', 1.20333, 11, 1, '2017-09-13 08:10:43'),
(46, 2734, '4', -2.13414, 24, 0, '2017-09-13 08:10:43'),
(35, 494, '3', 1.61333, 8, 1, '2017-09-13 08:10:44'),
(64, 595, '4', 0.933062, 23, 1, '2017-09-13 08:10:45'),
(59, 735, '1', -0.00333333, 29, 0, '2017-09-13 08:10:45'),
(33, 3044, '2', -1.6875, 6, 0, '2017-09-13 08:10:46'),
(66, 2624, '1', -0.9075, 27, 0, '2017-09-13 08:10:47'),
(61, 1291, '4', 0.6075, 11, 1, '2017-09-13 08:10:47'),
(40, 3024, '3', -0.382653, 18, 0, '2017-09-13 08:10:48'),
(39, 485, '1', 2.04726, 8, 1, '2017-09-13 08:10:48'),
(70, 2684, '2', -2.75983, 16, 0, '2017-09-13 08:10:48'),
(60, 2429, '3', -1.2398, 50, 0, '2017-09-13 08:10:49'),
(43, 3409, '0', -0.00333333, 30, 0, '2017-09-13 08:10:49'),
(48, 1458, '1', -1.12037, 14, 0, '2017-09-13 08:10:50'),
(52, 2825, '3', 2.43962, 16, 1, '2017-09-13 08:10:50'),
(50, 1169, '2', 1.17188, 9, 1, '2017-09-13 08:10:51'),
(66, 2620, '4', 2.52083, 5, 1, '2017-09-13 08:10:52'),
(63, 2605, '0', 0, 31, -1, '2017-09-13 08:10:52'),
(56, 367, '4', -0.12, 16, 0, '2017-09-13 08:10:52'),
(47, 2178, '1', -1.2398, 10, 0, '2017-09-13 08:10:53'),
(62, 1282, '3', 0.75, 15, 1, '2017-09-13 08:10:54'),
(58, 2610, '3', 0.091875, 33, 1, '2017-09-13 08:10:54'),
(46, 2820, '1', -2.45, 11, 0, '2017-09-13 08:10:54'),
(67, 1355, '1', 2.43962, 16, 1, '2017-09-13 08:10:56'),
(39, 509, '1', 1.81481, 8, 1, '2017-09-13 08:10:56'),
(61, 1186, '3', 1.38138, 9, 1, '2017-09-13 08:10:57'),
(45, 1453, '1', 1.5552, 14, 1, '2017-09-13 08:10:57'),
(36, 374, '4', 0.0675, 17, 1, '2017-09-13 08:10:57'),
(38, 1196, '4', 0.333333, 16, 1, '2017-09-13 08:10:58'),
(66, 2618, '3', 2.43, 6, 1, '2017-09-13 08:10:58'),
(65, 2419, '2', 0.991875, 51, 1, '2017-09-13 08:10:58'),
(64, 852, '4', 1.76333, 14, 1, '2017-09-13 08:10:59'),
(46, 2838, '3', 2.75, 5, 1, '2017-09-13 08:10:59'),
(62, 1217, '3', 1.6875, 5, 1, '2017-09-13 08:10:59'),
(44, 1466, '2', 0.3468, 33, 1, '2017-09-13 08:10:59'),
(56, 1130, '1', -1.2675, 7, 0, '2017-09-13 08:10:59'),
(57, 391, '2', 0, 20, 1, '2017-09-13 08:11:02'),
(59, 498, '0', 0, 16, -1, '2017-09-13 08:11:02'),
(31, 1174, '0', -0.00443787, 26, 0, '2017-09-13 08:11:02'),
(63, 2604, '1', -1.6875, 10, 0, '2017-09-13 08:11:03'),
(58, 2607, '4', 1.6875, 10, 1, '2017-09-13 08:11:04'),
(37, 3522, '2', -0.5292, 29, 0, '2017-09-13 08:11:04'),
(55, 1263, '3', -0.001875, 39, 0, '2017-09-13 08:11:05'),
(45, 1486, '1', 2.38636, 9, 1, '2017-09-13 08:11:05'),
(47, 2167, '0', 0, 13, -1, '2017-09-13 08:11:05'),
(50, 1173, '1', -0.27, 14, 0, '2017-09-13 08:11:05'),
(65, 366, '4', 0.9075, 9, 1, '2017-09-13 08:11:07'),
(43, 3401, '1', -0.574219, 18, 0, '2017-09-13 08:11:07'),
(66, 2621, '4', -2.08333, 10, 0, '2017-09-13 08:11:08'),
(63, 2606, '1', 2.29688, 5, 1, '2017-09-13 08:11:08'),
(42, 3417, '4', -0.0247934, 40, 0, '2017-09-13 08:11:08'),
(46, 2825, '3', 2.65665, 10, 1, '2017-09-13 08:11:09'),
(60, 394, '2', 0, 20, 1, '2017-09-13 08:11:09'),
(68, 1519, '3', 0.140833, 47, 1, '2017-09-13 08:11:09'),
(38, 1198, '2', -0.48, 12, 0, '2017-09-13 08:11:10'),
(56, 376, '0', 0, 11, -1, '2017-09-13 08:11:11'),
(61, 1210, '1', 0.520833, 14, 1, '2017-09-13 08:11:11'),
(44, 1459, '1', -1.47, 12, 0, '2017-09-13 08:11:12'),
(64, 619, '4', 1.84083, 13, 1, '2017-09-13 08:11:12'),
(41, 2427, '1', -0.0208333, 110, 0, '2017-09-13 08:11:13'),
(69, 1503, '2', 0.204159, 34, 1, '2017-09-13 08:11:13'),
(62, 1176, '3', -0.860969, 13, 0, '2017-09-13 08:11:13'),
(46, 2841, '3', 2.83093, 5, 1, '2017-09-13 08:11:14'),
(50, 1196, '4', 1.33333, 8, 1, '2017-09-13 08:11:14'),
(58, 2611, '3', 1.57687, 11, 1, '2017-09-13 08:11:15'),
(63, 2611, '3', 1.92, 8, 1, '2017-09-13 08:11:16'),
(61, 1197, '3', -1.6875, 6, 0, '2017-09-13 08:11:16'),
(45, 2933, '1', -1.625, 11, 0, '2017-09-13 08:11:16'),
(40, 3040, '0', -0.00382653, 28, 0, '2017-09-13 08:11:16'),
(33, 1466, '4', -0.5292, 29, 0, '2017-09-13 08:11:16'),
(36, 399, '0', -0.0075, 20, 0, '2017-09-13 08:11:17'),
(37, 3540, '4', 1.6428, 13, 1, '2017-09-13 08:11:17'),
(38, 1169, '2', 1.50521, 7, 1, '2017-09-13 08:11:17'),
(62, 1286, '3', -2.52083, 5, 0, '2017-09-13 08:11:18'),
(52, 2734, '3', 2.01386, 27, 1, '2017-09-13 08:11:18'),
(35, 737, '1', -0.046875, 35, 0, '2017-09-13 08:11:19'),
(39, 732, '3', -0.391204, 23, 0, '2017-09-13 08:11:19'),
(66, 2631, '3', 2.00083, 11, 1, '2017-09-13 08:11:20'),
(51, 466, '0', 0, 22, -1, '2017-09-13 08:11:21'),
(63, 2614, '4', 2.29688, 5, 1, '2017-09-13 08:11:21'),
(57, 372, '0', -0.0075, 20, 0, '2017-09-13 08:11:22'),
(71, 2427, '1', -1.02083, 50, 0, '2017-09-13 08:11:22'),
(40, 3052, '1', -1.85204, 6, 0, '2017-09-13 08:11:23'),
(53, 724, '4', -0.963333, 13, 0, '2017-09-13 08:11:23'),
(56, 391, '2', 0.3675, 13, 1, '2017-09-13 08:11:24'),
(48, 1462, '1', 0.0675, 34, 1, '2017-09-13 08:11:24'),
(46, 2845, '2', -2.65665, 10, 0, '2017-09-13 08:11:24'),
(67, 1353, '1', -1.93165, 29, 0, '2017-09-13 08:11:25'),
(59, 464, '2', -0.0177515, 24, 0, '2017-09-13 08:11:26'),
(31, 1197, '0', -0.00520833, 24, 0, '2017-09-13 08:11:26'),
(51, 720, '4', 2.12742, 6, 1, '2017-09-13 08:11:26'),
(61, 1170, '2', 1.02083, 10, 1, '2017-09-13 08:11:27'),
(33, 1455, '3', -1.57687, 11, 0, '2017-09-13 08:11:27'),
(58, 2614, '4', 1.47, 12, 1, '2017-09-13 08:11:27'),
(64, 605, '4', -1.6875, 15, 0, '2017-09-13 08:11:27'),
(47, 2168, '3', -0.816635, 22, 0, '2017-09-13 08:11:27'),
(65, 384, '0', -0.0075, 20, 0, '2017-09-13 08:11:27'),
(37, 3518, '4', -1.8252, 11, 0, '2017-09-13 08:11:28'),
(52, 2884, '3', -2.76586, 9, 0, '2017-09-13 08:11:28'),
(38, 1183, '2', 0.892562, 10, 1, '2017-09-13 08:11:28'),
(39, 735, '3', -1.47, 9, 0, '2017-09-13 08:11:28'),
(56, 363, '3', 1.6875, 5, 1, '2017-09-13 08:11:28'),
(55, 1227, '0', -0.00520833, 24, 0, '2017-09-13 08:11:29'),
(49, 722, '3', 2.37037, 4, 1, '2017-09-13 08:11:30'),
(48, 1457, '4', 1.92, 8, 1, '2017-09-13 08:11:32'),
(41, 2416, '3', 1.8444, 19, 1, '2017-09-13 08:11:32'),
(62, 1296, '3', -0.421875, 15, 0, '2017-09-13 08:11:33'),
(36, 377, '2', 0.0675, 17, 1, '2017-09-13 08:11:33'),
(65, 1107, '4', 1.47, 6, 1, '2017-09-13 08:11:34'),
(33, 1465, '0', 0, 7, -1, '2017-09-13 08:11:34'),
(57, 1138, '3', -0.3675, 13, 0, '2017-09-13 08:11:35'),
(66, 2625, '3', 1.6875, 15, 1, '2017-09-13 08:11:35'),
(58, 2601, '2', 1.92, 8, 1, '2017-09-13 08:11:35'),
(44, 3051, '3', 0.0177515, 24, 1, '2017-09-13 08:11:36'),
(67, 1362, '1', -2.64557, 11, 0, '2017-09-13 08:11:36'),
(70, 2668, '4', -2.20649, 48, 0, '2017-09-13 08:11:37'),
(63, 2602, '3', 1.08, 16, 1, '2017-09-13 08:11:37'),
(53, 464, '3', 0.536982, 15, 1, '2017-09-13 08:11:38'),
(43, 3397, '2', 0.00292969, 31, 1, '2017-09-13 08:11:38'),
(59, 730, '0', 0, 12, -1, '2017-09-13 08:11:38'),
(64, 611, '3', 1.6428, 13, 1, '2017-09-13 08:11:39'),
(33, 2929, '4', 1.6875, 6, 1, '2017-09-13 08:11:40'),
(52, 2835, '1', -2.47645, 15, 0, '2017-09-13 08:11:42'),
(67, 1347, '3', 2.77345, 6, 1, '2017-09-13 08:11:43'),
(71, 384, '0', -0.0075, 20, 0, '2017-09-13 08:11:43'),
(35, 509, '3', -0.333333, 24, 0, '2017-09-13 08:11:43'),
(40, 3063, '1', 0.1875, 21, 1, '2017-09-13 08:11:44'),
(31, 1194, '1', 0.46301, 17, 1, '2017-09-13 08:11:44'),
(37, 3507, '3', 1.3872, 16, 1, '2017-09-13 08:11:44'),
(49, 735, '4', 0.653333, 16, 1, '2017-09-13 08:11:45'),
(50, 1261, '2', -0.0747922, 32, 0, '2017-09-13 08:11:46'),
(47, 2173, '2', -0.284024, 18, 0, '2017-09-13 08:11:46'),
(57, 380, '3', -0.6075, 11, 0, '2017-09-13 08:11:46'),
(42, 3418, '0', 0, 37, -1, '2017-09-13 08:11:46'),
(51, 472, '1', 0.676875, 21, 1, '2017-09-13 08:11:47'),
(56, 1138, '2', 0.0075, 19, 1, '2017-09-13 08:11:48'),
(46, 2852, '2', 2.09443, 25, 1, '2017-09-13 08:11:49'),
(49, 720, '4', 2.40166, 4, 1, '2017-09-13 08:11:49'),
(66, 2635, '4', -1.6875, 15, 0, '2017-09-13 08:11:49'),
(45, 1478, '2', 0.45, 34, 1, '2017-09-13 08:11:51'),
(55, 1297, '3', 1.2675, 21, 1, '2017-09-13 08:11:51'),
(65, 387, '3', -0.03, 18, 0, '2017-09-13 08:11:51'),
(64, 597, '3', -1.81481, 12, 0, '2017-09-13 08:11:52'),
(38, 1261, '1', -0.407202, 24, 0, '2017-09-13 08:11:52'),
(62, 388, '0', -0.75, 11, 0, '2017-09-13 08:11:52'),
(58, 2605, '2', 0.991875, 17, 1, '2017-09-13 08:11:52'),
(41, 1117, '0', -0.0075, 20, 0, '2017-09-13 08:11:53'),
(67, 1108, '2', -2.59301, 11, 0, '2017-09-13 08:11:53'),
(59, 472, '2', -1.17188, 15, 0, '2017-09-13 08:11:53'),
(71, 2414, '3', 2.29688, 11, 1, '2017-09-13 08:11:54'),
(61, 1203, '3', 0.0133333, 28, 1, '2017-09-13 08:11:54'),
(33, 1458, '1', -1.02083, 15, 0, '2017-09-13 08:11:55'),
(36, 2411, '1', -1.92, 22, 0, '2017-09-13 08:11:56'),
(31, 1291, '1', -0.48, 12, 0, '2017-09-13 08:11:56'),
(68, 494, '3', 2.25333, 4, 1, '2017-09-13 08:11:56'),
(65, 379, '3', 1.6875, 5, 1, '2017-09-13 08:11:57'),
(39, 489, '1', 0.226875, 29, 1, '2017-09-13 08:11:57'),
(50, 1297, '3', 2.00083, 11, 1, '2017-09-13 08:11:58'),
(59, 723, '1', 2.08333, 6, 1, '2017-09-13 08:11:59'),
(44, 1462, '1', 0.541875, 23, 1, '2017-09-13 08:11:59'),
(38, 1197, '3', -1.50521, 7, 0, '2017-09-13 08:12:00'),
(57, 395, '4', -0.27, 14, 0, '2017-09-13 08:12:00'),
(66, 2622, '2', 2.08333, 10, 1, '2017-09-13 08:12:00'),
(70, 2674, '3', 2.48814, 23, 1, '2017-09-13 08:12:00'),
(35, 731, '2', 0.835648, 17, 1, '2017-09-13 08:12:00'),
(40, 3047, '3', 0.46301, 17, 1, '2017-09-13 08:12:00'),
(68, 472, '3', -2.29688, 5, 0, '2017-09-13 08:12:01'),
(62, 395, '0', -0.9075, 10, 0, '2017-09-13 08:12:01'),
(45, 1474, '2', 2.21429, 11, 1, '2017-09-13 08:12:02'),
(69, 2611, '3', 1.92, 8, 1, '2017-09-13 08:12:03'),
(51, 735, '4', 0.75, 15, 1, '2017-09-13 08:12:03'),
(44, 3044, '3', 2.08333, 4, 1, '2017-09-13 08:12:03'),
(50, 1218, '0', 0, 6, -1, '2017-09-13 08:12:04'),
(66, 2617, '1', 2.61333, 4, 1, '2017-09-13 08:12:04'),
(43, 3403, '3', -0.105469, 26, 0, '2017-09-13 08:12:04'),
(61, 1292, '2', -1.33333, 10, 0, '2017-09-13 08:12:05'),
(65, 365, '1', -0.9075, 9, 0, '2017-09-13 08:12:05'),
(70, 2672, '1', -2.8681, 6, 0, '2017-09-13 08:12:06'),
(45, 3008, '1', -2.46429, 5, 0, '2017-09-13 08:12:07'),
(58, 2604, '3', -1.17188, 15, 0, '2017-09-13 08:12:07'),
(56, 400, '1', 0, 20, 0, '2017-09-13 08:12:08'),
(52, 2847, '4', 2.01386, 27, 1, '2017-09-13 08:12:10'),
(37, 3545, '4', -0.6912, 26, 0, '2017-09-13 08:12:10'),
(66, 2623, '2', 2.43, 6, 1, '2017-09-13 08:12:10'),
(31, 1190, '4', 0.646684, 15, 1, '2017-09-13 08:12:10'),
(57, 1140, '1', 0.6075, 11, 1, '2017-09-13 08:12:11'),
(62, 1138, '0', -0.75, 11, 0, '2017-09-13 08:12:12'),
(40, 3006, '2', -1.10587, 11, 0, '2017-09-13 08:12:12'),
(33, 1463, '2', 1.12965, 17, 1, '2017-09-13 08:12:12'),
(38, 1170, '1', -0.630208, 13, 0, '2017-09-13 08:12:12'),
(70, 2675, '1', 2.87094, 6, 1, '2017-09-13 08:12:12'),
(53, 731, '3', -0.00925926, 34, 0, '2017-09-13 08:12:12'),
(41, 392, '0', -0.0075, 20, 0, '2017-09-13 08:12:13'),
(71, 2420, '3', 1.93001, 19, 1, '2017-09-13 08:12:13'),
(35, 720, '4', 1.29848, 13, 1, '2017-09-13 08:12:13'),
(48, 1463, '4', -0.00619835, 42, 0, '2017-09-13 08:12:13'),
(64, 854, '1', 1.41061, 22, 1, '2017-09-13 08:12:14'),
(67, 1111, '2', 2.38385, 21, 1, '2017-09-13 08:12:15'),
(62, 373, '0', -2.1675, 4, 0, '2017-09-13 08:12:15'),
(63, 2603, '0', -0.001875, 40, 0, '2017-09-13 08:12:18'),
(42, 3427, '3', -0.26188, 31, 0, '2017-09-13 08:12:18'),
(44, 1457, '4', 1.17188, 15, 1, '2017-09-13 08:12:18'),
(59, 726, '2', -0.508651, 20, 0, '2017-09-13 08:12:19'),
(55, 1185, '0', -0.00382653, 28, 0, '2017-09-13 08:12:19'),
(66, 2630, '2', 2.55, 9, 1, '2017-09-13 08:12:19'),
(69, 2604, '2', 0.9075, 18, 1, '2017-09-13 08:12:21'),
(35, 723, '1', 1.94676, 7, 1, '2017-09-13 08:12:21'),
(45, 1473, '1', 2.1, 15, 1, '2017-09-13 08:12:22'),
(46, 2735, '1', 1.71792, 34, 1, '2017-09-13 08:12:23'),
(49, 721, '2', -0.0675, 34, 0, '2017-09-13 08:12:24'),
(58, 2615, '3', -0.991875, 17, 0, '2017-09-13 08:12:24'),
(62, 369, '2', 0.9075, 9, 1, '2017-09-13 08:12:24'),
(31, 1183, '2', 0.396694, 14, 1, '2017-09-13 08:12:24'),
(37, 3553, '2', -1.47, 15, 0, '2017-09-13 08:12:25'),
(65, 397, '0', -0.0075, 20, 0, '2017-09-13 08:12:26'),
(68, 725, '1', -0.210208, 25, 0, '2017-09-13 08:12:26'),
(39, 736, '1', 0.0233564, 31, 1, '2017-09-13 08:12:27'),
(61, 1261, '0', 0, 22, -1, '2017-09-13 08:12:28'),
(66, 2632, '3', 2.6, 8, 1, '2017-09-13 08:12:28'),
(45, 1483, '1', -2.52632, 6, 0, '2017-09-13 08:12:28'),
(63, 2613, '4', 1.6875, 10, 1, '2017-09-13 08:12:28'),
(56, 390, '0', -0.0075, 20, 0, '2017-09-13 08:12:28'),
(51, 489, '2', -0.3675, 26, 0, '2017-09-13 08:12:29'),
(53, 465, '3', -0.563333, 17, 0, '2017-09-13 08:12:31'),
(57, 402, '0', -0.0075, 20, 0, '2017-09-13 08:12:31'),
(67, 1346, '4', 2.44193, 17, 1, '2017-09-13 08:12:31'),
(41, 386, '4', 0.0075, 19, 1, '2017-09-13 08:12:32'),
(50, 1185, '0', -0.00382653, 28, 0, '2017-09-13 08:12:32'),
(70, 2682, '3', -2.73429, 20, 0, '2017-09-13 08:12:32'),
(71, 1136, '3', 0, 20, 0, '2017-09-13 08:12:33'),
(48, 3035, '2', 0.309949, 19, 1, '2017-09-13 08:12:33'),
(60, 2411, '3', -0.180744, 83, 0, '2017-09-13 08:12:34'),
(38, 1227, '1', -0.046875, 21, 0, '2017-09-13 08:12:34'),
(45, 3000, '1', -2.25, 6, 0, '2017-09-13 08:12:34'),
(66, 2627, '2', 2.65, 7, 1, '2017-09-13 08:12:34'),
(61, 1196, '4', 1.33333, 8, 1, '2017-09-13 08:12:35'),
(62, 2408, '2', -2.3255, 11, 0, '2017-09-13 08:12:35'),
(43, 3404, '4', 0.0117188, 30, 1, '2017-09-13 08:12:35'),
(42, 3425, '3', 0.968492, 19, 1, '2017-09-13 08:12:37'),
(35, 482, '4', 1.85714, 16, 1, '2017-09-13 08:12:37'),
(37, 3548, '2', -1.7328, 12, 0, '2017-09-13 08:12:37'),
(68, 736, '1', 1.49481, 10, 1, '2017-09-13 08:12:37'),
(31, 1172, '4', 0.3675, 13, 1, '2017-09-13 08:12:38'),
(64, 602, '3', -1.11401, 25, 0, '2017-09-13 08:12:39'),
(58, 2609, '4', -1.17188, 15, 0, '2017-09-13 08:12:39'),
(66, 2619, '3', 2.75, 5, 1, '2017-09-13 08:12:40'),
(52, 2728, '3', -1.88988, 30, 0, '2017-09-13 08:12:40'),
(70, 2667, '3', -2.88783, 7, 0, '2017-09-13 08:12:40'),
(47, 2170, '4', 0.00382653, 54, 1, '2017-09-13 08:12:40'),
(50, 1216, '0', 0, 8, -1, '2017-09-13 08:12:40'),
(67, 1378, '4', -2.66928, 9, 0, '2017-09-13 08:12:41'),
(33, 1451, '1', 0.148148, 28, 1, '2017-09-13 08:12:41'),
(62, 2413, '2', -2.62146, 6, 0, '2017-09-13 08:12:41'),
(36, 2432, '1', -1.04752, 45, 0, '2017-09-13 08:12:41'),
(41, 366, '4', 0.9075, 9, 1, '2017-09-13 08:12:41'),
(65, 388, '4', -0.12, 16, 0, '2017-09-13 08:12:41'),
(68, 486, '1', 2.22454, 5, 1, '2017-09-13 08:12:41'),
(57, 2418, '2', 2.29688, 10, 1, '2017-09-13 08:12:42'),
(59, 466, '2', -0.163333, 23, 0, '2017-09-13 08:12:42'),
(51, 494, '3', 0.853333, 14, 1, '2017-09-13 08:12:42'),
(71, 1122, '4', 0.75, 10, 1, '2017-09-13 08:12:43'),
(55, 1196, '4', 0, 24, 1, '2017-09-13 08:12:43'),
(49, 481, '3', -0.75, 20, 0, '2017-09-13 08:12:44'),
(63, 2609, '4', -0.991875, 17, 0, '2017-09-13 08:12:45'),
(60, 1121, '3', -0.48, 12, 0, '2017-09-13 08:12:46'),
(35, 753, '4', 2.35714, 9, 1, '2017-09-13 08:12:46'),
(45, 3035, '2', 0.979592, 12, 1, '2017-09-13 08:12:46'),
(39, 481, '3', -0.826875, 19, 0, '2017-09-13 08:12:47'),
(68, 718, '1', 2.08333, 5, 1, '2017-09-13 08:12:47'),
(48, 3044, '3', 0.520833, 14, 1, '2017-09-13 08:12:47'),
(40, 3158, '2', 0.0186981, 35, 1, '2017-09-13 08:12:47'),
(65, 1109, '3', 1.47, 6, 1, '2017-09-13 08:12:47'),
(62, 2419, '2', 2.66021, 7, 1, '2017-09-13 08:12:48'),
(58, 2612, '2', -1.6875, 10, 0, '2017-09-13 08:12:49'),
(43, 3398, '2', -0.949219, 14, 0, '2017-09-13 08:12:49'),
(69, 2615, '1', 0.27, 28, 1, '2017-09-13 08:12:49'),
(47, 2162, '3', -1.6875, 8, 0, '2017-09-13 08:12:49'),
(71, 375, '1', 1.47, 6, 1, '2017-09-13 08:12:49'),
(38, 1263, '2', -1.08, 16, 0, '2017-09-13 08:12:50'),
(51, 487, '4', 1.92, 8, 1, '2017-09-13 08:12:50'),
(62, 389, '2', 2.43, 2, 1, '2017-09-13 08:12:51'),
(49, 486, '1', 1.81481, 8, 1, '2017-09-13 08:12:51'),
(45, 2929, '4', 1.88021, 5, 1, '2017-09-13 08:12:52'),
(66, 2825, '3', 2.58532, 12, 1, '2017-09-13 08:12:52'),
(65, 2429, '4', 2.78954, 5, 1, '2017-09-13 08:12:52'),
(46, 2835, '3', 1.93165, 29, 1, '2017-09-13 08:12:52'),
(33, 3039, '1', 0.75, 13, 1, '2017-09-13 08:12:54');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(31, 1292, '1', 0.563333, 17, 1, '2017-09-13 08:12:55'),
(42, 3433, '2', 1.04752, 18, 1, '2017-09-13 08:12:56'),
(53, 498, '0', 0, 26, -1, '2017-09-13 08:12:56'),
(65, 1104, '3', 1.92, 4, 1, '2017-09-13 08:12:56'),
(59, 489, '1', 1.17188, 15, 1, '2017-09-13 08:12:57'),
(45, 1484, '2', -2.57143, 6, 0, '2017-09-13 08:12:57'),
(39, 729, '3', -1.44676, 11, 0, '2017-09-13 08:12:58'),
(38, 1186, '3', 1.53061, 8, 1, '2017-09-13 08:12:58'),
(50, 1263, '1', 0.991875, 17, 1, '2017-09-13 08:12:58'),
(37, 3513, '4', -0.9408, 22, 0, '2017-09-13 08:12:59'),
(41, 398, '2', -0.0075, 19, 0, '2017-09-13 08:13:00'),
(64, 607, '3', 1.17188, 21, 1, '2017-09-13 08:13:00'),
(65, 1112, '1', -1.92, 4, 0, '2017-09-13 08:13:00'),
(69, 2614, '4', 1.57687, 11, 1, '2017-09-13 08:13:01'),
(52, 2730, '1', -2.25111, 21, 0, '2017-09-13 08:13:01'),
(43, 3414, '4', -0.963333, 13, 0, '2017-09-13 08:13:01'),
(57, 384, '0', -0.0075, 20, 0, '2017-09-13 08:13:02'),
(44, 1460, '1', 0.0127599, 43, 1, '2017-09-13 08:13:02'),
(58, 2603, '1', 1.36688, 13, 1, '2017-09-13 08:13:02'),
(45, 3039, '1', 1.9571, 5, 1, '2017-09-13 08:13:03'),
(40, 3018, '2', -0.646684, 15, 0, '2017-09-13 08:13:03'),
(49, 727, '1', -1.44676, 11, 0, '2017-09-13 08:13:03'),
(55, 1198, '0', -0.0075, 20, 0, '2017-09-13 08:13:04'),
(35, 479, '1', -1.82609, 18, 0, '2017-09-13 08:13:04'),
(39, 718, '1', 1.76333, 7, 1, '2017-09-13 08:13:05'),
(56, 2414, '0', 0, 36, -1, '2017-09-13 08:13:05'),
(60, 399, '0', -0.0075, 20, 0, '2017-09-13 08:13:06'),
(50, 1198, '4', 0.9075, 9, 1, '2017-09-13 08:13:06'),
(38, 1194, '1', 1.38138, 9, 1, '2017-09-13 08:13:07'),
(64, 614, '3', 2.27263, 7, 1, '2017-09-13 08:13:07'),
(58, 2613, '4', 2.1675, 6, 1, '2017-09-13 08:13:08'),
(63, 2601, '2', 0.48, 24, 1, '2017-09-13 08:13:09'),
(33, 1450, '2', -0.925926, 16, 0, '2017-09-13 08:13:10'),
(68, 735, '4', 0.12, 24, 1, '2017-09-13 08:13:11'),
(66, 2735, '1', 2.28943, 20, 1, '2017-09-13 08:13:11'),
(43, 3415, '2', -1.20333, 11, 0, '2017-09-13 08:13:13'),
(46, 2733, '2', 2.25111, 21, 1, '2017-09-13 08:13:13'),
(65, 1105, '2', 0.3675, 13, 1, '2017-09-13 08:13:13'),
(41, 1107, '3', -0.3675, 13, 0, '2017-09-13 08:13:13'),
(67, 1382, '4', -1.99639, 32, 0, '2017-09-13 08:13:14'),
(61, 1263, '0', -0.001875, 40, 0, '2017-09-13 08:13:15'),
(52, 2735, '1', 2.47645, 15, 1, '2017-09-13 08:13:16'),
(65, 2431, '3', -2.7448, 4, 0, '2017-09-13 08:13:17'),
(64, 1310, '4', 1.9571, 10, 1, '2017-09-13 08:13:17'),
(57, 2408, '3', 2.10149, 15, 1, '2017-09-13 08:13:18'),
(36, 2422, '3', -1.5163, 37, 0, '2017-09-13 08:13:18'),
(63, 2612, '2', -1.80187, 9, 0, '2017-09-13 08:13:18'),
(35, 739, '1', 1.75, 15, 1, '2017-09-13 08:13:19'),
(58, 2606, '1', 1.47, 12, 1, '2017-09-13 08:13:20'),
(51, 729, '0', 0, 30, -1, '2017-09-13 08:13:20'),
(40, 3042, '2', 0.309949, 19, 1, '2017-09-13 08:13:22'),
(38, 1195, '1', -0.1875, 15, 0, '2017-09-13 08:13:22'),
(64, 601, '4', 2.39158, 6, 1, '2017-09-13 08:13:22'),
(48, 1454, '3', 0, 36, 0, '2017-09-13 08:13:23'),
(60, 371, '3', -0.0675, 17, 0, '2017-09-13 08:13:23'),
(56, 399, '0', -0.0075, 20, 0, '2017-09-13 08:13:25'),
(55, 1177, '0', -0.00619835, 22, 0, '2017-09-13 08:13:26'),
(66, 2733, '2', 2.47645, 15, 1, '2017-09-13 08:13:26'),
(62, 1454, '2', 0.391204, 23, 1, '2017-09-13 08:13:27'),
(69, 2607, '2', -0.3675, 26, 0, '2017-09-13 08:13:27'),
(68, 729, '1', -0.925926, 16, 0, '2017-09-13 08:13:27'),
(45, 1475, '4', -1.43478, 24, 0, '2017-09-13 08:13:27'),
(65, 1133, '3', 0.6075, 11, 1, '2017-09-13 08:13:28'),
(71, 2448, '2', 1.76087, 38, 1, '2017-09-13 08:13:28'),
(59, 729, '1', -0.0833333, 30, 0, '2017-09-13 08:13:28'),
(39, 730, '1', -0.333333, 24, 0, '2017-09-13 08:13:29'),
(38, 1172, '1', -1.2675, 7, 0, '2017-09-13 08:13:29'),
(49, 465, '3', -0.03, 27, 0, '2017-09-13 08:13:29'),
(57, 366, '4', 0.48, 12, 1, '2017-09-13 08:13:30'),
(63, 2607, '0', 0, 12, -1, '2017-09-13 08:13:30'),
(70, 2615, '1', 0.3675, 26, 1, '2017-09-13 08:13:30'),
(44, 1465, '0', -0.00382653, 28, 0, '2017-09-13 08:13:30'),
(64, 598, '4', 2.1675, 9, 1, '2017-09-13 08:13:31'),
(52, 2733, '2', 2.43962, 16, 1, '2017-09-13 08:13:32'),
(56, 368, '3', 0.9075, 9, 1, '2017-09-13 08:13:34'),
(40, 3020, '1', -0.979592, 12, 0, '2017-09-13 08:13:34'),
(53, 737, '2', -0.016875, 37, 0, '2017-09-13 08:13:34'),
(65, 402, '2', -1.47, 6, 0, '2017-09-13 08:13:34'),
(31, 1263, '3', -0.001875, 39, 0, '2017-09-13 08:13:35'),
(33, 1449, '4', 0.421875, 25, 1, '2017-09-13 08:13:35'),
(55, 1197, '3', -1.02083, 10, 0, '2017-09-13 08:13:36'),
(37, 3551, '4', -0.2028, 37, 0, '2017-09-13 08:13:36'),
(50, 1203, '3', 0.00333333, 29, 1, '2017-09-13 08:13:36'),
(61, 1276, '0', 0, 21, -1, '2017-09-13 08:13:37'),
(60, 2400, '3', 1.92, 14, 1, '2017-09-13 08:13:37'),
(39, 723, '1', 1.81481, 8, 1, '2017-09-13 08:13:37'),
(46, 2819, '1', -2.09443, 25, 0, '2017-09-13 08:13:38'),
(58, 2602, '1', -0.9075, 18, 0, '2017-09-13 08:13:38'),
(43, 3416, '3', -0.0833333, 25, 0, '2017-09-13 08:13:38'),
(36, 384, '0', -0.0075, 20, 0, '2017-09-13 08:13:38'),
(42, 3430, '1', 0.00154959, 43, 1, '2017-09-13 08:13:39'),
(67, 735, '1', -1.61333, 8, 0, '2017-09-13 08:13:39'),
(70, 2607, '1', -1.80187, 9, 0, '2017-09-13 08:13:39'),
(41, 2419, '1', -1.80187, 27, 0, '2017-09-13 08:13:40'),
(66, 2728, '4', 2.54929, 13, 1, '2017-09-13 08:13:40'),
(38, 1291, '4', 0.6075, 11, 1, '2017-09-13 08:13:41'),
(47, 2176, '0', -0.00110947, 52, 0, '2017-09-13 08:13:42'),
(45, 1466, '4', -1.47, 15, 0, '2017-09-13 08:13:42'),
(50, 1174, '3', 1.60207, 7, 1, '2017-09-13 08:13:43'),
(40, 3032, '2', 1.38138, 9, 1, '2017-09-13 08:13:43'),
(31, 1177, '2', 1.21488, 8, 1, '2017-09-13 08:13:43'),
(70, 2606, '1', 2.29688, 5, 1, '2017-09-13 08:13:44'),
(59, 509, '1', 0.835648, 17, 1, '2017-09-13 08:13:45'),
(58, 2617, '1', 2.25333, 8, 1, '2017-09-13 08:13:46'),
(39, 486, '1', 1.56481, 10, 1, '2017-09-13 08:13:46'),
(49, 729, '0', 0, 17, -1, '2017-09-13 08:13:47'),
(60, 366, '4', 0.75, 10, 1, '2017-09-13 08:13:47'),
(68, 485, '1', 0.958412, 20, 1, '2017-09-13 08:13:47'),
(33, 1457, '4', 1.36688, 13, 1, '2017-09-13 08:13:48'),
(47, 2171, '2', 1.6875, 6, 1, '2017-09-13 08:13:49'),
(70, 2614, '4', 2.29688, 5, 1, '2017-09-13 08:13:49'),
(65, 2427, '4', 2.29688, 15, 1, '2017-09-13 08:13:49'),
(55, 1194, '1', 0.860969, 13, 1, '2017-09-13 08:13:49'),
(61, 1169, '2', 0.630208, 13, 1, '2017-09-13 08:13:50'),
(66, 2734, '3', 2.65665, 10, 1, '2017-09-13 08:13:50'),
(35, 476, '4', -0.675, 31, 0, '2017-09-13 08:13:51'),
(67, 464, '3', 0.869823, 12, 1, '2017-09-13 08:13:51'),
(49, 737, '0', 0, 4, -1, '2017-09-13 08:13:51'),
(36, 401, '4', 0.48, 12, 1, '2017-09-13 08:13:51'),
(38, 1174, '3', 0.998521, 11, 1, '2017-09-13 08:13:51'),
(52, 2823, '3', 2.28943, 20, 1, '2017-09-13 08:13:52'),
(37, 3562, '3', -1.06293, 17, 0, '2017-09-13 08:13:52'),
(56, 366, '4', 0.03, 18, 1, '2017-09-13 08:13:53'),
(50, 1190, '4', 1.2398, 10, 1, '2017-09-13 08:13:53'),
(43, 3410, '1', 0.75, 15, 1, '2017-09-13 08:13:54'),
(44, 1455, '1', 0.48, 24, 1, '2017-09-13 08:13:54'),
(64, 1312, '2', 1.95455, 23, 1, '2017-09-13 08:13:54'),
(51, 731, '2', 0.00925926, 34, 1, '2017-09-13 08:13:55'),
(41, 1120, '4', -0.1875, 15, 0, '2017-09-13 08:13:55'),
(45, 1463, '2', 1.48915, 13, 1, '2017-09-13 08:13:56'),
(69, 2609, '2', 0.226875, 29, 1, '2017-09-13 08:13:56'),
(40, 3287, '3', -1.29848, 13, 0, '2017-09-13 08:13:57'),
(47, 2179, '1', -1.33333, 8, 0, '2017-09-13 08:13:57'),
(61, 1177, '2', 1.39463, 7, 1, '2017-09-13 08:13:57'),
(58, 2635, '1', 2.45, 11, 1, '2017-09-13 08:13:57'),
(42, 3420, '3', -0.968492, 19, 0, '2017-09-13 08:13:58'),
(67, 730, '0', 0, 7, -1, '2017-09-13 08:13:58'),
(36, 381, '1', 1.08, 8, 1, '2017-09-13 08:13:59'),
(68, 465, '2', 1.08, 12, 1, '2017-09-13 08:14:00'),
(39, 740, '3', -1.91667, 13, 0, '2017-09-13 08:14:00'),
(66, 2833, '3', 2.62111, 11, 1, '2017-09-13 08:14:01'),
(62, 1464, '2', 0.255208, 34, 1, '2017-09-13 08:14:01'),
(65, 377, '4', -0.48, 12, 0, '2017-09-13 08:14:01'),
(70, 2604, '4', -1.2675, 14, 0, '2017-09-13 08:14:03'),
(45, 1449, '1', -1.92, 8, 0, '2017-09-13 08:14:04'),
(46, 2816, '0', 0, 26, -1, '2017-09-13 08:14:04'),
(41, 373, '2', -0.9075, 9, 0, '2017-09-13 08:14:04'),
(35, 754, '4', 2, 14, 1, '2017-09-13 08:14:05'),
(64, 1327, '1', -2.4, 10, 0, '2017-09-13 08:14:05'),
(33, 1461, '3', 1.19234, 17, 1, '2017-09-13 08:14:05'),
(53, 726, '3', -0.0233564, 31, 0, '2017-09-13 08:14:05'),
(59, 721, '2', -0.75, 20, 0, '2017-09-13 08:14:06'),
(67, 485, '2', -2.04726, 8, 0, '2017-09-13 08:14:06'),
(69, 2610, '2', -1.6875, 10, 0, '2017-09-13 08:14:06'),
(38, 1270, '0', 0, 15, -1, '2017-09-13 08:14:07'),
(37, 3564, '3', -1.33333, 14, 0, '2017-09-13 08:14:07'),
(39, 746, '4', 1.94676, 7, 1, '2017-09-13 08:14:07'),
(60, 1115, '1', 0, 20, 1, '2017-09-13 08:14:07'),
(31, 1216, '0', -0.00520833, 24, 0, '2017-09-13 08:14:07'),
(61, 1184, '4', 0.880208, 11, 1, '2017-09-13 08:14:08'),
(47, 2172, '1', -1.14446, 13, 0, '2017-09-13 08:14:09'),
(66, 2870, '2', -2.76586, 9, 0, '2017-09-13 08:14:10'),
(40, 3136, '1', -1.19668, 14, 0, '2017-09-13 08:14:10'),
(63, 2615, '0', -0.001875, 40, 0, '2017-09-13 08:14:10'),
(53, 490, '2', 2.08333, 6, 1, '2017-09-13 08:14:11'),
(70, 2609, '2', 1.80187, 9, 1, '2017-09-13 08:14:12'),
(43, 3413, '3', -0.333333, 20, 0, '2017-09-13 08:14:13'),
(67, 466, '3', 1.76333, 7, 1, '2017-09-13 08:14:13'),
(50, 1200, '2', -1.33333, 20, 0, '2017-09-13 08:14:13'),
(52, 2881, '3', -2.41868, 21, 0, '2017-09-13 08:14:13'),
(46, 2865, '3', 2.69195, 9, 1, '2017-09-13 08:14:13'),
(41, 1112, '4', 0.75, 10, 1, '2017-09-13 08:14:14'),
(37, 3567, '3', 2.08333, 7, 1, '2017-09-13 08:14:14'),
(62, 1459, '3', -1.36688, 13, 0, '2017-09-13 08:14:14'),
(36, 1131, '4', -0.1875, 15, 0, '2017-09-13 08:14:14'),
(60, 2403, '2', 2.55148, 7, 1, '2017-09-13 08:14:15'),
(68, 466, '1', -0.75, 15, 0, '2017-09-13 08:14:15'),
(69, 2605, '2', 1.80187, 9, 1, '2017-09-13 08:14:16'),
(49, 719, '2', -0.280093, 25, 0, '2017-09-13 08:14:16'),
(64, 1328, '3', 2.45, 11, 1, '2017-09-13 08:14:16'),
(38, 1218, '1', -0.75, 10, 0, '2017-09-13 08:14:16'),
(55, 1203, '3', 0.03, 27, 1, '2017-09-13 08:14:17'),
(63, 2608, '3', 2.04187, 7, 1, '2017-09-13 08:14:18'),
(51, 725, '1', -0.314014, 23, 0, '2017-09-13 08:14:18'),
(42, 3428, '3', -0.892562, 20, 0, '2017-09-13 08:14:18'),
(71, 2457, '3', -1.76613, 51, 0, '2017-09-13 08:14:19'),
(58, 2620, '2', -1.85, 23, 0, '2017-09-13 08:14:20'),
(70, 2608, '4', -1.92, 8, 0, '2017-09-13 08:14:20'),
(62, 3004, '2', -1.92, 6, 0, '2017-09-13 08:14:21'),
(65, 373, '0', -0.0075, 20, 0, '2017-09-13 08:14:21'),
(33, 2933, '4', -0.333333, 16, 0, '2017-09-13 08:14:22'),
(48, 1467, '3', 0.000833333, 59, 1, '2017-09-13 08:14:22'),
(45, 1467, '3', 1.40083, 19, 1, '2017-09-13 08:14:22'),
(52, 2816, '4', 2.72703, 8, 1, '2017-09-13 08:14:22'),
(36, 1116, '4', 0.9075, 9, 1, '2017-09-13 08:14:23'),
(50, 1183, '2', 0.892562, 10, 1, '2017-09-13 08:14:23'),
(49, 485, '2', -2.04726, 8, 0, '2017-09-13 08:14:24'),
(35, 738, '2', 1.32353, 19, 1, '2017-09-13 08:14:24'),
(70, 2601, '2', 2.43, 4, 1, '2017-09-13 08:14:24'),
(44, 1451, '1', 0.0833333, 30, 1, '2017-09-13 08:14:24'),
(39, 478, '2', -1.92, 18, 0, '2017-09-13 08:14:25'),
(66, 2731, '4', 2.513, 14, 1, '2017-09-13 08:14:25'),
(63, 2610, '3', 2.04187, 7, 1, '2017-09-13 08:14:25'),
(61, 1195, '4', 0.0675, 17, 1, '2017-09-13 08:14:26'),
(53, 719, '3', 1.12037, 14, 1, '2017-09-13 08:14:26'),
(45, 3044, '3', 2.08333, 4, 1, '2017-09-13 08:14:27'),
(69, 2603, '1', 1.57687, 11, 1, '2017-09-13 08:14:27'),
(51, 490, '2', 1.6875, 9, 1, '2017-09-13 08:14:27'),
(58, 2618, '3', 2.65, 7, 1, '2017-09-13 08:14:27'),
(60, 392, '4', -0.3675, 13, 0, '2017-09-13 08:14:28'),
(31, 1227, '0', 0, 21, -1, '2017-09-13 08:14:29'),
(70, 2605, '2', 2.1675, 6, 1, '2017-09-13 08:14:30'),
(64, 1324, '3', 2.31818, 15, 1, '2017-09-13 08:14:31'),
(49, 718, '1', 1.76333, 7, 1, '2017-09-13 08:14:31'),
(40, 3149, '4', -0.467452, 23, 0, '2017-09-13 08:14:33'),
(50, 1171, '4', 1.5, 10, 1, '2017-09-13 08:14:34'),
(41, 402, '0', -0.0075, 20, 0, '2017-09-13 08:14:34'),
(61, 1174, '3', 1.43787, 8, 1, '2017-09-13 08:14:34'),
(41, 401, '0', 0, 0, -1, '2017-09-13 08:14:34'),
(70, 2613, '4', 2.29688, 5, 1, '2017-09-13 08:14:35'),
(47, 2604, '1', -1.80187, 9, 0, '2017-09-13 08:14:35'),
(36, 1137, '4', -0.3675, 13, 0, '2017-09-13 08:14:35'),
(37, 3559, '3', -0.680272, 22, 0, '2017-09-13 08:14:36'),
(63, 2618, '3', 2.00083, 11, 1, '2017-09-13 08:14:36'),
(58, 2628, '4', -2.55, 9, 0, '2017-09-13 08:14:36'),
(55, 1291, '3', 0, 20, 0, '2017-09-13 08:14:36'),
(67, 498, '3', -0.541875, 23, 0, '2017-09-13 08:14:36'),
(39, 750, '2', 1.63894, 12, 1, '2017-09-13 08:14:37'),
(38, 1185, '4', 0.137755, 22, 1, '2017-09-13 08:14:39'),
(64, 1334, '4', 2.6, 8, 1, '2017-09-13 08:14:39'),
(50, 1294, '0', 0, 6, -1, '2017-09-13 08:14:40'),
(43, 3412, '4', 0.03, 27, 1, '2017-09-13 08:14:40'),
(49, 726, '1', 1.49481, 10, 1, '2017-09-13 08:14:41'),
(60, 1136, '2', 0.3675, 13, 1, '2017-09-13 08:14:41'),
(65, 399, '0', -0.0075, 20, 0, '2017-09-13 08:14:41'),
(70, 2610, '3', 2.1675, 6, 1, '2017-09-13 08:14:42'),
(62, 3051, '0', 0, 21, -1, '2017-09-13 08:14:42'),
(69, 2608, '3', 0.991875, 17, 1, '2017-09-13 08:14:44'),
(51, 718, '1', 0.563333, 17, 1, '2017-09-13 08:14:44'),
(36, 373, '3', -1.08, 8, 0, '2017-09-13 08:14:44'),
(66, 2887, '3', 2.44949, 20, 1, '2017-09-13 08:14:44'),
(53, 733, '3', 0.826875, 19, 1, '2017-09-13 08:14:44'),
(68, 730, '2', 0.113426, 29, 1, '2017-09-13 08:14:44'),
(45, 1479, '3', 1.70455, 19, 1, '2017-09-13 08:14:45'),
(64, 1331, '2', 2.475, 7, 1, '2017-09-13 08:14:46'),
(48, 1466, '3', -0.8112, 24, 0, '2017-09-13 08:14:46'),
(65, 2400, '3', 2.58673, 5, 1, '2017-09-13 08:14:46'),
(33, 1473, '3', -0.8112, 24, 0, '2017-09-13 08:14:46'),
(47, 2602, '1', -1.57687, 11, 0, '2017-09-13 08:14:46'),
(49, 725, '4', 2.0346, 6, 1, '2017-09-13 08:14:47'),
(45, 1482, '2', -2.72727, 4, 0, '2017-09-13 08:14:49'),
(37, 3555, '4', -1.33333, 14, 0, '2017-09-13 08:14:50'),
(31, 1276, '4', -0.354492, 21, 0, '2017-09-13 08:14:50'),
(67, 509, '2', -1.12037, 14, 0, '2017-09-13 08:14:51'),
(40, 3292, '3', 0.916205, 17, 1, '2017-09-13 08:14:51'),
(64, 1356, '2', -2.79651, 6, 0, '2017-09-13 08:14:52'),
(42, 3436, '0', 0, 34, -1, '2017-09-13 08:14:52'),
(51, 736, '1', 1.62197, 9, 1, '2017-09-13 08:14:52'),
(68, 487, '4', 1.92, 8, 1, '2017-09-13 08:14:52'),
(44, 1464, '3', -0.574219, 27, 0, '2017-09-13 08:14:53'),
(53, 487, '4', 1.92, 8, 1, '2017-09-13 08:14:53'),
(62, 1450, '1', -1.33333, 12, 0, '2017-09-13 08:14:53'),
(65, 378, '3', -1.08, 8, 0, '2017-09-13 08:14:54'),
(70, 2618, '3', 2.4, 12, 1, '2017-09-13 08:14:54'),
(69, 2601, '2', 1.6875, 10, 1, '2017-09-13 08:14:54'),
(46, 2874, '1', 1.34442, 42, 1, '2017-09-13 08:14:55'),
(55, 1184, '4', 0.130208, 19, 1, '2017-09-13 08:14:56'),
(57, 2413, '1', 0.0173677, 85, 1, '2017-09-13 08:14:56'),
(41, 2414, '1', -1.63675, 23, 0, '2017-09-13 08:14:57'),
(58, 2624, '1', -1.95, 21, 0, '2017-09-13 08:14:57'),
(36, 400, '0', 0, 14, -1, '2017-09-13 08:14:58'),
(67, 472, '1', 2.04187, 7, 1, '2017-09-13 08:14:58'),
(65, 369, '2', 1.92, 4, 1, '2017-09-13 08:14:58'),
(47, 2611, '3', 1.36688, 13, 1, '2017-09-13 08:14:59'),
(45, 1451, '1', 1.56481, 10, 1, '2017-09-13 08:14:59'),
(38, 1184, '4', 0.046875, 21, 1, '2017-09-13 08:15:00'),
(60, 400, '4', 0.0675, 17, 1, '2017-09-13 08:15:01'),
(69, 2606, '1', 2.04187, 7, 1, '2017-09-13 08:15:01'),
(53, 734, '2', 1.61333, 8, 1, '2017-09-13 08:15:01'),
(35, 477, '3', -0.521739, 38, 0, '2017-09-13 08:15:02'),
(40, 3289, '0', 0, 12, -1, '2017-09-13 08:15:03'),
(66, 2882, '4', -2.50998, 18, 0, '2017-09-13 08:15:03'),
(64, 1315, '4', 2.43103, 11, 1, '2017-09-13 08:15:03'),
(44, 3039, '1', 0.998521, 11, 1, '2017-09-13 08:15:03'),
(48, 1449, '3', -0.991875, 17, 0, '2017-09-13 08:15:03'),
(65, 2410, '1', -2.65349, 5, 0, '2017-09-13 08:15:03'),
(33, 1491, '2', 0.979592, 18, 1, '2017-09-13 08:15:05'),
(70, 2632, '3', 2.35, 13, 1, '2017-09-13 08:15:06'),
(47, 2606, '1', 1.92, 8, 1, '2017-09-13 08:15:07'),
(43, 3406, '3', -0.0533333, 26, 0, '2017-09-13 08:15:07'),
(36, 1110, '2', 0.75, 10, 1, '2017-09-13 08:15:08'),
(41, 1114, '3', -0.6075, 11, 0, '2017-09-13 08:15:08'),
(37, 3574, '4', 1.40083, 19, 1, '2017-09-13 08:15:08'),
(38, 1173, '2', 1.47, 6, 1, '2017-09-13 08:15:09'),
(39, 756, '3', -1, 32, 0, '2017-09-13 08:15:09'),
(45, 1468, '1', -2.325, 9, 0, '2017-09-13 08:15:09'),
(55, 1195, '4', 0.27, 14, 1, '2017-09-13 08:15:10'),
(65, 1122, '4', 1.2675, 7, 1, '2017-09-13 08:15:10'),
(69, 2628, '4', -2.5, 10, 0, '2017-09-13 08:15:10'),
(61, 1297, '3', 0.440833, 37, 1, '2017-09-13 08:15:11'),
(35, 743, '4', 2.25, 9, 1, '2017-09-13 08:15:11'),
(68, 481, '3', -0.826875, 19, 0, '2017-09-13 08:15:12'),
(62, 1461, '3', 1.11153, 18, 1, '2017-09-13 08:15:12'),
(53, 728, '1', 1.40443, 12, 1, '2017-09-13 08:15:13'),
(66, 2889, '2', 2.71109, 11, 1, '2017-09-13 08:15:13'),
(64, 1349, '1', 2.62111, 11, 1, '2017-09-13 08:15:14'),
(71, 2438, '3', 1.73077, 55, 1, '2017-09-13 08:15:14'),
(48, 3004, '2', -0.963333, 13, 0, '2017-09-13 08:15:16'),
(62, 3044, '3', 2.08333, 4, 1, '2017-09-13 08:15:16'),
(57, 375, '0', -0.0075, 20, 0, '2017-09-13 08:15:16'),
(45, 1472, '4', -1.92, 8, 0, '2017-09-13 08:15:17'),
(31, 1297, '3', 0.9075, 27, 1, '2017-09-13 08:15:18'),
(50, 1265, '1', -0.807692, 38, 0, '2017-09-13 08:15:18'),
(60, 395, '4', 0, 20, 0, '2017-09-13 08:15:18'),
(33, 1471, '4', 1.76333, 14, 1, '2017-09-13 08:15:18'),
(44, 1452, '2', 1.17188, 15, 1, '2017-09-13 08:15:19'),
(70, 2616, '4', 2.4, 12, 1, '2017-09-13 08:15:19'),
(37, 3589, '2', -2.00083, 11, 0, '2017-09-13 08:15:19'),
(45, 1469, '4', -2.56687, 3, 0, '2017-09-13 08:15:20'),
(51, 509, '3', -0.148148, 28, 0, '2017-09-13 08:15:20'),
(58, 2625, '1', -1.08, 24, 0, '2017-09-13 08:15:21'),
(55, 1172, '4', 0.6075, 11, 1, '2017-09-13 08:15:21'),
(42, 3426, '4', -0.396694, 28, 0, '2017-09-13 08:15:21'),
(52, 2879, '0', -0.387298, 60, 0, '2017-09-13 08:15:23'),
(49, 730, '0', -0.00231481, 36, 0, '2017-09-13 08:15:23'),
(70, 2620, '4', 2.75, 5, 1, '2017-09-13 08:15:24'),
(57, 1110, '4', -1.08, 8, 0, '2017-09-13 08:15:24'),
(61, 1282, '0', 0, 13, -1, '2017-09-13 08:15:24'),
(65, 367, '4', -0.27, 14, 0, '2017-09-13 08:15:24'),
(47, 2609, '3', -0.991875, 17, 0, '2017-09-13 08:15:24'),
(71, 1155, '4', 1.5, 10, 1, '2017-09-13 08:15:25'),
(36, 392, '4', -0.0675, 17, 0, '2017-09-13 08:15:25'),
(66, 2865, '3', 2.71109, 11, 1, '2017-09-13 08:15:25'),
(68, 734, '2', 0.853333, 14, 1, '2017-09-13 08:15:25'),
(69, 2612, '1', 1.17188, 15, 1, '2017-09-13 08:15:26'),
(53, 729, '0', 0, 14, -1, '2017-09-13 08:15:27'),
(41, 383, '0', -0.0075, 20, 0, '2017-09-13 08:15:28'),
(56, 2411, '0', 0, 95, -1, '2017-09-13 08:15:29'),
(33, 1479, '3', 1.79132, 10, 1, '2017-09-13 08:15:29'),
(38, 1199, '3', 0.292969, 22, 1, '2017-09-13 08:15:29'),
(45, 3002, '3', -1.13609, 10, 0, '2017-09-13 08:15:30'),
(66, 2866, '4', 2.87228, 5, 1, '2017-09-13 08:15:30'),
(52, 2887, '2', -2.81957, 7, 0, '2017-09-13 08:15:30'),
(43, 3419, '1', -0.683368, 23, 0, '2017-09-13 08:15:30'),
(70, 2838, '3', 2.79651, 6, 1, '2017-09-13 08:15:30'),
(47, 2601, '2', 2.04187, 7, 1, '2017-09-13 08:15:31'),
(61, 1191, '3', 2.25, 7, 1, '2017-09-13 08:15:31'),
(64, 617, '2', -2.40251, 17, 0, '2017-09-13 08:15:31'),
(53, 494, '3', 2.25333, 4, 1, '2017-09-13 08:15:31'),
(56, 2400, '3', 2.66694, 4, 1, '2017-09-13 08:15:32'),
(48, 1456, '2', -0.9075, 18, 0, '2017-09-13 08:15:34'),
(35, 747, '2', 1.16667, 22, 1, '2017-09-13 08:15:34'),
(67, 732, '0', -0.00231481, 36, 0, '2017-09-13 08:15:35'),
(58, 2616, '1', -1.76333, 14, 0, '2017-09-13 08:15:35'),
(45, 1470, '1', 2.43, 5, 1, '2017-09-13 08:15:35'),
(47, 2610, '4', -2.29688, 5, 0, '2017-09-13 08:15:36'),
(60, 372, '3', -0.03, 18, 0, '2017-09-13 08:15:36'),
(63, 2630, '0', -0.05, 60, 0, '2017-09-13 08:15:37'),
(38, 1191, '3', 1.38138, 9, 1, '2017-09-13 08:15:37'),
(40, 3093, '0', 0, 34, -1, '2017-09-13 08:15:37'),
(44, 1449, '1', -0.826875, 19, 0, '2017-09-13 08:15:37'),
(31, 1195, '0', -0.0075, 20, 0, '2017-09-13 08:15:38'),
(46, 2859, '1', -1.29416, 43, 0, '2017-09-13 08:15:38'),
(62, 3039, '1', 0.0710059, 22, 1, '2017-09-13 08:15:39'),
(70, 2833, '3', 2.69195, 9, 1, '2017-09-13 08:15:39'),
(51, 727, '2', 0.668981, 19, 1, '2017-09-13 08:15:39'),
(68, 489, '4', -1.17188, 15, 0, '2017-09-13 08:15:40'),
(49, 732, '4', 0.75, 18, 1, '2017-09-13 08:15:41'),
(45, 1487, '1', 2.15643, 7, 1, '2017-09-13 08:15:42'),
(41, 370, '4', -0.27, 14, 0, '2017-09-13 08:15:42'),
(39, 477, '2', 0.204159, 34, 1, '2017-09-13 08:15:43'),
(42, 3419, '3', -0.75, 22, 0, '2017-09-13 08:15:43'),
(52, 2820, '1', -2.513, 14, 0, '2017-09-13 08:15:44'),
(57, 397, '0', -0.0075, 20, 0, '2017-09-13 08:15:44'),
(37, 1177, '2', 0.75, 11, 1, '2017-09-13 08:15:44'),
(58, 2632, '2', -2.08333, 10, 0, '2017-09-13 08:15:45'),
(47, 2612, '2', -1.80187, 9, 0, '2017-09-13 08:15:45'),
(43, 3427, '4', 1.3032, 15, 1, '2017-09-13 08:15:46'),
(67, 465, '2', 1.08, 12, 1, '2017-09-13 08:15:46'),
(64, 1354, '1', 2.47645, 15, 1, '2017-09-13 08:15:46'),
(65, 1173, '2', 0.48, 12, 1, '2017-09-13 08:15:47'),
(51, 740, '1', 2.33333, 8, 1, '2017-09-13 08:15:48'),
(41, 2400, '3', 2.50776, 6, 1, '2017-09-13 08:15:48'),
(66, 2879, '2', 2.47992, 19, 1, '2017-09-13 08:15:49'),
(63, 2621, '3', 2.4, 12, 1, '2017-09-13 08:15:49'),
(33, 3000, '1', -0.046875, 21, 0, '2017-09-13 08:15:50'),
(71, 2445, '1', -2.42308, 25, 0, '2017-09-13 08:15:50'),
(36, 2403, '3', -1.56481, 25, 0, '2017-09-13 08:15:50'),
(56, 378, '4', -0.03, 18, 0, '2017-09-13 08:15:50'),
(69, 2602, '3', 0.48, 24, 1, '2017-09-13 08:15:51'),
(70, 2847, '4', 2.58532, 12, 1, '2017-09-13 08:15:51'),
(49, 509, '1', 1.56481, 10, 1, '2017-09-13 08:15:51'),
(60, 384, '2', -0.27, 14, 0, '2017-09-13 08:15:51'),
(68, 498, '1', -1.57687, 11, 0, '2017-09-13 08:15:51'),
(31, 1173, '2', 0.27, 14, 1, '2017-09-13 08:15:52'),
(67, 487, '4', 2.1675, 6, 1, '2017-09-13 08:15:52'),
(52, 2731, '4', 2.69195, 9, 1, '2017-09-13 08:15:53'),
(45, 1471, '4', 2.00083, 11, 1, '2017-09-13 08:15:53'),
(55, 1276, '0', -0.00292969, 32, 0, '2017-09-13 08:15:53'),
(44, 1453, '1', 1.3872, 16, 1, '2017-09-13 08:15:54'),
(62, 1463, '1', -1.12965, 17, 0, '2017-09-13 08:15:55'),
(61, 1200, '4', 1, 24, 1, '2017-09-13 08:15:55'),
(39, 747, '2', 1.02083, 15, 1, '2017-09-13 08:15:58'),
(64, 1363, '1', -2.57858, 13, 0, '2017-09-13 08:15:59'),
(57, 388, '4', -0.12, 16, 0, '2017-09-13 08:16:00'),
(67, 481, '3', -1.92, 8, 0, '2017-09-13 08:16:00'),
(58, 2633, '3', 1.6875, 15, 1, '2017-09-13 08:16:00'),
(63, 2619, '3', 2.4, 12, 1, '2017-09-13 08:16:01'),
(70, 2731, '4', 2.62111, 11, 1, '2017-09-13 08:16:02'),
(50, 1257, '3', -0.1875, 45, 0, '2017-09-13 08:16:04'),
(52, 2885, '4', 2.62111, 11, 1, '2017-09-13 08:16:04'),
(36, 1139, '0', 0, 14, -1, '2017-09-13 08:16:04'),
(53, 748, '1', -0.525, 33, 0, '2017-09-13 08:16:04'),
(68, 490, '4', -1.22454, 13, 0, '2017-09-13 08:16:05'),
(35, 763, '3', -1.35738, 32, 0, '2017-09-13 08:16:06'),
(64, 1316, '1', -2.76188, 7, 0, '2017-09-13 08:16:06'),
(40, 3117, '3', -0.168283, 29, 0, '2017-09-13 08:16:07'),
(41, 395, '0', 0, 19, -1, '2017-09-13 08:16:07'),
(66, 2900, '3', -2.60112, 18, 0, '2017-09-13 08:16:07'),
(71, 2601, '2', 2.43, 4, 1, '2017-09-13 08:16:08'),
(58, 2631, '3', 2.25333, 8, 1, '2017-09-13 08:16:08'),
(48, 1451, '1', 0.00925926, 34, 1, '2017-09-13 08:16:08'),
(37, 1169, '0', -0.00520833, 24, 0, '2017-09-13 08:16:08'),
(67, 494, '0', 0, 9, -1, '2017-09-13 08:16:09'),
(61, 1217, '3', 0.9, 14, 1, '2017-09-13 08:16:10'),
(50, 1217, '3', 2.1, 6, 1, '2017-09-13 08:16:10'),
(60, 2416, '3', 1.8444, 19, 1, '2017-09-13 08:16:10'),
(53, 723, '1', 2.22454, 5, 1, '2017-09-13 08:16:10'),
(39, 754, '4', 2.14286, 12, 1, '2017-09-13 08:16:10'),
(46, 2866, '4', 1.80492, 32, 1, '2017-09-13 08:16:10'),
(47, 2614, '1', -0.421875, 25, 0, '2017-09-13 08:16:11'),
(56, 377, '0', -0.0075, 20, 0, '2017-09-13 08:16:11'),
(64, 1132, '1', 2.75, 5, 1, '2017-09-13 08:16:11'),
(62, 1456, '1', 0.991875, 17, 1, '2017-09-13 08:16:12'),
(55, 1169, '2', 0.0833333, 20, 1, '2017-09-13 08:16:13'),
(63, 2623, '0', 0, 12, -1, '2017-09-13 08:16:14'),
(64, 1361, '1', -2.89915, 3, 0, '2017-09-13 08:16:14'),
(38, 1208, '1', 0.2028, 37, 1, '2017-09-13 08:16:15'),
(41, 376, '1', -0.9075, 9, 0, '2017-09-13 08:16:16'),
(70, 2820, '4', -2.513, 14, 0, '2017-09-13 08:16:16'),
(57, 401, '2', -0.12, 16, 0, '2017-09-13 08:16:16'),
(36, 2413, '0', 0, 13, -1, '2017-09-13 08:16:16'),
(45, 1477, '4', -0.988683, 23, 0, '2017-09-13 08:16:17'),
(47, 2613, '4', 2.1675, 6, 1, '2017-09-13 08:16:17'),
(66, 2871, '1', -2.73861, 10, 0, '2017-09-13 08:16:17'),
(31, 1270, '0', 0, 25, -1, '2017-09-13 08:16:17'),
(58, 2622, '2', 2.08333, 10, 1, '2017-09-13 08:16:18'),
(50, 1220, '1', -2.03571, 9, 0, '2017-09-13 08:16:18'),
(43, 3425, '0', 0, 34, -1, '2017-09-13 08:16:19'),
(37, 1190, '4', 0.979592, 12, 1, '2017-09-13 08:16:20'),
(51, 474, '4', -0.525, 33, 0, '2017-09-13 08:16:21'),
(42, 3421, '2', -0.0759298, 37, 0, '2017-09-13 08:16:21'),
(38, 1219, '3', 1.39463, 7, 1, '2017-09-13 08:16:22'),
(44, 1467, '3', 0.853333, 28, 1, '2017-09-13 08:16:22'),
(36, 1140, '1', 1.2675, 7, 1, '2017-09-13 08:16:23'),
(41, 1133, '3', 1.2675, 7, 1, '2017-09-13 08:16:23'),
(53, 742, '3', -1.95, 14, 0, '2017-09-13 08:16:24'),
(62, 1460, '1', 1.63894, 12, 1, '2017-09-13 08:16:25'),
(33, 1478, '2', 0.046875, 35, 1, '2017-09-13 08:16:25'),
(45, 1476, '4', -2.05141, 9, 0, '2017-09-13 08:16:26'),
(40, 3105, '2', -0.67313, 20, 0, '2017-09-13 08:16:27'),
(71, 2615, '1', 0.75, 20, 1, '2017-09-13 08:16:28'),
(64, 1106, '1', -2.3, 14, 0, '2017-09-13 08:16:28'),
(53, 720, '4', 2.40166, 4, 1, '2017-09-13 08:16:28'),
(69, 2629, '4', -1.1, 38, 0, '2017-09-13 08:16:28'),
(57, 387, '3', -0.48, 12, 0, '2017-09-13 08:16:28'),
(45, 1488, '4', -2.60486, 3, 0, '2017-09-13 08:16:29'),
(36, 368, '3', 1.47, 6, 1, '2017-09-13 08:16:29'),
(68, 733, '3', 0.48, 24, 1, '2017-09-13 08:16:30'),
(39, 755, '4', -1.75, 20, 0, '2017-09-13 08:16:30'),
(60, 383, '0', -0.0075, 20, 0, '2017-09-13 08:16:30'),
(47, 2615, '1', 1.2675, 14, 1, '2017-09-13 08:16:31'),
(50, 1282, '1', -1.7, 13, 0, '2017-09-13 08:16:32'),
(65, 1270, '0', -0.00141777, 46, 0, '2017-09-13 08:16:33'),
(69, 2613, '4', 2.1675, 6, 1, '2017-09-13 08:16:34'),
(56, 2410, '1', -1.58206, 23, 0, '2017-09-13 08:16:34'),
(68, 727, '2', 2.22454, 5, 1, '2017-09-13 08:16:34'),
(49, 755, '2', -0.25, 44, 0, '2017-09-13 08:16:35'),
(58, 2623, '4', -2.15, 17, 0, '2017-09-13 08:16:35'),
(63, 2628, '2', -1.9, 22, 0, '2017-09-13 08:16:35'),
(51, 502, '2', 2.08696, 14, 1, '2017-09-13 08:16:35'),
(44, 1450, '1', -1.22454, 13, 0, '2017-09-13 08:16:35'),
(71, 2606, '1', 1.92, 8, 1, '2017-09-13 08:16:36'),
(66, 2859, '2', 2.50998, 18, 1, '2017-09-13 08:16:36'),
(70, 2729, '1', -2.28943, 20, 0, '2017-09-13 08:16:36'),
(55, 1170, '0', -0.00520833, 24, 0, '2017-09-13 08:16:38'),
(67, 733, '1', -0.226875, 29, 0, '2017-09-13 08:16:38'),
(47, 2605, '4', -1.92, 8, 0, '2017-09-13 08:16:39'),
(35, 757, '2', 0.913043, 32, 1, '2017-09-13 08:16:39'),
(46, 2879, '2', 1.93165, 29, 1, '2017-09-13 08:16:39'),
(38, 1175, '4', 0.65918, 17, 1, '2017-09-13 08:16:39'),
(52, 2859, '2', 1.85742, 37, 1, '2017-09-13 08:16:41'),
(51, 748, '1', -2.475, 7, 0, '2017-09-13 08:16:42'),
(50, 1291, '4', 0.6075, 11, 1, '2017-09-13 08:16:43'),
(33, 1474, '0', 0, 18, -1, '2017-09-13 08:16:43'),
(53, 751, '3', -1.97727, 15, 0, '2017-09-13 08:16:43'),
(41, 377, '0', -0.0075, 20, 0, '2017-09-13 08:16:44'),
(68, 722, '3', 1.6875, 9, 1, '2017-09-13 08:16:44'),
(42, 3435, '2', -0.683368, 23, 0, '2017-09-13 08:16:44'),
(61, 1257, '4', 0.8125, 35, 1, '2017-09-13 08:16:44'),
(47, 2608, '1', -2.1675, 6, 0, '2017-09-13 08:16:45'),
(64, 1326, '1', 2.06897, 18, 1, '2017-09-13 08:16:45'),
(31, 1185, '0', -0.00382653, 28, 0, '2017-09-13 08:16:46'),
(44, 3035, '2', 1.10587, 11, 1, '2017-09-13 08:16:46'),
(43, 3433, '0', 0, 26, -1, '2017-09-13 08:16:47'),
(45, 1485, '4', 1.28254, 18, 1, '2017-09-13 08:16:47'),
(58, 2626, '3', 1.92, 12, 1, '2017-09-13 08:16:47'),
(56, 1137, '2', 0.3675, 13, 1, '2017-09-13 08:16:47'),
(67, 724, '2', -1.47, 9, 0, '2017-09-13 08:16:48'),
(60, 2404, '1', 1.94093, 18, 1, '2017-09-13 08:16:48'),
(39, 480, '1', -1.65, 18, 0, '2017-09-13 08:16:48'),
(48, 1464, '3', -0.0833333, 40, 0, '2017-09-13 08:16:48'),
(57, 390, '0', -0.0075, 20, 0, '2017-09-13 08:16:49'),
(36, 396, '1', 0, 20, 0, '2017-09-13 08:16:49'),
(36, 1121, '0', -0.0075, 20, 0, '2017-09-13 08:16:50'),
(50, 1197, '3', -1.50521, 7, 0, '2017-09-13 08:16:50'),
(70, 2819, '2', 2.54929, 13, 1, '2017-09-13 08:16:50'),
(71, 2610, '3', 1.2675, 14, 1, '2017-09-13 08:16:50'),
(66, 2881, '4', -2.59808, 15, 0, '2017-09-13 08:16:51'),
(47, 2607, '3', -2.1675, 6, 0, '2017-09-13 08:16:51'),
(41, 1122, '4', 1.2675, 7, 1, '2017-09-13 08:16:51'),
(35, 744, '2', -2.025, 13, 0, '2017-09-13 08:16:51'),
(45, 1491, '1', -2.32823, 5, 0, '2017-09-13 08:16:52'),
(55, 1292, '3', -0.853333, 14, 0, '2017-09-13 08:16:52'),
(63, 2624, '4', -2.15, 17, 0, '2017-09-13 08:16:53'),
(65, 1186, '3', 0.1875, 21, 1, '2017-09-13 08:16:54'),
(46, 2871, '2', 2.59808, 15, 1, '2017-09-13 08:16:54'),
(52, 2866, '4', 2.65518, 13, 1, '2017-09-13 08:16:55'),
(33, 1472, '2', -1.36688, 13, 0, '2017-09-13 08:16:56'),
(60, 2418, '2', 2.43, 8, 1, '2017-09-13 08:16:56'),
(38, 1294, '3', 0.1875, 18, 1, '2017-09-13 08:16:57'),
(62, 1452, '2', 0.12, 32, 1, '2017-09-13 08:16:57'),
(68, 719, '3', 1.12037, 14, 1, '2017-09-13 08:16:57'),
(37, 1261, '0', -0.00207756, 38, 0, '2017-09-13 08:16:58'),
(71, 2612, '2', -1.92, 8, 0, '2017-09-13 08:16:58'),
(66, 2868, '2', 2.79285, 8, 1, '2017-09-13 08:16:58'),
(67, 489, '2', -1.57687, 11, 0, '2017-09-13 08:16:59'),
(45, 1480, '3', -2.08333, 7, 0, '2017-09-13 08:16:59'),
(31, 1184, '4', 0.421875, 15, 1, '2017-09-13 08:17:00'),
(58, 2634, '3', -2.3, 14, 0, '2017-09-13 08:17:01'),
(70, 2734, '3', 2.58532, 12, 1, '2017-09-13 08:17:02'),
(49, 498, '3', -0.27, 28, 0, '2017-09-13 08:17:03'),
(42, 3424, '4', -0.968492, 19, 0, '2017-09-13 08:17:03'),
(65, 1190, '3', -1.38138, 9, 0, '2017-09-13 08:17:03'),
(43, 3417, '3', 1.12965, 17, 1, '2017-09-13 08:17:03'),
(36, 367, '3', 0.27, 14, 1, '2017-09-13 08:17:03'),
(56, 386, '1', -0.0675, 17, 0, '2017-09-13 08:17:04'),
(60, 365, '2', -1.08, 8, 0, '2017-09-13 08:17:04'),
(47, 2603, '3', -1.36688, 13, 0, '2017-09-13 08:17:04'),
(61, 1171, '2', 0, 20, 0, '2017-09-13 08:17:05'),
(61, 1189, '0', -0.964286, 20, 0, '2017-09-13 08:17:05'),
(40, 3288, '0', -0.00207756, 38, 0, '2017-09-13 08:17:05'),
(70, 2841, '3', 2.86514, 4, 1, '2017-09-13 08:17:05'),
(67, 727, '2', 1.94676, 7, 1, '2017-09-13 08:17:06'),
(68, 728, '4', -1.74723, 9, 0, '2017-09-13 08:17:06'),
(45, 1481, '3', -2.04187, 7, 0, '2017-09-13 08:17:07'),
(55, 1216, '4', 0.421875, 15, 1, '2017-09-13 08:17:07'),
(39, 739, '1', 0.668981, 19, 1, '2017-09-13 08:17:07'),
(33, 1483, '3', -1.51454, 11, 0, '2017-09-13 08:17:07'),
(71, 2604, '0', 0, 9, -1, '2017-09-13 08:17:07'),
(69, 2634, '1', -1.35, 33, 0, '2017-09-13 08:17:08'),
(52, 2861, '2', 2.62679, 14, 1, '2017-09-13 08:17:09'),
(58, 2621, '3', 2.1675, 9, 1, '2017-09-13 08:17:10'),
(41, 385, '4', -0.0075, 19, 0, '2017-09-13 08:17:10'),
(71, 2613, '4', 2.43, 4, 1, '2017-09-13 08:17:11'),
(35, 475, '2', -1.69565, 20, 0, '2017-09-13 08:17:12'),
(44, 1461, '3', 0.625236, 25, 1, '2017-09-13 08:17:12'),
(62, 1455, '0', 0, 15, -1, '2017-09-13 08:17:12'),
(48, 2933, '0', -0.00520833, 24, 0, '2017-09-13 08:17:12'),
(66, 2874, '1', 2.62679, 14, 1, '2017-09-13 08:17:13'),
(67, 486, '1', 1.81481, 8, 1, '2017-09-13 08:17:13'),
(51, 752, '1', -0.913043, 32, 0, '2017-09-13 08:17:14'),
(47, 2622, '2', 2.08333, 10, 1, '2017-09-13 08:17:14'),
(50, 1227, '0', -0.00520833, 24, 0, '2017-09-13 08:17:14'),
(70, 2732, '3', -2.65665, 10, 0, '2017-09-13 08:17:16'),
(43, 3434, '3', -1.48915, 13, 0, '2017-09-13 08:17:16'),
(45, 1500, '3', -1.86501, 11, 0, '2017-09-13 08:17:17'),
(38, 1282, '1', -0.333333, 20, 0, '2017-09-13 08:17:17'),
(37, 1198, '2', -0.0075, 19, 0, '2017-09-13 08:17:18'),
(69, 2632, '3', 2.08333, 10, 1, '2017-09-13 08:17:18'),
(65, 1291, '3', -0.12, 16, 0, '2017-09-13 08:17:19'),
(47, 2623, '1', -2.52083, 5, 0, '2017-09-13 08:17:19'),
(49, 736, '3', -0.75, 17, 0, '2017-09-13 08:17:19'),
(31, 1170, '2', 0.130208, 19, 1, '2017-09-13 08:17:20'),
(58, 2619, '2', -2.5, 10, 0, '2017-09-13 08:17:20'),
(56, 381, '1', 0.12, 16, 1, '2017-09-13 08:17:20'),
(33, 1469, '3', -1.17188, 15, 0, '2017-09-13 08:17:22'),
(71, 2602, '1', -1.57687, 11, 0, '2017-09-13 08:17:23'),
(36, 387, '1', -0.0075, 19, 0, '2017-09-13 08:17:23'),
(43, 3436, '0', 0, 8, -1, '2017-09-13 08:17:24'),
(66, 2905, '2', -2.76655, 11, 0, '2017-09-13 08:17:24'),
(48, 1468, '3', -1.47, 12, 0, '2017-09-13 08:17:25'),
(46, 2887, '2', -2.08567, 31, 0, '2017-09-13 08:17:25'),
(67, 736, '3', -1.37284, 11, 0, '2017-09-13 08:17:25'),
(69, 2627, '2', 2.6, 8, 1, '2017-09-13 08:17:25'),
(41, 1138, '1', -0.12, 16, 0, '2017-09-13 08:17:26'),
(49, 723, '1', 1.94676, 7, 1, '2017-09-13 08:17:27'),
(38, 1257, '0', 0, 9, -1, '2017-09-13 08:17:27'),
(70, 2845, '4', -2.58532, 12, 0, '2017-09-13 08:17:28'),
(44, 1456, '1', 0.991875, 17, 1, '2017-09-13 08:17:29'),
(50, 1195, '4', 0.1875, 15, 1, '2017-09-13 08:17:29'),
(35, 755, '1', 1.875, 18, 1, '2017-09-13 08:17:30'),
(71, 2605, '2', 1.92, 8, 1, '2017-09-13 08:17:30'),
(53, 755, '1', 0.0625, 47, 1, '2017-09-13 08:17:31'),
(62, 1449, '1', -0.826875, 19, 0, '2017-09-13 08:17:31'),
(51, 744, '4', -1.65, 18, 0, '2017-09-13 08:17:32'),
(69, 2620, '4', 2.7, 6, 1, '2017-09-13 08:17:32'),
(57, 2403, '2', 0.717037, 46, 1, '2017-09-13 08:17:35'),
(36, 369, '2', 0.3675, 13, 1, '2017-09-13 08:17:36'),
(66, 2884, '3', -2.68328, 12, 0, '2017-09-13 08:17:36'),
(49, 738, '3', -1.94118, 12, 0, '2017-09-13 08:17:39'),
(55, 1270, '3', -0.318998, 31, 0, '2017-09-13 08:17:39'),
(58, 2630, '2', 1.40083, 19, 1, '2017-09-13 08:17:39'),
(47, 2630, '2', 1.33333, 20, 1, '2017-09-13 08:17:40'),
(56, 1109, '3', 0.0075, 19, 1, '2017-09-13 08:17:40'),
(46, 2861, '2', 2.59808, 15, 1, '2017-09-13 08:17:40'),
(41, 367, '1', -0.27, 14, 0, '2017-09-13 08:17:40'),
(60, 2413, '3', -1.11153, 36, 0, '2017-09-13 08:17:41'),
(70, 2733, '4', -2.54929, 13, 0, '2017-09-13 08:17:41'),
(67, 725, '3', -0.84083, 16, 0, '2017-09-13 08:17:41'),
(39, 751, '2', 0.613636, 35, 1, '2017-09-13 08:17:42'),
(68, 731, '1', -0.00231481, 35, 0, '2017-09-13 08:17:42'),
(61, 1287, '3', 0.625, 38, 1, '2017-09-13 08:17:43'),
(58, 2627, '2', 2.61333, 4, 1, '2017-09-13 08:17:43'),
(62, 3035, '2', 0.979592, 12, 1, '2017-09-13 08:17:43'),
(40, 3153, '0', -0.00207756, 38, 0, '2017-09-13 08:17:44'),
(31, 1196, '0', -0.00520833, 24, 0, '2017-09-13 08:17:44'),
(66, 2885, '4', 2.79285, 8, 1, '2017-09-13 08:17:44'),
(42, 3423, '0', 0, 41, -1, '2017-09-13 08:17:45'),
(35, 483, '4', -2.02174, 15, 0, '2017-09-13 08:17:45'),
(36, 1115, '1', 0.9075, 9, 1, '2017-09-13 08:17:45'),
(48, 3008, '1', -0.244898, 20, 0, '2017-09-13 08:17:45'),
(46, 2877, '2', 2.84605, 6, 1, '2017-09-13 08:17:46'),
(57, 382, '4', 0.48, 12, 1, '2017-09-13 08:17:47'),
(47, 2626, '3', 2.25333, 8, 1, '2017-09-13 08:17:47'),
(60, 1110, '2', 1.47, 6, 1, '2017-09-13 08:17:47'),
(65, 1203, '0', -0.00333333, 30, 0, '2017-09-13 08:17:49'),
(43, 3430, '2', -0.619835, 24, 0, '2017-09-13 08:17:49'),
(41, 1137, '2', 0.9075, 9, 1, '2017-09-13 08:17:49'),
(64, 1337, '0', -0.046875, 64, 0, '2017-09-13 08:17:50'),
(56, 1116, '4', 0.75, 10, 1, '2017-09-13 08:17:50'),
(52, 2882, '1', 1.64317, 42, 1, '2017-09-13 08:17:51'),
(67, 723, '1', 1.56481, 10, 1, '2017-09-13 08:17:51'),
(38, 1200, '4', 0.231481, 26, 1, '2017-09-13 08:17:52'),
(55, 1174, '3', 0.639053, 14, 1, '2017-09-13 08:17:53'),
(63, 2622, '0', -0.05, 60, 0, '2017-09-13 08:17:54'),
(68, 464, '3', 0.869823, 12, 1, '2017-09-13 08:17:54'),
(58, 2629, '2', -2.45, 11, 0, '2017-09-13 08:17:54'),
(64, 1313, '2', 2.77778, 4, 1, '2017-09-13 08:17:54'),
(36, 379, '3', 0.75, 10, 1, '2017-09-13 08:17:55'),
(62, 1451, '1', 1.33333, 12, 1, '2017-09-13 08:17:56'),
(38, 1265, '0', 0, 4, -1, '2017-09-13 08:17:57'),
(69, 2633, '3', 1.75, 25, 1, '2017-09-13 08:17:57'),
(71, 2603, '1', 0.316875, 27, 1, '2017-09-13 08:17:57'),
(31, 1186, '3', 0.75, 14, 1, '2017-09-13 08:17:58'),
(67, 722, '2', -1.94676, 7, 0, '2017-09-13 08:17:58'),
(60, 1107, '4', 0.6075, 11, 1, '2017-09-13 08:17:59'),
(47, 2632, '1', -1.92, 12, 0, '2017-09-13 08:17:59'),
(41, 1131, '1', 0.6075, 11, 1, '2017-09-13 08:18:00'),
(68, 723, '1', 2.08333, 6, 1, '2017-09-13 08:18:00'),
(48, 1475, '1', -1.27599, 16, 0, '2017-09-13 08:18:00'),
(69, 2619, '3', 2.8, 4, 1, '2017-09-13 08:18:01'),
(33, 1487, '1', 0.0694707, 39, 1, '2017-09-13 08:18:02'),
(50, 1276, '0', -0.00292969, 32, 0, '2017-09-13 08:18:02'),
(40, 3145, '2', 0.75, 19, 1, '2017-09-13 08:18:03'),
(52, 2889, '1', -2.68328, 12, 0, '2017-09-13 08:18:03'),
(44, 1454, '3', -0.00925926, 34, 0, '2017-09-13 08:18:03'),
(64, 1347, '3', 2.65665, 9, 1, '2017-09-13 08:18:03'),
(55, 1217, '3', 0.6075, 11, 1, '2017-09-13 08:18:03'),
(38, 1171, '1', -1.2675, 7, 0, '2017-09-13 08:18:04'),
(37, 1270, '0', -0.00141777, 46, 0, '2017-09-13 08:18:04'),
(45, 1503, '0', -0.00141777, 46, 0, '2017-09-13 08:18:04'),
(57, 383, '4', 0.03, 18, 1, '2017-09-13 08:18:05'),
(61, 1219, '0', -0.136364, 22, 0, '2017-09-13 08:18:06'),
(51, 728, '1', 0.033241, 34, 1, '2017-09-13 08:18:06'),
(68, 502, '2', 2.73913, 4, 1, '2017-09-13 08:18:06'),
(62, 2929, '4', 1.02083, 10, 1, '2017-09-13 08:18:06'),
(65, 1177, '2', 0.0991736, 18, 1, '2017-09-13 08:18:07'),
(56, 1139, '2', 0.0675, 17, 1, '2017-09-13 08:18:07'),
(66, 2862, '4', 2.35584, 23, 1, '2017-09-13 08:18:07'),
(47, 2629, '4', -2.25333, 8, 0, '2017-09-13 08:18:07'),
(70, 2735, '1', 2.05434, 26, 1, '2017-09-13 08:18:07'),
(64, 608, '3', -2.83093, 5, 0, '2017-09-13 08:18:07'),
(53, 744, '1', -0.3, 36, 0, '2017-09-13 08:18:08'),
(39, 757, '3', -1.30435, 26, 0, '2017-09-13 08:18:08'),
(49, 724, '4', -0.00333333, 29, 0, '2017-09-13 08:18:08'),
(67, 726, '2', -1.49481, 10, 0, '2017-09-13 08:18:08'),
(48, 1487, '1', 2.04726, 8, 1, '2017-09-13 08:18:09'),
(60, 1130, '2', 0.75, 10, 1, '2017-09-13 08:18:09'),
(33, 1484, '2', -1.85204, 9, 0, '2017-09-13 08:18:11'),
(52, 2868, '2', 2.76586, 9, 1, '2017-09-13 08:18:12'),
(45, 1507, '3', -2.05141, 9, 0, '2017-09-13 08:18:13'),
(35, 745, '1', -0.975, 27, 0, '2017-09-13 08:18:13'),
(50, 1172, '2', -0.48, 12, 0, '2017-09-13 08:18:14'),
(69, 2729, '2', 2.54929, 13, 1, '2017-09-13 08:18:14'),
(67, 729, '2', 2.08333, 6, 1, '2017-09-13 08:18:15'),
(36, 397, '0', -0.0075, 20, 0, '2017-09-13 08:18:15'),
(31, 1218, '2', -0.0675, 17, 0, '2017-09-13 08:18:15'),
(42, 3437, '3', -0.26188, 31, 0, '2017-09-13 08:18:16'),
(47, 2620, '4', 2.25333, 8, 1, '2017-09-13 08:18:16'),
(38, 1293, '1', -0.630208, 13, 0, '2017-09-13 08:18:16'),
(60, 2431, '3', -2.44175, 9, 0, '2017-09-13 08:18:17'),
(44, 1481, '3', -1.2675, 14, 0, '2017-09-13 08:18:18'),
(58, 2823, '4', -1.02083, 25, 0, '2017-09-13 08:18:19'),
(41, 394, '0', -0.0075, 20, 0, '2017-09-13 08:18:20'),
(71, 2611, '2', -0.6075, 22, 0, '2017-09-13 08:18:20'),
(66, 2897, '1', -2.74383, 12, 0, '2017-09-13 08:18:20'),
(55, 1265, '3', -1.43787, 16, 0, '2017-09-13 08:18:20'),
(70, 2728, '1', -2.54929, 13, 0, '2017-09-13 08:18:20'),
(64, 1360, '4', -2.54929, 13, 0, '2017-09-13 08:18:20'),
(45, 3062, '1', 1.6875, 8, 1, '2017-09-13 08:18:21'),
(36, 376, '1', -1.47, 6, 0, '2017-09-13 08:18:22'),
(62, 1465, '1', 0.55102, 16, 1, '2017-09-13 08:18:22'),
(63, 2616, '1', -1.55, 29, 0, '2017-09-13 08:18:23'),
(52, 2877, '2', 2.71109, 11, 1, '2017-09-13 08:18:23'),
(60, 363, '3', 1.2675, 7, 1, '2017-09-13 08:18:24'),
(66, 2886, '1', 2.87228, 5, 1, '2017-09-13 08:18:24'),
(56, 1112, '1', -0.0675, 17, 0, '2017-09-13 08:18:25'),
(65, 1174, '3', 0.284024, 18, 1, '2017-09-13 08:18:25'),
(51, 719, '3', 0.668981, 19, 1, '2017-09-13 08:18:25'),
(47, 2625, '3', 2.1675, 9, 1, '2017-09-13 08:18:25'),
(57, 377, '0', -0.0075, 20, 0, '2017-09-13 08:18:25'),
(67, 734, '3', -1.08, 12, 0, '2017-09-13 08:18:27'),
(45, 1501, '1', -2.2376, 6, 0, '2017-09-13 08:18:27'),
(42, 3434, '1', 1.6875, 11, 1, '2017-09-13 08:18:27'),
(43, 3422, '2', -0.0557851, 38, 0, '2017-09-13 08:18:27'),
(37, 1170, '0', -0.00520833, 24, 0, '2017-09-13 08:18:28'),
(46, 2870, '3', 1.64317, 42, 1, '2017-09-13 08:18:28'),
(64, 1343, '4', 2.52, 8, 1, '2017-09-13 08:18:29'),
(52, 2901, '4', 2.87619, 6, 1, '2017-09-13 08:18:29'),
(39, 738, '2', 0.438581, 21, 1, '2017-09-13 08:18:29'),
(58, 2845, '4', -2.08333, 10, 0, '2017-09-13 08:18:30'),
(50, 1194, '1', 0.646684, 15, 1, '2017-09-13 08:18:30'),
(62, 1457, '0', 0, 8, -1, '2017-09-13 08:18:30'),
(66, 2901, '4', 2.87619, 6, 1, '2017-09-13 08:18:30'),
(36, 366, '4', 0.9075, 9, 1, '2017-09-13 08:18:31'),
(41, 369, '2', 0.6075, 11, 1, '2017-09-13 08:18:31'),
(71, 2614, '3', -1.47, 12, 0, '2017-09-13 08:18:32'),
(53, 757, '1', -1.43478, 24, 0, '2017-09-13 08:18:32'),
(35, 474, '2', -1.575, 19, 0, '2017-09-13 08:18:32'),
(48, 1484, '1', -0.435374, 26, 0, '2017-09-13 08:18:35'),
(31, 1284, '3', 0, 20, 1, '2017-09-13 08:18:35'),
(70, 2825, '3', 2.47645, 15, 1, '2017-09-13 08:18:36'),
(46, 2883, '3', 2.79285, 8, 1, '2017-09-13 08:18:36'),
(62, 1458, '1', -1.94676, 7, 0, '2017-09-13 08:18:37'),
(57, 1121, '4', 0.48, 12, 1, '2017-09-13 08:18:38'),
(67, 731, '1', -1.22454, 13, 0, '2017-09-13 08:18:40'),
(66, 2890, '2', -2.81118, 9, 0, '2017-09-13 08:18:40'),
(45, 1496, '1', -1.48915, 13, 0, '2017-09-13 08:18:40'),
(69, 2734, '3', 2.05434, 26, 1, '2017-09-13 08:18:40'),
(42, 3422, '3', 1.39463, 14, 1, '2017-09-13 08:18:41'),
(40, 3295, '0', -0.00207756, 38, 0, '2017-09-13 08:18:41'),
(64, 1099, '4', 2.6043, 13, 1, '2017-09-13 08:18:41'),
(60, 374, '0', 0, 17, -1, '2017-09-13 08:18:42'),
(49, 728, '4', -0.0186981, 35, 0, '2017-09-13 08:18:43'),
(56, 385, '0', -0.0075, 20, 0, '2017-09-13 08:18:45'),
(58, 2730, '3', -1.61333, 16, 0, '2017-09-13 08:18:45'),
(33, 1485, '4', 0.359467, 34, 1, '2017-09-13 08:18:45'),
(70, 2816, '4', 2.65665, 10, 1, '2017-09-13 08:18:46'),
(66, 2891, '1', 2.87619, 6, 1, '2017-09-13 08:18:46'),
(47, 2631, '0', 0, 21, -1, '2017-09-13 08:18:46'),
(36, 1136, '4', -0.03, 18, 0, '2017-09-13 08:18:49'),
(71, 2609, '2', 1.08, 16, 1, '2017-09-13 08:18:49'),
(65, 1196, '0', -0.00520833, 24, 0, '2017-09-13 08:18:49'),
(45, 1495, '3', -1.63435, 11, 0, '2017-09-13 08:18:51'),
(41, 384, '0', -0.0075, 20, 0, '2017-09-13 08:18:51'),
(46, 2892, '2', 2.6739, 15, 1, '2017-09-13 08:18:51'),
(53, 732, '4', 0.592593, 20, 1, '2017-09-13 08:18:51'),
(55, 1202, '3', -0.037037, 32, 0, '2017-09-13 08:18:52'),
(68, 750, '0', -0.0652174, 46, 0, '2017-09-13 08:18:53'),
(58, 2825, '3', 2.25333, 8, 1, '2017-09-13 08:18:53'),
(51, 726, '2', -0.0648789, 29, 0, '2017-09-13 08:18:54'),
(50, 1210, '0', -0.00520833, 24, 0, '2017-09-13 08:18:54'),
(48, 3000, '1', -0.130208, 19, 0, '2017-09-13 08:18:54'),
(60, 376, '4', -0.48, 12, 0, '2017-09-13 08:18:54'),
(52, 2900, '3', -2.41818, 25, 0, '2017-09-13 08:18:54'),
(61, 1268, '0', -0.0625, 48, 0, '2017-09-13 08:18:54'),
(47, 2634, '1', -2.1675, 9, 0, '2017-09-13 08:18:55'),
(31, 1189, '3', 0.309949, 19, 1, '2017-09-13 08:18:55'),
(57, 1131, '4', -0.03, 18, 0, '2017-09-13 08:18:56'),
(69, 2823, '3', 2.43962, 16, 1, '2017-09-13 08:18:56'),
(65, 1172, '1', -1.2675, 7, 0, '2017-09-13 08:18:56'),
(70, 2730, '4', 2.62111, 11, 1, '2017-09-13 08:18:57'),
(46, 2905, '1', 2.87619, 6, 1, '2017-09-13 08:18:57'),
(56, 2406, '2', -2.2376, 12, 0, '2017-09-13 08:18:57'),
(71, 2608, '3', 1.80187, 9, 1, '2017-09-13 08:18:58'),
(62, 1467, '3', 1.33333, 20, 1, '2017-09-13 08:18:58'),
(41, 1109, '3', 1.08, 8, 1, '2017-09-13 08:18:59'),
(42, 3429, '2', -1.04752, 18, 0, '2017-09-13 08:18:59'),
(39, 752, '2', -0.318998, 31, 0, '2017-09-13 08:19:00'),
(40, 3140, '1', -0.75, 19, 0, '2017-09-13 08:19:00'),
(36, 370, '4', -0.3675, 13, 0, '2017-09-13 08:19:02'),
(43, 3437, '4', -0.125517, 35, 0, '2017-09-13 08:19:02'),
(66, 2909, '4', 2.64998, 16, 1, '2017-09-13 08:19:02'),
(38, 1268, '1', 0.0117188, 45, 1, '2017-09-13 08:19:02'),
(37, 1263, '2', -0.03, 36, 0, '2017-09-13 08:19:04'),
(46, 2901, '4', 2.8331, 8, 1, '2017-09-13 08:19:05'),
(33, 1476, '3', 1.20821, 19, 1, '2017-09-13 08:19:05'),
(60, 1131, '1', 0.6075, 11, 1, '2017-09-13 08:19:05'),
(45, 1489, '2', -1.33333, 14, 0, '2017-09-13 08:19:05'),
(44, 1477, '2', -0.0504115, 47, 0, '2017-09-13 08:19:05'),
(36, 2400, '3', 2.66694, 4, 1, '2017-09-13 08:19:06'),
(53, 466, '4', -0.853333, 14, 0, '2017-09-13 08:19:06'),
(71, 2607, '0', 0, 10, -1, '2017-09-13 08:19:07'),
(68, 499, '2', -1.81579, 15, 0, '2017-09-13 08:19:08'),
(58, 2819, '3', -1.54083, 17, 0, '2017-09-13 08:19:10'),
(57, 1114, '1', 0.27, 14, 1, '2017-09-13 08:19:10'),
(52, 2902, '4', -2.6739, 15, 0, '2017-09-13 08:19:10'),
(47, 2633, '3', 1.6875, 15, 1, '2017-09-13 08:19:10'),
(65, 1170, '2', 0.520833, 14, 1, '2017-09-13 08:19:10'),
(41, 379, '3', 0.48, 12, 1, '2017-09-13 08:19:11'),
(49, 733, '2', -0.27, 28, 0, '2017-09-13 08:19:11'),
(70, 2823, '3', 2.513, 14, 1, '2017-09-13 08:19:11'),
(66, 2908, '4', -2.789, 10, 0, '2017-09-13 08:19:12'),
(62, 1466, '3', -1.47, 15, 0, '2017-09-13 08:19:13'),
(60, 1109, '4', -1.08, 8, 0, '2017-09-13 08:19:13'),
(40, 3293, '1', 1.29848, 13, 1, '2017-09-13 08:19:13'),
(52, 2886, '1', 2.87228, 5, 1, '2017-09-13 08:19:15'),
(35, 749, '2', 0.25, 44, 1, '2017-09-13 08:19:16'),
(58, 2731, '3', -2.43, 6, 0, '2017-09-13 08:19:16'),
(56, 1122, '0', -0.0075, 20, 0, '2017-09-13 08:19:18'),
(47, 2617, '1', 2.25333, 8, 1, '2017-09-13 08:19:18'),
(60, 1104, '3', 1.47, 6, 1, '2017-09-13 08:19:19'),
(69, 2733, '2', 2.21246, 22, 1, '2017-09-13 08:19:19'),
(45, 1505, '1', 2.04187, 14, 1, '2017-09-13 08:19:20'),
(67, 721, '0', -0.001875, 40, 0, '2017-09-13 08:19:20'),
(58, 2816, '3', -2.52083, 5, 0, '2017-09-13 08:19:21'),
(33, 3002, '3', -0.359467, 17, 0, '2017-09-13 08:19:22'),
(51, 733, '3', 0.1875, 30, 1, '2017-09-13 08:19:23'),
(39, 748, '1', -0.541875, 23, 0, '2017-09-13 08:19:23'),
(62, 1462, '1', 1.57687, 11, 1, '2017-09-13 08:19:23'),
(63, 2625, '0', -0.05, 60, 0, '2017-09-13 08:19:24'),
(37, 1218, '0', -0.0075, 20, 0, '2017-09-13 08:19:24'),
(61, 1199, '2', -0.28125, 29, 0, '2017-09-13 08:19:24'),
(60, 369, '2', 1.6875, 5, 1, '2017-09-13 08:19:24'),
(66, 2906, '1', -2.72082, 13, 0, '2017-09-13 08:19:25'),
(45, 1490, '1', 2.2376, 6, 1, '2017-09-13 08:19:25'),
(55, 1269, '1', 0.292969, 33, 1, '2017-09-13 08:19:25'),
(70, 2866, '1', -2.62679, 14, 0, '2017-09-13 08:19:25'),
(36, 398, '0', -0.0075, 20, 0, '2017-09-13 08:19:26'),
(53, 730, '4', -0.520833, 21, 0, '2017-09-13 08:19:27'),
(56, 1117, '2', 0.9075, 9, 1, '2017-09-13 08:19:27'),
(31, 1199, '0', -0.00292969, 32, 0, '2017-09-13 08:19:27'),
(66, 2899, '2', 2.93908, 3, 1, '2017-09-13 08:19:29'),
(50, 1268, '1', 0.220052, 35, 1, '2017-09-13 08:19:29'),
(69, 2841, '3', 2.65665, 10, 1, '2017-09-13 08:19:29'),
(58, 2735, '3', -2.25333, 8, 0, '2017-09-13 08:19:29'),
(42, 3432, '2', -0.303719, 30, 0, '2017-09-13 08:19:29'),
(67, 720, '3', -1.74723, 9, 0, '2017-09-13 08:19:30'),
(43, 3424, '1', -0.396694, 28, 0, '2017-09-13 08:19:31'),
(41, 388, '0', -0.0075, 20, 0, '2017-09-13 08:19:31'),
(48, 1483, '3', 0, 38, 0, '2017-09-13 08:19:31'),
(38, 1281, '3', 0.00333333, 29, 1, '2017-09-13 08:19:31'),
(49, 466, '2', -0.27, 21, 0, '2017-09-13 08:19:32'),
(61, 1293, '2', 1.875, 9, 1, '2017-09-13 08:19:33'),
(47, 2624, '2', 1.6875, 15, 1, '2017-09-13 08:19:33'),
(45, 1493, '4', 1.92, 8, 1, '2017-09-13 08:19:34'),
(51, 730, '4', -1.56481, 10, 0, '2017-09-13 08:19:34'),
(55, 1293, '1', -1.02083, 10, 0, '2017-09-13 08:19:35'),
(70, 2835, '3', 2.65665, 10, 1, '2017-09-13 08:19:35'),
(60, 2420, '2', -2.35189, 11, 0, '2017-09-13 08:19:36'),
(71, 2629, '4', -0.853333, 28, 0, '2017-09-13 08:19:36'),
(44, 1471, '4', 0.700833, 31, 1, '2017-09-13 08:19:37'),
(57, 2414, '4', -1.4415, 27, 0, '2017-09-13 08:19:37'),
(67, 719, '2', -1.81481, 8, 0, '2017-09-13 08:19:38'),
(35, 478, '1', -1.74, 21, 0, '2017-09-13 08:19:38'),
(43, 3429, '2', -2.12138, 7, 0, '2017-09-13 08:19:38'),
(33, 1486, '2', -1.21488, 16, 0, '2017-09-13 08:19:38'),
(52, 2907, '4', -2.47253, 23, 0, '2017-09-13 08:19:38'),
(37, 1292, '1', 0.75, 15, 1, '2017-09-13 08:19:39'),
(47, 2628, '4', -2.43, 6, 0, '2017-09-13 08:19:39'),
(62, 1453, '2', -1.47, 15, 0, '2017-09-13 08:19:39'),
(58, 2820, '3', -2.08333, 10, 0, '2017-09-13 08:19:40'),
(68, 749, '2', 1.0625, 31, 1, '2017-09-13 08:19:40'),
(39, 745, '1', -0.991875, 17, 0, '2017-09-13 08:19:40'),
(65, 1276, '1', 0.0117188, 30, 1, '2017-09-13 08:19:40'),
(45, 1494, '4', 1.99654, 7, 1, '2017-09-13 08:19:40'),
(61, 1294, '3', 1.875, 9, 1, '2017-09-13 08:19:42'),
(36, 402, '1', -0.12, 16, 0, '2017-09-13 08:19:42'),
(47, 2627, '0', 0, 3, -1, '2017-09-13 08:19:42'),
(50, 1284, '2', -0.27, 14, 0, '2017-09-13 08:19:43'),
(38, 1220, '1', -0.979592, 12, 0, '2017-09-13 08:19:43'),
(66, 2907, '3', 2.6739, 15, 1, '2017-09-13 08:19:44'),
(64, 623, '4', -1.37742, 62, 0, '2017-09-13 08:19:44'),
(53, 489, '4', -0.991875, 17, 0, '2017-09-13 08:19:44'),
(52, 2893, '4', 2.85477, 7, 1, '2017-09-13 08:19:45'),
(68, 746, '1', -2.5, 6, 0, '2017-09-13 08:19:45'),
(69, 2852, '2', 2.40251, 17, 1, '2017-09-13 08:19:46'),
(56, 1114, '3', 0, 20, 0, '2017-09-13 08:19:47'),
(60, 380, '4', -0.48, 12, 0, '2017-09-13 08:19:47'),
(70, 2859, '2', 2.68328, 12, 1, '2017-09-13 08:19:47'),
(40, 3102, '1', 0.0186981, 35, 1, '2017-09-13 08:19:49'),
(71, 2632, '0', 0, 13, -1, '2017-09-13 08:19:49'),
(68, 738, '2', 2.64706, 4, 1, '2017-09-13 08:19:49'),
(67, 728, '2', -1.40443, 12, 0, '2017-09-13 08:19:49'),
(52, 2891, '1', 2.91834, 4, 1, '2017-09-13 08:19:49'),
(58, 2733, '2', 2.00083, 11, 1, '2017-09-13 08:19:50'),
(46, 2909, '4', 1.72305, 45, 1, '2017-09-13 08:19:50'),
(49, 464, '3', 0.217456, 19, 1, '2017-09-13 08:19:50'),
(47, 2621, '3', 2.1675, 9, 1, '2017-09-13 08:19:51'),
(44, 1470, '1', 1.47, 15, 1, '2017-09-13 08:19:51'),
(41, 1116, '0', -0.0075, 20, 0, '2017-09-13 08:19:51'),
(36, 1130, '1', -0.75, 10, 0, '2017-09-13 08:19:52'),
(57, 1122, '4', 0.1875, 15, 1, '2017-09-13 08:19:52'),
(63, 2620, '4', 1.6, 28, 1, '2017-09-13 08:19:52'),
(42, 3453, '4', 0.373702, 22, 1, '2017-09-13 08:19:52'),
(39, 482, '2', -1.43027, 13, 0, '2017-09-13 08:19:53'),
(62, 1486, '2', -1.39463, 14, 0, '2017-09-13 08:19:53'),
(71, 2617, '1', 2.52083, 5, 1, '2017-09-13 08:19:54'),
(66, 2902, '2', 2.76655, 11, 1, '2017-09-13 08:19:54'),
(51, 464, '3', 0.110947, 21, 1, '2017-09-13 08:19:54'),
(36, 1109, '3', 1.92, 4, 1, '2017-09-13 08:19:56'),
(70, 2889, '1', -2.79285, 8, 0, '2017-09-13 08:19:56'),
(65, 1263, '3', -1.08, 16, 0, '2017-09-13 08:19:56'),
(64, 1304, '2', 2.5156, 13, 1, '2017-09-13 08:19:57'),
(41, 1104, '3', 1.47, 6, 1, '2017-09-13 08:19:57'),
(47, 2618, '4', -2.52083, 5, 0, '2017-09-13 08:19:57'),
(68, 747, '2', 2.33333, 8, 1, '2017-09-13 08:19:57'),
(35, 750, '2', 1.56522, 22, 1, '2017-09-13 08:19:59'),
(31, 1202, '2', -0.00925926, 34, 0, '2017-09-13 08:20:01'),
(52, 2897, '1', -2.72082, 13, 0, '2017-09-13 08:20:02'),
(58, 2833, '2', -1.92, 12, 0, '2017-09-13 08:20:02'),
(62, 1481, '2', 1.6875, 10, 1, '2017-09-13 08:20:04'),
(60, 1138, '3', -0.12, 16, 0, '2017-09-13 08:20:04'),
(64, 1359, '2', -2.76188, 7, 0, '2017-09-13 08:20:04'),
(53, 485, '1', 0.886106, 21, 1, '2017-09-13 08:20:06'),
(67, 737, '2', -1.08, 16, 0, '2017-09-13 08:20:06'),
(66, 2896, '2', -2.76655, 11, 0, '2017-09-13 08:20:06'),
(44, 1479, '2', -1.3032, 15, 0, '2017-09-13 08:20:06'),
(56, 383, '0', -0.0075, 20, 0, '2017-09-13 08:20:07'),
(38, 1269, '2', -0.75, 24, 0, '2017-09-13 08:20:08'),
(58, 2852, '3', -2.43, 6, 0, '2017-09-13 08:20:08'),
(69, 2855, '1', -2.38747, 22, 0, '2017-09-13 08:20:08'),
(71, 2630, '1', -2.25, 15, 0, '2017-09-13 08:20:09'),
(65, 1183, '2', 0.502066, 13, 1, '2017-09-13 08:20:09'),
(40, 3123, '1', -0.67313, 20, 0, '2017-09-13 08:20:10'),
(33, 1480, '3', -0.170068, 32, 0, '2017-09-13 08:20:10'),
(61, 1220, '0', -0.107143, 28, 0, '2017-09-13 08:20:10');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(49, 487, '4', 0.75, 20, 1, '2017-09-13 08:20:10'),
(36, 386, '2', -0.1875, 15, 0, '2017-09-13 08:20:10'),
(45, 3054, '0', -0.00333333, 30, 0, '2017-09-13 08:20:11'),
(39, 475, '2', -1.11153, 18, 0, '2017-09-13 08:20:11'),
(57, 381, '1', 0.0075, 19, 1, '2017-09-13 08:20:11'),
(55, 1287, '1', -0.1875, 36, 0, '2017-09-13 08:20:12'),
(35, 751, '2', 2.04545, 14, 1, '2017-09-13 08:20:14'),
(64, 612, '2', -2.65665, 10, 0, '2017-09-13 08:20:14'),
(48, 1473, '2', -0.0768, 42, 0, '2017-09-13 08:20:14'),
(47, 2635, '3', -1.47, 18, 0, '2017-09-13 08:20:15'),
(71, 2627, '4', -2.43, 6, 0, '2017-09-13 08:20:15'),
(46, 2916, '2', 2.48255, 26, 1, '2017-09-13 08:20:16'),
(45, 1492, '2', 2.35692, 5, 1, '2017-09-13 08:20:16'),
(41, 399, '0', -0.0075, 20, 0, '2017-09-13 08:20:17'),
(68, 482, '2', -1.57143, 20, 0, '2017-09-13 08:20:18'),
(63, 2633, '3', 1.7, 26, 1, '2017-09-13 08:20:18'),
(66, 2898, '4', 2.74383, 12, 1, '2017-09-13 08:20:18'),
(65, 1169, '2', 0.880208, 11, 1, '2017-09-13 08:20:20'),
(58, 2835, '2', -1.92, 12, 0, '2017-09-13 08:20:20'),
(64, 1333, '2', 2.7, 6, 1, '2017-09-13 08:20:20'),
(47, 2619, '1', -2.52083, 5, 0, '2017-09-13 08:20:20'),
(51, 724, '4', -0.0533333, 26, 0, '2017-09-13 08:20:20'),
(61, 1284, '3', 1.5, 10, 1, '2017-09-13 08:20:21'),
(43, 3420, '3', 0, 44, 0, '2017-09-13 08:20:22'),
(36, 391, '2', 0.3675, 13, 1, '2017-09-13 08:20:23'),
(42, 3438, '4', -0.0233564, 31, 0, '2017-09-13 08:20:24'),
(41, 1110, '2', 1.2675, 7, 1, '2017-09-13 08:20:24'),
(62, 1471, '4', 1.2675, 21, 1, '2017-09-13 08:20:24'),
(68, 754, '4', 2.42857, 8, 1, '2017-09-13 08:20:26'),
(58, 2732, '2', -2.43, 6, 0, '2017-09-13 08:20:26'),
(67, 490, '3', -0.520833, 21, 0, '2017-09-13 08:20:27'),
(46, 2918, '1', -2.78495, 12, 0, '2017-09-13 08:20:28'),
(70, 2881, '3', -2.04939, 32, 0, '2017-09-13 08:20:28'),
(52, 2898, '4', 2.3903, 26, 1, '2017-09-13 08:20:29'),
(45, 3076, '1', 1.08, 12, 1, '2017-09-13 08:20:29'),
(69, 2730, '4', 2.28943, 20, 1, '2017-09-13 08:20:29'),
(35, 502, '2', 1.95652, 16, 1, '2017-09-13 08:20:30'),
(55, 1257, '0', 0, 18, -1, '2017-09-13 08:20:30'),
(37, 1297, '3', 0.0533333, 52, 1, '2017-09-13 08:20:30'),
(71, 2628, '3', -1.6875, 15, 0, '2017-09-13 08:20:31'),
(50, 1287, '0', -0.00130208, 48, 0, '2017-09-13 08:20:31'),
(41, 2403, '2', 2.49037, 8, 1, '2017-09-13 08:20:32'),
(36, 1112, '1', -1.08, 8, 0, '2017-09-13 08:20:32'),
(67, 718, '1', 1.92, 6, 1, '2017-09-13 08:20:32'),
(62, 1469, '4', -1.80187, 9, 0, '2017-09-13 08:20:34'),
(68, 753, '4', 2.42857, 8, 1, '2017-09-13 08:20:34'),
(57, 2419, '1', -2.00083, 22, 0, '2017-09-13 08:20:34'),
(39, 499, '3', -0.407202, 24, 0, '2017-09-13 08:20:35'),
(66, 2903, '2', 2.62572, 17, 1, '2017-09-13 08:20:35'),
(64, 1123, '4', -2.47645, 16, 0, '2017-09-13 08:20:36'),
(49, 734, '2', 0.0533333, 26, 1, '2017-09-13 08:20:37'),
(71, 2620, '4', 2.34083, 7, 1, '2017-09-13 08:20:37'),
(45, 1502, '4', -1.83743, 10, 0, '2017-09-13 08:20:38'),
(70, 2852, '3', -2.65665, 10, 0, '2017-09-13 08:20:38'),
(46, 2931, '4', 2.80416, 11, 1, '2017-09-13 08:20:39'),
(47, 2616, '4', 1.40083, 19, 1, '2017-09-13 08:20:39'),
(38, 1202, '3', -0.0578704, 31, 0, '2017-09-13 08:20:39'),
(65, 1210, '1', 0.0833333, 20, 1, '2017-09-13 08:20:40'),
(62, 1483, '4', 1.99654, 7, 1, '2017-09-13 08:20:41'),
(44, 1475, '1', -0.17155, 35, 0, '2017-09-13 08:20:42'),
(52, 2894, '4', -2.69752, 14, 0, '2017-09-13 08:20:43'),
(35, 741, '2', 1.97368, 13, 1, '2017-09-13 08:20:43'),
(69, 2871, '2', 2.59808, 15, 1, '2017-09-13 08:20:44'),
(53, 481, '3', -0.0075, 38, 0, '2017-09-13 08:20:45'),
(64, 1332, '3', 2.55, 9, 1, '2017-09-13 08:20:45'),
(43, 3421, '4', 0.683368, 23, 1, '2017-09-13 08:20:46'),
(70, 2882, '1', 2.76188, 7, 1, '2017-09-13 08:20:46'),
(51, 734, '2', 0.0833333, 25, 1, '2017-09-13 08:20:46'),
(39, 483, '4', -1.73677, 11, 0, '2017-09-13 08:20:46'),
(71, 2619, '3', 2.1675, 9, 1, '2017-09-13 08:20:47'),
(46, 2914, '4', -2.86026, 8, 0, '2017-09-13 08:20:47'),
(57, 1116, '4', 0.27, 14, 1, '2017-09-13 08:20:48'),
(66, 2926, '4', -2.76548, 13, 0, '2017-09-13 08:20:48'),
(36, 394, '4', -0.12, 16, 0, '2017-09-13 08:20:48'),
(40, 3294, '4', 0, 38, 1, '2017-09-13 08:20:48'),
(33, 1477, '4', -0.263374, 38, 0, '2017-09-13 08:20:49'),
(48, 1471, '4', 0.520833, 35, 1, '2017-09-13 08:20:49'),
(31, 1268, '0', -0.00130208, 48, 0, '2017-09-13 08:20:50'),
(67, 477, '3', -1.19234, 17, 0, '2017-09-13 08:20:50'),
(41, 1148, '1', -0.3, 18, 0, '2017-09-13 08:20:50'),
(62, 1488, '2', 1.79132, 10, 1, '2017-09-13 08:20:51'),
(40, 3100, '2', -2.40166, 4, 0, '2017-09-13 08:20:52'),
(44, 1476, '1', -1.9571, 10, 0, '2017-09-13 08:20:52'),
(37, 1183, '0', -0.00619835, 22, 0, '2017-09-13 08:20:52'),
(37, 1194, '2', -0.137755, 22, 0, '2017-09-13 08:20:52'),
(71, 2618, '3', 2.43, 6, 1, '2017-09-13 08:20:53'),
(70, 2865, '3', 2.72703, 8, 1, '2017-09-13 08:20:53'),
(61, 1175, '0', -0.09375, 32, 0, '2017-09-13 08:20:53'),
(68, 476, '2', -1.5, 20, 0, '2017-09-13 08:20:54'),
(69, 2868, '2', 2.71109, 11, 1, '2017-09-13 08:20:54'),
(62, 1477, '2', -2.57202, 4, 0, '2017-09-13 08:20:55'),
(64, 1351, '4', 2.65665, 10, 1, '2017-09-13 08:20:55'),
(51, 723, '1', 1.6875, 9, 1, '2017-09-13 08:20:55'),
(39, 744, '4', -1.6875, 10, 0, '2017-09-13 08:20:56'),
(42, 3442, '2', -0.00259516, 33, 0, '2017-09-13 08:20:56'),
(49, 489, '4', -0.75, 20, 0, '2017-09-13 08:20:57'),
(35, 740, '1', 1.91667, 13, 1, '2017-09-13 08:20:57'),
(36, 2408, '3', 2.44175, 9, 1, '2017-09-13 08:20:57'),
(52, 2903, '2', 2.69752, 14, 1, '2017-09-13 08:20:57'),
(41, 1153, '2', 1.95, 7, 1, '2017-09-13 08:20:57'),
(58, 1464, '2', 0.949219, 21, 1, '2017-09-13 08:20:58'),
(53, 472, '3', -1.17188, 15, 0, '2017-09-13 08:20:59'),
(70, 2888, '3', 2.84605, 6, 1, '2017-09-13 08:20:59'),
(57, 1133, '3', 0.48, 12, 1, '2017-09-13 08:21:00'),
(48, 1481, '4', -1.47, 12, 0, '2017-09-13 08:21:01'),
(33, 1481, '4', -1.36688, 13, 0, '2017-09-13 08:21:01'),
(46, 2926, '1', -2.72568, 15, 0, '2017-09-13 08:21:02'),
(60, 2419, '4', -0.800833, 58, 0, '2017-09-13 08:21:03'),
(36, 1104, '3', 1.47, 6, 1, '2017-09-13 08:21:03'),
(35, 760, '2', -2.58532, 8, 0, '2017-09-13 08:21:04'),
(62, 3008, '1', -1.2398, 10, 0, '2017-09-13 08:21:04'),
(64, 1362, '4', -2.67874, 10, 0, '2017-09-13 08:21:05'),
(38, 1287, '2', -0.630208, 26, 0, '2017-09-13 08:21:06'),
(56, 2432, '4', 0.670413, 58, 1, '2017-09-13 08:21:06'),
(47, 2835, '4', -0.9075, 27, 0, '2017-09-13 08:21:06'),
(46, 2898, '1', -2.91834, 4, 0, '2017-09-13 08:21:06'),
(70, 2868, '2', 2.81957, 7, 1, '2017-09-13 08:21:07'),
(49, 494, '3', 1.33333, 10, 1, '2017-09-13 08:21:07'),
(53, 721, '1', 1.92, 8, 1, '2017-09-13 08:21:07'),
(55, 1268, '2', -0.157552, 37, 0, '2017-09-13 08:21:07'),
(33, 3008, '2', 1.85204, 6, 1, '2017-09-13 08:21:07'),
(65, 1194, '0', -0.00382653, 28, 0, '2017-09-13 08:21:08'),
(36, 363, '3', 1.47, 6, 1, '2017-09-13 08:21:08'),
(41, 2439, '1', 2.67, 11, 1, '2017-09-13 08:21:08'),
(66, 2904, '3', 2.49905, 22, 1, '2017-09-13 08:21:11'),
(37, 1291, '0', -0.0075, 20, 0, '2017-09-13 08:21:13'),
(45, 1498, '1', -0.255208, 34, 0, '2017-09-13 08:21:13'),
(40, 3155, '4', -0.600416, 21, 0, '2017-09-13 08:21:13'),
(50, 1269, '1', 0.0638021, 41, 1, '2017-09-13 08:21:13'),
(52, 2904, '2', -2.64998, 16, 0, '2017-09-13 08:21:13'),
(48, 1476, '4', -1.60207, 14, 0, '2017-09-13 08:21:15'),
(60, 386, '2', -0.48, 12, 0, '2017-09-13 08:21:15'),
(47, 2734, '1', -2.1675, 9, 0, '2017-09-13 08:21:15'),
(36, 1117, '2', 1.47, 6, 1, '2017-09-13 08:21:15'),
(35, 499, '1', 2.13158, 11, 1, '2017-09-13 08:21:16'),
(69, 2884, '4', -2.41868, 21, 0, '2017-09-13 08:21:16'),
(62, 1476, '1', -1.77515, 12, 0, '2017-09-13 08:21:16'),
(44, 3000, '0', -0.00520833, 24, 0, '2017-09-13 08:21:17'),
(67, 749, '4', -0.574219, 27, 0, '2017-09-13 08:21:17'),
(68, 752, '3', 1.5, 23, 1, '2017-09-13 08:21:17'),
(70, 2883, '3', 2.71109, 11, 1, '2017-09-13 08:21:17'),
(53, 722, '3', 1.56481, 10, 1, '2017-09-13 08:21:17'),
(63, 2629, '0', -0.05, 60, 0, '2017-09-13 08:21:19'),
(38, 1217, '4', -0.3675, 13, 0, '2017-09-13 08:21:19'),
(56, 1104, '3', 0.3675, 13, 1, '2017-09-13 08:21:19'),
(47, 2730, '0', 0, 5, -1, '2017-09-13 08:21:20'),
(66, 2921, '4', -2.80416, 11, 0, '2017-09-13 08:21:22'),
(51, 481, '3', -0.226875, 29, 0, '2017-09-13 08:21:24'),
(43, 3431, '3', -0.0387397, 39, 0, '2017-09-13 08:21:25'),
(60, 1139, '3', -0.75, 10, 0, '2017-09-13 08:21:25'),
(45, 1506, '2', -1.6428, 13, 0, '2017-09-13 08:21:26'),
(36, 1147, '3', -1.2, 12, 0, '2017-09-13 08:21:27'),
(67, 483, '4', -1.83743, 10, 0, '2017-09-13 08:21:27'),
(70, 2906, '3', -2.789, 10, 0, '2017-09-13 08:21:27'),
(66, 2893, '4', 2.87619, 6, 1, '2017-09-13 08:21:28'),
(58, 1454, '1', -0.0833333, 30, 0, '2017-09-13 08:21:28'),
(64, 1118, '4', -2.13414, 24, 0, '2017-09-13 08:21:28'),
(41, 1154, '0', -0.15, 20, 0, '2017-09-13 08:21:28'),
(55, 1199, '3', 0.292969, 22, 1, '2017-09-13 08:21:29'),
(31, 1208, '2', -0.1452, 39, 0, '2017-09-13 08:21:29'),
(42, 3440, '1', -0.0103806, 32, 0, '2017-09-13 08:21:29'),
(50, 1199, '3', 0.65918, 17, 1, '2017-09-13 08:21:30'),
(65, 1185, '4', 0.137755, 22, 1, '2017-09-13 08:21:30'),
(52, 2890, '3', -2.60112, 18, 0, '2017-09-13 08:21:31'),
(47, 2729, '1', -2.00083, 11, 0, '2017-09-13 08:21:32'),
(69, 2866, '4', 2.53969, 17, 1, '2017-09-13 08:21:33'),
(33, 1470, '1', 0.6348, 27, 1, '2017-09-13 08:21:34'),
(37, 1203, '3', 0.163333, 23, 1, '2017-09-13 08:21:36'),
(58, 3051, '1', -1.43787, 8, 0, '2017-09-13 08:21:36'),
(52, 2899, '2', 2.89738, 5, 1, '2017-09-13 08:21:36'),
(38, 1189, '3', 0.46301, 17, 1, '2017-09-13 08:21:36'),
(70, 2885, '4', 2.79285, 8, 1, '2017-09-13 08:21:36'),
(40, 3290, '2', -0.467452, 23, 0, '2017-09-13 08:21:37'),
(49, 746, '2', -0.416667, 31, 0, '2017-09-13 08:21:38'),
(60, 373, '3', -0.3675, 13, 0, '2017-09-13 08:21:38'),
(39, 749, '2', 0.0325521, 43, 1, '2017-09-13 08:21:39'),
(56, 397, '0', -0.0075, 20, 0, '2017-09-13 08:21:40'),
(65, 1292, '3', -1.33333, 10, 0, '2017-09-13 08:21:40'),
(58, 1462, '1', 2.43, 4, 1, '2017-09-13 08:21:40'),
(36, 365, '2', -0.27, 14, 0, '2017-09-13 08:21:40'),
(44, 2933, '0', -0.00520833, 24, 0, '2017-09-13 08:21:41'),
(45, 1497, '2', 1.14966, 16, 1, '2017-09-13 08:21:42'),
(43, 3432, '3', -1.04752, 18, 0, '2017-09-13 08:21:43'),
(52, 2896, '3', 2.8331, 8, 1, '2017-09-13 08:21:44'),
(50, 1202, '1', 1.12037, 14, 1, '2017-09-13 08:21:44'),
(66, 2928, '2', -2.68469, 17, 0, '2017-09-13 08:21:45'),
(61, 1265, '0', -0.0576923, 52, 0, '2017-09-13 08:21:46'),
(35, 769, '1', 1.33081, 31, 1, '2017-09-13 08:21:46'),
(58, 3044, '3', 1.50521, 7, 1, '2017-09-13 08:21:47'),
(40, 3291, '2', 1.51454, 11, 1, '2017-09-13 08:21:48'),
(67, 2615, '3', -1.57687, 11, 0, '2017-09-13 08:21:48'),
(48, 1486, '4', -0.154959, 34, 0, '2017-09-13 08:21:48'),
(36, 378, '2', -0.9075, 9, 0, '2017-09-13 08:21:50'),
(69, 2885, '4', 2.53969, 17, 1, '2017-09-13 08:21:50'),
(47, 1634, '3', 1.33333, 8, 1, '2017-09-13 08:21:50'),
(71, 2631, '4', -0.1, 58, 0, '2017-09-13 08:21:51'),
(55, 1294, '3', 0.0208333, 22, 1, '2017-09-13 08:21:52'),
(51, 465, '4', -0.00333333, 29, 0, '2017-09-13 08:21:52'),
(45, 1504, '1', 2.29688, 10, 1, '2017-09-13 08:21:52'),
(43, 3435, '4', 1.79132, 10, 1, '2017-09-13 08:21:53'),
(38, 1284, '1', -0.0675, 17, 0, '2017-09-13 08:21:53'),
(33, 1475, '1', -1.11153, 18, 0, '2017-09-13 08:21:53'),
(60, 391, '1', -0.12, 16, 0, '2017-09-13 08:21:54'),
(68, 740, '0', -0.0833333, 36, 0, '2017-09-13 08:21:54'),
(41, 2455, '4', -2.22, 26, 0, '2017-09-13 08:21:54'),
(40, 3112, '1', 1.99654, 7, 1, '2017-09-13 08:21:54'),
(64, 1103, '4', -1.91667, 26, 0, '2017-09-13 08:21:55'),
(37, 1195, '0', -0.0075, 20, 0, '2017-09-13 08:21:56'),
(67, 2604, '1', -1.92, 8, 0, '2017-09-13 08:21:56'),
(39, 753, '4', 1.06293, 17, 1, '2017-09-13 08:21:56'),
(63, 2634, '4', 1.15, 37, 1, '2017-09-13 08:21:56'),
(52, 2895, '4', -2.72082, 13, 0, '2017-09-13 08:21:58'),
(57, 2404, '1', 0.434192, 57, 1, '2017-09-13 08:21:58'),
(66, 2895, '2', 2.72082, 13, 1, '2017-09-13 08:21:58'),
(42, 3466, '1', -0.0648789, 29, 0, '2017-09-13 08:21:58'),
(56, 375, '3', -0.0075, 19, 0, '2017-09-13 08:21:58'),
(44, 3002, '2', -0.284024, 18, 0, '2017-09-13 08:21:59'),
(70, 2890, '3', -2.44558, 24, 0, '2017-09-13 08:22:00'),
(50, 1189, '1', -1.17857, 17, 0, '2017-09-13 08:22:02'),
(47, 1641, '3', 1.10587, 11, 1, '2017-09-13 08:22:02'),
(31, 1175, '0', -0.00292969, 32, 0, '2017-09-13 08:22:02'),
(35, 491, '2', -2.1466, 15, 0, '2017-09-13 08:22:02'),
(71, 2616, '4', 2.45, 11, 1, '2017-09-13 08:22:02'),
(39, 502, '2', 2.15643, 7, 1, '2017-09-13 08:22:03'),
(53, 749, '2', 0.1875, 45, 1, '2017-09-13 08:22:03'),
(61, 1202, '3', -1.58333, 17, 0, '2017-09-13 08:22:04'),
(51, 737, '0', 0, 11, -1, '2017-09-13 08:22:04'),
(64, 1325, '4', -2.46429, 10, 0, '2017-09-13 08:22:05'),
(70, 2870, '3', 2.87228, 5, 1, '2017-09-13 08:22:05'),
(58, 3039, '2', -0.217456, 19, 0, '2017-09-13 08:22:05'),
(66, 2925, '1', 2.86026, 8, 1, '2017-09-13 08:22:06'),
(68, 744, '1', -2.1, 12, 0, '2017-09-13 08:22:06'),
(45, 1499, '1', -1.4518, 14, 0, '2017-09-13 08:22:06'),
(40, 3142, '2', -1.29848, 13, 0, '2017-09-13 08:22:08'),
(71, 2623, '2', 2.65, 7, 1, '2017-09-13 08:22:10'),
(39, 474, '2', -2.04187, 7, 0, '2017-09-13 08:22:10'),
(47, 1632, '4', -1.47, 9, 0, '2017-09-13 08:22:10'),
(57, 365, '1', -0.27, 14, 0, '2017-09-13 08:22:11'),
(50, 1219, '1', -0.892562, 10, 0, '2017-09-13 08:22:11'),
(41, 1147, '3', -0.3, 18, 0, '2017-09-13 08:22:12'),
(53, 753, '4', 2.28571, 10, 1, '2017-09-13 08:22:13'),
(66, 2923, '4', -2.87848, 7, 0, '2017-09-13 08:22:13'),
(38, 1187, '2', 0.421875, 20, 1, '2017-09-13 08:22:13'),
(35, 471, '2', 2.21246, 11, 1, '2017-09-13 08:22:13'),
(49, 472, '3', -0.016875, 37, 0, '2017-09-13 08:22:14'),
(67, 2611, '2', -0.826875, 19, 0, '2017-09-13 08:22:15'),
(37, 1210, '1', 0.0833333, 20, 1, '2017-09-13 08:22:15'),
(45, 2947, '4', -1.47, 9, 0, '2017-09-13 08:22:15'),
(33, 1488, '2', 0.75, 22, 1, '2017-09-13 08:22:16'),
(31, 1217, '1', -0.1875, 15, 0, '2017-09-13 08:22:17'),
(56, 395, '1', 0.03, 18, 1, '2017-09-13 08:22:17'),
(70, 2897, '1', -2.74383, 12, 0, '2017-09-13 08:22:18'),
(47, 1635, '4', 1.76333, 7, 1, '2017-09-13 08:22:18'),
(69, 2879, '0', 0, 27, -1, '2017-09-13 08:22:18'),
(65, 1261, '0', -0.00207756, 38, 0, '2017-09-13 08:22:18'),
(64, 1338, '2', 2.30357, 13, 1, '2017-09-13 08:22:18'),
(52, 2906, '0', 0, 21, -1, '2017-09-13 08:22:19'),
(58, 2929, '4', 0.630208, 13, 1, '2017-09-13 08:22:19'),
(67, 2606, '1', 2.43, 4, 1, '2017-09-13 08:22:19'),
(55, 1208, '1', 0.6348, 27, 1, '2017-09-13 08:22:19'),
(71, 2626, '3', 2.5, 10, 1, '2017-09-13 08:22:20'),
(66, 2918, '4', -2.87848, 7, 0, '2017-09-13 08:22:20'),
(40, 3090, '1', -1.19668, 14, 0, '2017-09-13 08:22:21'),
(64, 1126, '2', 2.8, 4, 1, '2017-09-13 08:22:22'),
(36, 2419, '2', 1.57687, 33, 1, '2017-09-13 08:22:23'),
(44, 1478, '3', -0.48, 24, 0, '2017-09-13 08:22:23'),
(61, 1281, '1', -0.9, 21, 0, '2017-09-13 08:22:24'),
(38, 1296, '1', -0.880208, 11, 0, '2017-09-13 08:22:24'),
(67, 2601, '2', 2.04187, 7, 1, '2017-09-13 08:22:26'),
(65, 1216, '4', 1.33333, 8, 1, '2017-09-13 08:22:26'),
(57, 1139, '0', 0, 15, -1, '2017-09-13 08:22:27'),
(70, 2862, '3', -2.73861, 10, 0, '2017-09-13 08:22:27'),
(47, 1633, '2', 1.13609, 10, 1, '2017-09-13 08:22:27'),
(48, 1474, '4', -0.0153061, 39, 0, '2017-09-13 08:22:27'),
(58, 1465, '4', -1.2398, 10, 0, '2017-09-13 08:22:29'),
(55, 1219, '3', 0.892562, 10, 1, '2017-09-13 08:22:29'),
(64, 1350, '1', 2.72703, 8, 1, '2017-09-13 08:22:30'),
(36, 1145, '1', 1.8, 8, 1, '2017-09-13 08:22:31'),
(67, 2603, '2', -2.29688, 5, 0, '2017-09-13 08:22:32'),
(49, 490, '2', 0.75, 18, 1, '2017-09-13 08:22:32'),
(42, 3450, '0', -0.00259516, 34, 0, '2017-09-13 08:22:32'),
(56, 1105, '2', 0.0675, 17, 1, '2017-09-13 08:22:34'),
(47, 1709, '4', 2.15643, 7, 1, '2017-09-13 08:22:35'),
(70, 2887, '3', 2.81957, 7, 1, '2017-09-13 08:22:35'),
(43, 3426, '4', -0.0139463, 41, 0, '2017-09-13 08:22:35'),
(35, 761, '3', 1.94427, 22, 1, '2017-09-13 08:22:35'),
(68, 757, '1', -1.1087, 29, 0, '2017-09-13 08:22:35'),
(64, 1344, '4', 2.79651, 6, 1, '2017-09-13 08:22:36'),
(50, 1281, '1', -0.0833333, 25, 0, '2017-09-13 08:22:36'),
(37, 1227, '1', -0.0208333, 22, 0, '2017-09-13 08:22:37'),
(40, 3119, '1', -1.09903, 15, 0, '2017-09-13 08:22:37'),
(60, 2432, '2', -1.08, 44, 0, '2017-09-13 08:22:39'),
(52, 2908, '4', -2.55085, 20, 0, '2017-09-13 08:22:39'),
(44, 1486, '4', -1.21488, 16, 0, '2017-09-13 08:22:40'),
(55, 1189, '1', -1.10587, 11, 0, '2017-09-13 08:22:40'),
(67, 2605, '3', -1.80187, 9, 0, '2017-09-13 08:22:41'),
(47, 1657, '2', -1.47, 6, 0, '2017-09-13 08:22:41'),
(70, 2874, '3', -2.81957, 7, 0, '2017-09-13 08:22:41'),
(68, 483, '4', -2.47826, 8, 0, '2017-09-13 08:22:43'),
(41, 2456, '3', -2.26154, 32, 0, '2017-09-13 08:22:44'),
(50, 1293, '1', -1.50521, 7, 0, '2017-09-13 08:22:44'),
(48, 1470, '1', 1.3872, 16, 1, '2017-09-13 08:22:44'),
(51, 498, '0', -0.001875, 40, 0, '2017-09-13 08:22:44'),
(31, 1200, '2', -0.1875, 27, 0, '2017-09-13 08:22:44'),
(58, 1459, '2', 1.08, 16, 1, '2017-09-13 08:22:45'),
(53, 475, '4', 0.847826, 33, 1, '2017-09-13 08:22:46'),
(57, 396, '0', -0.0075, 20, 0, '2017-09-13 08:22:47'),
(43, 3423, '2', -1.48915, 13, 0, '2017-09-13 08:22:47'),
(71, 2633, '3', 1.6, 28, 1, '2017-09-13 08:22:48'),
(66, 2892, '1', -2.33303, 28, 0, '2017-09-13 08:22:48'),
(39, 476, '2', -0.001875, 39, 0, '2017-09-13 08:22:49'),
(55, 1220, '2', 1.38138, 9, 1, '2017-09-13 08:22:49'),
(33, 1482, '2', -0.154959, 34, 0, '2017-09-13 08:22:50'),
(42, 3468, '4', -0.75, 17, 0, '2017-09-13 08:22:50'),
(49, 739, '1', 1.58333, 17, 1, '2017-09-13 08:22:50'),
(69, 2862, '1', -2.04939, 32, 0, '2017-09-13 08:22:50'),
(65, 1227, '0', -0.00520833, 24, 0, '2017-09-13 08:22:50'),
(47, 1637, '1', 1.02083, 10, 1, '2017-09-13 08:22:50'),
(40, 3097, '1', -1.19668, 14, 0, '2017-09-13 08:22:51'),
(56, 1115, '4', -0.0675, 17, 0, '2017-09-13 08:22:52'),
(70, 2861, '2', 2.73861, 10, 1, '2017-09-13 08:22:52'),
(35, 492, '2', 2.07443, 17, 1, '2017-09-13 08:22:52'),
(45, 1524, '2', 0.0991736, 36, 1, '2017-09-13 08:22:52'),
(67, 2610, '3', 1.47, 12, 1, '2017-09-13 08:22:52'),
(60, 401, '3', -0.1875, 15, 0, '2017-09-13 08:22:54'),
(41, 364, '2', 0.6075, 11, 1, '2017-09-13 08:22:55'),
(64, 1348, '3', -2.41127, 19, 0, '2017-09-13 08:22:55'),
(68, 742, '2', -2.025, 13, 0, '2017-09-13 08:22:56'),
(58, 1450, '4', 1.33333, 12, 1, '2017-09-13 08:22:57'),
(39, 743, '2', -1.81481, 8, 0, '2017-09-13 08:22:57'),
(44, 1474, '2', 1.06293, 17, 1, '2017-09-13 08:22:57'),
(63, 2627, '0', -0.05, 60, 0, '2017-09-13 08:22:57'),
(64, 1353, '3', -2.89915, 3, 0, '2017-09-13 08:22:58'),
(47, 1674, '1', 2.24667, 7, 1, '2017-09-13 08:22:58'),
(52, 2909, '4', 2.57617, 19, 1, '2017-09-13 08:22:58'),
(70, 2884, '4', -2.81957, 7, 0, '2017-09-13 08:22:59'),
(65, 1198, '4', 0.9075, 9, 1, '2017-09-13 08:22:59'),
(33, 1468, '2', 1.6875, 10, 1, '2017-09-13 08:23:00'),
(37, 1184, '0', -0.00520833, 24, 0, '2017-09-13 08:23:01'),
(69, 2883, '3', 2.71109, 11, 1, '2017-09-13 08:23:01'),
(67, 2607, '3', -1.80187, 9, 0, '2017-09-13 08:23:02'),
(68, 474, '1', 2.625, 5, 1, '2017-09-13 08:23:02'),
(53, 746, '4', 1.66667, 16, 1, '2017-09-13 08:23:02'),
(57, 386, '1', -0.12, 16, 0, '2017-09-13 08:23:03'),
(71, 2624, '1', -2.25, 15, 0, '2017-09-13 08:23:03'),
(35, 768, '3', 2.47645, 12, 1, '2017-09-13 08:23:04'),
(47, 1711, '2', -2.2376, 6, 0, '2017-09-13 08:23:04'),
(65, 1197, '3', -1.88021, 5, 0, '2017-09-13 08:23:05'),
(60, 1156, '3', -0.48, 12, 0, '2017-09-13 08:23:06'),
(66, 2894, '2', 2.60112, 18, 1, '2017-09-13 08:23:07'),
(40, 3302, '2', -1.27599, 16, 0, '2017-09-13 08:23:07'),
(64, 1111, '3', -2.74448, 9, 0, '2017-09-13 08:23:07'),
(38, 1229, '1', -0.124486, 43, 0, '2017-09-13 08:23:08'),
(45, 1519, '4', -1.61333, 16, 0, '2017-09-13 08:23:09'),
(48, 1478, '1', -0.421875, 25, 0, '2017-09-13 08:23:09'),
(55, 1171, '0', -0.0075, 20, 0, '2017-09-13 08:23:10'),
(41, 1150, '1', -0.75, 15, 0, '2017-09-13 08:23:10'),
(43, 3428, '1', -0.75, 22, 0, '2017-09-13 08:23:10'),
(70, 2855, '1', -2.71109, 11, 0, '2017-09-13 08:23:10'),
(56, 1131, '1', 0, 20, 1, '2017-09-13 08:23:11'),
(65, 1218, '4', 1.08, 8, 1, '2017-09-13 08:23:12'),
(64, 1092, '3', -2.75, 5, 0, '2017-09-13 08:23:12'),
(58, 1449, '1', -1.17188, 15, 0, '2017-09-13 08:23:12'),
(61, 1269, '0', -0.0625, 48, 0, '2017-09-13 08:23:13'),
(66, 2914, '0', 0, 7, -1, '2017-09-13 08:23:13'),
(44, 1484, '2', -1.06293, 17, 0, '2017-09-13 08:23:14'),
(71, 2622, '2', 2.4, 12, 1, '2017-09-13 08:23:15'),
(67, 2609, '2', 1.36688, 13, 1, '2017-09-13 08:23:15'),
(35, 773, '0', 0, 11, -1, '2017-09-13 08:23:16'),
(39, 741, '3', -0.75, 19, 0, '2017-09-13 08:23:16'),
(70, 2877, '1', -2.81957, 7, 0, '2017-09-13 08:23:17'),
(37, 1197, '1', 0.333333, 16, 1, '2017-09-13 08:23:18'),
(50, 1208, '1', 0.3072, 34, 1, '2017-09-13 08:23:18'),
(33, 1499, '1', -1.11153, 18, 0, '2017-09-13 08:23:18'),
(36, 2457, '1', -1.83871, 48, 0, '2017-09-13 08:23:19'),
(51, 486, '0', -0.00231481, 36, 0, '2017-09-13 08:23:20'),
(38, 1295, '3', -0.75, 12, 0, '2017-09-13 08:23:21'),
(45, 1511, '2', -1.92, 12, 0, '2017-09-13 08:23:21'),
(68, 475, '1', -1.76087, 19, 0, '2017-09-13 08:23:21'),
(64, 1329, '3', 2.55, 9, 1, '2017-09-13 08:23:21'),
(52, 2892, '3', -2.47253, 23, 0, '2017-09-13 08:23:21'),
(53, 483, '4', -1.76087, 19, 0, '2017-09-13 08:23:22'),
(70, 2879, '2', 2.81957, 7, 1, '2017-09-13 08:23:24'),
(42, 3448, '0', -0.00259516, 34, 0, '2017-09-13 08:23:24'),
(40, 3496, '4', -0.6075, 11, 0, '2017-09-13 08:23:25'),
(67, 2608, '3', 1.6875, 10, 1, '2017-09-13 08:23:25'),
(36, 1151, '2', 2.1, 6, 1, '2017-09-13 08:23:25'),
(58, 1463, '2', 1.21488, 16, 1, '2017-09-13 08:23:28'),
(38, 1176, '4', 1.53061, 8, 1, '2017-09-13 08:23:28'),
(41, 390, '2', -0.03, 18, 0, '2017-09-13 08:23:28'),
(53, 740, '1', 2.5, 6, 1, '2017-09-13 08:23:28'),
(68, 739, '1', 2.41667, 7, 1, '2017-09-13 08:23:28'),
(69, 2881, '3', -2.22486, 27, 0, '2017-09-13 08:23:28'),
(39, 479, '3', -1.54395, 13, 0, '2017-09-13 08:23:29'),
(60, 2448, '2', 1.6875, 23, 1, '2017-09-13 08:23:29'),
(55, 1191, '3', 0.309949, 19, 1, '2017-09-13 08:23:29'),
(71, 2635, '3', -2.3, 14, 0, '2017-09-13 08:23:29'),
(49, 480, '0', -0.075, 40, 0, '2017-09-13 08:23:30'),
(47, 1643, '0', -0.00443787, 26, 0, '2017-09-13 08:23:31'),
(66, 2924, '4', -2.62572, 17, 0, '2017-09-13 08:23:31'),
(56, 389, '0', -0.0075, 20, 0, '2017-09-13 08:23:32'),
(70, 2864, '2', 2.79285, 8, 1, '2017-09-13 08:23:32'),
(40, 3443, '1', -1.08, 8, 0, '2017-09-13 08:23:33'),
(35, 764, '4', -1.95924, 17, 0, '2017-09-13 08:23:33'),
(31, 1287, '0', -0.00130208, 48, 0, '2017-09-13 08:23:33'),
(64, 1090, '4', -2.35, 13, 0, '2017-09-13 08:23:33'),
(44, 1483, '0', 0, 21, -1, '2017-09-13 08:23:34'),
(65, 1297, '3', 1.08, 24, 1, '2017-09-13 08:23:36'),
(70, 2886, '1', 2.89828, 4, 1, '2017-09-13 08:23:36'),
(66, 2910, '4', 2.89738, 5, 1, '2017-09-13 08:23:36'),
(68, 745, '2', 2.325, 9, 1, '2017-09-13 08:23:36'),
(60, 1142, '4', 1.08, 8, 1, '2017-09-13 08:23:37'),
(51, 721, '1', 0.9075, 18, 1, '2017-09-13 08:23:37'),
(50, 1175, '4', 0.421875, 20, 1, '2017-09-13 08:23:38'),
(71, 2625, '3', 2.5, 10, 1, '2017-09-13 08:23:39'),
(45, 1512, '2', -1.20821, 19, 0, '2017-09-13 08:23:40'),
(41, 374, '0', 0, 12, -1, '2017-09-13 08:23:40'),
(52, 2905, '1', 2.57617, 19, 1, '2017-09-13 08:23:40'),
(67, 2612, '2', -1.17188, 15, 0, '2017-09-13 08:23:40'),
(42, 3439, '4', 0.84083, 16, 1, '2017-09-13 08:23:41'),
(38, 1209, '4', -1.6428, 13, 0, '2017-09-13 08:23:41'),
(44, 3008, '1', -1.6875, 7, 0, '2017-09-13 08:23:42'),
(66, 2934, '4', -2.85477, 7, 0, '2017-09-13 08:23:43'),
(53, 741, '2', 1.73684, 16, 1, '2017-09-13 08:23:44'),
(58, 1456, '2', -1.08, 16, 0, '2017-09-13 08:23:44'),
(45, 1515, '1', 2.29688, 5, 1, '2017-09-13 08:23:45'),
(70, 2871, '2', 2.76586, 9, 1, '2017-09-13 08:23:45'),
(35, 762, '3', 2.36512, 12, 1, '2017-09-13 08:23:45'),
(55, 1282, '2', -0.563333, 17, 0, '2017-09-13 08:23:46'),
(40, 3447, '2', -0.3675, 13, 0, '2017-09-13 08:23:46'),
(49, 744, '4', -1.65, 18, 0, '2017-09-13 08:23:47'),
(36, 2434, '1', 2.37273, 23, 1, '2017-09-13 08:23:47'),
(39, 742, '3', -0.75, 20, 0, '2017-09-13 08:23:49'),
(37, 1276, '0', -0.00292969, 32, 0, '2017-09-13 08:23:50'),
(68, 741, '1', -1.97368, 13, 0, '2017-09-13 08:23:50'),
(64, 1320, '3', 2.04, 16, 1, '2017-09-13 08:23:50'),
(40, 3452, '1', 1.88021, 5, 1, '2017-09-13 08:23:51'),
(66, 2911, '1', 2.81118, 9, 1, '2017-09-13 08:23:52'),
(41, 2404, '2', -2.26843, 12, 0, '2017-09-13 08:23:52'),
(58, 1457, '3', -1.92, 8, 0, '2017-09-13 08:23:52'),
(60, 1149, '1', 0.1875, 15, 1, '2017-09-13 08:23:52'),
(47, 1708, '3', -0.880208, 22, 0, '2017-09-13 08:23:53'),
(67, 2602, '3', 1.36688, 13, 1, '2017-09-13 08:23:53'),
(44, 1482, '2', -1.6875, 11, 0, '2017-09-13 08:23:53'),
(50, 1191, '3', 0.646684, 15, 1, '2017-09-13 08:23:53'),
(43, 3418, '1', 0.00154959, 43, 1, '2017-09-13 08:23:53'),
(69, 2864, '2', 2.29129, 25, 1, '2017-09-13 08:23:54'),
(70, 2904, '3', 2.789, 10, 1, '2017-09-13 08:23:55'),
(64, 995, '3', -2.7, 6, 0, '2017-09-13 08:23:55'),
(65, 1195, '0', -0.0075, 20, 0, '2017-09-13 08:23:56'),
(68, 743, '4', 2.5, 6, 1, '2017-09-13 08:23:56'),
(48, 1485, '4', 0.0177515, 48, 1, '2017-09-13 08:23:57'),
(45, 1520, '3', -1.76881, 13, 0, '2017-09-13 08:23:58'),
(63, 2635, '0', -0.05, 60, 0, '2017-09-13 08:23:58'),
(52, 2926, '4', -2.57617, 19, 0, '2017-09-13 08:23:59'),
(40, 3472, '2', -1.08, 8, 0, '2017-09-13 08:23:59'),
(64, 1340, '3', -2.80645, 4, 0, '2017-09-13 08:24:00'),
(55, 1284, '1', -0.1875, 15, 0, '2017-09-13 08:24:01'),
(58, 3004, '2', -1.20333, 11, 0, '2017-09-13 08:24:03'),
(53, 743, '2', -1.5, 18, 0, '2017-09-13 08:24:03'),
(37, 1173, '2', 0.3675, 13, 1, '2017-09-13 08:24:04'),
(61, 1208, '0', -0.06, 50, 0, '2017-09-13 08:24:04'),
(67, 2614, '4', 1.57687, 11, 1, '2017-09-13 08:24:04'),
(70, 2903, '2', 2.81118, 9, 1, '2017-09-13 08:24:04'),
(46, 13, '0', -0.0075, 20, 0, '2017-09-13 08:24:04'),
(68, 756, '3', -2.5, 8, 0, '2017-09-13 08:24:04'),
(35, 777, '2', 2.05084, 20, 1, '2017-09-13 08:24:05'),
(44, 1480, '3', -1.33333, 14, 0, '2017-09-13 08:24:07'),
(60, 2434, '1', 2.2376, 15, 1, '2017-09-13 08:24:08'),
(66, 2931, '4', 2.64998, 16, 1, '2017-09-13 08:24:08'),
(63, 2617, '1', 2.5, 10, 1, '2017-09-13 08:24:08'),
(38, 1298, '2', -0.853333, 28, 0, '2017-09-13 08:24:09'),
(47, 1696, '4', 1.12965, 17, 1, '2017-09-13 08:24:09'),
(70, 2893, '4', 2.87619, 6, 1, '2017-09-13 08:24:11'),
(49, 743, '1', -1, 24, 0, '2017-09-13 08:24:12'),
(41, 1139, '0', -0.0075, 20, 0, '2017-09-13 08:24:12'),
(42, 3444, '4', 0.00259516, 33, 1, '2017-09-13 08:24:13'),
(65, 1184, '4', 0.1875, 18, 1, '2017-09-13 08:24:14'),
(63, 2632, '3', 2.7, 6, 1, '2017-09-13 08:24:14'),
(48, 1482, '2', -1.04752, 18, 0, '2017-09-13 08:24:14'),
(61, 1295, '1', -1.75, 10, 0, '2017-09-13 08:24:15'),
(67, 2613, '2', -1.57687, 11, 0, '2017-09-13 08:24:15'),
(53, 499, '1', 1.97368, 13, 1, '2017-09-13 08:24:16'),
(55, 1200, '2', -1.02083, 15, 0, '2017-09-13 08:24:16'),
(70, 2899, '2', 2.89738, 5, 1, '2017-09-13 08:24:16'),
(52, 2910, '4', 2.62572, 17, 1, '2017-09-13 08:24:16'),
(66, 2916, '1', -2.86026, 8, 0, '2017-09-13 08:24:17'),
(40, 3445, '1', -0.03, 18, 0, '2017-09-13 08:24:17'),
(51, 757, '3', -0.391304, 40, 0, '2017-09-13 08:24:17'),
(71, 2731, '2', -1.48993, 39, 0, '2017-09-13 08:24:19'),
(60, 2442, '2', -2.1675, 12, 0, '2017-09-13 08:24:19'),
(69, 2887, '4', -2.25832, 26, 0, '2017-09-13 08:24:19'),
(58, 1460, '3', -1.19234, 17, 0, '2017-09-13 08:24:20'),
(44, 1468, '2', 1.36688, 13, 1, '2017-09-13 08:24:20'),
(68, 480, '1', -1.8, 16, 0, '2017-09-13 08:24:20'),
(33, 1505, '1', 0.151875, 62, 1, '2017-09-13 08:24:20'),
(31, 1269, '0', -0.00130208, 48, 0, '2017-09-13 08:24:22'),
(64, 1335, '2', 1.82143, 22, 1, '2017-09-13 08:24:22'),
(47, 1677, '1', -1.59505, 13, 0, '2017-09-13 08:24:22'),
(37, 1186, '3', 0.309949, 19, 1, '2017-09-13 08:24:22'),
(53, 754, '4', 2.5, 7, 1, '2017-09-13 08:24:22'),
(70, 2910, '1', -2.87848, 7, 0, '2017-09-13 08:24:23'),
(66, 2939, '0', 0, 7, -1, '2017-09-13 08:24:24'),
(40, 3489, '2', 1.2675, 7, 1, '2017-09-13 08:24:24'),
(46, 2, '0', -0.0075, 20, 0, '2017-09-13 08:24:24'),
(41, 391, '4', -0.3675, 13, 0, '2017-09-13 08:24:25'),
(45, 1528, '2', -0.511815, 27, 0, '2017-09-13 08:24:25'),
(65, 1293, '1', -0.75, 12, 0, '2017-09-13 08:24:26'),
(52, 2911, '1', 2.789, 10, 1, '2017-09-13 08:24:27'),
(43, 3463, '0', -0.00259516, 34, 0, '2017-09-13 08:24:28'),
(69, 2877, '2', 2.79285, 8, 1, '2017-09-13 08:24:28'),
(51, 753, '4', 2.21429, 11, 1, '2017-09-13 08:24:28'),
(35, 470, '1', -1.62865, 24, 0, '2017-09-13 08:24:29'),
(48, 1480, '3', -1.2398, 15, 0, '2017-09-13 08:24:30'),
(45, 1527, '2', -2.4882, 5, 0, '2017-09-13 08:24:30'),
(47, 1706, '2', -2.1168, 8, 0, '2017-09-13 08:24:30'),
(71, 2621, '4', -2.4, 12, 0, '2017-09-13 08:24:31'),
(63, 2626, '3', 2.1, 18, 1, '2017-09-13 08:24:32'),
(39, 771, '2', -0.00141777, 45, 0, '2017-09-13 08:24:34'),
(66, 2948, '1', -2.74383, 12, 0, '2017-09-13 08:24:35'),
(64, 1341, '2', -2.3, 14, 0, '2017-09-13 08:24:36'),
(40, 3504, '2', -0.869823, 12, 0, '2017-09-13 08:24:36'),
(67, 2622, '2', 1.2675, 21, 1, '2017-09-13 08:24:36'),
(46, 11, '3', -0.3675, 13, 0, '2017-09-13 08:24:38'),
(31, 1293, '1', -0.333333, 16, 0, '2017-09-13 08:24:39'),
(70, 2908, '2', -2.62572, 17, 0, '2017-09-13 08:24:39'),
(68, 751, '2', 1.70455, 19, 1, '2017-09-13 08:24:40'),
(51, 743, '4', 2, 12, 1, '2017-09-13 08:24:40'),
(55, 1175, '4', 0.1875, 24, 1, '2017-09-13 08:24:41'),
(37, 1216, '2', -0.1875, 18, 0, '2017-09-13 08:24:41'),
(50, 1206, '3', -0.12, 48, 0, '2017-09-13 08:24:42'),
(44, 1485, '3', -1.0662, 21, 0, '2017-09-13 08:24:42'),
(65, 2736, '3', -1.92, 6, 0, '2017-09-13 08:24:42'),
(40, 3441, '1', 1.2675, 7, 1, '2017-09-13 08:24:43'),
(68, 479, '1', -2.73913, 4, 0, '2017-09-13 08:24:44'),
(33, 1502, '4', -0.6862, 24, 0, '2017-09-13 08:24:45'),
(43, 3438, '1', 0.58391, 19, 1, '2017-09-13 08:24:46'),
(58, 1451, '1', 0.1875, 27, 1, '2017-09-13 08:24:47'),
(49, 731, '1', 0, 36, 0, '2017-09-13 08:24:47'),
(38, 1206, '1', -0.440833, 37, 0, '2017-09-13 08:24:47'),
(35, 759, '4', -2.15471, 18, 0, '2017-09-13 08:24:48'),
(42, 3470, '4', 0, 34, 0, '2017-09-13 08:24:48'),
(65, 2761, '4', -1.92, 6, 0, '2017-09-13 08:24:48'),
(42, 3446, '0', -0.00259516, 34, 0, '2017-09-13 08:24:48'),
(64, 1096, '2', -2.4, 12, 0, '2017-09-13 08:24:48'),
(45, 1526, '3', 1.2288, 18, 1, '2017-09-13 08:24:48'),
(47, 1695, '2', -1.33333, 18, 0, '2017-09-13 08:24:49'),
(53, 761, '3', 1.66387, 27, 1, '2017-09-13 08:24:50'),
(60, 1169, '4', -0.1875, 18, 0, '2017-09-13 08:24:51'),
(39, 765, '2', 0.991875, 17, 1, '2017-09-13 08:24:51'),
(68, 478, '2', -2.58, 7, 0, '2017-09-13 08:24:51'),
(50, 1188, '1', 1.38138, 9, 1, '2017-09-13 08:24:51'),
(64, 613, '2', 2.7075, 3, 1, '2017-09-13 08:24:51'),
(66, 2952, '2', 2.64998, 16, 1, '2017-09-13 08:24:51'),
(33, 1496, '0', 0, 7, -1, '2017-09-13 08:24:52'),
(40, 3479, '1', 0.75, 10, 1, '2017-09-13 08:24:53'),
(70, 2894, '1', -2.69752, 14, 0, '2017-09-13 08:24:54'),
(63, 2825, '3', 2.25111, 21, 1, '2017-09-13 08:24:54'),
(43, 3440, '2', 1.75433, 8, 1, '2017-09-13 08:24:55'),
(69, 2906, '0', 0, 27, -1, '2017-09-13 08:24:56'),
(44, 1469, '2', 1.2675, 14, 1, '2017-09-13 08:24:56'),
(67, 2625, '2', -1.40083, 19, 0, '2017-09-13 08:24:56'),
(66, 2942, '0', 0, 6, -1, '2017-09-13 08:24:58'),
(61, 1204, '4', 0.3125, 43, 1, '2017-09-13 08:24:58'),
(46, 16, '0', -0.0075, 20, 0, '2017-09-13 08:24:58'),
(52, 2916, '2', 2.24295, 31, 1, '2017-09-13 08:24:58'),
(50, 1176, '1', -1.6875, 7, 0, '2017-09-13 08:24:59'),
(64, 1307, '2', 2.64706, 8, 1, '2017-09-13 08:24:59'),
(57, 2427, '3', -0.00520833, 115, 0, '2017-09-13 08:24:59'),
(68, 724, '1', 1.47, 9, 1, '2017-09-13 08:24:59'),
(58, 1461, '4', -1.4518, 14, 0, '2017-09-13 08:25:01'),
(71, 2746, '2', 0.403333, 19, 1, '2017-09-13 08:25:01'),
(41, 2411, '1', -1.28529, 38, 0, '2017-09-13 08:25:03'),
(47, 1693, '3', -1.50521, 14, 0, '2017-09-13 08:25:03'),
(35, 767, '2', -2.28943, 16, 0, '2017-09-13 08:25:04'),
(65, 2759, '2', 0.653333, 16, 1, '2017-09-13 08:25:04'),
(70, 2902, '2', 2.789, 10, 1, '2017-09-13 08:25:04'),
(33, 1494, '4', 1.40443, 12, 1, '2017-09-13 08:25:04'),
(55, 1281, '1', -0.12, 24, 0, '2017-09-13 08:25:05'),
(67, 2621, '2', -2.1675, 9, 0, '2017-09-13 08:25:05'),
(37, 1196, '0', -0.00520833, 24, 0, '2017-09-13 08:25:05'),
(56, 2419, '2', 0.163333, 92, 1, '2017-09-13 08:25:05'),
(57, 363, '3', 1.2675, 7, 1, '2017-09-13 08:25:06'),
(64, 1321, '3', 2.67188, 7, 1, '2017-09-13 08:25:06'),
(60, 1172, '1', -0.1875, 15, 0, '2017-09-13 08:25:06'),
(46, 9, '2', 0.9075, 9, 1, '2017-09-13 08:25:07'),
(52, 2928, '1', -2.81118, 9, 0, '2017-09-13 08:25:07'),
(31, 1191, '0', -0.00382653, 28, 0, '2017-09-13 08:25:07'),
(38, 1250, '3', -1.2675, 21, 0, '2017-09-13 08:25:08'),
(40, 3449, '0', 0, 16, -1, '2017-09-13 08:25:09'),
(71, 2742, '4', 1.61333, 8, 1, '2017-09-13 08:25:09'),
(65, 2737, '1', -2.08333, 5, 0, '2017-09-13 08:25:09'),
(55, 1275, '2', -2.47016, 5, 0, '2017-09-13 08:25:10'),
(66, 2950, '2', 2.72082, 13, 1, '2017-09-13 08:25:11'),
(63, 2816, '4', 2.40251, 17, 1, '2017-09-13 08:25:11'),
(43, 3466, '1', -0.84083, 16, 0, '2017-09-13 08:25:11'),
(42, 3462, '2', -0.314014, 23, 0, '2017-09-13 08:25:11'),
(47, 1672, '2', 1.98047, 9, 1, '2017-09-13 08:25:12'),
(55, 1286, '1', -2.7075, 3, 0, '2017-09-13 08:25:12'),
(70, 2901, '4', 2.81118, 9, 1, '2017-09-13 08:25:13'),
(48, 1479, '3', 0, 44, 1, '2017-09-13 08:25:13'),
(65, 2743, '2', -2.25333, 4, 0, '2017-09-13 08:25:14'),
(41, 2406, '1', -2.2376, 12, 0, '2017-09-13 08:25:15'),
(45, 1510, '4', -0.75, 26, 0, '2017-09-13 08:25:15'),
(71, 2741, '1', -1.92, 6, 0, '2017-09-13 08:25:15'),
(67, 2626, '3', 2.08333, 10, 1, '2017-09-13 08:25:15'),
(69, 2890, '4', 2.55085, 20, 1, '2017-09-13 08:25:16'),
(51, 755, '1', 0.8125, 35, 1, '2017-09-13 08:25:16'),
(55, 1264, '3', -2.73347, 3, 0, '2017-09-13 08:25:16'),
(39, 488, '3', 0.280093, 25, 1, '2017-09-13 08:25:16'),
(64, 1322, '3', 2.4375, 12, 1, '2017-09-13 08:25:18'),
(45, 1508, '4', -2.63672, 3, 0, '2017-09-13 08:25:18'),
(53, 758, '4', 1.23197, 28, 1, '2017-09-13 08:25:18'),
(56, 1107, '4', 0.3675, 13, 1, '2017-09-13 08:25:18'),
(60, 1183, '2', 0.619835, 12, 1, '2017-09-13 08:25:18'),
(66, 2937, '4', -2.86026, 8, 0, '2017-09-13 08:25:19'),
(44, 1473, '4', -0.8748, 23, 0, '2017-09-13 08:25:19'),
(48, 1469, '3', -2.1675, 6, 0, '2017-09-13 08:25:20'),
(40, 3465, '4', -0.75, 11, 0, '2017-09-13 08:25:21'),
(52, 2934, '4', -2.69752, 14, 0, '2017-09-13 08:25:21'),
(33, 1506, '2', -1.3068, 17, 0, '2017-09-13 08:25:21'),
(55, 1187, '1', -2.13574, 5, 0, '2017-09-13 08:25:21'),
(61, 1299, '3', 1.90909, 24, 1, '2017-09-13 08:25:22'),
(71, 2743, '4', 1.76333, 7, 1, '2017-09-13 08:25:22'),
(55, 1176, '2', -2.58673, 2, 0, '2017-09-13 08:25:23'),
(65, 2738, '3', -1.33333, 10, 0, '2017-09-13 08:25:23'),
(47, 1698, '4', -1.86501, 11, 0, '2017-09-13 08:25:23'),
(66, 2955, '3', -2.89738, 5, 0, '2017-09-13 08:25:24'),
(44, 1491, '1', -2.32823, 5, 0, '2017-09-13 08:25:24'),
(37, 1172, '0', -0.0075, 20, 0, '2017-09-13 08:25:25'),
(46, 5, '3', 0.03, 18, 1, '2017-09-13 08:25:25'),
(57, 398, '0', -0.0075, 20, 0, '2017-09-13 08:25:26'),
(49, 750, '1', -0.0694707, 39, 0, '2017-09-13 08:25:27'),
(67, 2624, '3', -1.92, 12, 0, '2017-09-13 08:25:27'),
(58, 1467, '3', 0.963333, 26, 1, '2017-09-13 08:25:27'),
(35, 772, '3', 1.94202, 23, 1, '2017-09-13 08:25:27'),
(52, 2918, '2', -2.87619, 6, 0, '2017-09-13 08:25:27'),
(38, 1264, '2', -1.4573, 20, 0, '2017-09-13 08:25:28'),
(40, 3459, '2', 1.08, 8, 1, '2017-09-13 08:25:29'),
(64, 1323, '1', -2.4375, 12, 0, '2017-09-13 08:25:30'),
(69, 2901, '4', 2.6739, 15, 1, '2017-09-13 08:25:31'),
(65, 2752, '2', -1.61333, 8, 0, '2017-09-13 08:25:31'),
(48, 1491, '1', -1.53061, 12, 0, '2017-09-13 08:25:32'),
(53, 484, '1', 2.30599, 15, 1, '2017-09-13 08:25:33'),
(31, 1282, '1', -0.0533333, 26, 0, '2017-09-13 08:25:34'),
(49, 499, '1', 1.99654, 7, 1, '2017-09-13 08:25:34'),
(40, 3454, '2', -1.47, 6, 0, '2017-09-13 08:25:34'),
(70, 2914, '1', 2.59872, 21, 1, '2017-09-13 08:25:34'),
(39, 776, '3', 1.11153, 18, 1, '2017-09-13 08:25:34'),
(68, 477, '3', -0.717391, 35, 0, '2017-09-13 08:25:35'),
(67, 2633, '3', 2.25333, 8, 1, '2017-09-13 08:25:35'),
(66, 2945, '4', 2.76655, 11, 1, '2017-09-13 08:25:35'),
(71, 2747, '1', -0.963333, 13, 0, '2017-09-13 08:25:36'),
(64, 1113, '1', 2.63636, 8, 1, '2017-09-13 08:25:38'),
(35, 776, '4', -2.45246, 12, 0, '2017-09-13 08:25:39'),
(43, 3457, '2', -0.0934256, 28, 0, '2017-09-13 08:25:39'),
(71, 2753, '2', 2.25333, 4, 1, '2017-09-13 08:25:39'),
(57, 370, '1', -0.3675, 13, 0, '2017-09-13 08:25:40'),
(58, 1452, '2', 1.17188, 15, 1, '2017-09-13 08:25:41'),
(44, 1487, '2', -1.11153, 18, 0, '2017-09-13 08:25:42'),
(36, 2435, '4', -0.369231, 114, 0, '2017-09-13 08:25:42'),
(48, 1488, '1', -1.79132, 10, 0, '2017-09-13 08:25:42'),
(70, 2924, '1', -2.8418, 9, 0, '2017-09-13 08:25:43'),
(38, 1275, '4', 1.64609, 14, 1, '2017-09-13 08:25:43'),
(50, 1299, '3', 0.303719, 45, 1, '2017-09-13 08:25:43'),
(55, 1295, '4', 0.046875, 21, 1, '2017-09-13 08:25:44'),
(66, 2957, '1', -2.8331, 8, 0, '2017-09-13 08:25:44'),
(40, 3505, '3', -1.13609, 10, 0, '2017-09-13 08:25:44'),
(65, 614, '3', 2.37037, 6, 1, '2017-09-13 08:25:44'),
(46, 17, '1', 0, 20, 1, '2017-09-13 08:25:45'),
(42, 3463, '0', -0.00259516, 34, 0, '2017-09-13 08:25:46'),
(52, 2925, '1', 2.57617, 19, 1, '2017-09-13 08:25:46'),
(61, 1206, '4', 1.8, 24, 1, '2017-09-13 08:25:47'),
(64, 1339, '2', 2.5, 10, 1, '2017-09-13 08:25:48'),
(70, 2905, '1', 2.91834, 4, 1, '2017-09-13 08:25:48'),
(57, 1117, '2', 0.9075, 9, 1, '2017-09-13 08:25:48'),
(66, 2940, '1', -2.89738, 5, 0, '2017-09-13 08:25:48'),
(50, 1295, '3', -1.50521, 7, 0, '2017-09-13 08:25:51'),
(40, 3499, '4', 1.47, 6, 1, '2017-09-13 08:25:51'),
(43, 3453, '1', -1.25606, 12, 0, '2017-09-13 08:25:51'),
(38, 1286, '4', 2.25333, 8, 1, '2017-09-13 08:25:51'),
(53, 491, '1', -2.02028, 17, 0, '2017-09-13 08:25:51'),
(68, 732, '3', -0.925926, 16, 0, '2017-09-13 08:25:51'),
(47, 1662, '0', -0.00382653, 28, 0, '2017-09-13 08:25:51'),
(67, 2629, '2', -1.61333, 16, 0, '2017-09-13 08:25:52'),
(65, 597, '3', -2.27263, 7, 0, '2017-09-13 08:25:52'),
(37, 1185, '0', -0.00382653, 28, 0, '2017-09-13 08:25:53'),
(60, 1261, '0', 0, 36, -1, '2017-09-13 08:25:54'),
(33, 1507, '1', 0.400518, 33, 1, '2017-09-13 08:25:54'),
(71, 2758, '4', 0.653333, 16, 1, '2017-09-13 08:25:55'),
(55, 1296, '1', -0.75, 12, 0, '2017-09-13 08:25:56'),
(65, 1308, '3', 2.43, 6, 1, '2017-09-13 08:25:57'),
(44, 1472, '1', -1.17188, 15, 0, '2017-09-13 08:25:57'),
(47, 1666, '3', -2.2376, 6, 0, '2017-09-13 08:25:57'),
(46, 4, '2', -0.3675, 13, 0, '2017-09-13 08:25:57'),
(69, 2892, '2', 2.36193, 27, 1, '2017-09-13 08:25:58'),
(52, 2923, '1', -2.74383, 12, 0, '2017-09-13 08:25:58'),
(66, 2959, '1', -2.789, 10, 0, '2017-09-13 08:25:59'),
(70, 2926, '3', 2.80416, 11, 1, '2017-09-13 08:25:59'),
(71, 2759, '2', 2.43, 3, 1, '2017-09-13 08:25:59'),
(55, 171, '3', -2.77922, 3, 0, '2017-09-13 08:26:00'),
(67, 2628, '4', -2.1675, 9, 0, '2017-09-13 08:26:00'),
(51, 479, '0', -0.0652174, 46, 0, '2017-09-13 08:26:02'),
(42, 3458, '2', -0.84083, 16, 0, '2017-09-13 08:26:02'),
(58, 1455, '2', -0.676875, 21, 0, '2017-09-13 08:26:03'),
(64, 1366, '4', 2.47645, 15, 1, '2017-09-13 08:26:03'),
(40, 3469, '2', 0.3675, 13, 1, '2017-09-13 08:26:04'),
(68, 726, '1', 1.03806, 14, 1, '2017-09-13 08:26:05'),
(48, 1472, '4', -0.48, 24, 0, '2017-09-13 08:26:06'),
(67, 2619, '3', 2.43, 6, 1, '2017-09-13 08:26:06'),
(57, 2400, '3', 1.65551, 18, 1, '2017-09-13 08:26:07'),
(41, 2431, '2', -0.567108, 52, 0, '2017-09-13 08:26:07'),
(66, 2966, '2', -2.81118, 9, 0, '2017-09-13 08:26:08'),
(65, 615, '1', -2.00083, 11, 0, '2017-09-13 08:26:08'),
(38, 1283, '4', 0.255208, 17, 1, '2017-09-13 08:26:08'),
(64, 1352, '3', 2.76188, 7, 1, '2017-09-13 08:26:10'),
(69, 2905, '1', 2.74383, 12, 1, '2017-09-13 08:26:10'),
(63, 2728, '0', -0.195743, 60, 0, '2017-09-13 08:26:12'),
(50, 1289, '1', -0.6075, 22, 0, '2017-09-13 08:26:13'),
(70, 2923, '1', -2.74572, 14, 0, '2017-09-13 08:26:13'),
(53, 770, '1', -1.99347, 22, 0, '2017-09-13 08:26:13'),
(43, 3460, '1', -0.373702, 22, 0, '2017-09-13 08:26:13'),
(46, 19, '3', -0.12, 16, 0, '2017-09-13 08:26:13'),
(65, 1301, '3', 2.37964, 7, 1, '2017-09-13 08:26:15'),
(35, 774, '2', -1.12345, 37, 0, '2017-09-13 08:26:17'),
(66, 2877, '2', 2.73861, 10, 1, '2017-09-13 08:26:17'),
(40, 3506, '4', -0.860969, 13, 0, '2017-09-13 08:26:17'),
(52, 2924, '3', -2.60112, 18, 0, '2017-09-13 08:26:17'),
(61, 1275, '4', 1.27778, 31, 1, '2017-09-13 08:26:18'),
(50, 1283, '1', -1.88021, 5, 0, '2017-09-13 08:26:18'),
(44, 1488, '2', 0.819731, 21, 1, '2017-09-13 08:26:18'),
(41, 2410, '2', 2.26573, 11, 1, '2017-09-13 08:26:18'),
(60, 1170, '2', 0.00520833, 23, 1, '2017-09-13 08:26:19'),
(64, 1367, '3', 2.74448, 9, 1, '2017-09-13 08:26:19'),
(37, 1174, '0', -0.00443787, 26, 0, '2017-09-13 08:26:19'),
(47, 1668, '2', -0.6075, 22, 0, '2017-09-13 08:26:20'),
(49, 475, '0', -0.0652174, 46, 0, '2017-09-13 08:26:20'),
(65, 607, '1', -2.4882, 5, 0, '2017-09-13 08:26:20'),
(70, 2925, '3', -2.86026, 8, 0, '2017-09-13 08:26:21'),
(67, 2630, '3', -1.6875, 15, 0, '2017-09-13 08:26:22'),
(31, 1257, '0', -0.00130208, 48, 0, '2017-09-13 08:26:22'),
(39, 770, '0', -0.00130208, 48, 0, '2017-09-13 08:26:22'),
(68, 509, '2', -0.835648, 17, 0, '2017-09-13 08:26:23'),
(66, 2977, '2', 2.89738, 5, 1, '2017-09-13 08:26:23'),
(51, 483, '1', -1.56522, 22, 0, '2017-09-13 08:26:24'),
(64, 1346, '4', 2.80944, 6, 1, '2017-09-13 08:26:25'),
(57, 379, '3', 0.0075, 19, 1, '2017-09-13 08:26:26'),
(70, 2898, '3', -2.87619, 6, 0, '2017-09-13 08:26:27'),
(64, 1355, '4', -2.86514, 4, 0, '2017-09-13 08:26:29'),
(71, 2751, '0', -0.00333333, 30, 0, '2017-09-13 08:26:29'),
(58, 1453, '2', -0.5292, 29, 0, '2017-09-13 08:26:32'),
(70, 2895, '2', 2.89738, 5, 1, '2017-09-13 08:26:32'),
(52, 2871, '1', -2.56905, 16, 0, '2017-09-13 08:26:32'),
(36, 2444, '1', -1.47, 51, 0, '2017-09-13 08:26:33'),
(43, 3450, '2', 0.58391, 19, 1, '2017-09-13 08:26:33'),
(46, 7, '0', -0.0075, 20, 0, '2017-09-13 08:26:33'),
(35, 488, '3', 1.95924, 17, 1, '2017-09-13 08:26:33'),
(60, 1197, '3', -0.333333, 16, 0, '2017-09-13 08:26:34'),
(48, 1477, '4', -0.643004, 29, 0, '2017-09-13 08:26:35'),
(49, 756, '2', 2, 16, 1, '2017-09-13 08:26:36'),
(50, 1204, '4', 1.17188, 18, 1, '2017-09-13 08:26:37'),
(42, 3457, '0', -0.00259516, 34, 0, '2017-09-13 08:26:37'),
(67, 2634, '3', -1.6875, 15, 0, '2017-09-13 08:26:37'),
(71, 2744, '3', -1.33333, 10, 0, '2017-09-13 08:26:39'),
(44, 1493, '1', -0.75, 20, 0, '2017-09-13 08:26:39'),
(66, 2973, '2', -2.64998, 16, 0, '2017-09-13 08:26:39'),
(46, 3, '3', 1.47, 6, 1, '2017-09-13 08:26:39'),
(41, 2429, '3', -2.13122, 22, 0, '2017-09-13 08:26:40'),
(53, 764, '2', 1.19055, 27, 1, '2017-09-13 08:26:41'),
(31, 1171, '2', -0.03, 18, 0, '2017-09-13 08:26:41'),
(47, 1661, '3', 0.110947, 21, 1, '2017-09-13 08:26:41'),
(40, 3475, '0', -0.00520833, 24, 0, '2017-09-13 08:26:42'),
(33, 1500, '3', -0.0399408, 46, 0, '2017-09-13 08:26:42'),
(55, 1454, '2', 1.02083, 15, 1, '2017-09-13 08:26:42'),
(41, 365, '1', -2.1675, 3, 0, '2017-09-13 08:26:43'),
(68, 737, '4', 0.676875, 21, 1, '2017-09-13 08:26:43'),
(64, 1098, '4', -2.47645, 15, 0, '2017-09-13 08:26:44'),
(69, 2924, '2', 2.27019, 34, 1, '2017-09-13 08:26:44'),
(65, 1089, '4', -1.08, 24, 0, '2017-09-13 08:26:44'),
(36, 2445, '1', -2.72308, 12, 0, '2017-09-13 08:26:45'),
(66, 2971, '3', -2.87619, 6, 0, '2017-09-13 08:26:45'),
(60, 1198, '2', -0.48, 12, 0, '2017-09-13 08:26:46'),
(40, 3484, '2', 1.6875, 5, 1, '2017-09-13 08:26:46'),
(46, 10, '1', 1.2675, 7, 1, '2017-09-13 08:26:47'),
(71, 2749, '4', 1.61333, 8, 1, '2017-09-13 08:26:47'),
(37, 1287, '1', -0.470052, 29, 0, '2017-09-13 08:26:48'),
(48, 3002, '1', 0.639053, 14, 1, '2017-09-13 08:26:49'),
(66, 2855, '1', -2.87228, 5, 0, '2017-09-13 08:26:49'),
(40, 3509, '3', 2.1675, 3, 1, '2017-09-13 08:26:50'),
(55, 3004, '3', 1.61333, 8, 1, '2017-09-13 08:26:51'),
(43, 3451, '4', -0.66436, 18, 0, '2017-09-13 08:26:51'),
(70, 2892, '4', -2.57617, 19, 0, '2017-09-13 08:26:51'),
(35, 770, '2', 2.09443, 20, 1, '2017-09-13 08:26:54'),
(42, 3451, '2', -0.66436, 18, 0, '2017-09-13 08:26:54'),
(39, 470, '2', -0.091875, 33, 0, '2017-09-13 08:26:55'),
(69, 2910, '1', -2.76548, 13, 0, '2017-09-13 08:26:58'),
(40, 3464, '2', 1.17188, 9, 1, '2017-09-13 08:26:58'),
(44, 1498, '2', -1.09505, 19, 0, '2017-09-13 08:26:58'),
(58, 1466, '2', 0.6348, 27, 1, '2017-09-13 08:26:59'),
(47, 1663, '2', -0.403333, 19, 0, '2017-09-13 08:26:59'),
(41, 380, '4', -0.0675, 17, 0, '2017-09-13 08:27:00'),
(31, 1281, '1', -0.403333, 19, 0, '2017-09-13 08:27:00'),
(70, 2896, '3', 2.81118, 9, 1, '2017-09-13 08:27:00'),
(52, 2855, '1', -2.22486, 27, 0, '2017-09-13 08:27:00'),
(66, 2864, '1', -2.71109, 11, 0, '2017-09-13 08:27:01'),
(64, 1095, '2', -2.36512, 18, 0, '2017-09-13 08:27:01'),
(67, 2620, '4', 0.9075, 27, 1, '2017-09-13 08:27:04'),
(36, 1154, '0', -0.15, 20, 0, '2017-09-13 08:27:05'),
(40, 3502, '1', -1.50521, 7, 0, '2017-09-13 08:27:05'),
(41, 368, '3', 1.47, 6, 1, '2017-09-13 08:27:06'),
(65, 1318, '3', -1.10587, 22, 0, '2017-09-13 08:27:06'),
(46, 8, '0', -0.0075, 20, 0, '2017-09-13 08:27:07'),
(35, 766, '2', -2.34362, 13, 0, '2017-09-13 08:27:07'),
(55, 1450, '4', 0.835648, 17, 1, '2017-09-13 08:27:07'),
(37, 1282, '3', 0.333333, 20, 1, '2017-09-13 08:27:08'),
(53, 768, '3', 1.67358, 28, 1, '2017-09-13 08:27:08'),
(33, 1495, '2', 0.333333, 28, 1, '2017-09-13 08:27:09'),
(47, 1714, '3', 1.74723, 9, 1, '2017-09-13 08:27:10'),
(56, 2427, '1', -0.0208333, 110, 0, '2017-09-13 08:27:10'),
(67, 2618, '3', 2.43, 6, 1, '2017-09-13 08:27:10'),
(52, 2883, '3', 2.73861, 10, 1, '2017-09-13 08:27:10'),
(40, 3494, '2', 1.88021, 5, 1, '2017-09-13 08:27:11'),
(58, 3035, '2', 0.979592, 12, 1, '2017-09-13 08:27:11'),
(51, 478, '2', -0.18, 47, 0, '2017-09-13 08:27:11'),
(42, 3456, '3', 0.75, 17, 1, '2017-09-13 08:27:11'),
(60, 1297, '3', 1.02083, 25, 1, '2017-09-13 08:27:12'),
(64, 610, '4', 2.63128, 10, 1, '2017-09-13 08:27:12'),
(68, 720, '4', 0.207756, 28, 1, '2017-09-13 08:27:12'),
(63, 2731, '0', -0.195743, 60, 0, '2017-09-13 08:27:13'),
(71, 2739, '1', 0.0533333, 26, 1, '2017-09-13 08:27:13'),
(66, 2888, '1', -2.65518, 13, 0, '2017-09-13 08:27:14'),
(65, 403, '1', -2.25333, 8, 0, '2017-09-13 08:27:14'),
(58, 1458, '2', -2.37037, 4, 0, '2017-09-13 08:27:15'),
(36, 382, '4', 0.6075, 11, 1, '2017-09-13 08:27:15'),
(39, 762, '2', -0.75, 20, 0, '2017-09-13 08:27:15'),
(44, 1495, '3', -0.979592, 18, 0, '2017-09-13 08:27:16'),
(67, 2627, '2', 2.34083, 7, 1, '2017-09-13 08:27:17'),
(69, 2925, '1', 2.62074, 20, 1, '2017-09-13 08:27:18'),
(46, 1, '1', -0.48, 12, 0, '2017-09-13 08:27:19'),
(31, 1219, '2', -0.0557851, 19, 0, '2017-09-13 08:27:19'),
(50, 1229, '3', -0.124486, 43, 0, '2017-09-13 08:27:20'),
(40, 3487, '3', 0.6075, 11, 1, '2017-09-13 08:27:21'),
(49, 477, '0', -0.0652174, 46, 0, '2017-09-13 08:27:22'),
(58, 1469, '2', 2.04187, 7, 1, '2017-09-13 08:27:22'),
(66, 2847, '4', 2.72703, 8, 1, '2017-09-13 08:27:22'),
(71, 2756, '2', 1.47, 9, 1, '2017-09-13 08:27:22'),
(41, 378, '3', -0.0675, 17, 0, '2017-09-13 08:27:23'),
(43, 3444, '2', -0.0103806, 32, 0, '2017-09-13 08:27:23'),
(52, 2874, '3', -2.65518, 13, 0, '2017-09-13 08:27:24'),
(65, 605, '4', -2.08333, 10, 0, '2017-09-13 08:27:24'),
(36, 2442, '4', 2.7, 8, 1, '2017-09-13 08:27:24'),
(56, 374, '4', 0.1875, 15, 1, '2017-09-13 08:27:25'),
(37, 1219, '1', -0.22314, 16, 0, '2017-09-13 08:27:25'),
(44, 1496, '4', 1.89824, 9, 1, '2017-09-13 08:27:25'),
(38, 171, '1', 0.00421875, 77, 1, '2017-09-13 08:27:26'),
(35, 775, '4', 1.99791, 21, 1, '2017-09-13 08:27:28'),
(70, 2916, '2', 2.40727, 29, 1, '2017-09-13 08:27:29'),
(39, 471, '2', 0.75, 15, 1, '2017-09-13 08:27:30'),
(67, 2616, '1', -1.92, 12, 0, '2017-09-13 08:27:30'),
(50, 1298, '1', 2.08333, 10, 1, '2017-09-13 08:27:30'),
(65, 609, '2', 2.43, 6, 1, '2017-09-13 08:27:30'),
(66, 2861, '2', 2.79285, 8, 1, '2017-09-13 08:27:30'),
(41, 1140, '1', 1.08, 8, 1, '2017-09-13 08:27:31'),
(38, 1299, '2', -2.56267, 5, 0, '2017-09-13 08:27:31'),
(60, 1184, '4', 0.130208, 19, 1, '2017-09-13 08:27:31'),
(46, 12, '1', -0.48, 12, 0, '2017-09-13 08:27:31'),
(68, 721, '4', -0.826875, 19, 0, '2017-09-13 08:27:31'),
(33, 1498, '1', -0.880208, 22, 0, '2017-09-13 08:27:32'),
(47, 1700, '2', -0.8748, 23, 0, '2017-09-13 08:27:32'),
(52, 2870, '3', 2.76586, 9, 1, '2017-09-13 08:27:33'),
(44, 1501, '3', 2.00826, 8, 1, '2017-09-13 08:27:33'),
(58, 1472, '3', 1.57687, 11, 1, '2017-09-13 08:27:33'),
(63, 2819, '2', 2.28943, 20, 1, '2017-09-13 08:27:33'),
(31, 1220, '1', -0.75, 14, 0, '2017-09-13 08:27:33'),
(35, 484, '1', 2.7331, 6, 1, '2017-09-13 08:27:34'),
(58, 1488, '3', -2.73347, 2, 0, '2017-09-13 08:27:35'),
(64, 1345, '2', -2.21952, 24, 0, '2017-09-13 08:27:36'),
(67, 2632, '3', 2.34083, 7, 1, '2017-09-13 08:27:36'),
(70, 2928, '4', -2.87848, 7, 0, '2017-09-13 08:27:36'),
(50, 1187, '1', -1.98047, 6, 0, '2017-09-13 08:27:36'),
(71, 2754, '2', -0.853333, 14, 0, '2017-09-13 08:27:37'),
(66, 2883, '3', 2.81957, 7, 1, '2017-09-13 08:27:37'),
(63, 2838, '3', 2.86514, 4, 1, '2017-09-13 08:27:37'),
(61, 171, '0', -0.161583, 80, 0, '2017-09-13 08:27:39'),
(49, 474, '4', -1.725, 17, 0, '2017-09-13 08:27:39'),
(36, 1141, '1', 0.75, 15, 1, '2017-09-13 08:27:39'),
(64, 618, '2', -2.80447, 5, 0, '2017-09-13 08:27:40'),
(60, 1177, '2', 1.04752, 9, 1, '2017-09-13 08:27:41'),
(48, 1507, '0', -0.00110947, 52, 0, '2017-09-13 08:27:41'),
(57, 2422, '3', -0.533936, 74, 0, '2017-09-13 08:27:41'),
(70, 2891, '1', 2.89738, 5, 1, '2017-09-13 08:27:41'),
(53, 774, '0', 0, 32, -1, '2017-09-13 08:27:41'),
(65, 725, '4', 2.18253, 5, 1, '2017-09-13 08:27:41'),
(46, 14, '3', -0.6075, 11, 0, '2017-09-13 08:27:42'),
(71, 2762, '3', 2.08333, 5, 1, '2017-09-13 08:27:42'),
(33, 1501, '1', -1.79132, 10, 0, '2017-09-13 08:27:42'),
(38, 1188, '3', -1.10587, 11, 0, '2017-09-13 08:27:42'),
(43, 3458, '2', -0.508651, 20, 0, '2017-09-13 08:27:43'),
(40, 3461, '4', -0.046875, 21, 0, '2017-09-13 08:27:43'),
(42, 3460, '1', -0.0233564, 31, 0, '2017-09-13 08:27:43'),
(37, 1175, '4', 0.495117, 19, 1, '2017-09-13 08:27:43'),
(51, 738, '1', -0.0882353, 33, 0, '2017-09-13 08:27:44'),
(63, 2841, '3', 2.79651, 6, 1, '2017-09-13 08:27:44'),
(44, 1497, '2', 1.63435, 11, 1, '2017-09-13 08:27:44'),
(56, 372, '0', -0.0075, 20, 0, '2017-09-13 08:27:45'),
(46, 88, '3', -2.1675, 3, 0, '2017-09-13 08:27:45'),
(66, 2964, '3', 2.79285, 8, 1, '2017-09-13 08:27:45'),
(64, 1108, '2', -2.81866, 5, 0, '2017-09-13 08:27:45'),
(65, 723, '1', 2.08333, 6, 1, '2017-09-13 08:27:47'),
(55, 1456, '0', -0.001875, 40, 0, '2017-09-13 08:27:48'),
(52, 2864, '2', 2.59808, 15, 1, '2017-09-13 08:27:48'),
(50, 1296, '2', 0.75, 12, 1, '2017-09-13 08:27:48'),
(47, 1712, '1', -1.4856, 16, 0, '2017-09-13 08:27:49'),
(64, 1374, '2', -2.77778, 4, 0, '2017-09-13 08:27:49'),
(38, 1289, '3', -1.92, 8, 0, '2017-09-13 08:27:50'),
(41, 1136, '0', -0.0075, 20, 0, '2017-09-13 08:27:51'),
(31, 1294, '3', 0.1875, 18, 1, '2017-09-13 08:27:51'),
(40, 3597, '3', -1.13609, 10, 0, '2017-09-13 08:27:53'),
(48, 1490, '1', 1.39463, 14, 1, '2017-09-13 08:27:55'),
(69, 2923, '4', -2.14723, 38, 0, '2017-09-13 08:27:56'),
(49, 753, '4', 1.71429, 18, 1, '2017-09-13 08:27:56'),
(67, 2631, '3', 1.33333, 20, 1, '2017-09-13 08:27:56'),
(64, 1382, '2', -2.7, 7, 0, '2017-09-13 08:27:56'),
(58, 1473, '2', -0.9408, 22, 0, '2017-09-13 08:27:57'),
(65, 498, '2', 1.6875, 10, 1, '2017-09-13 08:27:57'),
(43, 3468, '4', -1.03806, 14, 0, '2017-09-13 08:27:57'),
(66, 2979, '4', -2.72082, 13, 0, '2017-09-13 08:27:58'),
(33, 1493, '3', -1.08, 16, 0, '2017-09-13 08:27:58'),
(60, 1195, '4', 0.0075, 19, 1, '2017-09-13 08:28:00'),
(52, 2862, '3', -2.68328, 12, 0, '2017-09-13 08:28:00'),
(53, 775, '4', 2.10309, 19, 1, '2017-09-13 08:28:00'),
(63, 2852, '3', -2.40251, 17, 0, '2017-09-13 08:28:00');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(35, 771, '1', 1.72175, 26, 1, '2017-09-13 08:28:01'),
(70, 2931, '4', 2.6424, 19, 1, '2017-09-13 08:28:01'),
(38, 173, '2', -2.3763, 11, 0, '2017-09-13 08:28:01'),
(47, 1658, '4', -0.963333, 13, 0, '2017-09-13 08:28:01'),
(57, 394, '0', -0.0075, 20, 0, '2017-09-13 08:28:01'),
(67, 2617, '1', 2.52083, 5, 1, '2017-09-13 08:28:02'),
(65, 734, '2', 1.92, 6, 1, '2017-09-13 08:28:02'),
(51, 499, '1', 1.34211, 21, 1, '2017-09-13 08:28:04'),
(39, 775, '1', -0.17155, 35, 0, '2017-09-13 08:28:05'),
(42, 3455, '1', -0.438581, 21, 0, '2017-09-13 08:28:05'),
(46, 18, '0', -0.0075, 20, 0, '2017-09-13 08:28:05'),
(71, 2740, '4', -0.163333, 23, 0, '2017-09-13 08:28:05'),
(56, 401, '0', -0.0075, 20, 0, '2017-09-13 08:28:05'),
(58, 1486, '4', -1.89824, 9, 0, '2017-09-13 08:28:06'),
(52, 2865, '3', 2.84605, 6, 1, '2017-09-13 08:28:06'),
(66, 2969, '4', 2.76586, 9, 1, '2017-09-13 08:28:07'),
(44, 1499, '3', -0.75, 23, 0, '2017-09-13 08:28:07'),
(41, 1130, '2', 0.12, 16, 1, '2017-09-13 08:28:07'),
(70, 2918, '2', -2.86026, 8, 0, '2017-09-13 08:28:09'),
(40, 3523, '2', 0.653333, 16, 1, '2017-09-13 08:28:09'),
(43, 3448, '3', 1.14446, 13, 1, '2017-09-13 08:28:11'),
(47, 1707, '4', 2.08333, 9, 1, '2017-09-13 08:28:11'),
(57, 1107, '4', 0.6075, 11, 1, '2017-09-13 08:28:12'),
(66, 2981, '4', 2.89738, 5, 1, '2017-09-13 08:28:13'),
(67, 2623, '2', 2.00083, 11, 1, '2017-09-13 08:28:13'),
(53, 493, '1', 2.05434, 13, 1, '2017-09-13 08:28:14'),
(64, 1385, '1', -2.3625, 17, 0, '2017-09-13 08:28:14'),
(40, 3557, '2', 1.41797, 5, 1, '2017-09-13 08:28:14'),
(58, 1483, '3', -1.74723, 9, 0, '2017-09-13 08:28:15'),
(56, 369, '2', 0.6075, 11, 1, '2017-09-13 08:28:16'),
(65, 728, '2', -1.29848, 13, 0, '2017-09-13 08:28:16'),
(39, 492, '3', -1.47, 12, 0, '2017-09-13 08:28:17'),
(69, 2928, '3', 2.59872, 21, 1, '2017-09-13 08:28:17'),
(38, 1204, '4', 1.33333, 16, 1, '2017-09-13 08:28:18'),
(41, 2418, '2', 2.23172, 11, 1, '2017-09-13 08:28:18'),
(60, 1196, '4', 0.130208, 19, 1, '2017-09-13 08:28:18'),
(52, 2888, '3', 2.65518, 13, 1, '2017-09-13 08:28:19'),
(70, 2921, '3', 2.82311, 10, 1, '2017-09-13 08:28:19'),
(47, 1660, '1', -1.28254, 9, 0, '2017-09-13 08:28:19'),
(68, 755, '1', 0, 48, 1, '2017-09-13 08:28:20'),
(40, 3581, '0', 0, 6, -1, '2017-09-13 08:28:20'),
(64, 1369, '1', 2.68182, 7, 1, '2017-09-13 08:28:20'),
(35, 493, '3', -1.34442, 21, 0, '2017-09-13 08:28:22'),
(58, 2933, '3', -1.50521, 7, 0, '2017-09-13 08:28:22'),
(37, 1208, '2', -0.1452, 39, 0, '2017-09-13 08:28:22'),
(65, 719, '3', 1.6875, 9, 1, '2017-09-13 08:28:25'),
(47, 1655, '4', -2.35692, 5, 0, '2017-09-13 08:28:25'),
(44, 1492, '1', -1.12965, 17, 0, '2017-09-13 08:28:25'),
(41, 1121, '2', -1.2675, 7, 0, '2017-09-13 08:28:25'),
(31, 1265, '3', -0.400518, 33, 0, '2017-09-13 08:28:25'),
(46, 6, '0', -0.0075, 20, 0, '2017-09-13 08:28:25'),
(58, 1468, '3', -2.43, 4, 0, '2017-09-13 08:28:26'),
(68, 748, '1', -2.04187, 7, 0, '2017-09-13 08:28:27'),
(64, 1368, '1', -2.67188, 7, 0, '2017-09-13 08:28:28'),
(71, 2737, '0', 0, 23, -1, '2017-09-13 08:28:28'),
(55, 1449, '0', -0.001875, 40, 0, '2017-09-13 08:28:28'),
(58, 1477, '3', 2.67593, 3, 1, '2017-09-13 08:28:29'),
(66, 2962, '4', -2.64998, 16, 0, '2017-09-13 08:28:29'),
(48, 1500, '4', 0.359467, 34, 1, '2017-09-13 08:28:29'),
(67, 2635, '4', -1.61333, 16, 0, '2017-09-13 08:28:29'),
(61, 173, '1', -1.88988, 50, 0, '2017-09-13 08:28:30'),
(70, 2934, '1', -2.80416, 11, 0, '2017-09-13 08:28:30'),
(51, 742, '4', -1.125, 25, 0, '2017-09-13 08:28:30'),
(43, 3455, '4', 0.508651, 20, 1, '2017-09-13 08:28:30'),
(52, 2921, '0', 0, 11, -1, '2017-09-13 08:28:31'),
(58, 1476, '3', 2.77367, 2, 1, '2017-09-13 08:28:31'),
(40, 3531, '2', 0.6075, 11, 1, '2017-09-13 08:28:32'),
(60, 1291, '0', 0, 13, -1, '2017-09-13 08:28:32'),
(37, 1220, '4', -1.2398, 10, 0, '2017-09-13 08:28:32'),
(57, 373, '0', -0.0075, 20, 0, '2017-09-13 08:28:32'),
(63, 2735, '0', 0, 32, -1, '2017-09-13 08:28:33'),
(45, 9, '2', 1.6875, 5, 1, '2017-09-13 08:28:33'),
(38, 172, '2', 2.19074, 16, 1, '2017-09-13 08:28:33'),
(65, 730, '4', -1.6875, 9, 0, '2017-09-13 08:28:34'),
(70, 2911, '1', 2.89647, 6, 1, '2017-09-13 08:28:36'),
(56, 388, '0', -0.0075, 20, 0, '2017-09-13 08:28:36'),
(41, 2420, '3', 2.29688, 12, 1, '2017-09-13 08:28:37'),
(47, 1644, '1', -0.979592, 12, 0, '2017-09-13 08:28:37'),
(36, 2450, '2', -1.77083, 59, 0, '2017-09-13 08:28:37'),
(50, 1286, '4', 0.0833333, 50, 1, '2017-09-13 08:28:38'),
(71, 2761, '1', 1.33333, 10, 1, '2017-09-13 08:28:38'),
(39, 768, '3', 0.880208, 22, 1, '2017-09-13 08:28:39'),
(49, 749, '0', 0, 43, -1, '2017-09-13 08:28:40'),
(38, 1274, '2', 2.39158, 6, 1, '2017-09-13 08:28:40'),
(46, 28, '4', -0.1875, 15, 0, '2017-09-13 08:28:40'),
(64, 1377, '4', 2.30357, 13, 1, '2017-09-13 08:28:41'),
(35, 758, '4', 1.82297, 20, 1, '2017-09-13 08:28:42'),
(52, 2931, '4', 2.74383, 12, 1, '2017-09-13 08:28:42'),
(47, 1647, '3', 1.77515, 6, 1, '2017-09-13 08:28:43'),
(33, 1503, '1', -0.00567108, 44, 0, '2017-09-13 08:28:43'),
(58, 1480, '4', 1.43027, 13, 1, '2017-09-13 08:28:44'),
(69, 2916, '2', 2.48255, 26, 1, '2017-09-13 08:28:44'),
(45, 10, '3', -0.6075, 11, 0, '2017-09-13 08:28:44'),
(65, 735, '4', 1.20333, 11, 1, '2017-09-13 08:28:45'),
(70, 2939, '4', -2.8418, 9, 0, '2017-09-13 08:28:45'),
(66, 2975, '4', -2.64998, 16, 0, '2017-09-13 08:28:45'),
(42, 2603, '1', 0.3675, 26, 1, '2017-09-13 08:28:48'),
(61, 1296, '4', -0.75, 18, 0, '2017-09-13 08:28:48'),
(71, 2768, '1', -2.4, 10, 0, '2017-09-13 08:28:48'),
(40, 3535, '2', -0.0675, 17, 0, '2017-09-13 08:28:48'),
(68, 760, '1', -0.6075, 22, 0, '2017-09-13 08:28:50'),
(66, 2732, '4', 2.87228, 5, 1, '2017-09-13 08:28:50'),
(36, 1150, '4', -1.05, 13, 0, '2017-09-13 08:28:51'),
(48, 1497, '2', 0.680272, 22, 1, '2017-09-13 08:28:51'),
(53, 763, '2', 1.01106, 37, 1, '2017-09-13 08:28:51'),
(70, 2948, '3', -2.87848, 7, 0, '2017-09-13 08:28:52'),
(57, 367, '0', -0.0075, 20, 0, '2017-09-13 08:28:53'),
(39, 491, '1', -1.19668, 14, 0, '2017-09-13 08:28:53'),
(65, 464, '1', -1.43787, 8, 0, '2017-09-13 08:28:53'),
(38, 1241, '4', 1.72652, 14, 1, '2017-09-13 08:28:53'),
(66, 2852, '4', -2.93908, 3, 0, '2017-09-13 08:28:54'),
(50, 172, '4', -2.2376, 15, 0, '2017-09-13 08:28:54'),
(45, 19, '4', -0.75, 10, 0, '2017-09-13 08:28:54'),
(43, 3442, '4', 0.259516, 24, 1, '2017-09-13 08:28:55'),
(63, 2732, '4', 2.21246, 22, 1, '2017-09-13 08:28:55'),
(44, 3054, '0', -0.00333333, 30, 0, '2017-09-13 08:28:55'),
(67, 2835, '3', 0.963333, 26, 1, '2017-09-13 08:28:56'),
(42, 2612, '1', 1.92, 8, 1, '2017-09-13 08:28:56'),
(56, 373, '0', -0.0075, 20, 0, '2017-09-13 08:28:57'),
(47, 1671, '4', -1.33333, 14, 0, '2017-09-13 08:28:57'),
(41, 396, '0', -0.0075, 20, 0, '2017-09-13 08:28:57'),
(46, 37, '1', 0.0675, 17, 1, '2017-09-13 08:28:57'),
(40, 3527, '4', 0.9075, 9, 1, '2017-09-13 08:28:58'),
(71, 2757, '1', -1.33333, 10, 0, '2017-09-13 08:28:59'),
(66, 2816, '4', 2.84605, 6, 1, '2017-09-13 08:28:59'),
(65, 494, '3', 1.92, 6, 1, '2017-09-13 08:28:59'),
(69, 2911, '1', 2.72568, 15, 1, '2017-09-13 08:28:59'),
(57, 374, '4', 1.08, 8, 1, '2017-09-13 08:29:01'),
(55, 1466, '1', -0.3888, 32, 0, '2017-09-13 08:29:01'),
(52, 2914, '1', 2.57617, 19, 1, '2017-09-13 08:29:02'),
(35, 765, '3', -1.88988, 20, 0, '2017-09-13 08:29:03'),
(37, 1199, '0', -0.00292969, 32, 0, '2017-09-13 08:29:04'),
(38, 1240, '2', -1.8252, 11, 0, '2017-09-13 08:29:04'),
(65, 729, '2', 2.08333, 6, 1, '2017-09-13 08:29:04'),
(66, 2841, '3', 2.87619, 6, 1, '2017-09-13 08:29:05'),
(47, 1681, '2', -2.08333, 8, 0, '2017-09-13 08:29:05'),
(64, 1387, '4', 1.92857, 25, 1, '2017-09-13 08:29:06'),
(58, 1485, '2', -0.998521, 22, 0, '2017-09-13 08:29:06'),
(40, 3588, '1', 1.02083, 10, 1, '2017-09-13 08:29:07'),
(39, 769, '1', 1.3032, 15, 1, '2017-09-13 08:29:08'),
(46, 31, '3', -0.6075, 11, 0, '2017-09-13 08:29:09'),
(43, 3439, '4', 1.03806, 14, 1, '2017-09-13 08:29:09'),
(44, 1494, '4', 1.19668, 14, 1, '2017-09-13 08:29:09'),
(47, 1694, '1', 2.38327, 5, 1, '2017-09-13 08:29:10'),
(60, 1270, '2', -0.0907372, 38, 0, '2017-09-13 08:29:10'),
(41, 382, '4', 0.27, 14, 1, '2017-09-13 08:29:11'),
(64, 1376, '4', -2.65909, 5, 0, '2017-09-13 08:29:11'),
(33, 3054, '4', 0.00333333, 29, 1, '2017-09-13 08:29:11'),
(70, 2907, '3', 2.57617, 19, 1, '2017-09-13 08:29:12'),
(31, 1209, '2', 0.0108, 47, 1, '2017-09-13 08:29:12'),
(40, 3563, '2', -1.6875, 5, 0, '2017-09-13 08:29:12'),
(71, 2763, '4', -0.853333, 14, 0, '2017-09-13 08:29:12'),
(66, 2820, '1', -2.8331, 8, 0, '2017-09-13 08:29:13'),
(45, 11, '1', 0.0075, 19, 1, '2017-09-13 08:29:13'),
(58, 1491, '1', -1.96599, 8, 0, '2017-09-13 08:29:14'),
(42, 2611, '3', 0.9075, 18, 1, '2017-09-13 08:29:15'),
(49, 476, '2', -0.375, 35, 0, '2017-09-13 08:29:15'),
(36, 2448, '3', -2.21739, 24, 0, '2017-09-13 08:29:15'),
(51, 477, '3', -0.0652174, 45, 0, '2017-09-13 08:29:15'),
(65, 740, '3', -2.16667, 10, 0, '2017-09-13 08:29:15'),
(55, 1458, '3', 1.12037, 14, 1, '2017-09-13 08:29:15'),
(67, 2820, '4', -1.33333, 20, 0, '2017-09-13 08:29:16'),
(56, 384, '0', -0.0075, 20, 0, '2017-09-13 08:29:17'),
(57, 378, '0', 0, 17, -1, '2017-09-13 08:29:17'),
(46, 32, '3', 0.9075, 9, 1, '2017-09-13 08:29:18'),
(69, 2934, '4', -2.6424, 19, 0, '2017-09-13 08:29:18'),
(58, 1481, '1', -2.43, 4, 0, '2017-09-13 08:29:18'),
(70, 2945, '3', -2.87848, 7, 0, '2017-09-13 08:29:18'),
(64, 1388, '1', 2.51786, 9, 1, '2017-09-13 08:29:20'),
(38, 1256, '3', 1.6081, 15, 1, '2017-09-13 08:29:20'),
(68, 776, '2', -0.362949, 30, 0, '2017-09-13 08:29:20'),
(66, 2838, '3', 2.8331, 8, 1, '2017-09-13 08:29:21'),
(48, 3076, '0', -0.00333333, 30, 0, '2017-09-13 08:29:21'),
(39, 766, '2', -1.33333, 14, 0, '2017-09-13 08:29:22'),
(60, 1218, '0', 0, 12, -1, '2017-09-13 08:29:22'),
(65, 489, '2', -1.92, 8, 0, '2017-09-13 08:29:23'),
(53, 777, '2', 1.35738, 32, 1, '2017-09-13 08:29:23'),
(43, 3446, '2', 0.84083, 16, 1, '2017-09-13 08:29:25'),
(47, 1676, '4', 1.47, 15, 1, '2017-09-13 08:29:25'),
(45, 16, '1', 0.48, 12, 1, '2017-09-13 08:29:26'),
(71, 2755, '3', 0.853333, 14, 1, '2017-09-13 08:29:26'),
(40, 3517, '4', -0.148148, 14, 0, '2017-09-13 08:29:27'),
(41, 397, '3', 0.0675, 17, 1, '2017-09-13 08:29:28'),
(49, 754, '4', 2.07143, 13, 1, '2017-09-13 08:29:28'),
(56, 1110, '2', 0.6075, 11, 1, '2017-09-13 08:29:28'),
(44, 3076, '1', 0.48, 18, 1, '2017-09-13 08:29:28'),
(58, 1470, '1', 1.92, 10, 1, '2017-09-13 08:29:28'),
(55, 1462, '1', 1.36688, 13, 1, '2017-09-13 08:29:28'),
(46, 22, '1', 0.6075, 11, 1, '2017-09-13 08:29:29'),
(45, 88, '1', 2.1675, 3, 1, '2017-09-13 08:29:29'),
(68, 758, '1', -1.74723, 9, 0, '2017-09-13 08:29:29'),
(36, 395, '2', -0.1875, 15, 0, '2017-09-13 08:29:29'),
(65, 481, '1', 2.04187, 7, 1, '2017-09-13 08:29:30'),
(69, 2921, '2', -2.78495, 12, 0, '2017-09-13 08:29:30'),
(38, 1235, '3', -2.15978, 10, 0, '2017-09-13 08:29:30'),
(67, 2838, '3', 1.61333, 16, 1, '2017-09-13 08:29:31'),
(58, 1479, '1', -2.47934, 4, 0, '2017-09-13 08:29:32'),
(35, 522, '2', -0.90856, 30, 0, '2017-09-13 08:29:32'),
(70, 2900, '1', -2.6739, 15, 0, '2017-09-13 08:29:34'),
(45, 3, '3', 1.6875, 5, 1, '2017-09-13 08:29:34'),
(47, 1715, '0', 0, 10, -1, '2017-09-13 08:29:35'),
(53, 488, '3', 2.28943, 12, 1, '2017-09-13 08:29:35'),
(31, 1187, '4', -0.237305, 23, 0, '2017-09-13 08:29:35'),
(65, 472, '3', -2.1675, 6, 0, '2017-09-13 08:29:36'),
(46, 35, '2', 1.2675, 7, 1, '2017-09-13 08:29:36'),
(36, 2416, '3', 2.54171, 7, 1, '2017-09-13 08:29:36'),
(35, 795, '2', -2.82346, 4, 0, '2017-09-13 08:29:36'),
(43, 3462, '1', -1.25606, 12, 0, '2017-09-13 08:29:37'),
(71, 2748, '3', 1.33333, 10, 1, '2017-09-13 08:29:37'),
(57, 389, '0', -0.0075, 20, 0, '2017-09-13 08:29:37'),
(52, 2950, '3', -2.07943, 36, 0, '2017-09-13 08:29:38'),
(58, 1484, '2', -2.20408, 6, 0, '2017-09-13 08:29:38'),
(55, 3044, '1', -1.02083, 10, 0, '2017-09-13 08:29:38'),
(66, 2835, '1', -2.62572, 17, 0, '2017-09-13 08:29:38'),
(60, 1186, '3', 0.55102, 16, 1, '2017-09-13 08:29:39'),
(40, 3538, '2', 1.08, 12, 1, '2017-09-13 08:29:39'),
(37, 1257, '4', 0.220052, 35, 1, '2017-09-13 08:29:39'),
(39, 761, '3', 1.19234, 17, 1, '2017-09-13 08:29:39'),
(67, 2730, '4', 2.25333, 8, 1, '2017-09-13 08:29:39'),
(42, 2615, '2', -0.421875, 25, 0, '2017-09-13 08:29:40'),
(55, 1467, '1', -2.80333, 2, 0, '2017-09-13 08:29:40'),
(70, 2909, '4', 2.85477, 7, 1, '2017-09-13 08:29:41'),
(51, 754, '4', 1, 28, 1, '2017-09-13 08:29:43'),
(64, 621, '2', 2.23333, 23, 1, '2017-09-13 08:29:43'),
(50, 1209, '2', 0.0012, 49, 1, '2017-09-13 08:29:43'),
(45, 18, '4', 0.75, 10, 1, '2017-09-13 08:29:44'),
(35, 790, '2', -2.53118, 9, 0, '2017-09-13 08:29:45'),
(38, 1278, '1', -1.6875, 15, 0, '2017-09-13 08:29:45'),
(56, 2408, '3', 1.99374, 17, 1, '2017-09-13 08:29:46'),
(42, 2610, '3', 2.04187, 7, 1, '2017-09-13 08:29:46'),
(57, 1137, '2', 0.9075, 9, 1, '2017-09-13 08:29:47'),
(41, 400, '2', 0, 20, 0, '2017-09-13 08:29:48'),
(41, 375, '0', -0.0075, 20, 0, '2017-09-13 08:29:48'),
(68, 471, '1', -0.403333, 19, 0, '2017-09-13 08:29:48'),
(47, 1679, '2', 1.39463, 14, 1, '2017-09-13 08:29:49'),
(38, 1288, '2', 2.64738, 4, 1, '2017-09-13 08:29:49'),
(70, 2942, '2', 2.81118, 9, 1, '2017-09-13 08:29:50'),
(67, 2845, '2', -2.08333, 10, 0, '2017-09-13 08:29:50'),
(49, 740, '1', 1.16667, 22, 1, '2017-09-13 08:29:50'),
(33, 1489, '2', -0.0272109, 38, 0, '2017-09-13 08:29:50'),
(44, 1507, '1', 0.933062, 23, 1, '2017-09-13 08:29:50'),
(66, 2823, '1', -2.74383, 12, 0, '2017-09-13 08:29:50'),
(39, 493, '3', -1.08, 12, 0, '2017-09-13 08:29:51'),
(61, 1452, '2', 1.6875, 10, 1, '2017-09-13 08:29:51'),
(55, 1455, '1', 1.57687, 11, 1, '2017-09-13 08:29:52'),
(46, 21, '2', 0.0675, 17, 1, '2017-09-13 08:29:52'),
(42, 2604, '1', -2.1675, 6, 0, '2017-09-13 08:29:53'),
(40, 3599, '1', -0.536982, 15, 0, '2017-09-13 08:29:54'),
(45, 6, '2', 0.75, 10, 1, '2017-09-13 08:29:54'),
(64, 1372, '0', 0, 11, -1, '2017-09-13 08:29:54'),
(47, 1667, '3', 2.20408, 6, 1, '2017-09-13 08:29:55'),
(63, 2835, '0', -0.195743, 60, 0, '2017-09-13 08:29:56'),
(70, 2957, '3', -2.87848, 7, 0, '2017-09-13 08:29:57'),
(56, 1140, '1', 0.48, 12, 1, '2017-09-13 08:29:58'),
(68, 484, '4', -1.83743, 10, 0, '2017-09-13 08:29:58'),
(48, 1499, '1', -0.141777, 36, 0, '2017-09-13 08:29:58'),
(52, 2957, '3', -2.52515, 21, 0, '2017-09-13 08:29:59'),
(36, 2447, '4', 2.25, 22, 1, '2017-09-13 08:29:59'),
(41, 1105, '2', 0.6075, 11, 1, '2017-09-13 08:29:59'),
(53, 492, '3', -1.62865, 24, 0, '2017-09-13 08:30:00'),
(71, 2745, '1', -0.163333, 23, 0, '2017-09-13 08:30:00'),
(61, 1460, '3', -1.83743, 10, 0, '2017-09-13 08:30:01'),
(42, 2605, '2', 1.80187, 9, 1, '2017-09-13 08:30:02'),
(66, 2729, '2', 2.71109, 11, 1, '2017-09-13 08:30:02'),
(40, 3593, '0', 0, 10, -1, '2017-09-13 08:30:04'),
(64, 1093, '1', -2.38889, 11, 0, '2017-09-13 08:30:05'),
(67, 2731, '4', 1.6875, 15, 1, '2017-09-13 08:30:05'),
(38, 1277, '4', -1.54083, 17, 0, '2017-09-13 08:30:06'),
(45, 8, '2', 0.3675, 13, 1, '2017-09-13 08:30:07'),
(57, 376, '0', -0.0075, 20, 0, '2017-09-13 08:30:07'),
(43, 3456, '1', -0.0415225, 30, 0, '2017-09-13 08:30:07'),
(39, 772, '3', 1.2513, 17, 1, '2017-09-13 08:30:08'),
(60, 1203, '0', -0.00333333, 30, 0, '2017-09-13 08:30:09'),
(69, 2926, '2', -2.11419, 39, 0, '2017-09-13 08:30:10'),
(66, 2819, '2', 2.8331, 8, 1, '2017-09-13 08:30:10'),
(46, 20, '2', 0.0675, 17, 1, '2017-09-13 08:30:10'),
(70, 2952, '2', 2.69752, 14, 1, '2017-09-13 08:30:11'),
(71, 2738, '2', 1.20333, 11, 1, '2017-09-13 08:30:12'),
(52, 2959, '4', -2.72082, 13, 0, '2017-09-13 08:30:12'),
(31, 1299, '3', 0.579201, 37, 1, '2017-09-13 08:30:13'),
(49, 748, '1', -1.2, 24, 0, '2017-09-13 08:30:14'),
(45, 1, '3', -1.2675, 7, 0, '2017-09-13 08:30:14'),
(61, 1463, '1', -1.39463, 14, 0, '2017-09-13 08:30:14'),
(40, 3529, '3', 0.292969, 11, 1, '2017-09-13 08:30:15'),
(64, 1306, '0', 0, 10, -1, '2017-09-13 08:30:15'),
(55, 1464, '4', -0.75, 24, 0, '2017-09-13 08:30:15'),
(36, 2440, '2', -2.53636, 17, 0, '2017-09-13 08:30:16'),
(37, 1265, '1', -0.24963, 37, 0, '2017-09-13 08:30:16'),
(67, 2732, '4', 2.00083, 11, 1, '2017-09-13 08:30:16'),
(41, 2413, '2', -1.99374, 17, 0, '2017-09-13 08:30:17'),
(55, 2929, '3', -2.52083, 2, 0, '2017-09-13 08:30:17'),
(56, 394, '2', 0, 20, 1, '2017-09-13 08:30:17'),
(44, 1503, '2', 0.511815, 27, 1, '2017-09-13 08:30:18'),
(33, 2947, '2', -0.0133333, 28, 0, '2017-09-13 08:30:18'),
(61, 1458, '0', 0, 3, -1, '2017-09-13 08:30:18'),
(70, 2937, '4', -2.87848, 7, 0, '2017-09-13 08:30:19'),
(68, 768, '3', 0.949219, 21, 1, '2017-09-13 08:30:19'),
(46, 25, '3', -0.9075, 9, 0, '2017-09-13 08:30:19'),
(51, 741, '0', -0.0789474, 38, 0, '2017-09-13 08:30:21'),
(35, 496, '4', -1.04147, 35, 0, '2017-09-13 08:30:21'),
(55, 1465, '1', 2.39158, 3, 1, '2017-09-13 08:30:21'),
(52, 2952, '4', -2.76586, 9, 0, '2017-09-13 08:30:21'),
(66, 2730, '4', 2.74383, 12, 1, '2017-09-13 08:30:22'),
(38, 1267, '3', -1.85204, 15, 0, '2017-09-13 08:30:22'),
(57, 400, '1', -0.1875, 15, 0, '2017-09-13 08:30:22'),
(43, 3470, '2', 0.936851, 15, 1, '2017-09-13 08:30:22'),
(55, 1453, '2', -2.5392, 4, 0, '2017-09-13 08:30:24'),
(67, 2734, '3', 2.1675, 9, 1, '2017-09-13 08:30:25'),
(66, 2845, '4', -2.93908, 3, 0, '2017-09-13 08:30:25'),
(45, 13, '3', -0.3675, 13, 0, '2017-09-13 08:30:27'),
(55, 1460, '3', -2.7448, 2, 0, '2017-09-13 08:30:27'),
(61, 3004, '4', -1.47, 9, 0, '2017-09-13 08:30:27'),
(60, 1173, '3', -0.03, 18, 0, '2017-09-13 08:30:27'),
(39, 764, '4', -0.592593, 20, 0, '2017-09-13 08:30:27'),
(37, 1284, '3', 0.48, 12, 1, '2017-09-13 08:30:28'),
(46, 36, '4', 0.75, 10, 1, '2017-09-13 08:30:28'),
(57, 2416, '3', 2.54171, 7, 1, '2017-09-13 08:30:30'),
(42, 2607, '4', 0.226875, 29, 1, '2017-09-13 08:30:31'),
(36, 1149, '1', 0.6, 16, 1, '2017-09-13 08:30:32'),
(71, 2736, '3', -0.27, 21, 0, '2017-09-13 08:30:32'),
(68, 771, '2', -1.54395, 13, 0, '2017-09-13 08:30:33'),
(53, 760, '1', -0.938599, 33, 0, '2017-09-13 08:30:33'),
(69, 2918, '1', -2.5303, 24, 0, '2017-09-13 08:30:33'),
(64, 1390, '0', 0, 19, -1, '2017-09-13 08:30:34'),
(61, 3039, '1', 1.60207, 7, 1, '2017-09-13 08:30:34'),
(47, 1665, '2', 0.0557851, 38, 1, '2017-09-13 08:30:34'),
(56, 379, '3', 0.0675, 17, 1, '2017-09-13 08:30:34'),
(44, 2947, '3', 0.48, 18, 1, '2017-09-13 08:30:36'),
(70, 2959, '1', -2.62572, 17, 0, '2017-09-13 08:30:36'),
(41, 389, '0', -0.0075, 20, 0, '2017-09-13 08:30:37'),
(66, 2634, '3', -2.74383, 12, 0, '2017-09-13 08:30:37'),
(33, 1490, '3', -0.968492, 19, 0, '2017-09-13 08:30:37'),
(40, 3584, '3', -0.0208333, 22, 0, '2017-09-13 08:30:37'),
(45, 5, '3', 0.6075, 11, 1, '2017-09-13 08:30:38'),
(36, 1156, '1', 2.1, 6, 1, '2017-09-13 08:30:38'),
(42, 2613, '4', 2.04187, 7, 1, '2017-09-13 08:30:38'),
(37, 1294, '3', 1.02083, 10, 1, '2017-09-13 08:30:38'),
(55, 1459, '3', -1.47, 12, 0, '2017-09-13 08:30:39'),
(60, 1190, '1', -0.979592, 12, 0, '2017-09-13 08:30:39'),
(69, 2899, '2', 2.87619, 6, 1, '2017-09-13 08:30:40'),
(61, 1457, '4', 2.04187, 7, 1, '2017-09-13 08:30:41'),
(35, 495, '3', 1.82297, 20, 1, '2017-09-13 08:30:41'),
(64, 1378, '0', 0, 8, -1, '2017-09-13 08:30:41'),
(38, 1285, '4', -0.333333, 20, 0, '2017-09-13 08:30:42'),
(67, 2729, '1', -2.15, 17, 0, '2017-09-13 08:30:42'),
(39, 364, '2', 1.2675, 7, 1, '2017-09-13 08:30:43'),
(66, 2626, '3', 2.85477, 7, 1, '2017-09-13 08:30:44'),
(43, 3493, '4', -0.676875, 21, 0, '2017-09-13 08:30:44'),
(70, 2940, '2', 2.81118, 9, 1, '2017-09-13 08:30:44'),
(55, 1457, '1', -2.29688, 5, 0, '2017-09-13 08:30:44'),
(45, 17, '1', 1.2675, 7, 1, '2017-09-13 08:30:45'),
(46, 30, '1', -0.0675, 17, 0, '2017-09-13 08:30:46'),
(55, 1463, '4', -2.47934, 4, 0, '2017-09-13 08:30:48'),
(50, 1264, '4', 0.00619835, 63, 1, '2017-09-13 08:30:48'),
(66, 2629, '3', -2.91834, 4, 0, '2017-09-13 08:30:48'),
(56, 1121, '1', -0.3675, 13, 0, '2017-09-13 08:30:48'),
(40, 3575, '4', 0.48, 12, 1, '2017-09-13 08:30:49'),
(55, 3051, '3', 2.55621, 2, 1, '2017-09-13 08:30:50'),
(37, 1189, '3', 1.10587, 11, 1, '2017-09-13 08:30:50'),
(53, 772, '3', 2.24148, 17, 1, '2017-09-13 08:30:50'),
(61, 1453, '1', 2.0172, 9, 1, '2017-09-13 08:30:50'),
(71, 2752, '2', -0.403333, 19, 0, '2017-09-13 08:30:51'),
(55, 1461, '2', -2.7448, 2, 0, '2017-09-13 08:30:52'),
(70, 2955, '3', -2.85477, 7, 0, '2017-09-13 08:30:52'),
(38, 1249, '3', -1.73677, 11, 0, '2017-09-13 08:30:53'),
(44, 3062, '3', -0.65918, 17, 0, '2017-09-13 08:30:53'),
(66, 2616, '3', -2.89738, 5, 0, '2017-09-13 08:30:53'),
(45, 2, '3', 0.9075, 9, 1, '2017-09-13 08:30:55'),
(48, 1504, '1', 0.247969, 57, 1, '2017-09-13 08:30:55'),
(52, 2955, '0', 0, 33, -1, '2017-09-13 08:30:55'),
(33, 1497, '2', 0.979592, 18, 1, '2017-09-13 08:30:55'),
(41, 2451, '3', 2.22032, 19, 1, '2017-09-13 08:30:56'),
(63, 2833, '0', -0.195743, 60, 0, '2017-09-13 08:30:57'),
(43, 3478, '3', 1.03806, 14, 1, '2017-09-13 08:30:58'),
(71, 2750, '4', 1.76333, 7, 1, '2017-09-13 08:30:59'),
(68, 769, '1', 0.447831, 27, 1, '2017-09-13 08:30:59'),
(46, 38, '1', -0.27, 14, 0, '2017-09-13 08:31:00'),
(49, 479, '0', -0.0652174, 46, 0, '2017-09-13 08:31:00'),
(45, 12, '2', -1.47, 6, 0, '2017-09-13 08:31:00'),
(51, 476, '0', -0.075, 40, 0, '2017-09-13 08:31:01'),
(47, 1675, '1', -0.75, 27, 0, '2017-09-13 08:31:01'),
(66, 2628, '4', -2.79285, 8, 0, '2017-09-13 08:31:02'),
(67, 2833, '3', 1.33333, 20, 1, '2017-09-13 08:31:03'),
(39, 1136, '0', -0.0075, 20, 0, '2017-09-13 08:31:03'),
(60, 1227, '2', 0, 24, 0, '2017-09-13 08:31:04'),
(60, 1194, '0', -0.0956633, 24, 0, '2017-09-13 08:31:04'),
(36, 2451, '3', 2.42647, 26, 1, '2017-09-13 08:31:04'),
(61, 1456, '3', -1.2675, 14, 0, '2017-09-13 08:31:04'),
(38, 1247, '3', -2.08333, 11, 0, '2017-09-13 08:31:04'),
(37, 1269, '3', -1.33333, 16, 0, '2017-09-13 08:31:05'),
(69, 2931, '4', 2.50665, 25, 1, '2017-09-13 08:31:05'),
(52, 2940, '4', -2.71109, 11, 0, '2017-09-13 08:31:06'),
(35, 778, '3', 1.83701, 25, 1, '2017-09-13 08:31:06'),
(56, 392, '4', -0.0075, 19, 0, '2017-09-13 08:31:08'),
(42, 2614, '4', 0.1875, 30, 1, '2017-09-13 08:31:08'),
(38, 1262, '3', 2.45081, 5, 1, '2017-09-13 08:31:09'),
(53, 471, '3', -1.53686, 19, 0, '2017-09-13 08:31:09'),
(68, 772, '3', 1.88021, 10, 1, '2017-09-13 08:31:10'),
(44, 1506, '2', -1.3068, 17, 0, '2017-09-13 08:31:10'),
(49, 483, '1', -2.28261, 11, 0, '2017-09-13 08:31:11'),
(45, 4, '1', -0.6075, 11, 0, '2017-09-13 08:31:11'),
(51, 746, '1', -2.08333, 11, 0, '2017-09-13 08:31:12'),
(70, 2950, '4', -2.55085, 20, 0, '2017-09-13 08:31:12'),
(38, 1246, '2', -2.7075, 3, 0, '2017-09-13 08:31:12'),
(40, 3542, '1', -0.12, 24, 0, '2017-09-13 08:31:14'),
(71, 2779, '0', 0, 17, -1, '2017-09-13 08:31:16'),
(43, 3510, '3', 0.9075, 18, 1, '2017-09-13 08:31:16'),
(66, 722, '3', 2.37037, 4, 1, '2017-09-13 08:31:17'),
(35, 782, '2', 2.5221, 11, 1, '2017-09-13 08:31:17'),
(46, 23, '1', 0.0075, 19, 1, '2017-09-13 08:31:18'),
(63, 2729, '1', -2.25111, 21, 0, '2017-09-13 08:31:19'),
(45, 14, '1', 1.2675, 7, 1, '2017-09-13 08:31:19'),
(55, 1452, '1', -0.3675, 26, 0, '2017-09-13 08:31:19'),
(61, 1454, '3', -1.02083, 15, 0, '2017-09-13 08:31:19'),
(40, 3533, '2', -1.41797, 5, 0, '2017-09-13 08:31:19'),
(69, 2914, '1', 2.74572, 14, 1, '2017-09-13 08:31:20'),
(47, 1704, '3', -1.13609, 20, 0, '2017-09-13 08:31:21'),
(68, 762, '3', 1.47, 12, 1, '2017-09-13 08:31:22'),
(36, 1157, '1', 0.3, 18, 1, '2017-09-13 08:31:22'),
(70, 2969, '2', -2.789, 10, 0, '2017-09-13 08:31:22'),
(33, 3076, '1', 0.03, 27, 1, '2017-09-13 08:31:23'),
(31, 173, '3', -0.2883, 69, 0, '2017-09-13 08:31:23'),
(39, 389, '0', -0.0075, 20, 0, '2017-09-13 08:31:24'),
(66, 736, '2', -1.89187, 7, 0, '2017-09-13 08:31:24'),
(61, 1464, '4', -2.1888, 7, 0, '2017-09-13 08:31:27'),
(60, 1210, '2', -0.00520833, 23, 0, '2017-09-13 08:31:27'),
(53, 765, '2', 2.01386, 18, 1, '2017-09-13 08:31:28'),
(56, 402, '0', -0.0075, 20, 0, '2017-09-13 08:31:28'),
(47, 1646, '4', -1.60207, 7, 0, '2017-09-13 08:31:28'),
(71, 2784, '0', 0, 13, -1, '2017-09-13 08:31:29'),
(38, 169, '2', 1.2513, 17, 1, '2017-09-13 08:31:29'),
(46, 39, '1', -0.6075, 11, 0, '2017-09-13 08:31:29'),
(68, 492, '1', -1.92, 8, 0, '2017-09-13 08:31:30'),
(67, 2728, '4', 1.6, 28, 1, '2017-09-13 08:31:30'),
(42, 2609, '4', -0.6075, 22, 0, '2017-09-13 08:31:31'),
(41, 2453, '4', 1.62197, 36, 1, '2017-09-13 08:31:32'),
(35, 500, '2', 2.19301, 15, 1, '2017-09-13 08:31:32'),
(36, 1155, '4', 1.35, 11, 1, '2017-09-13 08:31:33'),
(52, 2948, '1', -2.22486, 27, 0, '2017-09-13 08:31:33'),
(45, 7, '2', -0.27, 14, 0, '2017-09-13 08:31:33'),
(47, 1702, '3', -2.35692, 5, 0, '2017-09-13 08:31:33'),
(33, 1492, '2', 1.79132, 10, 1, '2017-09-13 08:31:33'),
(66, 466, '2', -1.47, 9, 0, '2017-09-13 08:31:33'),
(70, 2979, '1', 2.74383, 12, 1, '2017-09-13 08:31:34'),
(43, 3497, '3', 0.9075, 18, 1, '2017-09-13 08:31:34'),
(40, 3569, '1', 0.12, 16, 1, '2017-09-13 08:31:35'),
(57, 2445, '2', -1.5, 65, 0, '2017-09-13 08:31:35'),
(55, 3039, '4', -0.359467, 17, 0, '2017-09-13 08:31:35'),
(71, 2767, '4', 2.64, 6, 1, '2017-09-13 08:31:35'),
(38, 1230, '4', -2.46387, 6, 0, '2017-09-13 08:31:35'),
(39, 379, '4', -0.27, 14, 0, '2017-09-13 08:31:37'),
(33, 1504, '1', 2.63672, 5, 1, '2017-09-13 08:31:38'),
(50, 1250, '4', -0.0833333, 50, 0, '2017-09-13 08:31:38'),
(60, 1263, '2', -1.57687, 11, 0, '2017-09-13 08:31:38'),
(61, 3051, '4', -0.869823, 12, 0, '2017-09-13 08:31:38'),
(46, 24, '3', 1.08, 8, 1, '2017-09-13 08:31:38'),
(42, 2606, '1', 1.92, 8, 1, '2017-09-13 08:31:38'),
(63, 2845, '4', -2.28943, 20, 0, '2017-09-13 08:31:39'),
(70, 2966, '2', -2.85477, 7, 0, '2017-09-13 08:31:41'),
(50, 173, '4', 2.7648, 4, 1, '2017-09-13 08:31:42'),
(35, 792, '2', 2.50258, 10, 1, '2017-09-13 08:31:42'),
(68, 488, '1', -1.33333, 12, 0, '2017-09-13 08:31:42'),
(52, 2945, '4', 2.76586, 9, 1, '2017-09-13 08:31:42'),
(66, 509, '3', -1.6875, 9, 0, '2017-09-13 08:31:43'),
(44, 1489, '2', -0.170068, 32, 0, '2017-09-13 08:31:43'),
(47, 1717, '4', 1.6875, 10, 1, '2017-09-13 08:31:44'),
(53, 762, '1', -2.07443, 17, 0, '2017-09-13 08:31:45'),
(40, 3572, '2', -0.75, 10, 0, '2017-09-13 08:31:45'),
(42, 2601, '2', 2.04187, 7, 1, '2017-09-13 08:31:45'),
(64, 1300, '0', -0.046875, 64, 0, '2017-09-13 08:31:45'),
(37, 1268, '1', 0.0638021, 41, 1, '2017-09-13 08:31:47'),
(45, 29, '2', -0.27, 14, 0, '2017-09-13 08:31:47'),
(70, 2981, '4', 2.87619, 6, 1, '2017-09-13 08:31:47'),
(61, 3035, '2', 1.2398, 10, 1, '2017-09-13 08:31:48'),
(43, 3519, '4', -1.17188, 15, 0, '2017-09-13 08:31:49'),
(49, 742, '0', -0.075, 40, 0, '2017-09-13 08:31:51'),
(69, 2950, '4', -2.32697, 32, 0, '2017-09-13 08:31:51'),
(70, 2975, '2', 2.89738, 5, 1, '2017-09-13 08:31:52'),
(36, 1146, '2', 0, 20, 0, '2017-09-13 08:31:53'),
(37, 1217, '1', -1.47, 6, 0, '2017-09-13 08:31:53'),
(38, 1201, '4', 0.0675, 17, 1, '2017-09-13 08:31:53'),
(39, 370, '1', -0.12, 16, 0, '2017-09-13 08:31:54'),
(60, 1185, '4', 0.55102, 16, 1, '2017-09-13 08:31:54'),
(52, 2939, '0', 0, 12, -1, '2017-09-13 08:31:54'),
(67, 2735, '2', -1.85, 23, 0, '2017-09-13 08:31:54'),
(42, 2632, '3', 2.55, 9, 1, '2017-09-13 08:31:55'),
(40, 3514, '3', 0.592593, 10, 1, '2017-09-13 08:31:55'),
(57, 399, '0', 0, 20, -1, '2017-09-13 08:31:55'),
(61, 1449, '1', -2.1675, 6, 0, '2017-09-13 08:31:55'),
(71, 2780, '2', -1.74, 21, 0, '2017-09-13 08:31:56'),
(45, 34, '2', 0.75, 10, 1, '2017-09-13 08:31:57'),
(69, 2937, '3', -2.91424, 5, 0, '2017-09-13 08:31:57'),
(51, 475, '4', 0.0652174, 45, 1, '2017-09-13 08:31:57'),
(56, 2420, '3', 1.41797, 30, 1, '2017-09-13 08:31:57'),
(46, 40, '0', -0.0075, 20, 0, '2017-09-13 08:31:58'),
(48, 1292, '0', -0.00333333, 30, 0, '2017-09-13 08:31:59'),
(40, 3560, '2', 1.92, 4, 1, '2017-09-13 08:31:59'),
(35, 785, '1', 2.20571, 17, 1, '2017-09-13 08:31:59'),
(70, 2973, '3', 2.81118, 9, 1, '2017-09-13 08:32:01'),
(66, 731, '1', -0.668981, 19, 0, '2017-09-13 08:32:01'),
(40, 3546, '1', 1.6875, 4, 1, '2017-09-13 08:32:03'),
(33, 1137, '2', 1.08, 8, 1, '2017-09-13 08:32:04'),
(66, 727, '2', 2.52083, 3, 1, '2017-09-13 08:32:05'),
(64, 1379, '1', -2.0625, 20, 0, '2017-09-13 08:32:06'),
(67, 2733, '4', -2.35, 13, 0, '2017-09-13 08:32:08'),
(41, 3052, '4', 0.75, 14, 1, '2017-09-13 08:32:08'),
(38, 1207, '4', 1.6875, 16, 1, '2017-09-13 08:32:09'),
(60, 1292, '4', -0.653333, 16, 0, '2017-09-13 08:32:11'),
(70, 2971, '1', -2.789, 10, 0, '2017-09-13 08:32:11'),
(47, 1719, '1', 0.27, 28, 1, '2017-09-13 08:32:12'),
(63, 2847, '4', 1.71792, 34, 1, '2017-09-13 08:32:12'),
(66, 490, '2', 1.6875, 9, 1, '2017-09-13 08:32:13'),
(56, 1136, '2', 0.0675, 17, 1, '2017-09-13 08:32:15'),
(57, 371, '0', -0.0075, 20, 0, '2017-09-13 08:32:15'),
(64, 1381, '1', -2.4, 10, 0, '2017-09-13 08:32:16'),
(61, 1467, '3', 1.2675, 21, 1, '2017-09-13 08:32:16'),
(46, 26, '1', -0.03, 18, 0, '2017-09-13 08:32:16'),
(33, 1138, '2', 0.3675, 13, 1, '2017-09-13 08:32:17'),
(45, 40, '0', -0.0075, 20, 0, '2017-09-13 08:32:17'),
(60, 1174, '3', 1.60207, 7, 1, '2017-09-13 08:32:18'),
(66, 723, '1', 2.37037, 4, 1, '2017-09-13 08:32:18'),
(50, 1275, '4', 0.333333, 36, 1, '2017-09-13 08:32:19'),
(41, 3063, '1', 0.860969, 13, 1, '2017-09-13 08:32:20'),
(64, 1119, '1', -2.75, 5, 0, '2017-09-13 08:32:21'),
(50, 171, '4', -2.77922, 3, 0, '2017-09-13 08:32:21'),
(48, 1170, '2', 0.0208333, 22, 1, '2017-09-13 08:32:22'),
(61, 1461, '3', 2.26843, 6, 1, '2017-09-13 08:32:22'),
(43, 3511, '1', -0.12, 32, 0, '2017-09-13 08:32:22'),
(69, 2940, '4', -2.50665, 25, 0, '2017-09-13 08:32:22'),
(70, 2962, '3', 2.74383, 12, 1, '2017-09-13 08:32:23'),
(68, 767, '1', 0.0638021, 41, 1, '2017-09-13 08:32:23'),
(47, 1650, '1', 0.869823, 12, 1, '2017-09-13 08:32:23'),
(31, 1286, '0', -0.000833333, 60, 0, '2017-09-13 08:32:24'),
(38, 1260, '1', -1.6875, 16, 0, '2017-09-13 08:32:24'),
(67, 2852, '2', 1.54083, 17, 1, '2017-09-13 08:32:25'),
(45, 28, '4', -1.08, 8, 0, '2017-09-13 08:32:25'),
(64, 403, '4', 2.52083, 5, 1, '2017-09-13 08:32:26'),
(39, 2420, '1', -1.29199, 33, 0, '2017-09-13 08:32:26'),
(66, 719, '3', 1.56481, 10, 1, '2017-09-13 08:32:27'),
(40, 397, '0', -0.0075, 20, 0, '2017-09-13 08:32:28'),
(44, 1505, '1', 0.574219, 45, 1, '2017-09-13 08:32:28'),
(37, 1202, '0', -0.00231481, 36, 0, '2017-09-13 08:32:29'),
(67, 2841, '3', 2.75, 5, 1, '2017-09-13 08:32:29'),
(38, 1266, '2', 2.52083, 5, 1, '2017-09-13 08:32:29'),
(46, 33, '0', 0, 13, -1, '2017-09-13 08:32:30'),
(60, 1216, '3', -0.75, 12, 0, '2017-09-13 08:32:30'),
(52, 1177, '2', 0.22314, 16, 1, '2017-09-13 08:32:30'),
(47, 1720, '3', 2.1675, 6, 1, '2017-09-13 08:32:30'),
(56, 398, '3', -0.1875, 15, 0, '2017-09-13 08:32:30'),
(70, 2977, '3', -2.8331, 8, 0, '2017-09-13 08:32:31'),
(45, 24, '3', 1.2675, 7, 1, '2017-09-13 08:32:33'),
(53, 767, '3', -0.22714, 47, 0, '2017-09-13 08:32:33'),
(35, 779, '2', -1.46703, 35, 0, '2017-09-13 08:32:35'),
(66, 718, '1', 1.61333, 8, 1, '2017-09-13 08:32:35'),
(64, 1384, '1', 2.60526, 10, 1, '2017-09-13 08:32:35'),
(63, 2820, '4', -2.17348, 23, 0, '2017-09-13 08:32:36'),
(51, 745, '0', -0.075, 40, 0, '2017-09-13 08:32:37'),
(71, 2775, '4', -0.48, 42, 0, '2017-09-13 08:32:39'),
(50, 169, '1', -1.2513, 17, 0, '2017-09-13 08:32:39'),
(48, 1177, '2', 0.0557851, 19, 1, '2017-09-13 08:32:40'),
(49, 478, '0', -0.06, 50, 0, '2017-09-13 08:32:41'),
(38, 170, '1', -2.3763, 11, 0, '2017-09-13 08:32:41'),
(43, 3490, '2', -0.75, 20, 0, '2017-09-13 08:32:42'),
(41, 3073, '4', 0.137755, 22, 1, '2017-09-13 08:32:42'),
(70, 2964, '2', -2.76655, 11, 0, '2017-09-13 08:32:43'),
(39, 366, '1', -0.12, 16, 0, '2017-09-13 08:32:43'),
(64, 1129, '3', -2.625, 8, 0, '2017-09-13 08:32:43'),
(71, 2776, '1', 2.7, 5, 1, '2017-09-13 08:32:44'),
(66, 724, '4', -1.20333, 11, 0, '2017-09-13 08:32:47'),
(52, 1291, '1', -0.0675, 17, 0, '2017-09-13 08:32:47'),
(42, 2631, '1', -0.45, 51, 0, '2017-09-13 08:32:47'),
(61, 1466, '1', -0.75, 25, 0, '2017-09-13 08:32:47'),
(47, 1721, '2', 1.12965, 17, 1, '2017-09-13 08:32:47'),
(38, 176, '2', -2.25333, 8, 0, '2017-09-13 08:32:48'),
(35, 796, '3', -2.32399, 14, 0, '2017-09-13 08:32:49'),
(41, 3006, '1', 1.6875, 7, 1, '2017-09-13 08:32:49'),
(68, 770, '1', -0.630208, 26, 0, '2017-09-13 08:32:50'),
(46, 29, '0', -0.0075, 20, 0, '2017-09-13 08:32:50'),
(70, 2630, '2', 2.85477, 7, 1, '2017-09-13 08:32:50'),
(37, 1200, '2', -0.453704, 22, 0, '2017-09-13 08:32:50'),
(57, 2406, '2', -1.0882, 35, 0, '2017-09-13 08:32:51'),
(66, 729, '3', -2.22454, 5, 0, '2017-09-13 08:32:52'),
(31, 1188, '0', -0.00382653, 28, 0, '2017-09-13 08:32:52'),
(36, 3068, '1', 1.2398, 10, 1, '2017-09-13 08:32:53'),
(61, 1450, '1', -2.08333, 6, 0, '2017-09-13 08:32:53'),
(45, 33, '0', -0.0075, 20, 0, '2017-09-13 08:32:53'),
(50, 1260, '1', -1.83105, 14, 0, '2017-09-13 08:32:53'),
(67, 2819, '1', -1.85, 23, 0, '2017-09-13 08:32:53'),
(60, 1276, '1', 0.1875, 24, 1, '2017-09-13 08:32:54'),
(69, 2896, '2', -2.17975, 33, 0, '2017-09-13 08:32:55'),
(47, 1653, '0', 0, 8, -1, '2017-09-13 08:32:55'),
(49, 751, '2', 1.97727, 15, 1, '2017-09-13 08:32:56'),
(44, 1500, '1', -0.639053, 28, 0, '2017-09-13 08:32:57'),
(53, 766, '1', 1.70531, 24, 1, '2017-09-13 08:32:57'),
(37, 1191, '3', 1.53061, 8, 1, '2017-09-13 08:32:58'),
(61, 2929, '4', 1.88021, 5, 1, '2017-09-13 08:32:58'),
(64, 1386, '3', 2.375, 15, 1, '2017-09-13 08:32:58'),
(70, 2626, '4', -2.81118, 9, 0, '2017-09-13 08:32:59'),
(36, 3013, '2', 1.85204, 6, 1, '2017-09-13 08:32:59'),
(42, 2635, '4', -2.35, 13, 0, '2017-09-13 08:32:59'),
(66, 487, '4', 1.80187, 9, 1, '2017-09-13 08:33:01'),
(57, 368, '4', -0.6075, 11, 0, '2017-09-13 08:33:01'),
(70, 2627, '2', 2.93908, 3, 1, '2017-09-13 08:33:02'),
(39, 390, '0', -0.0075, 20, 0, '2017-09-13 08:33:03'),
(46, 34, '3', -0.3675, 13, 0, '2017-09-13 08:33:03'),
(47, 1648, '1', -1.43787, 8, 0, '2017-09-13 08:33:04'),
(61, 1459, '3', -2.1675, 6, 0, '2017-09-13 08:33:04'),
(33, 2429, '1', -1.32383, 47, 0, '2017-09-13 08:33:05'),
(67, 2816, '4', 2.4, 12, 1, '2017-09-13 08:33:05'),
(51, 747, '3', -0.666667, 28, 0, '2017-09-13 08:33:06'),
(41, 3011, '3', -0.46301, 17, 0, '2017-09-13 08:33:06'),
(52, 1218, '0', -0.0075, 20, 0, '2017-09-13 08:33:07'),
(70, 2633, '3', 2.87619, 6, 1, '2017-09-13 08:33:08'),
(64, 1375, '3', -2.57812, 9, 0, '2017-09-13 08:33:08'),
(56, 2404, '1', 1.03355, 38, 1, '2017-09-13 08:33:08'),
(45, 37, '1', 0.12, 16, 1, '2017-09-13 08:33:09'),
(63, 2734, '1', -1.76169, 33, 0, '2017-09-13 08:33:09'),
(39, 1104, '3', 1.2675, 7, 1, '2017-09-13 08:33:09'),
(66, 721, '1', 1.80187, 9, 1, '2017-09-13 08:33:10'),
(48, 1297, '3', 0.75, 30, 1, '2017-09-13 08:33:10'),
(49, 502, '2', 2.08696, 14, 1, '2017-09-13 08:33:10'),
(37, 1293, '1', -0.75, 12, 0, '2017-09-13 08:33:10'),
(44, 1504, '1', 1.92, 16, 1, '2017-09-13 08:33:13'),
(68, 777, '4', -0.6862, 24, 0, '2017-09-13 08:33:14'),
(52, 1198, '2', -1.08, 8, 0, '2017-09-13 08:33:15'),
(31, 1204, '1', -0.813802, 23, 0, '2017-09-13 08:33:15'),
(66, 720, '4', 2.26247, 5, 1, '2017-09-13 08:33:15'),
(35, 468, '1', -0.90856, 25, 0, '2017-09-13 08:33:15'),
(64, 1371, '2', -2.6, 8, 0, '2017-09-13 08:33:16'),
(36, 3011, '4', 0.46301, 17, 1, '2017-09-13 08:33:16'),
(38, 1454, '2', 1.22454, 13, 1, '2017-09-13 08:33:16'),
(69, 2891, '0', 0, 21, -1, '2017-09-13 08:33:17'),
(45, 22, '1', 1.08, 8, 1, '2017-09-13 08:33:17'),
(46, 46, '2', -0.27, 14, 0, '2017-09-13 08:33:17'),
(68, 491, '1', -2.40166, 4, 0, '2017-09-13 08:33:18'),
(70, 2624, '2', 2.789, 10, 1, '2017-09-13 08:33:18'),
(60, 1287, '4', -0.630208, 26, 0, '2017-09-13 08:33:20'),
(64, 606, '3', 2.61333, 4, 1, '2017-09-13 08:33:20'),
(37, 1171, '4', 0.75, 10, 1, '2017-09-13 08:33:20'),
(57, 1115, '2', -0.0075, 19, 0, '2017-09-13 08:33:21'),
(45, 26, '4', 1.92, 4, 1, '2017-09-13 08:33:21'),
(47, 1642, '3', 0.48, 18, 1, '2017-09-13 08:33:21'),
(41, 3020, '1', -0.46301, 17, 0, '2017-09-13 08:33:23'),
(52, 1196, '2', -1.17188, 9, 0, '2017-09-13 08:33:24'),
(70, 2629, '2', -2.87848, 7, 0, '2017-09-13 08:33:25'),
(33, 369, '0', -0.0075, 20, 0, '2017-09-13 08:33:25'),
(45, 38, '2', 2.1, 6, 1, '2017-09-13 08:33:27'),
(53, 773, '4', -1.48376, 30, 0, '2017-09-13 08:33:27'),
(35, 780, '2', 2.30847, 13, 1, '2017-09-13 08:33:28'),
(36, 3052, '1', -0.979592, 12, 0, '2017-09-13 08:33:28'),
(64, 1370, '3', 2.51786, 9, 1, '2017-09-13 08:33:29'),
(66, 728, '4', -1.29848, 13, 0, '2017-09-13 08:33:29'),
(40, 2427, '4', 0.775208, 59, 1, '2017-09-13 08:33:29'),
(39, 1116, '4', 0, 20, 1, '2017-09-13 08:33:29'),
(67, 2847, '4', 1.8, 24, 1, '2017-09-13 08:33:29'),
(70, 2623, '3', -2.91834, 4, 0, '2017-09-13 08:33:30'),
(44, 1502, '4', -1.11153, 18, 0, '2017-09-13 08:33:30'),
(46, 53, '1', -0.27, 14, 0, '2017-09-13 08:33:30'),
(68, 761, '3', 1.54395, 13, 1, '2017-09-13 08:33:31'),
(50, 1256, '3', 0.309949, 38, 1, '2017-09-13 08:33:32'),
(61, 1465, '0', -0.00382653, 28, 0, '2017-09-13 08:33:33'),
(41, 3045, '3', -1.38138, 9, 0, '2017-09-13 08:33:33'),
(48, 1184, '0', -0.00520833, 24, 0, '2017-09-13 08:33:34'),
(64, 1389, '3', 2.66667, 6, 1, '2017-09-13 08:33:35'),
(66, 734, '2', 1.76333, 7, 1, '2017-09-13 08:33:36'),
(38, 1462, '1', 0.75, 20, 1, '2017-09-13 08:33:36'),
(47, 1767, '1', -1.41797, 15, 0, '2017-09-13 08:33:36'),
(40, 379, '3', 1.08, 8, 1, '2017-09-13 08:33:36'),
(71, 1459, '1', -0.091875, 33, 0, '2017-09-13 08:33:37'),
(31, 1283, '1', -0.00520833, 23, 0, '2017-09-13 08:33:38'),
(45, 21, '2', 1.35, 11, 1, '2017-09-13 08:33:38'),
(57, 393, '2', -0.03, 18, 0, '2017-09-13 08:33:39'),
(42, 2625, '2', -1.05, 39, 0, '2017-09-13 08:33:39'),
(69, 2907, '4', -2.47253, 23, 0, '2017-09-13 08:33:40'),
(41, 3009, '4', 1.53061, 8, 1, '2017-09-13 08:33:40'),
(49, 741, '1', -0.552632, 31, 0, '2017-09-13 08:33:41'),
(70, 2625, '4', -2.76655, 11, 0, '2017-09-13 08:33:41'),
(36, 3056, '4', 0.860969, 13, 1, '2017-09-13 08:33:41'),
(43, 729, '0', 0, 12, -1, '2017-09-13 08:33:43'),
(52, 1174, '3', 0.217456, 19, 1, '2017-09-13 08:33:43'),
(61, 1462, '1', 1.47, 12, 1, '2017-09-13 08:33:44'),
(35, 521, '3', -1.95924, 17, 0, '2017-09-13 08:33:45'),
(70, 2628, '4', -2.89738, 5, 0, '2017-09-13 08:33:45'),
(67, 2823, '3', 2.15, 17, 1, '2017-09-13 08:33:46'),
(46, 54, '3', -0.1875, 15, 0, '2017-09-13 08:33:46'),
(45, 20, '2', 1.8, 8, 1, '2017-09-13 08:33:46'),
(66, 481, '3', -1.57687, 11, 0, '2017-09-13 08:33:46'),
(33, 2408, '3', 1.78674, 21, 1, '2017-09-13 08:33:46'),
(37, 1281, '3', 0.03, 27, 1, '2017-09-13 08:33:47'),
(47, 1766, '3', 1.58678, 12, 1, '2017-09-13 08:33:49'),
(39, 400, '0', -0.0075, 20, 0, '2017-09-13 08:33:49'),
(38, 1449, '3', -1.36688, 13, 0, '2017-09-13 08:33:50'),
(44, 1490, '1', 0.968492, 19, 1, '2017-09-13 08:33:50'),
(52, 1173, '2', 1.2675, 7, 1, '2017-09-13 08:33:51'),
(42, 2602, '3', 1.57687, 11, 1, '2017-09-13 08:33:51'),
(60, 1199, '3', 0.0117188, 30, 1, '2017-09-13 08:33:51'),
(36, 3026, '2', 1.10587, 11, 1, '2017-09-13 08:33:52'),
(51, 750, '0', -0.0652174, 46, 0, '2017-09-13 08:33:52'),
(45, 25, '3', -2.1, 6, 0, '2017-09-13 08:33:52'),
(48, 1172, '4', 0.03, 18, 1, '2017-09-13 08:33:53'),
(33, 376, '1', -1.08, 8, 0, '2017-09-13 08:33:54'),
(64, 1097, '3', -2, 20, 0, '2017-09-13 08:33:55'),
(41, 3068, '4', -0.75, 14, 0, '2017-09-13 08:33:55'),
(35, 786, '2', -2.58532, 10, 0, '2017-09-13 08:33:55'),
(68, 763, '2', 0.6862, 24, 1, '2017-09-13 08:33:55'),
(40, 390, '4', 0.0075, 19, 1, '2017-09-13 08:33:56'),
(38, 1458, '0', 0, 7, -1, '2017-09-13 08:33:57'),
(53, 759, '4', -1.54495, 29, 0, '2017-09-13 08:33:57'),
(67, 2825, '3', 2.45, 11, 1, '2017-09-13 08:33:58'),
(39, 1133, '4', -1.08, 8, 0, '2017-09-13 08:33:58'),
(37, 1296, '3', -0.880208, 11, 0, '2017-09-13 08:33:58'),
(70, 2622, '1', -2.69752, 14, 0, '2017-09-13 08:33:59'),
(57, 385, '0', -0.0075, 20, 0, '2017-09-13 08:33:59'),
(42, 2628, '3', -2.55, 9, 0, '2017-09-13 08:34:00'),
(44, 1525, '1', 1.79132, 10, 1, '2017-09-13 08:34:00'),
(52, 1197, '1', 1.02083, 10, 1, '2017-09-13 08:34:00'),
(60, 1219, '4', -0.75, 11, 0, '2017-09-13 08:34:02'),
(37, 1299, '3', 2.64738, 4, 1, '2017-09-13 08:34:02'),
(43, 725, '0', 0, 20, -1, '2017-09-13 08:34:02'),
(45, 39, '2', 1.5, 10, 1, '2017-09-13 08:34:03'),
(69, 2902, '4', -2.41818, 25, 0, '2017-09-13 08:34:05'),
(66, 489, '4', -0.826875, 19, 0, '2017-09-13 08:34:05'),
(61, 1451, '1', 0.520833, 21, 1, '2017-09-13 08:34:06'),
(31, 2613, '3', -1.47, 12, 0, '2017-09-13 08:34:06'),
(46, 43, '0', -0.0075, 20, 0, '2017-09-13 08:34:06'),
(38, 3039, '1', 1.13609, 10, 1, '2017-09-13 08:34:07'),
(41, 3032, '2', 0.860969, 13, 1, '2017-09-13 08:34:07'),
(67, 2859, '0', 0, 10, -1, '2017-09-13 08:34:08'),
(61, 3044, '3', 2.52083, 2, 1, '2017-09-13 08:34:08'),
(40, 1121, '1', -0.3675, 13, 0, '2017-09-13 08:34:09'),
(42, 2608, '3', 1.6875, 10, 1, '2017-09-13 08:34:09'),
(70, 2631, '3', 2.73861, 10, 1, '2017-09-13 08:34:09'),
(36, 3066, '1', 0.46301, 17, 1, '2017-09-13 08:34:09'),
(47, 1770, '1', -1.12037, 21, 0, '2017-09-13 08:34:10'),
(63, 2730, '0', -0.195743, 60, 0, '2017-09-13 08:34:10'),
(49, 745, '1', -0.75, 30, 0, '2017-09-13 08:34:11'),
(71, 1455, '1', 0.0675, 34, 1, '2017-09-13 08:34:12'),
(39, 1130, '1', -0.1875, 15, 0, '2017-09-13 08:34:12'),
(51, 756, '3', -1.6875, 21, 0, '2017-09-13 08:34:13'),
(60, 1217, '3', 0.6075, 11, 1, '2017-09-13 08:34:13'),
(68, 773, '2', -1.11153, 18, 0, '2017-09-13 08:34:14'),
(53, 776, '4', -2.20571, 17, 0, '2017-09-13 08:34:14'),
(33, 396, '0', -0.0075, 20, 0, '2017-09-13 08:34:14'),
(37, 1295, '4', 0.630208, 13, 1, '2017-09-13 08:34:15'),
(61, 1455, '1', 2.04187, 7, 1, '2017-09-13 08:34:15'),
(40, 1120, '4', -1.47, 6, 0, '2017-09-13 08:34:16'),
(47, 1762, '1', -2.1675, 6, 0, '2017-09-13 08:34:16'),
(70, 2621, '3', 2.87619, 6, 1, '2017-09-13 08:34:16'),
(66, 732, '3', -1.56481, 10, 0, '2017-09-13 08:34:16'),
(43, 466, '2', -0.853333, 14, 0, '2017-09-13 08:34:16'),
(41, 3047, '3', 1.2398, 10, 1, '2017-09-13 08:34:17'),
(67, 2877, '2', 2.5, 10, 1, '2017-09-13 08:34:18'),
(68, 764, '1', -2.37037, 4, 0, '2017-09-13 08:34:18'),
(48, 1185, '2', -0.0153061, 26, 0, '2017-09-13 08:34:19'),
(42, 2619, '1', -2.08333, 10, 0, '2017-09-13 08:34:19'),
(45, 36, '4', 0.45, 17, 1, '2017-09-13 08:34:20'),
(39, 386, '1', -1.08, 8, 0, '2017-09-13 08:34:20'),
(47, 1740, '3', 2.35692, 5, 1, '2017-09-13 08:34:21'),
(71, 3004, '3', 1.33333, 10, 1, '2017-09-13 08:34:22'),
(40, 2416, '3', 2.47934, 8, 1, '2017-09-13 08:34:23'),
(36, 3009, '4', 0.646684, 15, 1, '2017-09-13 08:34:24'),
(61, 1488, '0', 0, 9, -1, '2017-09-13 08:34:25'),
(42, 2617, '1', 2.52083, 5, 1, '2017-09-13 08:34:25'),
(60, 1175, '3', -1.17188, 12, 0, '2017-09-13 08:34:25'),
(33, 1120, '2', -0.48, 12, 0, '2017-09-13 08:34:26'),
(46, 45, '0', -0.0075, 20, 0, '2017-09-13 08:34:26'),
(45, 23, '1', 1.95, 7, 1, '2017-09-13 08:34:26'),
(52, 1261, '0', 0, 28, -1, '2017-09-13 08:34:28'),
(50, 1274, '0', -0.000956633, 56, 0, '2017-09-13 08:34:29'),
(67, 2862, '2', -2.62111, 11, 0, '2017-09-13 08:34:29'),
(38, 1460, '2', -0.886106, 21, 0, '2017-09-13 08:34:29'),
(70, 2634, '4', 2.6739, 15, 1, '2017-09-13 08:34:31'),
(64, 1184, '0', -0.00520833, 24, 0, '2017-09-13 08:34:32'),
(33, 400, '1', -1.6875, 5, 0, '2017-09-13 08:34:32'),
(45, 31, '2', -2.1, 6, 0, '2017-09-13 08:34:32'),
(66, 464, '3', 0.359467, 17, 1, '2017-09-13 08:34:32'),
(70, 2617, '1', 2.95959, 2, 1, '2017-09-13 08:34:33'),
(61, 1469, '2', 1.80187, 9, 1, '2017-09-13 08:34:33'),
(44, 498, '2', 0.9075, 18, 1, '2017-09-13 08:34:34'),
(39, 1121, '1', -0.27, 14, 0, '2017-09-13 08:34:35'),
(31, 2611, '3', 0.226875, 29, 1, '2017-09-13 08:34:35'),
(45, 35, '2', 2.25, 5, 1, '2017-09-13 08:34:38'),
(33, 1105, '2', 1.47, 6, 1, '2017-09-13 08:34:38'),
(68, 775, '3', -0.886106, 21, 0, '2017-09-13 08:34:39'),
(70, 2619, '3', 2.85477, 7, 1, '2017-09-13 08:34:40'),
(46, 57, '1', 0.27, 14, 1, '2017-09-13 08:34:40'),
(47, 1751, '1', -1.30963, 19, 0, '2017-09-13 08:34:40'),
(60, 1284, '2', -0.12, 16, 0, '2017-09-13 08:34:41'),
(71, 3039, '2', -0.159763, 20, 0, '2017-09-13 08:34:42'),
(42, 2618, '3', 2.15, 17, 1, '2017-09-13 08:34:42'),
(61, 2933, '2', 1.17188, 9, 1, '2017-09-13 08:34:42'),
(38, 1453, '3', -1.5552, 14, 0, '2017-09-13 08:34:42'),
(31, 2601, '2', 1.92, 8, 1, '2017-09-13 08:34:43'),
(48, 1196, '0', -0.00520833, 24, 0, '2017-09-13 08:34:43'),
(40, 372, '3', -0.0075, 21, 0, '2017-09-13 08:34:44'),
(40, 1138, '0', -0.0075, 20, 0, '2017-09-13 08:34:44'),
(44, 719, '3', 1.56481, 10, 1, '2017-09-13 08:34:44'),
(41, 3083, '0', -0.00382653, 28, 0, '2017-09-13 08:34:45'),
(39, 1138, '1', -0.48, 12, 0, '2017-09-13 08:34:46'),
(47, 1742, '0', 0, 6, -1, '2017-09-13 08:34:47'),
(68, 766, '2', -1.96599, 8, 0, '2017-09-13 08:34:47'),
(49, 482, '1', -0.357143, 37, 0, '2017-09-13 08:34:48'),
(53, 470, '0', 0, 34, -1, '2017-09-13 08:34:48'),
(70, 2635, '1', 2.86026, 8, 1, '2017-09-13 08:34:48'),
(43, 509, '1', 0.0578704, 31, 1, '2017-09-13 08:34:48'),
(51, 732, '0', -0.00231481, 36, 0, '2017-09-13 08:34:49'),
(66, 733, '3', 1.08, 16, 1, '2017-09-13 08:34:49'),
(56, 2746, '2', 1.61333, 8, 1, '2017-09-13 08:34:50'),
(40, 368, '3', 1.47, 6, 1, '2017-09-13 08:34:50'),
(46, 51, '0', 0, 11, -1, '2017-09-13 08:34:51'),
(44, 727, '2', 1.81481, 8, 1, '2017-09-13 08:34:52'),
(64, 1172, '0', -0.0075, 20, 0, '2017-09-13 08:34:52'),
(69, 2894, '4', -1.67615, 46, 0, '2017-09-13 08:34:52'),
(36, 3063, '0', -0.00382653, 28, 0, '2017-09-13 08:34:52'),
(52, 1227, '0', -0.00520833, 24, 0, '2017-09-13 08:34:53'),
(70, 2612, '2', -2.8418, 6, 0, '2017-09-13 08:34:54'),
(66, 472, '3', -2.04187, 7, 0, '2017-09-13 08:34:56'),
(57, 3402, '1', 1.29199, 11, 1, '2017-09-13 08:34:56'),
(31, 2610, '3', 1.36688, 13, 1, '2017-09-13 08:34:57'),
(60, 1220, '2', 0.646684, 15, 1, '2017-09-13 08:34:57'),
(40, 1110, '2', 1.2675, 7, 1, '2017-09-13 08:34:58'),
(44, 494, '3', 1.92, 6, 1, '2017-09-13 08:34:58'),
(45, 30, '0', -0.15, 20, 0, '2017-09-13 08:34:58'),
(33, 394, '0', -0.0075, 20, 0, '2017-09-13 08:34:58'),
(50, 601, '4', 2.1132, 9, 1, '2017-09-13 08:34:59'),
(47, 1752, '4', -1.7328, 12, 0, '2017-09-13 08:34:59'),
(70, 2611, '3', 2.8694, 5, 1, '2017-09-13 08:34:59'),
(71, 1457, '4', 0.991875, 17, 1, '2017-09-13 08:34:59'),
(41, 3158, '4', -1.19668, 14, 0, '2017-09-13 08:35:00'),
(51, 722, '3', 1.44676, 11, 1, '2017-09-13 08:35:00'),
(56, 2738, '2', 1.33333, 10, 1, '2017-09-13 08:35:00'),
(42, 2620, '4', 2, 20, 1, '2017-09-13 08:35:02'),
(37, 1209, '2', 0.0108, 47, 1, '2017-09-13 08:35:03'),
(48, 1198, '0', -0.0075, 20, 0, '2017-09-13 08:35:03'),
(64, 1183, '2', 0.619835, 12, 1, '2017-09-13 08:35:04'),
(52, 1292, '2', -1.08, 12, 0, '2017-09-13 08:35:05'),
(45, 32, '2', -1.95, 7, 0, '2017-09-13 08:35:05'),
(66, 485, '1', 1.94093, 9, 1, '2017-09-13 08:35:05'),
(33, 363, '3', 0.9075, 9, 1, '2017-09-13 08:35:07'),
(39, 393, '0', -0.0075, 20, 0, '2017-09-13 08:35:07'),
(38, 1452, '2', 0.421875, 25, 1, '2017-09-13 08:35:07'),
(46, 41, '1', 0.0675, 17, 1, '2017-09-13 08:35:07'),
(60, 1171, '4', 0.6075, 11, 1, '2017-09-13 08:35:08'),
(41, 3042, '2', 1.38138, 9, 1, '2017-09-13 08:35:08'),
(67, 2882, '1', 1, 40, 1, '2017-09-13 08:35:09'),
(50, 852, '0', 0, 10, -1, '2017-09-13 08:35:09'),
(50, 622, '0', 0, 1, -1, '2017-09-13 08:35:09'),
(70, 2602, '2', -2.69505, 11, 0, '2017-09-13 08:35:10'),
(51, 482, '4', 2.21429, 11, 1, '2017-09-13 08:35:10'),
(63, 2733, '0', -0.195743, 60, 0, '2017-09-13 08:35:11'),
(45, 43, '1', 1.95, 7, 1, '2017-09-13 08:35:13'),
(69, 2882, '1', 2.41868, 21, 1, '2017-09-13 08:35:13'),
(52, 1190, '4', 1.53061, 8, 1, '2017-09-13 08:35:13'),
(42, 2622, '2', 2.45, 11, 1, '2017-09-13 08:35:14'),
(33, 1112, '1', -1.2675, 7, 0, '2017-09-13 08:35:14'),
(44, 732, '4', 0.835648, 17, 1, '2017-09-13 08:35:15'),
(41, 3050, '3', 1.6875, 7, 1, '2017-09-13 08:35:15'),
(43, 481, '1', 0.316875, 27, 1, '2017-09-13 08:35:15'),
(64, 1196, '4', 0.75, 12, 1, '2017-09-13 08:35:16'),
(71, 1450, '3', -0.835648, 17, 0, '2017-09-13 08:35:16'),
(70, 2603, '1', 2.81367, 7, 1, '2017-09-13 08:35:17'),
(67, 2883, '3', 2.72703, 8, 1, '2017-09-13 08:35:17'),
(68, 765, '2', 0.1875, 30, 1, '2017-09-13 08:35:17'),
(57, 3407, '4', -0.27, 21, 0, '2017-09-13 08:35:18'),
(50, 614, '3', 2.17695, 8, 1, '2017-09-13 08:35:18'),
(36, 3079, '1', -0.0153061, 26, 0, '2017-09-13 08:35:19'),
(38, 1451, '1', 1.33333, 12, 1, '2017-09-13 08:35:20'),
(53, 769, '2', -1.33081, 31, 0, '2017-09-13 08:35:20'),
(47, 1768, '2', -1.0535, 22, 0, '2017-09-13 08:35:21'),
(37, 171, '2', -1.74422, 19, 0, '2017-09-13 08:35:21'),
(46, 50, '1', 0.3675, 13, 1, '2017-09-13 08:35:21'),
(66, 725, '4', 0.66436, 18, 1, '2017-09-13 08:35:23'),
(43, 735, '1', -1.33333, 10, 0, '2017-09-13 08:35:25'),
(56, 2758, '1', -0.0833333, 25, 0, '2017-09-13 08:35:25'),
(50, 1311, '4', 2.1168, 8, 1, '2017-09-13 08:35:25'),
(40, 2413, '0', 0, 28, -1, '2017-09-13 08:35:26'),
(41, 3013, '2', 1.2398, 10, 1, '2017-09-13 08:35:26'),
(46, 56, '0', 0, 6, -1, '2017-09-13 08:35:27'),
(52, 1184, '3', -0.421875, 15, 0, '2017-09-13 08:35:28'),
(68, 493, '3', -1.33333, 10, 0, '2017-09-13 08:35:28'),
(67, 2884, '3', -2.62111, 11, 0, '2017-09-13 08:35:28'),
(71, 3035, '2', 0.979592, 12, 1, '2017-09-13 08:35:28'),
(69, 2909, '4', 2.6739, 15, 1, '2017-09-13 08:35:29'),
(31, 2615, '1', 0.12, 32, 1, '2017-09-13 08:35:29'),
(45, 59, '3', -0.45, 17, 0, '2017-09-13 08:35:29'),
(39, 2422, '2', -2.01874, 23, 0, '2017-09-13 08:35:30'),
(48, 1194, '1', 0.0153061, 26, 1, '2017-09-13 08:35:30'),
(44, 472, '1', 1.08, 16, 1, '2017-09-13 08:35:31'),
(38, 1465, '1', 1.10587, 11, 1, '2017-09-13 08:35:31'),
(40, 1114, '3', -1.2675, 7, 0, '2017-09-13 08:35:33'),
(43, 727, '2', 1.81481, 8, 1, '2017-09-13 08:35:33'),
(49, 752, '0', -0.0652174, 46, 0, '2017-09-13 08:35:34'),
(33, 384, '0', -0.0075, 20, 0, '2017-09-13 08:35:34'),
(71, 2929, '0', 0, 6, -1, '2017-09-13 08:35:34'),
(46, 44, '2', -1.08, 8, 0, '2017-09-13 08:35:35'),
(57, 3399, '0', 0, 17, -1, '2017-09-13 08:35:35'),
(31, 2608, '3', 1.92, 8, 1, '2017-09-13 08:35:36'),
(50, 854, '1', 2.13122, 11, 1, '2017-09-13 08:35:37'),
(40, 364, '2', 1.6875, 5, 1, '2017-09-13 08:35:38'),
(67, 2889, '3', -2.65665, 10, 0, '2017-09-13 08:35:38'),
(45, 52, '2', -1.65, 9, 0, '2017-09-13 08:35:38'),
(38, 1463, '2', 2.00826, 8, 1, '2017-09-13 08:35:39'),
(69, 2893, '4', 2.76655, 11, 1, '2017-09-13 08:35:39'),
(53, 771, '2', -2.10309, 19, 0, '2017-09-13 08:35:39'),
(42, 2629, '2', -1.7, 26, 0, '2017-09-13 08:35:39'),
(44, 486, '1', 1.81481, 8, 1, '2017-09-13 08:35:39'),
(66, 465, '2', 0.653333, 16, 1, '2017-09-13 08:35:40'),
(68, 759, '4', -1.63894, 12, 0, '2017-09-13 08:35:40'),
(47, 1760, '3', -0.892562, 20, 0, '2017-09-13 08:35:41'),
(31, 2605, '2', 2.1675, 6, 1, '2017-09-13 08:35:43'),
(52, 1186, '3', 0.646684, 15, 1, '2017-09-13 08:35:43'),
(64, 1185, '0', -0.00382653, 28, 0, '2017-09-13 08:35:44'),
(43, 490, '2', 1.33333, 12, 1, '2017-09-13 08:35:45'),
(36, 3083, '0', -0.00382653, 28, 0, '2017-09-13 08:35:47'),
(41, 3079, '2', 0.137755, 22, 1, '2017-09-13 08:35:47'),
(71, 1461, '4', -1.54395, 13, 0, '2017-09-13 08:35:48'),
(53, 797, '1', 2.54772, 10, 1, '2017-09-13 08:35:49'),
(39, 367, '4', -0.0075, 19, 0, '2017-09-13 08:35:49'),
(31, 2612, '1', 2.04187, 7, 1, '2017-09-13 08:35:49'),
(56, 2759, '1', -0.0833333, 25, 0, '2017-09-13 08:35:50'),
(51, 480, '0', -0.075, 40, 0, '2017-09-13 08:35:51'),
(70, 3079, '3', -0.0153061, 26, 0, '2017-09-13 08:35:51'),
(69, 2895, '2', 2.72082, 13, 1, '2017-09-13 08:35:52'),
(48, 1270, '1', -0.75, 23, 0, '2017-09-13 08:35:53'),
(50, 615, '2', 1.61333, 16, 1, '2017-09-13 08:35:53'),
(52, 1183, '2', 0.892562, 10, 1, '2017-09-13 08:35:53'),
(40, 371, '4', 0.12, 16, 1, '2017-09-13 08:35:54'),
(66, 498, '2', 1.2675, 14, 1, '2017-09-13 08:35:54'),
(43, 486, '1', 1.6875, 9, 1, '2017-09-13 08:35:54'),
(33, 390, '0', -0.0075, 20, 0, '2017-09-13 08:35:54'),
(46, 42, '0', -0.0075, 20, 0, '2017-09-13 08:35:55'),
(67, 2864, '2', 2.2, 16, 1, '2017-09-13 08:35:55'),
(39, 2418, '2', 2.49797, 7, 1, '2017-09-13 08:35:55'),
(60, 1269, '0', -0.00130208, 48, 0, '2017-09-13 08:35:56'),
(44, 735, '4', 0.563333, 17, 1, '2017-09-13 08:35:57'),
(38, 1456, '1', 0.826875, 19, 1, '2017-09-13 08:35:58'),
(45, 51, '0', -0.15, 20, 0, '2017-09-13 08:35:58'),
(41, 3028, '1', -0.979592, 12, 0, '2017-09-13 08:36:00'),
(57, 3404, '4', 0.143555, 25, 1, '2017-09-13 08:36:01'),
(70, 3068, '3', -1.2398, 10, 0, '2017-09-13 08:36:02');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(47, 1789, '1', -0.886106, 21, 0, '2017-09-13 08:36:02'),
(49, 757, '2', 1.17391, 28, 1, '2017-09-13 08:36:02'),
(64, 1197, '1', 0.0833333, 20, 1, '2017-09-13 08:36:04'),
(42, 2634, '0', 0, 24, -1, '2017-09-13 08:36:04'),
(38, 1459, '3', -2.04187, 7, 0, '2017-09-13 08:36:05'),
(68, 774, '1', 0.688802, 25, 1, '2017-09-13 08:36:05'),
(71, 1465, '1', 0.46301, 17, 1, '2017-09-13 08:36:05'),
(33, 1136, '1', -0.6075, 11, 0, '2017-09-13 08:36:05'),
(45, 57, '1', 2.1, 6, 1, '2017-09-13 08:36:05'),
(66, 735, '4', 1.08, 12, 1, '2017-09-13 08:36:06'),
(36, 3040, '1', 0.244898, 20, 1, '2017-09-13 08:36:06'),
(50, 1341, '3', -2.35, 13, 0, '2017-09-13 08:36:07'),
(46, 48, '2', 0.27, 14, 1, '2017-09-13 08:36:09'),
(33, 2400, '3', 2.66694, 4, 1, '2017-09-13 08:36:09'),
(67, 2885, '4', 2.513, 14, 1, '2017-09-13 08:36:09'),
(53, 500, '2', 1.88988, 20, 1, '2017-09-13 08:36:10'),
(71, 1454, '3', -2.08333, 6, 0, '2017-09-13 08:36:11'),
(36, 3032, '2', 2.02423, 5, 1, '2017-09-13 08:36:11'),
(40, 382, '4', 0.0075, 19, 1, '2017-09-13 08:36:12'),
(63, 3401, '0', 0, 16, -1, '2017-09-13 08:36:13'),
(69, 2945, '3', -2.59872, 21, 0, '2017-09-13 08:36:13'),
(50, 1301, '1', -2.37964, 7, 0, '2017-09-13 08:36:13'),
(56, 2747, '3', -0.0833333, 25, 0, '2017-09-13 08:36:15'),
(44, 502, '2', 1.82609, 18, 1, '2017-09-13 08:36:15'),
(52, 1203, '0', 0, 22, -1, '2017-09-13 08:36:15'),
(38, 3051, '3', 0.998521, 11, 1, '2017-09-13 08:36:16'),
(31, 2614, '3', -0.3675, 26, 0, '2017-09-13 08:36:16'),
(48, 1169, '0', -0.00520833, 24, 0, '2017-09-13 08:36:17'),
(45, 46, '3', -1.2, 12, 0, '2017-09-13 08:36:17'),
(67, 2886, '1', 2.69195, 9, 1, '2017-09-13 08:36:18'),
(43, 734, '2', 0.163333, 23, 1, '2017-09-13 08:36:18'),
(46, 49, '1', -0.9075, 9, 0, '2017-09-13 08:36:18'),
(70, 3052, '4', 0.46301, 17, 1, '2017-09-13 08:36:19'),
(39, 2410, '2', 1.58206, 23, 1, '2017-09-13 08:36:19'),
(41, 3066, '3', -0.244898, 20, 0, '2017-09-13 08:36:19'),
(36, 3018, '1', 1.2398, 10, 1, '2017-09-13 08:36:21'),
(37, 1250, '0', -0.000833333, 60, 0, '2017-09-13 08:36:21'),
(68, 470, '2', -1.08, 16, 0, '2017-09-13 08:36:22'),
(42, 2626, '2', -2.1, 18, 0, '2017-09-13 08:36:22'),
(40, 2406, '1', -2.41774, 9, 0, '2017-09-13 08:36:22'),
(71, 1456, '1', 1.57687, 11, 1, '2017-09-13 08:36:22'),
(39, 384, '2', -1.6875, 5, 0, '2017-09-13 08:36:23'),
(69, 2897, '0', 0, 9, -1, '2017-09-13 08:36:23'),
(67, 2870, '2', -2.83093, 5, 0, '2017-09-13 08:36:23'),
(53, 779, '2', -2.35532, 14, 0, '2017-09-13 08:36:24'),
(52, 1216, '4', 1.02083, 10, 1, '2017-09-13 08:36:26'),
(57, 3400, '4', -0.105469, 26, 0, '2017-09-13 08:36:27'),
(71, 1458, '0', 0, 5, -1, '2017-09-13 08:36:27'),
(45, 56, '3', 1.5, 10, 1, '2017-09-13 08:36:27'),
(33, 388, '4', -0.03, 18, 0, '2017-09-13 08:36:28'),
(50, 593, '0', 0, 15, -1, '2017-09-13 08:36:28'),
(36, 3028, '2', 1.53061, 8, 1, '2017-09-13 08:36:29'),
(70, 3047, '1', -1.10587, 11, 0, '2017-09-13 08:36:30'),
(44, 499, '3', -1.81579, 15, 0, '2017-09-13 08:36:31'),
(69, 2898, '0', 0, 10, -1, '2017-09-13 08:36:32'),
(60, 1265, '1', -0.284024, 36, 0, '2017-09-13 08:36:33'),
(56, 2744, '1', 0.48, 18, 1, '2017-09-13 08:36:33'),
(46, 47, '3', -0.12, 16, 0, '2017-09-13 08:36:34'),
(64, 1203, '0', -0.00333333, 30, 0, '2017-09-13 08:36:34'),
(71, 1462, '1', 2.04187, 7, 1, '2017-09-13 08:36:34'),
(31, 2609, '2', 0.9075, 18, 1, '2017-09-13 08:36:34'),
(66, 483, '4', -1.04348, 30, 0, '2017-09-13 08:36:37'),
(41, 3024, '1', 0.46301, 17, 1, '2017-09-13 08:36:37'),
(40, 389, '0', 0, 15, -1, '2017-09-13 08:36:38'),
(70, 3020, '1', -1.53061, 8, 0, '2017-09-13 08:36:38'),
(66, 486, '1', 2.37037, 4, 1, '2017-09-13 08:36:40'),
(48, 1210, '0', -0.00520833, 24, 0, '2017-09-13 08:36:41'),
(33, 391, '3', -0.27, 14, 0, '2017-09-13 08:36:41'),
(45, 41, '2', -0.75, 15, 0, '2017-09-13 08:36:42'),
(44, 741, '4', -1.97368, 13, 0, '2017-09-13 08:36:43'),
(43, 464, '1', -0.00443787, 25, 0, '2017-09-13 08:36:43'),
(39, 382, '0', -0.0075, 20, 0, '2017-09-13 08:36:43'),
(47, 1195, '0', -0.0075, 20, 0, '2017-09-13 08:36:43'),
(63, 3409, '0', -0.00333333, 30, 0, '2017-09-13 08:36:44'),
(60, 1293, '1', -0.880208, 11, 0, '2017-09-13 08:36:44'),
(71, 3044, '3', 0.880208, 11, 1, '2017-09-13 08:36:45'),
(40, 2420, '3', 2.52083, 8, 1, '2017-09-13 08:36:45'),
(31, 2607, '4', 1.57687, 11, 1, '2017-09-13 08:36:46'),
(36, 3119, '3', -1.57895, 18, 0, '2017-09-13 08:36:48'),
(41, 3018, '3', -1.10587, 11, 0, '2017-09-13 08:36:48'),
(38, 1466, '4', -0.3888, 32, 0, '2017-09-13 08:36:48'),
(57, 3398, '4', -0.354492, 21, 0, '2017-09-13 08:36:48'),
(69, 2904, '3', 2.64998, 16, 1, '2017-09-13 08:36:48'),
(33, 1133, '3', 1.2675, 7, 1, '2017-09-13 08:36:48'),
(68, 790, '4', -0.27, 28, 0, '2017-09-13 08:36:49'),
(45, 49, '2', 1.65, 9, 1, '2017-09-13 08:36:51'),
(46, 60, '3', -0.03, 18, 0, '2017-09-13 08:36:52'),
(71, 1460, '0', 0, 8, -1, '2017-09-13 08:36:53'),
(33, 375, '1', 1.6875, 5, 1, '2017-09-13 08:36:54'),
(40, 2410, '2', 2.39158, 9, 1, '2017-09-13 08:36:54'),
(64, 1291, '0', -0.0075, 20, 0, '2017-09-13 08:36:54'),
(43, 728, '0', 0, 11, -1, '2017-09-13 08:36:54'),
(36, 3047, '1', -1.53061, 8, 0, '2017-09-13 08:36:55'),
(70, 3026, '2', 0.382653, 18, 1, '2017-09-13 08:36:56'),
(44, 481, '3', -1.36688, 13, 0, '2017-09-13 08:36:56'),
(56, 2748, '4', -0.163333, 23, 0, '2017-09-13 08:36:56'),
(52, 1276, '1', 0.00292969, 31, 1, '2017-09-13 08:36:57'),
(50, 624, '1', 0.75, 30, 1, '2017-09-13 08:36:59'),
(66, 502, '2', 1.76087, 19, 1, '2017-09-13 08:37:00'),
(42, 2616, '4', 1.15, 37, 1, '2017-09-13 08:37:00'),
(45, 58, '3', -1.65, 9, 0, '2017-09-13 08:37:00'),
(70, 3009, '1', -2.02423, 5, 0, '2017-09-13 08:37:01'),
(37, 1206, '3', -0.300833, 41, 0, '2017-09-13 08:37:02'),
(39, 2427, '4', 2.08333, 20, 1, '2017-09-13 08:37:03'),
(69, 2952, '4', -2.72568, 15, 0, '2017-09-13 08:37:04'),
(41, 3026, '4', -0.382653, 18, 0, '2017-09-13 08:37:05'),
(47, 1177, '0', -0.00619835, 22, 0, '2017-09-13 08:37:06'),
(36, 3055, '2', -1.10587, 11, 0, '2017-09-13 08:37:06'),
(52, 1210, '2', -1.17188, 9, 0, '2017-09-13 08:37:07'),
(57, 3397, '3', -0.495117, 19, 0, '2017-09-13 08:37:07'),
(48, 1174, '0', -0.00443787, 26, 0, '2017-09-13 08:37:07'),
(60, 1294, '0', -0.00520833, 24, 0, '2017-09-13 08:37:08'),
(66, 740, '1', 2.25, 9, 1, '2017-09-13 08:37:09'),
(56, 2740, '3', 0.963333, 13, 1, '2017-09-13 08:37:09'),
(45, 53, '3', -1.5, 10, 0, '2017-09-13 08:37:10'),
(50, 403, '1', -1.92, 12, 0, '2017-09-13 08:37:11'),
(33, 392, '4', -0.0675, 17, 0, '2017-09-13 08:37:11'),
(67, 2855, '1', -1.02599, 48, 0, '2017-09-13 08:37:11'),
(46, 52, '0', -0.0075, 20, 0, '2017-09-13 08:37:12'),
(63, 3408, '3', 0.0133333, 28, 1, '2017-09-13 08:37:12'),
(38, 1461, '3', 0.75, 23, 1, '2017-09-13 08:37:12'),
(37, 1264, '3', -2.15978, 10, 0, '2017-09-13 08:37:12'),
(64, 1210, '1', 0.130208, 19, 1, '2017-09-13 08:37:13'),
(40, 384, '0', -0.0075, 20, 0, '2017-09-13 08:37:14'),
(52, 1172, '2', -0.9075, 9, 0, '2017-09-13 08:37:15'),
(42, 2627, '2', 2.25, 15, 1, '2017-09-13 08:37:15'),
(71, 1449, '3', -0.676875, 21, 0, '2017-09-13 08:37:15'),
(36, 3006, '1', 1.38138, 9, 1, '2017-09-13 08:37:16'),
(43, 465, '2', 0.213333, 22, 1, '2017-09-13 08:37:16'),
(70, 3006, '2', -0.55102, 16, 0, '2017-09-13 08:37:17'),
(38, 1457, '2', -1.92, 8, 0, '2017-09-13 08:37:20'),
(67, 2871, '2', 2.69195, 9, 1, '2017-09-13 08:37:20'),
(39, 372, '4', 0.0675, 17, 1, '2017-09-13 08:37:20'),
(36, 3050, '3', 1.85204, 6, 1, '2017-09-13 08:37:21'),
(47, 1216, '1', -0.421875, 15, 0, '2017-09-13 08:37:21'),
(44, 728, '1', 0.351108, 25, 1, '2017-09-13 08:37:21'),
(43, 736, '1', 2.0346, 6, 1, '2017-09-13 08:37:22'),
(45, 55, '2', -1.2, 12, 0, '2017-09-13 08:37:22'),
(46, 58, '1', 0.6075, 11, 1, '2017-09-13 08:37:23'),
(50, 606, '2', -1.84083, 13, 0, '2017-09-13 08:37:24'),
(33, 389, '3', -0.1875, 15, 0, '2017-09-13 08:37:26'),
(38, 3004, '2', -1.76333, 7, 0, '2017-09-13 08:37:27'),
(48, 1218, '0', -0.0075, 20, 0, '2017-09-13 08:37:27'),
(45, 54, '3', -2.1, 6, 0, '2017-09-13 08:37:28'),
(66, 477, '3', -1.69565, 20, 0, '2017-09-13 08:37:29'),
(57, 3416, '3', -0.163333, 23, 0, '2017-09-13 08:37:30'),
(41, 3040, '1', 0.0344388, 25, 1, '2017-09-13 08:37:30'),
(31, 2634, '4', 0.75, 45, 1, '2017-09-13 08:37:31'),
(46, 59, '3', -1.08, 8, 0, '2017-09-13 08:37:31'),
(70, 3045, '1', 0.75, 14, 1, '2017-09-13 08:37:31'),
(60, 1202, '1', 0.391204, 23, 1, '2017-09-13 08:37:31'),
(47, 1218, '1', -0.75, 10, 0, '2017-09-13 08:37:32'),
(39, 369, '2', 0.48, 12, 1, '2017-09-13 08:37:32'),
(40, 388, '0', -0.0075, 20, 0, '2017-09-13 08:37:35'),
(56, 2763, '1', 0.0833333, 25, 1, '2017-09-13 08:37:35'),
(70, 3042, '1', -1.85204, 6, 0, '2017-09-13 08:37:37'),
(50, 850, '3', 1.84083, 13, 1, '2017-09-13 08:37:38'),
(37, 1286, '3', -0.963333, 26, 0, '2017-09-13 08:37:39'),
(36, 3024, '4', -0.382653, 18, 0, '2017-09-13 08:37:39'),
(48, 1195, '4', 0.48, 12, 1, '2017-09-13 08:37:39'),
(45, 48, '2', 1.35, 11, 1, '2017-09-13 08:37:40'),
(67, 2888, '2', -2.32743, 19, 0, '2017-09-13 08:37:40'),
(38, 1455, '3', -1.17188, 15, 0, '2017-09-13 08:37:42'),
(41, 3055, '4', 0.979592, 12, 1, '2017-09-13 08:37:42'),
(37, 1298, '3', -2.61333, 4, 0, '2017-09-13 08:37:42'),
(63, 3407, '0', -0.00333333, 30, 0, '2017-09-13 08:37:42'),
(39, 385, '2', -0.6075, 11, 0, '2017-09-13 08:37:43'),
(66, 745, '3', -1.8, 16, 0, '2017-09-13 08:37:45'),
(50, 1091, '2', -2.25333, 8, 0, '2017-09-13 08:37:45'),
(40, 1115, '1', 0.75, 10, 1, '2017-09-13 08:37:45'),
(44, 509, '2', -0.333333, 24, 0, '2017-09-13 08:37:46'),
(45, 44, '2', -1.95, 7, 0, '2017-09-13 08:37:47'),
(31, 2632, '3', 2.15, 17, 1, '2017-09-13 08:37:48'),
(36, 3020, '1', -1.38138, 9, 0, '2017-09-13 08:37:49'),
(46, 55, '1', 0.03, 18, 1, '2017-09-13 08:37:49'),
(38, 3035, '2', 1.6875, 7, 1, '2017-09-13 08:37:49'),
(48, 1173, '2', 0.6075, 11, 1, '2017-09-13 08:37:51'),
(64, 1261, '0', -0.00207756, 38, 0, '2017-09-13 08:37:51'),
(44, 490, '2', 2.08333, 6, 1, '2017-09-13 08:37:52'),
(71, 1632, '3', 0.333333, 20, 1, '2017-09-13 08:37:52'),
(47, 1292, '2', -0.27, 21, 0, '2017-09-13 08:37:53'),
(37, 1275, '1', -1.90226, 11, 0, '2017-09-13 08:37:53'),
(56, 2757, '0', 0, 18, -1, '2017-09-13 08:37:54'),
(52, 1270, '0', 0, 38, -1, '2017-09-13 08:37:54'),
(70, 3016, '4', -0.46301, 17, 0, '2017-09-13 08:37:55'),
(66, 746, '4', 2.16667, 10, 1, '2017-09-13 08:37:55'),
(60, 1282, '3', 0.0833333, 25, 1, '2017-09-13 08:37:57'),
(57, 3412, '2', -0.03, 27, 0, '2017-09-13 08:37:57'),
(67, 2861, '3', -2.36512, 18, 0, '2017-09-13 08:37:57'),
(38, 1450, '1', -1.6875, 9, 0, '2017-09-13 08:37:58'),
(63, 3398, '2', -0.75, 16, 0, '2017-09-13 08:37:59'),
(33, 2411, '1', -1.47, 33, 0, '2017-09-13 08:37:59'),
(45, 47, '1', 1.05, 13, 1, '2017-09-13 08:38:00'),
(53, 6, '4', -0.27, 14, 0, '2017-09-13 08:38:00'),
(37, 1188, '2', -1.6875, 7, 0, '2017-09-13 08:38:01'),
(46, 68, '3', 0.48, 12, 1, '2017-09-13 08:38:01'),
(50, 1310, '4', 1.43787, 16, 1, '2017-09-13 08:38:01'),
(52, 1194, '1', 1.6875, 7, 1, '2017-09-13 08:38:01'),
(64, 1218, '1', -0.6075, 11, 0, '2017-09-13 08:38:02'),
(43, 737, '0', -0.001875, 40, 0, '2017-09-13 08:38:02'),
(43, 498, '4', 0, 40, 0, '2017-09-13 08:38:02'),
(71, 1634, '3', 0.880208, 11, 1, '2017-09-13 08:38:04'),
(47, 1297, '3', 2.00083, 11, 1, '2017-09-13 08:38:04'),
(48, 1183, '2', 0.396694, 14, 1, '2017-09-13 08:38:04'),
(51, 5, '0', -0.0075, 20, 0, '2017-09-13 08:38:06'),
(51, 7, '1', 0, 20, 1, '2017-09-13 08:38:06'),
(67, 2868, '2', 2.6, 8, 1, '2017-09-13 08:38:06'),
(37, 1176, '2', -1.6875, 7, 0, '2017-09-13 08:38:07'),
(41, 3016, '2', -0.0344388, 25, 0, '2017-09-13 08:38:07'),
(45, 60, '1', 1.95, 7, 1, '2017-09-13 08:38:08'),
(44, 721, '2', -1.08, 16, 0, '2017-09-13 08:38:08'),
(56, 2741, '3', 0.75, 15, 1, '2017-09-13 08:38:08'),
(36, 3042, '2', 0.1875, 21, 1, '2017-09-13 08:38:09'),
(64, 1170, '2', 1.33333, 8, 1, '2017-09-13 08:38:11'),
(33, 382, '3', -0.6075, 11, 0, '2017-09-13 08:38:11'),
(49, 18, '4', 0.12, 16, 1, '2017-09-13 08:38:12'),
(31, 2631, '2', -1.8, 24, 0, '2017-09-13 08:38:12'),
(38, 3044, '3', 0.520833, 14, 1, '2017-09-13 08:38:12'),
(71, 1633, '1', -1.28254, 9, 0, '2017-09-13 08:38:12'),
(68, 2609, '4', -1.17188, 15, 0, '2017-09-13 08:38:13'),
(46, 63, '2', -0.3675, 13, 0, '2017-09-13 08:38:14'),
(37, 1187, '1', -1.83105, 7, 0, '2017-09-13 08:38:14'),
(50, 1318, '2', 1.76881, 13, 1, '2017-09-13 08:38:14'),
(53, 19, '1', -0.27, 14, 0, '2017-09-13 08:38:14'),
(42, 2630, '2', 0, 60, 1, '2017-09-13 08:38:16'),
(39, 2413, '1', 1.23381, 33, 1, '2017-09-13 08:38:16'),
(67, 2865, '2', -2.65665, 10, 0, '2017-09-13 08:38:16'),
(47, 1172, '4', 0.3675, 13, 1, '2017-09-13 08:38:17'),
(45, 42, '1', -1.35, 11, 0, '2017-09-13 08:38:18'),
(46, 71, '2', -1.92, 4, 0, '2017-09-13 08:38:18'),
(68, 2607, '4', 2.29688, 5, 1, '2017-09-13 08:38:18'),
(31, 2620, '2', -2.65, 7, 0, '2017-09-13 08:38:19'),
(52, 1297, '3', 1.47, 18, 1, '2017-09-13 08:38:19'),
(43, 719, '3', 0.835648, 17, 1, '2017-09-13 08:38:20'),
(63, 3404, '4', 0.292969, 22, 1, '2017-09-13 08:38:21'),
(33, 2403, '2', 2.31148, 11, 1, '2017-09-13 08:38:22'),
(66, 750, '4', -1.30435, 26, 0, '2017-09-13 08:38:22'),
(68, 2606, '1', 2.43, 4, 1, '2017-09-13 08:38:22'),
(71, 1641, '3', 1.2398, 10, 1, '2017-09-13 08:38:22'),
(57, 3401, '1', -0.143555, 25, 0, '2017-09-13 08:38:22'),
(64, 1186, '3', 0.979592, 12, 1, '2017-09-13 08:38:23'),
(44, 729, '2', 1.02083, 15, 1, '2017-09-13 08:38:23'),
(70, 3073, '0', -0.00382653, 28, 0, '2017-09-13 08:38:23'),
(49, 5, '1', -0.48, 12, 0, '2017-09-13 08:38:24'),
(38, 1467, '3', 1.92, 12, 1, '2017-09-13 08:38:24'),
(41, 3056, '3', -0.46301, 17, 0, '2017-09-13 08:38:25'),
(66, 744, '4', -2.7, 4, 0, '2017-09-13 08:38:25'),
(53, 14, '3', -0.6075, 11, 0, '2017-09-13 08:38:26'),
(51, 10, '0', -0.0075, 20, 0, '2017-09-13 08:38:26'),
(36, 3158, '2', 0.916205, 17, 1, '2017-09-13 08:38:26'),
(40, 2419, '2', 1.2675, 42, 1, '2017-09-13 08:38:27'),
(39, 399, '1', 0.6075, 11, 1, '2017-09-13 08:38:28'),
(67, 2874, '2', -2.35, 13, 0, '2017-09-13 08:38:29'),
(56, 2750, '4', 0.27, 21, 1, '2017-09-13 08:38:30'),
(50, 596, '1', 1.40844, 17, 1, '2017-09-13 08:38:31'),
(71, 1635, '2', -1.47, 9, 0, '2017-09-13 08:38:32'),
(31, 2603, '4', -1.36688, 13, 0, '2017-09-13 08:38:32'),
(68, 2602, '3', 1.6875, 10, 1, '2017-09-13 08:38:32'),
(36, 3045, '1', 1.38138, 9, 1, '2017-09-13 08:38:35'),
(41, 3123, '1', -1.51454, 11, 0, '2017-09-13 08:38:35'),
(48, 1276, '0', -0.00292969, 32, 0, '2017-09-13 08:38:36'),
(43, 724, '1', 0.563333, 17, 1, '2017-09-13 08:38:36'),
(63, 3397, '1', -0.75, 16, 0, '2017-09-13 08:38:37'),
(70, 3011, '2', -0.75, 14, 0, '2017-09-13 08:38:37'),
(46, 67, '2', -0.0075, 19, 0, '2017-09-13 08:38:37'),
(44, 487, '4', 1.2675, 14, 1, '2017-09-13 08:38:38'),
(49, 3, '2', -0.27, 14, 0, '2017-09-13 08:38:38'),
(60, 1257, '4', 0.0638021, 41, 1, '2017-09-13 08:38:38'),
(39, 375, '4', -0.75, 10, 0, '2017-09-13 08:38:38'),
(45, 50, '0', -0.15, 20, 0, '2017-09-13 08:38:38'),
(68, 2612, '2', -2.04187, 7, 0, '2017-09-13 08:38:39'),
(47, 1227, '0', -0.00520833, 24, 0, '2017-09-13 08:38:41'),
(33, 2413, '3', -1.88882, 19, 0, '2017-09-13 08:38:41'),
(70, 3055, '4', 2.20408, 4, 1, '2017-09-13 08:38:42'),
(31, 2606, '1', 1.80187, 9, 1, '2017-09-13 08:38:42'),
(57, 3409, '3', -0.403333, 19, 0, '2017-09-13 08:38:42'),
(42, 2621, '2', -1.65, 27, 0, '2017-09-13 08:38:43'),
(39, 398, '4', -1.6875, 5, 0, '2017-09-13 08:38:43'),
(52, 1170, '0', -0.00520833, 24, 0, '2017-09-13 08:38:44'),
(51, 19, '0', 0, 18, -1, '2017-09-13 08:38:44'),
(67, 2879, '2', 2.2, 16, 1, '2017-09-13 08:38:45'),
(43, 723, '1', 1.81481, 8, 1, '2017-09-13 08:38:45'),
(50, 609, '1', -1.76333, 14, 0, '2017-09-13 08:38:46'),
(68, 2610, '3', 2.1675, 6, 1, '2017-09-13 08:38:46'),
(71, 1695, '3', 1.64609, 14, 1, '2017-09-13 08:38:46'),
(53, 4, '0', -0.0075, 20, 0, '2017-09-13 08:38:46'),
(70, 3028, '1', -1.85204, 6, 0, '2017-09-13 08:38:47'),
(41, 3291, '2', 1.51454, 11, 1, '2017-09-13 08:38:47'),
(39, 1137, '2', 0.75, 10, 1, '2017-09-13 08:38:52'),
(60, 1189, '3', 0.646684, 15, 1, '2017-09-13 08:38:53'),
(56, 2755, '3', 0.12, 24, 1, '2017-09-13 08:38:54'),
(47, 1169, '2', 0.630208, 13, 1, '2017-09-13 08:38:54'),
(63, 3399, '1', -0.65918, 17, 0, '2017-09-13 08:38:55'),
(41, 3102, '2', -1.86981, 8, 0, '2017-09-13 08:38:55'),
(38, 1464, '2', 0.421875, 30, 1, '2017-09-13 08:38:55'),
(46, 72, '2', -0.0075, 19, 0, '2017-09-13 08:38:55'),
(44, 743, '1', -1.33333, 20, 0, '2017-09-13 08:38:58'),
(49, 8, '0', -0.0075, 20, 0, '2017-09-13 08:38:58'),
(45, 45, '3', -0.15, 19, 0, '2017-09-13 08:38:58'),
(33, 377, '1', -0.0675, 17, 0, '2017-09-13 08:38:58'),
(57, 3406, '3', -0.653333, 16, 0, '2017-09-13 08:38:58'),
(31, 2602, '2', -0.991875, 17, 0, '2017-09-13 08:38:59'),
(66, 755, '2', -0.875, 34, 0, '2017-09-13 08:38:59'),
(48, 1216, '4', 0.00520833, 23, 1, '2017-09-13 08:39:00'),
(67, 2887, '2', -2.2, 16, 0, '2017-09-13 08:39:01'),
(53, 8, '2', 0.12, 16, 1, '2017-09-13 08:39:02'),
(44, 723, '1', 2.37037, 4, 1, '2017-09-13 08:39:02'),
(43, 720, '1', -0.831025, 18, 0, '2017-09-13 08:39:03'),
(66, 494, '3', 2.25333, 4, 1, '2017-09-13 08:39:03'),
(52, 1195, '1', 0, 20, 0, '2017-09-13 08:39:04'),
(51, 18, '4', 0.0075, 19, 1, '2017-09-13 08:39:04'),
(38, 2929, '4', 1.17188, 9, 1, '2017-09-13 08:39:04'),
(40, 2455, '4', -1.89, 37, 0, '2017-09-13 08:39:04'),
(39, 2419, '2', 2.38521, 13, 1, '2017-09-13 08:39:06'),
(41, 3142, '4', 1.40443, 12, 1, '2017-09-13 08:39:06'),
(45, 61, '1', 1.5, 10, 1, '2017-09-13 08:39:08'),
(64, 1270, '0', -0.00141777, 46, 0, '2017-09-13 08:39:09'),
(47, 1197, '3', -0.520833, 14, 0, '2017-09-13 08:39:09'),
(33, 374, '4', 0.6075, 11, 1, '2017-09-13 08:39:09'),
(50, 599, '1', 1.14083, 23, 1, '2017-09-13 08:39:09'),
(67, 2866, '3', -2.55, 9, 0, '2017-09-13 08:39:10'),
(36, 3153, '3', -0.236842, 35, 0, '2017-09-13 08:39:10'),
(52, 1169, '2', 1.50521, 7, 1, '2017-09-13 08:39:11'),
(42, 2623, '4', -1.6, 28, 0, '2017-09-13 08:39:11'),
(70, 3083, '4', -0.0612245, 24, 0, '2017-09-13 08:39:11'),
(38, 1488, '2', 2.00826, 8, 1, '2017-09-13 08:39:12'),
(31, 2604, '1', -1.2675, 14, 0, '2017-09-13 08:39:13'),
(68, 2603, '4', -0.316875, 27, 0, '2017-09-13 08:39:13'),
(46, 69, '4', -0.03, 18, 0, '2017-09-13 08:39:14'),
(37, 173, '3', -0.48, 60, 0, '2017-09-13 08:39:14'),
(71, 1708, '4', -0.520833, 28, 0, '2017-09-13 08:39:15'),
(39, 363, '3', 0.75, 10, 1, '2017-09-13 08:39:15'),
(56, 2743, '4', 0.27, 21, 1, '2017-09-13 08:39:16'),
(50, 853, '1', -2.34083, 7, 0, '2017-09-13 08:39:16'),
(47, 1174, '3', 1.43787, 8, 1, '2017-09-13 08:39:17'),
(49, 19, '0', -0.0075, 20, 0, '2017-09-13 08:39:18'),
(68, 2614, '4', 2.1675, 6, 1, '2017-09-13 08:39:19'),
(71, 1681, '3', 2.40755, 5, 1, '2017-09-13 08:39:20'),
(70, 3018, '3', -1.53061, 8, 0, '2017-09-13 08:39:20'),
(40, 401, '3', -0.1875, 15, 0, '2017-09-13 08:39:20'),
(53, 9, '2', 0.0075, 19, 1, '2017-09-13 08:39:21'),
(45, 75, '2', -0.9, 14, 0, '2017-09-13 08:39:22'),
(68, 2608, '3', 2.56687, 3, 1, '2017-09-13 08:39:22'),
(38, 1487, '0', 0, 10, -1, '2017-09-13 08:39:23'),
(66, 752, '4', -1.76087, 19, 0, '2017-09-13 08:39:23'),
(51, 1, '0', -0.0075, 20, 0, '2017-09-13 08:39:24'),
(67, 2881, '3', -2.3, 14, 0, '2017-09-13 08:39:24'),
(63, 3414, '0', -0.00333333, 30, 0, '2017-09-13 08:39:25'),
(60, 1208, '2', -0.3888, 32, 0, '2017-09-13 08:39:26'),
(42, 2633, '3', 2.25, 15, 1, '2017-09-13 08:39:27'),
(47, 1173, '2', 0.6075, 11, 1, '2017-09-13 08:39:27'),
(57, 3410, '1', 0.00333333, 29, 1, '2017-09-13 08:39:27'),
(49, 4, '2', -0.75, 10, 0, '2017-09-13 08:39:28'),
(56, 2762, '3', 1.08, 12, 1, '2017-09-13 08:39:28'),
(68, 2601, '2', 1.92, 8, 1, '2017-09-13 08:39:30'),
(48, 1203, '0', -0.00333333, 30, 0, '2017-09-13 08:39:30'),
(71, 1693, '1', -1.78255, 11, 0, '2017-09-13 08:39:30'),
(70, 3024, '3', -0.979592, 12, 0, '2017-09-13 08:39:32'),
(64, 1227, '0', -0.00520833, 24, 0, '2017-09-13 08:39:33'),
(52, 1263, '3', -0.6075, 22, 0, '2017-09-13 08:39:33'),
(46, 76, '0', -0.0075, 20, 0, '2017-09-13 08:39:34'),
(36, 3145, '2', 1.02632, 25, 1, '2017-09-13 08:39:35'),
(71, 1677, '0', 0, 5, -1, '2017-09-13 08:39:35'),
(39, 1107, '0', -0.0075, 20, 0, '2017-09-13 08:39:35'),
(66, 726, '1', 1.25606, 12, 1, '2017-09-13 08:39:36'),
(51, 88, '0', 0, 13, -1, '2017-09-13 08:39:36'),
(63, 3402, '1', 1.05762, 13, 1, '2017-09-13 08:39:37'),
(44, 752, '2', -0.717391, 35, 0, '2017-09-13 08:39:37'),
(40, 400, '4', 0.03, 18, 1, '2017-09-13 08:39:38'),
(45, 74, '1', 0.6, 16, 1, '2017-09-13 08:39:39'),
(31, 2625, '3', 0.963333, 26, 1, '2017-09-13 08:39:39'),
(38, 1486, '3', -1.04752, 18, 0, '2017-09-13 08:39:40'),
(53, 11, '3', -0.0075, 19, 0, '2017-09-13 08:39:40'),
(33, 2432, '3', -1.54736, 31, 0, '2017-09-13 08:39:40'),
(50, 607, '1', -0.979592, 24, 0, '2017-09-13 08:39:41'),
(66, 474, '3', -2.55, 6, 0, '2017-09-13 08:39:41'),
(44, 740, '1', 2.5, 6, 1, '2017-09-13 08:39:43'),
(43, 733, '0', -0.001875, 40, 0, '2017-09-13 08:39:44'),
(49, 16, '2', -0.12, 16, 0, '2017-09-13 08:39:44'),
(41, 3153, '0', -0.00207756, 38, 0, '2017-09-13 08:39:44'),
(40, 367, '1', -1.2675, 7, 0, '2017-09-13 08:39:46'),
(66, 737, '3', -2.43, 4, 0, '2017-09-13 08:39:46'),
(46, 73, '3', -0.3675, 13, 0, '2017-09-13 08:39:46'),
(47, 1203, '3', 0.403333, 19, 1, '2017-09-13 08:39:46'),
(48, 1291, '1', -0.03, 18, 0, '2017-09-13 08:39:48'),
(45, 71, '1', 1.5, 10, 1, '2017-09-13 08:39:48'),
(57, 3411, '4', -0.213333, 22, 0, '2017-09-13 08:39:49'),
(69, 1310, '4', 1.9571, 10, 1, '2017-09-13 08:39:49'),
(60, 1200, '2', -0.391204, 23, 0, '2017-09-13 08:39:50'),
(51, 4, '2', -0.27, 14, 0, '2017-09-13 08:39:50'),
(56, 2761, '1', 0.163333, 23, 1, '2017-09-13 08:39:51'),
(64, 1276, '0', 0, 18, -1, '2017-09-13 08:39:51'),
(37, 1204, '1', -0.130208, 38, 0, '2017-09-13 08:39:52'),
(66, 730, '1', -1.6875, 9, 0, '2017-09-13 08:39:54'),
(67, 2897, '1', -1.5, 30, 0, '2017-09-13 08:39:55'),
(53, 2, '3', 0.27, 14, 1, '2017-09-13 08:39:55'),
(40, 2404, '1', 2.38327, 10, 1, '2017-09-13 08:39:55'),
(50, 598, '1', -1.6875, 15, 0, '2017-09-13 08:39:55'),
(39, 371, '0', -0.0075, 20, 0, '2017-09-13 08:39:55'),
(52, 1185, '2', -0.0956633, 23, 0, '2017-09-13 08:39:56'),
(45, 79, '2', -1.5, 10, 0, '2017-09-13 08:39:58'),
(31, 2616, '2', -1.33333, 20, 0, '2017-09-13 08:39:59'),
(66, 478, '1', -2.3232, 6, 0, '2017-09-13 08:40:00'),
(33, 370, '0', -0.0075, 20, 0, '2017-09-13 08:40:01'),
(42, 2624, '3', -1.2, 36, 0, '2017-09-13 08:40:02'),
(71, 1666, '0', 0, 27, -1, '2017-09-13 08:40:03'),
(63, 3410, '2', -0.0833333, 25, 0, '2017-09-13 08:40:03'),
(49, 2, '2', -0.0075, 19, 0, '2017-09-13 08:40:03'),
(51, 13, '4', -0.3675, 13, 0, '2017-09-13 08:40:04'),
(41, 3117, '3', -0.67313, 20, 0, '2017-09-13 08:40:04'),
(68, 2622, '1', -1.3, 34, 0, '2017-09-13 08:40:04'),
(67, 2906, '4', -2.5, 10, 0, '2017-09-13 08:40:05'),
(71, 1674, '1', 2.66383, 3, 1, '2017-09-13 08:40:06'),
(46, 62, '0', -0.0075, 20, 0, '2017-09-13 08:40:07'),
(50, 597, '2', 1.90226, 11, 1, '2017-09-13 08:40:07'),
(36, 3140, '3', -0.473684, 32, 0, '2017-09-13 08:40:07'),
(44, 757, '1', -1.43478, 24, 0, '2017-09-13 08:40:07'),
(70, 2746, '2', 1.61333, 8, 1, '2017-09-13 08:40:08'),
(40, 380, '4', -0.3675, 13, 0, '2017-09-13 08:40:08'),
(45, 69, '1', 1.5, 10, 1, '2017-09-13 08:40:08'),
(69, 1317, '4', -1.47, 18, 0, '2017-09-13 08:40:09'),
(57, 3413, '1', -0.403333, 19, 0, '2017-09-13 08:40:09'),
(37, 1089, '4', -2.43, 6, 0, '2017-09-13 08:40:10'),
(39, 377, '4', -0.27, 14, 0, '2017-09-13 08:40:10'),
(33, 378, '4', -0.9075, 9, 0, '2017-09-13 08:40:10'),
(68, 2632, '3', 2.7, 6, 1, '2017-09-13 08:40:10'),
(71, 1711, '1', 2.47934, 4, 1, '2017-09-13 08:40:10'),
(31, 2626, '3', 2.00083, 11, 1, '2017-09-13 08:40:10'),
(64, 1216, '0', 0, 20, -1, '2017-09-13 08:40:10'),
(38, 1485, '4', 0.536982, 30, 1, '2017-09-13 08:40:11'),
(53, 88, '3', -0.0675, 17, 0, '2017-09-13 08:40:12'),
(50, 1303, '1', 2.52083, 5, 1, '2017-09-13 08:40:12'),
(67, 2907, '4', -2.34083, 7, 0, '2017-09-13 08:40:13'),
(43, 489, '2', -0.226875, 29, 0, '2017-09-13 08:40:13'),
(68, 2619, '3', 2.85, 3, 1, '2017-09-13 08:40:13'),
(51, 17, '1', 0.75, 10, 1, '2017-09-13 08:40:14'),
(33, 2416, '3', 2.47934, 8, 1, '2017-09-13 08:40:17'),
(37, 604, '3', 2.25333, 8, 1, '2017-09-13 08:40:18'),
(71, 1655, '1', 2.00826, 8, 1, '2017-09-13 08:40:18'),
(39, 1120, '4', -0.9075, 9, 0, '2017-09-13 08:40:18'),
(68, 2623, '2', 2.7, 6, 1, '2017-09-13 08:40:19'),
(69, 605, '1', -2.00083, 11, 0, '2017-09-13 08:40:20'),
(67, 2903, '4', -2.25333, 8, 0, '2017-09-13 08:40:20'),
(49, 13, '1', 0.0675, 17, 1, '2017-09-13 08:40:20'),
(45, 80, '4', 1.35, 11, 1, '2017-09-13 08:40:20'),
(56, 2760, '4', 0.00333333, 29, 1, '2017-09-13 08:40:20'),
(66, 756, '2', 1.02083, 20, 1, '2017-09-13 08:40:21'),
(71, 1672, '2', 2.52083, 4, 1, '2017-09-13 08:40:22'),
(50, 595, '3', -1.9571, 10, 0, '2017-09-13 08:40:22'),
(42, 2847, '1', -2, 20, 0, '2017-09-13 08:40:23'),
(70, 2745, '1', -0.563333, 17, 0, '2017-09-13 08:40:24'),
(46, 64, '2', -0.0675, 17, 0, '2017-09-13 08:40:24'),
(64, 1194, '1', 0.75, 14, 1, '2017-09-13 08:40:24'),
(36, 3287, '3', -1.65789, 17, 0, '2017-09-13 08:40:25'),
(47, 1261, '0', -0.00207756, 38, 0, '2017-09-13 08:40:25'),
(39, 391, '4', -1.2675, 7, 0, '2017-09-13 08:40:25'),
(48, 1261, '0', -0.00207756, 38, 0, '2017-09-13 08:40:26'),
(44, 756, '3', -1.875, 18, 0, '2017-09-13 08:40:26'),
(33, 2410, '2', 2.45578, 8, 1, '2017-09-13 08:40:26'),
(57, 3414, '3', -0.48, 18, 0, '2017-09-13 08:40:26'),
(71, 1662, '0', 0, 5, -1, '2017-09-13 08:40:27'),
(43, 726, '1', 0.936851, 15, 1, '2017-09-13 08:40:27'),
(60, 1268, '3', -0.105469, 39, 0, '2017-09-13 08:40:28'),
(64, 1177, '2', 1.79132, 5, 1, '2017-09-13 08:40:29'),
(66, 739, '1', 1.6875, 9, 1, '2017-09-13 08:40:29'),
(63, 3415, '3', 0.0533333, 26, 1, '2017-09-13 08:40:29'),
(50, 600, '3', 2.29688, 7, 1, '2017-09-13 08:40:29'),
(38, 1480, '3', -0.89966, 19, 0, '2017-09-13 08:40:30'),
(37, 619, '3', -1.92, 12, 0, '2017-09-13 08:40:30'),
(51, 2, '3', 0.0675, 17, 1, '2017-09-13 08:40:30'),
(42, 2838, '3', 2.65, 7, 1, '2017-09-13 08:40:30'),
(45, 68, '3', 1.35, 11, 1, '2017-09-13 08:40:30'),
(52, 1287, '2', -0.255208, 34, 0, '2017-09-13 08:40:31'),
(41, 3145, '2', 0.251385, 27, 1, '2017-09-13 08:40:31'),
(39, 388, '4', -1.2675, 7, 0, '2017-09-13 08:40:32'),
(53, 10, '1', 0, 20, 1, '2017-09-13 08:40:32'),
(53, 16, '0', -0.0075, 20, 0, '2017-09-13 08:40:32'),
(70, 2754, '1', 1.61333, 8, 1, '2017-09-13 08:40:33'),
(68, 2625, '1', -2.35, 13, 0, '2017-09-13 08:40:33'),
(69, 1089, '4', -1.76333, 14, 0, '2017-09-13 08:40:33'),
(31, 2633, '3', 1.14083, 23, 1, '2017-09-13 08:40:33'),
(56, 2745, '2', 0.963333, 13, 1, '2017-09-13 08:40:34'),
(63, 3405, '0', 0, 7, -1, '2017-09-13 08:40:36'),
(44, 466, '3', 1.20333, 11, 1, '2017-09-13 08:40:36'),
(50, 613, '3', -2.34083, 7, 0, '2017-09-13 08:40:36'),
(45, 70, '3', -2.1, 6, 0, '2017-09-13 08:40:37'),
(67, 2908, '2', -1.54083, 17, 0, '2017-09-13 08:40:37'),
(41, 3100, '2', -2.26247, 5, 0, '2017-09-13 08:40:37'),
(36, 3016, '0', 0, 11, -1, '2017-09-13 08:40:37'),
(36, 3073, '0', 0, 12, -1, '2017-09-13 08:40:37'),
(43, 494, '3', 1.33333, 10, 1, '2017-09-13 08:40:38'),
(39, 376, '1', -1.47, 6, 0, '2017-09-13 08:40:38'),
(49, 14, '0', -0.0075, 20, 0, '2017-09-13 08:40:40'),
(69, 403, '4', 2.34083, 7, 1, '2017-09-13 08:40:40'),
(33, 2414, '1', -2.12138, 14, 0, '2017-09-13 08:40:40'),
(40, 2411, '1', -1.50843, 32, 0, '2017-09-13 08:40:40'),
(37, 852, '3', -1.92, 12, 0, '2017-09-13 08:40:42'),
(66, 499, '3', -1.40443, 12, 0, '2017-09-13 08:40:42'),
(46, 79, '2', -0.03, 18, 0, '2017-09-13 08:40:42'),
(70, 2750, '4', 1.33333, 10, 1, '2017-09-13 08:40:42'),
(50, 1089, '4', -2.34083, 7, 0, '2017-09-13 08:40:43'),
(45, 64, '2', -1.95, 7, 0, '2017-09-13 08:40:44'),
(67, 2895, '3', -2.25333, 8, 0, '2017-09-13 08:40:45'),
(39, 2400, '3', 2.50776, 6, 1, '2017-09-13 08:40:45'),
(42, 2732, '4', 2.25, 15, 1, '2017-09-13 08:40:46'),
(47, 1276, '3', -0.354492, 21, 0, '2017-09-13 08:40:46'),
(68, 2616, '1', -2.35, 13, 0, '2017-09-13 08:40:46'),
(53, 1, '4', 0.27, 14, 1, '2017-09-13 08:40:46'),
(64, 1297, '3', 1.54083, 17, 1, '2017-09-13 08:40:47'),
(66, 753, '4', 2.20408, 6, 1, '2017-09-13 08:40:48'),
(67, 2899, '2', 2.7075, 3, 1, '2017-09-13 08:40:49'),
(41, 3140, '3', -1.40443, 12, 0, '2017-09-13 08:40:49'),
(38, 2933, '4', -0.0833333, 20, 0, '2017-09-13 08:40:50'),
(69, 1318, '3', -2.1132, 9, 0, '2017-09-13 08:40:50'),
(45, 78, '1', 2.1, 6, 1, '2017-09-13 08:40:50'),
(51, 8, '0', -0.0075, 20, 0, '2017-09-13 08:40:50'),
(40, 393, '4', -0.75, 10, 0, '2017-09-13 08:40:51'),
(49, 7, '3', -0.6075, 11, 0, '2017-09-13 08:40:51'),
(70, 2762, '3', 1.47, 9, 1, '2017-09-13 08:40:51'),
(68, 2627, '2', 2.7, 6, 1, '2017-09-13 08:40:52'),
(36, 3289, '3', 1.00554, 16, 1, '2017-09-13 08:40:52'),
(44, 751, '2', 1.90909, 16, 1, '2017-09-13 08:40:53'),
(57, 3405, '4', -0.03, 27, 0, '2017-09-13 08:40:54'),
(38, 1491, '1', -2.45578, 4, 0, '2017-09-13 08:40:54'),
(67, 2891, '1', 2.34083, 7, 1, '2017-09-13 08:40:55'),
(63, 3400, '4', -0.495117, 19, 0, '2017-09-13 08:40:55'),
(47, 1186, '3', 1.38138, 9, 1, '2017-09-13 08:40:55'),
(64, 1173, '2', 0.9075, 9, 1, '2017-09-13 08:40:56'),
(60, 1281, '1', -0.0133333, 28, 0, '2017-09-13 08:40:57'),
(70, 2741, '3', 2.08333, 5, 1, '2017-09-13 08:40:57'),
(46, 65, '2', -0.12, 16, 0, '2017-09-13 08:40:58'),
(51, 3, '3', 1.2675, 7, 1, '2017-09-13 08:40:58'),
(68, 2628, '4', -2.7, 6, 0, '2017-09-13 08:40:58'),
(56, 2737, '3', -0.12, 24, 0, '2017-09-13 08:40:58'),
(53, 7, '1', 0.48, 12, 1, '2017-09-13 08:40:58'),
(45, 76, '3', -1.8, 8, 0, '2017-09-13 08:40:58'),
(31, 2630, '1', -0.963333, 26, 0, '2017-09-13 08:40:59'),
(66, 751, '2', 1.58678, 12, 1, '2017-09-13 08:41:00'),
(41, 3294, '4', 1.40443, 12, 1, '2017-09-13 08:41:00'),
(33, 380, '0', -0.0075, 20, 0, '2017-09-13 08:41:01'),
(50, 602, '1', -1.5498, 18, 0, '2017-09-13 08:41:01'),
(67, 2901, '4', 2.43, 6, 1, '2017-09-13 08:41:01'),
(38, 1476, '4', -2.14793, 8, 0, '2017-09-13 08:41:02'),
(49, 1, '4', 0.48, 12, 1, '2017-09-13 08:41:04'),
(48, 1263, '1', 0.0075, 38, 1, '2017-09-13 08:41:04'),
(44, 753, '1', -2.21429, 11, 0, '2017-09-13 08:41:04'),
(36, 3292, '1', -2.05263, 12, 0, '2017-09-13 08:41:04'),
(39, 1140, '0', -0.0075, 20, 0, '2017-09-13 08:41:05'),
(37, 609, '2', 1.14083, 23, 1, '2017-09-13 08:41:05'),
(46, 78, '1', 1.08, 8, 1, '2017-09-13 08:41:05'),
(57, 3408, '1', -0.963333, 13, 0, '2017-09-13 08:41:07'),
(67, 2893, '4', 2.34083, 7, 1, '2017-09-13 08:41:09'),
(49, 9, '2', 1.47, 6, 1, '2017-09-13 08:41:09'),
(66, 738, '4', -1.62197, 9, 0, '2017-09-13 08:41:09'),
(43, 721, '4', -0.151875, 31, 0, '2017-09-13 08:41:09'),
(64, 1169, '2', 0.520833, 14, 1, '2017-09-13 08:41:09'),
(38, 1483, '3', -1.86981, 8, 0, '2017-09-13 08:41:10'),
(70, 2743, '2', -0.963333, 13, 0, '2017-09-13 08:41:10'),
(42, 2823, '3', 1.75, 25, 1, '2017-09-13 08:41:11'),
(40, 394, '0', -0.0075, 20, 0, '2017-09-13 08:41:11'),
(45, 62, '4', 0.9, 14, 1, '2017-09-13 08:41:13'),
(60, 1191, '3', 0.55102, 16, 1, '2017-09-13 08:41:13'),
(69, 603, '4', -0.933062, 23, 0, '2017-09-13 08:41:13'),
(39, 1117, '2', 0.9075, 9, 1, '2017-09-13 08:41:14'),
(56, 2754, '1', 0.563333, 17, 1, '2017-09-13 08:41:15'),
(37, 1310, '3', -1.9571, 10, 0, '2017-09-13 08:41:15'),
(52, 1269, '1', 0.0208333, 44, 1, '2017-09-13 08:41:15'),
(51, 12, '1', -0.0075, 19, 0, '2017-09-13 08:41:16'),
(46, 75, '2', -0.3675, 13, 0, '2017-09-13 08:41:18'),
(53, 18, '0', -0.0075, 20, 0, '2017-09-13 08:41:18'),
(43, 718, '1', 1.47, 9, 1, '2017-09-13 08:41:19'),
(49, 6, '2', 0.75, 10, 1, '2017-09-13 08:41:19'),
(44, 748, '4', -1.875, 15, 0, '2017-09-13 08:41:19'),
(36, 3112, '4', -1.00554, 16, 0, '2017-09-13 08:41:20'),
(70, 2761, '1', 1.33333, 10, 1, '2017-09-13 08:41:20'),
(31, 2619, '2', -1.33333, 20, 0, '2017-09-13 08:41:20'),
(33, 402, '1', 0, 20, 0, '2017-09-13 08:41:20'),
(50, 1308, '1', -1.40083, 19, 0, '2017-09-13 08:41:20'),
(64, 1190, '4', 1.10587, 11, 1, '2017-09-13 08:41:21'),
(66, 475, '3', -1.63894, 12, 0, '2017-09-13 08:41:21'),
(51, 9, '2', 1.6875, 5, 1, '2017-09-13 08:41:22'),
(67, 2900, '3', -1.84083, 13, 0, '2017-09-13 08:41:22'),
(38, 1473, '4', -1.7328, 12, 0, '2017-09-13 08:41:23'),
(57, 3403, '4', -0.84668, 15, 0, '2017-09-13 08:41:23'),
(48, 1190, '4', 0.309949, 19, 1, '2017-09-13 08:41:23'),
(63, 3416, '3', -0.0133333, 28, 0, '2017-09-13 08:41:23'),
(47, 1185, '0', -0.00382653, 28, 0, '2017-09-13 08:41:24'),
(39, 1115, '1', 0.75, 10, 1, '2017-09-13 08:41:24'),
(31, 2627, '2', 2.52083, 5, 1, '2017-09-13 08:41:25'),
(37, 601, '4', 1.93718, 11, 1, '2017-09-13 08:41:25'),
(43, 744, '1', -2.325, 9, 0, '2017-09-13 08:41:27'),
(49, 17, '1', 0.9075, 9, 1, '2017-09-13 08:41:28'),
(67, 2898, '3', -2.34083, 7, 0, '2017-09-13 08:41:29'),
(46, 70, '2', -0.6075, 11, 0, '2017-09-13 08:41:30'),
(45, 72, '2', -0.3, 18, 0, '2017-09-13 08:41:30'),
(38, 1469, '2', 1.92, 8, 1, '2017-09-13 08:41:30'),
(53, 5, '3', 0.48, 12, 1, '2017-09-13 08:41:30'),
(48, 1197, '3', -1.17188, 9, 0, '2017-09-13 08:41:32'),
(40, 396, '0', -0.0075, 20, 0, '2017-09-13 08:41:32'),
(50, 1124, '3', -1.92, 12, 0, '2017-09-13 08:41:32'),
(66, 743, '4', 1.44676, 11, 1, '2017-09-13 08:41:33'),
(70, 2738, '2', 0.853333, 14, 1, '2017-09-13 08:41:34'),
(56, 2752, '4', -0.403333, 19, 0, '2017-09-13 08:41:34'),
(38, 3008, '3', -2.02423, 5, 0, '2017-09-13 08:41:36'),
(64, 1195, '4', 0.12, 16, 1, '2017-09-13 08:41:36'),
(37, 850, '4', -2.00083, 11, 0, '2017-09-13 08:41:36'),
(47, 1190, '4', 0.860969, 13, 1, '2017-09-13 08:41:36'),
(33, 2422, '3', -2.21558, 18, 0, '2017-09-13 08:41:38'),
(50, 996, '4', -2.3232, 6, 0, '2017-09-13 08:41:38'),
(66, 754, '4', 2.20408, 6, 1, '2017-09-13 08:41:38'),
(70, 2753, '2', 2.25333, 4, 1, '2017-09-13 08:41:39'),
(31, 2622, '0', 0, 14, -1, '2017-09-13 08:41:39'),
(36, 3294, '1', -0.75, 19, 0, '2017-09-13 08:41:39'),
(42, 2852, '0', 0, 29, -1, '2017-09-13 08:41:39'),
(68, 2634, '4', 0.95, 41, 1, '2017-09-13 08:41:40'),
(56, 2736, '4', 1.92, 6, 1, '2017-09-13 08:41:40'),
(39, 378, '3', -0.12, 16, 0, '2017-09-13 08:41:40'),
(51, 16, '3', -0.0075, 19, 0, '2017-09-13 08:41:41'),
(45, 73, '1', 1.5, 10, 1, '2017-09-13 08:41:41'),
(69, 624, '1', 0.853333, 28, 1, '2017-09-13 08:41:41'),
(33, 364, '2', 2.1675, 3, 1, '2017-09-13 08:41:42'),
(53, 12, '4', 0.48, 12, 1, '2017-09-13 08:41:43'),
(38, 1472, '4', -2.04187, 7, 0, '2017-09-13 08:41:43'),
(68, 2626, '3', 2.75, 5, 1, '2017-09-13 08:41:44'),
(40, 1105, '2', 0.27, 14, 1, '2017-09-13 08:41:45'),
(49, 12, '1', -0.03, 18, 0, '2017-09-13 08:41:46'),
(44, 731, '1', -0.1875, 27, 0, '2017-09-13 08:41:47'),
(50, 603, '1', 2.14793, 8, 1, '2017-09-13 08:41:47'),
(66, 748, '4', -1.80187, 9, 0, '2017-09-13 08:41:47'),
(63, 3413, '0', 0, 24, -1, '2017-09-13 08:41:47'),
(41, 1301, '0', 0, 11, -1, '2017-09-13 08:41:48'),
(33, 401, '4', 1.2675, 7, 1, '2017-09-13 08:41:49'),
(57, 3415, '0', 0, 27, -1, '2017-09-13 08:41:49'),
(36, 3102, '3', -1.62881, 10, 0, '2017-09-13 08:41:49'),
(37, 1318, '4', -1.76881, 13, 0, '2017-09-13 08:41:50'),
(46, 77, '0', -0.0075, 20, 0, '2017-09-13 08:41:50'),
(67, 2894, '3', -1.2675, 21, 0, '2017-09-13 08:41:50'),
(51, 6, '2', 0.48, 12, 1, '2017-09-13 08:41:52'),
(39, 383, '3', -0.48, 12, 0, '2017-09-13 08:41:53'),
(43, 730, '1', -0.231481, 26, 0, '2017-09-13 08:41:53'),
(52, 1268, '3', -0.130208, 38, 0, '2017-09-13 08:41:53'),
(41, 619, '0', -2.43, 7, 0, '2017-09-13 08:41:54'),
(50, 611, '3', 2.2188, 7, 1, '2017-09-13 08:41:54'),
(40, 2414, '3', 2.41774, 9, 1, '2017-09-13 08:41:55'),
(66, 747, '2', 1.81481, 8, 1, '2017-09-13 08:41:55'),
(48, 1227, '0', -0.00520833, 24, 0, '2017-09-13 08:41:56'),
(33, 1130, '1', -1.2675, 7, 0, '2017-09-13 08:41:56'),
(53, 13, '1', 0.1875, 15, 1, '2017-09-13 08:41:58'),
(44, 485, '1', 1.63894, 12, 1, '2017-09-13 08:41:58'),
(41, 622, '2', 2.52083, 5, 1, '2017-09-13 08:41:59'),
(70, 2769, '3', -1.74, 21, 0, '2017-09-13 08:41:59'),
(60, 1264, '1', -0.303719, 45, 0, '2017-09-13 08:41:59'),
(68, 2630, '2', 2.2, 16, 1, '2017-09-13 08:42:00'),
(43, 472, '3', -2.04187, 7, 0, '2017-09-13 08:42:01'),
(45, 65, '0', -0.15, 20, 0, '2017-09-13 08:42:01'),
(56, 2751, '2', 0.27, 21, 1, '2017-09-13 08:42:01'),
(52, 1171, '4', 0.9075, 9, 1, '2017-09-13 08:42:02'),
(50, 605, '3', -2.1675, 9, 0, '2017-09-13 08:42:03'),
(66, 480, '1', -1.92, 8, 0, '2017-09-13 08:42:04'),
(31, 2628, '2', -1.75, 25, 0, '2017-09-13 08:42:04'),
(36, 3155, '4', -1.00554, 16, 0, '2017-09-13 08:42:05'),
(39, 2406, '4', -2.17911, 13, 0, '2017-09-13 08:42:05'),
(69, 622, '2', 1.08, 24, 1, '2017-09-13 08:42:05'),
(57, 3424, '1', -1.12965, 17, 0, '2017-09-13 08:42:06'),
(68, 2618, '3', 2.7, 6, 1, '2017-09-13 08:42:06'),
(42, 2835, '1', -1.7, 26, 0, '2017-09-13 08:42:06'),
(49, 88, '0', -0.0075, 20, 0, '2017-09-13 08:42:06'),
(46, 80, '1', -0.0675, 17, 0, '2017-09-13 08:42:07'),
(67, 2902, '4', -1.54083, 17, 0, '2017-09-13 08:42:07'),
(41, 614, '3', 2.17695, 8, 1, '2017-09-13 08:42:07'),
(38, 1479, '2', -0.619835, 24, 0, '2017-09-13 08:42:07'),
(37, 403, '4', 1.47, 18, 1, '2017-09-13 08:42:08'),
(64, 1263, '3', -0.12, 32, 0, '2017-09-13 08:42:08'),
(66, 476, '1', -2.43, 4, 0, '2017-09-13 08:42:08'),
(33, 365, '1', -0.48, 12, 0, '2017-09-13 08:42:08'),
(52, 1191, '3', 1.85204, 6, 1, '2017-09-13 08:42:08'),
(70, 2756, '2', 1.47, 9, 1, '2017-09-13 08:42:09'),
(53, 17, '3', -0.48, 12, 0, '2017-09-13 08:42:10'),
(44, 744, '2', -2.025, 13, 0, '2017-09-13 08:42:12'),
(51, 14, '0', -0.0075, 20, 0, '2017-09-13 08:42:13'),
(39, 1109, '3', 1.08, 8, 1, '2017-09-13 08:42:13'),
(40, 383, '0', -0.0075, 20, 0, '2017-09-13 08:42:15'),
(43, 487, '4', 1.2675, 14, 1, '2017-09-13 08:42:15'),
(66, 757, '3', -2.04726, 8, 0, '2017-09-13 08:42:15'),
(53, 3, '3', 1.6875, 5, 1, '2017-09-13 08:42:15'),
(70, 2777, '2', 2.58, 7, 1, '2017-09-13 08:42:16'),
(67, 2890, '4', 2.1675, 9, 1, '2017-09-13 08:42:16'),
(69, 619, '0', 0, 11, -1, '2017-09-13 08:42:17'),
(41, 596, '1', 1.90226, 11, 1, '2017-09-13 08:42:17'),
(48, 1186, '3', 0.137755, 22, 1, '2017-09-13 08:42:18'),
(63, 3406, '3', -0.00333333, 29, 0, '2017-09-13 08:42:18'),
(63, 3411, '0', -0.00333333, 30, 0, '2017-09-13 08:42:18'),
(45, 63, '2', -0.45, 17, 0, '2017-09-13 08:42:18'),
(37, 853, '4', -2.08333, 10, 0, '2017-09-13 08:42:18'),
(57, 3432, '4', 1.58678, 12, 1, '2017-09-13 08:42:18'),
(42, 2734, '3', 2.35, 13, 1, '2017-09-13 08:42:19'),
(39, 1110, '2', 1.47, 6, 1, '2017-09-13 08:42:20'),
(68, 2823, '1', -2.54929, 13, 0, '2017-09-13 08:42:20'),
(66, 742, '1', 2.29688, 5, 1, '2017-09-13 08:42:21'),
(64, 1292, '0', 0, 13, -1, '2017-09-13 08:42:21'),
(50, 604, '4', -1.47, 18, 0, '2017-09-13 08:42:22'),
(44, 726, '1', 1.49481, 10, 1, '2017-09-13 08:42:22'),
(47, 1270, '0', -0.00141777, 46, 0, '2017-09-13 08:42:23'),
(39, 397, '2', -1.92, 4, 0, '2017-09-13 08:42:24'),
(53, 31, '3', -0.75, 10, 0, '2017-09-13 08:42:25'),
(56, 2739, '1', 0.12, 24, 1, '2017-09-13 08:42:25'),
(49, 10, '3', 0, 20, 0, '2017-09-13 08:42:26'),
(46, 74, '0', -0.0075, 20, 0, '2017-09-13 08:42:27'),
(40, 375, '1', 0.48, 12, 1, '2017-09-13 08:42:27'),
(41, 852, '0', 0, 9, -1, '2017-09-13 08:42:27'),
(68, 2732, '4', 2.76188, 7, 1, '2017-09-13 08:42:27'),
(66, 741, '2', 1.99654, 7, 1, '2017-09-13 08:42:27'),
(45, 77, '2', 1.65, 9, 1, '2017-09-13 08:42:27'),
(33, 386, '4', 0, 20, 1, '2017-09-13 08:42:28'),
(69, 611, '2', -1.7328, 12, 0, '2017-09-13 08:42:29'),
(70, 2770, '2', 2.22, 13, 1, '2017-09-13 08:42:29'),
(64, 1198, '2', -1.08, 8, 0, '2017-09-13 08:42:30'),
(38, 1477, '3', 0.988683, 23, 1, '2017-09-13 08:42:30'),
(51, 11, '2', -0.03, 18, 0, '2017-09-13 08:42:30'),
(42, 2729, '2', 2.45, 11, 1, '2017-09-13 08:42:30'),
(44, 720, '1', -1.74723, 9, 0, '2017-09-13 08:42:31'),
(70, 2776, '1', 2.76, 4, 1, '2017-09-13 08:42:32'),
(33, 368, '3', 1.6875, 5, 1, '2017-09-13 08:42:33'),
(60, 1289, '3', -0.0675, 34, 0, '2017-09-13 08:42:33'),
(68, 2838, '3', 2.76188, 7, 1, '2017-09-13 08:42:34'),
(39, 1112, '1', -0.6075, 11, 0, '2017-09-13 08:42:34'),
(50, 619, '4', 1.84083, 13, 1, '2017-09-13 08:42:34'),
(41, 602, '2', 2.29688, 8, 1, '2017-09-13 08:42:35'),
(45, 67, '2', -1.8, 8, 0, '2017-09-13 08:42:35'),
(38, 1468, '3', -2.29688, 5, 0, '2017-09-13 08:42:35'),
(47, 1170, '2', 0.75, 12, 1, '2017-09-13 08:42:35'),
(43, 731, '1', -0.520833, 21, 0, '2017-09-13 08:42:36'),
(40, 1131, '1', 0.75, 10, 1, '2017-09-13 08:42:37'),
(70, 2791, '3', 2.64, 6, 1, '2017-09-13 08:42:38'),
(36, 3290, '2', -0.033241, 34, 0, '2017-09-13 08:42:39'),
(37, 624, '1', 1.2675, 21, 1, '2017-09-13 08:42:39'),
(48, 1219, '0', -0.00619835, 22, 0, '2017-09-13 08:42:40'),
(33, 371, '1', -1.2675, 7, 0, '2017-09-13 08:42:40'),
(53, 30, '2', 0.27, 14, 1, '2017-09-13 08:42:40'),
(52, 1175, '0', -0.00292969, 32, 0, '2017-09-13 08:42:41'),
(49, 11, '3', -0.1875, 15, 0, '2017-09-13 08:42:41'),
(64, 1174, '3', 0.869823, 12, 1, '2017-09-13 08:42:42'),
(50, 1317, '3', 2.25333, 8, 1, '2017-09-13 08:42:42'),
(67, 2909, '4', 0.9075, 27, 1, '2017-09-13 08:42:43'),
(44, 724, '4', -1.08, 12, 0, '2017-09-13 08:42:44'),
(51, 38, '2', 0.1875, 15, 1, '2017-09-13 08:42:45'),
(46, 61, '3', -0.0075, 19, 0, '2017-09-13 08:42:46'),
(43, 722, '2', -1.56481, 10, 0, '2017-09-13 08:42:46'),
(36, 3117, '3', -1.99654, 7, 0, '2017-09-13 08:42:46'),
(45, 90, '3', -1.35, 11, 0, '2017-09-13 08:42:46'),
(47, 1183, '2', 0.75, 11, 1, '2017-09-13 08:42:47'),
(37, 605, '1', -2.25333, 8, 0, '2017-09-13 08:42:47'),
(69, 850, '3', 1.40083, 19, 1, '2017-09-13 08:42:47'),
(42, 2845, '1', 2.40251, 17, 1, '2017-09-13 08:42:48'),
(41, 593, '1', 1.76333, 14, 1, '2017-09-13 08:42:49'),
(68, 2729, '1', -2.43962, 16, 0, '2017-09-13 08:42:50'),
(64, 1293, '1', -1.17188, 9, 0, '2017-09-13 08:42:50'),
(63, 3403, '0', -0.00292969, 32, 0, '2017-09-13 08:42:50'),
(36, 3123, '1', -2.12742, 6, 0, '2017-09-13 08:42:52'),
(70, 2817, '3', 2.58532, 14, 1, '2017-09-13 08:42:53'),
(33, 393, '4', -0.3675, 13, 0, '2017-09-13 08:42:54'),
(53, 37, '2', -0.27, 14, 0, '2017-09-13 08:42:54'),
(52, 1284, '3', 0.3675, 13, 1, '2017-09-13 08:42:54'),
(39, 387, '0', -0.0075, 20, 0, '2017-09-13 08:42:54'),
(38, 1474, '2', 0.89966, 19, 1, '2017-09-13 08:42:54'),
(50, 594, '3', 1.6428, 13, 1, '2017-09-13 08:42:56'),
(49, 40, '1', -0.12, 16, 0, '2017-09-13 08:42:57'),
(64, 1171, '4', 1.2675, 7, 1, '2017-09-13 08:42:58'),
(43, 485, '1', 1.4518, 14, 1, '2017-09-13 08:43:00'),
(31, 2629, '2', -0.0208333, 55, 0, '2017-09-13 08:43:00'),
(36, 3293, '1', 1.74723, 9, 1, '2017-09-13 08:43:01'),
(69, 613, '3', -1.84083, 13, 0, '2017-09-13 08:43:01'),
(68, 2730, '4', 2.62111, 11, 1, '2017-09-13 08:43:01'),
(33, 1140, '1', 0.9075, 9, 1, '2017-09-13 08:43:02'),
(44, 489, '1', 0.826875, 19, 1, '2017-09-13 08:43:02'),
(46, 89, '2', -0.12, 16, 0, '2017-09-13 08:43:02'),
(70, 2810, '4', 2.73701, 9, 1, '2017-09-13 08:43:02'),
(57, 3421, '2', -0.00154959, 43, 0, '2017-09-13 08:43:02'),
(48, 1282, '3', 0.163333, 23, 1, '2017-09-13 08:43:02'),
(45, 89, '1', -0.6, 16, 0, '2017-09-13 08:43:02'),
(52, 1219, '3', 1.04752, 9, 1, '2017-09-13 08:43:03'),
(39, 392, '4', -0.9075, 9, 0, '2017-09-13 08:43:04'),
(37, 603, '1', 1.28254, 18, 1, '2017-09-13 08:43:05'),
(64, 1219, '3', 1.21488, 8, 1, '2017-09-13 08:43:05'),
(46, 91, '2', 2.1675, 3, 1, '2017-09-13 08:43:05'),
(49, 26, '4', 1.08, 8, 1, '2017-09-13 08:43:05'),
(51, 36, '0', -0.0075, 20, 0, '2017-09-13 08:43:05'),
(41, 1310, '4', 1.3591, 17, 1, '2017-09-13 08:43:05'),
(47, 1198, '0', 0, 19, -1, '2017-09-13 08:43:06'),
(67, 2904, '3', 1.20333, 22, 1, '2017-09-13 08:43:06'),
(68, 2825, '3', 2.79651, 6, 1, '2017-09-13 08:43:07'),
(39, 2432, '4', 2.78579, 4, 1, '2017-09-13 08:43:08'),
(36, 3291, '2', 1.99654, 7, 1, '2017-09-13 08:43:08'),
(40, 2457, '2', 2.25, 31, 1, '2017-09-13 08:43:08'),
(66, 749, '1', -0.0833333, 40, 0, '2017-09-13 08:43:09'),
(53, 21, '2', 0.12, 16, 1, '2017-09-13 08:43:09'),
(45, 86, '1', -1.95, 7, 0, '2017-09-13 08:43:10'),
(70, 2812, '4', -2.76684, 8, 0, '2017-09-13 08:43:10'),
(33, 1131, '1', 0.9075, 9, 1, '2017-09-13 08:43:11'),
(56, 2765, '2', -0.18, 47, 0, '2017-09-13 08:43:13'),
(50, 1096, '4', -1.54083, 17, 0, '2017-09-13 08:43:13'),
(64, 1282, '3', 2.2, 8, 1, '2017-09-13 08:43:13'),
(69, 1303, '1', 1.92, 12, 1, '2017-09-13 08:43:13'),
(38, 3000, '3', 0.130208, 19, 1, '2017-09-13 08:43:14'),
(45, 91, '1', -2.4, 4, 0, '2017-09-13 08:43:14'),
(46, 81, '1', -0.75, 10, 0, '2017-09-13 08:43:14'),
(37, 1311, '4', 1.92, 10, 1, '2017-09-13 08:43:14'),
(41, 611, '3', 1.8252, 11, 1, '2017-09-13 08:43:17'),
(40, 1142, '2', -1.8, 8, 0, '2017-09-13 08:43:17'),
(60, 1206, '1', -0.240833, 43, 0, '2017-09-13 08:43:17'),
(43, 732, '4', 0.835648, 17, 1, '2017-09-13 08:43:18'),
(66, 479, '2', -1.83743, 10, 0, '2017-09-13 08:43:19'),
(45, 83, '1', 1.47, 6, 1, '2017-09-13 08:43:19'),
(31, 2623, '2', 1.33333, 20, 1, '2017-09-13 08:43:20'),
(63, 3412, '1', -0.00333333, 29, 0, '2017-09-13 08:43:20'),
(67, 2892, '2', 1.6875, 15, 1, '2017-09-13 08:43:21'),
(47, 1291, '1', -0.1875, 15, 0, '2017-09-13 08:43:21'),
(39, 1131, '1', 0.27, 14, 1, '2017-09-13 08:43:22'),
(64, 1191, '3', 2.03571, 9, 1, '2017-09-13 08:43:22'),
(68, 2835, '3', 2.47645, 15, 1, '2017-09-13 08:43:22'),
(50, 1325, '4', -2.02423, 10, 0, '2017-09-13 08:43:23'),
(44, 736, '3', -0.508651, 20, 0, '2017-09-13 08:43:23'),
(37, 614, '1', -2.17695, 8, 0, '2017-09-13 08:43:23'),
(36, 3295, '2', 1.09903, 15, 1, '2017-09-13 08:43:23'),
(69, 1311, '4', 1.92, 10, 1, '2017-09-13 08:43:23'),
(46, 93, '1', -0.382653, 9, 0, '2017-09-13 08:43:24'),
(53, 39, '2', 0.1875, 15, 1, '2017-09-13 08:43:25'),
(33, 373, '4', -0.3675, 13, 0, '2017-09-13 08:43:25'),
(66, 482, '1', -2.20408, 6, 0, '2017-09-13 08:43:25'),
(70, 2818, '4', -2.55445, 15, 0, '2017-09-13 08:43:25'),
(49, 33, '0', -0.0075, 20, 0, '2017-09-13 08:43:25'),
(51, 32, '0', -0.0075, 20, 0, '2017-09-13 08:43:25'),
(48, 1189, '3', 0.0956633, 23, 1, '2017-09-13 08:43:25'),
(56, 2742, '4', 0.963333, 13, 1, '2017-09-13 08:43:26'),
(43, 482, '4', 1.7415, 10, 1, '2017-09-13 08:43:27'),
(41, 1090, '1', -2.45, 11, 0, '2017-09-13 08:43:28'),
(37, 607, '1', -2.39158, 6, 0, '2017-09-13 08:43:28'),
(50, 1339, '2', 2.43, 6, 1, '2017-09-13 08:43:29'),
(40, 1144, '2', -1.2, 12, 0, '2017-09-13 08:43:29'),
(67, 2896, '1', -2.25333, 8, 0, '2017-09-13 08:43:29'),
(47, 1184, '4', 0.880208, 11, 1, '2017-09-13 08:43:32'),
(42, 2728, '4', 1.24289, 44, 1, '2017-09-13 08:43:32'),
(36, 3093, '0', 0, 9, -1, '2017-09-13 08:43:32'),
(45, 85, '2', 0.9, 14, 1, '2017-09-13 08:43:34'),
(66, 766, '1', 1.7415, 10, 1, '2017-09-13 08:43:34'),
(70, 2813, '3', 2.73701, 9, 1, '2017-09-13 08:43:34'),
(43, 738, '3', -1.75433, 8, 0, '2017-09-13 08:43:36'),
(53, 24, '3', 0.6075, 11, 1, '2017-09-13 08:43:36'),
(50, 1328, '2', -2.34083, 7, 0, '2017-09-13 08:43:37'),
(45, 82, '2', -2.55, 3, 0, '2017-09-13 08:43:37'),
(68, 2816, '2', -2.47645, 15, 0, '2017-09-13 08:43:37'),
(31, 2624, '0', 0, 17, -1, '2017-09-13 08:43:38'),
(52, 1202, '1', 0, 36, 1, '2017-09-13 08:43:39'),
(40, 2408, '3', 2.3255, 11, 1, '2017-09-13 08:43:39'),
(36, 3097, '1', -1.86981, 8, 0, '2017-09-13 08:43:40'),
(69, 853, '1', -1.47, 18, 0, '2017-09-13 08:43:41'),
(38, 1478, '4', -0.316875, 27, 0, '2017-09-13 08:43:41'),
(42, 2733, '0', 0, 10, -1, '2017-09-13 08:43:42'),
(39, 395, '0', -0.0075, 20, 0, '2017-09-13 08:43:42'),
(44, 733, '3', 0.826875, 19, 1, '2017-09-13 08:43:42'),
(41, 605, '4', -1.6875, 15, 0, '2017-09-13 08:43:43'),
(60, 1298, '1', 0.963333, 26, 1, '2017-09-13 08:43:43'),
(43, 483, '4', -2.04726, 8, 0, '2017-09-13 08:43:43'),
(47, 1196, '4', 0.880208, 11, 1, '2017-09-13 08:43:43'),
(50, 1106, '1', -2.34083, 7, 0, '2017-09-13 08:43:43'),
(57, 3420, '3', -0.0139463, 41, 0, '2017-09-13 08:43:43'),
(37, 594, '3', 1.47, 15, 1, '2017-09-13 08:43:43'),
(67, 2905, '3', -1.76333, 14, 0, '2017-09-13 08:43:44'),
(51, 29, '2', -0.03, 18, 0, '2017-09-13 08:43:44'),
(46, 95, '0', -0.0075, 20, 0, '2017-09-13 08:43:44'),
(66, 493, '3', -1.33333, 10, 0, '2017-09-13 08:43:44'),
(48, 1294, '1', -0.130208, 19, 0, '2017-09-13 08:43:45'),
(33, 383, '0', -0.0075, 20, 0, '2017-09-13 08:43:45'),
(49, 37, '0', -0.0075, 20, 0, '2017-09-13 08:43:45'),
(70, 2801, '1', 2.67685, 11, 1, '2017-09-13 08:43:46'),
(38, 1484, '2', -2.32823, 5, 0, '2017-09-13 08:43:46'),
(63, 3427, '4', 0.447831, 27, 1, '2017-09-13 08:43:47'),
(68, 2731, '4', 2.65665, 10, 1, '2017-09-13 08:43:48'),
(45, 95, '3', 0.48, 12, 1, '2017-09-13 08:43:49'),
(64, 1175, '4', 0.5625, 26, 1, '2017-09-13 08:43:49'),
(37, 1301, '3', 2.37964, 7, 1, '2017-09-13 08:43:51'),
(44, 718, '1', 1.33333, 10, 1, '2017-09-13 08:43:52'),
(41, 598, '4', 2.08333, 10, 1, '2017-09-13 08:43:52'),
(33, 2420, '3', 2.46387, 9, 1, '2017-09-13 08:43:54'),
(66, 772, '3', 1.88021, 10, 1, '2017-09-13 08:43:54'),
(56, 2790, '2', -1.32, 28, 0, '2017-09-13 08:43:55'),
(39, 1139, '1', -0.3675, 13, 0, '2017-09-13 08:43:55'),
(50, 1312, '2', 2.00826, 12, 1, '2017-09-13 08:43:55'),
(70, 2809, '3', -2.70701, 10, 0, '2017-09-13 08:43:56'),
(53, 20, '0', -0.0075, 20, 0, '2017-09-13 08:43:56'),
(51, 35, '2', 0.3675, 13, 1, '2017-09-13 08:43:57'),
(40, 1148, '3', -0.3, 18, 0, '2017-09-13 08:43:57'),
(68, 2819, '1', -2.65665, 10, 0, '2017-09-13 08:43:57'),
(45, 92, '4', 0.75, 8, 1, '2017-09-13 08:43:57'),
(69, 597, '1', -1.40844, 17, 0, '2017-09-13 08:43:59'),
(43, 479, '4', 1.27599, 16, 1, '2017-09-13 08:43:59'),
(39, 2431, '1', -2.68277, 5, 0, '2017-09-13 08:44:00'),
(41, 1303, '1', 2.1675, 9, 1, '2017-09-13 08:44:01'),
(37, 598, '3', -1.92, 12, 0, '2017-09-13 08:44:03'),
(70, 2805, '1', 2.79651, 7, 1, '2017-09-13 08:44:03'),
(66, 758, '4', 1.86981, 8, 1, '2017-09-13 08:44:03'),
(49, 29, '3', -0.03, 18, 0, '2017-09-13 08:44:03'),
(31, 2635, '1', 0.963333, 26, 1, '2017-09-13 08:44:03'),
(36, 3105, '2', -0.407202, 24, 0, '2017-09-13 08:44:04'),
(45, 93, '2', 1.5, 7, 1, '2017-09-13 08:44:04'),
(46, 94, '0', -0.0075, 20, 0, '2017-09-13 08:44:04'),
(57, 3431, '4', -0.819731, 21, 0, '2017-09-13 08:44:04'),
(67, 2926, '3', 1.20333, 22, 1, '2017-09-13 08:44:05'),
(56, 2749, '4', 1.20333, 11, 1, '2017-09-13 08:44:06'),
(33, 397, '0', 0, 12, -1, '2017-09-13 08:44:06'),
(38, 1481, '4', -0.75, 20, 0, '2017-09-13 08:44:06'),
(60, 1204, '1', -0.813802, 23, 0, '2017-09-13 08:44:07'),
(42, 2820, '1', -2.09443, 25, 0, '2017-09-13 08:44:07'),
(52, 1220, '0', -0.00382653, 28, 0, '2017-09-13 08:44:07'),
(53, 29, '2', -0.48, 12, 0, '2017-09-13 08:44:08'),
(68, 2820, '2', 2.62111, 11, 1, '2017-09-13 08:44:09'),
(40, 1147, '4', 1.2, 12, 1, '2017-09-13 08:44:10'),
(31, 2618, '3', 2.7, 6, 1, '2017-09-13 08:44:10'),
(66, 768, '3', 2.08333, 8, 1, '2017-09-13 08:44:11'),
(50, 1321, '3', 1.6875, 16, 1, '2017-09-13 08:44:11'),
(43, 739, '1', 1.22454, 13, 1, '2017-09-13 08:44:13'),
(70, 2799, '2', -2.67685, 11, 0, '2017-09-13 08:44:14'),
(44, 737, '0', 0, 22, -1, '2017-09-13 08:44:14'),
(49, 32, '0', 0, 12, -1, '2017-09-13 08:44:15'),
(41, 1340, '1', -2.37097, 13, 0, '2017-09-13 08:44:15'),
(37, 611, '2', -1.6428, 13, 0, '2017-09-13 08:44:16'),
(67, 2928, '2', -2.00083, 11, 0, '2017-09-13 08:44:16'),
(36, 3149, '2', -1.29848, 13, 0, '2017-09-13 08:44:17'),
(39, 374, '2', -0.0675, 17, 0, '2017-09-13 08:44:17'),
(51, 40, '0', -0.0075, 20, 0, '2017-09-13 08:44:17'),
(69, 1124, '2', -1.40083, 19, 0, '2017-09-13 08:44:17'),
(60, 1296, '4', -0.880208, 11, 0, '2017-09-13 08:44:18'),
(45, 87, '1', 0.9, 14, 1, '2017-09-13 08:44:18'),
(70, 2793, '2', 2.8846, 4, 1, '2017-09-13 08:44:18'),
(46, 92, '2', -0.046875, 14, 0, '2017-09-13 08:44:18'),
(53, 22, '1', 0.75, 10, 1, '2017-09-13 08:44:19'),
(33, 385, '3', -0.27, 14, 0, '2017-09-13 08:44:21'),
(48, 1202, '0', -0.00231481, 36, 0, '2017-09-13 08:44:21'),
(44, 734, '3', -1.61333, 8, 0, '2017-09-13 08:44:22'),
(68, 2852, '4', -2.513, 14, 0, '2017-09-13 08:44:23'),
(50, 1343, '3', -1.8252, 11, 0, '2017-09-13 08:44:23'),
(45, 81, '1', -2.25, 5, 0, '2017-09-13 08:44:24'),
(47, 1263, '0', -0.001875, 40, 0, '2017-09-13 08:44:24'),
(66, 773, '1', -1.4518, 14, 0, '2017-09-13 08:44:25'),
(39, 2411, '2', -2.52917, 9, 0, '2017-09-13 08:44:26'),
(52, 1199, '3', 0.495117, 19, 1, '2017-09-13 08:44:27'),
(51, 24, '3', 0.75, 10, 1, '2017-09-13 08:44:27');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(64, 1287, '4', -0.5625, 39, 0, '2017-09-13 08:44:28'),
(57, 3418, '1', 0.683368, 23, 1, '2017-09-13 08:44:28'),
(70, 2815, '1', 2.70701, 10, 1, '2017-09-13 08:44:28'),
(33, 366, '4', 1.08, 8, 1, '2017-09-13 08:44:29'),
(66, 471, '1', -2.25333, 4, 0, '2017-09-13 08:44:29'),
(46, 82, '1', 0.75, 10, 1, '2017-09-13 08:44:29'),
(53, 36, '4', 0.6075, 11, 1, '2017-09-13 08:44:30'),
(49, 25, '1', -0.1875, 15, 0, '2017-09-13 08:44:30'),
(63, 3417, '3', 0.00154959, 43, 1, '2017-09-13 08:44:31'),
(37, 606, '1', -1.61333, 16, 0, '2017-09-13 08:44:32'),
(31, 2621, '3', 1.9, 22, 1, '2017-09-13 08:44:32'),
(50, 1113, '3', -2.2376, 9, 0, '2017-09-13 08:44:32'),
(66, 760, '1', -2.43, 4, 0, '2017-09-13 08:44:33'),
(45, 84, '1', -1.5, 10, 0, '2017-09-13 08:44:33'),
(67, 2931, '4', 1.47, 18, 1, '2017-09-13 08:44:35'),
(53, 26, '4', 1.6875, 5, 1, '2017-09-13 08:44:35'),
(47, 1194, '1', 1.10587, 11, 1, '2017-09-13 08:44:35'),
(44, 465, '3', -0.963333, 13, 0, '2017-09-13 08:44:35'),
(40, 2440, '4', 2.31818, 25, 1, '2017-09-13 08:44:35'),
(70, 2798, '3', -2.76684, 8, 0, '2017-09-13 08:44:36'),
(39, 368, '3', 0.48, 12, 1, '2017-09-13 08:44:37'),
(56, 2769, '2', -1.08, 32, 0, '2017-09-13 08:44:38'),
(69, 614, '2', -1.1893, 20, 0, '2017-09-13 08:44:38'),
(41, 615, '3', -1.08, 24, 0, '2017-09-13 08:44:39'),
(66, 492, '2', 2.04187, 7, 1, '2017-09-13 08:44:40'),
(46, 85, '1', -0.48, 12, 0, '2017-09-13 08:44:41'),
(31, 2617, '1', 2.55, 9, 1, '2017-09-13 08:44:41'),
(50, 1332, '3', 2.1675, 9, 1, '2017-09-13 08:44:41'),
(57, 3427, '4', 1.39463, 14, 1, '2017-09-13 08:44:42'),
(49, 34, '1', -0.3675, 13, 0, '2017-09-13 08:44:44'),
(67, 2910, '2', -2.08333, 10, 0, '2017-09-13 08:44:45'),
(41, 624, '3', -2.34083, 7, 0, '2017-09-13 08:44:46'),
(56, 2753, '2', 1.61333, 8, 1, '2017-09-13 08:44:46'),
(36, 3136, '1', -0.168283, 29, 0, '2017-09-13 08:44:46'),
(38, 16, '0', -0.0075, 20, 0, '2017-09-13 08:44:47'),
(47, 1210, '1', 0.75, 12, 1, '2017-09-13 08:44:47'),
(64, 1281, '4', -1, 20, 0, '2017-09-13 08:44:47'),
(51, 28, '0', -0.0075, 20, 0, '2017-09-13 08:44:47'),
(70, 2814, '4', -2.64652, 12, 0, '2017-09-13 08:44:48'),
(44, 464, '1', -0.869823, 12, 0, '2017-09-13 08:44:48'),
(53, 40, '1', -0.27, 14, 0, '2017-09-13 08:44:48'),
(31, 2835, '0', 0, 10, -1, '2017-09-13 08:44:51'),
(68, 2728, '1', -1.97297, 28, 0, '2017-09-13 08:44:51'),
(60, 1275, '2', -0.371399, 35, 0, '2017-09-13 08:44:53'),
(70, 2796, '4', 2.85539, 5, 1, '2017-09-13 08:44:53'),
(48, 1175, '0', -0.00292969, 32, 0, '2017-09-13 08:44:53'),
(39, 402, '3', 0.12, 16, 1, '2017-09-13 08:44:53'),
(45, 94, '0', -0.0075, 20, 0, '2017-09-13 08:44:54'),
(53, 35, '2', 1.6875, 5, 1, '2017-09-13 08:44:54'),
(41, 601, '4', 2.1132, 9, 1, '2017-09-13 08:44:55'),
(67, 2918, '1', -2.08333, 10, 0, '2017-09-13 08:44:55'),
(43, 749, '2', 0.0325521, 43, 1, '2017-09-13 08:44:56'),
(38, 2, '3', 0.9075, 9, 1, '2017-09-13 08:44:56'),
(69, 1091, '3', -1.47, 18, 0, '2017-09-13 08:44:56'),
(50, 1327, '1', -1.3872, 16, 0, '2017-09-13 08:44:57'),
(66, 777, '2', 1.19234, 17, 1, '2017-09-13 08:44:58'),
(40, 2448, '2', 2.28261, 22, 1, '2017-09-13 08:44:58'),
(39, 2403, '2', 2.67593, 5, 1, '2017-09-13 08:44:59'),
(64, 1217, '4', -1.2, 12, 0, '2017-09-13 08:45:00'),
(46, 87, '1', 0.0075, 19, 1, '2017-09-13 08:45:00'),
(47, 1171, '4', 1.05, 13, 1, '2017-09-13 08:45:01'),
(49, 38, '2', 0.0675, 17, 1, '2017-09-13 08:45:01'),
(69, 854, '1', 2.58673, 5, 1, '2017-09-13 08:45:01'),
(70, 2795, '3', 2.76684, 8, 1, '2017-09-13 08:45:01'),
(44, 730, '1', -1.12037, 14, 0, '2017-09-13 08:45:01'),
(42, 2816, '1', -0.64633, 54, 0, '2017-09-13 08:45:02'),
(67, 2925, '0', 0, 8, -1, '2017-09-13 08:45:03'),
(41, 850, '4', -2.25333, 8, 0, '2017-09-13 08:45:03'),
(48, 1265, '3', -1.86501, 11, 0, '2017-09-13 08:45:04'),
(47, 1265, '0', 0, 4, -1, '2017-09-13 08:45:04'),
(33, 2431, '2', -1.15158, 35, 0, '2017-09-13 08:45:04'),
(43, 478, '2', -2.1168, 8, 0, '2017-09-13 08:45:04'),
(68, 2734, '3', 2.54929, 13, 1, '2017-09-13 08:45:05'),
(36, 3142, '2', -0.75, 19, 0, '2017-09-13 08:45:05'),
(50, 1132, '2', -2.25333, 8, 0, '2017-09-13 08:45:05'),
(39, 2416, '3', 2.54171, 7, 1, '2017-09-13 08:45:06'),
(38, 11, '1', 0.75, 10, 1, '2017-09-13 08:45:07'),
(53, 38, '3', -0.3675, 13, 0, '2017-09-13 08:45:07'),
(51, 21, '0', -0.0075, 20, 0, '2017-09-13 08:45:07'),
(41, 1089, '4', -2.52083, 5, 0, '2017-09-13 08:45:08'),
(39, 396, '3', 1.92, 4, 1, '2017-09-13 08:45:09'),
(70, 2800, '3', -2.76684, 8, 0, '2017-09-13 08:45:09'),
(44, 725, '1', -1.75433, 8, 0, '2017-09-13 08:45:10'),
(50, 1313, '2', 2.37037, 6, 1, '2017-09-13 08:45:11'),
(46, 86, '2', 0.48, 12, 1, '2017-09-13 08:45:12'),
(52, 1257, '3', -0.0117188, 45, 0, '2017-09-13 08:45:13'),
(49, 23, '1', 0.3675, 13, 1, '2017-09-13 08:45:13'),
(45, 102, '0', -0.0075, 20, 0, '2017-09-13 08:45:14'),
(56, 2774, '4', 1.32, 28, 1, '2017-09-13 08:45:14'),
(48, 1257, '3', -1.78255, 11, 0, '2017-09-13 08:45:15'),
(43, 480, '1', -1.57687, 11, 0, '2017-09-13 08:45:15'),
(66, 769, '1', 1.04752, 18, 1, '2017-09-13 08:45:15'),
(63, 3429, '0', -0.00154959, 44, 0, '2017-09-13 08:45:16'),
(51, 37, '0', 0, 8, -1, '2017-09-13 08:45:16'),
(36, 3090, '1', -1.51454, 11, 0, '2017-09-13 08:45:16'),
(44, 722, '3', 1.94676, 7, 1, '2017-09-13 08:45:16'),
(31, 2845, '2', -1.75, 25, 0, '2017-09-13 08:45:16'),
(60, 1295, '3', -0.00520833, 23, 0, '2017-09-13 08:45:16'),
(68, 2735, '1', 2.58532, 12, 1, '2017-09-13 08:45:16'),
(67, 2914, '1', 1.84083, 13, 1, '2017-09-13 08:45:17'),
(70, 2792, '1', -2.76684, 8, 0, '2017-09-13 08:45:17'),
(40, 2447, '4', 2.28409, 21, 1, '2017-09-13 08:45:18'),
(42, 2730, '4', 2.43962, 16, 1, '2017-09-13 08:45:18'),
(66, 470, '1', -2.29688, 5, 0, '2017-09-13 08:45:20'),
(45, 97, '4', 1.2675, 7, 1, '2017-09-13 08:45:21'),
(41, 609, '1', -1.76333, 14, 0, '2017-09-13 08:45:21'),
(38, 13, '3', -0.1875, 15, 0, '2017-09-13 08:45:22'),
(53, 33, '3', 0.12, 16, 1, '2017-09-13 08:45:23'),
(40, 1156, '1', 2.1, 6, 1, '2017-09-13 08:45:24'),
(39, 1114, '3', -0.1875, 15, 0, '2017-09-13 08:45:25'),
(69, 607, '4', -1.04177, 23, 0, '2017-09-13 08:45:25'),
(41, 1124, '0', 0, 3, -1, '2017-09-13 08:45:25'),
(70, 2808, '3', 2.76684, 8, 1, '2017-09-13 08:45:25'),
(68, 2845, '1', 2.65665, 10, 1, '2017-09-13 08:45:27'),
(57, 3437, '0', -0.00154959, 44, 0, '2017-09-13 08:45:27'),
(46, 84, '2', -0.1875, 15, 0, '2017-09-13 08:45:27'),
(39, 394, '3', -2.43, 2, 0, '2017-09-13 08:45:27'),
(44, 482, '1', -1.7415, 10, 0, '2017-09-13 08:45:27'),
(42, 2833, '3', 2.69195, 9, 1, '2017-09-13 08:45:27'),
(49, 36, '4', 0.27, 14, 1, '2017-09-13 08:45:27'),
(50, 1326, '1', 1.57313, 16, 1, '2017-09-13 08:45:28'),
(66, 774, '1', 2.08333, 8, 1, '2017-09-13 08:45:29'),
(67, 2934, '1', -1.92, 12, 0, '2017-09-13 08:45:29'),
(38, 5, '3', 1.2675, 7, 1, '2017-09-13 08:45:29'),
(36, 3100, '2', -1.09903, 15, 0, '2017-09-13 08:45:31'),
(51, 33, '1', -0.12, 16, 0, '2017-09-13 08:45:31'),
(64, 1199, '0', -0.09375, 32, 0, '2017-09-13 08:45:32'),
(42, 2841, '3', 2.83093, 5, 1, '2017-09-13 08:45:33'),
(39, 365, '4', -1.2675, 7, 0, '2017-09-13 08:45:34'),
(43, 747, '1', -0.668981, 19, 0, '2017-09-13 08:45:34'),
(70, 2811, '2', -2.73701, 9, 0, '2017-09-13 08:45:34'),
(47, 1202, '3', -0.5, 30, 0, '2017-09-13 08:45:35'),
(69, 604, '3', 2.00083, 11, 1, '2017-09-13 08:45:35'),
(50, 1324, '3', 2.2376, 9, 1, '2017-09-13 08:45:37'),
(53, 28, '2', 0.27, 14, 1, '2017-09-13 08:45:37'),
(67, 2923, '1', -2.1675, 9, 0, '2017-09-13 08:45:37'),
(48, 1191, '3', 0.0956633, 23, 1, '2017-09-13 08:45:38'),
(43, 742, '1', 2.1675, 6, 1, '2017-09-13 08:45:40'),
(63, 3422, '2', -0.559401, 25, 0, '2017-09-13 08:45:41'),
(52, 1200, '1', -0.148148, 28, 0, '2017-09-13 08:45:41'),
(70, 2806, '4', -2.79651, 7, 0, '2017-09-13 08:45:41'),
(50, 1092, '3', -2.43, 6, 0, '2017-09-13 08:45:43'),
(46, 90, '2', 0.0675, 17, 1, '2017-09-13 08:45:43'),
(44, 750, '0', 0, 17, -1, '2017-09-13 08:45:44'),
(44, 739, '0', 0, 17, -1, '2017-09-13 08:45:44'),
(60, 1187, '3', -0.0732422, 27, 0, '2017-09-13 08:45:44'),
(39, 373, '2', -0.75, 10, 0, '2017-09-13 08:45:44'),
(49, 30, '2', 0.0675, 17, 1, '2017-09-13 08:45:44'),
(38, 18, '4', 0.12, 16, 1, '2017-09-13 08:45:45'),
(33, 2419, '2', 1.30021, 41, 1, '2017-09-13 08:45:45'),
(51, 23, '1', 0.27, 14, 1, '2017-09-13 08:45:45'),
(41, 603, '1', 0.998521, 22, 1, '2017-09-13 08:45:46'),
(48, 1293, '1', -1.17188, 9, 0, '2017-09-13 08:45:47'),
(53, 23, '1', 0.75, 10, 1, '2017-09-13 08:45:47'),
(57, 3422, '2', -0.819731, 21, 0, '2017-09-13 08:45:48'),
(56, 2786, '2', -0.96, 34, 0, '2017-09-13 08:45:48'),
(70, 2794, '1', 2.79651, 7, 1, '2017-09-13 08:45:48'),
(42, 2825, '3', 2.43962, 16, 1, '2017-09-13 08:45:48'),
(46, 83, '2', -1.6875, 5, 0, '2017-09-13 08:45:49'),
(38, 6, '2', 1.47, 6, 1, '2017-09-13 08:45:51'),
(31, 2823, '1', -1.25, 35, 0, '2017-09-13 08:45:52'),
(50, 1335, '2', 2.1132, 9, 1, '2017-09-13 08:45:52'),
(68, 2847, '3', -2.05434, 26, 0, '2017-09-13 08:45:53'),
(41, 1311, '4', 2.3232, 6, 1, '2017-09-13 08:45:53'),
(47, 1284, '1', -0.3, 18, 0, '2017-09-13 08:45:53'),
(49, 31, '3', -0.9075, 9, 0, '2017-09-13 08:45:53'),
(66, 763, '2', 0.6862, 24, 1, '2017-09-13 08:45:53'),
(51, 25, '3', -0.9075, 9, 0, '2017-09-13 08:45:54'),
(45, 103, '4', -0.525, 33, 0, '2017-09-13 08:45:55'),
(41, 996, '4', -2.5392, 4, 0, '2017-09-13 08:45:57'),
(67, 2924, '3', -1.33333, 20, 0, '2017-09-13 08:45:57'),
(44, 479, '1', -1.36248, 15, 0, '2017-09-13 08:45:59'),
(49, 35, '2', 1.2675, 7, 1, '2017-09-13 08:46:00'),
(53, 34, '1', -0.3675, 13, 0, '2017-09-13 08:46:01'),
(31, 2735, '1', 2.5, 10, 1, '2017-09-13 08:46:02'),
(33, 379, '3', 0.0675, 17, 1, '2017-09-13 08:46:02'),
(38, 7, '3', -0.6075, 11, 0, '2017-09-13 08:46:02'),
(43, 745, '2', 0.6075, 22, 1, '2017-09-13 08:46:02'),
(46, 105, '2', -0.046875, 14, 0, '2017-09-13 08:46:03'),
(39, 401, '0', -0.0075, 20, 0, '2017-09-13 08:46:04'),
(45, 100, '0', -0.03, 10, 0, '2017-09-13 08:46:05'),
(67, 2911, '3', -2.25333, 8, 0, '2017-09-13 08:46:06'),
(69, 595, '4', 0.536982, 30, 1, '2017-09-13 08:46:06'),
(70, 2803, '4', -2.49214, 17, 0, '2017-09-13 08:46:06'),
(41, 599, '3', -2.1675, 9, 0, '2017-09-13 08:46:06'),
(33, 372, '2', -1.92, 4, 0, '2017-09-13 08:46:07'),
(56, 2767, '4', 1.92, 18, 1, '2017-09-13 08:46:07'),
(38, 3, '4', -1.47, 6, 0, '2017-09-13 08:46:08'),
(52, 1282, '3', 0.03, 27, 1, '2017-09-13 08:46:09'),
(36, 3288, '0', -0.00207756, 38, 0, '2017-09-13 08:46:09'),
(46, 107, '2', -1.92, 8, 0, '2017-09-13 08:46:10'),
(44, 745, '3', -1.57687, 11, 0, '2017-09-13 08:46:10'),
(51, 30, '3', -0.0675, 17, 0, '2017-09-13 08:46:12'),
(40, 2642, '3', -2.16462, 48, 0, '2017-09-13 08:46:13'),
(63, 3426, '1', 0.22314, 32, 1, '2017-09-13 08:46:13'),
(31, 2819, '2', 2.4, 12, 1, '2017-09-13 08:46:13'),
(50, 1340, '2', 1.2487, 22, 1, '2017-09-13 08:46:14'),
(49, 21, '1', -0.27, 14, 0, '2017-09-13 08:46:14'),
(66, 767, '1', 0.880208, 22, 1, '2017-09-13 08:46:15'),
(53, 32, '3', 0.27, 14, 1, '2017-09-13 08:46:15'),
(42, 2731, '1', -2.05434, 26, 0, '2017-09-13 08:46:15'),
(41, 1318, '1', -1.93718, 11, 0, '2017-09-13 08:46:16'),
(66, 484, '1', 2.7448, 2, 1, '2017-09-13 08:46:17'),
(38, 14, '1', 0.9075, 9, 1, '2017-09-13 08:46:17'),
(33, 1114, '3', -0.3675, 13, 0, '2017-09-13 08:46:19'),
(45, 99, '2', 0.1875, 15, 1, '2017-09-13 08:46:20'),
(67, 2916, '4', -1.76333, 14, 0, '2017-09-13 08:46:20'),
(39, 1122, '4', 0.12, 16, 1, '2017-09-13 08:46:21'),
(68, 2833, '2', -1.97297, 28, 0, '2017-09-13 08:46:21'),
(38, 9, '1', -1.6875, 5, 0, '2017-09-13 08:46:21'),
(43, 751, '1', -0.968492, 19, 0, '2017-09-13 08:46:22'),
(40, 1152, '1', -1.5, 10, 0, '2017-09-13 08:46:23'),
(66, 764, '1', -2.08333, 6, 0, '2017-09-13 08:46:24'),
(64, 1265, '0', -0.0576923, 52, 0, '2017-09-13 08:46:24'),
(68, 2841, '3', 2.89915, 3, 1, '2017-09-13 08:46:25'),
(51, 22, '1', 0.27, 14, 1, '2017-09-13 08:46:25'),
(31, 2729, '2', 2.45, 11, 1, '2017-09-13 08:46:25'),
(44, 754, '4', 1.2398, 15, 1, '2017-09-13 08:46:26'),
(53, 25, '3', -0.6075, 11, 0, '2017-09-13 08:46:26'),
(49, 22, '1', 0.48, 12, 1, '2017-09-13 08:46:26'),
(56, 2776, '1', 1.8, 20, 1, '2017-09-13 08:46:26'),
(67, 2921, '4', -2.34083, 7, 0, '2017-09-13 08:46:27'),
(39, 2404, '2', -2.56085, 7, 0, '2017-09-13 08:46:27'),
(33, 1121, '2', -1.08, 8, 0, '2017-09-13 08:46:28'),
(50, 1320, '3', 1.47, 15, 1, '2017-09-13 08:46:29'),
(38, 8, '0', 0, 7, -1, '2017-09-13 08:46:29'),
(57, 3436, '4', 0.0139463, 41, 1, '2017-09-13 08:46:29'),
(47, 1208, '2', -0.84, 36, 0, '2017-09-13 08:46:30'),
(48, 1208, '2', -0.0432, 44, 0, '2017-09-13 08:46:30'),
(46, 102, '0', -0.0075, 20, 0, '2017-09-13 08:46:31'),
(52, 1281, '1', -0.163333, 23, 0, '2017-09-13 08:46:31'),
(43, 754, '4', 1.7415, 10, 1, '2017-09-13 08:46:32'),
(69, 609, '2', 0.800833, 29, 1, '2017-09-13 08:46:35'),
(41, 604, '1', -1.47, 18, 0, '2017-09-13 08:46:35'),
(64, 1189, '3', 1.82143, 11, 1, '2017-09-13 08:46:36'),
(67, 2939, '4', -2.1675, 9, 0, '2017-09-13 08:46:36'),
(38, 19, '2', 1.2675, 7, 1, '2017-09-13 08:46:36'),
(47, 1191, '3', 1.38138, 9, 1, '2017-09-13 08:46:38'),
(49, 39, '2', 0.3675, 13, 1, '2017-09-13 08:46:39'),
(70, 1196, '4', 0.1875, 18, 1, '2017-09-13 08:46:40'),
(46, 100, '0', -0.03, 10, 0, '2017-09-13 08:46:41'),
(66, 761, '4', -1.19234, 17, 0, '2017-09-13 08:46:41'),
(46, 106, '1', -2.08333, 10, 0, '2017-09-13 08:46:41'),
(47, 1268, '0', 0, 3, -1, '2017-09-13 08:46:41'),
(39, 2408, '3', 2.15643, 14, 1, '2017-09-13 08:46:42'),
(51, 34, '1', -0.0675, 17, 0, '2017-09-13 08:46:42'),
(38, 17, '1', 1.2675, 7, 1, '2017-09-13 08:46:43'),
(31, 2732, '4', 2.36512, 18, 1, '2017-09-13 08:46:43'),
(69, 601, '4', 2.20408, 8, 1, '2017-09-13 08:46:43'),
(44, 483, '4', -1.03355, 19, 0, '2017-09-13 08:46:44'),
(53, 51, '3', -0.03, 18, 0, '2017-09-13 08:46:44'),
(42, 2819, '2', 1.93165, 29, 1, '2017-09-13 08:46:45'),
(66, 765, '4', -2.1675, 6, 0, '2017-09-13 08:46:46'),
(60, 173, '3', -0.4107, 63, 0, '2017-09-13 08:46:47'),
(36, 3312, '4', -0.0694707, 39, 0, '2017-09-13 08:46:48'),
(40, 2450, '0', 0, 25, -1, '2017-09-13 08:46:48'),
(33, 381, '0', -0.0075, 20, 0, '2017-09-13 08:46:48'),
(56, 2787, '3', -1.74, 21, 0, '2017-09-13 08:46:49'),
(68, 2733, '2', 2.09443, 25, 1, '2017-09-13 08:46:50'),
(66, 759, '4', -2.50095, 4, 0, '2017-09-13 08:46:51'),
(43, 756, '2', 1.09505, 19, 1, '2017-09-13 08:46:51'),
(52, 1265, '1', -1.13609, 20, 0, '2017-09-13 08:46:52'),
(70, 1184, '4', 0.421875, 15, 1, '2017-09-13 08:46:55'),
(33, 2418, '2', 2.49797, 7, 1, '2017-09-13 08:46:55'),
(57, 3433, '4', -0.447831, 27, 0, '2017-09-13 08:46:56'),
(38, 4, '2', -0.27, 14, 0, '2017-09-13 08:46:57'),
(44, 475, '1', -1.63894, 12, 0, '2017-09-13 08:46:57'),
(46, 108, '1', -0.0675, 17, 0, '2017-09-13 08:46:58'),
(63, 3420, '0', -0.00154959, 44, 0, '2017-09-13 08:46:58'),
(36, 3310, '3', -1.83743, 10, 0, '2017-09-13 08:46:58'),
(49, 28, '3', -0.0075, 19, 0, '2017-09-13 08:46:58'),
(50, 1338, '4', -0.597895, 31, 0, '2017-09-13 08:47:00'),
(51, 31, '3', -0.03, 18, 0, '2017-09-13 08:47:01'),
(48, 1199, '2', -0.00292969, 31, 0, '2017-09-13 08:47:02'),
(39, 380, '0', -0.0075, 20, 0, '2017-09-13 08:47:02'),
(56, 2770, '2', 2.16, 14, 1, '2017-09-13 08:47:02'),
(53, 48, '1', -0.03, 18, 0, '2017-09-13 08:47:02'),
(38, 12, '4', 1.47, 6, 1, '2017-09-13 08:47:03'),
(67, 1458, '3', 0.592593, 20, 1, '2017-09-13 08:47:03'),
(31, 2841, '3', 2.28943, 20, 1, '2017-09-13 08:47:04'),
(43, 741, '4', -1.29848, 13, 0, '2017-09-13 08:47:04'),
(47, 1200, '2', -1.08333, 23, 0, '2017-09-13 08:47:05'),
(40, 1155, '4', 0.3, 18, 1, '2017-09-13 08:47:07'),
(66, 771, '1', 1.11153, 18, 1, '2017-09-13 08:47:09'),
(43, 743, '4', 2.22454, 5, 1, '2017-09-13 08:47:09'),
(52, 1293, '2', 0.1875, 18, 1, '2017-09-13 08:47:10'),
(53, 57, '1', 0.75, 10, 1, '2017-09-13 08:47:12'),
(70, 1185, '2', -0.46301, 17, 0, '2017-09-13 08:47:12'),
(47, 1293, '1', -1.33333, 8, 0, '2017-09-13 08:47:13'),
(49, 24, '3', 0.0675, 17, 1, '2017-09-13 08:47:15'),
(38, 88, '3', -0.48, 12, 0, '2017-09-13 08:47:15'),
(33, 395, '0', -0.0075, 20, 0, '2017-09-13 08:47:16'),
(44, 480, '1', -0.826875, 19, 0, '2017-09-13 08:47:16'),
(42, 2735, '1', 1.80492, 32, 1, '2017-09-13 08:47:17'),
(67, 1463, '4', -1.39463, 14, 0, '2017-09-13 08:47:17'),
(68, 2859, '2', 2.19089, 28, 1, '2017-09-13 08:47:18'),
(36, 3322, '3', 0.958412, 20, 1, '2017-09-13 08:47:18'),
(46, 96, '0', -0.0075, 20, 0, '2017-09-13 08:47:18'),
(50, 1322, '4', -1.5498, 18, 0, '2017-09-13 08:47:18'),
(40, 2442, '4', 2.5875, 11, 1, '2017-09-13 08:47:18'),
(45, 104, '1', 2.5575, 59, 1, '2017-09-13 08:47:19'),
(51, 39, '2', 0, 20, 1, '2017-09-13 08:47:20'),
(57, 3428, '4', 0.619835, 24, 1, '2017-09-13 08:47:20'),
(52, 1189, '3', 1.10587, 11, 1, '2017-09-13 08:47:20'),
(48, 1269, '2', -1.09505, 19, 0, '2017-09-13 08:47:21'),
(38, 10, '3', -1.47, 6, 0, '2017-09-13 08:47:21'),
(39, 381, '0', -0.0075, 20, 0, '2017-09-13 08:47:22'),
(50, 1126, '4', -2.61333, 4, 0, '2017-09-13 08:47:22'),
(66, 762, '3', 1.36688, 13, 1, '2017-09-13 08:47:22'),
(69, 593, '2', -0.3675, 39, 0, '2017-09-13 08:47:23'),
(64, 1208, '3', -0.06, 49, 0, '2017-09-13 08:47:24'),
(70, 1186, '3', 0.860969, 13, 1, '2017-09-13 08:47:25'),
(56, 2785, '3', 1.62, 23, 1, '2017-09-13 08:47:26'),
(31, 2730, '3', -2.13414, 24, 0, '2017-09-13 08:47:27'),
(44, 474, '1', 1.47, 12, 1, '2017-09-13 08:47:28'),
(48, 1220, '2', 1.38138, 9, 1, '2017-09-13 08:47:30'),
(40, 1161, '2', 1.62865, 12, 1, '2017-09-13 08:47:30'),
(50, 1333, '2', 2.25333, 8, 1, '2017-09-13 08:47:30'),
(49, 20, '4', -0.1875, 15, 0, '2017-09-13 08:47:30'),
(69, 594, '3', 2.1168, 8, 1, '2017-09-13 08:47:31'),
(39, 1105, '3', -1.08, 8, 0, '2017-09-13 08:47:31'),
(33, 399, '0', 0, 16, -1, '2017-09-13 08:47:32'),
(38, 1, '3', -0.75, 10, 0, '2017-09-13 08:47:32'),
(64, 1220, '3', -2.14286, 8, 0, '2017-09-13 08:47:32'),
(53, 46, '2', 0, 20, 0, '2017-09-13 08:47:32'),
(51, 20, '2', 0.3675, 13, 1, '2017-09-13 08:47:33'),
(47, 1175, '4', 0.354492, 21, 1, '2017-09-13 08:47:34'),
(66, 488, '3', 1.12037, 14, 1, '2017-09-13 08:47:36'),
(52, 1217, '3', 0.1875, 15, 1, '2017-09-13 08:47:36'),
(39, 2429, '3', -2.74837, 6, 0, '2017-09-13 08:47:37'),
(45, 106, '1', -2.15, 17, 0, '2017-09-13 08:47:37'),
(70, 1169, '2', 0.630208, 13, 1, '2017-09-13 08:47:39'),
(43, 750, '4', -0.409735, 29, 0, '2017-09-13 08:47:39'),
(66, 776, '3', 2.50095, 4, 1, '2017-09-13 08:47:40'),
(56, 2777, '2', 2.04, 16, 1, '2017-09-13 08:47:42'),
(60, 1229, '1', 0, 54, 0, '2017-09-13 08:47:42'),
(63, 3433, '0', -0.00154959, 44, 0, '2017-09-13 08:47:43'),
(40, 2659, '3', -2.73401, 13, 0, '2017-09-13 08:47:43'),
(31, 2734, '3', 2.43962, 16, 1, '2017-09-13 08:47:43'),
(36, 3308, '3', 0.567108, 26, 1, '2017-09-13 08:47:44'),
(38, 30, '2', 0.3675, 13, 1, '2017-09-13 08:47:44'),
(68, 2865, '4', -2.25832, 26, 0, '2017-09-13 08:47:45'),
(47, 1220, '1', -1.10587, 11, 0, '2017-09-13 08:47:45'),
(67, 1460, '1', 0.459357, 28, 1, '2017-09-13 08:47:45'),
(51, 26, '4', 0.27, 14, 1, '2017-09-13 08:47:47'),
(64, 1257, '3', -2, 16, 0, '2017-09-13 08:47:48'),
(70, 1174, '3', 1.13609, 10, 1, '2017-09-13 08:47:49'),
(44, 742, '2', -0.6075, 22, 0, '2017-09-13 08:47:50'),
(49, 60, '0', -0.0075, 20, 0, '2017-09-13 08:47:50'),
(56, 2782, '0', 0, 9, -1, '2017-09-13 08:47:51'),
(66, 770, '1', -1.78255, 11, 0, '2017-09-13 08:47:51'),
(33, 387, '4', 0.0075, 19, 1, '2017-09-13 08:47:51'),
(53, 43, '1', 0.03, 18, 1, '2017-09-13 08:47:51'),
(39, 2414, '3', 2.00826, 16, 1, '2017-09-13 08:47:52'),
(42, 2881, '0', 0, 35, -1, '2017-09-13 08:47:53'),
(40, 1164, '3', 1.88988, 10, 1, '2017-09-13 08:47:53'),
(45, 98, '3', 0.45, 17, 1, '2017-09-13 08:47:54'),
(36, 3296, '2', -1.83743, 10, 0, '2017-09-13 08:47:54'),
(50, 1090, '4', -1.02083, 25, 0, '2017-09-13 08:47:56'),
(64, 1294, '3', 1.875, 9, 1, '2017-09-13 08:47:58'),
(66, 775, '4', 2.15643, 7, 1, '2017-09-13 08:47:58'),
(57, 3425, '3', 0.0759298, 37, 1, '2017-09-13 08:47:58'),
(48, 1281, '3', 0.00333333, 29, 1, '2017-09-13 08:47:59'),
(38, 32, '3', 0.27, 14, 1, '2017-09-13 08:47:59'),
(67, 1450, '1', -1.12037, 14, 0, '2017-09-13 08:48:00'),
(47, 1282, '2', -0.75, 15, 0, '2017-09-13 08:48:00'),
(40, 1165, '4', 2.13414, 8, 1, '2017-09-13 08:48:02'),
(53, 55, '1', 0.6075, 11, 1, '2017-09-13 08:48:02'),
(36, 3314, '4', -2.04726, 8, 0, '2017-09-13 08:48:03'),
(33, 367, '3', 0.48, 12, 1, '2017-09-13 08:48:03'),
(66, 491, '1', -2.26247, 5, 0, '2017-09-13 08:48:04'),
(50, 1315, '4', 2.22949, 8, 1, '2017-09-13 08:48:04'),
(45, 105, '4', 1.125, 10, 1, '2017-09-13 08:48:04'),
(39, 2453, '3', -2.45388, 13, 0, '2017-09-13 08:48:06'),
(49, 43, '1', 0.12, 16, 1, '2017-09-13 08:48:06'),
(44, 476, '1', -1.08, 16, 0, '2017-09-13 08:48:07'),
(51, 53, '0', -0.0075, 20, 0, '2017-09-13 08:48:07'),
(69, 852, '0', 0, 39, -1, '2017-09-13 08:48:10'),
(69, 996, '0', 0, 39, -1, '2017-09-13 08:48:10'),
(48, 1171, '4', 0.3675, 13, 1, '2017-09-13 08:48:12'),
(33, 1116, '4', 0.75, 10, 1, '2017-09-13 08:48:14'),
(49, 42, '2', 0.9075, 9, 1, '2017-09-13 08:48:15'),
(47, 1189, '3', 0.646684, 15, 1, '2017-09-13 08:48:15'),
(60, 1250, '2', -0.6075, 33, 0, '2017-09-13 08:48:16'),
(68, 2882, '2', -2.08567, 31, 0, '2017-09-13 08:48:16'),
(31, 2820, '1', -1.80492, 32, 0, '2017-09-13 08:48:16'),
(44, 746, '2', -1.56481, 10, 0, '2017-09-13 08:48:17'),
(50, 1103, '4', -1.94676, 14, 0, '2017-09-13 08:48:18'),
(66, 778, '3', 1.41797, 15, 1, '2017-09-13 08:48:18'),
(51, 49, '2', 0.6075, 11, 1, '2017-09-13 08:48:18'),
(38, 39, '0', -0.0075, 20, 0, '2017-09-13 08:48:20'),
(38, 21, '3', -0.0075, 21, 0, '2017-09-13 08:48:20'),
(40, 2646, '1', 2.60682, 19, 1, '2017-09-13 08:48:20'),
(69, 600, '3', 1.93718, 11, 1, '2017-09-13 08:48:22'),
(63, 3432, '3', -0.0387397, 39, 0, '2017-09-13 08:48:22'),
(53, 60, '0', -0.0075, 20, 0, '2017-09-13 08:48:22'),
(66, 785, '3', -2.50095, 4, 0, '2017-09-13 08:48:23'),
(52, 1208, '2', -0.0108, 47, 0, '2017-09-13 08:48:24'),
(39, 1152, '3', -0.0075, 19, 0, '2017-09-13 08:48:24'),
(70, 1270, '4', 0.114839, 37, 1, '2017-09-13 08:48:26'),
(67, 1467, '3', 0.9075, 27, 1, '2017-09-13 08:48:27'),
(43, 755, '0', -0.00130208, 48, 0, '2017-09-13 08:48:28'),
(38, 25, '3', -1.08, 8, 0, '2017-09-13 08:48:28'),
(69, 606, '1', -2.34083, 7, 0, '2017-09-13 08:48:28'),
(31, 2816, '4', 2.54929, 13, 1, '2017-09-13 08:48:29'),
(60, 1299, '3', 1.86226, 14, 1, '2017-09-13 08:48:30'),
(48, 1284, '3', 0.0075, 19, 1, '2017-09-13 08:48:31'),
(66, 783, '4', -1.94093, 9, 0, '2017-09-13 08:48:32'),
(68, 2864, '2', 2.40251, 17, 1, '2017-09-13 08:48:33'),
(42, 2859, '2', 1.44225, 40, 1, '2017-09-13 08:48:33'),
(57, 3430, '3', -0.125517, 35, 0, '2017-09-13 08:48:33'),
(49, 46, '2', -0.0075, 19, 0, '2017-09-13 08:48:34'),
(50, 1337, '1', -1.6875, 16, 0, '2017-09-13 08:48:34'),
(66, 473, '4', -2.43, 3, 0, '2017-09-13 08:48:34'),
(53, 47, '1', 0.48, 12, 1, '2017-09-13 08:48:35'),
(45, 109, '0', -0.1, 30, 0, '2017-09-13 08:48:35'),
(51, 55, '2', -0.0675, 17, 0, '2017-09-13 08:48:36'),
(38, 37, '2', -1.08, 8, 0, '2017-09-13 08:48:36'),
(43, 502, '2', 2.04726, 8, 1, '2017-09-13 08:48:37'),
(47, 1281, '1', -0.213333, 22, 0, '2017-09-13 08:48:37'),
(66, 797, '4', -2.62146, 3, 0, '2017-09-13 08:48:37'),
(66, 468, '4', -2.61333, 2, 0, '2017-09-13 08:48:40'),
(70, 1194, '1', 0.860969, 13, 1, '2017-09-13 08:48:40'),
(36, 3306, '1', 0.0907372, 38, 1, '2017-09-13 08:48:40'),
(68, 2883, '3', 2.81957, 7, 1, '2017-09-13 08:48:40'),
(40, 1168, '0', -0.407163, 20, 0, '2017-09-13 08:48:40'),
(48, 1287, '3', 1.88021, 10, 1, '2017-09-13 08:48:40'),
(50, 1331, '2', 2.04187, 7, 1, '2017-09-13 08:48:41'),
(56, 2789, '0', -0.06, 50, 0, '2017-09-13 08:48:41'),
(44, 747, '2', 0.280093, 25, 1, '2017-09-13 08:48:42'),
(33, 2427, '4', 1.72521, 29, 1, '2017-09-13 08:48:43'),
(43, 499, '1', 2.44737, 7, 1, '2017-09-13 08:48:43'),
(39, 1148, '0', -0.0075, 20, 0, '2017-09-13 08:48:44'),
(38, 36, '4', 1.08, 8, 1, '2017-09-13 08:48:45'),
(64, 1268, '0', -0.0625, 48, 0, '2017-09-13 08:48:46'),
(53, 44, '2', -0.3675, 13, 0, '2017-09-13 08:48:47'),
(52, 1294, '2', 0, 24, 0, '2017-09-13 08:48:48'),
(66, 495, '2', -1.74723, 9, 0, '2017-09-13 08:48:48'),
(31, 2833, '3', 2.28943, 20, 1, '2017-09-13 08:48:49'),
(45, 108, '2', 0.75, 15, 1, '2017-09-13 08:48:50'),
(63, 3421, '3', -0.396694, 28, 0, '2017-09-13 08:48:50'),
(50, 1307, '2', 2.18253, 10, 1, '2017-09-13 08:48:51'),
(33, 1115, '1', 0.9075, 9, 1, '2017-09-13 08:48:52'),
(69, 599, '1', 1.08, 24, 1, '2017-09-13 08:48:52'),
(67, 3051, '0', -0.00443787, 26, 0, '2017-09-13 08:48:53'),
(49, 49, '0', -0.0075, 20, 0, '2017-09-13 08:48:54'),
(38, 38, '1', -0.75, 10, 0, '2017-09-13 08:48:54'),
(42, 2882, '2', -2.38747, 22, 0, '2017-09-13 08:48:55'),
(64, 1284, '3', 1.5, 10, 1, '2017-09-13 08:48:55'),
(31, 2838, '3', 2.79651, 6, 1, '2017-09-13 08:48:55'),
(51, 46, '3', 0, 20, 0, '2017-09-13 08:48:55'),
(57, 3423, '1', 0.683368, 23, 1, '2017-09-13 08:48:56'),
(43, 740, '1', 1.83333, 14, 1, '2017-09-13 08:48:58'),
(50, 1334, '4', 2.34083, 7, 1, '2017-09-13 08:48:58'),
(53, 59, '3', -0.6075, 11, 0, '2017-09-13 08:48:59'),
(48, 1217, '0', -0.0075, 20, 0, '2017-09-13 08:49:01'),
(44, 477, '3', -1.11153, 18, 0, '2017-09-13 08:49:01'),
(66, 522, '2', -1.33333, 12, 0, '2017-09-13 08:49:01'),
(40, 2640, '2', 2.54772, 20, 1, '2017-09-13 08:49:01'),
(39, 1146, '0', -0.0075, 20, 0, '2017-09-13 08:49:04'),
(68, 2887, '3', 2.25832, 26, 1, '2017-09-13 08:49:06'),
(38, 34, '2', 0.48, 12, 1, '2017-09-13 08:49:06'),
(66, 782, '4', -2.29688, 6, 0, '2017-09-13 08:49:07'),
(36, 3305, '1', -0.459357, 28, 0, '2017-09-13 08:49:08'),
(70, 1203, '3', 0, 30, 1, '2017-09-13 08:49:10'),
(43, 746, '2', -1.83333, 14, 0, '2017-09-13 08:49:12'),
(53, 52, '3', -0.3675, 13, 0, '2017-09-13 08:49:12'),
(50, 1323, '2', -1.83105, 14, 0, '2017-09-13 08:49:12'),
(44, 478, '2', -1.6428, 13, 0, '2017-09-13 08:49:13'),
(51, 52, '4', -0.0675, 17, 0, '2017-09-13 08:49:13'),
(49, 47, '1', 0.0075, 19, 1, '2017-09-13 08:49:13'),
(64, 1200, '2', -1.41667, 19, 0, '2017-09-13 08:49:15'),
(66, 497, '4', -2.04726, 8, 0, '2017-09-13 08:49:15'),
(56, 2778, '2', 0.96, 34, 1, '2017-09-13 08:49:16'),
(39, 1157, '1', 0.3675, 13, 1, '2017-09-13 08:49:18'),
(40, 2649, '4', 2.71626, 18, 1, '2017-09-13 08:49:19'),
(53, 56, '2', -1.2675, 7, 0, '2017-09-13 08:49:19'),
(60, 172, '1', -0.922562, 49, 0, '2017-09-13 08:49:19'),
(70, 1190, '4', 1.2398, 10, 1, '2017-09-13 08:49:20'),
(38, 40, '1', -0.27, 14, 0, '2017-09-13 08:49:21'),
(57, 3434, '1', 0.559401, 25, 1, '2017-09-13 08:49:22'),
(50, 1329, '3', 2.08333, 10, 1, '2017-09-13 08:49:22'),
(67, 1451, '1', 0.0833333, 30, 1, '2017-09-13 08:49:23'),
(42, 2868, '2', 1.93165, 29, 1, '2017-09-13 08:49:24'),
(39, 1156, '4', -1.08, 8, 0, '2017-09-13 08:49:26'),
(47, 1269, '0', -0.00130208, 48, 0, '2017-09-13 08:49:26'),
(67, 3004, '2', -2.25333, 4, 0, '2017-09-13 08:49:27'),
(44, 738, '4', -1.03806, 14, 0, '2017-09-13 08:49:27'),
(43, 477, '3', -1.95652, 16, 0, '2017-09-13 08:49:28'),
(39, 2456, '4', -2.86314, 3, 0, '2017-09-13 08:49:28'),
(38, 24, '3', 0.9075, 9, 1, '2017-09-13 08:49:29'),
(49, 48, '1', -0.0675, 17, 0, '2017-09-13 08:49:30'),
(70, 1195, '4', 0.6075, 11, 1, '2017-09-13 08:49:31'),
(50, 995, '3', -2.25333, 8, 0, '2017-09-13 08:49:31'),
(36, 3300, '2', -0.6862, 24, 0, '2017-09-13 08:49:32'),
(67, 2929, '4', 2.08333, 4, 1, '2017-09-13 08:49:32'),
(51, 41, '4', -0.0075, 19, 0, '2017-09-13 08:49:32'),
(53, 53, '3', -0.12, 16, 0, '2017-09-13 08:49:35'),
(48, 1200, '1', -0.00925926, 34, 0, '2017-09-13 08:49:35'),
(63, 3435, '0', -0.00154959, 44, 0, '2017-09-13 08:49:35'),
(66, 2929, '4', 1.17188, 9, 1, '2017-09-13 08:49:36'),
(47, 1294, '4', -0.880208, 11, 0, '2017-09-13 08:49:37'),
(69, 602, '4', -0.292969, 44, 0, '2017-09-13 08:49:37'),
(52, 1209, '0', -0.0012, 50, 0, '2017-09-13 08:49:39'),
(40, 2656, '3', 2.72703, 20, 1, '2017-09-13 08:49:40'),
(38, 33, '3', 0.6075, 11, 1, '2017-09-13 08:49:41'),
(70, 1170, '2', 0.880208, 11, 1, '2017-09-13 08:49:42'),
(33, 2450, '3', 1.97917, 49, 1, '2017-09-13 08:49:42'),
(51, 54, '2', 0.75, 10, 1, '2017-09-13 08:49:42'),
(38, 28, '3', -1.47, 6, 0, '2017-09-13 08:49:47'),
(68, 2881, '1', -1.68819, 41, 0, '2017-09-13 08:49:47'),
(69, 596, '2', -1.90226, 11, 0, '2017-09-13 08:49:48'),
(33, 1153, '1', -1.95, 7, 0, '2017-09-13 08:49:48'),
(50, 1098, '4', -1.47, 18, 0, '2017-09-13 08:49:49'),
(53, 58, '2', -0.1875, 15, 0, '2017-09-13 08:49:50'),
(49, 57, '0', -0.0075, 20, 0, '2017-09-13 08:49:50'),
(44, 755, '3', -0.813802, 23, 0, '2017-09-13 08:49:50'),
(38, 31, '2', -1.6875, 5, 0, '2017-09-13 08:49:51'),
(70, 1276, '4', -1.17188, 12, 0, '2017-09-13 08:49:54'),
(43, 752, '3', 1.23913, 27, 1, '2017-09-13 08:49:55'),
(39, 2444, '4', -1.6428, 26, 0, '2017-09-13 08:49:55'),
(57, 3417, '4', -0.1875, 33, 0, '2017-09-13 08:49:55'),
(31, 2847, '0', -0.195743, 60, 0, '2017-09-13 08:49:56'),
(56, 2810, '2', -1.6672, 41, 0, '2017-09-13 08:49:57'),
(63, 3424, '1', -0.683368, 23, 0, '2017-09-13 08:49:58'),
(67, 1457, '3', -0.27, 28, 0, '2017-09-13 08:50:00'),
(51, 45, '0', -0.0075, 20, 0, '2017-09-13 08:50:02'),
(66, 3051, '4', -0.00443787, 25, 0, '2017-09-13 08:50:02'),
(69, 1308, '3', 1.76333, 14, 1, '2017-09-13 08:50:03'),
(64, 1269, '0', -0.0625, 48, 0, '2017-09-13 08:50:03'),
(70, 1183, '2', 0.619835, 12, 1, '2017-09-13 08:50:06'),
(38, 20, '3', -0.27, 14, 0, '2017-09-13 08:50:06'),
(50, 1350, '1', 1.54083, 17, 1, '2017-09-13 08:50:06'),
(49, 45, '0', 0, 17, -1, '2017-09-13 08:50:07'),
(57, 3419, '1', -1.58678, 12, 0, '2017-09-13 08:50:07'),
(47, 1257, '4', 0.333333, 32, 1, '2017-09-13 08:50:10'),
(53, 41, '0', -0.0075, 20, 0, '2017-09-13 08:50:10'),
(43, 475, '4', 1.95652, 16, 1, '2017-09-13 08:50:11'),
(44, 749, '3', -0.949219, 21, 0, '2017-09-13 08:50:12'),
(69, 598, '4', 2.08333, 10, 1, '2017-09-13 08:50:13'),
(38, 23, '1', 1.2675, 7, 1, '2017-09-13 08:50:13'),
(67, 1452, '2', 1.36688, 13, 1, '2017-09-13 08:50:13'),
(36, 3313, '2', 0.00567108, 44, 1, '2017-09-13 08:50:16'),
(50, 1359, '3', 2.00083, 11, 1, '2017-09-13 08:50:17'),
(47, 1219, '2', -1.21488, 8, 0, '2017-09-13 08:50:18'),
(49, 50, '1', 0.6075, 11, 1, '2017-09-13 08:50:18'),
(48, 1268, '1', 0.0325521, 43, 1, '2017-09-13 08:50:18'),
(64, 1202, '1', 1.66667, 16, 1, '2017-09-13 08:50:19'),
(43, 474, '3', -2.4, 8, 0, '2017-09-13 08:50:20'),
(51, 60, '4', -0.0675, 17, 0, '2017-09-13 08:50:20'),
(38, 22, '1', 0.75, 10, 1, '2017-09-13 08:50:23'),
(60, 3070, '3', -0.853333, 14, 0, '2017-09-13 08:50:23'),
(66, 1460, '1', 0.816635, 22, 1, '2017-09-13 08:50:24'),
(52, 1204, '3', -0.0117188, 45, 0, '2017-09-13 08:50:24'),
(42, 2871, '0', -0.387298, 60, 0, '2017-09-13 08:50:25'),
(70, 1216, '4', 0.0833333, 20, 1, '2017-09-13 08:50:26'),
(53, 45, '3', -0.0675, 17, 0, '2017-09-13 08:50:27'),
(38, 35, '2', 1.6875, 5, 1, '2017-09-13 08:50:28'),
(56, 2771, '3', 1.2, 30, 1, '2017-09-13 08:50:28'),
(67, 1459, '2', 1.17188, 15, 1, '2017-09-13 08:50:28'),
(33, 2449, '3', 1.83, 39, 1, '2017-09-13 08:50:28'),
(36, 3309, '3', 1.63894, 12, 1, '2017-09-13 08:50:28'),
(40, 2654, '1', -2.02257, 50, 0, '2017-09-13 08:50:30'),
(60, 3021, '2', -1.76333, 7, 0, '2017-09-13 08:50:30'),
(50, 1356, '3', -1.76333, 14, 0, '2017-09-13 08:50:31'),
(44, 471, '2', 0.403333, 19, 1, '2017-09-13 08:50:32'),
(51, 43, '1', 0.48, 12, 1, '2017-09-13 08:50:32'),
(66, 1461, '3', 2.04726, 8, 1, '2017-09-13 08:50:32'),
(69, 615, '2', 1.33333, 20, 1, '2017-09-13 08:50:32'),
(39, 2147, '4', 0.9075, 27, 1, '2017-09-13 08:50:34'),
(64, 1275, '1', -2.11111, 16, 0, '2017-09-13 08:50:34'),
(43, 748, '1', -1.875, 15, 0, '2017-09-13 08:50:34'),
(40, 1159, '1', 2.47645, 5, 1, '2017-09-13 08:50:35'),
(31, 2728, '0', 0, 38, -1, '2017-09-13 08:50:35'),
(70, 1227, '2', -1.02083, 10, 0, '2017-09-13 08:50:37'),
(50, 612, '3', 2.43, 6, 1, '2017-09-13 08:50:37'),
(49, 52, '0', -0.0075, 20, 0, '2017-09-13 08:50:38'),
(68, 2889, '4', -1.22474, 50, 0, '2017-09-13 08:50:38'),
(60, 3029, '3', 1.47, 9, 1, '2017-09-13 08:50:39'),
(48, 1295, '4', 0.00520833, 23, 1, '2017-09-13 08:50:41'),
(63, 3436, '0', -0.00154959, 44, 0, '2017-09-13 08:50:43'),
(50, 610, '2', -2.20408, 8, 0, '2017-09-13 08:50:45'),
(31, 2731, '4', 2.65665, 10, 1, '2017-09-13 08:50:45'),
(38, 29, '2', -0.0675, 17, 0, '2017-09-13 08:50:45'),
(52, 1298, '1', 1.2675, 21, 1, '2017-09-13 08:50:46'),
(64, 1296, '1', -1.5, 12, 0, '2017-09-13 08:50:46'),
(36, 3323, '2', -1.11153, 18, 0, '2017-09-13 08:50:46'),
(44, 766, '1', 1.2398, 15, 1, '2017-09-13 08:50:46'),
(53, 50, '3', -0.0075, 19, 0, '2017-09-13 08:50:47'),
(69, 1301, '2', -1.75854, 15, 0, '2017-09-13 08:50:48'),
(56, 2768, '1', -1.74, 21, 0, '2017-09-13 08:50:49'),
(67, 1461, '3', 0.886106, 21, 1, '2017-09-13 08:50:49'),
(38, 26, '4', 1.92, 4, 1, '2017-09-13 08:50:49'),
(66, 3035, '2', 0.46301, 17, 1, '2017-09-13 08:50:50'),
(47, 1199, '0', -0.00292969, 32, 0, '2017-09-13 08:50:50'),
(39, 2149, '4', 0.831025, 18, 1, '2017-09-13 08:50:51'),
(57, 3426, '0', -0.00154959, 44, 0, '2017-09-13 08:50:52'),
(51, 51, '0', -0.0075, 20, 0, '2017-09-13 08:50:52'),
(60, 3091, '3', -0.963333, 13, 0, '2017-09-13 08:50:53'),
(70, 1297, '3', 1.61333, 16, 1, '2017-09-13 08:50:53'),
(50, 1346, '4', 2.21558, 9, 1, '2017-09-13 08:50:54'),
(49, 54, '3', -0.12, 16, 0, '2017-09-13 08:50:54'),
(44, 493, '3', -1.61333, 8, 0, '2017-09-13 08:50:55'),
(68, 2862, '2', -2.47992, 19, 0, '2017-09-13 08:50:57'),
(38, 51, '3', -1.08, 8, 0, '2017-09-13 08:50:58'),
(53, 42, '4', -0.6075, 11, 0, '2017-09-13 08:50:58'),
(45, 110, '1', -2.0475, 127, 0, '2017-09-13 08:50:59'),
(66, 1458, '2', -1.6875, 9, 0, '2017-09-13 08:50:59'),
(43, 476, '2', -1.2, 24, 0, '2017-09-13 08:50:59'),
(39, 2158, '4', -1.98047, 9, 0, '2017-09-13 08:51:00'),
(33, 2456, '3', -2.26154, 32, 0, '2017-09-13 08:51:00'),
(36, 3307, '3', 1.4518, 14, 1, '2017-09-13 08:51:01'),
(50, 1123, '4', -2.29688, 8, 0, '2017-09-13 08:51:02'),
(31, 2886, '1', 2.47992, 19, 1, '2017-09-13 08:51:03'),
(68, 2874, '3', -2.81957, 7, 0, '2017-09-13 08:51:05'),
(38, 43, '1', 1.08, 8, 1, '2017-09-13 08:51:05'),
(40, 2653, '3', -2.39104, 30, 0, '2017-09-13 08:51:06'),
(42, 2888, '1', -1.68819, 41, 0, '2017-09-13 08:51:07'),
(60, 3014, '2', -0.75, 15, 0, '2017-09-13 08:51:07'),
(43, 753, '1', -1.85204, 9, 0, '2017-09-13 08:51:08'),
(70, 1210, '1', 0.421875, 15, 1, '2017-09-13 08:51:08'),
(69, 995, '4', 1.2675, 21, 1, '2017-09-13 08:51:09'),
(39, 2161, '4', -1.62197, 9, 0, '2017-09-13 08:51:09'),
(67, 3039, '2', -0.159763, 20, 0, '2017-09-13 08:51:09'),
(51, 56, '2', -0.0075, 19, 0, '2017-09-13 08:51:10'),
(33, 1147, '4', 1.5, 10, 1, '2017-09-13 08:51:10'),
(45, 96, '1', -1.2, 12, 0, '2017-09-13 08:51:11'),
(52, 172, '3', -2.26364, 27, 0, '2017-09-13 08:51:12'),
(66, 1464, '2', 1.50521, 14, 1, '2017-09-13 08:51:13'),
(49, 56, '4', -0.0075, 19, 0, '2017-09-13 08:51:13'),
(38, 54, '3', -1.08, 8, 0, '2017-09-13 08:51:13'),
(44, 769, '3', -0.892562, 20, 0, '2017-09-13 08:51:15'),
(53, 49, '2', 0.03, 18, 1, '2017-09-13 08:51:16'),
(33, 2445, '2', -2.83846, 7, 0, '2017-09-13 08:51:17'),
(36, 3317, '4', -1.11153, 18, 0, '2017-09-13 08:51:18'),
(70, 1292, '3', -1.08, 12, 0, '2017-09-13 08:51:19'),
(45, 101, '3', -0.574219, 9, 0, '2017-09-13 08:51:20'),
(39, 2146, '4', -1.2398, 10, 0, '2017-09-13 08:51:20'),
(51, 57, '3', -0.48, 12, 0, '2017-09-13 08:51:22'),
(50, 1316, '4', -1.33333, 20, 0, '2017-09-13 08:51:23'),
(43, 757, '4', -1.27599, 16, 0, '2017-09-13 08:51:23'),
(64, 1206, '3', -1.1, 38, 0, '2017-09-13 08:51:24'),
(33, 1107, '4', 1.2675, 7, 1, '2017-09-13 08:51:25'),
(67, 3035, '2', 0.55102, 16, 1, '2017-09-13 08:51:25'),
(53, 54, '3', -0.9075, 9, 0, '2017-09-13 08:51:26'),
(44, 470, '3', -1.57687, 11, 0, '2017-09-13 08:51:26'),
(68, 2879, '1', -2.21246, 22, 0, '2017-09-13 08:51:27'),
(42, 2865, '3', 2.28943, 20, 1, '2017-09-13 08:51:27'),
(66, 1462, '1', 1.2675, 14, 1, '2017-09-13 08:51:27'),
(38, 46, '2', -0.3675, 13, 0, '2017-09-13 08:51:27'),
(31, 2871, '1', -2.32379, 24, 0, '2017-09-13 08:51:28'),
(63, 3434, '0', -0.00154959, 44, 0, '2017-09-13 08:51:28'),
(60, 3036, '3', -0.333333, 20, 0, '2017-09-13 08:51:28'),
(47, 1287, '2', -0.130208, 38, 0, '2017-09-13 08:51:28'),
(50, 608, '4', -2.43, 6, 0, '2017-09-13 08:51:29'),
(48, 1209, '0', -0.0012, 50, 0, '2017-09-13 08:51:31'),
(39, 2155, '2', 1.53061, 12, 1, '2017-09-13 08:51:31'),
(33, 1156, '1', 1.95, 7, 1, '2017-09-13 08:51:31'),
(68, 2885, '4', 2.79651, 6, 1, '2017-09-13 08:51:33'),
(56, 2783, '3', 0.42, 43, 1, '2017-09-13 08:51:33'),
(49, 59, '0', -0.0075, 20, 0, '2017-09-13 08:51:33'),
(38, 52, '4', -1.2675, 7, 0, '2017-09-13 08:51:33'),
(45, 107, '4', -1.2675, 14, 0, '2017-09-13 08:51:34'),
(70, 1291, '4', 0.27, 14, 1, '2017-09-13 08:51:34'),
(57, 18, '4', 0.48, 12, 1, '2017-09-13 08:51:35'),
(48, 1299, '4', -2.56267, 5, 0, '2017-09-13 08:51:36'),
(69, 1323, '2', -0.949219, 28, 0, '2017-09-13 08:51:37'),
(53, 78, '1', 0.48, 12, 1, '2017-09-13 08:51:38'),
(33, 1145, '1', 2.1, 6, 1, '2017-09-13 08:51:38'),
(51, 44, '2', -0.1875, 15, 0, '2017-09-13 08:51:38'),
(47, 1217, '1', -0.75, 10, 0, '2017-09-13 08:51:39'),
(68, 2870, '3', 2.79651, 6, 1, '2017-09-13 08:51:39'),
(63, 3430, '2', -1.48915, 13, 0, '2017-09-13 08:51:41'),
(70, 1177, '2', 1.21488, 8, 1, '2017-09-13 08:51:42'),
(36, 3319, '1', -0.625236, 25, 0, '2017-09-13 08:51:43'),
(33, 1151, '2', 2.25, 5, 1, '2017-09-13 08:51:43'),
(67, 1453, '3', -1.2288, 18, 0, '2017-09-13 08:51:44'),
(38, 42, '3', -0.75, 10, 0, '2017-09-13 08:51:44'),
(68, 2877, '2', 2.84605, 6, 1, '2017-09-13 08:51:45'),
(60, 3038, '2', -0.563333, 17, 0, '2017-09-13 08:51:45'),
(50, 1367, '4', -1.75058, 17, 0, '2017-09-13 08:51:45'),
(66, 1454, '2', 0.668981, 19, 1, '2017-09-13 08:51:46'),
(57, 1, '3', -0.75, 10, 0, '2017-09-13 08:51:46'),
(42, 2886, '1', 2.44949, 20, 1, '2017-09-13 08:51:47'),
(39, 2180, '2', -0.55102, 16, 0, '2017-09-13 08:51:47'),
(51, 59, '3', -0.75, 10, 0, '2017-09-13 08:51:48'),
(53, 67, '0', 0, 11, -1, '2017-09-13 08:51:48'),
(38, 58, '3', -1.2675, 7, 0, '2017-09-13 08:51:51'),
(33, 1149, '1', 1.8, 8, 1, '2017-09-13 08:51:51'),
(49, 58, '0', -0.0075, 20, 0, '2017-09-13 08:51:53'),
(31, 2877, '2', 2.29129, 25, 1, '2017-09-13 08:51:53'),
(44, 3020, '1', -1.10587, 11, 0, '2017-09-13 08:51:54'),
(70, 1263, '2', -1.57687, 11, 0, '2017-09-13 08:51:54'),
(45, 114, '0', -0.0075, 20, 0, '2017-09-13 08:51:54'),
(46, 3042, '1', -0.55102, 16, 0, '2017-09-13 08:51:55'),
(38, 59, '3', -1.6875, 5, 0, '2017-09-13 08:51:56'),
(48, 1289, '4', -0.541875, 23, 0, '2017-09-13 08:51:59'),
(36, 3315, '2', -1.19234, 17, 0, '2017-09-13 08:52:00'),
(69, 1326, '1', 1.03092, 24, 1, '2017-09-13 08:52:01'),
(40, 2664, '4', -2.07906, 55, 0, '2017-09-13 08:52:01'),
(66, 1467, '3', 1.6875, 15, 1, '2017-09-13 08:52:01'),
(50, 1099, '4', 1.75433, 16, 1, '2017-09-13 08:52:02'),
(56, 2791, '3', 1.2, 30, 1, '2017-09-13 08:52:03'),
(31, 2874, '2', -2.73861, 10, 0, '2017-09-13 08:52:03'),
(33, 2446, '1', -2.68548, 13, 0, '2017-09-13 08:52:04'),
(48, 1264, '4', 2.56267, 5, 1, '2017-09-13 08:52:04'),
(43, 763, '2', 0.0354442, 41, 1, '2017-09-13 08:52:05'),
(39, 2152, '2', 1.2513, 17, 1, '2017-09-13 08:52:05'),
(53, 64, '4', 0.12, 16, 1, '2017-09-13 08:52:05'),
(57, 12, '0', -0.0075, 20, 0, '2017-09-13 08:52:06'),
(60, 3017, '3', -0.213333, 22, 0, '2017-09-13 08:52:07'),
(51, 48, '0', -0.0075, 20, 0, '2017-09-13 08:52:08'),
(67, 1464, '2', 0.574219, 27, 1, '2017-09-13 08:52:11'),
(44, 3011, '3', -0.46301, 17, 0, '2017-09-13 08:52:11'),
(52, 1206, '3', -0.00333333, 58, 0, '2017-09-13 08:52:11'),
(38, 41, '3', -0.1875, 15, 0, '2017-09-13 08:52:11'),
(70, 1197, '1', 0.1875, 18, 1, '2017-09-13 08:52:11'),
(49, 51, '0', -0.0075, 20, 0, '2017-09-13 08:52:13'),
(33, 2434, '1', 2.72727, 10, 1, '2017-09-13 08:52:14'),
(45, 120, '0', -0.0075, 20, 0, '2017-09-13 08:52:15'),
(68, 2861, '2', 2.15639, 29, 1, '2017-09-13 08:52:15'),
(63, 3428, '4', 0.154959, 34, 1, '2017-09-13 08:52:16'),
(56, 2781, '0', 0, 14, -1, '2017-09-13 08:52:17'),
(70, 1198, '4', 1.47, 6, 1, '2017-09-13 08:52:17'),
(40, 2662, '1', -2.63446, 17, 0, '2017-09-13 08:52:18'),
(36, 3316, '1', -1.11153, 18, 0, '2017-09-13 08:52:18'),
(64, 1299, '2', -0.0991736, 54, 0, '2017-09-13 08:52:18'),
(31, 2865, '4', -2.56905, 16, 0, '2017-09-13 08:52:19'),
(60, 3086, '2', -1.08, 12, 0, '2017-09-13 08:52:20'),
(52, 1264, '1', -2.2376, 9, 0, '2017-09-13 08:52:20'),
(38, 50, '1', 0.75, 10, 1, '2017-09-13 08:52:21'),
(39, 2150, '2', -0.916205, 17, 0, '2017-09-13 08:52:22'),
(57, 88, '1', 0.12, 16, 1, '2017-09-13 08:52:22'),
(69, 1132, '1', 1.2675, 21, 1, '2017-09-13 08:52:22'),
(46, 3024, '0', -0.00382653, 28, 0, '2017-09-13 08:52:23'),
(48, 1296, '2', 0.130208, 19, 1, '2017-09-13 08:52:23'),
(66, 1452, '2', 0.6075, 22, 1, '2017-09-13 08:52:23'),
(70, 1172, '4', 1.2675, 7, 1, '2017-09-13 08:52:24'),
(53, 76, '0', -0.0075, 20, 0, '2017-09-13 08:52:25'),
(51, 47, '1', 0.0075, 19, 1, '2017-09-13 08:52:26'),
(49, 44, '2', -0.1875, 15, 0, '2017-09-13 08:52:28'),
(39, 2156, '2', -2.0172, 9, 0, '2017-09-13 08:52:31'),
(38, 53, '3', -0.75, 10, 0, '2017-09-13 08:52:31'),
(33, 2451, '3', 2.58088, 19, 1, '2017-09-13 08:52:33'),
(60, 3134, '3', -1.2675, 14, 0, '2017-09-13 08:52:33'),
(44, 3047, '2', -0.0956633, 23, 0, '2017-09-13 08:52:34'),
(40, 1162, '3', 1.02599, 16, 1, '2017-09-13 08:52:35'),
(42, 2884, '4', -1.34164, 48, 0, '2017-09-13 08:52:36'),
(31, 2825, '3', 2.40251, 17, 1, '2017-09-13 08:52:36'),
(43, 771, '1', 0.318998, 31, 1, '2017-09-13 08:52:36'),
(52, 1295, '4', 0.255208, 17, 1, '2017-09-13 08:52:37'),
(46, 3013, '4', -0.75, 14, 0, '2017-09-13 08:52:37'),
(49, 55, '0', 0, 9, -1, '2017-09-13 08:52:37'),
(53, 77, '0', 0, 14, -1, '2017-09-13 08:52:39'),
(51, 50, '1', 0.48, 12, 1, '2017-09-13 08:52:39'),
(47, 1250, '0', -0.000833333, 60, 0, '2017-09-13 08:52:39'),
(38, 57, '1', 0.75, 10, 1, '2017-09-13 08:52:41'),
(57, 5, '0', -0.0075, 20, 0, '2017-09-13 08:52:42'),
(48, 1275, '2', -1.12037, 21, 0, '2017-09-13 08:52:44'),
(36, 2603, '4', -1.80187, 9, 0, '2017-09-13 08:52:45'),
(45, 119, '4', -2.27505, 31, 0, '2017-09-13 08:52:46'),
(43, 488, '1', -1.44676, 11, 0, '2017-09-13 08:52:47'),
(69, 1338, '4', -0.804528, 27, 0, '2017-09-13 08:52:49'),
(39, 2145, '2', 0.217456, 19, 1, '2017-09-13 08:52:49'),
(57, 9, '1', -1.08, 8, 0, '2017-09-13 08:52:50'),
(67, 1466, '2', 0.12, 40, 1, '2017-09-13 08:52:52'),
(40, 1160, '4', -0.846932, 17, 0, '2017-09-13 08:52:52'),
(50, 623, '4', -0.592593, 50, 0, '2017-09-13 08:52:52'),
(56, 2764, '3', -0.9, 35, 0, '2017-09-13 08:52:53'),
(60, 3031, '3', 0.403333, 19, 1, '2017-09-13 08:52:53'),
(53, 69, '1', 0.27, 14, 1, '2017-09-13 08:52:53'),
(66, 1466, '2', 0.5292, 29, 1, '2017-09-13 08:52:53'),
(36, 2613, '4', 1.57687, 11, 1, '2017-09-13 08:52:55'),
(52, 173, '4', 2.0172, 18, 1, '2017-09-13 08:52:55'),
(39, 2159, '2', -2.29688, 6, 0, '2017-09-13 08:52:55'),
(44, 3013, '1', -0.137755, 22, 0, '2017-09-13 08:52:56'),
(68, 2855, '3', -1.64317, 42, 0, '2017-09-13 08:52:57'),
(70, 1261, '3', 0.0747922, 32, 1, '2017-09-13 08:52:57'),
(46, 3158, '4', -0.600416, 21, 0, '2017-09-13 08:52:57'),
(49, 53, '0', -0.0075, 20, 0, '2017-09-13 08:52:58'),
(64, 1204, '4', 0.0833333, 40, 1, '2017-09-13 08:52:59'),
(47, 1283, '4', 0.130208, 19, 1, '2017-09-13 08:52:59'),
(51, 58, '0', -0.0075, 20, 0, '2017-09-13 08:52:59'),
(63, 3423, '0', -0.00154959, 44, 0, '2017-09-13 08:53:00'),
(38, 47, '2', -0.0075, 19, 0, '2017-09-13 08:53:00'),
(67, 1462, '1', 1.80187, 9, 1, '2017-09-13 08:53:00'),
(36, 2608, '3', 2.1675, 6, 1, '2017-09-13 08:53:01'),
(31, 2733, '2', 2.09443, 25, 1, '2017-09-13 08:53:02'),
(66, 1450, '4', 1.56481, 10, 1, '2017-09-13 08:53:03'),
(57, 17, '1', 0.27, 14, 1, '2017-09-13 08:53:04'),
(70, 1173, '2', 1.2675, 7, 1, '2017-09-13 08:53:04'),
(60, 8, '3', -1.2675, 7, 0, '2017-09-13 08:53:06'),
(38, 44, '3', -1.47, 6, 0, '2017-09-13 08:53:06'),
(56, 2766, '1', 2.16, 14, 1, '2017-09-13 08:53:06'),
(50, 1348, '4', -1.89187, 14, 0, '2017-09-13 08:53:07'),
(36, 2604, '1', -2.1675, 6, 0, '2017-09-13 08:53:08'),
(64, 1187, '2', 1.29199, 11, 1, '2017-09-13 08:53:09'),
(57, 19, '1', -1.2675, 7, 0, '2017-09-13 08:53:11'),
(44, 3045, '1', 0.55102, 16, 1, '2017-09-13 08:53:12'),
(66, 1469, '2', 2.325, 9, 1, '2017-09-13 08:53:12'),
(38, 56, '3', 1.6875, 5, 1, '2017-09-13 08:53:12'),
(70, 1269, '3', -2.5, 8, 0, '2017-09-13 08:53:12'),
(39, 2143, '1', -0.991875, 17, 0, '2017-09-13 08:53:12'),
(50, 1362, '4', -2.46387, 6, 0, '2017-09-13 08:53:13'),
(53, 80, '4', 0.0075, 19, 1, '2017-09-13 08:53:13'),
(33, 2654, '3', -2.21385, 41, 0, '2017-09-13 08:53:15'),
(49, 41, '2', -0.03, 18, 0, '2017-09-13 08:53:15'),
(36, 2610, '3', 1.80187, 9, 1, '2017-09-13 08:53:16'),
(69, 1327, '3', 0.6348, 27, 1, '2017-09-13 08:53:17'),
(45, 117, '0', -0.00333333, 30, 0, '2017-09-13 08:53:17'),
(51, 42, '1', -0.03, 18, 0, '2017-09-13 08:53:17'),
(52, 1283, '1', -0.0208333, 22, 0, '2017-09-13 08:53:18'),
(46, 3055, '4', 0.137755, 22, 1, '2017-09-13 08:53:19'),
(70, 1218, '1', -1.08, 8, 0, '2017-09-13 08:53:20'),
(53, 68, '3', 1.2675, 7, 1, '2017-09-13 08:53:20'),
(60, 7, '3', -0.27, 14, 0, '2017-09-13 08:53:21'),
(39, 2151, '1', 2.1168, 8, 1, '2017-09-13 08:53:21'),
(66, 3000, '3', 1.875, 9, 1, '2017-09-13 08:53:21'),
(38, 60, '3', -0.6075, 11, 0, '2017-09-13 08:53:22'),
(31, 2884, '4', -2.41868, 21, 0, '2017-09-13 08:53:23'),
(50, 1355, '4', -2.00083, 11, 0, '2017-09-13 08:53:23'),
(67, 1465, '1', 0.137755, 22, 1, '2017-09-13 08:53:23'),
(64, 1283, '2', -1.25, 14, 0, '2017-09-13 08:53:24'),
(45, 112, '4', 2.04187, 7, 1, '2017-09-13 08:53:24'),
(36, 2607, '4', 1.92, 8, 1, '2017-09-13 08:53:24'),
(66, 1480, '3', -2.42857, 8, 0, '2017-09-13 08:53:29'),
(49, 77, '3', -0.27, 14, 0, '2017-09-13 08:53:29'),
(33, 2439, '1', 2.55, 15, 1, '2017-09-13 08:53:29'),
(40, 2657, '4', -2.30257, 38, 0, '2017-09-13 08:53:30'),
(39, 2153, '1', -1.9571, 10, 0, '2017-09-13 08:53:30'),
(63, 3419, '3', -0.303719, 30, 0, '2017-09-13 08:53:31'),
(44, 3050, '2', -0.309949, 19, 0, '2017-09-13 08:53:31'),
(38, 55, '3', -1.08, 8, 0, '2017-09-13 08:53:31'),
(36, 2612, '1', 2.04187, 7, 1, '2017-09-13 08:53:32'),
(57, 4, '0', -0.0075, 20, 0, '2017-09-13 08:53:32'),
(69, 1320, '3', 1.3872, 16, 1, '2017-09-13 08:53:33'),
(46, 3011, '2', -0.75, 14, 0, '2017-09-13 08:53:34'),
(64, 1188, '3', -1.2398, 10, 0, '2017-09-13 08:53:34'),
(43, 775, '0', -0.00141777, 46, 0, '2017-09-13 08:53:34'),
(56, 2808, '3', 2.10012, 29, 1, '2017-09-13 08:53:36'),
(66, 1476, '3', 2.59615, 7, 1, '2017-09-13 08:53:36'),
(52, 1188, '4', -0.382653, 18, 0, '2017-09-13 08:53:36'),
(42, 2866, '0', -0.387298, 60, 0, '2017-09-13 08:53:37'),
(51, 72, '0', -0.0075, 20, 0, '2017-09-13 08:53:38'),
(39, 2144, '1', -2.1888, 7, 0, '2017-09-13 08:53:38'),
(68, 2888, '3', 1.68819, 41, 1, '2017-09-13 08:53:38'),
(33, 2636, '1', -2.86954, 8, 0, '2017-09-13 08:53:38'),
(67, 1454, '2', 1.02083, 15, 1, '2017-09-13 08:53:38'),
(36, 2614, '4', 2.04187, 7, 1, '2017-09-13 08:53:38'),
(50, 1363, '2', 1.75854, 15, 1, '2017-09-13 08:53:38'),
(53, 74, '1', 0, 20, 1, '2017-09-13 08:53:40'),
(60, 16, '3', 0, 20, 0, '2017-09-13 08:53:40'),
(45, 111, '0', -0.0117188, 16, 0, '2017-09-13 08:53:40'),
(63, 3431, '2', 1.6875, 11, 1, '2017-09-13 08:53:42'),
(43, 470, '1', -1.80187, 9, 0, '2017-09-13 08:53:43'),
(48, 1206, '0', -0.000833333, 60, 0, '2017-09-13 08:53:44'),
(38, 48, '2', 0.3675, 13, 1, '2017-09-13 08:53:44'),
(57, 16, '2', -0.3675, 13, 0, '2017-09-13 08:53:44'),
(39, 2154, '1', -1.94676, 7, 0, '2017-09-13 08:53:45'),
(45, 116, '4', -0.48, 6, 0, '2017-09-13 08:53:46'),
(66, 1470, '1', 2.46, 9, 1, '2017-09-13 08:53:46'),
(40, 2648, '4', 2.71737, 16, 1, '2017-09-13 08:53:46'),
(49, 62, '2', -0.03, 18, 0, '2017-09-13 08:53:47'),
(68, 2868, '2', 2.71109, 11, 1, '2017-09-13 08:53:49'),
(33, 1141, '1', 1.2, 12, 1, '2017-09-13 08:53:50'),
(36, 2609, '1', -1.36688, 13, 0, '2017-09-13 08:53:51'),
(38, 49, '2', 1.08, 8, 1, '2017-09-13 08:53:52'),
(50, 1108, '2', -1.76881, 13, 0, '2017-09-13 08:53:52'),
(48, 1250, '4', -2.1675, 9, 0, '2017-09-13 08:53:53'),
(44, 3066, '3', -0.137755, 22, 0, '2017-09-13 08:53:54'),
(60, 1, '4', 0.27, 14, 1, '2017-09-13 08:53:55'),
(31, 2852, '3', -1.76169, 33, 0, '2017-09-13 08:53:56'),
(53, 61, '3', -0.0675, 17, 0, '2017-09-13 08:53:57'),
(68, 2866, '4', 2.79285, 8, 1, '2017-09-13 08:53:57'),
(69, 1106, '1', -1.08, 24, 0, '2017-09-13 08:53:57'),
(51, 70, '2', 0, 20, 0, '2017-09-13 08:53:57'),
(49, 67, '2', -0.6075, 11, 0, '2017-09-13 08:53:58'),
(46, 3068, '1', 0.0344388, 25, 1, '2017-09-13 08:53:58'),
(52, 1250, '2', -1.02083, 25, 0, '2017-09-13 08:54:01'),
(36, 2601, '2', 1.6875, 10, 1, '2017-09-13 08:54:02'),
(66, 1487, '1', 1.8913, 17, 1, '2017-09-13 08:54:02'),
(38, 45, '2', -0.6075, 11, 0, '2017-09-13 08:54:04'),
(56, 2800, '2', 2.13414, 28, 1, '2017-09-13 08:54:04'),
(57, 8, '0', -0.0075, 20, 0, '2017-09-13 08:54:05'),
(40, 2638, '1', -2.58532, 18, 0, '2017-09-13 08:54:05'),
(50, 617, '3', -1.84083, 13, 0, '2017-09-13 08:54:05'),
(45, 2615, '1', 1.2675, 14, 1, '2017-09-13 08:54:05'),
(43, 762, '3', 0.6075, 22, 1, '2017-09-13 08:54:05'),
(47, 1264, '0', -0.000688705, 66, 0, '2017-09-13 08:54:06'),
(60, 17, '1', 0.48, 12, 1, '2017-09-13 08:54:07'),
(42, 719, '3', 1.56481, 10, 1, '2017-09-13 08:54:08'),
(67, 1456, '1', 0.1875, 30, 1, '2017-09-13 08:54:09'),
(49, 68, '3', 0.48, 12, 1, '2017-09-13 08:54:10'),
(46, 3028, '1', -1.10587, 11, 0, '2017-09-13 08:54:10'),
(52, 1289, '2', 1.80187, 9, 1, '2017-09-13 08:54:10'),
(70, 1208, '0', -0.0012, 50, 0, '2017-09-13 08:54:11'),
(45, 2613, '4', 2.1675, 6, 1, '2017-09-13 08:54:11'),
(43, 471, '3', -1.92, 6, 0, '2017-09-13 08:54:11'),
(40, 1163, '1', 2.13414, 8, 1, '2017-09-13 08:54:12'),
(53, 63, '3', -0.12, 16, 0, '2017-09-13 08:54:13'),
(33, 2457, '2', 2.41935, 24, 1, '2017-09-13 08:54:14'),
(38, 69, '2', -0.6075, 11, 0, '2017-09-13 08:54:15'),
(63, 3425, '3', 0.154959, 34, 1, '2017-09-13 08:54:16'),
(69, 1339, '2', 1.47, 18, 1, '2017-09-13 08:54:16'),
(47, 172, '3', -2.43, 11, 0, '2017-09-13 08:54:16'),
(45, 2608, '3', 2.29688, 5, 1, '2017-09-13 08:54:16'),
(68, 2894, '4', -2.55085, 20, 0, '2017-09-13 08:54:17'),
(51, 76, '0', -0.0075, 20, 0, '2017-09-13 08:54:18'),
(43, 774, '1', 2.29688, 6, 1, '2017-09-13 08:54:18'),
(70, 1189, '1', -1.53061, 8, 0, '2017-09-13 08:54:19'),
(67, 3044, '3', 0.880208, 11, 1, '2017-09-13 08:54:19'),
(49, 70, '3', -0.9075, 9, 0, '2017-09-13 08:54:19'),
(42, 718, '1', 1.20333, 11, 1, '2017-09-13 08:54:19'),
(36, 2615, '1', 0.9075, 18, 1, '2017-09-13 08:54:20'),
(57, 11, '1', 0.1875, 15, 1, '2017-09-13 08:54:21'),
(43, 759, '1', -2.50095, 4, 0, '2017-09-13 08:54:21'),
(46, 3006, '1', 0.979592, 12, 1, '2017-09-13 08:54:21'),
(38, 75, '2', -1.2675, 7, 0, '2017-09-13 08:54:22'),
(45, 2612, '1', 2.1675, 6, 1, '2017-09-13 08:54:22'),
(44, 3083, '0', -0.00382653, 28, 0, '2017-09-13 08:54:22'),
(53, 73, '1', 0.9075, 9, 1, '2017-09-13 08:54:22'),
(31, 2882, '2', -2.05434, 26, 0, '2017-09-13 08:54:23'),
(42, 494, '3', 2.25333, 4, 1, '2017-09-13 08:54:23'),
(40, 1167, '2', 1.76169, 11, 1, '2017-09-13 08:54:24'),
(52, 1275, '1', -1.56481, 15, 0, '2017-09-13 08:54:25'),
(60, 18, '0', 0, 19, -1, '2017-09-13 08:54:26'),
(69, 1315, '4', 1.96998, 11, 1, '2017-09-13 08:54:26'),
(39, 1465, '0', -0.00382653, 28, 0, '2017-09-13 08:54:27'),
(70, 1282, '4', -1.61333, 8, 0, '2017-09-13 08:54:27'),
(38, 78, '1', 1.47, 6, 1, '2017-09-13 08:54:27'),
(45, 2609, '2', 2.1675, 6, 1, '2017-09-13 08:54:28'),
(68, 2884, '4', -2.71109, 11, 0, '2017-09-13 08:54:29'),
(47, 1296, '4', -0.630208, 13, 0, '2017-09-13 08:54:29'),
(66, 1478, '4', -0.9, 28, 0, '2017-09-13 08:54:30'),
(36, 2611, '3', 1.47, 12, 1, '2017-09-13 08:54:32'),
(57, 10, '3', -0.48, 12, 0, '2017-09-13 08:54:32'),
(67, 1455, '1', 1.36688, 13, 1, '2017-09-13 08:54:32'),
(53, 71, '3', -0.75, 10, 0, '2017-09-13 08:54:32'),
(51, 79, '2', -0.12, 16, 0, '2017-09-13 08:54:33'),
(64, 1298, '0', -0.000833333, 60, 0, '2017-09-13 08:54:34'),
(39, 1455, '2', -2.04187, 7, 0, '2017-09-13 08:54:34'),
(44, 3024, '2', -0.75, 14, 0, '2017-09-13 08:54:36'),
(52, 1176, '1', -1.10587, 11, 0, '2017-09-13 08:54:37'),
(45, 2625, '1', -2.55, 9, 0, '2017-09-13 08:54:37');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(33, 2657, '2', -2.58903, 23, 0, '2017-09-13 08:54:38'),
(68, 2871, '1', -2.76586, 9, 0, '2017-09-13 08:54:38'),
(43, 765, '2', 1.08, 16, 1, '2017-09-13 08:54:38'),
(66, 1471, '3', -2.6, 8, 0, '2017-09-13 08:54:39'),
(38, 72, '2', -0.48, 12, 0, '2017-09-13 08:54:39'),
(49, 71, '0', -0.0075, 20, 0, '2017-09-13 08:54:39'),
(36, 2617, '1', 2.55, 9, 1, '2017-09-13 08:54:40'),
(68, 2886, '1', 2.92404, 3, 1, '2017-09-13 08:54:41'),
(67, 1449, '1', -1.80187, 9, 0, '2017-09-13 08:54:42'),
(60, 13, '1', 0.0675, 17, 1, '2017-09-13 08:54:43'),
(44, 3009, '4', 1.53061, 8, 1, '2017-09-13 08:54:45'),
(45, 2604, '2', 1.92, 8, 1, '2017-09-13 08:54:45'),
(68, 2895, '2', 2.87228, 5, 1, '2017-09-13 08:54:46'),
(42, 465, '2', 0.12, 24, 1, '2017-09-13 08:54:47'),
(66, 3002, '3', -1.96154, 9, 0, '2017-09-13 08:54:48'),
(36, 2634, '3', -2.6, 8, 0, '2017-09-13 08:54:48'),
(52, 1187, '1', -1.17188, 12, 0, '2017-09-13 08:54:48'),
(57, 13, '1', 0.0675, 17, 1, '2017-09-13 08:54:49'),
(31, 2881, '3', -2.01386, 27, 0, '2017-09-13 08:54:49'),
(46, 3056, '0', -0.00382653, 28, 0, '2017-09-13 08:54:50'),
(51, 69, '1', 0.12, 16, 1, '2017-09-13 08:54:50'),
(53, 62, '2', -0.0675, 17, 0, '2017-09-13 08:54:50'),
(43, 768, '2', -1.6875, 12, 0, '2017-09-13 08:54:50'),
(39, 1462, '1', 1.08, 16, 1, '2017-09-13 08:54:50'),
(45, 2610, '2', -2.04187, 7, 0, '2017-09-13 08:54:52'),
(38, 65, '2', -0.3675, 13, 0, '2017-09-13 08:54:53'),
(66, 1484, '1', -2.64286, 5, 0, '2017-09-13 08:54:54'),
(67, 1482, '2', -1.58678, 12, 0, '2017-09-13 08:54:54'),
(68, 2896, '3', 2.79285, 8, 1, '2017-09-13 08:54:54'),
(60, 6, '2', 0.48, 12, 1, '2017-09-13 08:54:55'),
(43, 484, '1', 2.26843, 6, 1, '2017-09-13 08:54:56'),
(39, 3044, '3', 1.6875, 6, 1, '2017-09-13 08:54:57'),
(66, 1482, '1', 2.72727, 4, 1, '2017-09-13 08:54:57'),
(33, 1154, '0', -0.15, 20, 0, '2017-09-13 08:54:58'),
(45, 2607, '3', -2.1675, 6, 0, '2017-09-13 08:54:58'),
(52, 1299, '1', -2.15978, 10, 0, '2017-09-13 08:54:59'),
(49, 74, '4', 0, 20, 0, '2017-09-13 08:54:59'),
(68, 2905, '1', 2.87619, 6, 1, '2017-09-13 08:55:00'),
(36, 2629, '4', -2.4, 12, 0, '2017-09-13 08:55:00'),
(63, 3418, '0', -0.00154959, 44, 0, '2017-09-13 08:55:00'),
(40, 2661, '0', 0, 36, -1, '2017-09-13 08:55:01'),
(69, 1126, '4', -0.520833, 35, 0, '2017-09-13 08:55:02'),
(66, 1474, '1', -2.64286, 5, 0, '2017-09-13 08:55:03'),
(70, 1202, '3', -0.00231481, 35, 0, '2017-09-13 08:55:03'),
(44, 3006, '1', 0.382653, 18, 1, '2017-09-13 08:55:03'),
(52, 171, '1', 2.7075, 4, 1, '2017-09-13 08:55:03'),
(63, 3437, '1', -0.0759298, 37, 0, '2017-09-13 08:55:03'),
(46, 3018, '3', -0.75, 14, 0, '2017-09-13 08:55:04'),
(48, 171, '1', 0.0379688, 71, 1, '2017-09-13 08:55:04'),
(56, 2811, '1', 0.87361, 59, 1, '2017-09-13 08:55:04'),
(53, 65, '4', -0.1875, 15, 0, '2017-09-13 08:55:04'),
(45, 2614, '4', 2.04187, 7, 1, '2017-09-13 08:55:05'),
(67, 1472, '2', -1.57687, 11, 0, '2017-09-13 08:55:05'),
(36, 2606, '1', 2.29688, 5, 1, '2017-09-13 08:55:05'),
(68, 2898, '4', 2.85477, 7, 1, '2017-09-13 08:55:07'),
(60, 11, '2', -0.48, 12, 0, '2017-09-13 08:55:07'),
(38, 62, '1', -0.1875, 15, 0, '2017-09-13 08:55:08'),
(42, 731, '2', 0.592593, 20, 1, '2017-09-13 08:55:08'),
(70, 1171, '3', -1.47, 6, 0, '2017-09-13 08:55:09'),
(57, 7, '0', -0.0075, 20, 0, '2017-09-13 08:55:10'),
(40, 1166, '1', 1.88988, 10, 1, '2017-09-13 08:55:10'),
(51, 71, '0', -0.0075, 20, 0, '2017-09-13 08:55:10'),
(33, 2448, '1', -2.6087, 12, 0, '2017-09-13 08:55:11'),
(52, 1296, '1', -1.17188, 9, 0, '2017-09-13 08:55:12'),
(44, 3028, '4', -1.2398, 10, 0, '2017-09-13 08:55:13'),
(43, 770, '2', 1.2513, 17, 1, '2017-09-13 08:55:13'),
(38, 73, '1', 1.47, 6, 1, '2017-09-13 08:55:14'),
(66, 1486, '3', -2.18182, 12, 0, '2017-09-13 08:55:14'),
(36, 2633, '3', 2.45, 11, 1, '2017-09-13 08:55:17'),
(69, 1332, '3', 1.6875, 15, 1, '2017-09-13 08:55:17'),
(40, 1158, '2', 2.13414, 8, 1, '2017-09-13 08:55:19'),
(49, 61, '0', -0.0075, 20, 0, '2017-09-13 08:55:19'),
(45, 2605, '2', 1.2675, 14, 1, '2017-09-13 08:55:19'),
(60, 19, '4', -0.48, 12, 0, '2017-09-13 08:55:20'),
(68, 2904, '3', 2.72082, 13, 1, '2017-09-13 08:55:20'),
(38, 71, '3', -1.08, 8, 0, '2017-09-13 08:55:22'),
(53, 72, '3', -0.0675, 17, 0, '2017-09-13 08:55:22'),
(70, 1220, '4', -0.75, 14, 0, '2017-09-13 08:55:22'),
(31, 2888, '3', 1.76169, 33, 1, '2017-09-13 08:55:23'),
(39, 3051, '0', -0.00443787, 26, 0, '2017-09-13 08:55:23'),
(66, 1455, '2', -1.80187, 9, 0, '2017-09-13 08:55:23'),
(67, 1479, '1', -1.04752, 18, 0, '2017-09-13 08:55:24'),
(33, 2455, '4', -2.58, 14, 0, '2017-09-13 08:55:25'),
(69, 1322, '3', 2.57812, 9, 1, '2017-09-13 08:55:26'),
(64, 1286, '4', 0.03, 54, 1, '2017-09-13 08:55:27'),
(56, 2813, '1', -2.30032, 23, 0, '2017-09-13 08:55:27'),
(36, 2623, '2', 2.45, 11, 1, '2017-09-13 08:55:27'),
(44, 3040, '2', -0.55102, 16, 0, '2017-09-13 08:55:28'),
(57, 3, '1', -0.0075, 19, 0, '2017-09-13 08:55:28'),
(45, 2602, '3', 1.80187, 9, 1, '2017-09-13 08:55:29'),
(66, 3044, '3', 1.6875, 6, 1, '2017-09-13 08:55:29'),
(60, 14, '1', 0.75, 10, 1, '2017-09-13 08:55:29'),
(51, 64, '0', -0.0075, 20, 0, '2017-09-13 08:55:30'),
(46, 3052, '0', -0.00382653, 28, 0, '2017-09-13 08:55:32'),
(68, 2921, '2', -2.80416, 11, 0, '2017-09-13 08:55:32'),
(49, 64, '3', -0.27, 14, 0, '2017-09-13 08:55:33'),
(36, 2621, '3', 2.65, 7, 1, '2017-09-13 08:55:34'),
(43, 776, '1', -0.886106, 21, 0, '2017-09-13 08:55:34'),
(33, 1144, '4', -1.5, 10, 0, '2017-09-13 08:55:35'),
(38, 64, '4', 0.3675, 13, 1, '2017-09-13 08:55:35'),
(31, 2862, '4', 2.54929, 13, 1, '2017-09-13 08:55:36'),
(67, 1480, '3', -1.43027, 13, 0, '2017-09-13 08:55:37'),
(40, 2644, '2', -2.71626, 18, 0, '2017-09-13 08:55:37'),
(42, 487, '1', -0.226875, 29, 0, '2017-09-13 08:55:37'),
(69, 1312, '4', -2.5, 11, 0, '2017-09-13 08:55:38'),
(66, 1449, '1', -1.80187, 9, 0, '2017-09-13 08:55:39'),
(60, 5, '3', 0.75, 10, 1, '2017-09-13 08:55:40'),
(44, 3055, '4', 1.10587, 11, 1, '2017-09-13 08:55:40'),
(64, 1295, '3', -0.630208, 13, 0, '2017-09-13 08:55:40'),
(45, 2623, '3', -2.4, 12, 0, '2017-09-13 08:55:40'),
(57, 6, '4', -0.48, 12, 0, '2017-09-13 08:55:41'),
(48, 172, '2', 1.28529, 38, 1, '2017-09-13 08:55:41'),
(43, 491, '1', -1.86981, 8, 0, '2017-09-13 08:55:42'),
(53, 70, '4', 0, 20, 0, '2017-09-13 08:55:43'),
(66, 3004, '2', -2.25333, 4, 0, '2017-09-13 08:55:43'),
(68, 2890, '0', 0, 12, -1, '2017-09-13 08:55:43'),
(31, 2870, '3', 2.65665, 10, 1, '2017-09-13 08:55:46'),
(45, 2611, '3', 2.1675, 6, 1, '2017-09-13 08:55:46'),
(70, 1199, '3', 0.143555, 25, 1, '2017-09-13 08:55:47'),
(36, 2626, '3', 2.35, 13, 1, '2017-09-13 08:55:48'),
(33, 2443, '3', -2.57609, 13, 0, '2017-09-13 08:55:48'),
(67, 3008, '2', 1.10587, 11, 1, '2017-09-13 08:55:48'),
(43, 767, '1', 2.29688, 6, 1, '2017-09-13 08:55:49'),
(42, 728, '4', -1.40443, 12, 0, '2017-09-13 08:55:49'),
(60, 12, '2', -0.75, 10, 0, '2017-09-13 08:55:50'),
(39, 1450, '1', -0.1875, 27, 0, '2017-09-13 08:55:50'),
(57, 14, '4', -0.9075, 9, 0, '2017-09-13 08:55:50'),
(51, 67, '0', -0.0075, 20, 0, '2017-09-13 08:55:50'),
(56, 2805, '1', 2.30032, 23, 1, '2017-09-13 08:55:50'),
(66, 1453, '4', -2.0172, 9, 0, '2017-09-13 08:55:52'),
(63, 3457, '0', -0.210208, 44, 0, '2017-09-13 08:55:52'),
(49, 69, '0', -0.0075, 20, 0, '2017-09-13 08:55:53'),
(31, 2889, '1', -2.81957, 7, 0, '2017-09-13 08:55:54'),
(44, 3079, '4', -0.75, 14, 0, '2017-09-13 08:55:54'),
(40, 2636, '2', 2.71913, 17, 1, '2017-09-13 08:55:54'),
(38, 74, '0', -0.0075, 20, 0, '2017-09-13 08:55:55'),
(33, 2442, '1', -2.6625, 9, 0, '2017-09-13 08:55:57'),
(46, 3066, '1', 0.0153061, 26, 1, '2017-09-13 08:55:57'),
(52, 1229, '4', 0.0833333, 45, 1, '2017-09-13 08:55:58'),
(42, 736, '2', -1.62197, 9, 0, '2017-09-13 08:55:58'),
(53, 75, '2', -0.12, 16, 0, '2017-09-13 08:55:58'),
(60, 3, '3', 1.08, 8, 1, '2017-09-13 08:55:58'),
(43, 760, '1', -1.6875, 10, 0, '2017-09-13 08:55:59'),
(31, 2866, '4', 2.79651, 6, 1, '2017-09-13 08:55:59'),
(36, 2729, '2', 2.54929, 13, 1, '2017-09-13 08:56:01'),
(39, 3035, '2', 1.10587, 11, 1, '2017-09-13 08:56:01'),
(33, 1117, '2', 1.6875, 5, 1, '2017-09-13 08:56:02'),
(68, 2908, '2', -2.57617, 19, 0, '2017-09-13 08:56:03'),
(69, 1325, '4', -1.60714, 26, 0, '2017-09-13 08:56:03'),
(57, 2, '4', -0.3675, 13, 0, '2017-09-13 08:56:03'),
(48, 1283, '4', 0.0208333, 22, 1, '2017-09-13 08:56:04'),
(66, 1451, '1', 1.33333, 12, 1, '2017-09-13 08:56:04'),
(64, 1289, '3', -0.48, 24, 0, '2017-09-13 08:56:04'),
(36, 2838, '3', 2.83093, 5, 1, '2017-09-13 08:56:05'),
(50, 728, '1', 1.51454, 11, 1, '2017-09-13 08:56:06'),
(33, 1110, '2', 1.92, 4, 1, '2017-09-13 08:56:07'),
(38, 70, '2', -0.48, 12, 0, '2017-09-13 08:56:07'),
(48, 1229, '4', 2.67593, 3, 1, '2017-09-13 08:56:07'),
(52, 1286, '3', -2.1675, 9, 0, '2017-09-13 08:56:07'),
(44, 3042, '2', 0.75, 14, 1, '2017-09-13 08:56:08'),
(51, 65, '0', -0.0075, 20, 0, '2017-09-13 08:56:10'),
(49, 76, '4', -0.03, 18, 0, '2017-09-13 08:56:11'),
(48, 1298, '4', -2.43, 6, 0, '2017-09-13 08:56:12'),
(60, 88, '3', -0.27, 14, 0, '2017-09-13 08:56:12'),
(53, 79, '2', -0.1875, 15, 0, '2017-09-13 08:56:14'),
(40, 2651, '4', 2.54772, 20, 1, '2017-09-13 08:56:15'),
(39, 1464, '4', -1.41797, 15, 0, '2017-09-13 08:56:16'),
(67, 1477, '0', 0, 29, -1, '2017-09-13 08:56:17'),
(38, 61, '0', 0, 11, -1, '2017-09-13 08:56:18'),
(31, 2883, '3', 2.47992, 19, 1, '2017-09-13 08:56:18'),
(33, 1150, '2', 1.2, 12, 1, '2017-09-13 08:56:19'),
(66, 1459, '2', 1.17188, 15, 1, '2017-09-13 08:56:20'),
(70, 1175, '0', -0.00292969, 32, 0, '2017-09-13 08:56:20'),
(43, 773, '3', 0.886106, 21, 1, '2017-09-13 08:56:20'),
(57, 34, '1', -0.0675, 17, 0, '2017-09-13 08:56:20'),
(63, 3440, '2', 0.0648789, 29, 1, '2017-09-13 08:56:21'),
(53, 87, '2', -1.08, 8, 0, '2017-09-13 08:56:21'),
(68, 2906, '4', -2.60112, 18, 0, '2017-09-13 08:56:21'),
(46, 3047, '3', 0.0612245, 24, 1, '2017-09-13 08:56:22'),
(50, 720, '4', 0.916205, 17, 1, '2017-09-13 08:56:24'),
(69, 1341, '3', -1.33333, 20, 0, '2017-09-13 08:56:24'),
(60, 4, '2', -0.48, 12, 0, '2017-09-13 08:56:25'),
(43, 764, '1', -2.22454, 5, 0, '2017-09-13 08:56:25'),
(44, 3018, '3', -0.46301, 17, 0, '2017-09-13 08:56:25'),
(64, 1264, '3', -1.33333, 22, 0, '2017-09-13 08:56:26'),
(53, 91, '0', 0, 5, -1, '2017-09-13 08:56:26'),
(33, 1152, '1', -1.8, 8, 0, '2017-09-13 08:56:26'),
(56, 2812, '4', -1.85371, 36, 0, '2017-09-13 08:56:26'),
(68, 2901, '4', 2.89738, 5, 1, '2017-09-13 08:56:26'),
(67, 1470, '1', 1.8252, 11, 1, '2017-09-13 08:56:28'),
(50, 486, '1', 2.22454, 5, 1, '2017-09-13 08:56:29'),
(36, 2735, '4', -2.13414, 24, 0, '2017-09-13 08:56:29'),
(64, 1176, '3', -2.39158, 3, 0, '2017-09-13 08:56:29'),
(66, 1457, '4', 1.6875, 10, 1, '2017-09-13 08:56:30'),
(70, 1284, '3', 0.75, 10, 1, '2017-09-13 08:56:30'),
(51, 80, '0', -0.0075, 20, 0, '2017-09-13 08:56:31'),
(49, 75, '0', -0.0075, 20, 0, '2017-09-13 08:56:31'),
(68, 2891, '1', 2.89738, 5, 1, '2017-09-13 08:56:32'),
(33, 1146, '1', 1.95, 7, 1, '2017-09-13 08:56:34'),
(60, 2, '3', 0.6075, 11, 1, '2017-09-13 08:56:36'),
(69, 1324, '3', 2.00826, 12, 1, '2017-09-13 08:56:36'),
(46, 3050, '1', -0.75, 14, 0, '2017-09-13 08:56:36'),
(38, 79, '2', -0.03, 18, 0, '2017-09-13 08:56:36'),
(57, 37, '0', 0, 17, -1, '2017-09-13 08:56:37'),
(66, 3039, '1', 1.43787, 8, 1, '2017-09-13 08:56:38'),
(52, 1285, '0', -0.00333333, 30, 0, '2017-09-13 08:56:38'),
(70, 1191, '3', 1.53061, 8, 1, '2017-09-13 08:56:38'),
(42, 733, '0', -0.001875, 40, 0, '2017-09-13 08:56:39'),
(53, 86, '2', 0.48, 12, 1, '2017-09-13 08:56:39'),
(44, 3068, '3', -0.75, 14, 0, '2017-09-13 08:56:39'),
(36, 2847, '4', 2.62111, 11, 1, '2017-09-13 08:56:40'),
(68, 2902, '2', 2.74383, 12, 1, '2017-09-13 08:56:43'),
(39, 1456, '1', 0.27, 28, 1, '2017-09-13 08:56:43'),
(40, 2660, '4', 2.65922, 30, 1, '2017-09-13 08:56:44'),
(31, 2879, '3', -2.25832, 26, 0, '2017-09-13 08:56:44'),
(43, 772, '4', -1.02083, 20, 0, '2017-09-13 08:56:45'),
(70, 1268, '3', -2.1888, 7, 0, '2017-09-13 08:56:45'),
(36, 2845, '3', -2.79651, 6, 0, '2017-09-13 08:56:47'),
(33, 1148, '0', 0, 13, -1, '2017-09-13 08:56:47'),
(45, 2630, '0', -0.05, 60, 0, '2017-09-13 08:56:47'),
(66, 1465, '1', 1.2398, 10, 1, '2017-09-13 08:56:47'),
(50, 465, '1', -0.333333, 20, 0, '2017-09-13 08:56:48'),
(44, 3056, '3', -1.2398, 10, 0, '2017-09-13 08:56:50'),
(46, 3020, '1', -0.75, 14, 0, '2017-09-13 08:56:50'),
(53, 93, '2', 0.137755, 11, 1, '2017-09-13 08:56:50'),
(51, 63, '0', -0.0075, 20, 0, '2017-09-13 08:56:51'),
(38, 67, '2', -0.27, 14, 0, '2017-09-13 08:56:51'),
(49, 79, '0', -0.0075, 20, 0, '2017-09-13 08:56:51'),
(60, 10, '1', 0.1875, 15, 1, '2017-09-13 08:56:51'),
(43, 769, '4', -2.00826, 8, 0, '2017-09-13 08:56:53'),
(52, 1230, '3', 1.6875, 16, 1, '2017-09-13 08:56:54'),
(67, 1474, '1', -0.435374, 26, 0, '2017-09-13 08:56:54'),
(45, 2626, '3', 2.65, 7, 1, '2017-09-13 08:56:55'),
(68, 2924, '2', 2.78495, 12, 1, '2017-09-13 08:56:55'),
(63, 3468, '0', -0.00259516, 34, 0, '2017-09-13 08:56:55'),
(50, 727, '2', 1.94676, 7, 1, '2017-09-13 08:56:56'),
(42, 481, '1', 0.826875, 19, 1, '2017-09-13 08:56:57'),
(57, 23, '4', 0, 20, 0, '2017-09-13 08:56:57'),
(38, 76, '3', -1.2675, 7, 0, '2017-09-13 08:56:58'),
(45, 2627, '3', -2.8, 4, 0, '2017-09-13 08:56:58'),
(66, 1456, '1', 1.47, 12, 1, '2017-09-13 08:56:59'),
(33, 2447, '4', 2.52273, 14, 1, '2017-09-13 08:57:00'),
(60, 9, '1', -0.6075, 11, 0, '2017-09-13 08:57:02'),
(51, 78, '1', 0.48, 12, 1, '2017-09-13 08:57:02'),
(50, 723, '1', 1.81481, 8, 1, '2017-09-13 08:57:03'),
(44, 3016, '3', -0.75, 14, 0, '2017-09-13 08:57:04'),
(40, 2691, '2', 2.7, 19, 1, '2017-09-13 08:57:04'),
(38, 68, '3', 1.2675, 7, 1, '2017-09-13 08:57:05'),
(45, 2601, '2', 2.1675, 6, 1, '2017-09-13 08:57:05'),
(31, 2855, '1', -2.44949, 20, 0, '2017-09-13 08:57:05'),
(53, 94, '3', -0.1875, 15, 0, '2017-09-13 08:57:05'),
(70, 1281, '3', 0.333333, 20, 1, '2017-09-13 08:57:05'),
(43, 761, '3', 1.63894, 12, 1, '2017-09-13 08:57:06'),
(67, 1481, '1', -1.47, 12, 0, '2017-09-13 08:57:06'),
(49, 78, '4', -0.12, 16, 0, '2017-09-13 08:57:07'),
(69, 1103, '2', 0.972801, 31, 1, '2017-09-13 08:57:07'),
(66, 2933, '4', -2, 8, 0, '2017-09-13 08:57:07'),
(68, 2926, '3', 2.78495, 12, 1, '2017-09-13 08:57:08'),
(50, 485, '2', -2.15643, 7, 0, '2017-09-13 08:57:11'),
(36, 2728, '4', 2.09443, 25, 1, '2017-09-13 08:57:11'),
(45, 2620, '4', 2.65, 7, 1, '2017-09-13 08:57:12'),
(42, 472, '1', 1.17188, 15, 1, '2017-09-13 08:57:12'),
(46, 3026, '2', 0.0612245, 24, 1, '2017-09-13 08:57:14'),
(45, 2617, '1', 2.85, 3, 1, '2017-09-13 08:57:15'),
(64, 1209, '2', 0.0192, 46, 1, '2017-09-13 08:57:16'),
(60, 33, '3', 0.27, 14, 1, '2017-09-13 08:57:16'),
(57, 24, '1', -0.0075, 19, 0, '2017-09-13 08:57:17'),
(39, 1454, '1', -0.0208333, 33, 0, '2017-09-13 08:57:17'),
(66, 1463, '2', 1.89824, 9, 1, '2017-09-13 08:57:17'),
(53, 90, '2', 0.48, 12, 1, '2017-09-13 08:57:17'),
(50, 487, '4', 2.04187, 7, 1, '2017-09-13 08:57:17'),
(48, 1133, '0', -0.0075, 20, 0, '2017-09-13 08:57:19'),
(70, 1217, '3', 0.1875, 15, 1, '2017-09-13 08:57:20'),
(40, 2655, '3', 2.82489, 17, 1, '2017-09-13 08:57:21'),
(51, 62, '1', -0.0075, 19, 0, '2017-09-13 08:57:22'),
(38, 77, '2', 0.03, 18, 1, '2017-09-13 08:57:23'),
(67, 2933, '1', -0.333333, 16, 0, '2017-09-13 08:57:23'),
(36, 2852, '3', -2.58532, 12, 0, '2017-09-13 08:57:23'),
(56, 2802, '4', -0.976528, 57, 0, '2017-09-13 08:57:24'),
(43, 766, '3', -0.823129, 20, 0, '2017-09-13 08:57:25'),
(52, 1278, '4', -0.6075, 33, 0, '2017-09-13 08:57:26'),
(49, 73, '0', -0.0075, 20, 0, '2017-09-13 08:57:27'),
(50, 489, '2', -1.80187, 9, 0, '2017-09-13 08:57:27'),
(44, 3158, '3', -0.407202, 24, 0, '2017-09-13 08:57:27'),
(42, 729, '1', -0.835648, 17, 0, '2017-09-13 08:57:30'),
(63, 3442, '0', -0.00259516, 34, 0, '2017-09-13 08:57:30'),
(69, 1340, '4', -1.8871, 23, 0, '2017-09-13 08:57:31'),
(33, 736, '1', 1.49481, 10, 1, '2017-09-13 08:57:31'),
(68, 2914, '2', -2.50665, 25, 0, '2017-09-13 08:57:32'),
(66, 1473, '4', -2.1, 15, 0, '2017-09-13 08:57:32'),
(38, 63, '4', -0.75, 10, 0, '2017-09-13 08:57:33'),
(45, 2616, '4', 2.1, 18, 1, '2017-09-13 08:57:33'),
(39, 1451, '1', 0.835648, 17, 1, '2017-09-13 08:57:34'),
(67, 1468, '2', 1.47, 12, 1, '2017-09-13 08:57:35'),
(50, 466, '0', 0, 9, -1, '2017-09-13 08:57:36'),
(60, 29, '0', -0.0075, 20, 0, '2017-09-13 08:57:36'),
(57, 40, '0', -0.0075, 20, 0, '2017-09-13 08:57:37'),
(53, 85, '2', 0.0075, 19, 1, '2017-09-13 08:57:37'),
(70, 1200, '2', -0.925926, 16, 0, '2017-09-13 08:57:37'),
(64, 173, '2', -1.8252, 22, 0, '2017-09-13 08:57:37'),
(49, 80, '1', -0.6075, 11, 0, '2017-09-13 08:57:38'),
(48, 391, '1', -0.0075, 19, 0, '2017-09-13 08:57:39'),
(64, 172, '2', 2.9457, 1, 1, '2017-09-13 08:57:39'),
(33, 472, '1', 1.92, 8, 1, '2017-09-13 08:57:39'),
(42, 486, '3', -1.6875, 9, 0, '2017-09-13 08:57:39'),
(38, 80, '2', -1.2675, 7, 0, '2017-09-13 08:57:40'),
(51, 74, '4', -0.0075, 19, 0, '2017-09-13 08:57:40'),
(69, 1307, '2', 2.25843, 9, 1, '2017-09-13 08:57:40'),
(36, 2731, '4', 2.36512, 18, 1, '2017-09-13 08:57:41'),
(68, 2934, '3', -2.86026, 8, 0, '2017-09-13 08:57:41'),
(31, 2859, '3', -1.62865, 36, 0, '2017-09-13 08:57:42'),
(46, 3083, '0', -0.00382653, 28, 0, '2017-09-13 08:57:42'),
(46, 3063, '2', 0, 28, 0, '2017-09-13 08:57:42'),
(45, 2631, '3', 2.5, 10, 1, '2017-09-13 08:57:43'),
(60, 21, '3', -1.47, 6, 0, '2017-09-13 08:57:43'),
(70, 1265, '3', -2.34763, 6, 0, '2017-09-13 08:57:43'),
(50, 737, '0', 0, 8, -1, '2017-09-13 08:57:44'),
(36, 2841, '3', 2.86514, 4, 1, '2017-09-13 08:57:46'),
(33, 481, '3', -2.04187, 7, 0, '2017-09-13 08:57:46'),
(43, 492, '3', -0.676875, 21, 0, '2017-09-13 08:57:47'),
(44, 3032, '1', -0.309949, 19, 0, '2017-09-13 08:57:47'),
(70, 1257, '2', -2.52083, 4, 0, '2017-09-13 08:57:47'),
(66, 1485, '4', 1.43787, 16, 1, '2017-09-13 08:57:48'),
(42, 725, '1', -1.62197, 9, 0, '2017-09-13 08:57:48'),
(45, 2819, '2', 2.79651, 6, 1, '2017-09-13 08:57:49'),
(50, 730, '0', 0, 5, -1, '2017-09-13 08:57:49'),
(68, 2918, '1', -2.8418, 9, 0, '2017-09-13 08:57:50'),
(38, 95, '3', 0.9075, 9, 1, '2017-09-13 08:57:50'),
(36, 2816, '4', 2.76188, 7, 1, '2017-09-13 08:57:52'),
(67, 1478, '2', 0.9075, 18, 1, '2017-09-13 08:57:53'),
(53, 92, '0', -0.0117188, 16, 0, '2017-09-13 08:57:53'),
(60, 25, '3', -0.6075, 11, 0, '2017-09-13 08:57:53'),
(48, 1112, '4', 0.1875, 15, 1, '2017-09-13 08:57:54'),
(51, 73, '4', -0.3675, 13, 0, '2017-09-13 08:57:54'),
(40, 3030, '2', 0.563333, 17, 1, '2017-09-13 08:57:54'),
(43, 493, '1', 1.61333, 8, 1, '2017-09-13 08:57:55'),
(70, 1293, '2', 1.33333, 8, 1, '2017-09-13 08:57:55'),
(66, 1483, '1', -2.44737, 7, 0, '2017-09-13 08:57:55'),
(50, 718, '1', 1.76333, 7, 1, '2017-09-13 08:57:56'),
(45, 2816, '4', 2.72703, 8, 1, '2017-09-13 08:57:57'),
(57, 20, '0', -0.0075, 20, 0, '2017-09-13 08:57:57'),
(52, 1465, '2', -0.75, 14, 0, '2017-09-13 08:57:58'),
(49, 72, '0', -0.0075, 20, 0, '2017-09-13 08:57:58'),
(40, 2999, '1', -1.92, 6, 0, '2017-09-13 08:58:00'),
(33, 733, '3', 1.2675, 14, 1, '2017-09-13 08:58:00'),
(68, 2892, '4', -2.76655, 11, 0, '2017-09-13 08:58:00'),
(31, 2887, '3', 2.28943, 20, 1, '2017-09-13 08:58:02'),
(45, 2825, '4', -2.79651, 6, 0, '2017-09-13 08:58:03'),
(50, 722, '3', 1.94676, 7, 1, '2017-09-13 08:58:03'),
(69, 1321, '4', -1.875, 24, 0, '2017-09-13 08:58:04'),
(52, 3044, '3', 1.6875, 6, 1, '2017-09-13 08:58:04'),
(60, 30, '3', -0.75, 10, 0, '2017-09-13 08:58:04'),
(70, 1294, '3', 1.17188, 9, 1, '2017-09-13 08:58:05'),
(63, 3438, '0', -0.00259516, 34, 0, '2017-09-13 08:58:05'),
(67, 1486, '3', -1.58678, 12, 0, '2017-09-13 08:58:05'),
(53, 82, '1', 0.48, 12, 1, '2017-09-13 08:58:05'),
(64, 1250, '2', -0.9075, 27, 0, '2017-09-13 08:58:06'),
(43, 777, '2', 1.73677, 11, 1, '2017-09-13 08:58:06'),
(64, 171, '2', -2.85188, 2, 0, '2017-09-13 08:58:07'),
(33, 486, '1', 1.94676, 7, 1, '2017-09-13 08:58:07'),
(38, 89, '4', 0.0075, 19, 1, '2017-09-13 08:58:08'),
(36, 2819, '2', 2.43962, 16, 1, '2017-09-13 08:58:08'),
(50, 725, '4', 2.0346, 6, 1, '2017-09-13 08:58:09'),
(42, 720, '3', -0.600416, 21, 0, '2017-09-13 08:58:09'),
(46, 3045, '0', -0.00382653, 28, 0, '2017-09-13 08:58:10'),
(56, 2797, '2', -1.46959, 46, 0, '2017-09-13 08:58:11'),
(44, 3063, '2', -0.0344388, 25, 0, '2017-09-13 08:58:12'),
(70, 1219, '3', 1.21488, 8, 1, '2017-09-13 08:58:12'),
(45, 2847, '1', -2.65665, 10, 0, '2017-09-13 08:58:13'),
(33, 494, '3', 1.92, 6, 1, '2017-09-13 08:58:13'),
(67, 3002, '1', 1.43787, 8, 1, '2017-09-13 08:58:13'),
(48, 396, '0', -0.0075, 20, 0, '2017-09-13 08:58:14'),
(51, 77, '0', -0.0075, 20, 0, '2017-09-13 08:58:14'),
(57, 22, '1', 0.0675, 17, 1, '2017-09-13 08:58:14'),
(43, 758, '3', -1.74723, 9, 0, '2017-09-13 08:58:15'),
(40, 3043, '2', -0.75, 15, 0, '2017-09-13 08:58:15'),
(60, 39, '4', -0.48, 12, 0, '2017-09-13 08:58:15'),
(69, 1335, '2', 1.85204, 12, 1, '2017-09-13 08:58:15'),
(36, 2820, '1', -2.76188, 7, 0, '2017-09-13 08:58:16'),
(68, 2903, '2', 2.6739, 15, 1, '2017-09-13 08:58:16'),
(53, 95, '3', 0.75, 10, 1, '2017-09-13 08:58:16'),
(50, 478, '2', -2.58, 7, 0, '2017-09-13 08:58:16'),
(39, 1467, '3', 0.213333, 44, 1, '2017-09-13 08:58:18'),
(49, 63, '0', -0.0075, 20, 0, '2017-09-13 08:58:19'),
(31, 2868, '2', 2.40251, 17, 1, '2017-09-13 08:58:19'),
(43, 793, '3', -2.29688, 5, 0, '2017-09-13 08:58:20'),
(40, 3027, '1', 2.08333, 5, 1, '2017-09-13 08:58:20'),
(33, 723, '1', 1.94676, 7, 1, '2017-09-13 08:58:20'),
(64, 1229, '2', -1.64609, 14, 0, '2017-09-13 08:58:22'),
(69, 1334, '4', 2.6, 8, 1, '2017-09-13 08:58:24'),
(38, 82, '3', -0.1875, 15, 0, '2017-09-13 08:58:24'),
(36, 2823, '1', -2.69195, 9, 0, '2017-09-13 08:58:25'),
(70, 1287, '3', 1.59505, 13, 1, '2017-09-13 08:58:25'),
(43, 797, '1', 2.38327, 5, 1, '2017-09-13 08:58:25'),
(40, 3041, '2', -2.08333, 5, 0, '2017-09-13 08:58:26'),
(33, 718, '1', 1.92, 6, 1, '2017-09-13 08:58:26'),
(67, 1484, '3', -1.33333, 14, 0, '2017-09-13 08:58:27'),
(44, 3026, '4', -0.55102, 16, 0, '2017-09-13 08:58:28'),
(57, 28, '2', 0.27, 14, 1, '2017-09-13 08:58:28'),
(43, 496, '1', -2.47934, 4, 0, '2017-09-13 08:58:28'),
(63, 3451, '1', -0.259516, 24, 0, '2017-09-13 08:58:29'),
(68, 2907, '3', 2.72082, 13, 1, '2017-09-13 08:58:30'),
(45, 2730, '4', 2.40251, 17, 1, '2017-09-13 08:58:31'),
(52, 1460, '1', 0.409735, 29, 1, '2017-09-13 08:58:33'),
(70, 172, '0', 0, 7, -1, '2017-09-13 08:58:33'),
(60, 37, '3', -0.0675, 17, 0, '2017-09-13 08:58:33'),
(51, 61, '0', -0.0075, 20, 0, '2017-09-13 08:58:34'),
(42, 734, '3', -0.0833333, 25, 0, '2017-09-13 08:58:34'),
(38, 91, '1', -0.75, 10, 0, '2017-09-13 08:58:34'),
(69, 1343, '4', 2.34, 11, 1, '2017-09-13 08:58:35'),
(45, 2833, '3', 2.83093, 5, 1, '2017-09-13 08:58:35'),
(40, 3003, '4', 1.20333, 11, 1, '2017-09-13 08:58:36'),
(53, 89, '0', -0.0075, 20, 0, '2017-09-13 08:58:36'),
(50, 735, '4', 0.333333, 20, 1, '2017-09-13 08:58:37'),
(39, 1459, '1', -0.826875, 19, 0, '2017-09-13 08:58:37'),
(36, 2730, '4', 2.54929, 13, 1, '2017-09-13 08:58:37'),
(43, 798, '1', -2.00826, 8, 0, '2017-09-13 08:58:37'),
(68, 2911, '1', 2.86026, 8, 1, '2017-09-13 08:58:38'),
(46, 3009, '0', -0.00382653, 28, 0, '2017-09-13 08:58:38'),
(49, 65, '0', -0.0075, 20, 0, '2017-09-13 08:58:39'),
(66, 1477, '3', 0.124486, 43, 1, '2017-09-13 08:58:39'),
(44, 3052, '4', 1.2398, 10, 1, '2017-09-13 08:58:39'),
(38, 90, '2', 1.2675, 7, 1, '2017-09-13 08:58:41'),
(67, 1487, '3', -1.54395, 13, 0, '2017-09-13 08:58:41'),
(66, 1468, '3', -2.7075, 2, 0, '2017-09-13 08:58:41'),
(43, 785, '1', 2.38327, 5, 1, '2017-09-13 08:58:41'),
(31, 2861, '2', 2.35584, 23, 1, '2017-09-13 08:58:42'),
(51, 68, '3', 0.75, 10, 1, '2017-09-13 08:58:44'),
(50, 494, '4', -1.76333, 7, 0, '2017-09-13 08:58:44'),
(45, 2823, '1', -2.72703, 8, 0, '2017-09-13 08:58:44'),
(43, 794, '1', -2.73347, 2, 0, '2017-09-13 08:58:44'),
(40, 3012, '3', -1.47, 9, 0, '2017-09-13 08:58:45'),
(36, 2833, '3', 2.72703, 8, 1, '2017-09-13 08:58:45'),
(53, 81, '4', 0.48, 12, 1, '2017-09-13 08:58:48'),
(67, 1488, '3', -2.00826, 8, 0, '2017-09-13 08:58:48'),
(31, 2864, '2', 2.84605, 6, 1, '2017-09-13 08:58:48'),
(57, 36, '0', -0.0075, 20, 0, '2017-09-13 08:58:48'),
(63, 3455, '4', 0.58391, 19, 1, '2017-09-13 08:58:49'),
(64, 1260, '4', -0.949219, 28, 0, '2017-09-13 08:58:49'),
(33, 750, '2', 1.5, 23, 1, '2017-09-13 08:58:49'),
(60, 24, '3', 0.03, 18, 1, '2017-09-13 08:58:51'),
(45, 2845, '3', -2.72703, 8, 0, '2017-09-13 08:58:52'),
(69, 1113, '4', -2.22727, 17, 0, '2017-09-13 08:58:52'),
(36, 2825, '2', -2.76188, 7, 0, '2017-09-13 08:58:52'),
(66, 1488, '2', 1.58678, 12, 1, '2017-09-13 08:58:52'),
(68, 2910, '0', 0, 15, -1, '2017-09-13 08:58:53'),
(67, 1469, '2', 2.43, 4, 1, '2017-09-13 08:58:53'),
(70, 1283, '4', 0.046875, 21, 1, '2017-09-13 08:58:53'),
(46, 3032, '2', 0.46301, 17, 1, '2017-09-13 08:58:55'),
(31, 2885, '4', 2.76586, 9, 1, '2017-09-13 08:58:57'),
(52, 3035, '2', 0.0344388, 25, 1, '2017-09-13 08:58:58'),
(53, 83, '1', 0.75, 10, 1, '2017-09-13 08:58:58'),
(50, 509, '2', -1.02083, 15, 0, '2017-09-13 08:58:58'),
(48, 2406, '1', -0.75, 44, 0, '2017-09-13 08:58:58'),
(33, 499, '4', -2.28947, 9, 0, '2017-09-13 08:58:59'),
(49, 82, '0', -0.0075, 20, 0, '2017-09-13 08:58:59'),
(40, 3001, '4', 0.853333, 14, 1, '2017-09-13 08:58:59'),
(38, 84, '1', -0.03, 18, 0, '2017-09-13 08:58:59'),
(57, 31, '3', -0.6075, 11, 0, '2017-09-13 08:58:59'),
(44, 3073, '2', -0.1875, 21, 0, '2017-09-13 08:59:00'),
(36, 2732, '4', 2.72703, 8, 1, '2017-09-13 08:59:01'),
(39, 2929, '0', -0.00520833, 24, 0, '2017-09-13 08:59:01'),
(60, 22, '1', 0.75, 10, 1, '2017-09-13 08:59:01'),
(40, 2994, '1', 2.25333, 4, 1, '2017-09-13 08:59:03'),
(51, 75, '0', -0.0075, 20, 0, '2017-09-13 08:59:04'),
(69, 1329, '3', 2.4, 12, 1, '2017-09-13 08:59:04'),
(70, 1187, '1', -1.29199, 11, 0, '2017-09-13 08:59:04'),
(56, 2801, '1', 1.16776, 53, 1, '2017-09-13 08:59:05'),
(45, 2735, '4', -2.54929, 13, 0, '2017-09-13 08:59:05'),
(31, 2904, '1', -2.79285, 8, 0, '2017-09-13 08:59:06'),
(33, 490, '3', -1.6875, 9, 0, '2017-09-13 08:59:08'),
(66, 1491, '4', -1.2398, 15, 0, '2017-09-13 08:59:08'),
(48, 375, '1', 0.75, 10, 1, '2017-09-13 08:59:09'),
(40, 3037, '4', 1.92, 6, 1, '2017-09-13 08:59:09'),
(52, 1461, '3', 1.83743, 10, 1, '2017-09-13 08:59:09'),
(44, 3123, '1', -1.62881, 10, 0, '2017-09-13 08:59:09'),
(60, 34, '0', 0, 9, -1, '2017-09-13 08:59:10'),
(69, 1331, '2', 2.475, 7, 1, '2017-09-13 08:59:11'),
(66, 1472, '3', 2.43, 4, 1, '2017-09-13 08:59:11'),
(50, 734, '1', -0.963333, 13, 0, '2017-09-13 08:59:12'),
(45, 2621, '3', 2.65, 7, 1, '2017-09-13 08:59:12'),
(36, 2734, '3', 2.54929, 13, 1, '2017-09-13 08:59:13'),
(42, 489, '1', 0.0075, 38, 1, '2017-09-13 08:59:13'),
(57, 32, '1', -0.27, 14, 0, '2017-09-13 08:59:13'),
(38, 85, '3', -0.1875, 15, 0, '2017-09-13 08:59:14'),
(66, 3008, '3', -2.39158, 3, 0, '2017-09-13 08:59:14'),
(49, 81, '2', -0.12, 16, 0, '2017-09-13 08:59:15'),
(67, 1475, '3', -0.6862, 24, 0, '2017-09-13 08:59:17'),
(63, 3462, '2', -0.0648789, 29, 0, '2017-09-13 08:59:17'),
(46, 3016, '1', 0.0956633, 23, 1, '2017-09-13 08:59:18'),
(53, 84, '4', 0, 20, 0, '2017-09-13 08:59:19'),
(53, 96, '0', -0.0075, 20, 0, '2017-09-13 08:59:19'),
(39, 1461, '3', 1.19234, 17, 1, '2017-09-13 08:59:19'),
(42, 730, '0', 0, 7, -1, '2017-09-13 08:59:20'),
(36, 2889, '1', -2.81957, 7, 0, '2017-09-13 08:59:20'),
(38, 81, '2', -1.2675, 7, 0, '2017-09-13 08:59:21'),
(44, 3093, '1', -1.40443, 12, 0, '2017-09-13 08:59:22'),
(40, 3074, '4', 0.963333, 13, 1, '2017-09-13 08:59:22'),
(51, 86, '2', 0.0075, 19, 1, '2017-09-13 08:59:23'),
(45, 2729, '1', -2.58532, 12, 0, '2017-09-13 08:59:24'),
(66, 1481, '3', -1.80187, 9, 0, '2017-09-13 08:59:24'),
(50, 729, '1', -1.22454, 13, 0, '2017-09-13 08:59:24'),
(43, 10, '0', -0.0075, 20, 0, '2017-09-13 08:59:25'),
(60, 23, '3', -0.1875, 15, 0, '2017-09-13 08:59:26'),
(33, 719, '3', 0.668981, 19, 1, '2017-09-13 08:59:27'),
(70, 1296, '2', 0.00520833, 23, 1, '2017-09-13 08:59:28'),
(40, 3084, '1', 1.92, 6, 1, '2017-09-13 08:59:28'),
(48, 1120, '0', -0.0075, 20, 0, '2017-09-13 08:59:29'),
(67, 1483, '3', -1.40443, 12, 0, '2017-09-13 08:59:29'),
(40, 3007, '1', -2.43, 3, 0, '2017-09-13 08:59:31'),
(64, 366, '4', 0.9075, 9, 1, '2017-09-13 08:59:32'),
(50, 724, '1', 1.61333, 8, 1, '2017-09-13 08:59:33'),
(52, 2929, '0', -0.00520833, 24, 0, '2017-09-13 08:59:33'),
(52, 1450, '4', 0.280093, 25, 1, '2017-09-13 08:59:34'),
(57, 39, '0', -0.0075, 20, 0, '2017-09-13 08:59:34'),
(45, 2622, '3', -2.5, 10, 0, '2017-09-13 08:59:34'),
(40, 3005, '1', 2.43, 3, 1, '2017-09-13 08:59:34'),
(38, 83, '1', 0.3675, 13, 1, '2017-09-13 08:59:34'),
(53, 105, '4', 0, 16, 1, '2017-09-13 08:59:35'),
(70, 1264, '2', -2.39738, 7, 0, '2017-09-13 08:59:35'),
(53, 106, '0', -1.6875, 16, 0, '2017-09-13 08:59:35'),
(49, 90, '0', -0.0075, 20, 0, '2017-09-13 08:59:35'),
(52, 1458, '4', -2.67593, 2, 0, '2017-09-13 08:59:36'),
(66, 1475, '3', -1.63894, 12, 0, '2017-09-13 08:59:36'),
(60, 35, '4', -0.6075, 11, 0, '2017-09-13 08:59:37'),
(39, 1457, '4', 0.826875, 19, 1, '2017-09-13 08:59:37'),
(44, 3102, '4', -0.916205, 17, 0, '2017-09-13 08:59:39'),
(36, 2733, '4', -2.32743, 19, 0, '2017-09-13 08:59:39'),
(45, 2628, '4', -2.75, 5, 0, '2017-09-13 08:59:40'),
(64, 1133, '3', 1.08, 8, 1, '2017-09-13 08:59:40'),
(51, 87, '0', -0.0075, 20, 0, '2017-09-13 08:59:43'),
(48, 379, '3', 0.1875, 15, 1, '2017-09-13 08:59:44'),
(40, 3058, '2', -1.33333, 10, 0, '2017-09-13 08:59:44'),
(50, 736, '1', 1.37284, 11, 1, '2017-09-13 08:59:45'),
(38, 86, '4', -0.75, 10, 0, '2017-09-13 08:59:45'),
(60, 38, '3', -1.08, 8, 0, '2017-09-13 08:59:45'),
(43, 8, '0', -0.0075, 20, 0, '2017-09-13 08:59:45'),
(33, 730, '2', 0.75, 18, 1, '2017-09-13 08:59:45'),
(46, 3079, '4', 0, 28, 0, '2017-09-13 08:59:46'),
(42, 464, '0', -0.00443787, 26, 0, '2017-09-13 08:59:46'),
(52, 1455, '2', -1.47, 12, 0, '2017-09-13 08:59:48'),
(43, 88, '0', -2.43, 3, 0, '2017-09-13 08:59:48'),
(66, 1479, '1', -1.58678, 12, 0, '2017-09-13 08:59:48'),
(70, 1188, '2', -0.860969, 13, 0, '2017-09-13 08:59:48'),
(45, 2633, '3', 2.55, 9, 1, '2017-09-13 08:59:48'),
(68, 2928, '3', 1.21644, 56, 1, '2017-09-13 08:59:49'),
(49, 89, '2', -0.12, 16, 0, '2017-09-13 08:59:51'),
(64, 1122, '4', 0.48, 12, 1, '2017-09-13 08:59:52'),
(63, 3456, '0', -0.00259516, 34, 0, '2017-09-13 08:59:52'),
(36, 2835, '3', 2.54929, 13, 1, '2017-09-13 08:59:52'),
(40, 2996, '4', 1.61333, 8, 1, '2017-09-13 08:59:53'),
(45, 2632, '3', 2.8, 4, 1, '2017-09-13 08:59:53'),
(50, 490, '2', 1.6875, 9, 1, '2017-09-13 08:59:54'),
(57, 25, '0', -0.0075, 20, 0, '2017-09-13 08:59:54'),
(38, 93, '1', -0.244898, 10, 0, '2017-09-13 08:59:55'),
(39, 1449, '2', -0.9075, 18, 0, '2017-09-13 08:59:55'),
(53, 98, '0', -0.0075, 20, 0, '2017-09-13 08:59:56'),
(68, 2925, '0', 0, 7, -1, '2017-09-13 08:59:57'),
(42, 485, '1', 1.83743, 10, 1, '2017-09-13 08:59:57'),
(44, 3290, '2', -0.831025, 18, 0, '2017-09-13 08:59:57'),
(60, 40, '1', -0.27, 14, 0, '2017-09-13 08:59:59'),
(33, 487, '1', -1.2675, 14, 0, '2017-09-13 08:59:59'),
(43, 5, '3', 0.48, 12, 1, '2017-09-13 09:00:00'),
(70, 1286, '4', 1.92, 12, 1, '2017-09-13 09:00:00'),
(40, 2995, '3', 1.33333, 10, 1, '2017-09-13 09:00:02'),
(52, 1452, '1', -1.17188, 15, 0, '2017-09-13 09:00:03'),
(51, 82, '0', -0.0075, 20, 0, '2017-09-13 09:00:03'),
(48, 393, '0', -0.0075, 20, 0, '2017-09-13 09:00:04'),
(57, 26, '1', -0.6075, 11, 0, '2017-09-13 09:00:05'),
(42, 490, '3', -1.81481, 8, 0, '2017-09-13 09:00:05'),
(36, 2862, '4', 2.54929, 13, 1, '2017-09-13 09:00:06'),
(38, 92, '2', -0.105469, 13, 0, '2017-09-13 09:00:08'),
(70, 1176, '4', 1.53061, 8, 1, '2017-09-13 09:00:08'),
(50, 731, '3', -0.925926, 16, 0, '2017-09-13 09:00:09'),
(40, 2998, '1', -1.61333, 8, 0, '2017-09-13 09:00:10'),
(43, 3, '3', 0.6075, 11, 1, '2017-09-13 09:00:11'),
(64, 385, '4', -0.0075, 19, 0, '2017-09-13 09:00:11'),
(69, 1090, '4', -0.05, 59, 0, '2017-09-13 09:00:11'),
(49, 86, '0', -0.0075, 20, 0, '2017-09-13 09:00:11'),
(45, 2634, '3', -2.1, 18, 0, '2017-09-13 09:00:11'),
(68, 2916, '2', 2.72568, 15, 1, '2017-09-13 09:00:12'),
(66, 1502, '2', 0.6862, 24, 1, '2017-09-13 09:00:12'),
(60, 36, '1', -0.27, 14, 0, '2017-09-13 09:00:13'),
(46, 3040, '0', -0.00382653, 28, 0, '2017-09-13 09:00:14'),
(48, 369, '2', 0.75, 10, 1, '2017-09-13 09:00:14'),
(52, 1462, '0', 0, 12, -1, '2017-09-13 09:00:15'),
(42, 722, '3', 1.44676, 11, 1, '2017-09-13 09:00:16'),
(45, 2629, '2', -2.7, 6, 0, '2017-09-13 09:00:17'),
(64, 1138, '4', -1.47, 6, 0, '2017-09-13 09:00:17'),
(51, 93, '0', -0.0153061, 14, 0, '2017-09-13 09:00:17'),
(40, 3069, '2', 1.76333, 7, 1, '2017-09-13 09:00:18'),
(44, 3119, '2', 0.600416, 21, 1, '2017-09-13 09:00:18'),
(36, 2855, '1', -2.65518, 13, 0, '2017-09-13 09:00:19'),
(50, 498, '3', -1.57687, 11, 0, '2017-09-13 09:00:20'),
(39, 1460, '3', -0.567108, 26, 0, '2017-09-13 09:00:22'),
(48, 368, '3', 1.08, 8, 1, '2017-09-13 09:00:22'),
(43, 6, '2', 0.48, 12, 1, '2017-09-13 09:00:22'),
(38, 94, '1', 0.1875, 15, 1, '2017-09-13 09:00:23'),
(40, 3077, '2', 1.76333, 7, 1, '2017-09-13 09:00:24'),
(45, 2624, '2', 2.6, 8, 1, '2017-09-13 09:00:25'),
(67, 1471, '4', 0.0208333, 55, 1, '2017-09-13 09:00:25'),
(57, 30, '0', -0.0075, 20, 0, '2017-09-13 09:00:25'),
(60, 31, '4', -0.48, 12, 0, '2017-09-13 09:00:25'),
(33, 731, '1', -0.231481, 26, 0, '2017-09-13 09:00:26'),
(63, 3463, '0', -0.00259516, 34, 0, '2017-09-13 09:00:26'),
(49, 84, '1', -0.1875, 15, 0, '2017-09-13 09:00:27'),
(66, 3054, '4', 0.75, 15, 1, '2017-09-13 09:00:28'),
(44, 3293, '1', 1.62881, 10, 1, '2017-09-13 09:00:29'),
(39, 1458, '3', 1.94676, 7, 1, '2017-09-13 09:00:29'),
(38, 87, '2', -1.47, 6, 0, '2017-09-13 09:00:29'),
(70, 1206, '3', -1.33333, 20, 0, '2017-09-13 09:00:29'),
(36, 2865, '3', 2.58532, 12, 1, '2017-09-13 09:00:30'),
(50, 464, '3', 1.28254, 9, 1, '2017-09-13 09:00:30'),
(52, 1459, '3', -1.17188, 15, 0, '2017-09-13 09:00:30'),
(68, 2931, '4', 2.62074, 20, 1, '2017-09-13 09:00:31'),
(33, 725, '3', -1.89187, 7, 0, '2017-09-13 09:00:33'),
(67, 3000, '4', -1.17188, 9, 0, '2017-09-13 09:00:34'),
(45, 2635, '3', -2.55, 9, 0, '2017-09-13 09:00:34'),
(70, 173, '3', -2.7075, 5, 0, '2017-09-13 09:00:34'),
(51, 95, '1', -0.0675, 17, 0, '2017-09-13 09:00:34'),
(48, 373, '3', -0.48, 12, 0, '2017-09-13 09:00:35'),
(40, 3060, '2', 1.20333, 11, 1, '2017-09-13 09:00:35'),
(57, 29, '3', -0.6075, 11, 0, '2017-09-13 09:00:36'),
(64, 389, '0', -0.0075, 20, 0, '2017-09-13 09:00:37'),
(42, 466, '3', 0.213333, 22, 1, '2017-09-13 09:00:38'),
(68, 2923, '4', -2.87848, 7, 0, '2017-09-13 09:00:39'),
(67, 1491, '2', 2.32823, 5, 1, '2017-09-13 09:00:39'),
(52, 1457, '4', 1.80187, 9, 1, '2017-09-13 09:00:40'),
(45, 2618, '3', 2.65, 7, 1, '2017-09-13 09:00:41'),
(44, 3140, '2', 1.40443, 12, 1, '2017-09-13 09:00:41'),
(60, 32, '0', 0, 16, -1, '2017-09-13 09:00:41'),
(46, 3073, '0', -0.00382653, 28, 0, '2017-09-13 09:00:42'),
(36, 2888, '1', -2.68328, 12, 0, '2017-09-13 09:00:42'),
(43, 7, '0', -0.0075, 20, 0, '2017-09-13 09:00:43'),
(56, 1170, '2', 0.00520833, 23, 1, '2017-09-13 09:00:43'),
(69, 1096, '4', -1.4, 32, 0, '2017-09-13 09:00:43'),
(50, 481, '3', -1.2675, 14, 0, '2017-09-13 09:00:43'),
(40, 2997, '1', -2.2, 8, 0, '2017-09-13 09:00:44'),
(49, 87, '2', -0.03, 18, 0, '2017-09-13 09:00:44'),
(33, 509, '3', -1.33333, 12, 0, '2017-09-13 09:00:45'),
(68, 2937, '0', 0, 6, -1, '2017-09-13 09:00:45'),
(45, 2619, '3', 2.8, 4, 1, '2017-09-13 09:00:45'),
(38, 96, '2', -0.0075, 19, 0, '2017-09-13 09:00:48'),
(69, 1333, '2', 2.65, 7, 1, '2017-09-13 09:00:51'),
(68, 2942, '0', 0, 6, -1, '2017-09-13 09:00:51'),
(36, 2881, '4', -2.69195, 9, 0, '2017-09-13 09:00:52'),
(39, 3039, '1', 0.00443787, 25, 1, '2017-09-13 09:00:53'),
(51, 90, '0', -0.0075, 20, 0, '2017-09-13 09:00:54'),
(60, 26, '4', 0.3675, 13, 1, '2017-09-13 09:00:55'),
(48, 388, '0', -0.0075, 20, 0, '2017-09-13 09:00:55'),
(33, 485, '2', -1.83743, 10, 0, '2017-09-13 09:00:55'),
(45, 2734, '3', 2.62111, 11, 1, '2017-09-13 09:00:56'),
(57, 21, '0', -0.0075, 20, 0, '2017-09-13 09:00:56'),
(67, 1485, '4', 1.28254, 18, 1, '2017-09-13 09:00:57'),
(64, 372, '0', -0.0075, 20, 0, '2017-09-13 09:00:57'),
(50, 733, '3', 1.2675, 14, 1, '2017-09-13 09:00:57'),
(66, 1505, '1', 1.17188, 30, 1, '2017-09-13 09:00:58'),
(40, 3019, '1', 0.853333, 14, 1, '2017-09-13 09:00:58'),
(56, 1194, '1', 0.46301, 17, 1, '2017-09-13 09:01:01'),
(44, 3112, '3', -0.67313, 20, 0, '2017-09-13 09:01:01'),
(63, 3466, '0', -0.00259516, 34, 0, '2017-09-13 09:01:01'),
(39, 3004, '1', -1.61333, 8, 0, '2017-09-13 09:01:01'),
(38, 101, '2', -0.105469, 13, 0, '2017-09-13 09:01:02'),
(45, 2838, '3', 2.79651, 6, 1, '2017-09-13 09:01:02'),
(70, 1209, '1', -0.5808, 28, 0, '2017-09-13 09:01:03'),
(40, 3081, '3', 2.08333, 5, 1, '2017-09-13 09:01:03'),
(43, 13, '0', -0.0075, 20, 0, '2017-09-13 09:01:03'),
(69, 1346, '4', 2.57858, 13, 1, '2017-09-13 09:01:03'),
(49, 94, '0', -0.0075, 20, 0, '2017-09-13 09:01:04'),
(60, 28, '3', -0.9075, 9, 0, '2017-09-13 09:01:04'),
(48, 389, '3', -0.9075, 9, 0, '2017-09-13 09:01:04'),
(67, 1476, '1', -2.05141, 9, 0, '2017-09-13 09:01:06'),
(36, 2882, '1', 2.43962, 16, 1, '2017-09-13 09:01:07'),
(57, 35, '2', 0.6075, 11, 1, '2017-09-13 09:01:08'),
(42, 726, '1', 0.0415225, 30, 1, '2017-09-13 09:01:08'),
(33, 721, '3', -1.17188, 15, 0, '2017-09-13 09:01:10'),
(40, 3046, '1', 2.3, 7, 1, '2017-09-13 09:01:10'),
(66, 1504, '1', 2.10422, 13, 1, '2017-09-13 09:01:11'),
(43, 9, '2', 0.9075, 9, 1, '2017-09-13 09:01:12'),
(51, 84, '2', -0.0075, 19, 0, '2017-09-13 09:01:14'),
(38, 99, '1', -0.3675, 13, 0, '2017-09-13 09:01:14'),
(69, 1123, '2', -2.64557, 11, 0, '2017-09-13 09:01:15'),
(57, 38, '4', -1.08, 8, 0, '2017-09-13 09:01:16'),
(40, 3023, '3', 2.6, 4, 1, '2017-09-13 09:01:16'),
(44, 3100, '2', -1.09903, 15, 0, '2017-09-13 09:01:16'),
(36, 2879, '0', 0, 9, -1, '2017-09-13 09:01:16'),
(66, 1492, '2', 2.35692, 5, 1, '2017-09-13 09:01:16'),
(49, 93, '1', -0.0153061, 13, 0, '2017-09-13 09:01:17'),
(64, 396, '0', -0.0075, 20, 0, '2017-09-13 09:01:17'),
(42, 498, '0', 0, 9, -1, '2017-09-13 09:01:18'),
(67, 1473, '1', 1.7328, 12, 1, '2017-09-13 09:01:19'),
(50, 721, '2', -0.676875, 21, 0, '2017-09-13 09:01:19'),
(68, 2939, '4', -2.43288, 28, 0, '2017-09-13 09:01:19'),
(46, 3294, '0', -0.00207756, 38, 0, '2017-09-13 09:01:20'),
(33, 735, '4', 1.08, 12, 1, '2017-09-13 09:01:22'),
(48, 384, '2', -0.03, 18, 0, '2017-09-13 09:01:23'),
(60, 20, '3', -0.0075, 19, 0, '2017-09-13 09:01:23'),
(40, 3065, '2', -2, 10, 0, '2017-09-13 09:01:24'),
(52, 1467, '3', 0.213333, 44, 1, '2017-09-13 09:01:24'),
(56, 1210, '0', -0.00520833, 24, 0, '2017-09-13 09:01:25'),
(36, 2870, '4', -2.65665, 10, 0, '2017-09-13 09:01:26'),
(39, 1452, '1', -0.421875, 25, 0, '2017-09-13 09:01:26'),
(66, 1490, '3', -1.79132, 10, 0, '2017-09-13 09:01:27'),
(43, 1, '4', 0.1875, 15, 1, '2017-09-13 09:01:28'),
(50, 719, '3', 1.81481, 8, 1, '2017-09-13 09:01:28'),
(44, 3142, '2', -1.40443, 12, 0, '2017-09-13 09:01:28'),
(68, 2952, '2', 2.82311, 10, 1, '2017-09-13 09:01:29'),
(33, 498, '0', 0, 8, -1, '2017-09-13 09:01:30'),
(64, 367, '4', -0.3675, 13, 0, '2017-09-13 09:01:30'),
(40, 3015, '3', 2.4, 6, 1, '2017-09-13 09:01:30'),
(49, 95, '1', -0.27, 14, 0, '2017-09-13 09:01:32'),
(31, 1461, '3', 0.958412, 20, 1, '2017-09-13 09:01:32'),
(51, 89, '2', -0.0075, 19, 0, '2017-09-13 09:01:33'),
(38, 102, '3', 0.03, 18, 1, '2017-09-13 09:01:33'),
(42, 721, '1', 1.17188, 15, 1, '2017-09-13 09:01:33'),
(66, 1507, '1', 2.05141, 9, 1, '2017-09-13 09:01:35'),
(60, 45, '3', -0.48, 12, 0, '2017-09-13 09:01:35'),
(45, 2852, '0', 0, 33, -1, '2017-09-13 09:01:36'),
(43, 19, '3', -0.9075, 9, 0, '2017-09-13 09:01:36'),
(40, 3165, '1', -2.3, 7, 0, '2017-09-13 09:01:37'),
(36, 2859, '0', 0, 12, -1, '2017-09-13 09:01:39'),
(46, 3287, '4', -0.75, 19, 0, '2017-09-13 09:01:39'),
(33, 724, '2', -1.47, 9, 0, '2017-09-13 09:01:39'),
(45, 2841, '3', 2.86514, 4, 1, '2017-09-13 09:01:40'),
(64, 1116, '4', 0.75, 10, 1, '2017-09-13 09:01:40'),
(31, 1457, '4', 1.92, 8, 1, '2017-09-13 09:01:40'),
(38, 103, '1', -1.92, 8, 0, '2017-09-13 09:01:40'),
(68, 2945, '4', 2.80416, 11, 1, '2017-09-13 09:01:40'),
(48, 366, '4', 0.0075, 19, 1, '2017-09-13 09:01:41'),
(69, 1337, '3', 1.73438, 27, 1, '2017-09-13 09:01:42'),
(50, 726, '1', 0.936851, 15, 1, '2017-09-13 09:01:42'),
(56, 1169, '2', 0.1875, 18, 1, '2017-09-13 09:01:43'),
(49, 92, '1', -0.046875, 14, 0, '2017-09-13 09:01:45'),
(70, 1229, '2', -0.124486, 43, 0, '2017-09-13 09:01:45'),
(60, 42, '4', -0.6075, 11, 0, '2017-09-13 09:01:47'),
(38, 109, '2', -1.92, 6, 0, '2017-09-13 09:01:47'),
(45, 2732, '3', -2.76188, 7, 0, '2017-09-13 09:01:47'),
(31, 1465, '2', -1.38138, 9, 0, '2017-09-13 09:01:49'),
(33, 464, '1', -1.13609, 10, 0, '2017-09-13 09:01:50'),
(50, 499, '1', 2.44737, 7, 1, '2017-09-13 09:01:50'),
(64, 393, '4', -0.75, 10, 0, '2017-09-13 09:01:50'),
(70, 1275, '3', -2.47016, 5, 0, '2017-09-13 09:01:51'),
(42, 723, '1', 0.668981, 19, 1, '2017-09-13 09:01:52'),
(39, 1466, '1', -0.75, 25, 0, '2017-09-13 09:01:52'),
(51, 81, '4', 0.0075, 19, 1, '2017-09-13 09:01:52'),
(68, 2940, '2', 2.78495, 12, 1, '2017-09-13 09:01:53'),
(43, 12, '2', -0.12, 16, 0, '2017-09-13 09:01:53'),
(40, 3126, '3', -1.4, 16, 0, '2017-09-13 09:01:53'),
(52, 1451, '1', 0.0578704, 31, 1, '2017-09-13 09:01:56'),
(69, 1099, '4', 2.54077, 15, 1, '2017-09-13 09:01:57'),
(36, 2866, '0', 0, 19, -1, '2017-09-13 09:01:57'),
(63, 2280, '0', 0, 10, -1, '2017-09-13 09:01:57'),
(44, 3153, '3', -0.168283, 29, 0, '2017-09-13 09:01:58'),
(40, 3150, '1', -2.5, 5, 0, '2017-09-13 09:01:59'),
(45, 2731, '4', 2.58532, 12, 1, '2017-09-13 09:01:59'),
(66, 3062, '1', 0.1875, 24, 1, '2017-09-13 09:01:59'),
(48, 397, '4', -0.0075, 19, 0, '2017-09-13 09:02:00'),
(68, 2948, '1', -2.86026, 8, 0, '2017-09-13 09:02:00'),
(69, 1353, '1', -2.83093, 5, 0, '2017-09-13 09:02:02'),
(60, 49, '3', -0.12, 16, 0, '2017-09-13 09:02:02'),
(33, 729, '2', 1.22454, 13, 1, '2017-09-13 09:02:03'),
(49, 83, '0', -0.0075, 20, 0, '2017-09-13 09:02:05'),
(31, 1452, '1', -1.08, 16, 0, '2017-09-13 09:02:05'),
(43, 2, '4', -0.3675, 13, 0, '2017-09-13 09:02:05'),
(36, 2861, '2', 2.69195, 9, 1, '2017-09-13 09:02:06'),
(50, 477, '3', -1.8913, 17, 0, '2017-09-13 09:02:07'),
(70, 1250, '2', -1.61333, 16, 0, '2017-09-13 09:02:07'),
(45, 2820, '2', 2.69195, 9, 1, '2017-09-13 09:02:08'),
(40, 3124, '1', 1.9, 11, 1, '2017-09-13 09:02:09'),
(57, 1270, '3', -0.0354442, 41, 0, '2017-09-13 09:02:10'),
(67, 1505, '1', 0.394219, 51, 1, '2017-09-13 09:02:10'),
(68, 2955, '4', -2.82311, 10, 0, '2017-09-13 09:02:10'),
(64, 384, '0', -0.0075, 20, 0, '2017-09-13 09:02:10'),
(56, 1185, '0', -0.00382653, 28, 0, '2017-09-13 09:02:12'),
(51, 85, '2', 0, 20, 1, '2017-09-13 09:02:12'),
(46, 3093, '2', -0.0519391, 33, 0, '2017-09-13 09:02:12'),
(63, 2274, '0', 0, 14, -1, '2017-09-13 09:02:12'),
(51, 94, '0', -0.0075, 20, 0, '2017-09-13 09:02:12'),
(33, 726, '1', 1.49481, 10, 1, '2017-09-13 09:02:13'),
(70, 1289, '2', 2.04187, 7, 1, '2017-09-13 09:02:14'),
(44, 3136, '1', -0.916205, 17, 0, '2017-09-13 09:02:14'),
(38, 1634, '3', 1.33333, 8, 1, '2017-09-13 09:02:15'),
(52, 3039, '1', 0.159763, 20, 1, '2017-09-13 09:02:16'),
(60, 52, '2', -0.27, 14, 0, '2017-09-13 09:02:16'),
(43, 11, '1', 0.6075, 11, 1, '2017-09-13 09:02:17'),
(68, 2957, '1', -2.87848, 7, 0, '2017-09-13 09:02:18'),
(42, 724, '4', -0.0533333, 26, 0, '2017-09-13 09:02:18'),
(69, 1360, '4', -2.43962, 16, 0, '2017-09-13 09:02:18'),
(63, 2282, '2', 1.76333, 7, 1, '2017-09-13 09:02:19'),
(36, 2883, '1', -2.54929, 13, 0, '2017-09-13 09:02:20'),
(33, 728, '1', 1.86981, 8, 1, '2017-09-13 09:02:20'),
(48, 390, '0', -0.0075, 20, 0, '2017-09-13 09:02:20'),
(46, 3100, '2', -1.74723, 9, 0, '2017-09-13 09:02:21'),
(66, 1493, '4', 0.676875, 21, 1, '2017-09-13 09:02:21'),
(40, 3137, '2', -1.8, 12, 0, '2017-09-13 09:02:22'),
(45, 2835, '2', -2.54929, 13, 0, '2017-09-13 09:02:22'),
(39, 1453, '1', 0.3468, 33, 1, '2017-09-13 09:02:24'),
(49, 91, '0', -0.0075, 20, 0, '2017-09-13 09:02:25'),
(33, 466, '2', -2.08333, 5, 0, '2017-09-13 09:02:25'),
(69, 1313, '2', 2.61111, 7, 1, '2017-09-13 09:02:25'),
(67, 3062, '4', -0.75, 16, 0, '2017-09-13 09:02:26'),
(60, 50, '3', -0.75, 10, 0, '2017-09-13 09:02:27'),
(70, 1298, '1', 1.84083, 13, 1, '2017-09-13 09:02:27'),
(38, 1641, '3', 0.860969, 13, 1, '2017-09-13 09:02:28'),
(68, 2950, '3', -2.80416, 11, 0, '2017-09-13 09:02:29'),
(63, 2286, '4', -1.44676, 11, 0, '2017-09-13 09:02:30'),
(66, 1500, '3', -2.05141, 9, 0, '2017-09-13 09:02:30'),
(31, 1451, '1', 0.333333, 24, 1, '2017-09-13 09:02:30'),
(64, 377, '0', -0.0075, 20, 0, '2017-09-13 09:02:30'),
(36, 2874, '1', 2.58532, 12, 1, '2017-09-13 09:02:31'),
(51, 91, '0', -0.0075, 20, 0, '2017-09-13 09:02:32'),
(40, 3087, '2', -2, 10, 0, '2017-09-13 09:02:32'),
(56, 1184, '4', 0.0833333, 20, 1, '2017-09-13 09:02:32'),
(66, 3076, '4', -2.43, 3, 0, '2017-09-13 09:02:33'),
(69, 1352, '3', 2.72703, 8, 1, '2017-09-13 09:02:33'),
(57, 1227, '0', -0.00520833, 24, 0, '2017-09-13 09:02:34'),
(52, 1449, '1', -0.826875, 19, 0, '2017-09-13 09:02:34'),
(38, 1632, '3', 1.76333, 7, 1, '2017-09-13 09:02:35'),
(43, 14, '3', -0.03, 18, 0, '2017-09-13 09:02:35'),
(70, 1295, '4', 1.17188, 9, 1, '2017-09-13 09:02:36'),
(40, 3159, '0', 0, 5, -1, '2017-09-13 09:02:37'),
(68, 2959, '1', -2.8418, 9, 0, '2017-09-13 09:02:38'),
(67, 3076, '4', -1.08, 12, 0, '2017-09-13 09:02:38'),
(60, 43, '2', -0.6075, 11, 0, '2017-09-13 09:02:38'),
(38, 1633, '1', -1.9571, 5, 0, '2017-09-13 09:02:40'),
(48, 2420, '3', 1.88021, 20, 1, '2017-09-13 09:02:40'),
(42, 727, '2', 0.453704, 22, 1, '2017-09-13 09:02:41'),
(43, 4, '3', -1.47, 6, 0, '2017-09-13 09:02:41'),
(68, 2893, '4', 2.93908, 3, 1, '2017-09-13 09:02:41'),
(31, 1458, '0', 0, 12, -1, '2017-09-13 09:02:41'),
(66, 1506, '2', -1.92, 10, 0, '2017-09-13 09:02:43'),
(52, 1466, '0', 0, 8, -1, '2017-09-13 09:02:43'),
(63, 1638, '2', 1.39463, 14, 1, '2017-09-13 09:02:43'),
(70, 1299, '3', 2.3168, 8, 1, '2017-09-13 09:02:44'),
(44, 2150, '3', -0.600416, 21, 0, '2017-09-13 09:02:44'),
(40, 3092, '4', 1.61333, 8, 1, '2017-09-13 09:02:45'),
(49, 85, '0', -0.0075, 20, 0, '2017-09-13 09:02:45'),
(64, 2416, '3', 2.06444, 15, 1, '2017-09-13 09:02:45'),
(50, 750, '4', -0.456522, 39, 0, '2017-09-13 09:02:46'),
(33, 489, '4', -0.676875, 21, 0, '2017-09-13 09:02:46'),
(57, 1198, '4', 0.1875, 15, 1, '2017-09-13 09:02:49'),
(45, 2728, '1', -2.01386, 27, 0, '2017-09-13 09:02:49'),
(63, 2271, '1', 1.92, 6, 1, '2017-09-13 09:02:49'),
(56, 1198, '4', 0, 20, 1, '2017-09-13 09:02:52'),
(68, 2979, '1', 2.78495, 12, 1, '2017-09-13 09:02:53'),
(31, 1450, '2', -1.44676, 11, 0, '2017-09-13 09:02:53'),
(60, 41, '3', -0.1875, 15, 0, '2017-09-13 09:02:53'),
(67, 1492, '2', 1.3032, 15, 1, '2017-09-13 09:02:53'),
(50, 747, '1', -2.25, 9, 0, '2017-09-13 09:02:55'),
(33, 727, '1', -1.6875, 9, 0, '2017-09-13 09:02:55'),
(66, 1494, '3', -1.19668, 14, 0, '2017-09-13 09:02:57'),
(36, 2871, '2', 2.05434, 26, 1, '2017-09-13 09:02:57'),
(40, 3106, '3', 0.963333, 13, 1, '2017-09-13 09:02:58'),
(46, 3145, '0', -0.00207756, 38, 0, '2017-09-13 09:02:59'),
(63, 2366, '0', 0, 9, -1, '2017-09-13 09:02:59'),
(43, 17, '3', -0.03, 18, 0, '2017-09-13 09:02:59'),
(52, 3051, '0', 0, 16, -1, '2017-09-13 09:02:59'),
(38, 1635, '2', -0.333333, 20, 0, '2017-09-13 09:03:00'),
(45, 2733, '0', 0, 11, -1, '2017-09-13 09:03:00'),
(68, 2966, '1', 2.86026, 8, 1, '2017-09-13 09:03:01'),
(39, 1463, '3', -0.0759298, 37, 0, '2017-09-13 09:03:01'),
(70, 1204, '3', -1.17188, 18, 0, '2017-09-13 09:03:03'),
(36, 2886, '1', 2.83093, 5, 1, '2017-09-13 09:03:03'),
(40, 3144, '2', 2.4, 6, 1, '2017-09-13 09:03:04'),
(70, 171, '3', -2.85188, 2, 0, '2017-09-13 09:03:05'),
(45, 2870, '2', -2.76188, 7, 0, '2017-09-13 09:03:07'),
(44, 2151, '3', -0.8748, 23, 0, '2017-09-13 09:03:07'),
(42, 732, '3', -0.1875, 27, 0, '2017-09-13 09:03:08'),
(66, 1497, '4', -1.43027, 13, 0, '2017-09-13 09:03:10'),
(50, 732, '3', -1.02083, 15, 0, '2017-09-13 09:03:10'),
(40, 3169, '1', 2.4, 6, 1, '2017-09-13 09:03:11'),
(56, 1177, '4', -0.0557851, 19, 0, '2017-09-13 09:03:12'),
(45, 2871, '2', 2.83093, 5, 1, '2017-09-13 09:03:12'),
(67, 1493, '1', -0.826875, 19, 0, '2017-09-13 09:03:12'),
(43, 16, '0', 0, 13, -1, '2017-09-13 09:03:13'),
(36, 2887, '3', 2.71109, 11, 1, '2017-09-13 09:03:13'),
(60, 53, '0', -0.0075, 20, 0, '2017-09-13 09:03:13'),
(31, 1459, '3', -0.676875, 21, 0, '2017-09-13 09:03:13'),
(68, 2981, '4', 2.76548, 13, 1, '2017-09-13 09:03:14'),
(66, 1499, '3', -2.50095, 4, 0, '2017-09-13 09:03:14'),
(40, 3132, '3', 2.4, 6, 1, '2017-09-13 09:03:16'),
(33, 737, '4', 0.676875, 21, 1, '2017-09-13 09:03:17'),
(57, 1190, '0', -0.00382653, 28, 0, '2017-09-13 09:03:17'),
(52, 3004, '2', -0.48, 18, 0, '2017-09-13 09:03:17'),
(45, 2868, '2', 2.79651, 6, 1, '2017-09-13 09:03:18'),
(66, 1495, '2', 2.45578, 4, 1, '2017-09-13 09:03:19'),
(50, 472, '3', -1.80187, 9, 0, '2017-09-13 09:03:19'),
(39, 1471, '1', -1.40083, 19, 0, '2017-09-13 09:03:20'),
(38, 1706, '2', -1.0092, 21, 0, '2017-09-13 09:03:21'),
(45, 2889, '1', -2.86514, 4, 0, '2017-09-13 09:03:22'),
(60, 46, '2', -0.9075, 9, 0, '2017-09-13 09:03:23'),
(66, 2947, '2', -1.92, 6, 0, '2017-09-13 09:03:25'),
(50, 746, '1', -1.94676, 7, 0, '2017-09-13 09:03:26'),
(56, 1174, '3', 0.536982, 15, 1, '2017-09-13 09:03:27'),
(52, 1453, '2', -1.92, 10, 0, '2017-09-13 09:03:28'),
(66, 1501, '4', -2.47934, 4, 0, '2017-09-13 09:03:28'),
(33, 720, '4', 1.51454, 11, 1, '2017-09-13 09:03:28'),
(39, 1482, '2', -2.00826, 8, 0, '2017-09-13 09:03:29'),
(68, 1186, '3', 1.85204, 6, 1, '2017-09-13 09:03:29'),
(40, 3173, '1', 1.8, 12, 1, '2017-09-13 09:03:29'),
(38, 1702, '2', 2.00826, 8, 1, '2017-09-13 09:03:29'),
(43, 18, '4', 0.03, 18, 1, '2017-09-13 09:03:30'),
(42, 735, '1', -0.12, 24, 0, '2017-09-13 09:03:32'),
(36, 2868, '2', 2.44949, 20, 1, '2017-09-13 09:03:33'),
(66, 1503, '3', -2.38327, 5, 0, '2017-09-13 09:03:34'),
(50, 739, '1', 1.81481, 8, 1, '2017-09-13 09:03:34'),
(48, 2422, '3', -1.00269, 54, 0, '2017-09-13 09:03:34'),
(43, 32, '4', -1.92, 4, 0, '2017-09-13 09:03:35'),
(45, 2877, '1', -2.54929, 13, 0, '2017-09-13 09:03:35'),
(44, 2143, '3', -0.316875, 27, 0, '2017-09-13 09:03:35'),
(31, 1462, '1', 0.676875, 21, 1, '2017-09-13 09:03:35'),
(33, 734, '2', 1.61333, 8, 1, '2017-09-13 09:03:36'),
(46, 3140, '0', -0.00207756, 38, 0, '2017-09-13 09:03:37'),
(52, 1454, '2', 1.56481, 10, 1, '2017-09-13 09:03:38'),
(66, 1496, '4', 2.2376, 6, 1, '2017-09-13 09:03:40'),
(67, 1503, '2', 0.511815, 27, 1, '2017-09-13 09:03:40'),
(38, 1704, '2', 1.86501, 11, 1, '2017-09-13 09:03:40'),
(45, 2865, '3', 2.83093, 5, 1, '2017-09-13 09:03:40'),
(40, 3163, '0', 0, 12, -1, '2017-09-13 09:03:41'),
(39, 2933, '1', -0.630208, 13, 0, '2017-09-13 09:03:42'),
(60, 51, '0', -0.0075, 20, 0, '2017-09-13 09:03:43'),
(50, 753, '4', 1.7415, 10, 1, '2017-09-13 09:03:44'),
(36, 2884, '1', 2.71109, 11, 1, '2017-09-13 09:03:45'),
(38, 1671, '3', 2.32823, 5, 1, '2017-09-13 09:03:45'),
(42, 509, '3', -1.12037, 14, 0, '2017-09-13 09:03:46'),
(56, 1218, '0', -0.0075, 20, 0, '2017-09-13 09:03:47'),
(40, 3160, '1', 2.4, 6, 1, '2017-09-13 09:03:47'),
(31, 1453, '1', 1.6428, 13, 1, '2017-09-13 09:03:48'),
(43, 29, '1', -0.1875, 15, 0, '2017-09-13 09:03:49'),
(52, 1463, '2', 1.58678, 12, 1, '2017-09-13 09:03:49'),
(63, 2277, '0', -0.0012, 50, 0, '2017-09-13 09:03:50'),
(33, 722, '3', 1.12037, 14, 1, '2017-09-13 09:03:50'),
(48, 1115, '1', 0.12, 16, 1, '2017-09-13 09:03:50'),
(45, 2881, '3', -2.62111, 11, 0, '2017-09-13 09:03:51'),
(36, 2907, '0', 0, 8, -1, '2017-09-13 09:03:52'),
(50, 480, '4', -1.92, 8, 0, '2017-09-13 09:03:52'),
(69, 623, '1', 0.738847, 79, 1, '2017-09-13 09:03:53'),
(68, 1210, '0', -0.00520833, 24, 0, '2017-09-13 09:03:53'),
(70, 1247, '2', -0.199036, 49, 0, '2017-09-13 09:03:54'),
(66, 1498, '2', -1.41797, 15, 0, '2017-09-13 09:03:54'),
(39, 1488, '1', -1.48915, 13, 0, '2017-09-13 09:03:55'),
(67, 1495, '3', -1.2398, 15, 0, '2017-09-13 09:03:55'),
(40, 3129, '2', -2.43962, 8, 0, '2017-09-13 09:03:55'),
(57, 1261, '0', -0.00207756, 38, 0, '2017-09-13 09:03:55'),
(60, 55, '4', -0.3675, 13, 0, '2017-09-13 09:03:56'),
(48, 401, '1', -1.47, 6, 0, '2017-09-13 09:03:56');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(44, 2147, '2', -1.20333, 22, 0, '2017-09-13 09:03:57'),
(70, 1207, '3', -2.54956, 5, 0, '2017-09-13 09:03:59'),
(38, 1708, '2', -1.2513, 17, 0, '2017-09-13 09:04:02'),
(45, 2862, '3', -2.62111, 11, 0, '2017-09-13 09:04:03'),
(33, 732, '4', 1.33333, 12, 1, '2017-09-13 09:04:03'),
(40, 3103, '2', 2.2, 8, 1, '2017-09-13 09:04:03'),
(50, 756, '3', -1.59505, 13, 0, '2017-09-13 09:04:06'),
(39, 1472, '1', -1.47, 12, 0, '2017-09-13 09:04:07'),
(67, 1497, '3', -1.53061, 12, 0, '2017-09-13 09:04:07'),
(56, 1173, '2', 0.0075, 19, 1, '2017-09-13 09:04:07'),
(63, 2283, '4', -0.574219, 18, 0, '2017-09-13 09:04:08'),
(70, 1235, '3', -2.15978, 10, 0, '2017-09-13 09:04:09'),
(43, 34, '1', -0.0075, 19, 0, '2017-09-13 09:04:09'),
(66, 1489, '1', 1.06293, 17, 1, '2017-09-13 09:04:12'),
(36, 2902, '2', 2.55085, 20, 1, '2017-09-13 09:04:12'),
(69, 1356, '4', -2.32743, 19, 0, '2017-09-13 09:04:12'),
(31, 1456, '1', 0.48, 24, 1, '2017-09-13 09:04:12'),
(45, 2874, '3', -2.65665, 10, 0, '2017-09-13 09:04:12'),
(50, 742, '3', -1.92, 8, 0, '2017-09-13 09:04:13'),
(67, 1506, '1', 2.2188, 7, 1, '2017-09-13 09:04:14'),
(57, 1297, '3', 1.47, 18, 1, '2017-09-13 09:04:14'),
(46, 3155, '0', -0.00207756, 38, 0, '2017-09-13 09:04:15'),
(40, 3099, '2', 2.13414, 12, 1, '2017-09-13 09:04:15'),
(70, 1274, '3', -2.39158, 6, 0, '2017-09-13 09:04:16'),
(48, 380, '0', -0.0075, 20, 0, '2017-09-13 09:04:16'),
(52, 1456, '1', 0.3675, 26, 1, '2017-09-13 09:04:16'),
(39, 3008, '1', -1.2398, 10, 0, '2017-09-13 09:04:17'),
(64, 2413, '0', -0.000354442, 92, 0, '2017-09-13 09:04:17'),
(66, 1524, '1', -2.2376, 6, 0, '2017-09-13 09:04:18'),
(45, 2883, '3', 2.75, 5, 1, '2017-09-13 09:04:18'),
(39, 1483, '1', -2.40166, 4, 0, '2017-09-13 09:04:21'),
(38, 1655, '2', -0.968492, 19, 0, '2017-09-13 09:04:21'),
(40, 3156, '2', 2.513, 7, 1, '2017-09-13 09:04:22'),
(44, 2154, '2', 0.333333, 24, 1, '2017-09-13 09:04:22'),
(63, 2275, '4', 1.4518, 14, 1, '2017-09-13 09:04:22'),
(43, 39, '2', 0.1875, 15, 1, '2017-09-13 09:04:24'),
(67, 1490, '1', 1.6875, 11, 1, '2017-09-13 09:04:25'),
(50, 482, '1', -1.53061, 12, 0, '2017-09-13 09:04:26'),
(68, 1276, '0', -0.00292969, 32, 0, '2017-09-13 09:04:26'),
(42, 737, '4', 0.001875, 39, 1, '2017-09-13 09:04:26'),
(33, 465, '3', -0.0533333, 26, 0, '2017-09-13 09:04:29'),
(50, 483, '1', -2.62146, 3, 0, '2017-09-13 09:04:29'),
(40, 3114, '1', 2.513, 7, 1, '2017-09-13 09:04:29'),
(66, 1518, '1', -1.53061, 12, 0, '2017-09-13 09:04:30'),
(56, 1216, '0', -0.00520833, 24, 0, '2017-09-13 09:04:31'),
(38, 1662, '1', 1.2398, 10, 1, '2017-09-13 09:04:31'),
(43, 35, '2', 1.08, 8, 1, '2017-09-13 09:04:32'),
(57, 1291, '0', -0.0075, 20, 0, '2017-09-13 09:04:34'),
(46, 3105, '3', -0.67313, 20, 0, '2017-09-13 09:04:35'),
(48, 371, '1', 0, 20, 0, '2017-09-13 09:04:36'),
(64, 394, '4', 0, 20, 0, '2017-09-13 09:04:37'),
(39, 1486, '1', 1.12965, 17, 1, '2017-09-13 09:04:37'),
(43, 28, '0', 0, 5, -1, '2017-09-13 09:04:37'),
(36, 2890, '1', -2.41818, 25, 0, '2017-09-13 09:04:38'),
(52, 1464, '3', -0.949219, 21, 0, '2017-09-13 09:04:38'),
(66, 1525, '1', 2.00826, 8, 1, '2017-09-13 09:04:38'),
(33, 744, '2', -1.80187, 9, 0, '2017-09-13 09:04:38'),
(40, 3095, '3', -2.36512, 9, 0, '2017-09-13 09:04:38'),
(38, 1647, '3', 1.60207, 7, 1, '2017-09-13 09:04:39'),
(45, 2859, '1', -2.25111, 21, 0, '2017-09-13 09:04:39'),
(68, 1170, '1', -0.630208, 13, 0, '2017-09-13 09:04:39'),
(50, 740, '1', 1.44676, 11, 1, '2017-09-13 09:04:40'),
(44, 2149, '1', -0.600416, 21, 0, '2017-09-13 09:04:42'),
(70, 1303, '1', 2.25333, 8, 1, '2017-09-13 09:04:42'),
(66, 1521, '1', 2.58673, 4, 1, '2017-09-13 09:04:42'),
(38, 1709, '4', 2.15643, 7, 1, '2017-09-13 09:04:46'),
(67, 1502, '4', -0.886106, 21, 0, '2017-09-13 09:04:46'),
(63, 2272, '4', -0.333333, 24, 0, '2017-09-13 09:04:46'),
(45, 2884, '4', -2.6, 8, 0, '2017-09-13 09:04:46'),
(36, 2893, '4', 2.81118, 9, 1, '2017-09-13 09:04:47'),
(40, 3121, '0', 0, 9, -1, '2017-09-13 09:04:47'),
(66, 1508, '1', -2.29688, 6, 0, '2017-09-13 09:04:48'),
(70, 611, '3', 2.3232, 6, 1, '2017-09-13 09:04:48'),
(52, 1487, '1', 1.63894, 12, 1, '2017-09-13 09:04:49'),
(46, 3295, '0', 0, 14, -1, '2017-09-13 09:04:49'),
(64, 1105, '2', 0.48, 12, 1, '2017-09-13 09:04:49'),
(69, 1095, '3', -1.53686, 38, 0, '2017-09-13 09:04:51'),
(39, 1470, '1', 1.5552, 14, 1, '2017-09-13 09:04:51'),
(42, 499, '0', 0, 26, -1, '2017-09-13 09:04:51'),
(38, 1637, '1', 1.6875, 6, 1, '2017-09-13 09:04:52'),
(31, 1466, '2', 0.1452, 39, 1, '2017-09-13 09:04:52'),
(57, 1216, '4', 0.1875, 18, 1, '2017-09-13 09:04:52'),
(56, 1292, '1', 0.27, 21, 1, '2017-09-13 09:04:53'),
(50, 745, '1', -1.36688, 13, 0, '2017-09-13 09:04:53'),
(66, 1523, '1', -2.26843, 6, 0, '2017-09-13 09:04:54'),
(68, 1184, '4', 0.421875, 15, 1, '2017-09-13 09:04:54'),
(70, 598, '4', 2.43, 6, 1, '2017-09-13 09:04:55'),
(43, 22, '1', 0.03, 18, 1, '2017-09-13 09:04:55'),
(48, 1122, '0', -0.0075, 20, 0, '2017-09-13 09:04:56'),
(66, 1528, '4', -2.7448, 2, 0, '2017-09-13 09:04:56'),
(67, 1494, '4', 1.62881, 10, 1, '2017-09-13 09:04:57'),
(40, 3166, '2', -2.28943, 10, 0, '2017-09-13 09:04:58'),
(50, 479, '1', -2.38327, 5, 0, '2017-09-13 09:04:58'),
(45, 2887, '3', 2.4, 12, 1, '2017-09-13 09:04:59'),
(33, 479, '1', -0.816635, 22, 0, '2017-09-13 09:05:00'),
(68, 1173, '2', 1.47, 6, 1, '2017-09-13 09:05:00'),
(42, 741, '4', -1.86981, 8, 0, '2017-09-13 09:05:00'),
(38, 1693, '2', -2.375, 10, 0, '2017-09-13 09:05:02'),
(43, 23, '1', 1.2675, 7, 1, '2017-09-13 09:05:02'),
(36, 2906, '1', -2.64998, 16, 0, '2017-09-13 09:05:02'),
(45, 2886, '1', 2.75, 5, 1, '2017-09-13 09:05:04'),
(57, 1183, '2', 0.619835, 12, 1, '2017-09-13 09:05:04'),
(44, 2152, '3', -0.949219, 21, 0, '2017-09-13 09:05:04'),
(40, 3179, '1', 2.513, 7, 1, '2017-09-13 09:05:05'),
(52, 1477, '4', -1.4856, 16, 0, '2017-09-13 09:05:05'),
(50, 748, '1', -1.92, 8, 0, '2017-09-13 09:05:06'),
(31, 1455, '2', -1.17188, 15, 0, '2017-09-13 09:05:07'),
(70, 854, '1', 1.92, 14, 1, '2017-09-13 09:05:09'),
(38, 1676, '4', 2.2188, 7, 1, '2017-09-13 09:05:09'),
(33, 478, '2', -2.0172, 9, 0, '2017-09-13 09:05:09'),
(64, 386, '0', -0.0075, 20, 0, '2017-09-13 09:05:10'),
(48, 2416, '3', 2.17911, 13, 1, '2017-09-13 09:05:10'),
(40, 3171, '1', 2.65665, 5, 1, '2017-09-13 09:05:10'),
(53, 599, '1', 0.140833, 47, 1, '2017-09-13 09:05:10'),
(68, 1195, '4', 0.75, 10, 1, '2017-09-13 09:05:10'),
(42, 480, '4', -1.57687, 11, 0, '2017-09-13 09:05:11'),
(52, 1486, '4', -2.2376, 6, 0, '2017-09-13 09:05:12'),
(51, 615, '2', 0.0675, 51, 1, '2017-09-13 09:05:14'),
(57, 1174, '3', 0.998521, 11, 1, '2017-09-13 09:05:15'),
(38, 1696, '1', -2.59091, 6, 0, '2017-09-13 09:05:16'),
(43, 25, '2', 0.3675, 13, 1, '2017-09-13 09:05:16'),
(42, 738, '3', -2.0346, 6, 0, '2017-09-13 09:05:17'),
(56, 1297, '3', 1.02083, 25, 1, '2017-09-13 09:05:18'),
(40, 3101, '4', 2.36512, 9, 1, '2017-09-13 09:05:19'),
(67, 1496, '1', -0.75, 22, 0, '2017-09-13 09:05:19'),
(36, 2892, '4', -2.57617, 19, 0, '2017-09-13 09:05:22'),
(49, 850, '0', -0.000833333, 60, 0, '2017-09-13 09:05:22'),
(70, 600, '3', 1.6081, 15, 1, '2017-09-13 09:05:24'),
(43, 21, '2', 0.9075, 9, 1, '2017-09-13 09:05:25'),
(33, 756, '3', -1.41797, 15, 0, '2017-09-13 09:05:25'),
(44, 2159, '1', -0.949219, 21, 0, '2017-09-13 09:05:25'),
(45, 2888, '3', 2.25111, 21, 1, '2017-09-13 09:05:26'),
(67, 1499, '1', -2.04726, 8, 0, '2017-09-13 09:05:27'),
(46, 3288, '0', -0.00207756, 38, 0, '2017-09-13 09:05:27'),
(36, 2885, '1', -2.81957, 7, 0, '2017-09-13 09:05:28'),
(68, 1263, '1', 0.826875, 19, 1, '2017-09-13 09:05:29'),
(64, 378, '0', -0.0075, 20, 0, '2017-09-13 09:05:30'),
(70, 1334, '4', 2.7, 6, 1, '2017-09-13 09:05:30'),
(38, 1712, '3', -1.40844, 17, 0, '2017-09-13 09:05:32'),
(33, 748, '4', -1.92, 8, 0, '2017-09-13 09:05:32'),
(56, 1190, '4', 0.75, 14, 1, '2017-09-13 09:05:32'),
(67, 1504, '1', 2.56687, 6, 1, '2017-09-13 09:05:33'),
(63, 2276, '0', -0.00130208, 48, 0, '2017-09-13 09:05:35'),
(40, 3133, '2', 1.71792, 17, 1, '2017-09-13 09:05:36'),
(69, 1172, '4', 0.75, 10, 1, '2017-09-13 09:05:36'),
(31, 1454, '2', 0.113426, 29, 1, '2017-09-13 09:05:36'),
(66, 2155, '4', -0.244898, 30, 0, '2017-09-13 09:05:36'),
(42, 740, '3', -0.668981, 19, 0, '2017-09-13 09:05:37'),
(43, 31, '3', -0.48, 12, 0, '2017-09-13 09:05:37'),
(52, 1485, '3', -0.693417, 27, 0, '2017-09-13 09:05:39'),
(38, 1674, '1', 2.24667, 7, 1, '2017-09-13 09:05:39'),
(36, 2877, '4', -2.68328, 12, 0, '2017-09-13 09:05:40'),
(45, 2864, '3', -2.43962, 16, 0, '2017-09-13 09:05:41'),
(44, 2146, '2', 0.46301, 17, 1, '2017-09-13 09:05:42'),
(57, 1203, '3', 0.03, 27, 1, '2017-09-13 09:05:43'),
(70, 1340, '4', -2.37097, 13, 0, '2017-09-13 09:05:43'),
(39, 1485, '0', -0.00110947, 52, 0, '2017-09-13 09:05:43'),
(51, 853, '0', 0, 30, -1, '2017-09-13 09:05:43'),
(53, 611, '2', -0.3072, 34, 0, '2017-09-13 09:05:44'),
(33, 746, '2', -1.33333, 12, 0, '2017-09-13 09:05:45'),
(43, 30, '2', 1.08, 8, 1, '2017-09-13 09:05:45'),
(66, 2150, '3', -1.74723, 9, 0, '2017-09-13 09:05:46'),
(64, 373, '0', -0.0075, 20, 0, '2017-09-13 09:05:50'),
(40, 3089, '3', -1.88988, 15, 0, '2017-09-13 09:05:50'),
(43, 37, '0', 0, 6, -1, '2017-09-13 09:05:51'),
(45, 2885, '4', 2.69195, 9, 1, '2017-09-13 09:05:51'),
(66, 2156, '1', 2.3232, 6, 1, '2017-09-13 09:05:52'),
(33, 753, '1', -1.96599, 8, 0, '2017-09-13 09:05:52'),
(39, 1468, '2', 1.6875, 10, 1, '2017-09-13 09:05:54'),
(70, 1092, '2', -2.4, 12, 0, '2017-09-13 09:05:55'),
(69, 1291, '4', 0.0075, 19, 1, '2017-09-13 09:05:55'),
(50, 755, '0', -0.00130208, 48, 0, '2017-09-13 09:05:55'),
(67, 1489, '2', -0.680272, 22, 0, '2017-09-13 09:05:56'),
(63, 2285, '2', 0.75, 21, 1, '2017-09-13 09:05:56'),
(56, 1227, '0', -0.00520833, 24, 0, '2017-09-13 09:05:57'),
(57, 1185, '2', -0.75, 14, 0, '2017-09-13 09:05:57'),
(56, 1291, '0', 0, 1, -1, '2017-09-13 09:05:57'),
(36, 2864, '4', -2.53969, 17, 0, '2017-09-13 09:05:58'),
(42, 474, '1', 0.676875, 21, 1, '2017-09-13 09:05:58'),
(53, 600, '3', 1.6081, 15, 1, '2017-09-13 09:05:59'),
(50, 476, '4', -2.43, 4, 0, '2017-09-13 09:05:59'),
(44, 2161, '2', -0.84083, 16, 0, '2017-09-13 09:05:59'),
(46, 3149, '4', -0.00831025, 36, 0, '2017-09-13 09:06:02'),
(50, 743, '1', -2.37037, 4, 0, '2017-09-13 09:06:03'),
(31, 3035, '1', -0.00382653, 27, 0, '2017-09-13 09:06:04'),
(38, 1698, '2', -0.808802, 25, 0, '2017-09-13 09:06:05'),
(39, 3002, '2', -0.998521, 11, 0, '2017-09-13 09:06:05'),
(70, 622, '1', -2.08333, 10, 0, '2017-09-13 09:06:05'),
(44, 2160, '3', 1.61333, 8, 1, '2017-09-13 09:06:07'),
(33, 745, '2', 1.17188, 15, 1, '2017-09-13 09:06:08'),
(43, 36, '4', 0.0675, 17, 1, '2017-09-13 09:06:08'),
(40, 3147, '3', 1.62865, 18, 1, '2017-09-13 09:06:09'),
(64, 381, '0', -0.0075, 20, 0, '2017-09-13 09:06:10'),
(45, 2855, '1', -2.32743, 19, 0, '2017-09-13 09:06:10'),
(57, 1172, '4', 0.0675, 17, 1, '2017-09-13 09:06:14'),
(52, 1484, '3', -0.108844, 34, 0, '2017-09-13 09:06:14'),
(31, 2929, '4', 1.02083, 10, 1, '2017-09-13 09:06:14'),
(51, 1124, '1', -0.653333, 32, 0, '2017-09-13 09:06:15'),
(68, 1270, '0', -0.00141777, 46, 0, '2017-09-13 09:06:16'),
(38, 1707, '4', 1.90226, 11, 1, '2017-09-13 09:06:16'),
(43, 26, '4', 0.9075, 9, 1, '2017-09-13 09:06:17'),
(44, 2155, '3', -1.53061, 12, 0, '2017-09-13 09:06:19'),
(69, 1186, '3', 0.0344388, 25, 1, '2017-09-13 09:06:20'),
(66, 2153, '4', -0.639053, 28, 0, '2017-09-13 09:06:20'),
(46, 3119, '4', -0.916205, 17, 0, '2017-09-13 09:06:20'),
(70, 1318, '3', -1.6081, 15, 0, '2017-09-13 09:06:21'),
(38, 1677, '3', -2.6875, 5, 0, '2017-09-13 09:06:21'),
(33, 752, '2', -1.4518, 14, 0, '2017-09-13 09:06:22'),
(53, 593, '2', -1.14083, 23, 0, '2017-09-13 09:06:23'),
(39, 1478, '2', 0.9075, 18, 1, '2017-09-13 09:06:23'),
(57, 1194, '1', 1.38138, 9, 1, '2017-09-13 09:06:23'),
(45, 2879, '2', 2.54929, 13, 1, '2017-09-13 09:06:23'),
(40, 3139, '3', 1.88988, 15, 1, '2017-09-13 09:06:24'),
(49, 854, '1', 0.0391837, 62, 1, '2017-09-13 09:06:24'),
(68, 1190, '4', 1.38138, 9, 1, '2017-09-13 09:06:25'),
(38, 1675, '2', -2.37037, 6, 0, '2017-09-13 09:06:26'),
(56, 1270, '0', 0, 29, -1, '2017-09-13 09:06:27'),
(43, 24, '3', 0.6075, 11, 1, '2017-09-13 09:06:28'),
(45, 2866, '4', 2.76188, 7, 1, '2017-09-13 09:06:30'),
(70, 853, '4', -2.08333, 10, 0, '2017-09-13 09:06:30'),
(48, 2429, '1', -0.532806, 81, 0, '2017-09-13 09:06:31'),
(31, 3039, '2', -0.359467, 17, 0, '2017-09-13 09:06:31'),
(42, 743, '3', -0.0208333, 33, 0, '2017-09-13 09:06:31'),
(63, 2273, '0', -0.00231481, 36, 0, '2017-09-13 09:06:32'),
(68, 1169, '2', 1.33333, 8, 1, '2017-09-13 09:06:33'),
(36, 2894, '3', -1.62865, 36, 0, '2017-09-13 09:06:33'),
(66, 2144, '4', 1.50521, 14, 1, '2017-09-13 09:06:34'),
(39, 1475, '2', 1.63894, 12, 1, '2017-09-13 09:06:34'),
(38, 1665, '2', 2.12138, 7, 1, '2017-09-13 09:06:34'),
(69, 1173, '2', 0.1875, 15, 1, '2017-09-13 09:06:35'),
(33, 475, '1', -1.54395, 13, 0, '2017-09-13 09:06:35'),
(45, 2861, '2', 2.76188, 7, 1, '2017-09-13 09:06:37'),
(57, 1184, '4', 0.421875, 15, 1, '2017-09-13 09:06:38'),
(64, 2431, '2', -1.4518, 28, 0, '2017-09-13 09:06:39'),
(70, 1310, '3', -2.14793, 8, 0, '2017-09-13 09:06:39'),
(56, 1196, '4', 0.75, 12, 1, '2017-09-13 09:06:39'),
(38, 1657, '4', 1.6875, 5, 1, '2017-09-13 09:06:39'),
(43, 20, '2', 0.6075, 11, 1, '2017-09-13 09:06:39'),
(39, 1469, '2', 2.29688, 5, 1, '2017-09-13 09:06:40'),
(48, 2410, '2', 2.32823, 10, 1, '2017-09-13 09:06:40'),
(40, 3109, '3', -2.04939, 16, 0, '2017-09-13 09:06:40'),
(68, 1194, '1', 1.6875, 7, 1, '2017-09-13 09:06:40'),
(52, 1479, '2', -0.447831, 27, 0, '2017-09-13 09:06:41'),
(51, 852, '4', 0.963333, 26, 1, '2017-09-13 09:06:41'),
(36, 2905, '1', 2.69195, 9, 1, '2017-09-13 09:06:42'),
(67, 1498, '1', -0.00130208, 47, 0, '2017-09-13 09:06:43'),
(57, 1173, '2', 1.47, 6, 1, '2017-09-13 09:06:44'),
(44, 2153, '1', -0.75, 26, 0, '2017-09-13 09:06:45'),
(33, 482, '1', -1.7415, 10, 0, '2017-09-13 09:06:45'),
(53, 619, '4', 1.14083, 23, 1, '2017-09-13 09:06:46'),
(45, 2882, '1', 2.69195, 9, 1, '2017-09-13 09:06:46'),
(40, 3176, '3', 2.513, 7, 1, '2017-09-13 09:06:47'),
(46, 3293, '1', 0.168283, 29, 1, '2017-09-13 09:06:49'),
(68, 1172, '4', 0.6075, 11, 1, '2017-09-13 09:06:51'),
(33, 483, '4', -2.15643, 7, 0, '2017-09-13 09:06:52'),
(36, 2898, '1', -2.73861, 10, 0, '2017-09-13 09:06:53'),
(64, 2422, '3', -2.33807, 15, 0, '2017-09-13 09:06:53'),
(48, 385, '2', -0.27, 14, 0, '2017-09-13 09:06:54'),
(43, 33, '3', 0.12, 16, 1, '2017-09-13 09:06:56'),
(67, 1500, '1', -1.9571, 10, 0, '2017-09-13 09:06:56'),
(64, 2403, '2', 2.73926, 4, 1, '2017-09-13 09:06:58'),
(69, 1174, '3', 0.0399408, 23, 1, '2017-09-13 09:06:58'),
(51, 597, '1', -1.33333, 18, 0, '2017-09-13 09:06:59'),
(40, 2154, '2', 1.81481, 8, 1, '2017-09-13 09:06:59'),
(52, 1474, '3', -0.979592, 18, 0, '2017-09-13 09:06:59'),
(57, 1263, '2', -1.17188, 15, 0, '2017-09-13 09:07:00'),
(70, 1089, '2', -1.2675, 21, 0, '2017-09-13 09:07:00'),
(56, 1183, '0', -0.00619835, 22, 0, '2017-09-13 09:07:01'),
(38, 1660, '2', -0.0710059, 22, 0, '2017-09-13 09:07:02'),
(43, 38, '3', -1.2675, 7, 0, '2017-09-13 09:07:03'),
(36, 2897, '4', -2.65665, 10, 0, '2017-09-13 09:07:03'),
(66, 2147, '4', 0.800833, 29, 1, '2017-09-13 09:07:03'),
(45, 2892, '1', -2.40251, 17, 0, '2017-09-13 09:07:04'),
(64, 402, '2', -1.2675, 7, 0, '2017-09-13 09:07:04'),
(39, 1473, '1', 0.75, 25, 1, '2017-09-13 09:07:05'),
(33, 614, '1', -2.47016, 5, 0, '2017-09-13 09:07:05'),
(70, 1317, '3', 2.43, 6, 1, '2017-09-13 09:07:06'),
(53, 996, '4', -0.9408, 22, 0, '2017-09-13 09:07:07'),
(44, 2158, '3', -0.813802, 23, 0, '2017-09-13 09:07:08'),
(64, 1110, '2', 1.92, 4, 1, '2017-09-13 09:07:08'),
(40, 2158, '0', 0, 9, -1, '2017-09-13 09:07:08'),
(66, 2161, '3', 1.89187, 7, 1, '2017-09-13 09:07:10'),
(33, 1311, '4', 2.3232, 6, 1, '2017-09-13 09:07:11'),
(52, 3000, '4', -0.630208, 13, 0, '2017-09-13 09:07:12'),
(38, 1679, '3', -1.6875, 11, 0, '2017-09-13 09:07:12'),
(63, 1555, '1', -0.0694707, 39, 0, '2017-09-13 09:07:12'),
(64, 1140, '1', 1.6875, 5, 1, '2017-09-13 09:07:13'),
(70, 594, '3', 2.1168, 8, 1, '2017-09-13 09:07:14'),
(68, 1177, '0', -0.00619835, 22, 0, '2017-09-13 09:07:14'),
(31, 1463, '4', -0.00154959, 43, 0, '2017-09-13 09:07:14'),
(48, 399, '0', -0.0075, 20, 0, '2017-09-13 09:07:14'),
(36, 2903, '2', 2.54929, 13, 1, '2017-09-13 09:07:16'),
(44, 2144, '3', -2.08333, 8, 0, '2017-09-13 09:07:17'),
(40, 2155, '3', -1.96599, 8, 0, '2017-09-13 09:07:17'),
(45, 2902, '2', 2.513, 14, 1, '2017-09-13 09:07:17'),
(70, 996, '3', -2.5392, 4, 0, '2017-09-13 09:07:18'),
(42, 750, '0', -0.00141777, 46, 0, '2017-09-13 09:07:18'),
(51, 601, '4', 1.2398, 20, 1, '2017-09-13 09:07:19'),
(66, 2145, '3', -1.28254, 9, 0, '2017-09-13 09:07:20'),
(45, 2899, '2', 2.93296, 2, 1, '2017-09-13 09:07:20'),
(43, 40, '3', -0.0675, 17, 0, '2017-09-13 09:07:20'),
(56, 1172, '4', 0.0075, 19, 1, '2017-09-13 09:07:20'),
(64, 379, '3', 1.2675, 7, 1, '2017-09-13 09:07:20'),
(49, 1301, '2', -0.046875, 56, 0, '2017-09-13 09:07:21'),
(52, 1482, '3', -1.89824, 9, 0, '2017-09-13 09:07:21'),
(53, 615, '2', 1.84083, 13, 1, '2017-09-13 09:07:21'),
(39, 1487, '1', 1.19234, 17, 1, '2017-09-13 09:07:21'),
(31, 3044, '3', 1.50521, 7, 1, '2017-09-13 09:07:21'),
(63, 2268, '1', 1.80187, 9, 1, '2017-09-13 09:07:22'),
(36, 2895, '1', -2.79651, 6, 0, '2017-09-13 09:07:22'),
(46, 3136, '2', 0.0519391, 33, 1, '2017-09-13 09:07:22'),
(69, 1196, '0', -0.00520833, 24, 0, '2017-09-13 09:07:23'),
(43, 52, '3', -1.6875, 5, 0, '2017-09-13 09:07:25'),
(64, 363, '3', 1.6875, 5, 1, '2017-09-13 09:07:25'),
(67, 3054, '1', -0.03, 33, 0, '2017-09-13 09:07:26'),
(57, 1292, '2', -0.03, 27, 0, '2017-09-13 09:07:26'),
(66, 2160, '3', 1.76333, 7, 1, '2017-09-13 09:07:27'),
(44, 2180, '1', -0.860969, 13, 0, '2017-09-13 09:07:29'),
(46, 3290, '0', 0, 8, -1, '2017-09-13 09:07:30'),
(31, 3004, '2', -1.47, 9, 0, '2017-09-13 09:07:31'),
(64, 401, '3', -1.47, 6, 0, '2017-09-13 09:07:31'),
(42, 742, '1', 1.2675, 14, 1, '2017-09-13 09:07:32'),
(68, 1292, '1', 0.333333, 20, 1, '2017-09-13 09:07:33'),
(40, 2150, '2', -0.916205, 17, 0, '2017-09-13 09:07:34'),
(70, 1124, '3', -1.61333, 16, 0, '2017-09-13 09:07:34'),
(33, 1318, '4', -0.979592, 24, 0, '2017-09-13 09:07:35'),
(66, 2158, '1', 1.98047, 9, 1, '2017-09-13 09:07:35'),
(53, 1089, '4', -1.76333, 14, 0, '2017-09-13 09:07:36'),
(67, 1501, '1', -1.6875, 11, 0, '2017-09-13 09:07:37'),
(52, 1476, '1', -1.3591, 17, 0, '2017-09-13 09:07:38'),
(46, 3112, '1', 1.86981, 8, 1, '2017-09-13 09:07:38'),
(64, 1139, '2', 0.9075, 9, 1, '2017-09-13 09:07:40'),
(57, 1195, '4', 0.3675, 13, 1, '2017-09-13 09:07:40'),
(43, 41, '0', -0.0075, 20, 0, '2017-09-13 09:07:45'),
(67, 1507, '1', 2.14793, 8, 1, '2017-09-13 09:07:45'),
(64, 392, '2', -1.47, 6, 0, '2017-09-13 09:07:46'),
(63, 2279, '2', 0.421875, 25, 1, '2017-09-13 09:07:46'),
(70, 1091, '3', -1.84083, 13, 0, '2017-09-13 09:07:47'),
(39, 1479, '1', -0.502066, 26, 0, '2017-09-13 09:07:47'),
(66, 2149, '4', 1.29848, 13, 1, '2017-09-13 09:07:48'),
(33, 615, '1', -1.84083, 13, 0, '2017-09-13 09:07:48'),
(36, 2909, '2', -1.97297, 28, 0, '2017-09-13 09:07:49'),
(43, 60, '3', -1.6875, 5, 0, '2017-09-13 09:07:49'),
(38, 1715, '3', -0.297325, 37, 0, '2017-09-13 09:07:50'),
(44, 2156, '1', 0.9408, 22, 1, '2017-09-13 09:07:52'),
(42, 478, '2', -1.08, 20, 0, '2017-09-13 09:07:52'),
(64, 2406, '1', -2.60486, 6, 0, '2017-09-13 09:07:52'),
(56, 1276, '0', -0.00292969, 32, 0, '2017-09-13 09:07:53'),
(31, 1460, '1', 0.75, 23, 1, '2017-09-13 09:07:54'),
(69, 1263, '0', 0, 31, -1, '2017-09-13 09:07:54'),
(48, 2411, '1', -1.18041, 41, 0, '2017-09-13 09:07:55'),
(70, 1308, '3', 2.25333, 8, 1, '2017-09-13 09:07:55'),
(66, 2152, '3', -2.1888, 7, 0, '2017-09-13 09:07:56'),
(46, 3123, '1', -0.75, 19, 0, '2017-09-13 09:07:57'),
(67, 2947, '1', -1.08, 12, 0, '2017-09-13 09:07:58'),
(31, 1467, '0', 0, 6, -1, '2017-09-13 09:08:00'),
(70, 597, '2', 2.47016, 5, 1, '2017-09-13 09:08:01'),
(52, 1475, '1', -0.75, 23, 0, '2017-09-13 09:08:01'),
(51, 594, '3', 0.0588, 43, 1, '2017-09-13 09:08:02'),
(38, 1695, '3', 1.81481, 12, 1, '2017-09-13 09:08:02'),
(43, 42, '2', 0.3675, 13, 1, '2017-09-13 09:08:03'),
(53, 1317, '4', -0.853333, 28, 0, '2017-09-13 09:08:03'),
(57, 1169, '2', 0, 24, 1, '2017-09-13 09:08:04'),
(33, 619, '0', 0, 16, -1, '2017-09-13 09:08:04'),
(33, 1301, '0', 0, 0, -1, '2017-09-13 09:08:05'),
(43, 51, '2', -2.1675, 3, 0, '2017-09-13 09:08:06'),
(38, 1666, '3', -2.47934, 4, 0, '2017-09-13 09:08:06'),
(49, 614, '1', -0.0833333, 45, 0, '2017-09-13 09:08:06'),
(48, 1110, '2', 0.48, 12, 1, '2017-09-13 09:08:07'),
(40, 2147, '4', 0.6075, 33, 1, '2017-09-13 09:08:08'),
(70, 1301, '3', 2.37964, 7, 1, '2017-09-13 09:08:08'),
(36, 2900, '3', -2.32743, 19, 0, '2017-09-13 09:08:08'),
(44, 2145, '4', -0.359467, 17, 0, '2017-09-13 09:08:09'),
(64, 398, '3', -0.0675, 17, 0, '2017-09-13 09:08:09'),
(67, 1518, '1', -1.43027, 13, 0, '2017-09-13 09:08:11'),
(68, 1208, '2', -0.72, 38, 0, '2017-09-13 09:08:12'),
(33, 1124, '0', 0, 7, -1, '2017-09-13 09:08:12'),
(38, 1663, '1', 1.76333, 7, 1, '2017-09-13 09:08:13'),
(53, 594, '3', 1.92, 10, 1, '2017-09-13 09:08:13'),
(69, 1194, '1', 0.309949, 19, 1, '2017-09-13 09:08:13'),
(70, 403, '4', 2.25333, 8, 1, '2017-09-13 09:08:15'),
(46, 3289, '0', 0, 19, -1, '2017-09-13 09:08:16'),
(38, 1711, '1', 2.60486, 3, 1, '2017-09-13 09:08:16'),
(56, 1186, '3', 0.0612245, 24, 1, '2017-09-13 09:08:17'),
(66, 2146, '3', -0.1875, 21, 0, '2017-09-13 09:08:17'),
(39, 1477, '2', -0.592593, 30, 0, '2017-09-13 09:08:17'),
(42, 479, '1', -0.567108, 26, 0, '2017-09-13 09:08:19'),
(36, 2904, '3', 2.62111, 11, 1, '2017-09-13 09:08:19'),
(48, 402, '1', -0.48, 12, 0, '2017-09-13 09:08:19'),
(45, 2898, '0', -0.387298, 60, 0, '2017-09-13 09:08:21'),
(51, 1089, '4', -1.40083, 19, 0, '2017-09-13 09:08:21'),
(57, 1218, '1', -0.0675, 17, 0, '2017-09-13 09:08:21'),
(64, 1131, '3', -0.48, 12, 0, '2017-09-13 09:08:22'),
(63, 2278, '0', -0.00231481, 36, 0, '2017-09-13 09:08:23'),
(43, 46, '2', -0.0675, 17, 0, '2017-09-13 09:08:23'),
(31, 1449, '1', -0.48, 24, 0, '2017-09-13 09:08:24'),
(39, 1476, '2', -2.14793, 8, 0, '2017-09-13 09:08:25'),
(40, 2146, '2', 0.382653, 18, 1, '2017-09-13 09:08:25'),
(44, 2166, '4', 0.835648, 17, 1, '2017-09-13 09:08:26'),
(33, 593, '2', -1.6875, 15, 0, '2017-09-13 09:08:27'),
(48, 376, '1', -1.08, 8, 0, '2017-09-13 09:08:28'),
(57, 1196, '4', 1.50521, 7, 1, '2017-09-13 09:08:28'),
(67, 1527, '1', 1.30963, 19, 1, '2017-09-13 09:08:30'),
(52, 509, '1', 1.56481, 10, 1, '2017-09-13 09:08:30'),
(53, 850, '3', 1.61333, 16, 1, '2017-09-13 09:08:30'),
(68, 1218, '3', -0.0075, 19, 0, '2017-09-13 09:08:31'),
(66, 2143, '4', 1.17188, 15, 1, '2017-09-13 09:08:32'),
(36, 2908, '2', -2.513, 14, 0, '2017-09-13 09:08:34'),
(64, 2432, '3', -2.38116, 12, 0, '2017-09-13 09:08:34'),
(56, 1195, '4', 0.0675, 17, 1, '2017-09-13 09:08:35'),
(48, 1137, '2', 0.9075, 9, 1, '2017-09-13 09:08:36'),
(70, 599, '1', 1.14083, 23, 1, '2017-09-13 09:08:38'),
(66, 2159, '4', 2.1888, 7, 1, '2017-09-13 09:08:39'),
(69, 1185, '2', -0.0153061, 26, 0, '2017-09-13 09:08:39'),
(38, 1658, '2', -0.5, 25, 0, '2017-09-13 09:08:41'),
(33, 599, '2', -1.6875, 15, 0, '2017-09-13 09:08:42'),
(51, 603, '1', 1.0662, 21, 1, '2017-09-13 09:08:42'),
(43, 48, '0', -0.0075, 20, 0, '2017-09-13 09:08:43'),
(52, 472, '1', 1.2675, 14, 1, '2017-09-13 09:08:44'),
(70, 604, '3', 2.43, 6, 1, '2017-09-13 09:08:45'),
(67, 1522, '1', -1.41797, 15, 0, '2017-09-13 09:08:45'),
(57, 1276, '2', -0.574219, 18, 0, '2017-09-13 09:08:47'),
(38, 1672, '2', 2.625, 6, 1, '2017-09-13 09:08:47'),
(39, 1481, '2', 0.541875, 23, 1, '2017-09-13 09:08:48'),
(66, 2180, '1', -1.38138, 9, 0, '2017-09-13 09:08:49'),
(44, 2177, '1', 0.259516, 24, 1, '2017-09-13 09:08:50'),
(31, 3051, '0', -0.00443787, 26, 0, '2017-09-13 09:08:51'),
(52, 726, '1', 1.89187, 7, 1, '2017-09-13 09:08:51'),
(49, 595, '4', 0.0277367, 47, 1, '2017-09-13 09:08:52'),
(33, 1308, '3', 2.00083, 11, 1, '2017-09-13 09:08:53'),
(46, 3292, '0', -0.00207756, 38, 0, '2017-09-13 09:08:54'),
(64, 1114, '0', -0.0075, 20, 0, '2017-09-13 09:08:54'),
(48, 2432, '2', -2.09851, 18, 0, '2017-09-13 09:08:54'),
(44, 2163, '1', 2.22454, 5, 1, '2017-09-13 09:08:55'),
(57, 1177, '2', 1.04752, 9, 1, '2017-09-13 09:08:56'),
(66, 2154, '3', -1.94676, 7, 0, '2017-09-13 09:08:56'),
(70, 1321, '3', 2.48438, 11, 1, '2017-09-13 09:08:56'),
(51, 1318, '2', 1.6081, 15, 1, '2017-09-13 09:08:57'),
(40, 2143, '0', 0, 31, -1, '2017-09-13 09:08:57'),
(68, 1203, '3', 0.0533333, 26, 1, '2017-09-13 09:08:58'),
(33, 1089, '4', -2.43, 6, 0, '2017-09-13 09:08:59'),
(70, 1126, '2', 2.85, 3, 1, '2017-09-13 09:09:00'),
(42, 754, '0', -0.00170068, 42, 0, '2017-09-13 09:09:01'),
(43, 54, '3', -0.0075, 19, 0, '2017-09-13 09:09:02'),
(63, 2287, '2', 0.0153061, 39, 1, '2017-09-13 09:09:02'),
(39, 3000, '2', -0.421875, 15, 0, '2017-09-13 09:09:03'),
(69, 1216, '0', -0.00520833, 24, 0, '2017-09-13 09:09:04'),
(38, 1714, '3', 1.73684, 16, 1, '2017-09-13 09:09:04'),
(36, 2896, '2', -1.80492, 32, 0, '2017-09-13 09:09:06'),
(31, 1464, '2', 1.2513, 17, 1, '2017-09-13 09:09:07'),
(44, 2174, '1', 1.40443, 12, 1, '2017-09-13 09:09:08'),
(46, 3097, '4', -1.19668, 14, 0, '2017-09-13 09:09:08'),
(43, 43, '3', -1.47, 6, 0, '2017-09-13 09:09:08'),
(38, 1667, '3', 2.71429, 4, 1, '2017-09-13 09:09:08'),
(64, 388, '4', -0.27, 14, 0, '2017-09-13 09:09:08'),
(53, 1310, '3', -0.1875, 39, 0, '2017-09-13 09:09:09'),
(48, 374, '4', 0.12, 16, 1, '2017-09-13 09:09:10'),
(56, 1263, '3', -0.046875, 35, 0, '2017-09-13 09:09:10'),
(52, 490, '3', -0.75, 18, 0, '2017-09-13 09:09:10'),
(70, 1132, '1', 2.45, 11, 1, '2017-09-13 09:09:11'),
(39, 1484, '2', -2.08333, 7, 0, '2017-09-13 09:09:11'),
(57, 1210, '1', 0.333333, 16, 1, '2017-09-13 09:09:11'),
(43, 55, '3', -2.1675, 3, 0, '2017-09-13 09:09:12'),
(36, 2901, '4', 2.72703, 8, 1, '2017-09-13 09:09:14'),
(38, 1643, '1', -2.30769, 6, 0, '2017-09-13 09:09:14'),
(53, 1318, '2', 2.4882, 5, 1, '2017-09-13 09:09:14'),
(67, 1512, '2', -0.489275, 31, 0, '2017-09-13 09:09:16'),
(43, 50, '3', -1.6875, 5, 0, '2017-09-13 09:09:17'),
(70, 1332, '3', 2.65, 7, 1, '2017-09-13 09:09:18'),
(64, 2420, '1', -2.40755, 10, 0, '2017-09-13 09:09:18'),
(51, 622, '2', 1.20333, 22, 1, '2017-09-13 09:09:19'),
(33, 606, '1', -1.2675, 21, 0, '2017-09-13 09:09:20'),
(44, 2175, '4', -1.29848, 13, 0, '2017-09-13 09:09:20'),
(49, 598, '4', 0.853333, 28, 1, '2017-09-13 09:09:20'),
(57, 1170, '2', 1.17188, 9, 1, '2017-09-13 09:09:21'),
(48, 1117, '2', 0.6075, 11, 1, '2017-09-13 09:09:21'),
(45, 2893, '0', -0.387298, 60, 0, '2017-09-13 09:09:21'),
(36, 2891, '2', -2.69195, 9, 0, '2017-09-13 09:09:22'),
(43, 59, '3', -1.47, 6, 0, '2017-09-13 09:09:22'),
(64, 1112, '1', -1.6875, 5, 0, '2017-09-13 09:09:23'),
(38, 1661, '3', 1.96154, 9, 1, '2017-09-13 09:09:23'),
(40, 2159, '3', -0.630208, 26, 0, '2017-09-13 09:09:23'),
(67, 1525, '2', -2.00826, 8, 0, '2017-09-13 09:09:25'),
(70, 1361, '2', -2.72703, 8, 0, '2017-09-13 09:09:25'),
(46, 3117, '2', -0.831025, 18, 0, '2017-09-13 09:09:26'),
(31, 3000, '4', -0.130208, 19, 0, '2017-09-13 09:09:27'),
(52, 718, '4', -0.563333, 17, 0, '2017-09-13 09:09:27'),
(57, 1197, '3', -1.50521, 7, 0, '2017-09-13 09:09:27'),
(42, 476, '1', -0.316875, 27, 0, '2017-09-13 09:09:29'),
(70, 1313, '2', 2.77778, 4, 1, '2017-09-13 09:09:30'),
(64, 2408, '1', -2.56085, 7, 0, '2017-09-13 09:09:30'),
(36, 2899, '2', 2.72703, 8, 1, '2017-09-13 09:09:30'),
(69, 1276, '2', -0.0732422, 27, 0, '2017-09-13 09:09:31'),
(66, 2151, '4', -0.2352, 36, 0, '2017-09-13 09:09:32'),
(45, 2900, '3', -2.68328, 12, 0, '2017-09-13 09:09:33'),
(39, 1480, '4', 0.613946, 23, 1, '2017-09-13 09:09:33'),
(33, 609, '1', -1.84083, 13, 0, '2017-09-13 09:09:33'),
(64, 1121, '1', -1.92, 4, 0, '2017-09-13 09:09:34'),
(51, 606, '1', -1.6875, 15, 0, '2017-09-13 09:09:35'),
(38, 1681, '3', 2.1875, 13, 1, '2017-09-13 09:09:36'),
(42, 748, '1', -1.92, 8, 0, '2017-09-13 09:09:37'),
(68, 1261, '0', -0.00207756, 38, 0, '2017-09-13 09:09:37'),
(56, 1203, '3', 0.03, 27, 1, '2017-09-13 09:09:37'),
(66, 2163, '3', -2.08333, 6, 0, '2017-09-13 09:09:38'),
(46, 3102, '2', -1.40443, 12, 0, '2017-09-13 09:09:38'),
(36, 2918, '4', -2.72703, 8, 0, '2017-09-13 09:09:39'),
(64, 1107, '4', 1.6875, 5, 1, '2017-09-13 09:09:39'),
(52, 724, '2', -1.08, 12, 0, '2017-09-13 09:09:39'),
(70, 612, '4', -2.65665, 10, 0, '2017-09-13 09:09:40'),
(33, 850, '1', -2.34083, 7, 0, '2017-09-13 09:09:40'),
(53, 852, '1', -0.963333, 26, 0, '2017-09-13 09:09:40'),
(67, 1521, '1', 1.53061, 16, 1, '2017-09-13 09:09:41'),
(48, 383, '0', -0.0075, 20, 0, '2017-09-13 09:09:41'),
(52, 727, '2', 2.37037, 4, 1, '2017-09-13 09:09:43'),
(38, 1700, '1', 2.46, 9, 1, '2017-09-13 09:09:45'),
(69, 1218, '1', -0.1875, 15, 0, '2017-09-13 09:09:46'),
(52, 723, '1', 2.37037, 4, 1, '2017-09-13 09:09:47'),
(57, 1186, '3', 0.309949, 19, 1, '2017-09-13 09:09:47'),
(31, 3002, '3', -0.110947, 21, 0, '2017-09-13 09:09:48'),
(43, 2403, '2', 2.31148, 11, 1, '2017-09-13 09:09:48'),
(45, 2894, '1', -2.47645, 15, 0, '2017-09-13 09:09:48'),
(36, 2914, '1', 2.65665, 10, 1, '2017-09-13 09:09:48'),
(63, 2281, '0', -0.00141777, 46, 0, '2017-09-13 09:09:49'),
(44, 2181, '2', -1.5123, 29, 0, '2017-09-13 09:09:49'),
(40, 2152, '2', 0.630208, 26, 1, '2017-09-13 09:09:50'),
(39, 1474, '2', 1.14966, 16, 1, '2017-09-13 09:09:50'),
(38, 1717, '2', -2.74448, 5, 0, '2017-09-13 09:09:50'),
(66, 2171, '1', -0.75, 12, 0, '2017-09-13 09:09:50'),
(33, 1183, '2', 1.58678, 6, 1, '2017-09-13 09:09:53'),
(43, 1131, '1', 1.2675, 7, 1, '2017-09-13 09:09:55'),
(56, 1197, '1', 0.130208, 19, 1, '2017-09-13 09:09:56'),
(66, 2166, '3', -1.94676, 7, 0, '2017-09-13 09:09:57'),
(57, 1189, '1', -1.10587, 11, 0, '2017-09-13 09:09:58'),
(68, 1197, '3', -0.0208333, 22, 0, '2017-09-13 09:09:58'),
(53, 609, '1', -1.54083, 17, 0, '2017-09-13 09:09:58'),
(49, 603, '1', 0.217456, 38, 1, '2017-09-13 09:09:58'),
(69, 1197, '3', -0.75, 12, 0, '2017-09-13 09:09:58'),
(45, 2904, '3', 2.65665, 10, 1, '2017-09-13 09:09:58'),
(43, 1104, '3', 1.92, 4, 1, '2017-09-13 09:09:59'),
(52, 466, '3', 1.08, 12, 1, '2017-09-13 09:09:59'),
(64, 391, '0', -0.0075, 20, 0, '2017-09-13 09:09:59'),
(70, 1323, '4', -2.0625, 20, 0, '2017-09-13 09:09:59'),
(44, 2171, '2', 1.02083, 10, 1, '2017-09-13 09:10:00'),
(48, 394, '0', -0.0075, 20, 0, '2017-09-13 09:10:01'),
(40, 2144, '4', 1.6875, 12, 1, '2017-09-13 09:10:02'),
(67, 1515, '1', 0.676875, 21, 1, '2017-09-13 09:10:02'),
(66, 2175, '2', 1.99654, 7, 1, '2017-09-13 09:10:04'),
(36, 2911, '1', 2.43962, 16, 1, '2017-09-13 09:10:04'),
(38, 1644, '1', -1.5, 14, 0, '2017-09-13 09:10:04'),
(70, 1328, '2', -2.75, 5, 0, '2017-09-13 09:10:05'),
(39, 1491, '4', -1.14966, 16, 0, '2017-09-13 09:10:06'),
(64, 1137, '2', 1.2675, 7, 1, '2017-09-13 09:10:06'),
(48, 363, '3', 1.2675, 7, 1, '2017-09-13 09:10:08'),
(52, 737, '0', 0, 10, -1, '2017-09-13 09:10:09'),
(38, 1668, '1', -2.625, 5, 0, '2017-09-13 09:10:09'),
(66, 2179, '1', -1.88021, 5, 0, '2017-09-13 09:10:09'),
(33, 1261, '1', -0.916205, 17, 0, '2017-09-13 09:10:11'),
(69, 1170, '2', 0.630208, 13, 1, '2017-09-13 09:10:12'),
(40, 2149, '4', 1.62881, 10, 1, '2017-09-13 09:10:12'),
(70, 995, '4', 2.65, 7, 1, '2017-09-13 09:10:12'),
(38, 1646, '2', 2.65385, 3, 1, '2017-09-13 09:10:12'),
(45, 2909, '3', -2.513, 14, 0, '2017-09-13 09:10:13'),
(43, 2414, '4', -2.06444, 15, 0, '2017-09-13 09:10:13'),
(31, 1480, '3', -0.435374, 26, 0, '2017-09-13 09:10:14'),
(44, 2172, '4', 1.03806, 14, 1, '2017-09-13 09:10:14'),
(63, 2269, '4', 0.55102, 24, 1, '2017-09-13 09:10:14'),
(39, 1490, '2', -1.89824, 9, 0, '2017-09-13 09:10:14'),
(52, 494, '3', 2.08333, 5, 1, '2017-09-13 09:10:14'),
(42, 752, '4', -0.0694707, 39, 0, '2017-09-13 09:10:16'),
(36, 2931, '3', -2.58532, 12, 0, '2017-09-13 09:10:17'),
(45, 2908, '3', 2.83093, 5, 1, '2017-09-13 09:10:18'),
(48, 2404, '1', 2.26843, 12, 1, '2017-09-13 09:10:20'),
(52, 747, '2', 2.5, 6, 1, '2017-09-13 09:10:21'),
(43, 1107, '4', 1.2675, 7, 1, '2017-09-13 09:10:21'),
(64, 380, '4', -0.1875, 15, 0, '2017-09-13 09:10:21'),
(38, 1694, '1', 2.34783, 10, 1, '2017-09-13 09:10:22'),
(39, 1501, '1', -1.89824, 9, 0, '2017-09-13 09:10:23'),
(45, 2901, '4', 2.79651, 6, 1, '2017-09-13 09:10:24'),
(66, 381, '1', 1.2675, 7, 1, '2017-09-13 09:10:26'),
(36, 2926, '3', 2.69195, 9, 1, '2017-09-13 09:10:26'),
(44, 2179, '1', -0.75, 12, 0, '2017-09-13 09:10:26'),
(57, 1200, '2', -0.113426, 29, 0, '2017-09-13 09:10:27'),
(42, 745, '4', -1.57687, 11, 0, '2017-09-13 09:10:27'),
(38, 1650, '1', 2.42308, 5, 1, '2017-09-13 09:10:27'),
(48, 364, '2', 1.2675, 7, 1, '2017-09-13 09:10:27'),
(70, 1090, '3', -2.25, 15, 0, '2017-09-13 09:10:27'),
(68, 1297, '3', 0.800833, 29, 1, '2017-09-13 09:10:27'),
(33, 1190, '1', -0.382653, 18, 0, '2017-09-13 09:10:28'),
(64, 395, '4', -1.2675, 7, 0, '2017-09-13 09:10:28'),
(52, 478, '2', -2.52, 8, 0, '2017-09-13 09:10:29'),
(43, 393, '4', -1.08, 8, 0, '2017-09-13 09:10:29'),
(45, 2897, '4', -2.84605, 6, 0, '2017-09-13 09:10:29'),
(70, 1320, '3', 2.76, 4, 1, '2017-09-13 09:10:32'),
(53, 604, '4', -0.563333, 34, 0, '2017-09-13 09:10:32'),
(38, 1720, '3', 2.74448, 5, 1, '2017-09-13 09:10:32'),
(68, 1191, '3', 2.35714, 6, 1, '2017-09-13 09:10:34'),
(31, 1468, '1', -0.826875, 19, 0, '2017-09-13 09:10:34'),
(51, 598, '0', -0.000833333, 60, 0, '2017-09-13 09:10:35'),
(67, 1517, '1', 0.453704, 33, 1, '2017-09-13 09:10:35'),
(56, 1261, '0', -0.00207756, 38, 0, '2017-09-13 09:10:35'),
(64, 397, '4', -1.2675, 7, 0, '2017-09-13 09:10:35'),
(70, 1325, '1', 2.73214, 5, 1, '2017-09-13 09:10:36'),
(66, 2410, '2', 2.26573, 11, 1, '2017-09-13 09:10:37'),
(57, 1220, '2', 1.2398, 10, 1, '2017-09-13 09:10:37'),
(33, 1196, '4', 1.02083, 10, 1, '2017-09-13 09:10:39'),
(43, 1117, '2', 0.75, 10, 1, '2017-09-13 09:10:39'),
(38, 1653, '3', 2.47645, 7, 1, '2017-09-13 09:10:39'),
(36, 2921, '1', -2.513, 14, 0, '2017-09-13 09:10:40'),
(63, 2270, '1', 0.567108, 26, 1, '2017-09-13 09:10:40'),
(45, 2895, '2', 2.65665, 10, 1, '2017-09-13 09:10:40'),
(64, 2404, '1', 2.62146, 6, 1, '2017-09-13 09:10:41'),
(69, 1203, '0', -0.00333333, 30, 0, '2017-09-13 09:10:42'),
(48, 1114, '3', -0.12, 16, 0, '2017-09-13 09:10:43'),
(67, 1520, '4', 2.1132, 9, 1, '2017-09-13 09:10:44'),
(66, 2403, '2', 2.55148, 7, 1, '2017-09-13 09:10:44'),
(42, 744, '2', -0.991875, 17, 0, '2017-09-13 09:10:44'),
(56, 1171, '4', 0.6075, 11, 1, '2017-09-13 09:10:46'),
(64, 390, '1', -1.6875, 5, 0, '2017-09-13 09:10:46'),
(38, 1719, '1', 2.47645, 10, 1, '2017-09-13 09:10:49'),
(44, 2168, '4', 0.6862, 24, 1, '2017-09-13 09:10:50'),
(66, 1110, '2', 1.2675, 7, 1, '2017-09-13 09:10:51'),
(70, 1343, '3', -2.04, 16, 0, '2017-09-13 09:10:53'),
(53, 601, '4', 1.2398, 20, 1, '2017-09-13 09:10:53'),
(33, 1172, '4', 0.1875, 15, 1, '2017-09-13 09:10:53'),
(69, 1198, '4', 0.48, 12, 1, '2017-09-13 09:10:54'),
(68, 1284, '0', -0.15, 20, 0, '2017-09-13 09:10:54'),
(64, 387, '1', -1.08, 8, 0, '2017-09-13 09:10:54'),
(36, 2923, '3', 2.47645, 15, 1, '2017-09-13 09:10:55'),
(49, 599, '1', 0.0133333, 56, 1, '2017-09-13 09:10:55'),
(31, 1479, '2', -0.75, 22, 0, '2017-09-13 09:10:55'),
(48, 1139, '2', 0.48, 12, 1, '2017-09-13 09:10:55'),
(45, 2891, '1', 2.56905, 16, 1, '2017-09-13 09:10:56'),
(66, 2418, '2', 2.63672, 5, 1, '2017-09-13 09:10:57'),
(57, 1217, '0', 0, 20, -1, '2017-09-13 09:10:57'),
(57, 1281, '0', -0.403333, 20, 0, '2017-09-13 09:10:57'),
(43, 395, '0', -0.0075, 20, 0, '2017-09-13 09:10:59'),
(40, 2153, '4', -0.0277367, 47, 0, '2017-09-13 09:11:00'),
(70, 1329, '3', 2.6, 8, 1, '2017-09-13 09:11:01'),
(45, 2905, '1', 2.87228, 5, 1, '2017-09-13 09:11:01'),
(63, 2284, '3', -0.600416, 21, 0, '2017-09-13 09:11:01'),
(64, 400, '1', -1.08, 8, 0, '2017-09-13 09:11:02'),
(52, 748, '1', -0.525, 33, 0, '2017-09-13 09:11:02'),
(38, 1642, '2', -2.05434, 13, 0, '2017-09-13 09:11:03'),
(33, 1186, '3', 1.2398, 10, 1, '2017-09-13 09:11:04'),
(56, 1294, '3', 0.1875, 18, 1, '2017-09-13 09:11:04'),
(70, 1351, '4', 2.83093, 5, 1, '2017-09-13 09:11:06'),
(40, 2180, '1', -1.53061, 8, 0, '2017-09-13 09:11:08'),
(48, 1109, '2', -0.3675, 13, 0, '2017-09-13 09:11:08'),
(42, 747, '4', -0.333333, 24, 0, '2017-09-13 09:11:09'),
(70, 1352, '3', 2.79651, 6, 1, '2017-09-13 09:11:11'),
(39, 1505, '1', 0.48, 48, 1, '2017-09-13 09:11:12'),
(38, 1648, '4', 2.17046, 10, 1, '2017-09-13 09:11:12'),
(36, 2910, '2', -2.36512, 18, 0, '2017-09-13 09:11:12'),
(33, 1276, '1', 1.5498, 9, 1, '2017-09-13 09:11:13'),
(52, 730, '0', 0, 11, -1, '2017-09-13 09:11:13'),
(43, 1116, '1', -0.1875, 15, 0, '2017-09-13 09:11:14'),
(44, 2170, '0', 0, 25, -1, '2017-09-13 09:11:16'),
(31, 1487, '0', 0, 20, -1, '2017-09-13 09:11:16'),
(66, 372, '0', -0.0075, 20, 0, '2017-09-13 09:11:17'),
(40, 2160, '3', 1.33333, 10, 1, '2017-09-13 09:11:18'),
(69, 1227, '0', -0.00520833, 24, 0, '2017-09-13 09:11:18'),
(38, 1721, '1', -2.67272, 7, 0, '2017-09-13 09:11:20'),
(67, 1510, '3', -0.320636, 35, 0, '2017-09-13 09:11:20'),
(33, 1177, '2', 1.39463, 7, 1, '2017-09-13 09:11:20'),
(45, 2907, '2', -2.47992, 19, 0, '2017-09-13 09:11:21'),
(48, 382, '4', 0.3675, 13, 1, '2017-09-13 09:11:21'),
(51, 602, '2', 0.237305, 46, 1, '2017-09-13 09:11:21'),
(39, 1492, '2', 1.79132, 10, 1, '2017-09-13 09:11:22'),
(57, 1175, '4', 0.143555, 25, 1, '2017-09-13 09:11:23'),
(43, 386, '1', -1.08, 8, 0, '2017-09-13 09:11:23'),
(52, 731, '4', -1.44676, 11, 0, '2017-09-13 09:11:24'),
(64, 3039, '1', 0.75, 13, 1, '2017-09-13 09:11:24'),
(70, 1363, '1', -2.57858, 13, 0, '2017-09-13 09:11:24'),
(66, 1139, '2', 1.2675, 7, 1, '2017-09-13 09:11:25'),
(44, 2176, '2', -1.77515, 12, 0, '2017-09-13 09:11:28'),
(69, 1177, '2', 0.892562, 10, 1, '2017-09-13 09:11:29'),
(68, 1269, '2', -0.8125, 35, 0, '2017-09-13 09:11:29'),
(53, 605, '4', -0.440833, 37, 0, '2017-09-13 09:11:30'),
(40, 2151, '0', 0, 13, -1, '2017-09-13 09:11:31'),
(67, 1509, '3', -1.60207, 14, 0, '2017-09-13 09:11:34'),
(70, 1118, '2', 2.65665, 10, 1, '2017-09-13 09:11:34'),
(48, 1105, '2', 0.27, 14, 1, '2017-09-13 09:11:36'),
(38, 1739, '3', -2.19301, 18, 0, '2017-09-13 09:11:38'),
(52, 725, '1', -1.03806, 14, 0, '2017-09-13 09:11:38'),
(43, 391, '4', -0.12, 16, 0, '2017-09-13 09:11:39'),
(56, 1200, '4', 0.00925926, 34, 1, '2017-09-13 09:11:39'),
(39, 1507, '1', 1.28254, 18, 1, '2017-09-13 09:11:40'),
(31, 1476, '3', 0.808802, 25, 1, '2017-09-13 09:11:41'),
(68, 1220, '2', 1.60714, 13, 1, '2017-09-13 09:11:42'),
(52, 720, '4', 2.26247, 5, 1, '2017-09-13 09:11:43'),
(40, 2145, '2', 0.869823, 12, 1, '2017-09-13 09:11:43'),
(38, 1789, '1', -2.77847, 5, 0, '2017-09-13 09:11:43'),
(69, 1297, '3', 1.61333, 16, 1, '2017-09-13 09:11:44'),
(42, 753, '1', -0.0272109, 38, 0, '2017-09-13 09:11:47'),
(53, 1301, '3', 1.5498, 18, 1, '2017-09-13 09:11:48'),
(36, 2934, '2', 1.62865, 36, 1, '2017-09-13 09:11:48'),
(33, 1185, '0', -0.00382653, 28, 0, '2017-09-13 09:11:49'),
(49, 1089, '4', -0.0208333, 55, 0, '2017-09-13 09:11:49'),
(40, 2161, '3', 1.89187, 7, 1, '2017-09-13 09:11:50'),
(43, 378, '3', -0.48, 12, 0, '2017-09-13 09:11:51'),
(64, 1451, '1', 0.231481, 26, 1, '2017-09-13 09:11:51'),
(48, 386, '1', -0.12, 16, 0, '2017-09-13 09:11:51'),
(38, 1744, '2', 2.74448, 8, 1, '2017-09-13 09:11:51'),
(56, 1219, '3', 0.502066, 13, 1, '2017-09-13 09:11:52'),
(39, 1496, '4', 1.48915, 13, 1, '2017-09-13 09:11:52'),
(68, 1293, '2', 1.625, 11, 1, '2017-09-13 09:11:54'),
(44, 2173, '0', -0.00443787, 26, 0, '2017-09-13 09:11:54'),
(51, 850, '3', 0.563333, 34, 1, '2017-09-13 09:11:55'),
(67, 1511, '3', -1.20333, 22, 0, '2017-09-13 09:11:56'),
(38, 1728, '4', -2.73071, 5, 0, '2017-09-13 09:11:56'),
(63, 2302, '0', -0.000956633, 56, 0, '2017-09-13 09:11:58'),
(45, 2906, '1', -1.85742, 37, 0, '2017-09-13 09:11:58'),
(70, 1355, '2', -2.13414, 24, 0, '2017-09-13 09:11:59'),
(38, 1750, '1', 2.84806, 3, 1, '2017-09-13 09:11:59'),
(31, 1469, '2', 0.9075, 18, 1, '2017-09-13 09:11:59'),
(43, 375, '1', 0.75, 10, 1, '2017-09-13 09:12:00'),
(57, 1269, '3', -0.0638021, 41, 0, '2017-09-13 09:12:03'),
(53, 854, '1', 1.85204, 15, 1, '2017-09-13 09:12:04'),
(70, 1350, '1', 2.79651, 6, 1, '2017-09-13 09:12:05'),
(52, 735, '4', 0.213333, 22, 1, '2017-09-13 09:12:05'),
(45, 2896, '2', -2.79285, 8, 0, '2017-09-13 09:12:06'),
(43, 374, '1', -1.47, 6, 0, '2017-09-13 09:12:07'),
(56, 1220, '0', 0, 15, -1, '2017-09-13 09:12:07'),
(38, 1759, '1', -2.62435, 8, 0, '2017-09-13 09:12:08'),
(36, 2916, '3', -2.21246, 22, 0, '2017-09-13 09:12:10'),
(40, 2156, '2', -1.08, 20, 0, '2017-09-13 09:12:11'),
(70, 1123, '1', -2.80944, 6, 0, '2017-09-13 09:12:11'),
(33, 1203, '3', 0.163333, 23, 1, '2017-09-13 09:12:11'),
(52, 722, '3', 2.08333, 6, 1, '2017-09-13 09:12:12'),
(38, 1740, '3', 2.76819, 5, 1, '2017-09-13 09:12:12'),
(53, 603, '1', 2.05141, 9, 1, '2017-09-13 09:12:13'),
(68, 1175, '4', 1.03125, 21, 1, '2017-09-13 09:12:15'),
(39, 3076, '4', -0.213333, 22, 0, '2017-09-13 09:12:15'),
(70, 1108, '2', -2.81866, 5, 0, '2017-09-13 09:12:16'),
(51, 604, '4', -1.2675, 21, 0, '2017-09-13 09:12:16'),
(52, 741, '4', -2.52632, 6, 0, '2017-09-13 09:12:18'),
(38, 1738, '3', -2.70701, 6, 0, '2017-09-13 09:12:18'),
(57, 1219, '3', 0.396694, 14, 1, '2017-09-13 09:12:18'),
(44, 2169, '4', -0.407202, 24, 0, '2017-09-13 09:12:19'),
(70, 1353, '2', 2.86514, 4, 1, '2017-09-13 09:12:20'),
(36, 2925, '2', -2.58532, 12, 0, '2017-09-13 09:12:22'),
(53, 596, '2', -1.90226, 11, 0, '2017-09-13 09:12:23'),
(69, 1270, '4', 0.0510397, 40, 1, '2017-09-13 09:12:24'),
(33, 1292, '3', -0.963333, 13, 0, '2017-09-13 09:12:25'),
(40, 2181, '3', 2.1675, 15, 1, '2017-09-13 09:12:25'),
(64, 1456, '1', 0.03, 36, 1, '2017-09-13 09:12:26'),
(70, 1359, '1', -2.76188, 7, 0, '2017-09-13 09:12:27'),
(43, 396, '0', -0.0075, 20, 0, '2017-09-13 09:12:27'),
(39, 1502, '4', -1.54395, 13, 0, '2017-09-13 09:12:28'),
(42, 755, '2', -0.0638021, 41, 0, '2017-09-13 09:12:28'),
(31, 1472, '4', -0.1875, 30, 0, '2017-09-13 09:12:29'),
(44, 2167, '3', -1.59505, 13, 0, '2017-09-13 09:12:31'),
(52, 721, '4', -1.2675, 14, 0, '2017-09-13 09:12:32'),
(45, 2890, '2', -2.05434, 26, 0, '2017-09-13 09:12:32'),
(67, 1276, '1', 0.046875, 28, 1, '2017-09-13 09:12:36'),
(68, 1219, '2', 0, 22, 0, '2017-09-13 09:12:36'),
(44, 2162, '3', -2.13574, 5, 0, '2017-09-13 09:12:37'),
(40, 2179, '2', 0.75, 12, 1, '2017-09-13 09:12:38'),
(53, 1124, '3', -1.76333, 14, 0, '2017-09-13 09:12:38'),
(52, 728, '4', -1.99654, 7, 0, '2017-09-13 09:12:38'),
(70, 1304, '2', 2.55445, 12, 1, '2017-09-13 09:12:39'),
(57, 1282, '1', -0.12, 24, 0, '2017-09-13 09:12:42'),
(70, 1344, '4', 2.86514, 4, 1, '2017-09-13 09:12:44'),
(36, 2928, '1', -2.21246, 22, 0, '2017-09-13 09:12:45'),
(43, 370, '4', -0.03, 18, 0, '2017-09-13 09:12:45'),
(67, 1218, '1', -0.75, 10, 0, '2017-09-13 09:12:47'),
(45, 2903, '2', 2.47645, 15, 1, '2017-09-13 09:12:48'),
(39, 1503, '4', -0.886106, 21, 0, '2017-09-13 09:12:48'),
(69, 1210, '0', -0.00520833, 24, 0, '2017-09-13 09:12:49'),
(49, 624, '0', -0.000833333, 60, 0, '2017-09-13 09:12:49'),
(40, 2168, '4', 1.63894, 12, 1, '2017-09-13 09:12:49'),
(64, 1450, '0', 0, 23, -1, '2017-09-13 09:12:50'),
(42, 502, '3', -0.886106, 21, 0, '2017-09-13 09:12:50'),
(51, 854, '1', 0.793469, 34, 1, '2017-09-13 09:12:50'),
(70, 610, '3', -2.66928, 9, 0, '2017-09-13 09:12:53'),
(38, 1734, '1', -1.77353, 36, 0, '2017-09-13 09:12:54'),
(31, 1473, '1', 0.75, 25, 1, '2017-09-13 09:12:54'),
(43, 373, '4', -0.75, 10, 0, '2017-09-13 09:12:55'),
(56, 1269, '0', -0.00130208, 48, 0, '2017-09-13 09:12:56'),
(66, 2435, '2', -0.876923, 92, 0, '2017-09-13 09:12:57'),
(42, 483, '4', -2.04726, 8, 0, '2017-09-13 09:12:58'),
(70, 608, '2', -2.79651, 6, 0, '2017-09-13 09:12:59'),
(45, 2910, '2', -2.58532, 12, 0, '2017-09-13 09:13:00'),
(68, 1268, '1', 1.5625, 23, 1, '2017-09-13 09:13:00'),
(36, 2924, '2', 2.43962, 16, 1, '2017-09-13 09:13:00'),
(52, 729, '2', 0.453704, 22, 1, '2017-09-13 09:13:01'),
(66, 1151, '2', 2.4, 4, 1, '2017-09-13 09:13:01'),
(64, 1463, '1', -1.39463, 14, 0, '2017-09-13 09:13:04'),
(48, 2427, '1', -0.460208, 73, 0, '2017-09-13 09:13:04'),
(69, 1184, '4', 0.421875, 15, 1, '2017-09-13 09:13:04'),
(53, 598, '0', 0, 27, -1, '2017-09-13 09:13:05'),
(38, 1770, '2', 2.61714, 10, 1, '2017-09-13 09:13:05'),
(70, 1345, '1', 2.78394, 7, 1, '2017-09-13 09:13:06'),
(67, 1291, '4', 0.0075, 19, 1, '2017-09-13 09:13:06'),
(39, 1494, '1', -0.916205, 17, 0, '2017-09-13 09:13:06'),
(52, 736, '2', -2.18253, 5, 0, '2017-09-13 09:13:06'),
(64, 3044, '4', -1.88021, 5, 0, '2017-09-13 09:13:08'),
(40, 2177, '1', 0.438581, 21, 1, '2017-09-13 09:13:11'),
(43, 380, '2', -0.1875, 15, 0, '2017-09-13 09:13:11'),
(39, 1498, '1', -2.40755, 5, 0, '2017-09-13 09:13:11'),
(45, 2916, '1', -2.62111, 11, 0, '2017-09-13 09:13:11'),
(31, 1481, '4', -0.991875, 17, 0, '2017-09-13 09:13:11'),
(53, 1311, '4', 2.3232, 6, 1, '2017-09-13 09:13:11'),
(33, 1270, '0', -0.00141777, 46, 0, '2017-09-13 09:13:12'),
(70, 1095, '3', -2.79651, 6, 0, '2017-09-13 09:13:12'),
(57, 1287, '0', 0, 31, -1, '2017-09-13 09:13:14'),
(48, 392, '1', -0.75, 10, 0, '2017-09-13 09:13:14'),
(69, 1190, '4', 0.979592, 12, 1, '2017-09-13 09:13:16'),
(43, 2418, '2', 2.56687, 6, 1, '2017-09-13 09:13:16'),
(64, 2929, '4', 1.33333, 8, 1, '2017-09-13 09:13:17'),
(40, 2178, '1', -1.6875, 7, 0, '2017-09-13 09:13:18'),
(36, 2957, '1', -2.40251, 17, 0, '2017-09-13 09:13:18'),
(33, 1173, '1', -0.9075, 9, 0, '2017-09-13 09:13:20'),
(70, 1346, '4', 2.67874, 10, 1, '2017-09-13 09:13:22'),
(64, 1455, '4', -2.1675, 6, 0, '2017-09-13 09:13:22'),
(52, 732, '2', -0.835648, 17, 0, '2017-09-13 09:13:23'),
(68, 1257, '4', 1.5, 24, 1, '2017-09-13 09:13:25'),
(44, 1270, '1', -0.141777, 36, 0, '2017-09-13 09:13:26'),
(46, 1186, '3', 0.309949, 19, 1, '2017-09-13 09:13:26'),
(45, 2926, '3', 2.43962, 16, 1, '2017-09-13 09:13:27'),
(43, 2413, '2', -2.3255, 11, 0, '2017-09-13 09:13:27'),
(70, 1367, '3', 2.80226, 7, 1, '2017-09-13 09:13:29'),
(53, 853, '2', 1.40083, 19, 1, '2017-09-13 09:13:30'),
(39, 3054, '1', -0.27, 21, 0, '2017-09-13 09:13:31'),
(51, 605, '0', 0, 42, -1, '2017-09-13 09:13:32'),
(52, 485, '1', 1.83743, 10, 1, '2017-09-13 09:13:33'),
(48, 2414, '1', -1.79132, 20, 0, '2017-09-13 09:13:34'),
(45, 2918, '2', -2.72703, 8, 0, '2017-09-13 09:13:35'),
(43, 382, '3', -1.2675, 7, 0, '2017-09-13 09:13:35'),
(36, 2950, '4', -2.28943, 20, 0, '2017-09-13 09:13:37'),
(31, 1491, '1', -0.435374, 26, 0, '2017-09-13 09:13:38'),
(69, 1169, '2', 0.0208333, 22, 1, '2017-09-13 09:13:38'),
(52, 719, '3', 1.94676, 7, 1, '2017-09-13 09:13:40'),
(70, 1348, '2', 2.63577, 12, 1, '2017-09-13 09:13:41'),
(43, 367, '3', 1.47, 6, 1, '2017-09-13 09:13:41'),
(49, 1124, '3', -0.0533333, 52, 0, '2017-09-13 09:13:42'),
(66, 2450, '4', -2.16667, 40, 0, '2017-09-13 09:13:42'),
(45, 2923, '2', -2.76188, 7, 0, '2017-09-13 09:13:42'),
(44, 1184, '4', 0.1875, 18, 1, '2017-09-13 09:13:44'),
(38, 1783, '3', 0.703827, 39, 1, '2017-09-13 09:13:44'),
(33, 1227, '0', -0.00520833, 24, 0, '2017-09-13 09:13:44'),
(56, 1268, '0', -0.00130208, 48, 0, '2017-09-13 09:13:45'),
(70, 618, '3', -2.84411, 4, 0, '2017-09-13 09:13:45'),
(64, 1466, '4', -0.9408, 22, 0, '2017-09-13 09:13:45'),
(45, 2925, '2', -2.89915, 3, 0, '2017-09-13 09:13:45'),
(68, 1200, '2', -1.08333, 23, 0, '2017-09-13 09:13:47'),
(48, 1138, '2', 0.27, 14, 1, '2017-09-13 09:13:48'),
(43, 377, '0', 0, 8, -1, '2017-09-13 09:13:48'),
(69, 1183, '2', 0.75, 11, 1, '2017-09-13 09:13:49'),
(46, 1184, '3', -0.00520833, 23, 0, '2017-09-13 09:13:50'),
(45, 2921, '2', -2.83093, 5, 0, '2017-09-13 09:13:50'),
(40, 2176, '4', -0.443787, 32, 0, '2017-09-13 09:13:50'),
(39, 1506, '2', -1.1532, 19, 0, '2017-09-13 09:13:50'),
(70, 1360, '3', -2.79651, 6, 0, '2017-09-13 09:13:51'),
(36, 2630, '2', 2.3, 14, 1, '2017-09-13 09:13:51'),
(52, 464, '3', 0.998521, 11, 1, '2017-09-13 09:13:51'),
(67, 1270, '0', -0.00141777, 46, 0, '2017-09-13 09:13:52'),
(33, 1197, '1', 1.02083, 10, 1, '2017-09-13 09:13:55'),
(64, 1453, '1', 1.8252, 11, 1, '2017-09-13 09:13:55'),
(68, 1294, '3', 2, 8, 1, '2017-09-13 09:13:56'),
(43, 1121, '1', -1.08, 8, 0, '2017-09-13 09:13:57'),
(57, 1268, '3', -0.0325521, 43, 0, '2017-09-13 09:13:57'),
(70, 1356, '1', 2.79651, 6, 1, '2017-09-13 09:13:58'),
(44, 1291, '1', -0.27, 14, 0, '2017-09-13 09:13:58'),
(48, 1116, '4', 0.75, 10, 1, '2017-09-13 09:13:58'),
(68, 1171, '4', 2.25, 5, 1, '2017-09-13 09:14:00'),
(66, 2444, '2', -2.43, 19, 0, '2017-09-13 09:14:01'),
(36, 2955, '4', -2.65665, 10, 0, '2017-09-13 09:14:02'),
(31, 1483, '3', -0.407202, 24, 0, '2017-09-13 09:14:02'),
(45, 2928, '3', 2.58532, 12, 1, '2017-09-13 09:14:02'),
(51, 609, '2', 0.700833, 31, 1, '2017-09-13 09:14:03'),
(70, 1362, '3', 2.71171, 9, 1, '2017-09-13 09:14:06'),
(46, 1170, '2', 0.1875, 18, 1, '2017-09-13 09:14:08'),
(67, 1169, '2', 0.421875, 15, 1, '2017-09-13 09:14:08'),
(43, 400, '1', -0.48, 12, 0, '2017-09-13 09:14:09'),
(69, 1195, '0', 0, 19, -1, '2017-09-13 09:14:09'),
(36, 2619, '3', 2.6, 8, 1, '2017-09-13 09:14:10'),
(33, 1195, '4', 0.12, 16, 1, '2017-09-13 09:14:10'),
(68, 1176, '4', 2.23459, 10, 1, '2017-09-13 09:14:11'),
(45, 2924, '2', 2.69195, 9, 1, '2017-09-13 09:14:11'),
(53, 597, '1', -0.173868, 41, 0, '2017-09-13 09:14:11'),
(42, 1593, '1', 0.26188, 31, 1, '2017-09-13 09:14:12'),
(56, 1282, '1', -0.00333333, 29, 0, '2017-09-13 09:14:14'),
(66, 2414, '3', 2.17911, 13, 1, '2017-09-13 09:14:15'),
(38, 1792, '2', -1.39821, 30, 0, '2017-09-13 09:14:15'),
(45, 2934, '2', 2.86514, 4, 1, '2017-09-13 09:14:15'),
(70, 1366, '4', 2.62111, 11, 1, '2017-09-13 09:14:17'),
(52, 498, '0', 0, 26, -1, '2017-09-13 09:14:18'),
(33, 1198, '1', -1.2675, 7, 0, '2017-09-13 09:14:18'),
(53, 1303, '1', 2.43, 6, 1, '2017-09-13 09:14:18'),
(51, 1310, '3', -1.51886, 15, 0, '2017-09-13 09:14:18'),
(43, 1120, '4', -0.9075, 9, 0, '2017-09-13 09:14:18'),
(48, 372, '0', -0.0075, 20, 0, '2017-09-13 09:14:19'),
(36, 2937, '4', -2.65665, 10, 0, '2017-09-13 09:14:19'),
(44, 1170, '2', 0.0208333, 22, 1, '2017-09-13 09:14:20'),
(45, 2914, '2', -2.83093, 5, 0, '2017-09-13 09:14:20'),
(67, 1172, '4', 0.3675, 13, 1, '2017-09-13 09:14:21'),
(38, 1788, '1', -2.69195, 6, 0, '2017-09-13 09:14:21'),
(70, 1354, '1', 2.86514, 4, 1, '2017-09-13 09:14:21'),
(39, 1991, '0', -0.0533333, 27, 0, '2017-09-13 09:14:21'),
(64, 3051, '0', -0.00443787, 26, 0, '2017-09-13 09:14:22'),
(31, 1470, '1', 1.08, 20, 1, '2017-09-13 09:14:22'),
(46, 1198, '4', 0.12, 16, 1, '2017-09-13 09:14:24'),
(45, 2911, '2', -2.86514, 4, 0, '2017-09-13 09:14:25'),
(33, 1194, '1', 1.6875, 7, 1, '2017-09-13 09:14:25'),
(42, 1571, '3', 1.60207, 14, 1, '2017-09-13 09:14:26'),
(36, 2632, '3', 2.7, 6, 1, '2017-09-13 09:14:26'),
(70, 1349, '1', 2.83093, 5, 1, '2017-09-13 09:14:27'),
(38, 1790, '3', 2.72434, 7, 1, '2017-09-13 09:14:28'),
(49, 1091, '0', 0, 47, -1, '2017-09-13 09:14:29'),
(66, 2449, '4', -2.58, 14, 0, '2017-09-13 09:14:29'),
(39, 703, '0', -1.50521, 8, 0, '2017-09-13 09:14:29'),
(43, 2404, '0', 0, 11, -1, '2017-09-13 09:14:29'),
(48, 1140, '1', 0.6075, 11, 1, '2017-09-13 09:14:29'),
(53, 1332, '3', 2.35, 13, 1, '2017-09-13 09:14:31'),
(52, 465, '3', -0.963333, 13, 0, '2017-09-13 09:14:31'),
(67, 1216, '3', -0.880208, 11, 0, '2017-09-13 09:14:32'),
(64, 3035, '2', 1.10587, 11, 1, '2017-09-13 09:14:32'),
(70, 1377, '4', 2.80624, 7, 1, '2017-09-13 09:14:33'),
(64, 1458, '2', -2.67593, 2, 0, '2017-09-13 09:14:35'),
(44, 1169, '2', 0.333333, 16, 1, '2017-09-13 09:14:37'),
(36, 2942, '2', 2.58532, 12, 1, '2017-09-13 09:14:38'),
(52, 481, '1', 2.04187, 7, 1, '2017-09-13 09:14:38'),
(67, 1170, '1', -1.50521, 7, 0, '2017-09-13 09:14:39'),
(45, 2931, '4', 2.47645, 15, 1, '2017-09-13 09:14:39'),
(38, 1726, '4', -2.49841, 12, 0, '2017-09-13 09:14:40'),
(57, 1265, '3', -0.0898669, 43, 0, '2017-09-13 09:14:41'),
(70, 1372, '1', -2.78796, 9, 0, '2017-09-13 09:14:43'),
(39, 2008, '1', -0.653333, 16, 0, '2017-09-13 09:14:44'),
(38, 1731, '3', -2.72067, 6, 0, '2017-09-13 09:14:46'),
(33, 1184, '4', 0.046875, 21, 1, '2017-09-13 09:14:46'),
(69, 1261, '4', -0.00207756, 37, 0, '2017-09-13 09:14:47'),
(66, 395, '2', -0.03, 18, 0, '2017-09-13 09:14:47');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(40, 2170, '0', -0.000956633, 56, 0, '2017-09-13 09:14:47'),
(56, 1287, '1', -0.292969, 33, 0, '2017-09-13 09:14:48'),
(48, 398, '0', -0.0075, 20, 0, '2017-09-13 09:14:50'),
(52, 486, '1', 1.33333, 12, 1, '2017-09-13 09:14:50'),
(36, 2940, '3', -2.54929, 13, 0, '2017-09-13 09:14:51'),
(44, 1173, '3', -0.1875, 15, 0, '2017-09-13 09:14:51'),
(45, 2945, '4', 2.58532, 12, 1, '2017-09-13 09:14:52'),
(70, 1376, '3', -2.67565, 9, 0, '2017-09-13 09:14:52'),
(66, 1133, '3', 1.6875, 5, 1, '2017-09-13 09:14:52'),
(64, 1454, '1', -0.75, 18, 0, '2017-09-13 09:14:53'),
(31, 1471, '1', -0.75, 30, 0, '2017-09-13 09:14:53'),
(46, 1203, '0', -0.00333333, 30, 0, '2017-09-13 09:14:54'),
(52, 740, '1', 2.41667, 7, 1, '2017-09-13 09:14:56'),
(39, 680, '3', 0.979592, 12, 1, '2017-09-13 09:14:57'),
(33, 1263, '2', -1.57687, 11, 0, '2017-09-13 09:14:57'),
(70, 617, '3', -2.83093, 5, 0, '2017-09-13 09:14:57'),
(68, 1299, '2', -1.35346, 46, 0, '2017-09-13 09:14:57'),
(45, 2948, '2', -2.79651, 6, 0, '2017-09-13 09:14:58'),
(51, 619, '4', 0.333333, 40, 1, '2017-09-13 09:14:58'),
(48, 365, '1', -0.9075, 9, 0, '2017-09-13 09:14:59'),
(57, 1294, '4', -0.1875, 18, 0, '2017-09-13 09:14:59'),
(53, 1106, '1', -1.6, 28, 0, '2017-09-13 09:14:59'),
(36, 2948, '4', 2.69195, 9, 1, '2017-09-13 09:15:00'),
(66, 401, '3', -1.08, 8, 0, '2017-09-13 09:15:00'),
(67, 1194, '1', 0.1875, 21, 1, '2017-09-13 09:15:01'),
(42, 1575, '2', -0.520833, 35, 0, '2017-09-13 09:15:01'),
(38, 1786, '1', -2.13462, 15, 0, '2017-09-13 09:15:01'),
(40, 2166, '4', 0.835648, 17, 1, '2017-09-13 09:15:05'),
(44, 1186, '3', 0.860969, 13, 1, '2017-09-13 09:15:05'),
(43, 2419, '0', 0, 36, -1, '2017-09-13 09:15:05'),
(52, 499, '1', 2.36842, 8, 1, '2017-09-13 09:15:05'),
(70, 1316, '3', 2.65665, 10, 1, '2017-09-13 09:15:08'),
(53, 1315, '4', 2.53448, 9, 1, '2017-09-13 09:15:08'),
(56, 1284, '0', -0.0075, 20, 0, '2017-09-13 09:15:08'),
(57, 1284, '1', -0.75, 10, 0, '2017-09-13 09:15:09'),
(66, 1122, '4', 0.6075, 11, 1, '2017-09-13 09:15:11'),
(69, 1292, '2', -0.0833333, 25, 0, '2017-09-13 09:15:12'),
(43, 365, '1', -1.2675, 7, 0, '2017-09-13 09:15:12'),
(31, 3008, '1', -0.309949, 19, 0, '2017-09-13 09:15:12'),
(46, 1227, '1', -0.130208, 19, 0, '2017-09-13 09:15:12'),
(36, 2959, '3', 2.513, 14, 1, '2017-09-13 09:15:14'),
(51, 611, '2', -1.3872, 16, 0, '2017-09-13 09:15:14'),
(39, 2031, '1', 0.333333, 20, 1, '2017-09-13 09:15:17'),
(56, 1191, '3', 1.2398, 10, 1, '2017-09-13 09:15:18'),
(70, 1099, '1', -2.66705, 11, 0, '2017-09-13 09:15:18'),
(48, 1107, '4', 0, 20, 1, '2017-09-13 09:15:18'),
(42, 1582, '4', -0.979592, 18, 0, '2017-09-13 09:15:19'),
(44, 1190, '1', -0.646684, 15, 0, '2017-09-13 09:15:20'),
(57, 1191, '3', 1.10587, 11, 1, '2017-09-13 09:15:20'),
(33, 1210, '0', -0.00520833, 24, 0, '2017-09-13 09:15:21'),
(43, 1114, '2', -0.9075, 9, 0, '2017-09-13 09:15:21'),
(38, 1768, '3', 1.83333, 21, 1, '2017-09-13 09:15:22'),
(70, 1347, '3', 2.84996, 4, 1, '2017-09-13 09:15:22'),
(64, 1467, '3', 0.75, 30, 1, '2017-09-13 09:15:23'),
(40, 2172, '2', -0.58391, 19, 0, '2017-09-13 09:15:23'),
(36, 2939, '3', 2.62111, 11, 1, '2017-09-13 09:15:24'),
(68, 1204, '4', 1.72891, 27, 1, '2017-09-13 09:15:25'),
(39, 1888, '3', -1.28254, 9, 0, '2017-09-13 09:15:26'),
(66, 2413, '1', 2.10149, 15, 1, '2017-09-13 09:15:26'),
(64, 1462, '3', -2.29688, 5, 0, '2017-09-13 09:15:27'),
(46, 1291, '4', 0.12, 16, 1, '2017-09-13 09:15:28'),
(67, 1203, '3', 0.0133333, 28, 1, '2017-09-13 09:15:28'),
(49, 622, '0', -0.000833333, 60, 0, '2017-09-13 09:15:29'),
(36, 2952, '2', 2.79651, 6, 1, '2017-09-13 09:15:30'),
(38, 1771, '4', 2.47826, 8, 1, '2017-09-13 09:15:30'),
(56, 1175, '3', -1.05762, 13, 0, '2017-09-13 09:15:31'),
(31, 1486, '3', -0.968492, 19, 0, '2017-09-13 09:15:31'),
(69, 1284, '0', -0.0075, 20, 0, '2017-09-13 09:15:32'),
(51, 403, '4', 1.47, 18, 1, '2017-09-13 09:15:33'),
(70, 1098, '3', -2.62111, 11, 0, '2017-09-13 09:15:33'),
(42, 1597, '2', -1.41797, 15, 0, '2017-09-13 09:15:34'),
(64, 1460, '4', -2.15643, 7, 0, '2017-09-13 09:15:34'),
(33, 1169, '2', 0.421875, 15, 1, '2017-09-13 09:15:36'),
(52, 749, '3', -1.0625, 31, 0, '2017-09-13 09:15:37'),
(67, 1177, '2', 1.04752, 9, 1, '2017-09-13 09:15:38'),
(44, 1195, '2', -0.03, 18, 0, '2017-09-13 09:15:38'),
(43, 384, '2', -0.03, 18, 0, '2017-09-13 09:15:40'),
(33, 1174, '3', 1.9571, 5, 1, '2017-09-13 09:15:41'),
(64, 1449, '4', 2.04187, 7, 1, '2017-09-13 09:15:42'),
(36, 2945, '1', -2.62111, 11, 0, '2017-09-13 09:15:42'),
(70, 1111, '2', 2.71536, 10, 1, '2017-09-13 09:15:43'),
(69, 1294, '3', 0.630208, 13, 1, '2017-09-13 09:15:44'),
(38, 1725, '1', 2.0625, 15, 1, '2017-09-13 09:15:46'),
(42, 1553, '4', 1.73677, 11, 1, '2017-09-13 09:15:46'),
(39, 679, '2', -0.046875, 21, 0, '2017-09-13 09:15:46'),
(52, 476, '2', -2.175, 11, 0, '2017-09-13 09:15:47'),
(66, 2454, '2', 2.54167, 22, 1, '2017-09-13 09:15:49'),
(33, 1218, '1', -1.2675, 7, 0, '2017-09-13 09:15:49'),
(43, 1140, '1', 0.9075, 9, 1, '2017-09-13 09:15:49'),
(53, 1126, '2', 1, 40, 1, '2017-09-13 09:15:49'),
(31, 1482, '3', -0.968492, 19, 0, '2017-09-13 09:15:50'),
(56, 1293, '2', 0.0833333, 20, 1, '2017-09-13 09:15:51'),
(67, 1195, '4', 0.1875, 15, 1, '2017-09-13 09:15:53'),
(51, 613, '4', -1.2675, 21, 0, '2017-09-13 09:15:53'),
(38, 1776, '2', -2.56259, 8, 0, '2017-09-13 09:15:53'),
(43, 2429, '1', -2.78954, 5, 0, '2017-09-13 09:15:54'),
(52, 480, '2', 2.475, 7, 1, '2017-09-13 09:15:54'),
(46, 1263, '3', -0.3675, 26, 0, '2017-09-13 09:15:54'),
(68, 172, '2', 2.42616, 30, 1, '2017-09-13 09:15:55'),
(36, 2962, '3', 2.54929, 13, 1, '2017-09-13 09:15:55'),
(49, 996, '4', -0.6348, 27, 0, '2017-09-13 09:15:56'),
(39, 699, '2', -0.48, 12, 0, '2017-09-13 09:15:58'),
(45, 2955, '0', -0.195743, 60, 0, '2017-09-13 09:15:59'),
(40, 2175, '2', 0.0186981, 35, 1, '2017-09-13 09:15:59'),
(53, 1132, '1', 2.5, 10, 1, '2017-09-13 09:15:59'),
(31, 1488, '2', 1.79132, 10, 1, '2017-09-13 09:16:01'),
(42, 1566, '3', 1.36248, 15, 1, '2017-09-13 09:16:01'),
(67, 1190, '4', 1.53061, 8, 1, '2017-09-13 09:16:01'),
(33, 1170, '2', 0.630208, 13, 1, '2017-09-13 09:16:02'),
(44, 1197, '1', 0, 24, 1, '2017-09-13 09:16:02'),
(40, 2162, '3', -2.13574, 5, 0, '2017-09-13 09:16:03'),
(51, 1303, '1', 1.84083, 13, 1, '2017-09-13 09:16:06'),
(36, 2971, '2', 2.58532, 12, 1, '2017-09-13 09:16:07'),
(38, 1730, '1', -2.22, 13, 0, '2017-09-13 09:16:07'),
(66, 2445, '1', -2.56154, 19, 0, '2017-09-13 09:16:07'),
(46, 1197, '1', 0.520833, 14, 1, '2017-09-13 09:16:08'),
(69, 1202, '3', -0.333333, 24, 0, '2017-09-13 09:16:09'),
(57, 1208, '0', -0.0012, 50, 0, '2017-09-13 09:16:11'),
(67, 1183, '2', 0.892562, 10, 1, '2017-09-13 09:16:11'),
(52, 752, '2', -1.95652, 16, 0, '2017-09-13 09:16:11'),
(53, 1341, '3', -2.4, 12, 0, '2017-09-13 09:16:11'),
(63, 2295, '0', -0.000048, 250, 0, '2017-09-13 09:16:12'),
(39, 2010, '2', -0.853333, 14, 0, '2017-09-13 09:16:12'),
(66, 1149, '1', 1.95, 7, 1, '2017-09-13 09:16:14'),
(70, 623, '1', 2.23827, 32, 1, '2017-09-13 09:16:16'),
(33, 1291, '4', 0.1875, 15, 1, '2017-09-13 09:16:17'),
(43, 2408, '3', 1.6875, 23, 1, '2017-09-13 09:16:17'),
(40, 2173, '1', 0.536982, 15, 1, '2017-09-13 09:16:18'),
(52, 738, '4', -2.29412, 8, 0, '2017-09-13 09:16:19'),
(36, 2966, '2', -2.54929, 13, 0, '2017-09-13 09:16:19'),
(31, 2933, '1', -0.130208, 19, 0, '2017-09-13 09:16:19'),
(38, 1742, '1', 2.45833, 13, 1, '2017-09-13 09:16:20'),
(51, 595, '3', -1.60207, 14, 0, '2017-09-13 09:16:20'),
(39, 712, '3', -1.17188, 9, 0, '2017-09-13 09:16:21'),
(56, 1199, '3', 0.0117188, 30, 1, '2017-09-13 09:16:21'),
(64, 1459, '0', -0.001875, 40, 0, '2017-09-13 09:16:22'),
(49, 1318, '2', 0.804528, 27, 1, '2017-09-13 09:16:22'),
(53, 995, '4', 2.45, 11, 1, '2017-09-13 09:16:23'),
(70, 1389, '3', 2.82843, 6, 1, '2017-09-13 09:16:23'),
(57, 1293, '1', -0.630208, 13, 0, '2017-09-13 09:16:24'),
(33, 1216, '4', 1.50521, 7, 1, '2017-09-13 09:16:24'),
(38, 1735, '4', -2.625, 5, 0, '2017-09-13 09:16:25'),
(31, 1484, '2', -2.20408, 6, 0, '2017-09-13 09:16:26'),
(42, 1586, '1', 0.567108, 26, 1, '2017-09-13 09:16:27'),
(44, 1227, '0', -0.00520833, 24, 0, '2017-09-13 09:16:27'),
(52, 745, '1', -2.4, 8, 0, '2017-09-13 09:16:27'),
(40, 2167, '1', -1.98047, 9, 0, '2017-09-13 09:16:28'),
(43, 1139, '2', 0.6075, 11, 1, '2017-09-13 09:16:28'),
(36, 2981, '4', 2.69195, 9, 1, '2017-09-13 09:16:29'),
(31, 1475, '1', -2.38327, 5, 0, '2017-09-13 09:16:31'),
(57, 1171, '4', 0.9075, 9, 1, '2017-09-13 09:16:33'),
(38, 1649, '3', 2.33333, 8, 1, '2017-09-13 09:16:33'),
(46, 1276, '2', -0.143555, 25, 0, '2017-09-13 09:16:33'),
(49, 1311, '4', 1.8252, 11, 1, '2017-09-13 09:16:34'),
(69, 1200, '2', -0.280093, 25, 0, '2017-09-13 09:16:34'),
(39, 716, '3', 0.75, 13, 1, '2017-09-13 09:16:35'),
(67, 1210, '0', -0.00520833, 24, 0, '2017-09-13 09:16:35'),
(51, 599, '1', 1.61333, 16, 1, '2017-09-13 09:16:36'),
(38, 1782, '1', -2.7, 4, 0, '2017-09-13 09:16:36'),
(43, 366, '4', 0.9075, 9, 1, '2017-09-13 09:16:37'),
(66, 2446, '3', -2.46774, 22, 0, '2017-09-13 09:16:37'),
(36, 2975, '2', 2.76586, 9, 1, '2017-09-13 09:16:38'),
(70, 1385, '3', -2.68328, 16, 0, '2017-09-13 09:16:39'),
(44, 1218, '3', -0.3675, 13, 0, '2017-09-13 09:16:40'),
(33, 1297, '3', 1.54083, 17, 1, '2017-09-13 09:16:41'),
(64, 1464, '2', 0.949219, 21, 1, '2017-09-13 09:16:43'),
(52, 733, '3', 0.991875, 17, 1, '2017-09-13 09:16:43'),
(38, 1752, '1', 2.58, 7, 1, '2017-09-13 09:16:44'),
(31, 1474, '3', -1.43027, 13, 0, '2017-09-13 09:16:44'),
(68, 1209, '0', -0.221042, 50, 0, '2017-09-13 09:16:46'),
(56, 1189, '1', -0.0612245, 24, 0, '2017-09-13 09:16:46'),
(39, 706, '3', -1.08, 12, 0, '2017-09-13 09:16:47'),
(70, 1374, '3', -2.73861, 9, 0, '2017-09-13 09:16:48'),
(68, 1188, '1', 2.55445, 6, 1, '2017-09-13 09:16:52'),
(44, 1196, '4', 0.630208, 13, 1, '2017-09-13 09:16:53'),
(64, 1457, '3', -1.57687, 11, 0, '2017-09-13 09:16:53'),
(36, 2973, '3', 2.53969, 17, 1, '2017-09-13 09:16:54'),
(48, 2419, '2', 0.12, 96, 1, '2017-09-13 09:16:55'),
(66, 2455, '4', -2.46, 18, 0, '2017-09-13 09:16:55'),
(46, 1177, '0', -0.00619835, 22, 0, '2017-09-13 09:16:55'),
(42, 1592, '3', -0.800833, 29, 0, '2017-09-13 09:16:56'),
(43, 1115, '1', 0.0075, 19, 1, '2017-09-13 09:16:57'),
(52, 734, '2', 0.963333, 13, 1, '2017-09-13 09:16:57'),
(70, 1093, '2', 2.61714, 10, 1, '2017-09-13 09:16:57'),
(63, 2294, '0', -0.00141777, 46, 0, '2017-09-13 09:16:58'),
(39, 659, '3', 0.3675, 13, 1, '2017-09-13 09:16:59'),
(45, 2939, '0', -0.195743, 60, 0, '2017-09-13 09:17:00'),
(67, 1227, '0', -0.00520833, 24, 0, '2017-09-13 09:17:00'),
(33, 1175, '4', 0.495117, 19, 1, '2017-09-13 09:17:00'),
(48, 2418, '2', 2.56687, 6, 1, '2017-09-13 09:17:00'),
(36, 2969, '1', -2.84605, 6, 0, '2017-09-13 09:17:01'),
(64, 1452, '1', -2.04187, 7, 0, '2017-09-13 09:17:01'),
(57, 1202, '1', 0.148148, 28, 1, '2017-09-13 09:17:01'),
(43, 376, '1', -1.47, 6, 0, '2017-09-13 09:17:02'),
(66, 377, '4', -1.08, 8, 0, '2017-09-13 09:17:03'),
(51, 996, '4', -0.5808, 28, 0, '2017-09-13 09:17:04'),
(53, 1090, '4', -0.95, 41, 0, '2017-09-13 09:17:04'),
(31, 1485, '3', -1.0662, 21, 0, '2017-09-13 09:17:06'),
(56, 1281, '1', -0.333333, 20, 0, '2017-09-13 09:17:06'),
(40, 2174, '0', -0.00207756, 38, 0, '2017-09-13 09:17:06'),
(39, 2011, '3', -1.76333, 7, 0, '2017-09-13 09:17:07'),
(64, 3004, '3', 1.92, 6, 1, '2017-09-13 09:17:07'),
(70, 1097, '3', -2.73861, 10, 0, '2017-09-13 09:17:08'),
(33, 1171, '4', 1.08, 8, 1, '2017-09-13 09:17:08'),
(44, 1183, '2', 0.303719, 15, 1, '2017-09-13 09:17:09'),
(63, 2304, '2', -1.6875, 13, 0, '2017-09-13 09:17:11'),
(38, 1767, '3', -1.3125, 27, 0, '2017-09-13 09:17:12'),
(67, 1186, '3', 0.979592, 12, 1, '2017-09-13 09:17:12'),
(64, 1465, '3', -1.85204, 6, 0, '2017-09-13 09:17:13'),
(52, 487, '4', 1.08, 16, 1, '2017-09-13 09:17:13'),
(66, 402, '3', 0.6075, 11, 1, '2017-09-13 09:17:15'),
(45, 2959, '2', -2.47645, 15, 0, '2017-09-13 09:17:15'),
(42, 1578, '1', 1.03355, 19, 1, '2017-09-13 09:17:16'),
(43, 2416, '3', 2.12138, 14, 1, '2017-09-13 09:17:17'),
(53, 1322, '4', -2.39062, 13, 0, '2017-09-13 09:17:17'),
(36, 2977, '3', -2.50998, 18, 0, '2017-09-13 09:17:18'),
(33, 1265, '0', 0, 10, -1, '2017-09-13 09:17:18'),
(38, 1743, '2', -2.54348, 7, 0, '2017-09-13 09:17:19'),
(39, 713, '3', 0.869823, 12, 1, '2017-09-13 09:17:19'),
(64, 1461, '3', 2.26843, 6, 1, '2017-09-13 09:17:19'),
(31, 1477, '2', -1.64609, 14, 0, '2017-09-13 09:17:19'),
(43, 402, '3', 2.1675, 3, 1, '2017-09-13 09:17:20'),
(48, 1121, '0', -0.0075, 20, 0, '2017-09-13 09:17:20'),
(66, 392, '3', 1.2675, 7, 1, '2017-09-13 09:17:22'),
(69, 1208, '3', -0.0108, 47, 0, '2017-09-13 09:17:22'),
(70, 1373, '4', -2.54477, 14, 0, '2017-09-13 09:17:22'),
(49, 1308, '4', -0.100833, 49, 0, '2017-09-13 09:17:22'),
(45, 2957, '1', -2.72703, 8, 0, '2017-09-13 09:17:22'),
(38, 1785, '0', 0, 5, -1, '2017-09-13 09:17:23'),
(64, 1468, '3', -2.1675, 6, 0, '2017-09-13 09:17:25'),
(31, 1478, '3', -2.29688, 5, 0, '2017-09-13 09:17:25'),
(46, 1292, '0', -0.00333333, 30, 0, '2017-09-13 09:17:25'),
(36, 2964, '2', -2.81957, 7, 0, '2017-09-13 09:17:26'),
(52, 757, '2', 2.15217, 13, 1, '2017-09-13 09:17:26'),
(33, 1219, '3', 1.90909, 8, 1, '2017-09-13 09:17:27'),
(64, 3000, '3', 2.52083, 2, 1, '2017-09-13 09:17:27'),
(67, 1197, '3', -0.333333, 16, 0, '2017-09-13 09:17:28'),
(48, 2413, '2', -2.56085, 7, 0, '2017-09-13 09:17:28'),
(45, 2937, '4', -2.75, 5, 0, '2017-09-13 09:17:28'),
(44, 1185, '3', -0.244898, 20, 0, '2017-09-13 09:17:29'),
(64, 1474, '3', -2.58673, 3, 0, '2017-09-13 09:17:30'),
(39, 1996, '3', 1.20333, 11, 1, '2017-09-13 09:17:30'),
(70, 1119, '2', -2.72703, 8, 0, '2017-09-13 09:17:30'),
(53, 1335, '2', 2.30357, 13, 1, '2017-09-13 09:17:30'),
(38, 1724, '1', -2.54348, 7, 0, '2017-09-13 09:17:31'),
(57, 1199, '3', 0, 32, 1, '2017-09-13 09:17:33'),
(57, 1257, '0', -0.376302, 32, 0, '2017-09-13 09:17:33'),
(40, 2169, '1', 0.251385, 27, 1, '2017-09-13 09:17:33'),
(66, 1112, '4', 0.48, 12, 1, '2017-09-13 09:17:33'),
(45, 2940, '1', -2.7, 6, 0, '2017-09-13 09:17:34'),
(36, 2979, '2', -2.69195, 9, 0, '2017-09-13 09:17:35'),
(42, 1616, '3', -1.03355, 19, 0, '2017-09-13 09:17:35'),
(68, 1250, '0', 0, 44, -1, '2017-09-13 09:17:36'),
(70, 1087, '4', -2.74448, 7, 0, '2017-09-13 09:17:36'),
(39, 663, '1', 1.6875, 7, 1, '2017-09-13 09:17:36'),
(38, 1760, '2', 2.45455, 8, 1, '2017-09-13 09:17:38'),
(64, 2933, '3', -1.02083, 10, 0, '2017-09-13 09:17:40'),
(70, 1128, '4', -2.88117, 4, 0, '2017-09-13 09:17:41'),
(40, 2171, '2', 1.33333, 8, 1, '2017-09-13 09:17:41'),
(46, 1173, '2', 0.03, 18, 1, '2017-09-13 09:17:43'),
(51, 607, '1', -0.244898, 40, 0, '2017-09-13 09:17:44'),
(64, 1472, '3', 2.29688, 5, 1, '2017-09-13 09:17:45'),
(66, 1131, '1', 0.48, 12, 1, '2017-09-13 09:17:46'),
(48, 378, '1', 0.0075, 19, 1, '2017-09-13 09:17:46'),
(33, 1202, '3', -1.33333, 20, 0, '2017-09-13 09:17:46'),
(53, 1333, '2', 2.2, 16, 1, '2017-09-13 09:17:47'),
(45, 2950, '2', 2.35, 13, 1, '2017-09-13 09:17:47'),
(38, 1766, '3', 2.45455, 8, 1, '2017-09-13 09:17:47'),
(69, 1268, '1', 0.630208, 26, 1, '2017-09-13 09:17:48'),
(43, 2410, '2', 1.2398, 30, 1, '2017-09-13 09:17:50'),
(40, 2163, '3', -1.6875, 9, 0, '2017-09-13 09:17:50'),
(64, 1475, '3', -2.26843, 6, 0, '2017-09-13 09:17:51'),
(70, 1390, '4', -2.58532, 10, 0, '2017-09-13 09:17:51'),
(45, 2952, '2', 2.8, 4, 1, '2017-09-13 09:17:51'),
(52, 756, '2', 1.4375, 25, 1, '2017-09-13 09:17:52'),
(64, 1486, '3', -2.60486, 3, 0, '2017-09-13 09:17:53'),
(38, 1723, '4', 2.5, 8, 1, '2017-09-13 09:17:55'),
(66, 1105, '2', 0.75, 10, 1, '2017-09-13 09:17:55'),
(70, 1371, '3', 2.83093, 5, 1, '2017-09-13 09:17:56'),
(33, 1189, '1', -2.03571, 9, 0, '2017-09-13 09:17:56'),
(43, 369, '2', 1.47, 6, 1, '2017-09-13 09:17:56'),
(39, 690, '0', -0.0075, 20, 0, '2017-09-13 09:17:56'),
(57, 1289, '3', -0.541875, 23, 0, '2017-09-13 09:17:57'),
(69, 1191, '3', 1.38138, 9, 1, '2017-09-13 09:17:57'),
(44, 1194, '0', -0.00382653, 28, 0, '2017-09-13 09:17:57'),
(40, 2165, '2', 2.08333, 7, 1, '2017-09-13 09:17:58'),
(52, 746, '2', -2.41667, 7, 0, '2017-09-13 09:17:59'),
(56, 1265, '0', -0.00110947, 52, 0, '2017-09-13 09:17:59'),
(38, 1761, '3', 2.76819, 5, 1, '2017-09-13 09:18:00'),
(70, 1129, '2', -2.87366, 4, 0, '2017-09-13 09:18:00'),
(46, 1172, '4', 0.03, 18, 1, '2017-09-13 09:18:01'),
(66, 2442, '2', -2.775, 6, 0, '2017-09-13 09:18:01'),
(67, 1263, '1', 0.091875, 33, 1, '2017-09-13 09:18:02'),
(38, 1778, '0', 0, 3, -1, '2017-09-13 09:18:03'),
(51, 1308, '3', 1.40083, 19, 1, '2017-09-13 09:18:03'),
(45, 2942, '4', -2.3, 14, 0, '2017-09-13 09:18:05'),
(49, 605, '3', -0.240833, 43, 0, '2017-09-13 09:18:06'),
(38, 1774, '3', -2.74448, 5, 0, '2017-09-13 09:18:07'),
(40, 2164, '2', 1.7415, 10, 1, '2017-09-13 09:18:08'),
(52, 743, '4', 2.16667, 10, 1, '2017-09-13 09:18:09'),
(44, 1174, '3', 0.75, 13, 1, '2017-09-13 09:18:10'),
(42, 1589, '0', 0, 35, -1, '2017-09-13 09:18:10'),
(51, 596, '2', -2.27263, 7, 0, '2017-09-13 09:18:10'),
(70, 1368, '4', -2.67874, 10, 0, '2017-09-13 09:18:10'),
(31, 731, '3', -0.0208333, 33, 0, '2017-09-13 09:18:10'),
(64, 17, '1', 0.9075, 9, 1, '2017-09-13 09:18:11'),
(38, 1754, '0', 0, 4, -1, '2017-09-13 09:18:12'),
(53, 1328, '3', 1.7, 26, 1, '2017-09-13 09:18:12'),
(39, 2033, '1', -0.55102, 16, 0, '2017-09-13 09:18:12'),
(46, 1218, '0', 0, 13, -1, '2017-09-13 09:18:14'),
(70, 1333, '2', 2.75, 5, 1, '2017-09-13 09:18:15'),
(66, 2420, '3', 2.24251, 13, 1, '2017-09-13 09:18:15'),
(45, 2979, '1', 2.5, 10, 1, '2017-09-13 09:18:16'),
(48, 2431, '1', -1.36248, 30, 0, '2017-09-13 09:18:17'),
(49, 615, '2', 1.92, 12, 1, '2017-09-13 09:18:18'),
(52, 739, '1', 2.16667, 10, 1, '2017-09-13 09:18:18'),
(36, 1452, '2', 0.3675, 26, 1, '2017-09-13 09:18:19'),
(70, 1369, '3', -2.87753, 4, 0, '2017-09-13 09:18:19'),
(38, 1784, '0', 0, 8, -1, '2017-09-13 09:18:20'),
(45, 2969, '1', -2.75, 5, 0, '2017-09-13 09:18:21'),
(66, 1142, '4', 1.95, 7, 1, '2017-09-13 09:18:21'),
(63, 2297, '0', -0.000612245, 70, 0, '2017-09-13 09:18:22'),
(68, 1206, '1', -1.13703, 46, 0, '2017-09-13 09:18:23'),
(40, 2185, '1', 1.2513, 17, 1, '2017-09-13 09:18:25'),
(67, 1185, '4', 0.0956633, 23, 1, '2017-09-13 09:18:25'),
(48, 1131, '1', 0.9075, 9, 1, '2017-09-13 09:18:25'),
(64, 7, '3', -0.1875, 15, 0, '2017-09-13 09:18:26'),
(66, 1143, '1', 2.4, 4, 1, '2017-09-13 09:18:26'),
(57, 1206, '3', -0.700833, 31, 0, '2017-09-13 09:18:28'),
(38, 1775, '2', -2.43962, 8, 0, '2017-09-13 09:18:28'),
(70, 1341, '3', -2.55, 9, 0, '2017-09-13 09:18:28'),
(69, 1269, '0', 0, 31, -1, '2017-09-13 09:18:28'),
(45, 2977, '1', -2.6, 8, 0, '2017-09-13 09:18:29'),
(44, 1297, '3', 1.40083, 19, 1, '2017-09-13 09:18:29'),
(31, 466, '1', -0.333333, 20, 0, '2017-09-13 09:18:31'),
(33, 1208, '0', 0, 36, -1, '2017-09-13 09:18:32'),
(43, 2411, '2', -1.32124, 37, 0, '2017-09-13 09:18:33'),
(36, 1463, '2', 1.3032, 15, 1, '2017-09-13 09:18:34'),
(48, 370, '1', -0.9075, 9, 0, '2017-09-13 09:18:34'),
(45, 2971, '3', -2.7, 6, 0, '2017-09-13 09:18:35'),
(64, 88, '1', 0.75, 10, 1, '2017-09-13 09:18:35'),
(67, 1174, '3', 0.998521, 11, 1, '2017-09-13 09:18:35'),
(70, 1312, '3', -2.68182, 7, 0, '2017-09-13 09:18:35'),
(52, 483, '1', -1.8913, 17, 0, '2017-09-13 09:18:36'),
(38, 1746, '1', 2.38636, 9, 1, '2017-09-13 09:18:37'),
(39, 1985, '3', -0.1875, 24, 0, '2017-09-13 09:18:37'),
(42, 1563, '1', -0.75, 26, 0, '2017-09-13 09:18:37'),
(45, 2975, '2', 2.8, 4, 1, '2017-09-13 09:18:39'),
(40, 2193, '4', -1.19668, 14, 0, '2017-09-13 09:18:39'),
(69, 1189, '3', 0.979592, 12, 1, '2017-09-13 09:18:40'),
(64, 6, '2', 1.2675, 7, 1, '2017-09-13 09:18:42'),
(70, 1327, '3', 2.58, 7, 1, '2017-09-13 09:18:43'),
(57, 1204, '1', -1.33333, 16, 0, '2017-09-13 09:18:43'),
(44, 1276, '1', 0.65918, 17, 1, '2017-09-13 09:18:46'),
(66, 1154, '0', -0.15, 20, 0, '2017-09-13 09:18:47'),
(56, 1257, '0', -0.00130208, 48, 0, '2017-09-13 09:18:48'),
(38, 1748, '1', 2.50031, 11, 1, '2017-09-13 09:18:48'),
(39, 676, '1', -1.10587, 11, 0, '2017-09-13 09:18:48'),
(64, 3, '3', 1.47, 6, 1, '2017-09-13 09:18:48'),
(33, 1293, '2', 0.333333, 16, 1, '2017-09-13 09:18:48'),
(52, 750, '2', 2.15217, 13, 1, '2017-09-13 09:18:50'),
(48, 1130, '1', -0.12, 16, 0, '2017-09-13 09:18:50'),
(66, 1156, '1', 2.25, 5, 1, '2017-09-13 09:18:51'),
(45, 2964, '2', -2.4, 12, 0, '2017-09-13 09:18:51'),
(67, 1297, '3', 1.61333, 16, 1, '2017-09-13 09:18:51'),
(31, 735, '2', -0.213333, 22, 0, '2017-09-13 09:18:52'),
(36, 1455, '2', -0.826875, 19, 0, '2017-09-13 09:18:53'),
(43, 388, '4', 0, 20, 0, '2017-09-13 09:18:53'),
(70, 1103, '1', -2.54167, 11, 0, '2017-09-13 09:18:54'),
(38, 1749, '3', -2.70074, 7, 0, '2017-09-13 09:18:55'),
(49, 1310, '4', 0.217456, 38, 1, '2017-09-13 09:18:55'),
(33, 1191, '3', 1.6875, 7, 1, '2017-09-13 09:18:56'),
(45, 2966, '2', -2.7, 6, 0, '2017-09-13 09:18:56'),
(57, 1298, '1', 1.84083, 13, 1, '2017-09-13 09:18:57'),
(66, 1157, '1', 1.95, 7, 1, '2017-09-13 09:18:58'),
(64, 1, '4', 0.6075, 11, 1, '2017-09-13 09:19:00'),
(31, 494, '3', 1.76333, 7, 1, '2017-09-13 09:19:00'),
(42, 1591, '2', -0.988683, 23, 0, '2017-09-13 09:19:00'),
(44, 1216, '3', -0.520833, 14, 0, '2017-09-13 09:19:01'),
(48, 367, '3', 0.75, 10, 1, '2017-09-13 09:19:01'),
(67, 1173, '4', -0.75, 10, 0, '2017-09-13 09:19:02'),
(70, 1113, '1', 2.59091, 9, 1, '2017-09-13 09:19:02'),
(43, 1105, '2', 0.6075, 11, 1, '2017-09-13 09:19:04'),
(45, 2603, '1', 2.04187, 7, 1, '2017-09-13 09:19:04'),
(39, 658, '1', -0.0675, 17, 0, '2017-09-13 09:19:05'),
(43, 2432, '2', -2.8919, 2, 0, '2017-09-13 09:19:07'),
(69, 1287, '4', -0.630208, 26, 0, '2017-09-13 09:19:07'),
(48, 2403, '2', 2.55148, 7, 1, '2017-09-13 09:19:07'),
(64, 4, '4', 1.08, 8, 1, '2017-09-13 09:19:07'),
(36, 1459, '3', -1.17188, 15, 0, '2017-09-13 09:19:08'),
(56, 1217, '0', -0.0075, 20, 0, '2017-09-13 09:19:08'),
(51, 624, '0', -0.000833333, 60, 0, '2017-09-13 09:19:10'),
(67, 1196, '4', 1.33333, 8, 1, '2017-09-13 09:19:10'),
(31, 728, '0', 0, 11, -1, '2017-09-13 09:19:11'),
(44, 1177, '4', -0.892562, 10, 0, '2017-09-13 09:19:11'),
(48, 2400, '3', 2.66694, 4, 1, '2017-09-13 09:19:11'),
(52, 744, '4', -1.275, 23, 0, '2017-09-13 09:19:12'),
(38, 1773, '3', -2.30408, 17, 0, '2017-09-13 09:19:12'),
(46, 1297, '3', 0.000833333, 59, 1, '2017-09-13 09:19:13'),
(40, 2186, '3', -0.453704, 33, 0, '2017-09-13 09:19:13'),
(63, 2299, '0', -0.0012, 50, 0, '2017-09-13 09:19:13'),
(43, 2406, '1', -2.54171, 7, 0, '2017-09-13 09:19:14'),
(70, 1326, '1', 2.43103, 11, 1, '2017-09-13 09:19:14'),
(68, 173, '4', 1.81351, 53, 1, '2017-09-13 09:19:16'),
(49, 594, '3', 1.0092, 21, 1, '2017-09-13 09:19:16'),
(70, 1331, '2', 2.55, 6, 1, '2017-09-13 09:19:20'),
(52, 502, '2', 2.54348, 7, 1, '2017-09-13 09:19:20'),
(64, 14, '1', 0.27, 14, 1, '2017-09-13 09:19:21'),
(69, 1257, '4', 1.41797, 15, 1, '2017-09-13 09:19:22'),
(38, 1756, '1', 2.375, 10, 1, '2017-09-13 09:19:23'),
(39, 2013, '2', 0.48, 18, 1, '2017-09-13 09:19:23'),
(52, 753, '1', -2.71429, 4, 0, '2017-09-13 09:19:23'),
(53, 623, '1', 1.02599, 72, 1, '2017-09-13 09:19:25'),
(70, 1379, '3', 2.80944, 6, 1, '2017-09-13 09:19:26'),
(33, 1199, '2', -0.1875, 30, 0, '2017-09-13 09:19:26'),
(44, 1292, '3', -0.653333, 16, 0, '2017-09-13 09:19:26'),
(38, 1757, '1', 2.77847, 5, 1, '2017-09-13 09:19:28'),
(39, 2042, '2', -1.83105, 7, 0, '2017-09-13 09:19:30'),
(33, 1268, '0', 0, 4, -1, '2017-09-13 09:19:30'),
(67, 1184, '4', 0.046875, 21, 1, '2017-09-13 09:19:31'),
(48, 2408, '3', 1.78674, 21, 1, '2017-09-13 09:19:32'),
(31, 481, '4', -0.676875, 21, 0, '2017-09-13 09:19:32'),
(46, 1195, '0', -0.0075, 20, 0, '2017-09-13 09:19:33'),
(36, 3051, '0', -0.00443787, 26, 0, '2017-09-13 09:19:34'),
(38, 1762, '2', 2.69195, 6, 1, '2017-09-13 09:19:34'),
(43, 394, '0', -0.0075, 20, 0, '2017-09-13 09:19:34'),
(56, 1202, '1', 0.1875, 27, 1, '2017-09-13 09:19:35'),
(40, 2183, '1', 0.693417, 27, 1, '2017-09-13 09:19:40'),
(70, 621, '2', 2.68021, 14, 1, '2017-09-13 09:19:40'),
(68, 1283, '0', -0.360562, 24, 0, '2017-09-13 09:19:40'),
(43, 368, '3', 1.2675, 7, 1, '2017-09-13 09:19:41'),
(66, 2456, '2', -2.03077, 42, 0, '2017-09-13 09:19:41'),
(64, 18, '0', -0.0075, 20, 0, '2017-09-13 09:19:41'),
(36, 3039, '1', 1.28254, 9, 1, '2017-09-13 09:19:43'),
(67, 1198, '4', 0.3675, 13, 1, '2017-09-13 09:19:44'),
(49, 600, '3', 0.697385, 29, 1, '2017-09-13 09:19:46'),
(31, 486, '1', 0.835648, 17, 1, '2017-09-13 09:19:49'),
(70, 1383, '3', -2.74448, 9, 0, '2017-09-13 09:19:49'),
(39, 2034, '3', -0.27, 21, 0, '2017-09-13 09:19:51'),
(44, 1263, '2', -0.48, 24, 0, '2017-09-13 09:19:51'),
(42, 1574, '1', 0.0344388, 50, 1, '2017-09-13 09:19:51'),
(64, 5, '3', 0.75, 10, 1, '2017-09-13 09:19:51'),
(48, 2456, '3', -2.56154, 19, 0, '2017-09-13 09:19:52'),
(57, 1229, '0', -0.00102881, 54, 0, '2017-09-13 09:19:52'),
(69, 1282, '2', 0, 30, 0, '2017-09-13 09:19:52'),
(66, 2443, '4', 2.6413, 11, 1, '2017-09-13 09:19:52'),
(52, 755, '4', -1.1875, 29, 0, '2017-09-13 09:19:53'),
(46, 1169, '2', 0.0833333, 20, 1, '2017-09-13 09:19:53'),
(51, 593, '1', 0.240833, 43, 1, '2017-09-13 09:19:53'),
(38, 1751, '2', -2.23459, 20, 0, '2017-09-13 09:19:54'),
(36, 1454, '2', 1.44676, 11, 1, '2017-09-13 09:19:54'),
(68, 1296, '2', 1.67358, 14, 1, '2017-09-13 09:19:54'),
(64, 19, '3', -1.92, 4, 0, '2017-09-13 09:19:55'),
(40, 2188, '4', -1.51886, 15, 0, '2017-09-13 09:19:56'),
(67, 1292, '4', -1.08, 12, 0, '2017-09-13 09:19:56'),
(33, 1282, '2', -0.4, 26, 0, '2017-09-13 09:19:57'),
(69, 1265, '2', 2.34763, 6, 1, '2017-09-13 09:19:58'),
(36, 3044, '3', 2.08333, 4, 1, '2017-09-13 09:19:58'),
(52, 742, '1', 2.55, 6, 1, '2017-09-13 09:19:59'),
(64, 12, '2', -1.92, 4, 0, '2017-09-13 09:20:00'),
(31, 724, '1', 1.20333, 11, 1, '2017-09-13 09:20:00'),
(53, 617, '4', -1.67358, 35, 0, '2017-09-13 09:20:01'),
(43, 383, '0', -0.0075, 20, 0, '2017-09-13 09:20:01'),
(48, 377, '3', -0.6075, 11, 0, '2017-09-13 09:20:02'),
(52, 474, '3', -2.625, 5, 0, '2017-09-13 09:20:03'),
(51, 614, '3', 1.90226, 11, 1, '2017-09-13 09:20:04'),
(33, 1220, '3', -2.14286, 8, 0, '2017-09-13 09:20:04'),
(66, 1150, '3', -1.05, 13, 0, '2017-09-13 09:20:05'),
(64, 13, '2', -1.47, 6, 0, '2017-09-13 09:20:05'),
(43, 387, '3', -1.6875, 5, 0, '2017-09-13 09:20:06'),
(48, 1104, '3', 1.92, 4, 1, '2017-09-13 09:20:07'),
(38, 1765, '1', -2.28943, 14, 0, '2017-09-13 09:20:08'),
(64, 9, '2', 1.92, 4, 1, '2017-09-13 09:20:09'),
(43, 398, '3', -2.1675, 3, 0, '2017-09-13 09:20:09'),
(52, 754, '4', 2.5, 7, 1, '2017-09-13 09:20:11'),
(42, 1596, '3', -1.0662, 21, 0, '2017-09-13 09:20:12'),
(70, 1384, '3', -2.32942, 24, 0, '2017-09-13 09:20:13'),
(43, 389, '3', -1.6875, 5, 0, '2017-09-13 09:20:14'),
(36, 1465, '1', 0.382653, 18, 1, '2017-09-13 09:20:16'),
(31, 732, '3', -0.925926, 16, 0, '2017-09-13 09:20:16'),
(68, 1295, '4', 0.572357, 22, 1, '2017-09-13 09:20:17'),
(38, 1753, '4', 2.57552, 9, 1, '2017-09-13 09:20:17'),
(66, 1147, '4', 1.2, 12, 1, '2017-09-13 09:20:17'),
(53, 1350, '1', 2.36512, 18, 1, '2017-09-13 09:20:19'),
(70, 1386, '3', 2.83093, 6, 1, '2017-09-13 09:20:19'),
(63, 2307, '0', -0.000688705, 66, 0, '2017-09-13 09:20:20'),
(64, 11, '1', 0.6075, 11, 1, '2017-09-13 09:20:20'),
(69, 1219, '0', -0.136364, 22, 0, '2017-09-13 09:20:21'),
(43, 1136, '3', -1.2675, 7, 0, '2017-09-13 09:20:21'),
(40, 2198, '2', -0.3675, 26, 0, '2017-09-13 09:20:21'),
(56, 1208, '2', -0.0048, 48, 0, '2017-09-13 09:20:23'),
(49, 607, '1', -0.309949, 38, 0, '2017-09-13 09:20:23'),
(57, 1275, '1', -0.497942, 32, 0, '2017-09-13 09:20:24'),
(43, 1130, '1', -1.6875, 5, 0, '2017-09-13 09:20:26'),
(70, 1378, '3', -2.78169, 6, 0, '2017-09-13 09:20:26'),
(48, 381, '0', -0.0075, 20, 0, '2017-09-13 09:20:27'),
(42, 1590, '0', 0, 15, -1, '2017-09-13 09:20:27'),
(36, 1462, '1', 1.47, 12, 1, '2017-09-13 09:20:28'),
(31, 727, '1', -1.33333, 12, 0, '2017-09-13 09:20:28'),
(44, 1261, '3', 0.00207756, 37, 1, '2017-09-13 09:20:29'),
(46, 1261, '2', -0.00831025, 36, 0, '2017-09-13 09:20:29'),
(52, 475, '4', 1.76087, 19, 1, '2017-09-13 09:20:30'),
(64, 2, '3', 0.75, 10, 1, '2017-09-13 09:20:30'),
(39, 1925, '1', 0.0247934, 40, 1, '2017-09-13 09:20:31'),
(51, 1301, '3', 1.00269, 27, 1, '2017-09-13 09:20:31'),
(42, 1559, '4', 2.38327, 5, 1, '2017-09-13 09:20:32'),
(33, 1287, '4', -0.470052, 29, 0, '2017-09-13 09:20:34'),
(70, 1102, '2', -2.72703, 8, 0, '2017-09-13 09:20:34'),
(38, 1732, '3', 2.35707, 17, 1, '2017-09-13 09:20:35'),
(67, 1261, '0', -0.00207756, 38, 0, '2017-09-13 09:20:35'),
(53, 1316, '2', -2.43962, 16, 0, '2017-09-13 09:20:36'),
(52, 482, '4', 2.57143, 6, 1, '2017-09-13 09:20:36'),
(40, 2200, '3', -1.21488, 16, 0, '2017-09-13 09:20:37'),
(31, 725, '1', -1.62197, 9, 0, '2017-09-13 09:20:37'),
(63, 2291, '2', 1.11153, 18, 1, '2017-09-13 09:20:38'),
(70, 1335, '2', 2.73214, 5, 1, '2017-09-13 09:20:39'),
(66, 2448, '2', 2.25, 23, 1, '2017-09-13 09:20:40'),
(43, 1137, '4', -0.27, 14, 0, '2017-09-13 09:20:40'),
(39, 1930, '1', -1.90226, 11, 0, '2017-09-13 09:20:41'),
(33, 1294, '3', 1.33333, 8, 1, '2017-09-13 09:20:42'),
(57, 1188, '4', -0.244898, 20, 0, '2017-09-13 09:20:43'),
(44, 1172, '3', -0.1875, 15, 0, '2017-09-13 09:20:44'),
(56, 1283, '4', 0.0208333, 22, 1, '2017-09-13 09:20:46'),
(64, 16, '3', -0.12, 16, 0, '2017-09-13 09:20:46'),
(48, 387, '4', 0, 20, 1, '2017-09-13 09:20:46'),
(40, 2197, '3', -1.28254, 9, 0, '2017-09-13 09:20:47'),
(52, 492, '1', -2.4211, 11, 0, '2017-09-13 09:20:48'),
(70, 1388, '1', 2.66928, 9, 1, '2017-09-13 09:20:48'),
(49, 601, '4', 0.919324, 25, 1, '2017-09-13 09:20:48'),
(36, 1464, '2', 0.949219, 21, 1, '2017-09-13 09:20:49'),
(38, 1736, '1', -2.43698, 15, 0, '2017-09-13 09:20:50'),
(69, 1175, '4', 0.28125, 29, 1, '2017-09-13 09:20:50'),
(46, 1190, '1', -0.1875, 21, 0, '2017-09-13 09:20:50'),
(53, 618, '3', -2.34776, 16, 0, '2017-09-13 09:20:52'),
(44, 1198, '2', -0.75, 10, 0, '2017-09-13 09:20:54'),
(36, 3004, '2', -2.08333, 5, 0, '2017-09-13 09:20:54'),
(67, 1219, '4', -0.0557851, 19, 0, '2017-09-13 09:20:55'),
(39, 1912, '1', -0.646684, 15, 0, '2017-09-13 09:20:56'),
(64, 10, '3', -0.6075, 11, 0, '2017-09-13 09:20:57'),
(48, 400, '1', -0.6075, 11, 0, '2017-09-13 09:20:57'),
(40, 2202, '2', -1.08, 12, 0, '2017-09-13 09:20:58'),
(38, 1804, '4', -2.55445, 9, 0, '2017-09-13 09:20:59'),
(43, 1186, '3', 1.38138, 9, 1, '2017-09-13 09:21:02'),
(52, 751, '2', 1.97727, 15, 1, '2017-09-13 09:21:02'),
(36, 1461, '3', 1.83743, 10, 1, '2017-09-13 09:21:04'),
(67, 1189, '1', -1.2398, 10, 0, '2017-09-13 09:21:04'),
(33, 1281, '2', -0.0833333, 25, 0, '2017-09-13 09:21:07'),
(31, 726, '1', 0.0648789, 29, 1, '2017-09-13 09:21:07'),
(66, 2653, '3', -2.39104, 30, 0, '2017-09-13 09:21:11'),
(36, 3035, '2', 1.6875, 7, 1, '2017-09-13 09:21:11'),
(39, 1922, '3', 0.75, 15, 1, '2017-09-13 09:21:12'),
(69, 1293, '4', -0.25, 22, 0, '2017-09-13 09:21:12'),
(70, 1382, '2', -2.20136, 26, 0, '2017-09-13 09:21:14'),
(46, 1194, '0', 0, 24, -1, '2017-09-13 09:21:15'),
(52, 759, '4', -2.45246, 12, 0, '2017-09-13 09:21:15'),
(46, 1185, '0', 0, 0, -1, '2017-09-13 09:21:15'),
(68, 171, '1', 1.30681, 57, 1, '2017-09-13 09:21:15'),
(64, 8, '2', 0.03, 18, 1, '2017-09-13 09:21:15'),
(48, 395, '2', -0.03, 18, 0, '2017-09-13 09:21:16'),
(42, 1595, '1', -0.1875, 45, 0, '2017-09-13 09:21:17'),
(44, 1210, '0', -0.00520833, 24, 0, '2017-09-13 09:21:18'),
(31, 736, '1', 1.37284, 11, 1, '2017-09-13 09:21:18'),
(69, 1171, '4', 1.35, 11, 1, '2017-09-13 09:21:23'),
(53, 1320, '1', -1.08, 32, 0, '2017-09-13 09:21:24'),
(39, 1921, '1', -0.963333, 13, 0, '2017-09-13 09:21:25'),
(63, 2290, '0', -0.00130208, 48, 0, '2017-09-13 09:21:26'),
(66, 1144, '3', 0.6, 16, 1, '2017-09-13 09:21:26'),
(42, 3034, '0', 0, 9, -1, '2017-09-13 09:21:27'),
(36, 1466, '0', 0, 16, -1, '2017-09-13 09:21:27'),
(33, 1269, '3', -0.949219, 21, 0, '2017-09-13 09:21:28'),
(70, 1127, '3', -2.47645, 16, 0, '2017-09-13 09:21:30'),
(51, 1317, '0', -0.000833333, 60, 0, '2017-09-13 09:21:31'),
(69, 1217, '4', -1.5, 10, 0, '2017-09-13 09:21:34'),
(40, 2199, '1', 0.520833, 35, 1, '2017-09-13 09:21:34'),
(67, 1208, '1', 0.48, 30, 1, '2017-09-13 09:21:34'),
(53, 1334, '2', -2.45, 11, 0, '2017-09-13 09:21:35'),
(70, 1324, '1', -2.77273, 5, 0, '2017-09-13 09:21:35'),
(64, 33, '0', -0.0075, 20, 0, '2017-09-13 09:21:35'),
(48, 1136, '0', -0.0075, 20, 0, '2017-09-13 09:21:36'),
(31, 465, '3', -0.48, 18, 0, '2017-09-13 09:21:36'),
(66, 1148, '3', -1.5, 10, 0, '2017-09-13 09:21:37'),
(57, 1286, '3', -0.0408333, 53, 0, '2017-09-13 09:21:37'),
(39, 1911, '3', 1.05762, 13, 1, '2017-09-13 09:21:38'),
(52, 479, '1', -1.43478, 24, 0, '2017-09-13 09:21:38'),
(43, 1270, '0', 0, 38, -1, '2017-09-13 09:21:40'),
(38, 1810, '3', 0.831175, 41, 1, '2017-09-13 09:21:41'),
(31, 718, '1', 1.92, 6, 1, '2017-09-13 09:21:42'),
(70, 1315, '4', 2.63793, 7, 1, '2017-09-13 09:21:42'),
(40, 2190, '2', 1.94093, 9, 1, '2017-09-13 09:21:43'),
(44, 1203, '2', -0.0533333, 26, 0, '2017-09-13 09:21:44'),
(51, 600, '3', 1.76881, 13, 1, '2017-09-13 09:21:45'),
(36, 1456, '1', 0.75, 20, 1, '2017-09-13 09:21:47'),
(49, 853, '3', -0.000833333, 59, 0, '2017-09-13 09:21:47'),
(38, 1806, '2', -2.55445, 9, 0, '2017-09-13 09:21:49'),
(66, 1146, '1', 1.2, 12, 1, '2017-09-13 09:21:49'),
(70, 1337, '2', -2.625, 8, 0, '2017-09-13 09:21:50'),
(48, 1153, '2', 0.12, 16, 1, '2017-09-13 09:21:51'),
(31, 490, '3', -1.44676, 11, 0, '2017-09-13 09:21:53'),
(52, 477, '3', -2.02174, 15, 0, '2017-09-13 09:21:53'),
(33, 1200, '2', -0.231481, 26, 0, '2017-09-13 09:21:54'),
(68, 1229, '0', 0, 40, -1, '2017-09-13 09:21:55'),
(64, 24, '0', -0.0075, 20, 0, '2017-09-13 09:21:55'),
(39, 1920, '3', -0.495117, 19, 0, '2017-09-13 09:21:56'),
(42, 1594, '4', 0.421875, 30, 1, '2017-09-13 09:21:57'),
(46, 1270, '3', -0.0127599, 43, 0, '2017-09-13 09:21:57'),
(57, 1296, '3', -0.130208, 19, 0, '2017-09-13 09:21:57'),
(69, 1281, '1', -0.7, 23, 0, '2017-09-13 09:21:57'),
(52, 774, '1', 2.6875, 5, 1, '2017-09-13 09:21:59'),
(48, 1151, '2', 0.9075, 9, 1, '2017-09-13 09:22:00'),
(44, 1287, '2', -1.33333, 16, 0, '2017-09-13 09:22:00'),
(38, 1794, '4', -2.21739, 12, 0, '2017-09-13 09:22:01'),
(66, 1153, '1', -1.05, 13, 0, '2017-09-13 09:22:02'),
(33, 1284, '1', -0.75, 10, 0, '2017-09-13 09:22:04'),
(36, 1467, '3', 1.47, 18, 1, '2017-09-13 09:22:05'),
(44, 1191, '3', 1.85204, 6, 1, '2017-09-13 09:22:06'),
(39, 689, '3', -1.20333, 11, 0, '2017-09-13 09:22:07'),
(43, 1185, '0', -0.00382653, 28, 0, '2017-09-13 09:22:08'),
(70, 1338, '2', 1.92857, 20, 1, '2017-09-13 09:22:11'),
(64, 25, '3', -0.12, 16, 0, '2017-09-13 09:22:11'),
(52, 470, '4', 2.1, 12, 1, '2017-09-13 09:22:11'),
(68, 1275, '1', -2.28943, 18, 0, '2017-09-13 09:22:13'),
(44, 1293, '1', -1.50521, 7, 0, '2017-09-13 09:22:14'),
(57, 1295, '0', 0, 18, -1, '2017-09-13 09:22:14'),
(43, 1198, '0', 0, 7, -1, '2017-09-13 09:22:15'),
(70, 1096, '4', -2.65, 7, 0, '2017-09-13 09:22:17'),
(40, 2192, '4', -0.563333, 34, 0, '2017-09-13 09:22:18'),
(39, 1909, '3', -1.29199, 11, 0, '2017-09-13 09:22:19'),
(69, 1199, '3', 0.84375, 23, 1, '2017-09-13 09:22:20'),
(46, 1210, '0', -0.00520833, 24, 0, '2017-09-13 09:22:21'),
(66, 2438, '3', 2.56154, 19, 1, '2017-09-13 09:22:21'),
(70, 1339, '2', 2.8, 4, 1, '2017-09-13 09:22:22'),
(52, 763, '1', -2.28261, 11, 0, '2017-09-13 09:22:22'),
(48, 1634, '3', 0.333333, 16, 1, '2017-09-13 09:22:25'),
(31, 737, '3', -0.12, 32, 0, '2017-09-13 09:22:25'),
(53, 1337, '3', 0.609375, 51, 1, '2017-09-13 09:22:27'),
(67, 1265, '0', -0.00110947, 52, 0, '2017-09-13 09:22:27'),
(63, 2292, '0', -0.000833333, 60, 0, '2017-09-13 09:22:27'),
(56, 173, '0', -0.0003, 100, 0, '2017-09-13 09:22:28'),
(56, 1250, '4', -1.40083, 101, 0, '2017-09-13 09:22:28'),
(64, 29, '4', 0.0675, 17, 1, '2017-09-13 09:22:28'),
(70, 1106, '1', -2.55, 9, 0, '2017-09-13 09:22:30'),
(31, 722, '3', 2.08333, 6, 1, '2017-09-13 09:22:31'),
(52, 761, '3', 2.41304, 9, 1, '2017-09-13 09:22:31'),
(38, 1801, '3', -1.5, 32, 0, '2017-09-13 09:22:34'),
(48, 1633, '2', 1.28254, 9, 1, '2017-09-13 09:22:34'),
(40, 2196, '3', 1.61333, 16, 1, '2017-09-13 09:22:34'),
(36, 1475, '1', -1.1087, 29, 0, '2017-09-13 09:22:34'),
(70, 1322, '1', -2.8125, 4, 0, '2017-09-13 09:22:34'),
(67, 1171, '4', 0.9075, 9, 1, '2017-09-13 09:22:36'),
(63, 2296, '3', 2.13122, 11, 1, '2017-09-13 09:22:39'),
(69, 1220, '4', -0.964286, 19, 0, '2017-09-13 09:22:39'),
(33, 1257, '4', 0.255208, 34, 1, '2017-09-13 09:22:39'),
(70, 1307, '1', -2.82353, 4, 0, '2017-09-13 09:22:39'),
(70, 596, '4', -2.57202, 4, 0, '2017-09-13 09:22:43'),
(44, 1208, '2', -0.5292, 29, 0, '2017-09-13 09:22:43'),
(51, 1091, '0', -0.000833333, 60, 0, '2017-09-13 09:22:45'),
(42, 1608, '1', -0.00998521, 49, 0, '2017-09-13 09:22:47'),
(46, 1174, '0', -0.00443787, 26, 0, '2017-09-13 09:22:47'),
(33, 1217, '4', -0.9075, 9, 0, '2017-09-13 09:22:47'),
(49, 852, '0', -0.000833333, 60, 0, '2017-09-13 09:22:48'),
(64, 39, '0', -0.0075, 20, 0, '2017-09-13 09:22:48'),
(66, 2644, '3', -2.56872, 27, 0, '2017-09-13 09:22:48'),
(36, 1460, '3', -1.27599, 16, 0, '2017-09-13 09:22:50'),
(56, 1296, '1', -0.0208333, 22, 0, '2017-09-13 09:22:50'),
(48, 1632, '2', -0.653333, 16, 0, '2017-09-13 09:22:51'),
(68, 1264, '0', 0, 38, -1, '2017-09-13 09:22:52'),
(43, 1261, '0', -0.00207756, 38, 0, '2017-09-13 09:22:53'),
(70, 615, '2', 1.92, 12, 1, '2017-09-13 09:22:54'),
(53, 1327, '3', 1.32, 28, 1, '2017-09-13 09:22:55'),
(52, 471, '2', 0.6, 24, 1, '2017-09-13 09:22:56'),
(67, 1282, '1', -0.27, 21, 0, '2017-09-13 09:22:57'),
(36, 2929, '2', -1.50521, 7, 0, '2017-09-13 09:22:58'),
(51, 1311, '4', 1.5552, 14, 1, '2017-09-13 09:22:59'),
(70, 613, '3', -2.61333, 4, 0, '2017-09-13 09:22:59'),
(69, 1206, '3', -2, 20, 0, '2017-09-13 09:23:00'),
(40, 2184, '2', 1.01145, 26, 1, '2017-09-13 09:23:00'),
(44, 1265, '3', -1.20821, 19, 0, '2017-09-13 09:23:02'),
(31, 730, '1', -0.0833333, 30, 0, '2017-09-13 09:23:02'),
(64, 20, '2', 0.12, 16, 1, '2017-09-13 09:23:05'),
(57, 1209, '2', 0, 50, 1, '2017-09-13 09:23:05'),
(36, 1457, '4', 1.92, 8, 1, '2017-09-13 09:23:05'),
(33, 172, '3', -2.09851, 18, 0, '2017-09-13 09:23:06'),
(38, 1797, '2', -1.09615, 33, 0, '2017-09-13 09:23:07'),
(46, 1183, '2', 0.0247934, 20, 1, '2017-09-13 09:23:08'),
(64, 28, '2', 1.47, 6, 1, '2017-09-13 09:23:11'),
(53, 1321, '3', 2.15625, 18, 1, '2017-09-13 09:23:13'),
(70, 614, '3', 1.56481, 15, 1, '2017-09-13 09:23:14'),
(43, 1183, '2', 0.00619835, 21, 1, '2017-09-13 09:23:14'),
(38, 1814, '4', 2.36842, 8, 1, '2017-09-13 09:23:15'),
(66, 2453, '4', 2.40441, 27, 1, '2017-09-13 09:23:16'),
(36, 1449, '1', -1.57687, 11, 0, '2017-09-13 09:23:16'),
(48, 1635, '2', -0.03, 27, 0, '2017-09-13 09:23:17'),
(44, 1294, '3', 0.421875, 15, 1, '2017-09-13 09:23:17'),
(31, 472, '3', -1.17188, 15, 0, '2017-09-13 09:23:18'),
(52, 777, '2', 1.94427, 22, 1, '2017-09-13 09:23:18'),
(46, 1216, '4', 0.880208, 11, 1, '2017-09-13 09:23:19'),
(64, 37, '2', -0.6075, 11, 0, '2017-09-13 09:23:21'),
(69, 1204, '4', 0.880208, 22, 1, '2017-09-13 09:23:21'),
(53, 1113, '2', -2.63636, 8, 0, '2017-09-13 09:23:22'),
(40, 2182, '1', -0.438581, 21, 0, '2017-09-13 09:23:22'),
(33, 1298, '1', 1.61333, 16, 1, '2017-09-13 09:23:22'),
(70, 624, '3', -2.1675, 9, 0, '2017-09-13 09:23:24'),
(63, 2300, '0', -0.00141777, 46, 0, '2017-09-13 09:23:25'),
(66, 1167, '2', 1.88988, 10, 1, '2017-09-13 09:23:26'),
(51, 1324, '3', 1.04752, 27, 1, '2017-09-13 09:23:26'),
(36, 1458, '0', 0, 11, -1, '2017-09-13 09:23:27'),
(31, 734, '2', 1.20333, 11, 1, '2017-09-13 09:23:28'),
(52, 766, '2', -2.45017, 11, 0, '2017-09-13 09:23:29'),
(68, 1289, '2', 0.64633, 36, 1, '2017-09-13 09:23:29'),
(70, 609, '2', 2.34083, 7, 1, '2017-09-13 09:23:31'),
(43, 1184, '4', 0.333333, 16, 1, '2017-09-13 09:23:31'),
(66, 1159, '1', 2.36512, 6, 1, '2017-09-13 09:23:32'),
(64, 38, '3', -0.3675, 13, 0, '2017-09-13 09:23:34'),
(49, 597, '1', -0.0257202, 49, 0, '2017-09-13 09:23:36'),
(52, 764, '1', -2.25, 9, 0, '2017-09-13 09:23:38'),
(70, 1311, '4', 2.1168, 8, 1, '2017-09-13 09:23:38'),
(67, 1269, '1', 0.0638021, 41, 1, '2017-09-13 09:23:39'),
(36, 1450, '4', 1.22454, 13, 1, '2017-09-13 09:23:40'),
(64, 32, '3', 1.47, 6, 1, '2017-09-13 09:23:40'),
(33, 171, '2', -1.74422, 19, 0, '2017-09-13 09:23:41'),
(46, 1196, '0', -0.00520833, 24, 0, '2017-09-13 09:23:43'),
(48, 1641, '3', 0.0153061, 26, 1, '2017-09-13 09:23:44'),
(31, 464, '1', -0.536982, 15, 0, '2017-09-13 09:23:44'),
(56, 1275, '0', -0.00102881, 54, 0, '2017-09-13 09:23:45'),
(52, 491, '1', -2.36842, 8, 0, '2017-09-13 09:23:46'),
(64, 31, '3', -1.6875, 5, 0, '2017-09-13 09:23:46'),
(42, 1606, '1', -0.000833333, 59, 0, '2017-09-13 09:23:46'),
(63, 2298, '4', -1.17188, 21, 0, '2017-09-13 09:23:46'),
(53, 1096, '4', -1.75, 25, 0, '2017-09-13 09:23:46'),
(33, 1296, '3', -1.6875, 6, 0, '2017-09-13 09:23:47'),
(70, 1306, '4', 2.34, 11, 1, '2017-09-13 09:23:49'),
(67, 1284, '3', 0.6075, 11, 1, '2017-09-13 09:23:50'),
(63, 2305, '4', 2.26843, 6, 1, '2017-09-13 09:23:53'),
(38, 1808, '2', -1.26562, 37, 0, '2017-09-13 09:23:53'),
(52, 770, '1', -2.5, 8, 0, '2017-09-13 09:23:55'),
(69, 1275, '1', -0.411523, 34, 0, '2017-09-13 09:23:56'),
(44, 1269, '2', -0.105469, 39, 0, '2017-09-13 09:23:56'),
(64, 34, '2', 0.6075, 11, 1, '2017-09-13 09:23:57'),
(31, 485, '1', 1.54395, 13, 1, '2017-09-13 09:23:57'),
(43, 1276, '2', -0.105469, 26, 0, '2017-09-13 09:23:57'),
(52, 767, '1', 2.8125, 3, 1, '2017-09-13 09:23:57'),
(36, 1453, '1', 1.3068, 17, 1, '2017-09-13 09:23:57'),
(67, 1293, '2', 1.50521, 7, 1, '2017-09-13 09:23:58'),
(70, 1300, '3', 2.57812, 9, 1, '2017-09-13 09:23:58'),
(40, 2189, '2', -0.276467, 39, 0, '2017-09-13 09:24:01'),
(46, 1219, '1', -0.0557851, 19, 0, '2017-09-13 09:24:01'),
(44, 1171, '4', 1.47, 6, 1, '2017-09-13 09:24:03'),
(70, 1370, '1', -2.67857, 6, 0, '2017-09-13 09:24:05'),
(69, 1188, '4', -1.10587, 11, 0, '2017-09-13 09:24:07'),
(43, 1291, '4', 0.6075, 11, 1, '2017-09-13 09:24:08'),
(51, 995, '0', 0, 44, -1, '2017-09-13 09:24:10'),
(66, 2661, '2', 2.53438, 38, 1, '2017-09-13 09:24:10'),
(46, 1217, '3', 0.9075, 9, 1, '2017-09-13 09:24:11'),
(48, 1700, '1', 0.5808, 28, 1, '2017-09-13 09:24:11'),
(57, 1299, '0', -0.000688705, 66, 0, '2017-09-13 09:24:12'),
(52, 776, '1', -2.02174, 15, 0, '2017-09-13 09:24:12'),
(64, 23, '1', 0.12, 16, 1, '2017-09-13 09:24:12'),
(70, 1381, '4', 2.52, 8, 1, '2017-09-13 09:24:13'),
(68, 1286, '4', 1.13703, 46, 1, '2017-09-13 09:24:15'),
(31, 498, '0', 0, 18, -1, '2017-09-13 09:24:15'),
(42, 1613, '1', -0.800833, 29, 0, '2017-09-13 09:24:15'),
(52, 760, '1', -2.775, 3, 0, '2017-09-13 09:24:16'),
(67, 1199, '3', 0.292969, 22, 1, '2017-09-13 09:24:19'),
(43, 1169, '2', 0.75, 12, 1, '2017-09-13 09:24:20'),
(36, 1451, '1', 0.391204, 23, 1, '2017-09-13 09:24:20'),
(49, 593, '1', 0.1875, 45, 1, '2017-09-13 09:24:21'),
(48, 1662, '1', 1.10587, 11, 1, '2017-09-13 09:24:22'),
(44, 1217, '2', 0, 20, 0, '2017-09-13 09:24:23'),
(46, 1171, '2', -0.27, 14, 0, '2017-09-13 09:24:24'),
(52, 488, '3', 2.25, 9, 1, '2017-09-13 09:24:24'),
(42, 1598, '1', 2.05141, 9, 1, '2017-09-13 09:24:25'),
(70, 620, '2', 2.625, 15, 1, '2017-09-13 09:24:27'),
(66, 1165, '4', 0.846932, 17, 1, '2017-09-13 09:24:28'),
(53, 1092, '4', -0.85, 43, 0, '2017-09-13 09:24:31'),
(64, 30, '0', -0.0075, 20, 0, '2017-09-13 09:24:32'),
(43, 1197, '0', 0, 12, -1, '2017-09-13 09:24:33'),
(48, 1657, '4', 0.48, 12, 1, '2017-09-13 09:24:34'),
(31, 721, '4', -0.75, 20, 0, '2017-09-13 09:24:35'),
(66, 1163, '1', 2.25111, 7, 1, '2017-09-13 09:24:35'),
(38, 1812, '1', -0.26087, 42, 0, '2017-09-13 09:24:35'),
(36, 1471, '1', -2.25, 15, 0, '2017-09-13 09:24:35'),
(44, 1282, '3', 0.75, 15, 1, '2017-09-13 09:24:38'),
(64, 35, '1', -1.47, 6, 0, '2017-09-13 09:24:39'),
(63, 2303, '0', -0.0652174, 46, 0, '2017-09-13 09:24:39'),
(67, 1202, '1', 0.520833, 21, 1, '2017-09-13 09:24:40'),
(33, 1250, '4', -0.0408333, 53, 0, '2017-09-13 09:24:41'),
(36, 1470, '1', 2.2188, 7, 1, '2017-09-13 09:24:42'),
(64, 36, '1', -1.92, 4, 0, '2017-09-13 09:24:42'),
(43, 1196, '4', 1.02083, 10, 1, '2017-09-13 09:24:42'),
(69, 172, '2', 1.32124, 37, 1, '2017-09-13 09:24:45'),
(70, 1387, '1', -2.22857, 18, 0, '2017-09-13 09:24:46'),
(57, 1250, '4', -0.6075, 33, 0, '2017-09-13 09:24:46'),
(68, 1298, '1', 1.84765, 31, 1, '2017-09-13 09:24:46'),
(56, 1206, '3', 0, 60, 0, '2017-09-13 09:24:46'),
(52, 762, '1', -1.425, 21, 0, '2017-09-13 09:24:46'),
(56, 1229, '0', -0.0257202, 60, 0, '2017-09-13 09:24:46'),
(66, 2639, '1', -2.74448, 12, 0, '2017-09-13 09:24:47'),
(36, 1476, '0', 0, 11, -1, '2017-09-13 09:24:54'),
(70, 1380, '2', -2.64706, 8, 0, '2017-09-13 09:24:54'),
(68, 1187, '1', -2.47645, 8, 0, '2017-09-13 09:24:55'),
(43, 1177, '4', -0.502066, 13, 0, '2017-09-13 09:24:55'),
(67, 1294, '3', 0.421875, 15, 1, '2017-09-13 09:24:55'),
(49, 613, '0', 0, 34, -1, '2017-09-13 09:24:56'),
(38, 1796, '1', -2, 20, 0, '2017-09-13 09:24:56'),
(53, 1331, '2', 1.05, 26, 1, '2017-09-13 09:24:57'),
(31, 719, '3', 0.391204, 23, 1, '2017-09-13 09:24:58'),
(38, 1800, '1', 2.65909, 5, 1, '2017-09-13 09:25:01'),
(48, 1644, '3', 0.00382653, 27, 1, '2017-09-13 09:25:01'),
(70, 1375, '1', -2.625, 8, 0, '2017-09-13 09:25:02'),
(64, 40, '0', -0.0075, 20, 0, '2017-09-13 09:25:02'),
(43, 1292, '4', -1.61333, 8, 0, '2017-09-13 09:25:03'),
(36, 1482, '2', -2.18182, 12, 0, '2017-09-13 09:25:05'),
(46, 1269, '1', 0.0638021, 41, 1, '2017-09-13 09:25:05'),
(40, 2191, '1', 0, 66, 0, '2017-09-13 09:25:08'),
(31, 723, '1', 1.44676, 11, 1, '2017-09-13 09:25:09'),
(52, 772, '1', -1.5625, 23, 0, '2017-09-13 09:25:09'),
(42, 1611, '4', 0.00141777, 45, 1, '2017-09-13 09:25:10'),
(70, 1396, '1', 2.57143, 8, 1, '2017-09-13 09:25:10'),
(70, 1392, '3', -2.82, 3, 0, '2017-09-13 09:25:13'),
(64, 21, '3', -0.6075, 11, 0, '2017-09-13 09:25:14'),
(53, 1343, '4', 1.92, 18, 1, '2017-09-13 09:25:14'),
(51, 1312, '0', -0.000688705, 66, 0, '2017-09-13 09:25:16'),
(36, 1486, '3', -1.6875, 11, 0, '2017-09-13 09:25:17'),
(44, 1257, '3', -0.0833333, 40, 0, '2017-09-13 09:25:18'),
(33, 1275, '1', -0.263374, 38, 0, '2017-09-13 09:25:19'),
(31, 729, '0', 0, 10, -1, '2017-09-13 09:25:19'),
(52, 489, '4', -1.6875, 10, 0, '2017-09-13 09:25:19'),
(70, 1101, '1', 2.67188, 7, 1, '2017-09-13 09:25:20'),
(66, 2657, '3', 2.39995, 33, 1, '2017-09-13 09:25:21'),
(53, 1313, '2', 2.61111, 7, 1, '2017-09-13 09:25:21'),
(38, 1818, '2', -0.9, 21, 0, '2017-09-13 09:25:22'),
(36, 3002, '2', -1.60207, 7, 0, '2017-09-13 09:25:23'),
(48, 1660, '3', -0.0399408, 23, 0, '2017-09-13 09:25:25'),
(57, 172, '2', 1.24983, 39, 1, '2017-09-13 09:25:25'),
(33, 1289, '3', -2.1675, 6, 0, '2017-09-13 09:25:26'),
(63, 2289, '0', -0.0652174, 46, 0, '2017-09-13 09:25:26'),
(70, 1403, '3', -2.67857, 6, 0, '2017-09-13 09:25:26'),
(43, 1227, '0', -0.00520833, 24, 0, '2017-09-13 09:25:27'),
(49, 602, '2', 0.65918, 34, 1, '2017-09-13 09:25:30'),
(52, 758, '4', 1.29848, 13, 1, '2017-09-13 09:25:32'),
(51, 1332, '3', 1.54083, 17, 1, '2017-09-13 09:25:34'),
(64, 22, '0', -0.0075, 20, 0, '2017-09-13 09:25:34'),
(70, 1399, '2', 2.6, 8, 1, '2017-09-13 09:25:35'),
(49, 403, '4', 2.43, 6, 1, '2017-09-13 09:25:35'),
(33, 1295, '3', -0.880208, 11, 0, '2017-09-13 09:25:36'),
(48, 1674, '1', 1.77515, 12, 1, '2017-09-13 09:25:36'),
(56, 1299, '3', 0.154959, 51, 1, '2017-09-13 09:25:38'),
(66, 2662, '4', 2.63446, 17, 1, '2017-09-13 09:25:38'),
(46, 1202, '1', 0.0208333, 33, 1, '2017-09-13 09:25:39'),
(36, 1484, '2', -1.14966, 16, 0, '2017-09-13 09:25:39'),
(64, 26, '4', 1.6875, 5, 1, '2017-09-13 09:25:40'),
(43, 1195, '4', 0.48, 12, 1, '2017-09-13 09:25:40'),
(63, 2301, '1', 2.16, 14, 1, '2017-09-13 09:25:40'),
(44, 1202, '3', -0.391204, 23, 0, '2017-09-13 09:25:42'),
(70, 1094, '4', -2.55, 9, 0, '2017-09-13 09:25:44'),
(67, 1287, '0', -0.00130208, 48, 0, '2017-09-13 09:25:44'),
(51, 1343, '3', -1.7328, 12, 0, '2017-09-13 09:25:45'),
(48, 1646, '2', 1.28254, 9, 1, '2017-09-13 09:25:46'),
(31, 509, '2', -0.148148, 28, 0, '2017-09-13 09:25:47'),
(40, 2194, '4', -0.105469, 39, 0, '2017-09-13 09:25:47'),
(70, 1394, '3', 2.76562, 5, 1, '2017-09-13 09:25:49'),
(64, 42, '2', 0.3675, 13, 1, '2017-09-13 09:25:52'),
(53, 1338, '2', 1.39286, 30, 1, '2017-09-13 09:25:52'),
(40, 2195, '4', -2.29688, 6, 0, '2017-09-13 09:25:53'),
(68, 1288, '2', 0.672188, 59, 1, '2017-09-13 09:25:54'),
(52, 771, '1', 0.816635, 22, 1, '2017-09-13 09:25:54'),
(69, 171, '1', 0.046875, 70, 1, '2017-09-13 09:25:55'),
(36, 1469, '2', 1.08, 16, 1, '2017-09-13 09:25:56'),
(70, 1401, '4', 2.68182, 7, 1, '2017-09-13 09:25:56'),
(57, 1187, '0', -0.00292969, 32, 0, '2017-09-13 09:25:57'),
(31, 720, '4', 1.62881, 10, 1, '2017-09-13 09:25:58'),
(66, 2643, '4', -2.6228, 23, 0, '2017-09-13 09:26:01'),
(43, 1210, '1', 0.046875, 21, 1, '2017-09-13 09:26:01'),
(53, 1307, '1', -2.60294, 9, 0, '2017-09-13 09:26:02'),
(70, 1402, '1', -2.69118, 7, 0, '2017-09-13 09:26:03'),
(33, 1209, '2', 0.5808, 28, 1, '2017-09-13 09:26:05'),
(46, 1282, '2', -0.03, 27, 0, '2017-09-13 09:26:05'),
(67, 1268, '0', 0, 20, -1, '2017-09-13 09:26:05'),
(42, 1601, '0', -0.000956633, 56, 0, '2017-09-13 09:26:07'),
(36, 1488, '2', 1.48915, 13, 1, '2017-09-13 09:26:08'),
(52, 765, '3', -1.875, 15, 0, '2017-09-13 09:26:09'),
(48, 1663, '1', 0.12, 24, 1, '2017-09-13 09:26:10'),
(44, 1199, '2', -0.046875, 28, 0, '2017-09-13 09:26:10'),
(69, 1296, '1', -0.130208, 19, 0, '2017-09-13 09:26:14'),
(51, 1132, '1', 0.800833, 29, 1, '2017-09-13 09:26:14'),
(66, 2640, '2', 2.68736, 14, 1, '2017-09-13 09:26:15'),
(70, 1407, '1', 2.67273, 12, 1, '2017-09-13 09:26:15'),
(43, 1263, '3', -1.17188, 15, 0, '2017-09-13 09:26:17'),
(52, 769, '2', -1.89824, 9, 0, '2017-09-13 09:26:19'),
(42, 1617, '2', -1.54395, 13, 0, '2017-09-13 09:26:20'),
(57, 1283, '0', -0.00520833, 24, 0, '2017-09-13 09:26:22'),
(46, 1284, '3', 0.03, 18, 1, '2017-09-13 09:26:23'),
(49, 1328, '3', 0.6, 48, 1, '2017-09-13 09:26:24'),
(33, 1206, '3', -1.40083, 19, 0, '2017-09-13 09:26:24'),
(63, 2288, '0', -0.0681818, 44, 0, '2017-09-13 09:26:24'),
(70, 1424, '3', 2.6625, 9, 1, '2017-09-13 09:26:25'),
(38, 1805, '0', -0.0483871, 62, 0, '2017-09-13 09:26:25'),
(68, 1249, '4', 1.42127, 31, 1, '2017-09-13 09:26:26'),
(52, 768, '3', 2.08333, 8, 1, '2017-09-13 09:26:27'),
(56, 1454, '2', 0.148148, 28, 1, '2017-09-13 09:26:27'),
(48, 1706, '3', 1.2288, 18, 1, '2017-09-13 09:26:28'),
(36, 3008, '2', 0.244898, 20, 1, '2017-09-13 09:26:28'),
(66, 2665, '3', -2.61601, 13, 0, '2017-09-13 09:26:28'),
(43, 1218, '1', -0.48, 12, 0, '2017-09-13 09:26:29'),
(33, 173, '4', 2.7075, 5, 1, '2017-09-13 09:26:29'),
(44, 1200, '2', -0.668981, 19, 0, '2017-09-13 09:26:29'),
(67, 1200, '2', -0.231481, 26, 0, '2017-09-13 09:26:31'),
(53, 1326, '1', 1.39655, 31, 1, '2017-09-13 09:26:32'),
(70, 1305, '2', 2.51786, 9, 1, '2017-09-13 09:26:33'),
(31, 487, '4', 0.03, 36, 1, '2017-09-13 09:26:34'),
(69, 1299, '1', -1.4573, 20, 0, '2017-09-13 09:26:35'),
(52, 493, '1', 1.33333, 10, 1, '2017-09-13 09:26:36'),
(57, 1176, '4', 0.55102, 16, 1, '2017-09-13 09:26:38'),
(43, 1174, '3', 1.13609, 10, 1, '2017-09-13 09:26:38'),
(70, 1400, '3', 2.85108, 5, 1, '2017-09-13 09:26:38'),
(44, 1175, '4', 1.05762, 13, 1, '2017-09-13 09:26:42'),
(56, 1455, '1', 1.17188, 15, 1, '2017-09-13 09:26:42'),
(48, 1655, '3', -1.3032, 15, 0, '2017-09-13 09:26:42'),
(70, 1100, '2', -2.85945, 5, 0, '2017-09-13 09:26:43'),
(66, 2648, '4', 2.73546, 15, 1, '2017-09-13 09:26:44'),
(53, 1312, '2', 2.45455, 12, 1, '2017-09-13 09:26:45'),
(52, 775, '1', -2.04726, 8, 0, '2017-09-13 09:26:45'),
(67, 1281, '1', -0.75, 15, 0, '2017-09-13 09:26:46'),
(69, 1250, '1', 1.92, 12, 1, '2017-09-13 09:26:47'),
(36, 1478, '2', 0.826875, 19, 1, '2017-09-13 09:26:47'),
(33, 1204, '4', 1.17188, 18, 1, '2017-09-13 09:26:48'),
(51, 1334, '4', 0.520833, 35, 1, '2017-09-13 09:26:49'),
(70, 1406, '3', -2.80944, 6, 0, '2017-09-13 09:26:49'),
(66, 1158, '2', 2.25111, 7, 1, '2017-09-13 09:26:50'),
(52, 484, '1', 2.26843, 6, 1, '2017-09-13 09:26:51'),
(36, 1491, '4', -2.08333, 7, 0, '2017-09-13 09:26:54'),
(31, 489, '4', -0.75, 20, 0, '2017-09-13 09:26:54'),
(70, 1309, '3', 2.7, 6, 1, '2017-09-13 09:26:55'),
(33, 1188, '4', -1.38138, 9, 0, '2017-09-13 09:26:56'),
(44, 1284, '3', 0.1875, 15, 1, '2017-09-13 09:26:58');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(48, 1711, '4', -1.3032, 15, 0, '2017-09-13 09:26:58'),
(66, 2683, '4', 2.86182, 9, 1, '2017-09-13 09:26:59'),
(67, 1220, '1', -0.860969, 13, 0, '2017-09-13 09:27:00'),
(43, 1170, '2', 0.046875, 21, 1, '2017-09-13 09:27:00'),
(52, 773, '2', -2.34783, 10, 0, '2017-09-13 09:27:01'),
(70, 1391, '3', 2.8465, 5, 1, '2017-09-13 09:27:01'),
(38, 1652, '0', -0.0833333, 36, 0, '2017-09-13 09:27:02'),
(40, 2187, '2', -0.179259, 68, 0, '2017-09-13 09:27:02'),
(46, 1287, '4', -0.0833333, 40, 0, '2017-09-13 09:27:03'),
(53, 1361, '4', -2.32743, 19, 0, '2017-09-13 09:27:04'),
(56, 1459, '2', 0.541875, 23, 1, '2017-09-13 09:27:05'),
(42, 1610, '2', -0.03, 45, 0, '2017-09-13 09:27:05'),
(66, 2669, '1', -2.81957, 7, 0, '2017-09-13 09:27:06'),
(31, 733, '3', 1.47, 12, 1, '2017-09-13 09:27:07'),
(44, 1281, '1', -1.33333, 10, 0, '2017-09-13 09:27:07'),
(36, 1481, '4', -1.2675, 14, 0, '2017-09-13 09:27:08'),
(69, 1283, '4', 0.375, 21, 1, '2017-09-13 09:27:08'),
(48, 1668, '2', -1.57687, 11, 0, '2017-09-13 09:27:08'),
(52, 794, '1', -2.12138, 7, 0, '2017-09-13 09:27:08'),
(43, 1172, '4', 0.6075, 11, 1, '2017-09-13 09:27:11'),
(57, 736, '3', -0.438581, 21, 0, '2017-09-13 09:27:11'),
(56, 1457, '4', 1.92, 8, 1, '2017-09-13 09:27:13'),
(52, 797, '1', 2.26843, 6, 1, '2017-09-13 09:27:14'),
(36, 1480, '4', 2.20408, 6, 1, '2017-09-13 09:27:14'),
(33, 1229, '2', -1.33333, 18, 0, '2017-09-13 09:27:15'),
(70, 1393, '1', -2.51072, 15, 0, '2017-09-13 09:27:15'),
(46, 1293, '2', 0.630208, 13, 1, '2017-09-13 09:27:16'),
(66, 2677, '4', 2.84605, 10, 1, '2017-09-13 09:27:17'),
(57, 725, '1', -1.75433, 8, 0, '2017-09-13 09:27:18'),
(38, 1815, '1', -1.58333, 17, 0, '2017-09-13 09:27:19'),
(44, 1220, '1', -0.979592, 12, 0, '2017-09-13 09:27:19'),
(69, 1264, '4', 2.40909, 13, 1, '2017-09-13 09:27:21'),
(52, 788, '1', 2.08333, 7, 1, '2017-09-13 09:27:21'),
(66, 2688, '1', 2.90474, 5, 1, '2017-09-13 09:27:21'),
(38, 1816, '1', -2.625, 4, 0, '2017-09-13 09:27:23'),
(70, 1405, '1', -2.70701, 8, 0, '2017-09-13 09:27:23'),
(53, 1325, '3', -1.82143, 22, 0, '2017-09-13 09:27:26'),
(68, 1235, '2', -0.537121, 61, 0, '2017-09-13 09:27:27'),
(49, 1321, '0', -0.046875, 64, 0, '2017-09-13 09:27:28'),
(33, 1264, '2', -1.79132, 15, 0, '2017-09-13 09:27:30'),
(43, 1173, '0', -0.0075, 20, 0, '2017-09-13 09:27:31'),
(31, 478, '3', -0.75, 25, 0, '2017-09-13 09:27:31'),
(70, 1395, '3', 2.51786, 9, 1, '2017-09-13 09:27:33'),
(63, 1172, '0', -0.0075, 20, 0, '2017-09-13 09:27:33'),
(36, 2933, '1', -0.046875, 21, 0, '2017-09-13 09:27:35'),
(51, 1113, '3', -0.275482, 46, 0, '2017-09-13 09:27:36'),
(44, 1219, '3', 0.22314, 16, 1, '2017-09-13 09:27:36'),
(56, 1464, '3', -0.75, 24, 0, '2017-09-13 09:27:38'),
(57, 509, '4', -0.668981, 19, 0, '2017-09-13 09:27:38'),
(33, 1299, '3', 2.3168, 8, 1, '2017-09-13 09:27:38'),
(49, 1339, '2', 2.4, 12, 1, '2017-09-13 09:27:39'),
(48, 1679, '2', 0.1875, 33, 1, '2017-09-13 09:27:42'),
(67, 1257, '3', -0.046875, 42, 0, '2017-09-13 09:27:42'),
(52, 792, '3', -0.75, 21, 0, '2017-09-13 09:27:42'),
(57, 724, '4', -1.76333, 7, 0, '2017-09-13 09:27:45'),
(44, 1189, '3', 1.10587, 11, 1, '2017-09-13 09:27:47'),
(33, 1176, '4', 1.2398, 10, 1, '2017-09-13 09:27:48'),
(36, 1472, '3', 1.2675, 14, 1, '2017-09-13 09:27:49'),
(46, 1200, '2', -0.00925926, 34, 0, '2017-09-13 09:27:50'),
(42, 1609, '3', -0.0117188, 45, 0, '2017-09-13 09:27:51'),
(43, 1216, '4', 0.0833333, 20, 1, '2017-09-13 09:27:51'),
(52, 789, '4', -1.88021, 10, 0, '2017-09-13 09:27:52'),
(70, 1397, '3', 2.35829, 20, 1, '2017-09-13 09:27:53'),
(49, 1327, '1', -1.98, 17, 0, '2017-09-13 09:27:56'),
(31, 757, '1', -0.567108, 26, 0, '2017-09-13 09:27:58'),
(67, 1175, '4', 0.574219, 18, 1, '2017-09-13 09:28:00'),
(57, 723, '4', -1.02083, 15, 0, '2017-09-13 09:28:00'),
(70, 1404, '3', -2.71302, 7, 0, '2017-09-13 09:28:00'),
(51, 1325, '1', 0.860969, 26, 1, '2017-09-13 09:28:01'),
(56, 3051, '3', 0.0177515, 24, 1, '2017-09-13 09:28:02'),
(40, 2201, '0', -0.000833333, 60, 0, '2017-09-13 09:28:03'),
(52, 787, '4', 1.63435, 11, 1, '2017-09-13 09:28:04'),
(48, 1696, '3', -0.683368, 23, 0, '2017-09-13 09:28:04'),
(53, 1339, '3', -1.15, 37, 0, '2017-09-13 09:28:04'),
(63, 1276, '0', -0.00292969, 32, 0, '2017-09-13 09:28:06'),
(36, 1483, '1', -0.831025, 18, 0, '2017-09-13 09:28:07'),
(70, 1398, '3', 2.78394, 7, 1, '2017-09-13 09:28:07'),
(42, 1614, '3', -1.33333, 18, 0, '2017-09-13 09:28:09'),
(38, 472, '1', 1.92, 8, 1, '2017-09-13 09:28:09'),
(67, 1191, '2', -0.979592, 12, 0, '2017-09-13 09:28:12'),
(57, 728, '4', -1.40443, 12, 0, '2017-09-13 09:28:12'),
(51, 1321, '4', -2.05737, 11, 0, '2017-09-13 09:28:12'),
(33, 1286, '4', 1.02083, 25, 1, '2017-09-13 09:28:13'),
(49, 1092, '0', 0, 17, -1, '2017-09-13 09:28:13'),
(38, 729, '2', 2.22454, 5, 1, '2017-09-13 09:28:14'),
(56, 1465, '0', 0, 12, -1, '2017-09-13 09:28:15'),
(70, 1086, '1', -2.72703, 8, 0, '2017-09-13 09:28:15'),
(48, 1671, '3', 1.63435, 11, 1, '2017-09-13 09:28:16'),
(67, 1217, '3', 1.2675, 7, 1, '2017-09-13 09:28:19'),
(33, 1283, '3', -1.50521, 7, 0, '2017-09-13 09:28:20'),
(70, 1421, '2', -2.92136, 5, 0, '2017-09-13 09:28:21'),
(49, 1329, '3', 2.65, 7, 1, '2017-09-13 09:28:21'),
(57, 718, '1', 1.47, 9, 1, '2017-09-13 09:28:21'),
(53, 1329, '3', 2.15, 17, 1, '2017-09-13 09:28:21'),
(43, 1203, '0', -0.00333333, 30, 0, '2017-09-13 09:28:22'),
(38, 730, '2', 1.81481, 8, 1, '2017-09-13 09:28:22'),
(63, 1177, '2', 0.154959, 17, 1, '2017-09-13 09:28:24'),
(31, 482, '1', -0.382653, 27, 0, '2017-09-13 09:28:25'),
(36, 1479, '3', 0.968492, 19, 1, '2017-09-13 09:28:26'),
(49, 1313, '2', 2.66667, 6, 1, '2017-09-13 09:28:27'),
(38, 490, '4', -2.08333, 6, 0, '2017-09-13 09:28:28'),
(33, 1187, '1', -1.6875, 8, 0, '2017-09-13 09:28:28'),
(70, 1426, '2', 2.60526, 10, 1, '2017-09-13 09:28:30'),
(52, 781, '1', 0.520833, 28, 1, '2017-09-13 09:28:31'),
(43, 1190, '4', 1.10587, 11, 1, '2017-09-13 09:28:33'),
(51, 1340, '1', -1.31191, 21, 0, '2017-09-13 09:28:33'),
(68, 1247, '0', -0.183693, 66, 0, '2017-09-13 09:28:34'),
(44, 1268, '1', 0.00130208, 47, 1, '2017-09-13 09:28:34'),
(40, 2211, '1', -0.26188, 31, 0, '2017-09-13 09:28:34'),
(57, 489, '4', -1.08, 16, 0, '2017-09-13 09:28:37'),
(70, 1423, '1', 2.85831, 7, 1, '2017-09-13 09:28:37'),
(31, 480, '2', 1.36688, 13, 1, '2017-09-13 09:28:38'),
(46, 1268, '0', -0.00130208, 48, 0, '2017-09-13 09:28:38'),
(36, 3000, '4', -0.75, 12, 0, '2017-09-13 09:28:39'),
(70, 1417, '2', 2.90839, 3, 1, '2017-09-13 09:28:41'),
(38, 498, '2', 1.2675, 14, 1, '2017-09-13 09:28:42'),
(51, 1331, '2', 1.80187, 9, 1, '2017-09-13 09:28:43'),
(57, 490, '1', -1.6875, 9, 0, '2017-09-13 09:28:47'),
(36, 1468, '1', -1.92, 8, 0, '2017-09-13 09:28:47'),
(44, 1295, '3', -0.630208, 13, 0, '2017-09-13 09:28:47'),
(56, 1463, '2', 0.154959, 34, 1, '2017-09-13 09:28:48'),
(63, 1216, '0', -0.00520833, 24, 0, '2017-09-13 09:28:48'),
(33, 1201, '0', -0.0075, 20, 0, '2017-09-13 09:28:49'),
(38, 737, '1', -1.80187, 9, 0, '2017-09-13 09:28:52'),
(67, 1229, '3', -0.497942, 32, 0, '2017-09-13 09:28:52'),
(66, 2663, '2', 1.5, 90, 1, '2017-09-13 09:28:52'),
(53, 1103, '3', -1.66667, 32, 0, '2017-09-13 09:28:53'),
(40, 2213, '4', 0.58391, 19, 1, '2017-09-13 09:28:53'),
(49, 1326, '1', 1.55172, 28, 1, '2017-09-13 09:28:54'),
(51, 1092, '2', -1.92, 12, 0, '2017-09-13 09:28:54'),
(69, 173, '2', -0.15, 95, 0, '2017-09-13 09:28:57'),
(52, 496, '2', -0.502066, 26, 0, '2017-09-13 09:28:58'),
(42, 1607, '3', -0.0891795, 48, 0, '2017-09-13 09:28:58'),
(48, 1704, '2', 0.0710059, 44, 1, '2017-09-13 09:29:00'),
(69, 1298, '2', -2.9, 2, 0, '2017-09-13 09:29:00'),
(31, 483, '4', -0.886106, 21, 0, '2017-09-13 09:29:00'),
(38, 736, '1', 1.62197, 9, 1, '2017-09-13 09:29:00'),
(43, 1194, '0', -0.00382653, 28, 0, '2017-09-13 09:29:01'),
(56, 1449, '0', 0, 13, -1, '2017-09-13 09:29:02'),
(33, 1285, '2', -0.853333, 14, 0, '2017-09-13 09:29:03'),
(66, 2680, '1', 2.73861, 11, 1, '2017-09-13 09:29:04'),
(51, 1096, '2', -2.1675, 9, 0, '2017-09-13 09:29:04'),
(57, 498, '1', -0.991875, 17, 0, '2017-09-13 09:29:04'),
(40, 2203, '1', 1.37284, 11, 1, '2017-09-13 09:29:05'),
(52, 468, '1', -1.76333, 7, 0, '2017-09-13 09:29:05'),
(36, 1487, '1', 1.03355, 19, 1, '2017-09-13 09:29:06'),
(49, 1315, '4', 2.37931, 12, 1, '2017-09-13 09:29:07'),
(48, 1667, '3', 1.96599, 8, 1, '2017-09-13 09:29:08'),
(46, 1257, '3', -0.421875, 30, 0, '2017-09-13 09:29:08'),
(33, 1241, '1', -2.41142, 6, 0, '2017-09-13 09:29:09'),
(53, 1340, '3', -2.17742, 17, 0, '2017-09-13 09:29:10'),
(51, 1320, '1', -2.0172, 9, 0, '2017-09-13 09:29:12'),
(69, 1176, '4', 0.860969, 13, 1, '2017-09-13 09:29:13'),
(63, 1270, '3', -0.6862, 24, 0, '2017-09-13 09:29:13'),
(67, 1206, '0', -0.0408333, 54, 0, '2017-09-13 09:29:13'),
(38, 487, '4', 1.2675, 14, 1, '2017-09-13 09:29:15'),
(52, 779, '1', -1.83743, 10, 0, '2017-09-13 09:29:15'),
(48, 1694, '1', 1.94093, 9, 1, '2017-09-13 09:29:16'),
(49, 1346, '4', 2.67874, 10, 1, '2017-09-13 09:29:17'),
(42, 1600, '2', -0.998521, 22, 0, '2017-09-13 09:29:21'),
(33, 1230, '2', -1.90503, 13, 0, '2017-09-13 09:29:23'),
(38, 732, '3', -1.6875, 9, 0, '2017-09-13 09:29:24'),
(31, 499, '4', -0.299169, 26, 0, '2017-09-13 09:29:26'),
(69, 1209, '4', -2.1, 15, 0, '2017-09-13 09:29:28'),
(42, 1605, '3', 2.25333, 8, 1, '2017-09-13 09:29:29'),
(48, 1637, '1', 0.630208, 13, 1, '2017-09-13 09:29:30'),
(43, 1297, '3', 0.800833, 29, 1, '2017-09-13 09:29:30'),
(36, 1477, '2', -0.75, 27, 0, '2017-09-13 09:29:33'),
(53, 1323, '4', -1.92188, 23, 0, '2017-09-13 09:29:34'),
(42, 1602, '1', 2.43, 6, 1, '2017-09-13 09:29:34'),
(38, 723, '1', 1.44676, 11, 1, '2017-09-13 09:29:35'),
(63, 1184, '0', -0.00520833, 24, 0, '2017-09-13 09:29:37'),
(43, 1265, '3', -2.14793, 8, 0, '2017-09-13 09:29:38'),
(69, 1187, '1', -1.29199, 11, 0, '2017-09-13 09:29:39'),
(52, 786, '1', 0.8112, 24, 1, '2017-09-13 09:29:40'),
(53, 1324, '0', 0, 6, -1, '2017-09-13 09:29:40'),
(57, 729, '0', -0.00231481, 36, 0, '2017-09-13 09:29:40'),
(38, 485, '1', 2.26843, 6, 1, '2017-09-13 09:29:41'),
(33, 1288, '3', -1.39463, 21, 0, '2017-09-13 09:29:44'),
(70, 1418, '1', 0.526537, 63, 1, '2017-09-13 09:29:44'),
(48, 1676, '2', -1.47, 15, 0, '2017-09-13 09:29:45'),
(69, 1289, '1', -2.1675, 6, 0, '2017-09-13 09:29:45'),
(70, 1134, '3', -2.87877, 3, 0, '2017-09-13 09:29:47'),
(40, 2221, '2', -0.148148, 42, 0, '2017-09-13 09:29:48'),
(52, 522, '4', -1.6875, 9, 0, '2017-09-13 09:29:48'),
(44, 1286, '0', -0.000833333, 60, 0, '2017-09-13 09:29:48'),
(69, 1229, '1', -2.57202, 4, 0, '2017-09-13 09:29:48'),
(56, 1460, '0', -0.00141777, 46, 0, '2017-09-13 09:29:49'),
(70, 1413, '1', -2.93908, 2, 0, '2017-09-13 09:29:49'),
(33, 1274, '3', -2.39158, 6, 0, '2017-09-13 09:29:50'),
(38, 464, '2', -1.28254, 9, 0, '2017-09-13 09:29:50'),
(36, 1473, '1', 1.0092, 21, 1, '2017-09-13 09:29:53'),
(63, 1170, '2', 0.1875, 18, 1, '2017-09-13 09:29:55'),
(38, 720, '4', 2.26247, 5, 1, '2017-09-13 09:29:55'),
(57, 719, '3', 0.925926, 16, 1, '2017-09-13 09:29:56'),
(52, 795, '4', -1.73677, 11, 0, '2017-09-13 09:29:59'),
(46, 1265, '0', -0.00110947, 52, 0, '2017-09-13 09:30:00'),
(66, 2668, '3', 2.38162, 57, 1, '2017-09-13 09:30:01'),
(31, 755, '4', -0.220052, 35, 0, '2017-09-13 09:30:01'),
(67, 1296, '3', -11.0208, 70, 0, '2017-09-13 09:30:02'),
(38, 733, '4', -1.80187, 9, 0, '2017-09-13 09:30:05'),
(63, 1169, '2', 0.630208, 13, 1, '2017-09-13 09:30:08'),
(53, 2605, '2', 1.57687, 11, 1, '2017-09-13 09:30:10'),
(69, 1295, '3', -0.0208333, 22, 0, '2017-09-13 09:30:11'),
(40, 2209, '4', 0.813802, 23, 1, '2017-09-13 09:30:11'),
(42, 1612, '2', -0.24963, 37, 0, '2017-09-13 09:30:12'),
(48, 1666, '3', -0.348657, 29, 0, '2017-09-13 09:30:14'),
(66, 2676, '3', -2.86551, 13, 0, '2017-09-13 09:30:14'),
(53, 2601, '2', 2.29688, 5, 1, '2017-09-13 09:30:16'),
(69, 1286, '3', -2.52083, 5, 0, '2017-09-13 09:30:16'),
(33, 1262, '3', 0.639053, 28, 1, '2017-09-13 09:30:18'),
(57, 731, '2', 0.453704, 22, 1, '2017-09-13 09:30:18'),
(52, 798, '1', -1.04752, 18, 0, '2017-09-13 09:30:18'),
(69, 1266, '3', -2.7075, 3, 0, '2017-09-13 09:30:19'),
(31, 752, '1', -1.11153, 18, 0, '2017-09-13 09:30:20'),
(56, 1462, '1', 0.151875, 31, 1, '2017-09-13 09:30:20'),
(36, 1485, '4', 0.639053, 28, 1, '2017-09-13 09:30:21'),
(33, 1235, '3', -2.73347, 3, 0, '2017-09-13 09:30:21'),
(69, 1230, '3', 2.72534, 3, 1, '2017-09-13 09:30:22'),
(43, 1269, '3', -0.00520833, 46, 0, '2017-09-13 09:30:24'),
(51, 1586, '1', 0.625236, 25, 1, '2017-09-13 09:30:26'),
(42, 1615, '3', 1.72652, 14, 1, '2017-09-13 09:30:26'),
(40, 2219, '2', -1.43787, 16, 0, '2017-09-13 09:30:27'),
(57, 481, '3', -1.80187, 9, 0, '2017-09-13 09:30:27'),
(63, 1195, '0', -0.0075, 20, 0, '2017-09-13 09:30:29'),
(69, 170, '3', -2.6508, 6, 0, '2017-09-13 09:30:29'),
(46, 1281, '0', -0.00333333, 30, 0, '2017-09-13 09:30:31'),
(69, 1274, '2', 2.68718, 3, 1, '2017-09-13 09:30:31'),
(31, 746, '2', -1.22454, 13, 0, '2017-09-13 09:30:33'),
(52, 500, '2', 0.9075, 18, 1, '2017-09-13 09:30:36'),
(56, 3004, '3', 0.653333, 16, 1, '2017-09-13 09:30:36'),
(38, 731, '3', -0.0578704, 31, 0, '2017-09-13 09:30:36'),
(44, 1250, '3', -0.140833, 47, 0, '2017-09-13 09:30:37'),
(69, 1207, '2', -2.46387, 6, 0, '2017-09-13 09:30:37'),
(36, 1474, '2', 0.979592, 18, 1, '2017-09-13 09:30:39'),
(57, 726, '2', -1.25606, 12, 0, '2017-09-13 09:30:39'),
(63, 1194, '1', 1.10587, 11, 1, '2017-09-13 09:30:40'),
(40, 2214, '2', -1.22454, 13, 0, '2017-09-13 09:30:40'),
(53, 2602, '1', -0.48, 24, 0, '2017-09-13 09:30:40'),
(67, 1204, '2', -0.105469, 39, 0, '2017-09-13 09:30:42'),
(38, 719, '1', -1.94676, 7, 0, '2017-09-13 09:30:43'),
(43, 1281, '1', -0.403333, 19, 0, '2017-09-13 09:30:44'),
(40, 2207, '1', 2.37037, 4, 1, '2017-09-13 09:30:44'),
(51, 1593, '1', 0.75, 22, 1, '2017-09-13 09:30:48'),
(53, 2608, '3', 1.80187, 9, 1, '2017-09-13 09:30:49'),
(36, 1490, '2', -1.79132, 10, 0, '2017-09-13 09:30:49'),
(42, 1599, '1', 0.813802, 23, 1, '2017-09-13 09:30:49'),
(52, 791, '2', -1.36688, 13, 0, '2017-09-13 09:30:49'),
(49, 1616, '0', -0.00141777, 46, 0, '2017-09-13 09:30:50'),
(63, 1173, '2', 0.48, 12, 1, '2017-09-13 09:30:52'),
(40, 2208, '1', 1.49481, 10, 1, '2017-09-13 09:30:54'),
(38, 481, '3', -1.47, 12, 0, '2017-09-13 09:30:55'),
(56, 1451, '1', 0.668981, 19, 1, '2017-09-13 09:30:55'),
(69, 2762, '3', 1.92, 6, 1, '2017-09-13 09:30:57'),
(48, 1693, '4', 0.0325521, 43, 1, '2017-09-13 09:30:57'),
(38, 722, '3', 2.52083, 3, 1, '2017-09-13 09:30:58'),
(66, 2655, '2', -2.5219, 44, 0, '2017-09-13 09:30:59'),
(42, 1603, '2', 2.05141, 9, 1, '2017-09-13 09:30:59'),
(43, 1282, '1', -0.75, 15, 0, '2017-09-13 09:30:59'),
(40, 2205, '1', 2.13574, 5, 1, '2017-09-13 09:30:59'),
(49, 1574, '1', 2.02423, 10, 1, '2017-09-13 09:31:01'),
(36, 1492, '2', 1.48915, 13, 1, '2017-09-13 09:31:02'),
(63, 1218, '0', 0, 11, -1, '2017-09-13 09:31:03'),
(63, 1190, '0', 0, 11, -1, '2017-09-13 09:31:03'),
(52, 784, '2', -1.33333, 14, 0, '2017-09-13 09:31:03'),
(67, 172, '1', -1.92, 22, 0, '2017-09-13 09:31:04'),
(66, 2645, '4', 2.90623, 8, 1, '2017-09-13 09:31:07'),
(38, 465, '1', -1.33333, 10, 0, '2017-09-13 09:31:08'),
(31, 502, '2', 0.17155, 35, 1, '2017-09-13 09:31:08'),
(40, 2216, '1', -1.49481, 10, 0, '2017-09-13 09:31:09'),
(69, 2742, '4', 0.75, 15, 1, '2017-09-13 09:31:13'),
(40, 2218, '1', -2.08333, 6, 0, '2017-09-13 09:31:15'),
(52, 790, '3', -1.36688, 13, 0, '2017-09-13 09:31:16'),
(53, 2607, '4', 0.226875, 29, 1, '2017-09-13 09:31:18'),
(38, 721, '1', 1.57687, 11, 1, '2017-09-13 09:31:19'),
(46, 1208, '2', -0.0012, 49, 0, '2017-09-13 09:31:20'),
(48, 1708, '4', -0.688802, 25, 0, '2017-09-13 09:31:22'),
(31, 744, '4', -1.17188, 15, 0, '2017-09-13 09:31:23'),
(51, 1591, '0', 0, 36, -1, '2017-09-13 09:31:23'),
(67, 1283, '1', -0.0833333, 20, 0, '2017-09-13 09:31:24'),
(53, 2611, '3', 2.1675, 6, 1, '2017-09-13 09:31:24'),
(40, 2204, '4', 1.33333, 10, 1, '2017-09-13 09:31:26'),
(63, 1210, '0', -0.00520833, 24, 0, '2017-09-13 09:31:27'),
(49, 1591, '0', 0, 27, -1, '2017-09-13 09:31:28'),
(31, 753, '1', -2.32823, 5, 0, '2017-09-13 09:31:28'),
(44, 1206, '3', -0.0533333, 52, 0, '2017-09-13 09:31:29'),
(52, 521, '3', -1.22454, 13, 0, '2017-09-13 09:31:30'),
(69, 2761, '1', 0.403333, 19, 1, '2017-09-13 09:31:32'),
(36, 3054, '0', -0.00333333, 30, 0, '2017-09-13 09:31:32'),
(66, 2678, '2', -2.77031, 26, 0, '2017-09-13 09:31:33'),
(52, 793, '1', -2.29688, 5, 0, '2017-09-13 09:31:35'),
(38, 735, '1', -0.653333, 16, 0, '2017-09-13 09:31:35'),
(56, 1466, '2', 0.0972, 41, 1, '2017-09-13 09:31:36'),
(53, 2615, '1', 1.36688, 13, 1, '2017-09-13 09:31:37'),
(44, 1176, '4', 1.38138, 9, 1, '2017-09-13 09:31:38'),
(48, 1658, '1', 0.563333, 17, 1, '2017-09-13 09:31:39'),
(38, 718, '1', 1.76333, 7, 1, '2017-09-13 09:31:42'),
(63, 1174, '3', 0.443787, 16, 1, '2017-09-13 09:31:44'),
(42, 1604, '2', 0.0117188, 45, 1, '2017-09-13 09:31:44'),
(40, 2217, '1', 0.495117, 19, 1, '2017-09-13 09:31:45'),
(36, 1501, '2', -1.48915, 13, 0, '2017-09-13 09:31:45'),
(53, 2610, '3', 1.92, 8, 1, '2017-09-13 09:31:45'),
(69, 2744, '1', 0.853333, 14, 1, '2017-09-13 09:31:45'),
(46, 1189, '1', -0.00382653, 27, 0, '2017-09-13 09:31:47'),
(56, 1458, '0', 0, 11, -1, '2017-09-13 09:31:47'),
(48, 1702, '2', 1.89824, 9, 1, '2017-09-13 09:31:48'),
(43, 1208, '0', -0.0012, 50, 0, '2017-09-13 09:31:50'),
(51, 1590, '4', 0.646684, 30, 1, '2017-09-13 09:31:54'),
(53, 2621, '3', 2.55, 9, 1, '2017-09-13 09:31:54'),
(40, 2212, '3', 1.40443, 12, 1, '2017-09-13 09:31:56'),
(69, 2739, '1', 1.08, 12, 1, '2017-09-13 09:31:57'),
(44, 1187, '3', -0.354492, 21, 0, '2017-09-13 09:31:59'),
(48, 1643, '2', 0.75, 13, 1, '2017-09-13 09:32:00'),
(31, 477, '3', -0.277883, 32, 0, '2017-09-13 09:32:00'),
(51, 1578, '1', 1.73677, 11, 1, '2017-09-13 09:32:04'),
(53, 2620, '2', -2.45, 11, 0, '2017-09-13 09:32:05'),
(40, 2215, '3', -1.47, 9, 0, '2017-09-13 09:32:06'),
(42, 1629, '4', -0.816635, 22, 0, '2017-09-13 09:32:06'),
(56, 3044, '3', 0.130208, 19, 1, '2017-09-13 09:32:06'),
(43, 1217, '3', 0.0075, 19, 1, '2017-09-13 09:32:09'),
(66, 2666, '1', 2.61534, 36, 1, '2017-09-13 09:32:09'),
(49, 1582, '0', -0.00170068, 42, 0, '2017-09-13 09:32:10'),
(36, 1498, '2', -0.630208, 26, 0, '2017-09-13 09:32:12'),
(63, 1185, '0', -0.00382653, 28, 0, '2017-09-13 09:32:12'),
(38, 466, '0', -0.00333333, 30, 0, '2017-09-13 09:32:13'),
(69, 2747, '4', 0.653333, 16, 1, '2017-09-13 09:32:14'),
(52, 778, '2', -0.105469, 39, 0, '2017-09-13 09:32:14'),
(42, 1631, '1', 1.9571, 10, 1, '2017-09-13 09:32:16'),
(44, 172, '4', -2.09851, 18, 0, '2017-09-13 09:32:17'),
(46, 1175, '0', -0.00292969, 32, 0, '2017-09-13 09:32:19'),
(38, 734, '3', -1.76333, 7, 0, '2017-09-13 09:32:19'),
(53, 2631, '3', 2.3, 14, 1, '2017-09-13 09:32:20'),
(51, 1566, '3', 1.11153, 18, 1, '2017-09-13 09:32:23'),
(63, 1197, '1', 0.75, 12, 1, '2017-09-13 09:32:23'),
(36, 1494, '4', 1.29848, 13, 1, '2017-09-13 09:32:24'),
(66, 2684, '1', -2.84397, 17, 0, '2017-09-13 09:32:27'),
(38, 509, '2', -1.94676, 7, 0, '2017-09-13 09:32:27'),
(56, 3035, '2', 0.244898, 20, 1, '2017-09-13 09:32:27'),
(52, 473, '1', -0.853333, 14, 0, '2017-09-13 09:32:28'),
(46, 1220, '2', 1.2398, 10, 1, '2017-09-13 09:32:29'),
(38, 486, '1', 2.37037, 4, 1, '2017-09-13 09:32:31'),
(69, 2757, '3', 0.403333, 19, 1, '2017-09-13 09:32:33'),
(52, 469, '3', -1.81481, 8, 0, '2017-09-13 09:32:36'),
(43, 1175, '4', 0.046875, 28, 1, '2017-09-13 09:32:37'),
(38, 725, '1', -1.89187, 7, 0, '2017-09-13 09:32:37'),
(42, 1626, '2', -1.12037, 21, 0, '2017-09-13 09:32:38'),
(48, 1695, '3', 0.263374, 38, 1, '2017-09-13 09:32:38'),
(31, 749, '2', 0.105469, 39, 1, '2017-09-13 09:32:40'),
(38, 727, '2', 2.52083, 3, 1, '2017-09-13 09:32:41'),
(53, 2633, '3', 1.95, 21, 1, '2017-09-13 09:32:41'),
(43, 1219, '3', 1.39463, 7, 1, '2017-09-13 09:32:44'),
(51, 1597, '0', 0, 23, -1, '2017-09-13 09:32:45'),
(67, 173, '1', -0.12, 80, 0, '2017-09-13 09:32:46'),
(52, 780, '4', -1.6875, 10, 0, '2017-09-13 09:32:47'),
(56, 3039, '1', 0.0710059, 22, 1, '2017-09-13 09:32:49'),
(67, 1298, '1', 2.61333, 4, 1, '2017-09-13 09:32:49'),
(48, 1677, '1', -2.25, 12, 0, '2017-09-13 09:32:51'),
(66, 2652, '1', 2.69921, 24, 1, '2017-09-13 09:32:52'),
(52, 796, '2', -2.35692, 5, 0, '2017-09-13 09:32:52'),
(69, 2760, '4', 0.403333, 19, 1, '2017-09-13 09:32:52'),
(44, 1275, '3', -0.371399, 35, 0, '2017-09-13 09:32:53'),
(63, 1203, '0', -0.00333333, 30, 0, '2017-09-13 09:32:54'),
(38, 489, '1', 1.17188, 15, 1, '2017-09-13 09:32:56'),
(56, 2929, '4', 1.33333, 8, 1, '2017-09-13 09:32:57'),
(31, 756, '1', -1.17188, 18, 0, '2017-09-13 09:32:58'),
(69, 2753, '2', 1.92, 6, 1, '2017-09-13 09:32:58'),
(66, 2658, '2', 2.90623, 8, 1, '2017-09-13 09:32:59'),
(46, 1199, '0', -0.00292969, 32, 0, '2017-09-13 09:33:01'),
(67, 1188, '1', 1.10587, 11, 1, '2017-09-13 09:33:01'),
(38, 494, '3', 2.08333, 5, 1, '2017-09-13 09:33:01'),
(49, 1595, '1', -0.0533333, 52, 0, '2017-09-13 09:33:03'),
(44, 171, '0', 0, 10, -1, '2017-09-13 09:33:03'),
(38, 480, '3', -2.55, 6, 0, '2017-09-13 09:33:07'),
(53, 2622, '2', 1.65, 27, 1, '2017-09-13 09:33:08'),
(43, 1200, '4', 0.231481, 26, 1, '2017-09-13 09:33:10'),
(51, 1574, '1', 0.804528, 27, 1, '2017-09-13 09:33:13'),
(46, 1191, '3', 1.10587, 11, 1, '2017-09-13 09:33:13'),
(63, 1297, '3', 1.47, 18, 1, '2017-09-13 09:33:13'),
(66, 2681, '1', 2.84888, 16, 1, '2017-09-13 09:33:15'),
(38, 726, '1', 1.75433, 8, 1, '2017-09-13 09:33:15'),
(36, 1505, '1', 0.341719, 53, 1, '2017-09-13 09:33:17'),
(44, 173, '3', -2.1168, 16, 0, '2017-09-13 09:33:19'),
(38, 724, '4', -2.08333, 5, 0, '2017-09-13 09:33:20'),
(48, 1707, '4', 0.592593, 30, 1, '2017-09-13 09:33:21'),
(56, 1453, '1', 0.8748, 23, 1, '2017-09-13 09:33:21'),
(31, 476, '1', -0.6075, 22, 0, '2017-09-13 09:33:21'),
(42, 1625, '1', 0.0208333, 44, 1, '2017-09-13 09:33:22'),
(46, 1294, '3', 0.630208, 13, 1, '2017-09-13 09:33:25'),
(69, 2748, '3', 0.0133333, 28, 1, '2017-09-13 09:33:26'),
(51, 1589, '3', 1.2398, 15, 1, '2017-09-13 09:33:28'),
(43, 1189, '3', 0.382653, 18, 1, '2017-09-13 09:33:29'),
(53, 2634, '1', -2, 20, 0, '2017-09-13 09:33:29'),
(63, 1196, '4', 0.333333, 16, 1, '2017-09-13 09:33:29'),
(36, 1495, '3', -1.53061, 12, 0, '2017-09-13 09:33:29'),
(48, 1681, '3', 1.98047, 9, 1, '2017-09-13 09:33:29'),
(44, 1296, '4', -0.75, 12, 0, '2017-09-13 09:33:31'),
(43, 1257, '3', -2.63672, 3, 0, '2017-09-13 09:33:31'),
(53, 2628, '4', -2.65, 7, 0, '2017-09-13 09:33:36'),
(63, 1186, '3', 1.53061, 8, 1, '2017-09-13 09:33:37'),
(56, 1461, '3', 1.11153, 18, 1, '2017-09-13 09:33:39'),
(66, 2667, '2', 2.76763, 23, 1, '2017-09-13 09:33:39'),
(69, 2755, '4', -0.653333, 16, 0, '2017-09-13 09:33:42'),
(31, 747, '1', -0.453704, 22, 0, '2017-09-13 09:33:42'),
(49, 1566, '3', 0.0226843, 42, 1, '2017-09-13 09:33:45'),
(66, 2682, '3', -2.9286, 9, 0, '2017-09-13 09:33:47'),
(53, 2625, '1', -2.35, 13, 0, '2017-09-13 09:33:49'),
(36, 3076, '4', -0.213333, 22, 0, '2017-09-13 09:33:52'),
(69, 2749, '4', 1.47, 9, 1, '2017-09-13 09:33:52'),
(67, 1250, '1', 0.0408333, 53, 1, '2017-09-13 09:33:54'),
(63, 1198, '4', 0.03, 18, 1, '2017-09-13 09:33:55'),
(48, 1647, '0', -0.115385, 26, 0, '2017-09-13 09:33:56'),
(66, 2670, '2', -2.92103, 8, 0, '2017-09-13 09:33:56'),
(38, 728, '0', -0.00207756, 38, 0, '2017-09-13 09:33:59'),
(67, 1299, '1', -2.47934, 6, 0, '2017-09-13 09:34:01'),
(43, 1199, '3', 0.0117188, 30, 1, '2017-09-13 09:34:01'),
(69, 2741, '3', 1.33333, 10, 1, '2017-09-13 09:34:01'),
(46, 1229, '3', -0.297325, 37, 0, '2017-09-13 09:34:03'),
(51, 1563, '1', -0.110947, 42, 0, '2017-09-13 09:34:10'),
(49, 3034, '4', -0.0153061, 26, 0, '2017-09-13 09:34:10'),
(67, 1275, '1', -1.99177, 10, 0, '2017-09-13 09:34:10'),
(43, 1284, '3', 0.9075, 9, 1, '2017-09-13 09:34:11'),
(53, 2609, '2', 0.6075, 22, 1, '2017-09-13 09:34:11'),
(42, 1624, '4', 0.046875, 49, 1, '2017-09-13 09:34:12'),
(63, 1292, '0', 0, 17, -1, '2017-09-13 09:34:12'),
(38, 757, '2', 1.4518, 14, 1, '2017-09-13 09:34:13'),
(31, 740, '1', 0.0578704, 31, 1, '2017-09-13 09:34:14'),
(66, 2674, '3', 2.75547, 18, 1, '2017-09-13 09:34:15'),
(36, 1499, '2', 0.6862, 24, 1, '2017-09-13 09:34:15'),
(53, 2617, '1', 2.8, 4, 1, '2017-09-13 09:34:15'),
(38, 753, '1', -2.58673, 3, 0, '2017-09-13 09:34:16'),
(56, 1467, '3', 0.440833, 37, 1, '2017-09-13 09:34:16'),
(69, 2764, '2', -2.1, 15, 0, '2017-09-13 09:34:17'),
(51, 3034, '4', -1.53061, 8, 0, '2017-09-13 09:34:18'),
(44, 1264, '1', -0.248623, 47, 0, '2017-09-13 09:34:19'),
(48, 1698, '4', -1.61538, 24, 0, '2017-09-13 09:34:20'),
(66, 2672, '2', -2.90652, 7, 0, '2017-09-13 09:34:21'),
(38, 742, '1', 1.92, 8, 1, '2017-09-13 09:34:24'),
(43, 1171, '4', 0.3675, 13, 1, '2017-09-13 09:34:24'),
(69, 2736, '4', 1.47, 9, 1, '2017-09-13 09:34:26'),
(42, 1619, '3', -1.51886, 15, 0, '2017-09-13 09:34:26'),
(36, 1504, '1', 2.10422, 13, 1, '2017-09-13 09:34:29'),
(66, 2687, '2', -2.90159, 8, 0, '2017-09-13 09:34:29'),
(31, 754, '4', 1.2398, 15, 1, '2017-09-13 09:34:29'),
(66, 2650, '2', 2.95275, 4, 1, '2017-09-13 09:34:33'),
(53, 2616, '1', -2, 20, 0, '2017-09-13 09:34:35'),
(69, 2756, '2', 1.33333, 10, 1, '2017-09-13 09:34:36'),
(63, 1227, '0', -0.00520833, 24, 0, '2017-09-13 09:34:37'),
(56, 1456, '1', 0.541875, 23, 1, '2017-09-13 09:34:39'),
(31, 751, '1', -1.48915, 13, 0, '2017-09-13 09:34:42'),
(48, 1709, '2', -0.75, 23, 0, '2017-09-13 09:34:42'),
(49, 1597, '0', 0, 34, -1, '2017-09-13 09:34:44'),
(63, 1183, '2', 0.75, 11, 1, '2017-09-13 09:34:47'),
(38, 479, '1', -0.6862, 24, 0, '2017-09-13 09:34:48'),
(51, 1596, '4', -0.489275, 31, 0, '2017-09-13 09:34:49'),
(53, 2626, '3', 2.3, 14, 1, '2017-09-13 09:34:49'),
(66, 2675, '3', -2.78425, 16, 0, '2017-09-13 09:34:49'),
(67, 1289, '0', -0.001875, 40, 0, '2017-09-13 09:34:51'),
(36, 2947, '4', -0.12, 24, 0, '2017-09-13 09:34:52'),
(69, 2791, '3', 1.92, 18, 1, '2017-09-13 09:34:54'),
(49, 1559, '4', 1.94093, 9, 1, '2017-09-13 09:34:54'),
(46, 1275, '4', 0.00102881, 53, 1, '2017-09-13 09:34:55'),
(38, 750, '0', 0, 10, -1, '2017-09-13 09:34:58'),
(66, 2647, '3', -2.88231, 10, 0, '2017-09-13 09:34:59'),
(31, 479, '1', -1.19234, 17, 0, '2017-09-13 09:35:00'),
(53, 2635, '4', -2.45, 11, 0, '2017-09-13 09:35:01'),
(36, 1506, '2', -1.5552, 14, 0, '2017-09-13 09:35:06'),
(38, 743, '4', 1.81481, 8, 1, '2017-09-13 09:35:06'),
(48, 1665, '3', -0.559401, 25, 0, '2017-09-13 09:35:08'),
(51, 1553, '4', 0.958412, 20, 1, '2017-09-13 09:35:09'),
(66, 2686, '3', -2.87027, 11, 0, '2017-09-13 09:35:11'),
(31, 738, '4', -1.25606, 12, 0, '2017-09-13 09:35:11'),
(43, 1287, '0', -0.00130208, 48, 0, '2017-09-13 09:35:13'),
(69, 2775, '1', -1.8, 20, 0, '2017-09-13 09:35:14'),
(56, 1452, '1', -0.016875, 37, 0, '2017-09-13 09:35:17'),
(44, 1299, '2', -0.0440771, 58, 0, '2017-09-13 09:35:18'),
(48, 1661, '3', 0.998521, 11, 1, '2017-09-13 09:35:18'),
(36, 1507, '1', 1.6875, 13, 1, '2017-09-13 09:35:19'),
(53, 2630, '4', -1.95, 21, 0, '2017-09-13 09:35:22'),
(63, 1263, '1', 0.046875, 35, 1, '2017-09-13 09:35:22'),
(42, 1623, '3', 0.0208333, 55, 1, '2017-09-13 09:35:23'),
(38, 502, '4', -0.958412, 20, 0, '2017-09-13 09:35:27'),
(48, 1672, '2', 2.08333, 8, 1, '2017-09-13 09:35:27'),
(31, 750, '2', 1.19234, 17, 1, '2017-09-13 09:35:28'),
(38, 477, '0', 0, 4, -1, '2017-09-13 09:35:31'),
(44, 1283, '2', -0.333333, 16, 0, '2017-09-13 09:35:34'),
(67, 1209, '2', 0.0588, 43, 1, '2017-09-13 09:35:34'),
(51, 1571, '3', 0.75, 26, 1, '2017-09-13 09:35:35'),
(49, 1589, '0', -0.00170068, 42, 0, '2017-09-13 09:35:36'),
(69, 2771, '3', 1.68, 22, 1, '2017-09-13 09:35:37'),
(31, 743, '4', 1.6875, 9, 1, '2017-09-13 09:35:37'),
(38, 476, '2', -1.57687, 11, 0, '2017-09-13 09:35:42'),
(42, 1622, '1', -1.2398, 20, 0, '2017-09-13 09:35:43'),
(56, 1450, '3', -0.231481, 26, 0, '2017-09-13 09:35:43'),
(67, 1187, '2', 1.5498, 9, 1, '2017-09-13 09:35:44'),
(43, 1268, '3', -0.220052, 35, 0, '2017-09-13 09:35:48'),
(31, 739, '1', 1.56481, 10, 1, '2017-09-13 09:35:48'),
(49, 1590, '1', -1.76881, 13, 0, '2017-09-13 09:35:49'),
(53, 2604, '0', 0, 28, -1, '2017-09-13 09:35:49'),
(56, 1470, '1', 2.1168, 8, 1, '2017-09-13 09:35:51'),
(48, 1675, '2', -1.61111, 25, 0, '2017-09-13 09:35:52'),
(38, 747, '2', 1.56481, 10, 1, '2017-09-13 09:35:52'),
(36, 1493, '4', 0.0675, 34, 1, '2017-09-13 09:35:53'),
(63, 1261, '3', 0.101801, 31, 1, '2017-09-13 09:35:55'),
(67, 1176, '4', 0.860969, 13, 1, '2017-09-13 09:35:57'),
(42, 1628, '3', -1.27599, 16, 0, '2017-09-13 09:35:59'),
(31, 474, '3', -1.47, 12, 0, '2017-09-13 09:35:59'),
(43, 1293, '1', -0.75, 12, 0, '2017-09-13 09:36:00'),
(38, 748, '1', -1.92, 8, 0, '2017-09-13 09:36:00'),
(53, 2612, '2', -1.36688, 13, 0, '2017-09-13 09:36:03'),
(44, 1204, '1', -0.421875, 30, 0, '2017-09-13 09:36:04'),
(69, 2769, '4', 1.2, 30, 1, '2017-09-13 09:36:06'),
(43, 1294, '3', 1.17188, 9, 1, '2017-09-13 09:36:08'),
(53, 2614, '4', 1.92, 8, 1, '2017-09-13 09:36:11'),
(49, 1575, '2', -1.08, 24, 0, '2017-09-13 09:36:13'),
(63, 1291, '0', -0.0075, 20, 0, '2017-09-13 09:36:15'),
(46, 171, '0', -0.00046875, 80, 0, '2017-09-13 09:36:15'),
(43, 1220, '3', -1.6875, 7, 0, '2017-09-13 09:36:15'),
(51, 1575, '2', -0.300833, 41, 0, '2017-09-13 09:36:16'),
(31, 742, '1', 0.826875, 19, 1, '2017-09-13 09:36:19'),
(42, 1636, '1', -1.1893, 20, 0, '2017-09-13 09:36:19'),
(69, 2782, '1', 2.28, 12, 1, '2017-09-13 09:36:19'),
(36, 1500, '2', -0.586908, 29, 0, '2017-09-13 09:36:22'),
(43, 1191, '3', 1.85204, 6, 1, '2017-09-13 09:36:22'),
(53, 2603, '4', -1.17188, 15, 0, '2017-09-13 09:36:27'),
(48, 1715, '3', -0.231481, 39, 0, '2017-09-13 09:36:30'),
(31, 475, '4', 1.36248, 15, 1, '2017-09-13 09:36:34'),
(44, 1298, '1', 0.75, 30, 1, '2017-09-13 09:36:34'),
(53, 2606, '1', 1.80187, 9, 1, '2017-09-13 09:36:35'),
(49, 1563, '2', 0.933062, 23, 1, '2017-09-13 09:36:35'),
(43, 1202, '1', 1.02083, 15, 1, '2017-09-13 09:36:37'),
(51, 1616, '1', -0.6862, 24, 0, '2017-09-13 09:36:40'),
(36, 3062, '3', -0.495117, 19, 0, '2017-09-13 09:36:41'),
(56, 1476, '3', 0.115385, 50, 1, '2017-09-13 09:36:42'),
(53, 2619, '3', 2.55, 9, 1, '2017-09-13 09:36:44'),
(63, 1282, '0', -0.00333333, 30, 0, '2017-09-13 09:36:46'),
(31, 745, '3', -1.2675, 14, 0, '2017-09-13 09:36:48'),
(38, 755, '0', -0.00130208, 48, 0, '2017-09-13 09:36:48'),
(67, 1286, '4', 0.0408333, 53, 1, '2017-09-13 09:36:50'),
(36, 1496, '4', 1.6875, 11, 1, '2017-09-13 09:36:52'),
(43, 1275, '1', -1.56481, 15, 0, '2017-09-13 09:36:52'),
(31, 741, '1', -1.86981, 8, 0, '2017-09-13 09:36:56'),
(69, 2783, '3', 1.2, 30, 1, '2017-09-13 09:36:56'),
(67, 1264, '4', 2.39738, 7, 1, '2017-09-13 09:36:57'),
(38, 482, '4', 1.63435, 11, 1, '2017-09-13 09:37:00'),
(48, 1712, '2', 0.592593, 30, 1, '2017-09-13 09:37:00'),
(44, 1188, '2', -0.0153061, 26, 0, '2017-09-13 09:37:00'),
(42, 1654, '2', -0.0638021, 41, 0, '2017-09-13 09:37:01'),
(49, 1553, '3', -0.567108, 26, 0, '2017-09-13 09:37:01'),
(38, 739, '1', 2.22454, 5, 1, '2017-09-13 09:37:04'),
(43, 1250, '1', 1.92, 12, 1, '2017-09-13 09:37:04'),
(31, 748, '1', -1.80187, 9, 0, '2017-09-13 09:37:05'),
(42, 1651, '3', 2.34763, 6, 1, '2017-09-13 09:37:07'),
(48, 1714, '3', 1.99654, 7, 1, '2017-09-13 09:37:08'),
(67, 1295, '4', 0.880208, 11, 1, '2017-09-13 09:37:08'),
(46, 172, '2', 0.805537, 53, 1, '2017-09-13 09:37:08'),
(36, 1502, '4', -1.19234, 17, 0, '2017-09-13 09:37:09'),
(43, 1187, '1', -1.98047, 6, 0, '2017-09-13 09:37:11'),
(56, 1482, '1', 0.954545, 30, 1, '2017-09-13 09:37:12'),
(69, 2781, '3', 2.1, 15, 1, '2017-09-13 09:37:12'),
(63, 1199, '0', -0.00292969, 32, 0, '2017-09-13 09:37:18'),
(31, 763, '1', -1.54395, 13, 0, '2017-09-13 09:37:18'),
(51, 1592, '1', -0.3675, 39, 0, '2017-09-13 09:37:19'),
(53, 2627, '2', 1.25, 35, 1, '2017-09-13 09:37:20'),
(38, 745, '2', 1.65, 18, 1, '2017-09-13 09:37:23'),
(51, 1559, '4', 2.50095, 4, 1, '2017-09-13 09:37:23'),
(46, 1295, '3', -0.130208, 19, 0, '2017-09-13 09:37:27'),
(69, 2786, '4', 1.98, 17, 1, '2017-09-13 09:37:29'),
(38, 475, '1', -2.47826, 8, 0, '2017-09-13 09:37:30'),
(36, 1497, '2', 0.613946, 23, 1, '2017-09-13 09:37:32'),
(48, 1650, '0', -0.115385, 26, 0, '2017-09-13 09:37:34'),
(53, 2624, '0', 0, 19, -1, '2017-09-13 09:37:39'),
(49, 1596, '3', -0.1875, 39, 0, '2017-09-13 09:37:41'),
(31, 775, '3', -0.567108, 26, 0, '2017-09-13 09:37:45'),
(48, 1648, '1', -1.15385, 16, 0, '2017-09-13 09:37:50'),
(56, 1473, '4', -0.72, 38, 0, '2017-09-13 09:37:51'),
(69, 2798, '0', 0, 21, -1, '2017-09-13 09:37:51'),
(44, 1209, '0', -0.0012, 50, 0, '2017-09-13 09:37:51'),
(31, 470, '4', 2.04187, 7, 1, '2017-09-13 09:37:52'),
(38, 756, '2', 0.813802, 23, 1, '2017-09-13 09:37:54'),
(49, 1578, '1', 1.54395, 13, 1, '2017-09-13 09:37:54'),
(43, 1299, '1', -0.22314, 48, 0, '2017-09-13 09:37:59'),
(48, 1642, '1', -1.33333, 10, 0, '2017-09-13 09:38:00'),
(42, 1640, '4', 0.03, 54, 1, '2017-09-13 09:38:02'),
(69, 2803, '1', -2.64652, 12, 0, '2017-09-13 09:38:02'),
(49, 1571, '2', -1.77515, 12, 0, '2017-09-13 09:38:06'),
(63, 1257, '0', -0.00130208, 48, 0, '2017-09-13 09:38:07'),
(36, 1503, '2', 0.141777, 36, 1, '2017-09-13 09:38:08'),
(43, 1289, '1', -1.47, 12, 0, '2017-09-13 09:38:11'),
(38, 478, '2', -1.98, 17, 0, '2017-09-13 09:38:11'),
(51, 1594, '0', -0.00130208, 48, 0, '2017-09-13 09:38:11'),
(42, 1627, '2', -1.79132, 10, 0, '2017-09-13 09:38:12'),
(48, 1717, '4', 1.47, 12, 1, '2017-09-13 09:38:12'),
(49, 1593, '1', 2.00826, 8, 1, '2017-09-13 09:38:13'),
(38, 738, '4', -2.18253, 5, 0, '2017-09-13 09:38:17'),
(53, 2623, '3', -0.95, 41, 0, '2017-09-13 09:38:21'),
(38, 483, '1', -2.26843, 6, 0, '2017-09-13 09:38:22'),
(51, 1582, '2', 1.63435, 11, 1, '2017-09-13 09:38:23'),
(43, 1296, '1', -0.630208, 13, 0, '2017-09-13 09:38:24'),
(53, 2632, '3', 2.75, 5, 1, '2017-09-13 09:38:25'),
(43, 1188, '1', 2.39158, 3, 1, '2017-09-13 09:38:27'),
(36, 1489, '2', -0.823129, 20, 0, '2017-09-13 09:38:28'),
(38, 499, '1', 2.12742, 6, 1, '2017-09-13 09:38:29'),
(43, 1229, '1', -2.78189, 2, 0, '2017-09-13 09:38:30'),
(53, 2618, '3', 2.8, 4, 1, '2017-09-13 09:38:30'),
(69, 2770, '2', 1.32, 28, 1, '2017-09-13 09:38:31'),
(31, 767, '2', -0.0833333, 40, 0, '2017-09-13 09:38:32'),
(48, 1721, '2', 1.56818, 21, 1, '2017-09-13 09:38:32'),
(43, 1264, '1', -2.73347, 3, 0, '2017-09-13 09:38:32'),
(56, 1485, '4', 0.576923, 42, 1, '2017-09-13 09:38:33'),
(43, 172, '1', -2.8919, 2, 0, '2017-09-13 09:38:35'),
(43, 171, '1', 2.7075, 4, 1, '2017-09-13 09:38:38'),
(53, 2629, '3', -2.45, 11, 0, '2017-09-13 09:38:41'),
(69, 2801, '1', 2.61601, 13, 1, '2017-09-13 09:38:43'),
(31, 488, '3', 1.12037, 14, 1, '2017-09-13 09:38:47'),
(36, 1524, '3', -0.892562, 20, 0, '2017-09-13 09:38:48'),
(56, 1469, '2', 1.8, 16, 1, '2017-09-13 09:38:50'),
(53, 2847, '4', 2.3, 14, 1, '2017-09-13 09:38:55'),
(63, 1268, '0', -0.00130208, 48, 0, '2017-09-13 09:38:55'),
(48, 1653, '4', -0.535714, 23, 0, '2017-09-13 09:38:56'),
(31, 471, '2', 1.20333, 11, 1, '2017-09-13 09:38:58'),
(69, 2817, '1', -2.58532, 14, 0, '2017-09-13 09:38:58'),
(36, 1527, '1', 1.93718, 11, 1, '2017-09-13 09:38:59'),
(49, 1586, '0', -0.00141777, 46, 0, '2017-09-13 09:38:59'),
(43, 1206, '3', -1.20333, 22, 0, '2017-09-13 09:39:01'),
(56, 2933, '1', -1.5, 12, 0, '2017-09-13 09:39:01'),
(48, 1720, '3', 2.4, 8, 1, '2017-09-13 09:39:03'),
(38, 474, '0', -0.001875, 40, 0, '2017-09-13 09:39:09'),
(53, 2820, '3', -2.25, 15, 0, '2017-09-13 09:39:10'),
(49, 1594, '4', 1.59505, 13, 1, '2017-09-13 09:39:13'),
(48, 1719, '4', -2.25, 10, 0, '2017-09-13 09:39:14'),
(31, 492, '4', -0.826875, 19, 0, '2017-09-13 09:39:17'),
(63, 1219, '0', -0.00619835, 22, 0, '2017-09-13 09:39:18'),
(43, 1209, '3', -1.0092, 21, 0, '2017-09-13 09:39:21'),
(51, 1595, '0', -0.000833333, 60, 0, '2017-09-13 09:39:23'),
(53, 2816, '4', 2.35, 13, 1, '2017-09-13 09:39:23'),
(43, 1204, '3', -2.52083, 4, 0, '2017-09-13 09:39:25'),
(38, 754, '2', -0.979592, 18, 0, '2017-09-13 09:39:28'),
(31, 759, '4', -1.73677, 11, 0, '2017-09-13 09:39:28'),
(36, 1512, '1', 0.536982, 30, 1, '2017-09-13 09:39:29'),
(48, 1782, '4', 1.8, 16, 1, '2017-09-13 09:39:29'),
(53, 2825, '4', -2.55, 9, 0, '2017-09-13 09:39:32'),
(43, 1283, '3', -1.33333, 8, 0, '2017-09-13 09:39:34'),
(69, 2815, '3', -1.81718, 37, 0, '2017-09-13 09:39:35'),
(31, 770, '1', -1.98047, 9, 0, '2017-09-13 09:39:37'),
(69, 2773, '4', -2.58, 7, 0, '2017-09-13 09:39:42'),
(63, 1294, '0', -0.00520833, 24, 0, '2017-09-13 09:39:42'),
(31, 761, '1', -2.38327, 5, 0, '2017-09-13 09:39:42'),
(38, 740, '2', -1.02083, 15, 0, '2017-09-13 09:39:44'),
(48, 1778, '4', -2.0625, 15, 0, '2017-09-13 09:39:44'),
(49, 1592, '1', -0.6075, 33, 0, '2017-09-13 09:39:45'),
(56, 1487, '0', -0.0652174, 46, 0, '2017-09-13 09:39:48'),
(38, 751, '1', -2.35692, 5, 0, '2017-09-13 09:39:48'),
(51, 1600, '2', -0.586908, 29, 0, '2017-09-13 09:39:52'),
(51, 1610, '4', -2.1168, 8, 0, '2017-09-13 09:40:00'),
(53, 2729, '0', 0, 30, -1, '2017-09-13 09:40:03'),
(42, 2431, '2', -0.595818, 51, 0, '2017-09-13 09:40:03'),
(48, 1767, '4', 1.8125, 19, 1, '2017-09-13 09:40:04'),
(69, 2778, '2', 1.68, 22, 1, '2017-09-13 09:40:04'),
(36, 1511, '4', -0.520833, 35, 0, '2017-09-13 09:40:04'),
(49, 1609, '1', 0.880208, 22, 1, '2017-09-13 09:40:08'),
(56, 3000, '2', -0.25, 22, 0, '2017-09-13 09:40:10'),
(63, 1191, '0', -0.00382653, 28, 0, '2017-09-13 09:40:11'),
(69, 2784, '2', 2.64, 6, 1, '2017-09-13 09:40:11'),
(38, 752, '3', 0.567108, 26, 1, '2017-09-13 09:40:15'),
(53, 2819, '1', -2.35, 13, 0, '2017-09-13 09:40:16'),
(38, 741, '3', -2.26247, 5, 0, '2017-09-13 09:40:20'),
(49, 1603, '2', 1.77515, 12, 1, '2017-09-13 09:40:20'),
(51, 1608, '3', 1.0662, 21, 1, '2017-09-13 09:40:21'),
(53, 2838, '3', 2.75, 5, 1, '2017-09-13 09:40:21'),
(42, 386, '0', -0.0075, 20, 0, '2017-09-13 09:40:24'),
(38, 746, '3', -2.37037, 4, 0, '2017-09-13 09:40:24'),
(49, 1599, '1', 2.29688, 6, 1, '2017-09-13 09:40:26'),
(38, 749, '0', 0, 5, -1, '2017-09-13 09:40:28'),
(51, 1605, '3', 2.25333, 8, 1, '2017-09-13 09:40:29'),
(53, 2823, '3', 2.3, 14, 1, '2017-09-13 09:40:35'),
(56, 1471, '1', -1.7, 26, 0, '2017-09-13 09:40:36'),
(38, 744, '1', -1.80187, 9, 0, '2017-09-13 09:40:38'),
(69, 2811, '4', -2.10012, 29, 0, '2017-09-13 09:40:40'),
(63, 1281, '1', 0, 30, 0, '2017-09-13 09:40:41'),
(63, 1208, '0', -0.5292, 30, 0, '2017-09-13 09:40:41'),
(51, 1606, '2', 1.84083, 13, 1, '2017-09-13 09:40:42'),
(48, 1773, '1', 0.807692, 38, 1, '2017-09-13 09:40:42'),
(42, 374, '0', -0.0075, 20, 0, '2017-09-13 09:40:44'),
(69, 2787, '3', -2.28, 12, 0, '2017-09-13 09:40:52'),
(49, 1614, '2', -0.643004, 29, 0, '2017-09-13 09:40:55'),
(69, 2776, '1', 2.46, 9, 1, '2017-09-13 09:41:01'),
(63, 1284, '0', -0.0075, 20, 0, '2017-09-13 09:41:02'),
(38, 774, '1', 0.630208, 26, 1, '2017-09-13 09:41:04'),
(51, 1601, '2', 1.55357, 27, 1, '2017-09-13 09:41:09'),
(42, 2404, '2', -1.49752, 27, 0, '2017-09-13 09:41:11'),
(49, 1602, '1', 1.33333, 20, 1, '2017-09-13 09:41:14'),
(42, 382, '3', -1.2675, 7, 0, '2017-09-13 09:41:18'),
(56, 1474, '0', -0.0714286, 42, 0, '2017-09-13 09:41:19'),
(63, 1293, '2', 0.1875, 18, 1, '2017-09-13 09:41:19'),
(53, 2733, '3', -0.85, 43, 0, '2017-09-13 09:41:19'),
(49, 1607, '1', 2.41142, 6, 1, '2017-09-13 09:41:21'),
(51, 1598, '1', 1.90385, 19, 1, '2017-09-13 09:41:28'),
(69, 2766, '2', -1.32, 28, 0, '2017-09-13 09:41:29'),
(48, 1732, '3', 0.107143, 54, 1, '2017-09-13 09:41:36'),
(53, 2735, '4', -2.15, 17, 0, '2017-09-13 09:41:36'),
(42, 390, '0', -0.0075, 20, 0, '2017-09-13 09:41:39'),
(51, 1609, '2', -2.1875, 13, 0, '2017-09-13 09:41:41'),
(53, 2732, '4', 2.55, 9, 1, '2017-09-13 09:41:45'),
(49, 1598, '1', 1.32692, 29, 1, '2017-09-13 09:41:50'),
(69, 2785, '1', -1.74, 21, 0, '2017-09-13 09:41:51'),
(51, 1614, '2', -2.33333, 12, 0, '2017-09-13 09:41:53'),
(38, 770, '0', -0.00130208, 48, 0, '2017-09-13 09:41:53'),
(42, 385, '4', -0.27, 14, 0, '2017-09-13 09:41:53'),
(63, 1200, '0', -0.00231481, 36, 0, '2017-09-13 09:41:55'),
(48, 1728, '2', 1.18421, 23, 1, '2017-09-13 09:41:59'),
(49, 1611, '3', -2.41304, 9, 0, '2017-09-13 09:41:59'),
(63, 1189, '3', 1.53061, 8, 1, '2017-09-13 09:42:04'),
(48, 1723, '4', 2.625, 6, 1, '2017-09-13 09:42:05'),
(51, 1613, '3', 2.35, 13, 1, '2017-09-13 09:42:06'),
(42, 372, '2', -0.27, 14, 0, '2017-09-13 09:42:07'),
(53, 2730, '4', 1.9, 22, 1, '2017-09-13 09:42:08'),
(49, 1601, '2', 2.41071, 11, 1, '2017-09-13 09:42:10'),
(69, 2767, '1', -1.68, 22, 0, '2017-09-13 09:42:12'),
(56, 1477, '0', -0.0555556, 54, 0, '2017-09-13 09:42:13'),
(51, 1617, '1', 2.47826, 8, 1, '2017-09-13 09:42:14'),
(49, 1600, '4', 2.53846, 8, 1, '2017-09-13 09:42:18'),
(38, 776, '4', -0.459357, 28, 0, '2017-09-13 09:42:21'),
(51, 1611, '4', 2.41304, 9, 1, '2017-09-13 09:42:23'),
(53, 2841, '3', 2.32743, 19, 1, '2017-09-13 09:42:27'),
(42, 1114, '2', 0, 20, 0, '2017-09-13 09:42:27'),
(42, 376, '0', -0.0075, 20, 0, '2017-09-13 09:42:27'),
(38, 760, '1', -2.04187, 7, 0, '2017-09-13 09:42:28'),
(56, 1486, '3', -1.70455, 19, 0, '2017-09-13 09:42:33'),
(48, 1775, '2', -0.2, 28, 0, '2017-09-13 09:42:33'),
(63, 1202, '3', -0.0833333, 30, 0, '2017-09-13 09:42:34'),
(49, 1606, '1', -2.1, 18, 0, '2017-09-13 09:42:36'),
(51, 1607, '1', 2.27586, 14, 1, '2017-09-13 09:42:37'),
(42, 375, '1', 0.6075, 11, 1, '2017-09-13 09:42:39'),
(53, 2845, '1', 2.25111, 21, 1, '2017-09-13 09:42:48'),
(69, 2790, '2', -0.84, 36, 0, '2017-09-13 09:42:49'),
(38, 769, '1', 0.819731, 21, 1, '2017-09-13 09:42:49'),
(48, 1752, '4', -1.86, 19, 0, '2017-09-13 09:42:52'),
(53, 2833, '3', 2.69195, 9, 1, '2017-09-13 09:42:57'),
(38, 470, '4', 1.92, 8, 1, '2017-09-13 09:42:58'),
(42, 1105, '0', -0.0075, 20, 0, '2017-09-13 09:42:59'),
(48, 1757, '4', -2.34783, 10, 0, '2017-09-13 09:43:02'),
(49, 1615, '3', 1.65517, 26, 1, '2017-09-13 09:43:02'),
(69, 2779, '1', 1.68, 22, 1, '2017-09-13 09:43:12'),
(56, 1475, '2', 0.0226843, 42, 1, '2017-09-13 09:43:16'),
(51, 1620, '2', -0.90856, 40, 0, '2017-09-13 09:43:17'),
(53, 2835, '3', 2.21246, 22, 1, '2017-09-13 09:43:19'),
(63, 1287, '0', -0.00130208, 48, 0, '2017-09-13 09:43:23'),
(48, 1774, '1', 1.05, 26, 1, '2017-09-13 09:43:27'),
(69, 2774, '1', -1.86, 19, 0, '2017-09-13 09:43:31'),
(53, 2852, '2', 2.58532, 12, 1, '2017-09-13 09:43:31'),
(56, 1480, '4', 1.14966, 16, 1, '2017-09-13 09:43:32'),
(38, 758, '3', 0, 38, 0, '2017-09-13 09:43:36'),
(51, 1602, '1', 2.05, 19, 1, '2017-09-13 09:43:36'),
(69, 2765, '1', -2.28, 12, 0, '2017-09-13 09:43:42'),
(56, 3008, '1', -1.2398, 10, 0, '2017-09-13 09:43:42'),
(51, 1627, '3', 2.62435, 8, 1, '2017-09-13 09:43:44'),
(51, 1636, '4', 2.69586, 8, 1, '2017-09-13 09:43:52'),
(49, 1612, '0', -0.0576923, 52, 0, '2017-09-13 09:43:54'),
(36, 1523, '1', -0.886106, 21, 0, '2017-09-13 09:43:55'),
(42, 2432, '1', -0.595289, 61, 0, '2017-09-13 09:44:00'),
(36, 1513, '3', 2.1888, 7, 1, '2017-09-13 09:44:02'),
(49, 1605, '3', 2.55, 9, 1, '2017-09-13 09:44:03'),
(51, 1656, '2', 2.43037, 13, 1, '2017-09-13 09:44:05'),
(38, 768, '3', 0.376302, 31, 1, '2017-09-13 09:44:07'),
(53, 2728, '4', 1.58309, 37, 1, '2017-09-13 09:44:09'),
(48, 1753, '4', 0.0681818, 43, 1, '2017-09-13 09:44:10'),
(63, 1269, '0', -0.00130208, 48, 0, '2017-09-13 09:44:11'),
(42, 2408, '3', 2.3255, 11, 1, '2017-09-13 09:44:12'),
(49, 1604, '2', 2.4375, 9, 1, '2017-09-13 09:44:12'),
(38, 766, '3', -2.20408, 6, 0, '2017-09-13 09:44:14'),
(48, 1750, '1', 2.625, 5, 1, '2017-09-13 09:44:15'),
(36, 1509, '1', -1.60207, 14, 0, '2017-09-13 09:44:16'),
(53, 2734, '3', 2.69195, 9, 1, '2017-09-13 09:44:17'),
(56, 1478, '2', 0.0075, 38, 1, '2017-09-13 09:44:20'),
(36, 1508, '1', -2.29688, 6, 0, '2017-09-13 09:44:22'),
(69, 2789, '1', -0.6, 40, 0, '2017-09-13 09:44:23'),
(48, 1734, '1', -2.54545, 10, 0, '2017-09-13 09:44:26'),
(38, 777, '2', 1.4518, 14, 1, '2017-09-13 09:44:27'),
(42, 395, '3', -0.0675, 17, 0, '2017-09-13 09:44:29'),
(49, 1626, '2', -2.24683, 19, 0, '2017-09-13 09:44:31'),
(69, 2758, '4', 1.20333, 11, 1, '2017-09-13 09:44:34'),
(51, 1626, '2', -1.74716, 30, 0, '2017-09-13 09:44:35'),
(36, 1520, '2', -1.6875, 14, 0, '2017-09-13 09:44:36'),
(42, 1137, '2', 1.2675, 7, 1, '2017-09-13 09:44:36'),
(51, 1651, '3', 2.72434, 7, 1, '2017-09-13 09:44:42'),
(53, 2883, '3', 2.25832, 26, 1, '2017-09-13 09:44:44'),
(36, 1516, '4', 1.85204, 9, 1, '2017-09-13 09:44:45'),
(69, 2777, '4', -2.28, 12, 0, '2017-09-13 09:44:46'),
(56, 1488, '2', 0.348657, 29, 1, '2017-09-13 09:44:49'),
(53, 2877, '2', 2.76586, 9, 1, '2017-09-13 09:44:53'),
(42, 398, '2', 0, 20, 0, '2017-09-13 09:44:56'),
(48, 1730, '4', 1.14, 31, 1, '2017-09-13 09:44:57'),
(69, 2750, '1', -0.963333, 13, 0, '2017-09-13 09:44:59'),
(42, 2422, '2', -2.63672, 8, 0, '2017-09-13 09:45:04'),
(63, 1265, '0', -0.00110947, 52, 0, '2017-09-13 09:45:04'),
(38, 492, '0', -0.001875, 40, 0, '2017-09-13 09:45:08'),
(69, 2746, '2', 1.33333, 10, 1, '2017-09-13 09:45:10'),
(56, 1484, '4', 0.613946, 23, 1, '2017-09-13 09:45:12'),
(51, 1619, '0', 0, 31, -1, '2017-09-13 09:45:13'),
(48, 1765, '4', 1.21429, 25, 1, '2017-09-13 09:45:22'),
(63, 1217, '0', -0.0075, 20, 0, '2017-09-13 09:45:25'),
(69, 2743, '4', 0.403333, 19, 1, '2017-09-13 09:45:28'),
(49, 1613, '0', 0, 59, -1, '2017-09-13 09:45:30'),
(36, 1528, '0', -0.00141777, 46, 0, '2017-09-13 09:45:31'),
(53, 2859, '1', -1.81659, 38, 0, '2017-09-13 09:45:31'),
(63, 1171, '3', -0.3675, 13, 0, '2017-09-13 09:45:38'),
(49, 1610, '2', -2.22, 13, 0, '2017-09-13 09:45:43'),
(51, 1621, '3', -1.63907, 31, 0, '2017-09-13 09:45:44'),
(42, 2429, '2', -1.35245, 46, 0, '2017-09-13 09:45:50'),
(51, 1631, '3', -2.68382, 8, 0, '2017-09-13 09:45:52'),
(53, 2884, '3', -2.44949, 20, 0, '2017-09-13 09:45:52'),
(56, 1472, '0', -0.001875, 40, 0, '2017-09-13 09:45:53'),
(38, 763, '0', -0.00141777, 46, 0, '2017-09-13 09:45:54'),
(69, 2745, '2', 0.00333333, 29, 1, '2017-09-13 09:45:58'),
(56, 1491, '1', -2.20408, 6, 0, '2017-09-13 09:46:00'),
(48, 1789, '4', -0.456522, 39, 0, '2017-09-13 09:46:00'),
(42, 2400, '3', 2.05959, 12, 1, '2017-09-13 09:46:03'),
(53, 2886, '1', 2.65518, 13, 1, '2017-09-13 09:46:05'),
(63, 1220, '0', -0.00382653, 28, 0, '2017-09-13 09:46:06'),
(48, 1743, '2', -2.54348, 7, 0, '2017-09-13 09:46:07'),
(69, 2737, '4', 0.75, 15, 1, '2017-09-13 09:46:14'),
(36, 1519, '1', -0.1875, 45, 0, '2017-09-13 09:46:16'),
(49, 1617, '2', -0.782609, 34, 0, '2017-09-13 09:46:16'),
(51, 1622, '4', 1.84461, 29, 1, '2017-09-13 09:46:21'),
(38, 773, '3', 0.567108, 26, 1, '2017-09-13 09:46:21'),
(42, 1115, '0', -0.0075, 20, 0, '2017-09-13 09:46:24'),
(38, 493, '1', 1.76333, 7, 1, '2017-09-13 09:46:28'),
(53, 2888, '3', 2.35584, 23, 1, '2017-09-13 09:46:28'),
(56, 1468, '3', -0.091875, 33, 0, '2017-09-13 09:46:33'),
(63, 1175, '2', -0.046875, 28, 0, '2017-09-13 09:46:34'),
(38, 762, '2', -2.1675, 6, 0, '2017-09-13 09:46:34'),
(48, 1766, '2', -1.15909, 27, 0, '2017-09-13 09:46:35'),
(38, 775, '3', -1.94093, 9, 0, '2017-09-13 09:46:43'),
(42, 401, '3', 0, 20, 0, '2017-09-13 09:46:43'),
(51, 1628, '1', 1.77867, 25, 1, '2017-09-13 09:46:46'),
(69, 2780, '1', 0.9, 35, 1, '2017-09-13 09:46:48'),
(48, 1790, '2', -2.07692, 16, 0, '2017-09-13 09:46:51'),
(53, 2889, '4', -2.29129, 25, 0, '2017-09-13 09:46:54'),
(49, 1608, '1', -0.75, 39, 0, '2017-09-13 09:46:55'),
(38, 765, '3', -1.36688, 13, 0, '2017-09-13 09:46:56'),
(42, 380, '3', -0.03, 18, 0, '2017-09-13 09:47:02'),
(56, 1483, '3', -0.00831025, 36, 0, '2017-09-13 09:47:09'),
(42, 2406, '1', -2.41774, 9, 0, '2017-09-13 09:47:10'),
(69, 2768, '1', -1.56, 24, 0, '2017-09-13 09:47:13'),
(38, 491, '2', -0.531856, 22, 0, '2017-09-13 09:47:19'),
(53, 2855, '4', 2.19089, 28, 1, '2017-09-13 09:47:22'),
(36, 3407, '1', 0.403333, 19, 1, '2017-09-13 09:47:24'),
(56, 3002, '3', -0.284024, 18, 0, '2017-09-13 09:47:28'),
(49, 1620, '2', -1, 32, 0, '2017-09-13 09:47:28'),
(38, 772, '3', 1.88021, 10, 1, '2017-09-13 09:47:29'),
(42, 379, '1', -0.0075, 19, 0, '2017-09-13 09:47:30'),
(38, 759, '4', -2.38327, 5, 0, '2017-09-13 09:47:33'),
(51, 1625, '0', -0.22714, 48, 0, '2017-09-13 09:47:34'),
(69, 2752, '4', -0.27, 21, 0, '2017-09-13 09:47:34'),
(36, 3405, '1', 1.33333, 10, 1, '2017-09-13 09:47:34'),
(63, 1250, '0', -0.000833333, 60, 0, '2017-09-13 09:47:35'),
(49, 1631, '2', -2.53846, 8, 0, '2017-09-13 09:47:36'),
(42, 377, '0', 0, 6, -1, '2017-09-13 09:47:36'),
(69, 2759, '2', 2.25333, 4, 1, '2017-09-13 09:47:38'),
(69, 2772, '4', -2.7, 5, 0, '2017-09-13 09:47:43'),
(38, 761, '3', 1.54395, 13, 1, '2017-09-13 09:47:47'),
(53, 2874, '3', -2.22486, 27, 0, '2017-09-13 09:47:49'),
(38, 488, '1', -2.22454, 5, 0, '2017-09-13 09:47:52'),
(36, 3400, '1', 0.292969, 22, 1, '2017-09-13 09:47:57'),
(49, 1630, '1', -1.36957, 25, 0, '2017-09-13 09:48:01'),
(69, 2763, '1', 0.48, 18, 1, '2017-09-13 09:48:02'),
(38, 484, '1', 1.36248, 15, 1, '2017-09-13 09:48:07'),
(56, 1481, '0', -0.001875, 40, 0, '2017-09-13 09:48:08'),
(36, 3397, '1', -0.949219, 14, 0, '2017-09-13 09:48:10'),
(69, 2751, '2', 0.963333, 13, 1, '2017-09-13 09:48:14'),
(36, 3410, '3', -2.08333, 5, 0, '2017-09-13 09:48:16'),
(38, 471, '2', 1.47, 9, 1, '2017-09-13 09:48:16'),
(53, 2862, '0', 0, 31, -1, '2017-09-13 09:48:21'),
(63, 1204, '0', -0.00130208, 48, 0, '2017-09-13 09:48:24'),
(36, 3409, '4', -0.75, 15, 0, '2017-09-13 09:48:30'),
(51, 1640, '0', -0.195743, 60, 0, '2017-09-13 09:48:34'),
(63, 1176, '3', -0.860969, 13, 0, '2017-09-13 09:48:37'),
(56, 1479, '3', 0.303719, 30, 1, '2017-09-13 09:48:39'),
(69, 2814, '4', -1.88571, 26, 0, '2017-09-13 09:48:41'),
(36, 3416, '2', -0.853333, 14, 0, '2017-09-13 09:48:44'),
(53, 2864, '1', -2.22486, 27, 0, '2017-09-13 09:48:48'),
(38, 771, '2', -0.277883, 32, 0, '2017-09-13 09:48:49'),
(63, 1296, '1', -0.520833, 14, 0, '2017-09-13 09:48:51'),
(49, 1621, '0', -0.00110947, 52, 0, '2017-09-13 09:48:53'),
(69, 2740, '4', -1.08, 12, 0, '2017-09-13 09:48:53'),
(51, 1618, '1', -2.08644, 21, 0, '2017-09-13 09:48:55'),
(51, 1630, '0', 0, 6, -1, '2017-09-13 09:49:01'),
(42, 2419, '4', -0.240833, 86, 0, '2017-09-13 09:49:03'),
(53, 2861, '2', 2.59808, 15, 1, '2017-09-13 09:49:03'),
(56, 1503, '2', 0.625236, 25, 1, '2017-09-13 09:49:04'),
(36, 3403, '4', -0.292969, 22, 0, '2017-09-13 09:49:07'),
(49, 1619, '1', 1.43787, 16, 1, '2017-09-13 09:49:09'),
(53, 2868, '2', 2.79285, 8, 1, '2017-09-13 09:49:11'),
(36, 3406, '3', -1.61333, 8, 0, '2017-09-13 09:49:15'),
(42, 1131, '1', 0.03, 18, 1, '2017-09-13 09:49:21'),
(69, 2738, '0', -0.00333333, 30, 0, '2017-09-13 09:49:23'),
(36, 3415, '2', -1.47, 9, 0, '2017-09-13 09:49:24'),
(42, 402, '0', 0, 9, -1, '2017-09-13 09:49:31'),
(36, 3413, '4', 1.61333, 8, 1, '2017-09-13 09:49:31'),
(69, 2754, '1', 1.61333, 8, 1, '2017-09-13 09:49:31'),
(38, 767, '2', -0.0325521, 43, 0, '2017-09-13 09:49:31'),
(38, 764, '1', -2.37037, 4, 0, '2017-09-13 09:49:36'),
(42, 2416, '3', 2.35692, 10, 1, '2017-09-13 09:49:40'),
(36, 3404, '4', 1.41797, 10, 1, '2017-09-13 09:49:41'),
(38, 789, '3', -2.40755, 5, 0, '2017-09-13 09:49:41'),
(63, 1275, '0', -0.00102881, 54, 0, '2017-09-13 09:49:46'),
(49, 1636, '4', 0.888889, 38, 1, '2017-09-13 09:49:47'),
(36, 3401, '1', -1.29199, 11, 0, '2017-09-13 09:49:53'),
(56, 1507, '0', -0.00110947, 52, 0, '2017-09-13 09:49:57'),
(69, 2796, '4', 1.13204, 27, 1, '2017-09-13 09:49:59'),
(42, 381, '0', -0.0075, 20, 0, '2017-09-13 09:50:00'),
(36, 3408, '1', -1.33333, 10, 0, '2017-09-13 09:50:02'),
(63, 1187, '1', -0.495117, 19, 0, '2017-09-13 09:50:05'),
(51, 1645, '0', -0.1875, 64, 0, '2017-09-13 09:50:05'),
(42, 2418, '2', 2.36297, 9, 1, '2017-09-13 09:50:09'),
(53, 2879, '0', -0.387298, 60, 0, '2017-09-13 09:50:12'),
(42, 1104, '3', 2.1675, 3, 1, '2017-09-13 09:50:13'),
(56, 2947, '3', 0.48, 18, 1, '2017-09-13 09:50:15'),
(36, 3411, '4', -0.653333, 16, 0, '2017-09-13 09:50:19'),
(42, 1130, '2', 1.08, 8, 1, '2017-09-13 09:50:21'),
(69, 2800, '2', 2.01429, 23, 1, '2017-09-13 09:50:22'),
(42, 368, '3', 1.47, 6, 1, '2017-09-13 09:50:27'),
(36, 3399, '3', -1.5498, 9, 0, '2017-09-13 09:50:28'),
(36, 3398, '3', -1.6875, 8, 0, '2017-09-13 09:50:35'),
(53, 2885, '1', -2.32379, 24, 0, '2017-09-13 09:50:36'),
(51, 1624, '2', -1.51014, 36, 0, '2017-09-13 09:50:41'),
(69, 2807, '3', 2.18571, 19, 1, '2017-09-13 09:50:41'),
(53, 2882, '1', 2.81957, 7, 1, '2017-09-13 09:50:43');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(63, 1289, '0', -0.001875, 40, 0, '2017-09-13 09:50:45'),
(49, 1645, '0', -0.046875, 64, 0, '2017-09-13 09:50:51'),
(69, 2813, '3', 2.57143, 10, 1, '2017-09-13 09:50:51'),
(53, 2887, '2', -2.73861, 10, 0, '2017-09-13 09:50:54'),
(56, 1502, '0', -0.00141777, 46, 0, '2017-09-13 09:51:02'),
(69, 2797, '3', 2.44286, 13, 1, '2017-09-13 09:51:04'),
(36, 3412, '0', -0.00333333, 30, 0, '2017-09-13 09:51:06'),
(69, 2802, '3', 2.78571, 5, 1, '2017-09-13 09:51:10'),
(51, 1654, '1', -1.56006, 30, 0, '2017-09-13 09:51:11'),
(56, 1496, '4', 1.6875, 11, 1, '2017-09-13 09:51:13'),
(36, 3402, '1', 1.29199, 11, 1, '2017-09-13 09:51:17'),
(49, 1618, '1', -1.14, 31, 0, '2017-09-13 09:51:22'),
(69, 2808, '1', -2.61601, 13, 0, '2017-09-13 09:51:22'),
(36, 3414, '2', 1.76333, 7, 1, '2017-09-13 09:51:24'),
(53, 2881, '3', -2.08567, 31, 0, '2017-09-13 09:51:24'),
(49, 1640, '1', -2.65, 7, 0, '2017-09-13 09:51:29'),
(36, 3428, '1', -2.12138, 7, 0, '2017-09-13 09:51:31'),
(49, 1624, '4', 2.39158, 6, 1, '2017-09-13 09:51:35'),
(51, 1629, '3', 1.77867, 25, 1, '2017-09-13 09:51:36'),
(53, 2866, '4', 2.41868, 21, 1, '2017-09-13 09:51:46'),
(36, 3432, '3', -1.04752, 18, 0, '2017-09-13 09:51:49'),
(69, 2809, '3', -1.84286, 27, 0, '2017-09-13 09:51:50'),
(49, 1622, '4', 2.14286, 16, 1, '2017-09-13 09:51:51'),
(63, 1299, '0', -0.000688705, 66, 0, '2017-09-13 09:51:52'),
(69, 2806, '1', -2.52857, 11, 0, '2017-09-13 09:52:00'),
(36, 3422, '3', 1.3032, 15, 1, '2017-09-13 09:52:04'),
(49, 1656, '2', 2.1875, 13, 1, '2017-09-13 09:52:04'),
(53, 2871, '1', -2.44949, 20, 0, '2017-09-13 09:52:06'),
(42, 2427, '1', -0.0352083, 107, 0, '2017-09-13 09:52:16'),
(69, 2793, '4', -2.22857, 18, 0, '2017-09-13 09:52:19'),
(49, 1629, '3', 1.43478, 24, 1, '2017-09-13 09:52:27'),
(69, 2812, '3', 2.48571, 12, 1, '2017-09-13 09:52:31'),
(36, 3433, '4', -0.303719, 30, 0, '2017-09-13 09:52:33'),
(42, 396, '2', -0.03, 18, 0, '2017-09-13 09:52:34'),
(69, 2818, '3', 2.61429, 9, 1, '2017-09-13 09:52:40'),
(49, 1628, '1', 1.95652, 16, 1, '2017-09-13 09:52:44'),
(42, 1139, '2', 0.1875, 15, 1, '2017-09-13 09:52:49'),
(69, 2792, '3', 2.57143, 10, 1, '2017-09-13 09:52:51'),
(36, 3430, '1', 0.892562, 20, 1, '2017-09-13 09:52:54'),
(49, 1651, '3', 2.01923, 17, 1, '2017-09-13 09:53:00'),
(36, 3419, '3', -1.89824, 9, 0, '2017-09-13 09:53:02'),
(69, 2810, '4', 2.30032, 23, 1, '2017-09-13 09:53:13'),
(36, 3421, '4', 0.892562, 20, 1, '2017-09-13 09:53:22'),
(69, 2795, '3', 2.58532, 14, 1, '2017-09-13 09:53:27'),
(69, 2805, '1', 2.58532, 14, 1, '2017-09-13 09:53:41'),
(36, 3417, '1', -0.559401, 25, 0, '2017-09-13 09:53:47'),
(69, 2799, '2', -2.64652, 12, 0, '2017-09-13 09:53:54'),
(36, 3420, '3', -2.12138, 7, 0, '2017-09-13 09:53:54'),
(69, 2794, '2', -2.67685, 11, 0, '2017-09-13 09:54:05'),
(42, 2411, '0', 0, 83, -1, '2017-09-13 09:54:12'),
(69, 2826, '1', -2.69195, 12, 0, '2017-09-13 09:54:17'),
(42, 391, '1', -0.12, 16, 0, '2017-09-13 09:54:29'),
(69, 2830, '4', -2.50389, 19, 0, '2017-09-13 09:54:36'),
(42, 389, '0', -0.0075, 20, 0, '2017-09-13 09:54:49'),
(42, 369, '2', 1.92, 4, 1, '2017-09-13 09:54:53'),
(42, 400, '1', -0.3675, 13, 0, '2017-09-13 09:55:06'),
(42, 370, '4', -1.08, 8, 0, '2017-09-13 09:55:15'),
(69, 2829, '4', -1.5375, 39, 0, '2017-09-13 09:55:15'),
(51, 1198, '1', -0.03, 18, 0, '2017-09-13 09:55:21'),
(69, 2842, '1', 2.775, 6, 1, '2017-09-13 09:55:22'),
(53, 1216, '4', 0.130208, 19, 1, '2017-09-13 09:55:23'),
(49, 1174, '1', -0.0710059, 22, 0, '2017-09-13 09:55:31'),
(69, 2822, '1', -2.6625, 9, 0, '2017-09-13 09:55:31'),
(53, 1197, '3', -0.880208, 11, 0, '2017-09-13 09:55:34'),
(42, 1116, '0', -0.0075, 20, 0, '2017-09-13 09:55:35'),
(42, 1109, '2', 0, 20, 0, '2017-09-13 09:55:35'),
(69, 2849, '1', -2.7, 8, 0, '2017-09-13 09:55:39'),
(49, 1173, '2', 0.6075, 11, 1, '2017-09-13 09:55:41'),
(42, 373, '2', -1.08, 8, 0, '2017-09-13 09:55:43'),
(51, 1270, '1', -0.409735, 29, 0, '2017-09-13 09:55:50'),
(53, 1183, '2', 0.0247934, 20, 1, '2017-09-13 09:55:55'),
(42, 2413, '2', -2.15643, 14, 0, '2017-09-13 09:55:57'),
(69, 2844, '1', 2.1375, 23, 1, '2017-09-13 09:56:02'),
(69, 2827, '1', 2.7375, 7, 1, '2017-09-13 09:56:09'),
(49, 1185, '0', -0.00382653, 28, 0, '2017-09-13 09:56:10'),
(69, 2836, '1', -2.85, 4, 0, '2017-09-13 09:56:13'),
(42, 378, '4', -0.0075, 19, 0, '2017-09-13 09:56:17'),
(53, 1210, '0', -0.00520833, 24, 0, '2017-09-13 09:56:19'),
(42, 1110, '2', 1.92, 4, 1, '2017-09-13 09:56:20'),
(51, 1261, '0', -0.00207756, 38, 0, '2017-09-13 09:56:28'),
(49, 1170, '2', 0.0833333, 20, 1, '2017-09-13 09:56:30'),
(42, 1133, '4', -0.6075, 11, 0, '2017-09-13 09:56:31'),
(42, 1107, '4', 1.6875, 5, 1, '2017-09-13 09:56:37'),
(53, 1218, '0', -0.0075, 20, 0, '2017-09-13 09:56:40'),
(53, 1173, '2', 1.92, 4, 1, '2017-09-13 09:56:44'),
(42, 384, '2', -0.3675, 13, 0, '2017-09-13 09:56:49'),
(51, 1174, '0', 0, 22, -1, '2017-09-13 09:56:50'),
(42, 2403, '2', 2.73926, 4, 1, '2017-09-13 09:56:53'),
(53, 1169, '2', 0.880208, 11, 1, '2017-09-13 09:56:56'),
(49, 1203, '3', 0.00333333, 29, 1, '2017-09-13 09:56:59'),
(51, 1183, '2', 0.396694, 14, 1, '2017-09-13 09:57:05'),
(42, 397, '1', -0.48, 12, 0, '2017-09-13 09:57:06'),
(53, 1185, '0', -0.00382653, 28, 0, '2017-09-13 09:57:24'),
(51, 1292, '3', -0.333333, 20, 0, '2017-09-13 09:57:25'),
(42, 1136, '0', -0.0075, 20, 0, '2017-09-13 09:57:26'),
(49, 1263, '0', -0.001875, 40, 0, '2017-09-13 09:57:39'),
(51, 1263, '3', -0.826875, 19, 0, '2017-09-13 09:57:44'),
(42, 394, '3', -0.03, 18, 0, '2017-09-13 09:57:44'),
(53, 1276, '4', -0.0263672, 29, 0, '2017-09-13 09:57:53'),
(49, 1184, '4', 0.0833333, 20, 1, '2017-09-13 09:57:59'),
(42, 392, '0', -0.0075, 20, 0, '2017-09-13 09:58:04'),
(53, 1198, '0', -0.0075, 20, 0, '2017-09-13 09:58:13'),
(51, 1297, '3', 0.700833, 31, 1, '2017-09-13 09:58:15'),
(42, 1122, '1', -0.27, 14, 0, '2017-09-13 09:58:19'),
(49, 1195, '0', -0.0075, 20, 0, '2017-09-13 09:58:19'),
(49, 1177, '4', -0.303719, 15, 0, '2017-09-13 09:58:33'),
(42, 371, '2', -0.12, 16, 0, '2017-09-13 09:58:35'),
(51, 1184, '4', 0.0833333, 20, 1, '2017-09-13 09:58:35'),
(49, 1196, '4', 1.17188, 9, 1, '2017-09-13 09:58:43'),
(51, 1197, '1', 0.630208, 13, 1, '2017-09-13 09:58:47'),
(53, 1263, '0', -0.001875, 40, 0, '2017-09-13 09:58:54'),
(42, 399, '0', -0.0075, 20, 0, '2017-09-13 09:58:55'),
(51, 1172, '4', 0.75, 10, 1, '2017-09-13 09:58:57'),
(49, 1210, '1', 0.1875, 18, 1, '2017-09-13 09:59:01'),
(51, 1194, '1', 1.2398, 10, 1, '2017-09-13 09:59:07'),
(42, 367, '1', -0.3675, 13, 0, '2017-09-13 09:59:08'),
(53, 1172, '1', -0.27, 14, 0, '2017-09-13 09:59:08'),
(51, 1291, '3', -0.6075, 11, 0, '2017-09-13 09:59:18'),
(49, 1186, '3', 0.0956633, 23, 1, '2017-09-13 09:59:24'),
(53, 1292, '1', 0.563333, 17, 1, '2017-09-13 09:59:25'),
(42, 393, '0', -0.0075, 20, 0, '2017-09-13 09:59:28'),
(42, 1140, '3', -1.47, 6, 0, '2017-09-13 09:59:34'),
(53, 1184, '4', 1.02083, 10, 1, '2017-09-13 09:59:35'),
(51, 1170, '2', 0.0833333, 20, 1, '2017-09-13 09:59:38'),
(49, 1291, '4', 0.1875, 15, 1, '2017-09-13 09:59:39'),
(51, 1218, '1', -1.92, 4, 0, '2017-09-13 09:59:42'),
(53, 1174, '3', 1.13609, 10, 1, '2017-09-13 09:59:45'),
(51, 1190, '4', 1.2398, 10, 1, '2017-09-13 09:59:52'),
(42, 383, '2', 0, 20, 0, '2017-09-13 09:59:54'),
(53, 1177, '2', 0.619835, 12, 1, '2017-09-13 09:59:57'),
(42, 364, '2', 2.1675, 3, 1, '2017-09-13 09:59:58'),
(49, 1218, '0', -0.0075, 20, 0, '2017-09-13 09:59:59'),
(49, 1297, '4', -1.33333, 20, 0, '2017-09-13 09:59:59'),
(42, 366, '4', 1.08, 8, 1, '2017-09-13 10:00:05'),
(49, 1172, '4', 1.08, 8, 1, '2017-09-13 10:00:07'),
(53, 1194, '1', 1.2398, 10, 1, '2017-09-13 10:00:07'),
(51, 1195, '2', 0, 20, 0, '2017-09-13 10:00:12'),
(42, 1117, '2', 1.08, 8, 1, '2017-09-13 10:00:13'),
(53, 1196, '4', 1.33333, 8, 1, '2017-09-13 10:00:16'),
(51, 1177, '2', 1.04752, 9, 1, '2017-09-13 10:00:21'),
(42, 388, '4', -0.27, 14, 0, '2017-09-13 10:00:28'),
(49, 1292, '3', -0.213333, 22, 0, '2017-09-13 10:00:28'),
(42, 363, '3', 2.1675, 3, 1, '2017-09-13 10:00:31'),
(42, 1152, '1', -1.95, 7, 0, '2017-09-13 10:00:37'),
(53, 1227, '0', -0.00520833, 24, 0, '2017-09-13 10:00:40'),
(51, 1210, '0', 0, 21, -1, '2017-09-13 10:00:42'),
(49, 1198, '4', 0.27, 14, 1, '2017-09-13 10:00:43'),
(51, 1173, '2', 2.1675, 3, 1, '2017-09-13 10:00:45'),
(42, 1138, '2', 0.9075, 9, 1, '2017-09-13 10:00:46'),
(42, 1112, '4', 0.75, 10, 1, '2017-09-13 10:00:57'),
(53, 1186, '3', 0.137755, 22, 1, '2017-09-13 10:01:02'),
(51, 1185, '4', 0.0956633, 23, 1, '2017-09-13 10:01:08'),
(51, 1216, '4', 1.17188, 9, 1, '2017-09-13 10:01:17'),
(42, 1146, '0', -0.15, 20, 0, '2017-09-13 10:01:18'),
(49, 1261, '0', -0.00207756, 38, 0, '2017-09-13 10:01:21'),
(53, 1291, '0', -0.0075, 20, 0, '2017-09-13 10:01:22'),
(42, 1153, '2', 1.05, 13, 1, '2017-09-13 10:01:30'),
(42, 1144, '4', -1.8, 8, 0, '2017-09-13 10:01:38'),
(49, 1270, '3', -0.625236, 25, 0, '2017-09-13 10:01:46'),
(51, 1203, '0', -0.00333333, 30, 0, '2017-09-13 10:01:47'),
(49, 1190, '4', 1.2398, 10, 1, '2017-09-13 10:01:55'),
(53, 1297, '3', 0.48, 36, 1, '2017-09-13 10:01:59'),
(51, 1227, '0', -0.00520833, 24, 0, '2017-09-13 10:02:11'),
(49, 1197, '2', -0.1875, 18, 0, '2017-09-13 10:02:14'),
(49, 1216, '3', -0.0208333, 22, 0, '2017-09-13 10:02:36'),
(53, 1261, '0', -0.00207756, 38, 0, '2017-09-13 10:02:37'),
(51, 1276, '0', -0.00292969, 32, 0, '2017-09-13 10:02:43'),
(49, 1194, '0', -0.00382653, 28, 0, '2017-09-13 10:03:04'),
(53, 1203, '3', 0.0133333, 28, 1, '2017-09-13 10:03:05'),
(51, 1196, '4', 0.00520833, 23, 1, '2017-09-13 10:03:06'),
(49, 1183, '2', 0.892562, 10, 1, '2017-09-13 10:03:14'),
(51, 1186, '3', 1.10587, 11, 1, '2017-09-13 10:03:17'),
(53, 1190, '4', 0.75, 14, 1, '2017-09-13 10:03:20'),
(53, 1195, '4', 0.6075, 11, 1, '2017-09-13 10:03:31'),
(49, 1169, '2', 0.1875, 18, 1, '2017-09-13 10:03:32'),
(51, 1169, '2', 0.333333, 16, 1, '2017-09-13 10:03:33'),
(51, 1219, '1', -0.892562, 10, 0, '2017-09-13 10:03:43'),
(53, 1170, '2', 0.520833, 14, 1, '2017-09-13 10:03:45'),
(51, 1265, '0', 0, 6, -1, '2017-09-13 10:03:49'),
(49, 1227, '0', 0, 19, -1, '2017-09-13 10:03:51'),
(51, 1294, '3', 1.02083, 10, 1, '2017-09-13 10:03:59'),
(53, 1189, '3', 1.5, 14, 1, '2017-09-13 10:04:00'),
(51, 1217, '3', 0.3675, 13, 1, '2017-09-13 10:04:12'),
(49, 1276, '0', -0.00292969, 32, 0, '2017-09-13 10:04:23'),
(53, 1208, '3', -1.02, 33, 0, '2017-09-13 10:04:32'),
(51, 1208, '1', 0.1728, 38, 1, '2017-09-13 10:04:50'),
(51, 1189, '3', 1.10587, 11, 1, '2017-09-13 10:05:01'),
(49, 1287, '0', -0.00130208, 48, 0, '2017-09-13 10:05:11'),
(53, 1265, '3', -0.346154, 46, 0, '2017-09-13 10:05:19'),
(49, 1220, '1', -0.860969, 13, 0, '2017-09-13 10:05:24'),
(49, 1219, '3', 1.21488, 8, 1, '2017-09-13 10:05:32'),
(49, 1257, '0', 0, 8, -1, '2017-09-13 10:05:40'),
(51, 1257, '0', -0.00130208, 48, 0, '2017-09-13 10:05:49'),
(53, 1281, '0', -0.1, 30, 0, '2017-09-13 10:05:50'),
(51, 1171, '4', 1.2675, 7, 1, '2017-09-13 10:05:56'),
(49, 1293, '2', 0.255208, 17, 1, '2017-09-13 10:05:57'),
(53, 1175, '4', 1.96875, 11, 1, '2017-09-13 10:06:01'),
(49, 1217, '1', -0.9075, 9, 0, '2017-09-13 10:06:06'),
(53, 1293, '3', -1.625, 11, 0, '2017-09-13 10:06:12'),
(49, 1268, '3', -0.688802, 25, 0, '2017-09-13 10:06:31'),
(51, 1269, '0', -0.00130208, 48, 0, '2017-09-13 10:06:44'),
(53, 1268, '2', -0.125, 46, 0, '2017-09-13 10:06:59'),
(53, 1191, '3', 1.28571, 16, 1, '2017-09-13 10:07:15'),
(51, 1202, '1', 0.037037, 32, 1, '2017-09-13 10:07:16'),
(49, 1265, '0', -0.00110947, 52, 0, '2017-09-13 10:07:23'),
(49, 1294, '3', 0.75, 12, 1, '2017-09-13 10:07:35'),
(53, 1220, '1', -0.321429, 25, 0, '2017-09-13 10:07:40'),
(53, 1219, '0', 0, 5, -1, '2017-09-13 10:07:45'),
(49, 1175, '4', 0.046875, 28, 1, '2017-09-13 10:08:04'),
(51, 1268, '0', -0.00130208, 48, 0, '2017-09-13 10:08:04'),
(51, 1191, '3', 1.53061, 8, 1, '2017-09-13 10:08:12'),
(53, 1200, '0', -0.0833333, 36, 0, '2017-09-13 10:08:22'),
(51, 1200, '2', -0.333333, 32, 0, '2017-09-13 10:08:44'),
(49, 1208, '2', -0.03, 45, 0, '2017-09-13 10:08:49'),
(53, 1202, '1', 0.166667, 34, 1, '2017-09-13 10:08:56'),
(51, 1284, '3', 0.45, 17, 1, '2017-09-13 10:09:01'),
(49, 1284, '4', -0.0075, 19, 0, '2017-09-13 10:09:08'),
(49, 1171, '4', 1.2675, 7, 1, '2017-09-13 10:09:15'),
(53, 1199, '2', -0.65625, 25, 0, '2017-09-13 10:09:22'),
(49, 1191, '3', 1.10587, 11, 1, '2017-09-13 10:09:26'),
(51, 1287, '0', -0.0625, 48, 0, '2017-09-13 10:09:49'),
(49, 1199, '3', 0.046875, 28, 1, '2017-09-13 10:09:54'),
(51, 1220, '1', -1.60714, 13, 0, '2017-09-13 10:10:02'),
(49, 1200, '2', -0.925926, 16, 0, '2017-09-13 10:10:10'),
(53, 1257, '0', -0.0625, 48, 0, '2017-09-13 10:10:11'),
(51, 1293, '2', 0.520833, 14, 1, '2017-09-13 10:10:16'),
(49, 1282, '1', -0.75, 15, 0, '2017-09-13 10:10:25'),
(53, 1294, '3', 0.75, 18, 1, '2017-09-13 10:10:28'),
(51, 1281, '1', -0.4, 26, 0, '2017-09-13 10:10:42'),
(53, 1282, '4', -1.5, 15, 0, '2017-09-13 10:10:43'),
(49, 1202, '1', 0.668981, 19, 1, '2017-09-13 10:10:44'),
(51, 1199, '3', 1.125, 20, 1, '2017-09-13 10:11:02'),
(49, 1281, '1', -0.48, 18, 0, '2017-09-13 10:11:02'),
(49, 1189, '1', -0.1875, 21, 0, '2017-09-13 10:11:23'),
(53, 1270, '0', -0.00141777, 46, 0, '2017-09-13 10:11:30'),
(51, 1282, '0', -0.1, 30, 0, '2017-09-13 10:11:32'),
(53, 1171, '4', 1.2675, 7, 1, '2017-09-13 10:11:37'),
(51, 1175, '4', 0.28125, 29, 1, '2017-09-13 10:12:01'),
(49, 1269, '0', -0.00130208, 48, 0, '2017-09-13 10:12:11'),
(53, 1287, '2', -0.375, 42, 0, '2017-09-13 10:12:19'),
(53, 1217, '0', 0, 8, -1, '2017-09-13 10:12:28'),
(51, 1250, '0', -0.05, 60, 0, '2017-09-13 10:13:01'),
(49, 1209, '0', -0.0012, 50, 0, '2017-09-13 10:13:01'),
(53, 1269, '0', -0.0625, 48, 0, '2017-09-13 10:13:17'),
(51, 1298, '1', 1.7, 26, 1, '2017-09-13 10:13:27'),
(53, 1284, '3', 0.75, 15, 1, '2017-09-13 10:13:31'),
(49, 173, '0', 0, 37, -1, '2017-09-13 10:13:38'),
(51, 1295, '4', 0.25, 22, 1, '2017-09-13 10:13:49'),
(53, 1283, '4', 0.5, 20, 1, '2017-09-13 10:13:52'),
(51, 1188, '1', 2.03571, 9, 1, '2017-09-13 10:13:58'),
(51, 1296, '4', -0.75, 18, 0, '2017-09-13 10:14:16'),
(49, 172, '2', 1.11298, 43, 1, '2017-09-13 10:14:20'),
(49, 1295, '3', -0.75, 12, 0, '2017-09-13 10:14:33'),
(53, 1204, '1', 0, 48, 0, '2017-09-13 10:14:40'),
(51, 1209, '0', -0.06, 50, 0, '2017-09-13 10:15:06'),
(51, 1187, '1', -1.96875, 11, 0, '2017-09-13 10:15:17'),
(49, 1286, '0', -0.000833333, 60, 0, '2017-09-13 10:15:33'),
(49, 1296, '0', -0.00520833, 24, 0, '2017-09-13 10:15:57'),
(53, 173, '3', -0.57, 81, 0, '2017-09-13 10:16:02'),
(51, 1206, '1', -0.6, 48, 0, '2017-09-13 10:16:05'),
(51, 1283, '4', 0.25, 22, 1, '2017-09-13 10:16:27'),
(53, 1298, '1', 1.05, 39, 1, '2017-09-13 10:16:42'),
(53, 1176, '0', 0, 10, -1, '2017-09-13 10:16:53'),
(49, 1299, '2', -0.000688705, 65, 0, '2017-09-13 10:17:01'),
(53, 1296, '3', -0.125, 23, 0, '2017-09-13 10:17:15'),
(49, 1187, '1', -0.949219, 14, 0, '2017-09-13 10:17:16'),
(51, 1264, '0', -0.0454545, 66, 0, '2017-09-13 10:17:34'),
(51, 1176, '4', 1.82143, 11, 1, '2017-09-13 10:17:44'),
(53, 1286, '0', -0.05, 60, 0, '2017-09-13 10:18:16'),
(49, 1264, '0', -0.000688705, 66, 0, '2017-09-13 10:18:22'),
(51, 1286, '0', -0.05, 60, 0, '2017-09-13 10:18:44'),
(49, 171, '4', -0.75, 40, 0, '2017-09-13 10:19:02'),
(53, 1209, '2', 0.24, 46, 1, '2017-09-13 10:19:03'),
(51, 1299, '3', 1.90909, 24, 1, '2017-09-13 10:19:08'),
(49, 1229, '0', -0.00102881, 54, 0, '2017-09-13 10:19:56'),
(53, 171, '1', 0.15, 76, 1, '2017-09-13 10:20:20'),
(72, 1169, '2', 0.75, 12, 1, '2017-09-17 11:38:39'),
(72, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:38:40'),
(72, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:38:40'),
(72, 1198, '4', 0.75, 10, 1, '2017-09-17 11:38:40'),
(72, 1184, '4', 1.02083, 10, 1, '2017-09-17 11:38:40'),
(72, 1173, '2', 0.75, 10, 1, '2017-09-17 11:38:40'),
(72, 1297, '3', 2.00083, 11, 1, '2017-09-17 11:38:40'),
(72, 1261, '2', -0.207756, 28, 0, '2017-09-17 11:38:40'),
(72, 1195, '4', 0.3675, 13, 1, '2017-09-17 11:38:40'),
(72, 1218, '4', 0.9075, 9, 1, '2017-09-17 11:38:40'),
(72, 1174, '3', 1.13609, 10, 1, '2017-09-17 11:38:40'),
(72, 1291, '4', 0.48, 12, 1, '2017-09-17 11:38:40'),
(72, 1216, '3', -0.0208333, 22, 0, '2017-09-17 11:38:40'),
(72, 1270, '3', -0.239603, 33, 0, '2017-09-17 11:38:40'),
(72, 1185, '4', 0.382653, 18, 1, '2017-09-17 11:38:40'),
(72, 1170, '2', 1.17188, 9, 1, '2017-09-17 11:38:40'),
(72, 1194, '1', 1.6875, 7, 1, '2017-09-17 11:38:41'),
(72, 1202, '3', -1.33333, 20, 0, '2017-09-17 11:38:41'),
(72, 1276, '2', -0.046875, 28, 0, '2017-09-17 11:38:41'),
(72, 1177, '2', 0.502066, 13, 1, '2017-09-17 11:38:41'),
(72, 1265, '4', -0.807692, 38, 0, '2017-09-17 11:38:41'),
(72, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:38:41'),
(72, 1186, '3', 0.979592, 12, 1, '2017-09-17 11:38:41'),
(72, 1257, '2', -0.0625, 47, 0, '2017-09-17 11:38:41'),
(72, 1287, '4', -1.1875, 29, 0, '2017-09-17 11:38:41'),
(72, 1292, '1', 0.333333, 20, 1, '2017-09-17 11:38:41'),
(72, 1263, '0', -0.001875, 40, 0, '2017-09-17 11:38:41'),
(72, 1197, '1', 0.421875, 15, 1, '2017-09-17 11:38:41'),
(72, 1190, '4', 1.10587, 11, 1, '2017-09-17 11:38:41'),
(72, 1189, '3', 2.35714, 6, 1, '2017-09-17 11:38:42'),
(72, 1284, '3', 1.5, 10, 1, '2017-09-17 11:38:42'),
(72, 1217, '3', 1.65, 9, 1, '2017-09-17 11:38:42'),
(72, 1191, '3', 2.25, 7, 1, '2017-09-17 11:38:42'),
(72, 1293, '2', 1.625, 11, 1, '2017-09-17 11:38:42'),
(72, 1299, '3', 2.21952, 24, 1, '2017-09-17 11:38:42'),
(72, 1188, '1', 1.88988, 14, 1, '2017-09-17 11:38:42'),
(72, 1206, '3', -1.53686, 38, 0, '2017-09-17 11:38:42'),
(72, 1204, '4', 2.38385, 14, 1, '2017-09-17 11:38:42'),
(72, 1295, '1', -1.67358, 14, 0, '2017-09-17 11:38:42'),
(72, 173, '0', 0, 38, -1, '2017-09-17 11:38:42'),
(72, 1289, '0', 0, 38, -1, '2017-09-17 11:38:42'),
(72, 1264, '1', -1.69381, 38, 0, '2017-09-17 11:38:43'),
(72, 1286, '4', 1.62865, 36, 1, '2017-09-17 11:38:43'),
(72, 1296, '0', 0, 7, -1, '2017-09-17 11:38:43'),
(72, 1176, '4', 2.55445, 6, 1, '2017-09-17 11:38:43'),
(72, 171, '4', -1.79417, 43, 0, '2017-09-17 11:38:43'),
(72, 1298, '1', 0.493242, 56, 1, '2017-09-17 11:38:43'),
(72, 172, '4', -2.06897, 47, 0, '2017-09-17 11:38:43'),
(72, 1209, '4', -1.40353, 34, 0, '2017-09-17 11:38:43'),
(72, 1283, '4', 1.78337, 13, 1, '2017-09-17 11:38:43'),
(72, 1229, '0', -0.209987, 54, 0, '2017-09-17 11:38:43'),
(72, 1187, '3', -1.47214, 21, 0, '2017-09-17 11:38:43'),
(72, 1250, '1', 1.02599, 48, 1, '2017-09-17 11:38:43'),
(72, 1275, '3', -1.74716, 30, 0, '2017-09-17 11:38:43'),
(72, 1262, '3', 1.19055, 39, 1, '2017-09-17 11:38:43'),
(72, 169, '2', 2.28943, 16, 1, '2017-09-17 11:38:43'),
(72, 1267, '3', -1.55014, 44, 0, '2017-09-17 11:38:44'),
(72, 1285, '0', -0.310723, 30, 0, '2017-09-17 11:38:44'),
(72, 1246, '3', 1.29416, 43, 1, '2017-09-17 11:38:44'),
(72, 1207, '0', -0.1875, 64, 0, '2017-09-17 11:38:44'),
(72, 1235, '4', 1.16638, 50, 1, '2017-09-17 11:38:44'),
(72, 1249, '4', 2.05084, 20, 1, '2017-09-17 11:38:44'),
(72, 1462, '1', 1.36688, 13, 1, '2017-09-17 11:38:44'),
(72, 1456, '1', 0.9075, 18, 1, '2017-09-17 11:38:44'),
(72, 1460, '1', 0.625236, 25, 1, '2017-09-17 11:38:44'),
(72, 1453, '1', 2.2188, 7, 1, '2017-09-17 11:38:44'),
(72, 2929, '4', 1.88021, 5, 1, '2017-09-17 11:38:44'),
(72, 3004, '3', 1.61333, 8, 1, '2017-09-17 11:38:44'),
(72, 1449, '3', -1.2675, 14, 0, '2017-09-17 11:38:44'),
(72, 1463, '2', 1.6875, 11, 1, '2017-09-17 11:38:45'),
(72, 1452, '2', 0.991875, 17, 1, '2017-09-17 11:38:45'),
(72, 1476, '2', -2.25, 13, 0, '2017-09-17 11:38:45'),
(72, 1457, '4', 2.04187, 7, 1, '2017-09-17 11:38:45'),
(72, 1450, '4', 1.94676, 7, 1, '2017-09-17 11:38:45'),
(72, 1485, '3', -2.53846, 8, 0, '2017-09-17 11:38:45'),
(72, 3044, '3', 1.88021, 5, 1, '2017-09-17 11:38:45'),
(72, 1483, '3', -2.21053, 10, 0, '2017-09-17 11:38:45'),
(72, 1454, '1', -0.668981, 19, 0, '2017-09-17 11:38:45'),
(72, 3035, '4', -1.2398, 10, 0, '2017-09-17 11:38:45'),
(72, 3039, '2', -0.536982, 15, 0, '2017-09-17 11:38:45'),
(72, 1458, '1', -1.22454, 13, 0, '2017-09-17 11:38:45'),
(72, 1466, '2', 0.3468, 33, 1, '2017-09-17 11:38:45'),
(72, 1459, '3', -1.92, 8, 0, '2017-09-17 11:38:45'),
(72, 1464, '3', -1.02083, 20, 0, '2017-09-17 11:38:45'),
(72, 1461, '3', 2.26843, 6, 1, '2017-09-17 11:38:46'),
(72, 1451, '1', 0.835648, 17, 1, '2017-09-17 11:38:46'),
(72, 3051, '0', -0.00443787, 26, 0, '2017-09-17 11:38:46'),
(72, 1465, '2', -0.860969, 13, 0, '2017-09-17 11:38:46'),
(72, 1455, '1', 1.92, 8, 1, '2017-09-17 11:38:46'),
(72, 1467, '3', 0.75, 30, 1, '2017-09-17 11:38:46'),
(72, 1475, '4', -1.11153, 18, 0, '2017-09-17 11:38:46'),
(72, 3008, '1', -0.75, 14, 0, '2017-09-17 11:38:46'),
(72, 1482, '3', -2.00826, 8, 0, '2017-09-17 11:38:46'),
(72, 1477, '1', -0.124486, 43, 0, '2017-09-17 11:38:46'),
(72, 1491, '1', -2.45578, 4, 0, '2017-09-17 11:38:46'),
(72, 1471, '4', 1.6875, 15, 1, '2017-09-17 11:38:46'),
(72, 1487, '3', -1.54395, 13, 0, '2017-09-17 11:38:47'),
(72, 1474, '2', 0.979592, 18, 1, '2017-09-17 11:38:47'),
(72, 3002, '3', -0.0399408, 23, 0, '2017-09-17 11:38:47'),
(72, 1470, '1', 1.47, 15, 1, '2017-09-17 11:38:47'),
(72, 1486, '4', -1.89824, 9, 0, '2017-09-17 11:38:47'),
(72, 3000, '3', 1.33333, 8, 1, '2017-09-17 11:38:47'),
(72, 1469, '1', -1.57687, 11, 0, '2017-09-17 11:38:47'),
(72, 1472, '4', -1.80187, 9, 0, '2017-09-17 11:38:47'),
(72, 1481, '3', -1.2675, 14, 0, '2017-09-17 11:38:47'),
(72, 1473, '2', -1.5552, 14, 0, '2017-09-17 11:38:47'),
(72, 1468, '2', 0.9075, 18, 1, '2017-09-17 11:38:47'),
(72, 1478, '2', 0.316875, 27, 1, '2017-09-17 11:38:48'),
(72, 1484, '2', -1.96599, 8, 0, '2017-09-17 11:38:48'),
(72, 1488, '2', 1.04752, 18, 1, '2017-09-17 11:38:48'),
(72, 2933, '2', 1.02083, 10, 1, '2017-09-17 11:38:48'),
(72, 1480, '4', 0.823129, 20, 1, '2017-09-17 11:38:48'),
(72, 1479, '1', -0.619835, 24, 0, '2017-09-17 11:38:48'),
(72, 1496, '4', 1.89824, 9, 1, '2017-09-17 11:38:48'),
(72, 1503, '2', 0.0127599, 43, 1, '2017-09-17 11:38:48'),
(72, 1494, '4', 1.86981, 8, 1, '2017-09-17 11:38:48'),
(72, 1502, '1', -1.4518, 14, 0, '2017-09-17 11:38:48'),
(72, 1500, '4', 0.24963, 37, 1, '2017-09-17 11:38:48'),
(72, 2947, '3', 1.76333, 7, 1, '2017-09-17 11:38:48'),
(72, 1490, '1', 1.58678, 12, 1, '2017-09-17 11:38:48'),
(72, 1504, '1', 2.56687, 6, 1, '2017-09-17 11:38:48'),
(72, 1493, '1', -0.151875, 31, 0, '2017-09-17 11:38:49'),
(72, 1505, '1', 2.7075, 4, 1, '2017-09-17 11:38:49'),
(72, 1501, '1', -1.3032, 15, 0, '2017-09-17 11:38:49'),
(72, 1498, '3', 0.421875, 30, 1, '2017-09-17 11:38:49'),
(72, 1499, '3', -1.27599, 16, 0, '2017-09-17 11:38:49'),
(72, 1489, '3', -0.0833333, 35, 0, '2017-09-17 11:38:49'),
(72, 1497, '2', 0.89966, 19, 1, '2017-09-17 11:38:49'),
(72, 1495, '3', -1.53061, 12, 0, '2017-09-17 11:38:49'),
(72, 3062, '4', -0.65918, 17, 0, '2017-09-17 11:38:49'),
(72, 1492, '2', 1.6875, 11, 1, '2017-09-17 11:38:49'),
(72, 3054, '3', -0.403333, 19, 0, '2017-09-17 11:38:49'),
(72, 1506, '1', 1.47, 15, 1, '2017-09-17 11:38:49'),
(72, 3076, '1', 1.47, 9, 1, '2017-09-17 11:38:50'),
(72, 1507, '1', 1.38462, 28, 1, '2017-09-17 11:38:50'),
(72, 1523, '3', 2.21739, 12, 1, '2017-09-17 11:38:50'),
(72, 1520, '2', -2.57143, 8, 0, '2017-09-17 11:38:50'),
(72, 1514, '3', -0.681818, 34, 0, '2017-09-17 11:38:50'),
(72, 1521, '2', -1.23214, 33, 0, '2017-09-17 11:38:50'),
(72, 1509, '1', -2.05141, 9, 0, '2017-09-17 11:38:50'),
(72, 1513, '3', 1.98047, 9, 1, '2017-09-17 11:38:50'),
(72, 1525, '1', 0.303719, 30, 1, '2017-09-17 11:38:50'),
(72, 1528, '4', -0.75, 23, 0, '2017-09-17 11:38:50'),
(72, 1512, '4', -0.586908, 29, 0, '2017-09-17 11:38:50'),
(72, 1511, '1', 0.403333, 38, 1, '2017-09-17 11:38:50'),
(72, 1508, '1', -2.40755, 5, 0, '2017-09-17 11:38:50'),
(72, 1519, '4', -0.853333, 28, 0, '2017-09-17 11:38:50'),
(72, 1527, '2', -1.6081, 15, 0, '2017-09-17 11:38:51'),
(72, 1515, '1', 2.29688, 5, 1, '2017-09-17 11:38:51'),
(72, 1522, '4', 1.41797, 15, 1, '2017-09-17 11:38:51'),
(72, 1516, '4', 1.33333, 14, 1, '2017-09-17 11:38:51'),
(72, 1510, '2', 1.3591, 17, 1, '2017-09-17 11:38:51'),
(72, 1518, '1', -2.42857, 8, 0, '2017-09-17 11:38:51'),
(72, 1524, '4', -1.6875, 11, 0, '2017-09-17 11:38:51'),
(72, 1517, '1', 1.72942, 13, 1, '2017-09-17 11:38:51'),
(72, 2607, '4', 1.80187, 9, 1, '2017-09-17 11:38:51'),
(72, 2610, '3', 1.6875, 10, 1, '2017-09-17 11:38:51'),
(72, 2606, '1', 2.1675, 6, 1, '2017-09-17 11:38:51'),
(72, 2601, '2', 2.56687, 3, 1, '2017-09-17 11:38:51'),
(72, 2604, '1', -2.29688, 5, 0, '2017-09-17 11:38:51'),
(72, 2603, '2', -1.92, 8, 0, '2017-09-17 11:38:52'),
(72, 2612, '1', 1.92, 8, 1, '2017-09-17 11:38:52'),
(72, 2609, '2', 1.92, 8, 1, '2017-09-17 11:38:52'),
(72, 2602, '1', -2.29688, 5, 0, '2017-09-17 11:38:52'),
(72, 2613, '4', 2.29688, 5, 1, '2017-09-17 11:38:52'),
(72, 2605, '2', 2.43, 4, 1, '2017-09-17 11:38:52'),
(72, 2628, '3', -2.5, 10, 0, '2017-09-17 11:38:52'),
(72, 2614, '4', 2.1675, 6, 1, '2017-09-17 11:38:52'),
(72, 2615, '1', 1.6875, 10, 1, '2017-09-17 11:38:52'),
(72, 2620, '4', 2.6, 8, 1, '2017-09-17 11:38:52'),
(72, 2630, '2', 2.6, 8, 1, '2017-09-17 11:38:52'),
(72, 2624, '2', 2.65, 7, 1, '2017-09-17 11:38:52'),
(72, 2621, '3', 2.6, 8, 1, '2017-09-17 11:38:52'),
(72, 2841, '3', 2.86514, 4, 1, '2017-09-17 11:38:53'),
(72, 2734, '2', -2.79651, 6, 0, '2017-09-17 11:38:53'),
(72, 2733, '2', 2.32743, 19, 1, '2017-09-17 11:38:53'),
(72, 2833, '3', 2.69195, 9, 1, '2017-09-17 11:38:53'),
(72, 2838, '3', 2.83093, 5, 1, '2017-09-17 11:38:53'),
(72, 2819, '2', 2.83093, 5, 1, '2017-09-17 11:38:53'),
(72, 2825, '3', 2.65665, 10, 1, '2017-09-17 11:38:53'),
(72, 2866, '4', 2.84605, 6, 1, '2017-09-17 11:38:53'),
(72, 2865, '3', 2.84605, 6, 1, '2017-09-17 11:38:53'),
(72, 2868, '2', 2.84605, 6, 1, '2017-09-17 11:38:53'),
(72, 2881, '0', 0, 10, -1, '2017-09-17 11:38:53'),
(72, 2855, '0', 0, 0, -1, '2017-09-17 11:38:53'),
(72, 2883, '4', -2.59808, 15, 0, '2017-09-17 11:38:53'),
(72, 2879, '2', 2.73861, 10, 1, '2017-09-17 11:38:53'),
(72, 2870, '3', 2.84605, 6, 1, '2017-09-17 11:38:54'),
(72, 2890, '4', 2.72082, 13, 1, '2017-09-17 11:38:54'),
(72, 2904, '3', 2.3903, 26, 1, '2017-09-17 11:38:54'),
(72, 2907, '3', 2.62572, 17, 1, '2017-09-17 11:38:54'),
(72, 2901, '4', 2.91834, 4, 1, '2017-09-17 11:38:54'),
(72, 2918, '1', -2.82311, 10, 0, '2017-09-17 11:38:54'),
(72, 2896, '1', -2.87619, 6, 0, '2017-09-17 11:38:54'),
(72, 2905, '4', -2.62572, 17, 0, '2017-09-17 11:38:54'),
(72, 2892, '2', 2.64998, 16, 1, '2017-09-17 11:38:54'),
(72, 2902, '2', 2.49905, 22, 1, '2017-09-17 11:38:54'),
(72, 2898, '1', -2.89738, 5, 0, '2017-09-17 11:38:54'),
(72, 2900, '1', -2.69752, 14, 0, '2017-09-17 11:38:54'),
(72, 2894, '1', -2.44558, 24, 0, '2017-09-17 11:38:54'),
(72, 2895, '2', 2.81118, 9, 1, '2017-09-17 11:38:54'),
(72, 2908, '4', -2.85477, 7, 0, '2017-09-17 11:38:54'),
(72, 2893, '4', 2.91834, 4, 1, '2017-09-17 11:38:55'),
(72, 2899, '4', -2.93908, 3, 0, '2017-09-17 11:38:55'),
(72, 2891, '1', 2.89738, 5, 1, '2017-09-17 11:38:55'),
(72, 2903, '1', -2.81118, 9, 0, '2017-09-17 11:38:55'),
(72, 2897, '1', -1.97128, 39, 0, '2017-09-17 11:38:55'),
(72, 2885, '4', 2.81957, 7, 1, '2017-09-17 11:38:55'),
(72, 2909, '3', -2.3903, 26, 0, '2017-09-17 11:38:55'),
(72, 2859, '2', 2.62679, 14, 1, '2017-09-17 11:38:55'),
(72, 2906, '3', -2.789, 10, 0, '2017-09-17 11:38:55'),
(72, 2864, '0', 0, 14, -1, '2017-09-17 11:38:55'),
(72, 2888, '0', 0, 12, -1, '2017-09-17 11:38:55'),
(72, 2862, '3', -2.53969, 17, 0, '2017-09-17 11:38:55'),
(72, 2884, '4', -2.73861, 10, 0, '2017-09-17 11:38:55'),
(72, 2871, '4', -2.65518, 13, 0, '2017-09-17 11:38:55'),
(72, 2861, '2', 2.81957, 7, 1, '2017-09-17 11:38:56'),
(72, 2874, '4', -2.38747, 22, 0, '2017-09-17 11:38:56'),
(72, 2877, '2', 2.84605, 6, 1, '2017-09-17 11:38:56'),
(72, 2886, '1', 2.89828, 4, 1, '2017-09-17 11:38:56'),
(72, 2882, '1', 2.53969, 17, 1, '2017-09-17 11:38:56'),
(72, 2914, '1', 2.74383, 12, 1, '2017-09-17 11:38:56'),
(72, 2926, '3', 2.60112, 18, 1, '2017-09-17 11:38:56'),
(72, 2910, '2', -2.81118, 9, 0, '2017-09-17 11:38:56'),
(72, 2928, '1', -2.6739, 15, 0, '2017-09-17 11:38:56'),
(72, 2911, '1', 2.87619, 6, 1, '2017-09-17 11:38:56'),
(72, 2931, '4', 2.8331, 8, 1, '2017-09-17 11:38:56'),
(72, 2923, '3', 2.85477, 7, 1, '2017-09-17 11:38:56'),
(72, 2924, '2', 2.69752, 14, 1, '2017-09-17 11:38:57'),
(72, 1317, '2', -2.1675, 9, 0, '2017-09-17 11:38:57'),
(72, 1124, '1', -2.1675, 9, 0, '2017-09-17 11:38:57'),
(72, 594, '3', 2.3232, 6, 1, '2017-09-17 11:38:57'),
(72, 854, '1', 2.50776, 6, 1, '2017-09-17 11:38:57'),
(72, 1091, '2', -2.52083, 5, 0, '2017-09-17 11:38:57'),
(72, 600, '3', 1.76881, 13, 1, '2017-09-17 11:38:57'),
(72, 597, '4', -2.37037, 6, 0, '2017-09-17 11:38:57'),
(72, 1089, '4', -1.33333, 20, 0, '2017-09-17 11:38:57'),
(72, 607, '3', 1.85204, 12, 1, '2017-09-17 11:38:57'),
(72, 852, '2', -2.34083, 7, 0, '2017-09-17 11:38:57'),
(72, 609, '2', 1.76333, 14, 1, '2017-09-17 11:38:58'),
(72, 603, '4', -2.24667, 7, 0, '2017-09-17 11:38:58'),
(72, 996, '4', -2.6508, 3, 0, '2017-09-17 11:38:58'),
(72, 622, '1', -2.34083, 7, 0, '2017-09-17 11:38:58'),
(72, 598, '3', -2.34083, 7, 0, '2017-09-17 11:38:58'),
(73, 386, '0', -0.0075, 20, 0, '2017-09-17 11:38:58'),
(73, 402, '2', -1.08, 8, 0, '2017-09-17 11:38:58'),
(73, 1104, '3', 1.47, 6, 1, '2017-09-17 11:38:58'),
(73, 384, '2', -0.3675, 13, 0, '2017-09-17 11:38:58'),
(73, 1115, '1', 1.08, 8, 1, '2017-09-17 11:38:59'),
(73, 374, '4', 0.75, 10, 1, '2017-09-17 11:38:59'),
(73, 365, '4', -0.0675, 17, 0, '2017-09-17 11:38:59'),
(73, 1109, '2', -1.2675, 7, 0, '2017-09-17 11:38:59'),
(73, 368, '3', 0.75, 10, 1, '2017-09-17 11:38:59'),
(73, 2406, '4', -2.2376, 12, 0, '2017-09-17 11:39:00'),
(73, 364, '2', 1.08, 8, 1, '2017-09-17 11:39:00'),
(73, 373, '3', -0.75, 10, 0, '2017-09-17 11:39:00'),
(73, 2408, '2', -1.99374, 17, 0, '2017-09-17 11:39:00'),
(73, 377, '0', -0.0075, 20, 0, '2017-09-17 11:39:00'),
(73, 380, '4', -0.3675, 13, 0, '2017-09-17 11:39:00'),
(73, 394, '0', -0.0075, 20, 0, '2017-09-17 11:39:00'),
(73, 2416, '3', 2.17911, 13, 1, '2017-09-17 11:39:00'),
(73, 1120, '4', -0.6075, 11, 0, '2017-09-17 11:39:00'),
(73, 2400, '3', 2.74837, 3, 1, '2017-09-17 11:39:01'),
(73, 372, '4', 0.0675, 17, 1, '2017-09-17 11:39:01'),
(73, 2404, '3', -2.38327, 10, 0, '2017-09-17 11:39:01'),
(73, 2403, '2', 2.31148, 11, 1, '2017-09-17 11:39:01'),
(73, 396, '0', -0.0075, 20, 0, '2017-09-17 11:39:01'),
(73, 375, '1', 0.75, 10, 1, '2017-09-17 11:39:01'),
(73, 379, '3', 0.3675, 13, 1, '2017-09-17 11:39:01'),
(73, 398, '0', -0.0075, 20, 0, '2017-09-17 11:39:01'),
(73, 383, '2', -0.3675, 13, 0, '2017-09-17 11:39:01'),
(73, 366, '1', -0.1875, 15, 0, '2017-09-17 11:39:01'),
(73, 390, '2', -0.0075, 19, 0, '2017-09-17 11:39:01'),
(73, 392, '0', 0, 19, -1, '2017-09-17 11:39:01'),
(73, 371, '3', -0.1875, 15, 0, '2017-09-17 11:39:01'),
(73, 2410, '1', -2.52083, 7, 0, '2017-09-17 11:39:02'),
(73, 385, '4', 0, 20, 0, '2017-09-17 11:39:02'),
(73, 1117, '2', 1.08, 8, 1, '2017-09-17 11:39:02'),
(73, 1122, '4', 0.3675, 13, 1, '2017-09-17 11:39:02'),
(73, 1138, '0', -0.0075, 20, 0, '2017-09-17 11:39:02'),
(73, 2422, '3', -2.21558, 18, 0, '2017-09-17 11:39:02'),
(73, 1136, '1', -0.0075, 19, 0, '2017-09-17 11:39:02'),
(73, 2432, '4', 2.05314, 19, 1, '2017-09-17 11:39:02'),
(73, 395, '4', -0.0675, 17, 0, '2017-09-17 11:39:02'),
(73, 393, '0', -0.0075, 20, 0, '2017-09-17 11:39:02'),
(73, 389, '1', -0.03, 18, 0, '2017-09-17 11:39:02'),
(73, 382, '4', 1.08, 8, 1, '2017-09-17 11:39:02'),
(73, 400, '4', 0.9075, 9, 1, '2017-09-17 11:39:03'),
(73, 370, '4', -1.08, 8, 0, '2017-09-17 11:39:03'),
(73, 2418, '2', 2.56687, 6, 1, '2017-09-17 11:39:03'),
(73, 363, '3', 1.92, 4, 1, '2017-09-17 11:39:03'),
(73, 1139, '0', 0, 17, -1, '2017-09-17 11:39:03'),
(73, 2411, '1', -1.32124, 37, 0, '2017-09-17 11:39:03'),
(73, 1131, '1', 0.12, 16, 1, '2017-09-17 11:39:03'),
(73, 391, '1', -0.0675, 17, 0, '2017-09-17 11:39:03'),
(73, 2419, '3', -1.47, 36, 0, '2017-09-17 11:39:03'),
(73, 2413, '2', -1.78674, 21, 0, '2017-09-17 11:39:03'),
(73, 387, '3', -0.3675, 13, 0, '2017-09-17 11:39:03'),
(73, 1112, '1', -1.08, 8, 0, '2017-09-17 11:39:03'),
(73, 2427, '3', -0.800833, 58, 0, '2017-09-17 11:39:03'),
(73, 1114, '3', -0.9075, 9, 0, '2017-09-17 11:39:03'),
(73, 378, '3', -0.03, 18, 0, '2017-09-17 11:39:03'),
(73, 399, '0', -0.0075, 20, 0, '2017-09-17 11:39:03'),
(73, 376, '1', -0.12, 16, 0, '2017-09-17 11:39:04'),
(73, 1130, '1', -0.27, 14, 0, '2017-09-17 11:39:04'),
(73, 381, '0', -0.0075, 20, 0, '2017-09-17 11:39:04'),
(73, 1105, '2', 1.08, 8, 1, '2017-09-17 11:39:04'),
(73, 388, '0', -0.0075, 20, 0, '2017-09-17 11:39:04'),
(73, 1107, '4', 0.1875, 15, 1, '2017-09-17 11:39:04'),
(73, 2420, '3', 2.1888, 14, 1, '2017-09-17 11:39:04'),
(73, 1110, '2', 1.47, 6, 1, '2017-09-17 11:39:04'),
(73, 367, '0', 0, 13, -1, '2017-09-17 11:39:04'),
(73, 1137, '3', -0.75, 10, 0, '2017-09-17 11:39:04'),
(73, 369, '2', 1.6875, 5, 1, '2017-09-17 11:39:04'),
(73, 1121, '2', -0.12, 16, 0, '2017-09-17 11:39:04'),
(73, 2414, '3', 1.04752, 36, 1, '2017-09-17 11:39:04'),
(73, 2429, '3', -1.81852, 31, 0, '2017-09-17 11:39:04'),
(73, 1140, '3', -0.0675, 17, 0, '2017-09-17 11:39:04'),
(73, 1133, '3', 1.47, 6, 1, '2017-09-17 11:39:05'),
(73, 397, '0', -0.0075, 20, 0, '2017-09-17 11:39:05'),
(73, 2431, '4', 1.27599, 32, 1, '2017-09-17 11:39:05'),
(73, 996, '4', -2.3232, 6, 0, '2017-09-17 11:39:05'),
(73, 1091, '4', 2.00083, 11, 1, '2017-09-17 11:39:05'),
(73, 1317, '2', -1.76333, 14, 0, '2017-09-17 11:39:05'),
(73, 602, '3', -1.17188, 24, 0, '2017-09-17 11:39:05'),
(73, 598, '1', -1.47, 18, 0, '2017-09-17 11:39:05'),
(73, 597, '1', -1.26029, 19, 0, '2017-09-17 11:39:05'),
(73, 606, '1', -1.61333, 16, 0, '2017-09-17 11:39:05'),
(73, 600, '3', 1.6081, 15, 1, '2017-09-17 11:39:05'),
(73, 595, '4', 1.20821, 19, 1, '2017-09-17 11:39:05'),
(73, 594, '3', 2.0172, 9, 1, '2017-09-17 11:39:05'),
(73, 1310, '3', -1.0662, 21, 0, '2017-09-17 11:39:05'),
(73, 1311, '4', 0.8112, 24, 1, '2017-09-17 11:39:05'),
(73, 601, '4', 1.6875, 14, 1, '2017-09-17 11:39:06'),
(73, 619, '2', -1.02083, 25, 0, '2017-09-17 11:39:06'),
(73, 614, '2', -2.08333, 9, 0, '2017-09-17 11:39:06'),
(73, 853, '2', 1.08, 24, 1, '2017-09-17 11:39:06'),
(73, 599, '1', 0.700833, 31, 1, '2017-09-17 11:39:06'),
(73, 593, '1', 2.25333, 8, 1, '2017-09-17 11:39:06'),
(73, 605, '4', -1.61333, 16, 0, '2017-09-17 11:39:06'),
(73, 1124, '1', -1.6875, 15, 0, '2017-09-17 11:39:06'),
(73, 603, '1', 0.869823, 24, 1, '2017-09-17 11:39:06'),
(73, 604, '3', 1.47, 18, 1, '2017-09-17 11:39:06'),
(73, 852, '2', -0.140833, 47, 0, '2017-09-17 11:39:06'),
(73, 609, '1', -0.75, 30, 0, '2017-09-17 11:39:06'),
(73, 850, '2', -0.653333, 32, 0, '2017-09-17 11:39:07'),
(73, 1089, '4', -2.43, 6, 0, '2017-09-17 11:39:07'),
(73, 615, '3', -0.9075, 27, 0, '2017-09-17 11:39:07'),
(73, 622, '2', 1.40083, 19, 1, '2017-09-17 11:39:07'),
(73, 1318, '2', 1.30963, 19, 1, '2017-09-17 11:39:07'),
(73, 403, '4', 1.54083, 17, 1, '2017-09-17 11:39:07'),
(73, 1308, '3', 2.00083, 11, 1, '2017-09-17 11:39:07'),
(73, 611, '4', -1.47, 15, 0, '2017-09-17 11:39:07'),
(73, 1301, '3', 1.48315, 19, 1, '2017-09-17 11:39:07'),
(73, 607, '2', -0.55102, 32, 0, '2017-09-17 11:39:08'),
(73, 613, '3', -1.84083, 13, 0, '2017-09-17 11:39:08'),
(73, 2611, '4', -2.1675, 6, 0, '2017-09-17 11:39:08'),
(73, 2603, '1', 1.80187, 9, 1, '2017-09-17 11:39:08'),
(73, 2610, '4', -2.04187, 7, 0, '2017-09-17 11:39:08'),
(73, 2612, '2', -1.80187, 9, 0, '2017-09-17 11:39:08'),
(73, 2614, '4', 0.826875, 19, 1, '2017-09-17 11:39:08'),
(73, 2604, '1', -1.80187, 9, 0, '2017-09-17 11:39:08'),
(73, 2609, '1', -1.47, 12, 0, '2017-09-17 11:39:08'),
(73, 2607, '2', -1.17188, 15, 0, '2017-09-17 11:39:08'),
(73, 2615, '2', -1.2675, 14, 0, '2017-09-17 11:39:08'),
(73, 2608, '4', -2.04187, 7, 0, '2017-09-17 11:39:08'),
(73, 733, '3', 0.9075, 18, 1, '2017-09-17 11:39:08'),
(73, 726, '1', 1.25606, 12, 1, '2017-09-17 11:39:08'),
(73, 472, '3', -1.92, 8, 0, '2017-09-17 11:39:09'),
(73, 465, '3', -0.963333, 13, 0, '2017-09-17 11:39:09'),
(73, 735, '3', -0.653333, 16, 0, '2017-09-17 11:39:09'),
(73, 737, '4', 0.091875, 33, 1, '2017-09-17 11:39:09'),
(73, 727, '4', -1.33333, 12, 0, '2017-09-17 11:39:09'),
(73, 498, '0', 0, 21, -1, '2017-09-17 11:39:09'),
(73, 485, '2', -2.15643, 7, 0, '2017-09-17 11:39:09'),
(73, 723, '1', 1.6875, 9, 1, '2017-09-17 11:39:09'),
(73, 734, '3', -0.963333, 13, 0, '2017-09-17 11:39:09'),
(73, 725, '2', -0.66436, 18, 0, '2017-09-17 11:39:09'),
(73, 722, '3', 1.6875, 9, 1, '2017-09-17 11:39:09'),
(73, 486, '3', -1.81481, 8, 0, '2017-09-17 11:39:09'),
(73, 728, '4', -1.00554, 16, 0, '2017-09-17 11:39:09'),
(73, 509, '2', -1.22454, 13, 0, '2017-09-17 11:39:09'),
(73, 732, '2', -0.0208333, 33, 0, '2017-09-17 11:39:09'),
(73, 466, '1', -0.563333, 17, 0, '2017-09-17 11:39:10'),
(73, 736, '2', -1.49481, 10, 0, '2017-09-17 11:39:10'),
(73, 724, '4', -1.76333, 7, 0, '2017-09-17 11:39:10'),
(73, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:39:10'),
(73, 1169, '4', -1.02083, 10, 0, '2017-09-17 11:39:10'),
(73, 1186, '3', 1.38138, 9, 1, '2017-09-17 11:39:10'),
(73, 1261, '2', -0.0519391, 33, 0, '2017-09-17 11:39:10'),
(73, 1177, '2', 1.04752, 9, 1, '2017-09-17 11:39:10'),
(73, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:39:10'),
(73, 1183, '2', 0.154959, 17, 1, '2017-09-17 11:39:10'),
(73, 1173, '2', 0.12, 16, 1, '2017-09-17 11:39:10'),
(73, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:39:10'),
(73, 1190, '3', -0.55102, 16, 0, '2017-09-17 11:39:10'),
(73, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:39:11'),
(73, 1216, '2', -1.17188, 9, 0, '2017-09-17 11:39:11'),
(73, 1276, '1', 1.5498, 9, 1, '2017-09-17 11:39:11'),
(73, 1263, '2', -0.421875, 25, 0, '2017-09-17 11:39:11'),
(73, 1170, '1', -0.75, 12, 0, '2017-09-17 11:39:11'),
(73, 1297, '3', 2.08333, 10, 1, '2017-09-17 11:39:11'),
(73, 1195, '1', -0.12, 16, 0, '2017-09-17 11:39:11'),
(73, 1194, '1', 1.10587, 11, 1, '2017-09-17 11:39:11'),
(73, 1292, '2', -0.48, 18, 0, '2017-09-17 11:39:11'),
(73, 1172, '2', -0.6075, 11, 0, '2017-09-17 11:39:11'),
(73, 1184, '4', 0.0208333, 22, 1, '2017-09-17 11:39:11'),
(73, 1270, '3', -0.00141777, 45, 0, '2017-09-17 11:39:11'),
(73, 1196, '4', 0.1875, 18, 1, '2017-09-17 11:39:11'),
(73, 1291, '0', -0.0075, 20, 0, '2017-09-17 11:39:12'),
(73, 1174, '3', 1.28254, 9, 1, '2017-09-17 11:39:12'),
(73, 1198, '2', -0.6075, 11, 0, '2017-09-17 11:39:12'),
(73, 1218, '3', -0.3675, 13, 0, '2017-09-17 11:39:12'),
(73, 1197, '3', -1.02083, 10, 0, '2017-09-17 11:39:12'),
(73, 1265, '3', -0.536982, 30, 0, '2017-09-17 11:39:12'),
(73, 1208, '2', -0.1452, 39, 0, '2017-09-17 11:39:12'),
(73, 1220, '1', -1.53061, 8, 0, '2017-09-17 11:39:12'),
(73, 1219, '4', -0.619835, 12, 0, '2017-09-17 11:39:12'),
(73, 1199, '2', -0.292969, 22, 0, '2017-09-17 11:39:12'),
(73, 1287, '4', -0.0833333, 40, 0, '2017-09-17 11:39:12'),
(73, 1175, '4', 0.237305, 23, 1, '2017-09-17 11:39:13'),
(73, 1294, '0', -0.00520833, 24, 0, '2017-09-17 11:39:13'),
(73, 1268, '2', -0.630208, 26, 0, '2017-09-17 11:39:13'),
(73, 1257, '3', -1.41797, 15, 0, '2017-09-17 11:39:13'),
(73, 1282, '1', -0.963333, 13, 0, '2017-09-17 11:39:13'),
(73, 1189, '1', -1.6875, 7, 0, '2017-09-17 11:39:14'),
(73, 1293, '2', 0.130208, 19, 1, '2017-09-17 11:39:14'),
(73, 1284, '0', -0.0075, 20, 0, '2017-09-17 11:39:14'),
(73, 1191, '4', -1.38138, 9, 0, '2017-09-17 11:39:14'),
(73, 1269, '1', 0.1875, 36, 1, '2017-09-17 11:39:14'),
(73, 1281, '3', 0.12, 24, 1, '2017-09-17 11:39:15'),
(73, 1200, '2', -0.00231481, 35, 0, '2017-09-17 11:39:15'),
(73, 1217, '1', -0.1875, 15, 0, '2017-09-17 11:39:15'),
(73, 1171, '0', -0.0075, 20, 0, '2017-09-17 11:39:15'),
(73, 1202, '3', -0.0578704, 31, 0, '2017-09-17 11:39:15'),
(73, 1286, '4', 1.14083, 23, 1, '2017-09-17 11:39:15'),
(73, 1283, '0', -0.00520833, 24, 0, '2017-09-17 11:39:15'),
(73, 1298, '4', -1.08, 24, 0, '2017-09-17 11:39:15'),
(73, 1176, '4', 0.55102, 16, 1, '2017-09-17 11:39:15'),
(73, 1296, '0', -0.00520833, 24, 0, '2017-09-17 11:39:15'),
(73, 1275, '1', -0.925926, 24, 0, '2017-09-17 11:39:15'),
(73, 1264, '1', -0.154959, 51, 0, '2017-09-17 11:39:15'),
(73, 1250, '3', -0.140833, 47, 0, '2017-09-17 11:39:16'),
(73, 171, '1', 0.0567188, 69, 1, '2017-09-17 11:39:16'),
(73, 1187, '1', -0.75, 16, 0, '2017-09-17 11:39:16'),
(73, 1206, '1', -0.3675, 39, 0, '2017-09-17 11:39:16'),
(73, 1295, '4', 1.17188, 9, 1, '2017-09-17 11:39:16'),
(73, 1188, '4', -0.979592, 12, 0, '2017-09-17 11:39:16'),
(73, 1209, '2', 0.2028, 37, 1, '2017-09-17 11:39:16'),
(73, 1299, '3', 1.72176, 16, 1, '2017-09-17 11:39:16'),
(73, 1204, '2', -0.157552, 37, 0, '2017-09-17 11:39:16'),
(73, 173, '3', -2.1168, 16, 0, '2017-09-17 11:39:16'),
(73, 1229, '1', -0.102881, 44, 0, '2017-09-17 11:39:16'),
(73, 172, '2', 1.96388, 21, 1, '2017-09-17 11:39:16'),
(73, 1289, '1', -1.47, 12, 0, '2017-09-17 11:39:16'),
(75, 2757, '0', -0.00333333, 30, 0, '2017-09-17 11:39:17'),
(75, 2759, '1', -0.563333, 17, 0, '2017-09-17 11:39:17'),
(75, 2760, '4', 0, 30, 1, '2017-09-17 11:39:17'),
(75, 2754, '1', 1.76333, 7, 1, '2017-09-17 11:39:17'),
(75, 2745, '2', 0.12, 24, 1, '2017-09-17 11:39:17'),
(75, 2752, '2', -0.853333, 14, 0, '2017-09-17 11:39:17'),
(75, 2741, '3', 1.61333, 8, 1, '2017-09-17 11:39:18'),
(75, 2750, '4', 1.76333, 7, 1, '2017-09-17 11:39:18'),
(75, 2746, '2', 1.92, 6, 1, '2017-09-17 11:39:18'),
(75, 2761, '1', 0.563333, 17, 1, '2017-09-17 11:39:18'),
(75, 2744, '1', 0, 30, 1, '2017-09-17 11:39:18'),
(75, 2762, '3', 1.61333, 8, 1, '2017-09-17 11:39:18'),
(75, 2753, '2', 1.76333, 7, 1, '2017-09-17 11:39:18'),
(75, 2756, '3', -1.33333, 10, 0, '2017-09-17 11:39:18'),
(75, 2736, '4', 1.92, 6, 1, '2017-09-17 11:39:18'),
(75, 2789, '3', -0.12, 48, 0, '2017-09-17 11:39:18'),
(75, 2790, '2', -1.8, 20, 0, '2017-09-17 11:39:18'),
(75, 2748, '3', 0.75, 15, 1, '2017-09-17 11:39:18'),
(75, 2738, '2', 1.20333, 11, 1, '2017-09-17 11:39:18'),
(75, 2768, '1', -1.5, 25, 0, '2017-09-17 11:39:18'),
(75, 2742, '4', 1.61333, 8, 1, '2017-09-17 11:39:18'),
(75, 2765, '4', 1.8, 20, 1, '2017-09-17 11:39:19'),
(75, 2770, '2', 1.86, 19, 1, '2017-09-17 11:39:19'),
(75, 2791, '3', 1.98, 17, 1, '2017-09-17 11:39:19'),
(75, 2777, '3', -1.8, 20, 0, '2017-09-17 11:39:19'),
(75, 2784, '2', 2.64, 6, 1, '2017-09-17 11:39:19'),
(75, 2787, '3', -2.52, 8, 0, '2017-09-17 11:39:19'),
(75, 2779, '4', -0.54, 41, 0, '2017-09-17 11:39:19'),
(75, 2783, '1', -1.74, 21, 0, '2017-09-17 11:39:19'),
(75, 2766, '1', 2.22, 13, 1, '2017-09-17 11:39:19'),
(75, 2775, '0', 0, 48, -1, '2017-09-17 11:39:19'),
(75, 2781, '3', 2.46, 9, 1, '2017-09-17 11:39:19'),
(75, 2764, '2', -0.96, 34, 0, '2017-09-17 11:39:19'),
(75, 2773, '0', 0, 13, -1, '2017-09-17 11:39:19'),
(75, 2767, '0', 0, 0, -1, '2017-09-17 11:39:20'),
(75, 2782, '0', -0.06, 50, 0, '2017-09-17 11:39:20'),
(75, 2771, '3', 1.56, 24, 1, '2017-09-17 11:39:20'),
(75, 2778, '0', -0.06, 50, 0, '2017-09-17 11:39:20'),
(75, 2774, '4', 2.28, 12, 1, '2017-09-17 11:39:20'),
(75, 2769, '2', -0.6, 40, 0, '2017-09-17 11:39:21'),
(75, 2786, '1', -0.66, 39, 0, '2017-09-17 11:39:21'),
(75, 2772, '3', -2.46, 9, 0, '2017-09-17 11:39:21'),
(75, 2780, '3', -0.9, 35, 0, '2017-09-17 11:39:21'),
(75, 2785, '2', -2.28, 12, 0, '2017-09-17 11:39:21'),
(75, 2776, '1', 2.52, 8, 1, '2017-09-17 11:39:22'),
(75, 2805, '1', 2.35714, 15, 1, '2017-09-17 11:39:22'),
(75, 2799, '2', -2.14286, 20, 0, '2017-09-17 11:39:22'),
(75, 2798, '4', 0.857143, 50, 1, '2017-09-17 11:39:22'),
(75, 2800, '2', 2.4, 14, 1, '2017-09-17 11:39:22'),
(75, 2818, '4', -2.44286, 13, 0, '2017-09-17 11:39:22'),
(75, 2803, '1', -2.27143, 17, 0, '2017-09-17 11:39:22'),
(75, 2814, '1', 2.1, 21, 1, '2017-09-17 11:39:22'),
(75, 2793, '2', 1.5, 35, 1, '2017-09-17 11:39:22'),
(75, 2795, '2', -2.1, 21, 0, '2017-09-17 11:39:23'),
(75, 2796, '4', 2.14286, 20, 1, '2017-09-17 11:39:23'),
(75, 2808, '3', 2.57143, 10, 1, '2017-09-17 11:39:23'),
(75, 2792, '3', 2.06584, 30, 1, '2017-09-17 11:39:23'),
(75, 2811, '0', -0.176627, 70, 0, '2017-09-17 11:39:23'),
(75, 2807, '3', 2.06584, 30, 1, '2017-09-17 11:39:23'),
(75, 2817, '3', 2.13414, 28, 1, '2017-09-17 11:39:23'),
(75, 2806, '4', -2.61601, 13, 0, '2017-09-17 11:39:23'),
(75, 2794, '1', 1.51014, 45, 1, '2017-09-17 11:39:23'),
(75, 2802, '2', -1.55014, 44, 0, '2017-09-17 11:39:23'),
(75, 2813, '3', 1.46959, 46, 1, '2017-09-17 11:39:24'),
(75, 2815, '2', -1.78028, 38, 0, '2017-09-17 11:39:24'),
(75, 2613, '4', 1.2675, 14, 1, '2017-09-17 11:39:24'),
(75, 2614, '4', 0.421875, 25, 1, '2017-09-17 11:39:24'),
(75, 2609, '4', -1.17188, 15, 0, '2017-09-17 11:39:24'),
(75, 2607, '4', 1.57687, 11, 1, '2017-09-17 11:39:24'),
(75, 2608, '4', -0.541875, 23, 0, '2017-09-17 11:39:24'),
(75, 2611, '3', 0.226875, 29, 1, '2017-09-17 11:39:24'),
(75, 2605, '2', 2.04187, 7, 1, '2017-09-17 11:39:24'),
(75, 2610, '3', 0.991875, 17, 1, '2017-09-17 11:39:24'),
(75, 2604, '2', 1.6875, 10, 1, '2017-09-17 11:39:24'),
(75, 2606, '1', 2.43, 4, 1, '2017-09-17 11:39:25'),
(75, 2612, '0', -0.001875, 40, 0, '2017-09-17 11:39:25'),
(75, 2601, '2', 1.57687, 11, 1, '2017-09-17 11:39:25'),
(75, 2618, '3', 2.7, 6, 1, '2017-09-17 11:39:25'),
(75, 2623, '2', 2.45, 11, 1, '2017-09-17 11:39:25'),
(75, 2627, '0', 0, 6, -1, '2017-09-17 11:39:25'),
(75, 2632, '3', 2.45, 11, 1, '2017-09-17 11:39:25'),
(75, 2631, '3', 2.2, 16, 1, '2017-09-17 11:39:25'),
(75, 2825, '3', 2.47645, 15, 1, '2017-09-17 11:39:25'),
(75, 2732, '4', 2.58532, 12, 1, '2017-09-17 11:39:25'),
(75, 2833, '3', 2.40251, 17, 1, '2017-09-17 11:39:26'),
(75, 2731, '4', 1.84765, 31, 1, '2017-09-17 11:39:26'),
(75, 2841, '3', 2.69195, 9, 1, '2017-09-17 11:39:26'),
(75, 2852, '0', 0, 30, -1, '2017-09-17 11:39:26'),
(75, 2735, '1', 1.62865, 36, 1, '2017-09-17 11:39:26'),
(75, 2838, '0', 0, 6, -1, '2017-09-17 11:39:26'),
(75, 2823, '0', 0, 15, -1, '2017-09-17 11:39:26'),
(75, 2845, '1', 1.24289, 44, 1, '2017-09-17 11:39:26'),
(75, 2862, '4', 2.47992, 19, 1, '2017-09-17 11:39:26'),
(75, 2870, '3', 2.81957, 7, 1, '2017-09-17 11:39:26'),
(75, 2884, '3', -2.47992, 19, 0, '2017-09-17 11:39:26'),
(75, 2877, '2', 2.47992, 19, 1, '2017-09-17 11:39:27'),
(75, 2871, '1', -2.53969, 17, 0, '2017-09-17 11:39:27'),
(75, 2889, '4', -2.22486, 27, 0, '2017-09-17 11:39:27'),
(75, 2886, '4', -2.53969, 17, 0, '2017-09-17 11:39:27'),
(75, 2847, '3', -2.05434, 26, 0, '2017-09-17 11:39:27'),
(75, 2816, '4', 2.65665, 10, 1, '2017-09-17 11:39:27'),
(75, 2728, '4', 2.40251, 17, 1, '2017-09-17 11:39:27'),
(75, 2888, '3', 2.38747, 22, 1, '2017-09-17 11:39:27'),
(75, 2887, '3', 2.50998, 18, 1, '2017-09-17 11:39:27'),
(75, 2879, '3', -2.47992, 19, 0, '2017-09-17 11:39:28'),
(75, 2881, '0', -0.387298, 60, 0, '2017-09-17 11:39:28'),
(75, 2883, '3', 2.44949, 20, 1, '2017-09-17 11:39:28'),
(75, 2855, '1', -1.28452, 49, 0, '2017-09-17 11:39:28'),
(75, 2866, '4', 2.81957, 7, 1, '2017-09-17 11:39:28'),
(75, 2874, '3', -2.47992, 19, 0, '2017-09-17 11:39:28'),
(75, 2868, '2', 2.79285, 8, 1, '2017-09-17 11:39:28'),
(75, 2865, '3', 2.65518, 13, 1, '2017-09-17 11:39:28'),
(75, 2904, '3', 2.24295, 31, 1, '2017-09-17 11:39:28'),
(75, 2906, '2', 1.93318, 40, 1, '2017-09-17 11:39:28'),
(75, 2895, '2', 2.17975, 33, 1, '2017-09-17 11:39:28'),
(75, 2898, '2', -2.69752, 14, 0, '2017-09-17 11:39:29'),
(75, 2894, '4', -2.36193, 27, 0, '2017-09-17 11:39:29'),
(75, 2903, '3', -2.62572, 17, 0, '2017-09-17 11:39:29'),
(75, 2864, '3', -2.87228, 5, 0, '2017-09-17 11:39:29'),
(75, 2861, '2', 2.32379, 24, 1, '2017-09-17 11:39:29'),
(75, 2882, '2', -2.65518, 13, 0, '2017-09-17 11:39:29'),
(75, 2885, '4', 2.53969, 17, 1, '2017-09-17 11:39:29'),
(75, 2859, '2', 2.32379, 24, 1, '2017-09-17 11:39:30'),
(75, 2907, '4', -0.905126, 57, 0, '2017-09-17 11:39:30'),
(75, 2908, '1', -2.50998, 18, 0, '2017-09-17 11:39:30'),
(75, 2902, '4', -2.01246, 33, 0, '2017-09-17 11:39:30'),
(75, 2896, '2', -2.56905, 16, 0, '2017-09-17 11:39:30'),
(75, 2900, '2', 2.29129, 25, 1, '2017-09-17 11:39:30'),
(75, 2905, '1', 2.53969, 17, 1, '2017-09-17 11:39:30'),
(75, 2899, '1', -2.89828, 4, 0, '2017-09-17 11:39:31'),
(75, 2897, '1', -2.04939, 32, 0, '2017-09-17 11:39:31'),
(75, 2901, '4', 1.28452, 49, 1, '2017-09-17 11:39:31'),
(75, 2891, '1', 2.71109, 11, 1, '2017-09-17 11:39:31'),
(75, 2892, '0', -0.387298, 60, 0, '2017-09-17 11:39:31'),
(75, 2893, '4', 2.76586, 9, 1, '2017-09-17 11:39:31'),
(75, 728, '1', 0.67313, 20, 1, '2017-09-17 11:39:31'),
(75, 726, '1', 1.62197, 9, 1, '2017-09-17 11:39:31'),
(75, 498, '0', 0, 32, -1, '2017-09-17 11:39:31'),
(75, 736, '2', -1.89187, 7, 0, '2017-09-17 11:39:31'),
(75, 725, '3', -1.62197, 9, 0, '2017-09-17 11:39:32'),
(75, 730, '1', -0.1875, 27, 0, '2017-09-17 11:39:32'),
(75, 729, '0', 0, 11, -1, '2017-09-17 11:39:32'),
(75, 465, '2', 0.0833333, 25, 1, '2017-09-17 11:39:32'),
(75, 723, '1', 2.08333, 6, 1, '2017-09-17 11:39:32'),
(75, 720, '4', 2.54501, 3, 1, '2017-09-17 11:39:32'),
(75, 722, '3', 2.52083, 3, 1, '2017-09-17 11:39:32'),
(75, 490, '2', 1.56481, 10, 1, '2017-09-17 11:39:32'),
(75, 733, '0', -0.001875, 40, 0, '2017-09-17 11:39:32'),
(75, 509, '1', 0.148148, 28, 1, '2017-09-17 11:39:32'),
(75, 721, '3', -0.0075, 38, 0, '2017-09-17 11:39:33'),
(75, 494, '3', 2.25333, 4, 1, '2017-09-17 11:39:33'),
(75, 727, '2', 2.37037, 4, 1, '2017-09-17 11:39:33'),
(75, 747, '2', 2.25, 9, 1, '2017-09-17 11:39:33'),
(75, 746, '2', -1.75, 15, 0, '2017-09-17 11:39:33'),
(75, 745, '1', -0.675, 31, 0, '2017-09-17 11:39:33'),
(75, 750, '0', 0, 28, -1, '2017-09-17 11:39:33'),
(75, 757, '1', -1.76087, 19, 0, '2017-09-17 11:39:33'),
(75, 738, '3', -2.20588, 9, 0, '2017-09-17 11:39:33'),
(75, 724, '4', -1.20333, 11, 0, '2017-09-17 11:39:34'),
(75, 731, '1', -0.1875, 27, 0, '2017-09-17 11:39:34'),
(75, 481, '3', -1.57687, 11, 0, '2017-09-17 11:39:34'),
(75, 485, '2', -1.83743, 10, 0, '2017-09-17 11:39:34'),
(75, 719, '1', -0.453704, 22, 0, '2017-09-17 11:39:34'),
(75, 486, '1', 2.22454, 5, 1, '2017-09-17 11:39:34'),
(75, 466, '2', 0, 30, 0, '2017-09-17 11:39:34'),
(75, 489, '0', -0.226875, 30, 0, '2017-09-17 11:39:34'),
(75, 735, '1', -1.47, 9, 0, '2017-09-17 11:39:34'),
(75, 472, '3', -1.2675, 14, 0, '2017-09-17 11:39:34'),
(75, 734, '3', -0.213333, 22, 0, '2017-09-17 11:39:35'),
(75, 487, '1', -1.36688, 13, 0, '2017-09-17 11:39:35'),
(75, 737, '0', -0.001875, 40, 0, '2017-09-17 11:39:35'),
(75, 732, '4', 1.02083, 15, 1, '2017-09-17 11:39:35'),
(75, 464, '1', -0.75, 13, 0, '2017-09-17 11:39:35'),
(75, 718, '1', 0.403333, 19, 1, '2017-09-17 11:39:35'),
(75, 475, '4', 0.239603, 33, 1, '2017-09-17 11:39:35'),
(75, 739, '1', 0.75, 18, 1, '2017-09-17 11:39:35'),
(75, 479, '3', -1.03355, 19, 0, '2017-09-17 11:39:35'),
(75, 742, '3', -1.92, 8, 0, '2017-09-17 11:39:35'),
(75, 483, '2', 1.73677, 11, 1, '2017-09-17 11:39:36'),
(75, 482, '2', -2.08333, 7, 0, '2017-09-17 11:39:36'),
(75, 749, '0', -0.00130208, 48, 0, '2017-09-17 11:39:36'),
(75, 474, '1', 0.991875, 17, 1, '2017-09-17 11:39:36'),
(75, 478, '1', -1.3068, 17, 0, '2017-09-17 11:39:36'),
(75, 748, '2', 1.17188, 15, 1, '2017-09-17 11:39:36'),
(75, 480, '4', -1.6875, 10, 0, '2017-09-17 11:39:36'),
(75, 752, '3', 0.6862, 24, 1, '2017-09-17 11:39:36'),
(75, 751, '1', -0.303719, 30, 0, '2017-09-17 11:39:36'),
(75, 741, '3', -0.467452, 23, 0, '2017-09-17 11:39:36'),
(75, 740, '1', 1.02083, 15, 1, '2017-09-17 11:39:36'),
(75, 744, '4', -0.826875, 19, 0, '2017-09-17 11:39:36'),
(75, 743, '3', -1.22454, 13, 0, '2017-09-17 11:39:37'),
(75, 502, '2', 0.816635, 22, 1, '2017-09-17 11:39:37'),
(75, 755, '4', -0.00130208, 47, 0, '2017-09-17 11:39:37'),
(75, 754, '4', 0.75, 21, 1, '2017-09-17 11:39:37'),
(75, 499, '1', 1.86981, 8, 1, '2017-09-17 11:39:37'),
(75, 753, '4', 1.96599, 8, 1, '2017-09-17 11:39:37'),
(75, 476, '1', -0.421875, 25, 0, '2017-09-17 11:39:38'),
(75, 756, '2', 1.17188, 18, 1, '2017-09-17 11:39:38'),
(75, 477, '3', -0.958412, 20, 0, '2017-09-17 11:39:38'),
(75, 768, '3', 1.50521, 14, 1, '2017-09-17 11:39:38'),
(75, 774, '1', 1.17188, 18, 1, '2017-09-17 11:39:38'),
(75, 772, '3', 0.574219, 27, 1, '2017-09-17 11:39:38');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(75, 470, '3', -0.991875, 17, 0, '2017-09-17 11:39:38'),
(75, 775, '4', 0.625236, 25, 1, '2017-09-17 11:39:38'),
(75, 770, '1', -1.17188, 18, 0, '2017-09-17 11:39:38'),
(75, 488, '2', -0.037037, 32, 0, '2017-09-17 11:39:38'),
(75, 763, '2', 1.19234, 17, 1, '2017-09-17 11:39:38'),
(75, 760, '0', -0.001875, 40, 0, '2017-09-17 11:39:38'),
(75, 767, '2', -2.40755, 5, 0, '2017-09-17 11:39:38'),
(75, 484, '4', -2.38327, 5, 0, '2017-09-17 11:39:39'),
(75, 764, '2', 0.592593, 20, 1, '2017-09-17 11:39:39'),
(75, 491, '1', -2.40166, 4, 0, '2017-09-17 11:39:39'),
(75, 766, '1', 1.33333, 14, 1, '2017-09-17 11:39:39'),
(75, 471, '1', -1.47, 9, 0, '2017-09-17 11:39:39'),
(75, 759, '1', -0.239603, 33, 0, '2017-09-17 11:39:39'),
(75, 493, '1', 1.08, 12, 1, '2017-09-17 11:39:39'),
(75, 765, '3', -0.27, 28, 0, '2017-09-17 11:39:39'),
(75, 1198, '4', 0.0075, 19, 1, '2017-09-17 11:39:39'),
(75, 1297, '0', -1.40083, 20, 0, '2017-09-17 11:39:39'),
(75, 1216, '4', 0.0208333, 22, 1, '2017-09-17 11:39:39'),
(75, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:39:40'),
(75, 1292, '2', 0, 30, 0, '2017-09-17 11:39:40'),
(75, 1184, '4', 0.130208, 19, 1, '2017-09-17 11:39:40'),
(75, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:39:40'),
(75, 1186, '3', 0.646684, 15, 1, '2017-09-17 11:39:40'),
(75, 1190, '4', 1.2398, 10, 1, '2017-09-17 11:39:40'),
(75, 1169, '2', 0.75, 12, 1, '2017-09-17 11:39:40'),
(75, 1183, '2', 0.75, 11, 1, '2017-09-17 11:39:40'),
(75, 1194, '1', 0.55102, 16, 1, '2017-09-17 11:39:40'),
(75, 1173, '2', 0.6075, 11, 1, '2017-09-17 11:39:40'),
(75, 1177, '2', 0.619835, 12, 1, '2017-09-17 11:39:40'),
(75, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:39:41'),
(75, 1291, '1', -0.12, 16, 0, '2017-09-17 11:39:41'),
(75, 1276, '0', 0, 15, -1, '2017-09-17 11:39:41'),
(75, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:39:41'),
(75, 1196, '4', 0.130208, 19, 1, '2017-09-17 11:39:41'),
(75, 1174, '3', 1.43787, 8, 1, '2017-09-17 11:39:41'),
(75, 1172, '2', -0.0675, 17, 0, '2017-09-17 11:39:41'),
(75, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:39:41'),
(75, 1263, '2', -0.3675, 26, 0, '2017-09-17 11:39:42'),
(75, 1170, '0', -0.00520833, 24, 0, '2017-09-17 11:39:42'),
(75, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:39:42'),
(75, 1197, '3', -1.02083, 10, 0, '2017-09-17 11:39:42'),
(75, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:39:42'),
(75, 1218, '4', 0.3675, 13, 1, '2017-09-17 11:39:42'),
(75, 1268, '4', -0.00130208, 47, 0, '2017-09-17 11:39:42'),
(75, 1220, '2', 0.860969, 13, 1, '2017-09-17 11:39:42'),
(75, 1293, '2', 0.333333, 16, 1, '2017-09-17 11:39:42'),
(75, 1217, '3', 0.03, 18, 1, '2017-09-17 11:39:42'),
(75, 1208, '0', -0.0012, 50, 0, '2017-09-17 11:39:43'),
(75, 1202, '3', -0.333333, 24, 0, '2017-09-17 11:39:43'),
(75, 1281, '1', -0.403333, 19, 0, '2017-09-17 11:39:43'),
(75, 1171, '1', -1.47, 6, 0, '2017-09-17 11:39:43'),
(75, 1269, '2', 0, 48, 0, '2017-09-17 11:39:43'),
(75, 1191, '3', 0.00382653, 27, 1, '2017-09-17 11:39:43'),
(75, 1257, '4', 0.0833333, 40, 1, '2017-09-17 11:39:43'),
(75, 1294, '0', -0.00520833, 24, 0, '2017-09-17 11:39:43'),
(75, 1199, '4', -2.46387, 3, 0, '2017-09-17 11:39:43'),
(75, 1282, '4', -2.61333, 2, 0, '2017-09-17 11:39:43'),
(75, 1284, '3', 0.48, 12, 1, '2017-09-17 11:39:43'),
(75, 1175, '2', -0.0263672, 29, 0, '2017-09-17 11:39:43'),
(75, 1200, '2', -2.83565, 1, 0, '2017-09-17 11:39:44'),
(75, 1219, '2', -1.58678, 6, 0, '2017-09-17 11:39:44'),
(75, 1265, '2', 2.34763, 6, 1, '2017-09-17 11:39:44'),
(75, 1287, '2', -2.8763, 1, 0, '2017-09-17 11:39:44'),
(75, 1189, '0', -0.00382653, 28, 0, '2017-09-17 11:39:44'),
(75, 1298, '0', 0, 4, -1, '2017-09-17 11:39:44'),
(75, 1275, '3', -2.17695, 8, 0, '2017-09-17 11:39:44'),
(75, 1299, '3', 2.82094, 2, 1, '2017-09-17 11:39:44'),
(75, 1250, '3', -2.80333, 2, 0, '2017-09-17 11:39:44'),
(75, 1264, '3', -2.82094, 2, 0, '2017-09-17 11:39:44'),
(76, 2742, '0', -0.00333333, 30, 0, '2017-09-17 11:39:45'),
(76, 2759, '2', 0.563333, 17, 1, '2017-09-17 11:39:45'),
(76, 2752, '2', -1.61333, 8, 0, '2017-09-17 11:39:45'),
(76, 2737, '0', -0.00333333, 30, 0, '2017-09-17 11:39:45'),
(76, 2743, '2', -1.20333, 11, 0, '2017-09-17 11:39:45'),
(76, 2753, '4', -0.12, 24, 0, '2017-09-17 11:39:45'),
(76, 2736, '3', -1.61333, 8, 0, '2017-09-17 11:39:46'),
(76, 2748, '2', -0.03, 27, 0, '2017-09-17 11:39:46'),
(76, 2745, '0', -0.00333333, 30, 0, '2017-09-17 11:39:46'),
(76, 2762, '3', 1.47, 9, 1, '2017-09-17 11:39:46'),
(76, 2754, '3', -0.563333, 17, 0, '2017-09-17 11:39:46'),
(76, 2758, '4', 1.76333, 7, 1, '2017-09-17 11:39:46'),
(76, 2744, '4', -0.0833333, 25, 0, '2017-09-17 11:39:46'),
(76, 2746, '2', 1.76333, 7, 1, '2017-09-17 11:39:46'),
(76, 2738, '2', 0.963333, 13, 1, '2017-09-17 11:39:46'),
(76, 2755, '2', -0.653333, 16, 0, '2017-09-17 11:39:46'),
(76, 2763, '2', -0.853333, 14, 0, '2017-09-17 11:39:46'),
(76, 2760, '1', -0.333333, 20, 0, '2017-09-17 11:39:47'),
(76, 2756, '2', 1.61333, 8, 1, '2017-09-17 11:39:47'),
(76, 2741, '3', 0.75, 15, 1, '2017-09-17 11:39:47'),
(76, 2751, '4', -0.75, 15, 0, '2017-09-17 11:39:47'),
(76, 2740, '1', -1.33333, 10, 0, '2017-09-17 11:39:47'),
(76, 2761, '1', 0.0533333, 26, 1, '2017-09-17 11:39:47'),
(76, 2750, '1', -0.853333, 14, 0, '2017-09-17 11:39:47'),
(76, 2749, '4', 2.08333, 5, 1, '2017-09-17 11:39:47'),
(76, 2757, '1', -0.0133333, 28, 0, '2017-09-17 11:39:47'),
(76, 2747, '1', -1.47, 9, 0, '2017-09-17 11:39:47'),
(76, 2739, '1', 0.963333, 13, 1, '2017-09-17 11:39:48'),
(76, 2775, '1', -2.0172, 9, 0, '2017-09-17 11:39:48'),
(76, 2783, '0', 0, 20, -1, '2017-09-17 11:39:48'),
(76, 2769, '0', 0, 13, -1, '2017-09-17 11:39:48'),
(76, 2780, '3', -1.0092, 21, 0, '2017-09-17 11:39:48'),
(76, 2764, '4', -0.9408, 22, 0, '2017-09-17 11:39:48'),
(76, 2790, '0', -0.0012, 50, 0, '2017-09-17 11:39:48'),
(76, 2773, '1', -1.3872, 16, 0, '2017-09-17 11:39:48'),
(76, 2784, '2', 2.3232, 6, 1, '2017-09-17 11:39:48'),
(76, 2765, '2', -1.92, 10, 0, '2017-09-17 11:39:49'),
(76, 2781, '2', -2.1168, 8, 0, '2017-09-17 11:39:49'),
(76, 2771, '2', -1.08, 20, 0, '2017-09-17 11:39:49'),
(76, 2768, '2', -1.47, 15, 0, '2017-09-17 11:39:49'),
(76, 2772, '1', -1.3872, 16, 0, '2017-09-17 11:39:49'),
(76, 1190, '4', 1.10587, 11, 1, '2017-09-17 11:39:49'),
(76, 1263, '0', -0.001875, 40, 0, '2017-09-17 11:39:49'),
(76, 1177, '0', -0.00619835, 22, 0, '2017-09-17 11:39:49'),
(76, 1174, '0', -0.00443787, 26, 0, '2017-09-17 11:39:50'),
(76, 1197, '1', 0.255208, 17, 1, '2017-09-17 11:39:50'),
(76, 1198, '2', -0.03, 18, 0, '2017-09-17 11:39:50'),
(76, 1196, '4', 1.33333, 8, 1, '2017-09-17 11:39:50'),
(76, 1194, '1', 1.38138, 9, 1, '2017-09-17 11:39:50'),
(76, 1218, '4', 0.9075, 9, 1, '2017-09-17 11:39:50'),
(76, 1291, '0', -0.0075, 20, 0, '2017-09-17 11:39:50'),
(76, 1216, '4', 0.0833333, 20, 1, '2017-09-17 11:39:50'),
(76, 1261, '1', -0.0186981, 35, 0, '2017-09-17 11:39:50'),
(76, 1184, '4', 0.0208333, 22, 1, '2017-09-17 11:39:50'),
(76, 1169, '2', 1.33333, 8, 1, '2017-09-17 11:39:50'),
(76, 1183, '2', 0.619835, 12, 1, '2017-09-17 11:39:51'),
(76, 1186, '3', 0.244898, 20, 1, '2017-09-17 11:39:51'),
(76, 1297, '3', 1.47, 18, 1, '2017-09-17 11:39:51'),
(76, 1170, '0', -0.00520833, 24, 0, '2017-09-17 11:39:51'),
(76, 1292, '1', 0.27, 21, 1, '2017-09-17 11:39:51'),
(76, 1276, '1', 0.421875, 20, 1, '2017-09-17 11:39:51'),
(76, 1172, '3', -0.0075, 19, 0, '2017-09-17 11:39:51'),
(76, 1173, '2', 0.27, 14, 1, '2017-09-17 11:39:51'),
(76, 1227, '1', -0.0833333, 20, 0, '2017-09-17 11:39:51'),
(76, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:39:51'),
(76, 1203, '3', 0.0833333, 25, 1, '2017-09-17 11:39:51'),
(76, 1195, '4', 0.27, 14, 1, '2017-09-17 11:39:51'),
(76, 1270, '4', 0.141777, 36, 1, '2017-09-17 11:39:51'),
(76, 1269, '2', -0.125, 46, 0, '2017-09-17 11:39:52'),
(76, 1185, '2', 0, 28, 0, '2017-09-17 11:39:52'),
(76, 1294, '1', -0.75, 12, 0, '2017-09-17 11:39:52'),
(76, 1265, '0', 0, 18, -1, '2017-09-17 11:39:52'),
(76, 1268, '3', -0.688802, 25, 0, '2017-09-17 11:39:52'),
(76, 1257, '4', 0.046875, 42, 1, '2017-09-17 11:39:52'),
(76, 1191, '3', 1.10587, 11, 1, '2017-09-17 11:39:52'),
(76, 1282, '0', 0, 25, -1, '2017-09-17 11:39:52'),
(76, 1220, '3', -0.382653, 18, 0, '2017-09-17 11:39:52'),
(76, 1202, '3', -0.00231481, 35, 0, '2017-09-17 11:39:53'),
(76, 1171, '4', 0.9075, 9, 1, '2017-09-17 11:39:53'),
(76, 1287, '2', -0.25, 44, 0, '2017-09-17 11:39:53'),
(76, 1175, '2', -0.354492, 21, 0, '2017-09-17 11:39:53'),
(76, 1293, '1', -1.6875, 6, 0, '2017-09-17 11:39:53'),
(76, 1200, '4', 0.0208333, 33, 1, '2017-09-17 11:39:53'),
(76, 1199, '3', 0.0732422, 27, 1, '2017-09-17 11:39:53'),
(76, 1219, '3', 0.619835, 12, 1, '2017-09-17 11:39:53'),
(76, 1217, '0', -0.0075, 20, 0, '2017-09-17 11:39:53'),
(76, 1281, '1', -0.0533333, 26, 0, '2017-09-17 11:39:54'),
(76, 1208, '1', 0.5808, 28, 1, '2017-09-17 11:39:54'),
(76, 1284, '3', 0.6075, 11, 1, '2017-09-17 11:39:54'),
(76, 1189, '3', 0.860969, 13, 1, '2017-09-17 11:39:54'),
(76, 1299, '0', 0, 58, -1, '2017-09-17 11:39:54'),
(76, 1295, '4', 0.5, 20, 1, '2017-09-17 11:39:54'),
(76, 1204, '4', 0.5625, 39, 1, '2017-09-17 11:39:54'),
(76, 1250, '4', -2.25, 15, 0, '2017-09-17 11:39:54'),
(76, 1176, '4', 1.53061, 8, 1, '2017-09-17 11:39:54'),
(76, 1188, '4', -1.82143, 11, 0, '2017-09-17 11:39:54'),
(76, 1286, '4', 0.00333333, 58, 1, '2017-09-17 11:39:54'),
(76, 1187, '4', -0.421875, 20, 0, '2017-09-17 11:39:55'),
(76, 1283, '4', 1.50521, 7, 1, '2017-09-17 11:39:55'),
(76, 1209, '4', 0, 50, 0, '2017-09-17 11:39:55'),
(76, 1206, '4', 0.3, 54, 1, '2017-09-17 11:39:55'),
(76, 1298, '1', 1.4, 32, 1, '2017-09-17 11:39:55'),
(76, 727, '2', 2.37037, 4, 1, '2017-09-17 11:39:55'),
(76, 485, '1', 2.15643, 7, 1, '2017-09-17 11:39:55'),
(76, 728, '4', -1.62881, 10, 0, '2017-09-17 11:39:55'),
(76, 725, '4', 0.58391, 19, 1, '2017-09-17 11:39:55'),
(76, 724, '1', 1.76333, 7, 1, '2017-09-17 11:39:55'),
(76, 481, '3', -1.6875, 10, 0, '2017-09-17 11:39:56'),
(76, 737, '4', 0.151875, 31, 1, '2017-09-17 11:39:56'),
(76, 494, '3', 1.92, 6, 1, '2017-09-17 11:39:56'),
(76, 489, '2', -1.47, 12, 0, '2017-09-17 11:39:56'),
(76, 732, '3', -0.391204, 23, 0, '2017-09-17 11:39:56'),
(76, 720, '4', 1.29848, 13, 1, '2017-09-17 11:39:56'),
(76, 498, '2', 0.826875, 19, 1, '2017-09-17 11:39:56'),
(76, 464, '3', 1.43787, 8, 1, '2017-09-17 11:39:57'),
(76, 726, '1', 0.936851, 15, 1, '2017-09-17 11:39:57'),
(76, 722, '3', 2.22454, 5, 1, '2017-09-17 11:39:57'),
(76, 502, '2', 2.34783, 10, 1, '2017-09-17 11:39:57'),
(76, 747, '3', -0.666667, 28, 0, '2017-09-17 11:39:57'),
(76, 475, '4', 2.08696, 14, 1, '2017-09-17 11:39:57'),
(76, 739, '1', 1.91667, 13, 1, '2017-09-17 11:39:57'),
(76, 738, '2', 2.38235, 7, 1, '2017-09-17 11:39:57'),
(76, 477, '2', 1.56522, 22, 1, '2017-09-17 11:39:57'),
(76, 762, '3', 2.30847, 13, 1, '2017-09-17 11:39:57'),
(76, 758, '4', 2.32942, 12, 1, '2017-09-17 11:39:57'),
(76, 769, '1', 0.962822, 36, 1, '2017-09-17 11:39:58'),
(76, 761, '4', -2.35532, 14, 0, '2017-09-17 11:39:58'),
(76, 488, '3', 2.53722, 8, 1, '2017-09-17 11:39:58'),
(76, 775, '0', 0, 27, -1, '2017-09-17 11:39:58'),
(76, 773, '2', -1.8347, 24, 0, '2017-09-17 11:39:58'),
(76, 770, '2', 2.5221, 11, 1, '2017-09-17 11:39:58'),
(76, 767, '2', -1.67358, 28, 0, '2017-09-17 11:39:58'),
(76, 768, '2', -2.43037, 13, 0, '2017-09-17 11:39:58'),
(76, 760, '2', -2.25111, 14, 0, '2017-09-17 11:39:58'),
(76, 471, '2', 1.80492, 16, 1, '2017-09-17 11:39:58'),
(76, 763, '2', 1.66387, 27, 1, '2017-09-17 11:39:58'),
(76, 470, '4', 2.4211, 11, 1, '2017-09-17 11:39:58'),
(76, 771, '2', -1.60496, 28, 0, '2017-09-17 11:39:59'),
(76, 774, '1', 1.78337, 26, 1, '2017-09-17 11:39:59'),
(76, 493, '4', -1.97297, 14, 0, '2017-09-17 11:39:59'),
(76, 772, '3', 0.75, 42, 1, '2017-09-17 11:39:59'),
(76, 764, '1', -2.59728, 7, 0, '2017-09-17 11:39:59'),
(76, 776, '4', -1.22481, 34, 0, '2017-09-17 11:39:59'),
(76, 492, '1', -1.56006, 25, 0, '2017-09-17 11:39:59'),
(76, 741, '1', -2.52632, 6, 0, '2017-09-17 11:39:59'),
(76, 746, '1', -2.5, 6, 0, '2017-09-17 11:39:59'),
(76, 754, '1', -0.5, 35, 0, '2017-09-17 11:39:59'),
(76, 474, '3', -1.8, 16, 0, '2017-09-17 11:39:59'),
(76, 478, '2', -2.4, 10, 0, '2017-09-17 11:39:59'),
(76, 465, '2', 1.76333, 7, 1, '2017-09-17 11:40:00'),
(76, 744, '2', -2.55, 6, 0, '2017-09-17 11:40:00'),
(76, 472, '3', -1.92, 8, 0, '2017-09-17 11:40:00'),
(76, 723, '1', 2.22454, 5, 1, '2017-09-17 11:40:00'),
(76, 733, '3', 1.36688, 13, 1, '2017-09-17 11:40:00'),
(76, 479, '3', -2.28261, 11, 0, '2017-09-17 11:40:00'),
(76, 490, '2', 1.81481, 8, 1, '2017-09-17 11:40:00'),
(76, 751, '2', 2.31818, 10, 1, '2017-09-17 11:40:00'),
(76, 742, '3', -2.325, 9, 0, '2017-09-17 11:40:00'),
(76, 482, '1', -2.5, 7, 0, '2017-09-17 11:40:00'),
(76, 718, '1', 1.76333, 7, 1, '2017-09-17 11:40:00'),
(76, 729, '3', -1.94676, 7, 0, '2017-09-17 11:40:01'),
(76, 734, '2', 1.76333, 7, 1, '2017-09-17 11:40:01'),
(76, 721, '1', 1.2675, 14, 1, '2017-09-17 11:40:01'),
(76, 757, '2', 1.04348, 30, 1, '2017-09-17 11:40:01'),
(76, 476, '2', -2.7, 4, 0, '2017-09-17 11:40:01'),
(76, 466, '2', -1.92, 6, 0, '2017-09-17 11:40:01'),
(76, 736, '1', 1.75433, 8, 1, '2017-09-17 11:40:01'),
(76, 509, '2', -0.0578704, 31, 0, '2017-09-17 11:40:01'),
(76, 487, '4', 1.17188, 15, 1, '2017-09-17 11:40:01'),
(76, 755, '2', -0.875, 34, 0, '2017-09-17 11:40:01'),
(76, 730, '1', -1.94676, 7, 0, '2017-09-17 11:40:02'),
(76, 731, '2', 1.33333, 12, 1, '2017-09-17 11:40:02'),
(76, 486, '2', -1.02083, 15, 0, '2017-09-17 11:40:02'),
(76, 658, '2', 0.48, 12, 1, '2017-09-17 11:40:02'),
(76, 2008, '3', -1.76333, 7, 0, '2017-09-17 11:40:02'),
(76, 713, '3', 1.28254, 9, 1, '2017-09-17 11:40:02'),
(76, 2011, '3', -1.20333, 11, 0, '2017-09-17 11:40:02'),
(76, 680, '3', 0.55102, 16, 1, '2017-09-17 11:40:02'),
(76, 706, '2', -1.33333, 10, 0, '2017-09-17 11:40:02'),
(76, 659, '3', 0.6075, 11, 1, '2017-09-17 11:40:02'),
(76, 1996, '1', -1.20333, 11, 0, '2017-09-17 11:40:02'),
(76, 712, '1', 1.02083, 10, 1, '2017-09-17 11:40:02'),
(76, 1985, '4', 0.046875, 28, 1, '2017-09-17 11:40:03'),
(76, 716, '1', -1.60207, 7, 0, '2017-09-17 11:40:03'),
(76, 703, '1', -0.333333, 16, 0, '2017-09-17 11:40:03'),
(76, 676, '2', 2.02423, 5, 1, '2017-09-17 11:40:03'),
(76, 663, '1', 2.20408, 4, 1, '2017-09-17 11:40:03'),
(76, 690, '1', -1.08, 8, 0, '2017-09-17 11:40:03'),
(76, 2010, '1', 2.08333, 5, 1, '2017-09-17 11:40:03'),
(76, 2033, '4', -0.244898, 20, 0, '2017-09-17 11:40:03'),
(76, 1888, '3', -1.13609, 10, 0, '2017-09-17 11:40:03'),
(76, 1991, '4', 1.61333, 8, 1, '2017-09-17 11:40:03'),
(76, 699, '2', -0.6075, 11, 0, '2017-09-17 11:40:04'),
(76, 679, '1', 1.50521, 7, 1, '2017-09-17 11:40:04'),
(76, 2013, '2', 1.92, 6, 1, '2017-09-17 11:40:04'),
(76, 2031, '1', 1.47, 9, 1, '2017-09-17 11:40:04'),
(76, 1891, '2', -0.75, 15, 0, '2017-09-17 11:40:04'),
(76, 698, '2', -1.20333, 11, 0, '2017-09-17 11:40:04'),
(76, 1880, '1', 0.58391, 19, 1, '2017-09-17 11:40:04'),
(76, 1906, '3', -1.76333, 7, 0, '2017-09-17 11:40:05'),
(76, 1923, '4', -0.65918, 17, 0, '2017-09-17 11:40:05'),
(76, 2042, '3', 2.13574, 5, 1, '2017-09-17 11:40:05'),
(76, 717, '4', 0.148148, 28, 1, '2017-09-17 11:40:05'),
(76, 665, '3', -1.47, 9, 0, '2017-09-17 11:40:05'),
(76, 689, '1', -1.76333, 7, 0, '2017-09-17 11:40:05'),
(76, 1918, '3', 2.02423, 5, 1, '2017-09-17 11:40:05'),
(76, 1921, '0', 0, 23, -1, '2017-09-17 11:40:05'),
(76, 1914, '3', -0.860969, 13, 0, '2017-09-17 11:40:05'),
(76, 1927, '3', -1.33333, 10, 0, '2017-09-17 11:40:06'),
(76, 1911, '3', 1.6875, 8, 1, '2017-09-17 11:40:06'),
(76, 1904, '3', -1.76333, 7, 0, '2017-09-17 11:40:06'),
(76, 1930, '1', -0.0257202, 49, 0, '2017-09-17 11:40:06'),
(76, 1929, '4', -1.62197, 9, 0, '2017-09-17 11:40:06'),
(76, 1917, '3', 1.10587, 11, 1, '2017-09-17 11:40:06'),
(76, 1908, '4', -0.949219, 14, 0, '2017-09-17 11:40:06'),
(76, 1925, '4', -0.892562, 20, 0, '2017-09-17 11:40:06'),
(76, 664, '0', 0, 13, -1, '2017-09-17 11:40:06'),
(76, 1920, '0', 0, 0, -1, '2017-09-17 11:40:06'),
(76, 2034, '4', 1.33333, 10, 1, '2017-09-17 11:40:07'),
(76, 1926, '2', 1.41797, 10, 1, '2017-09-17 11:40:07'),
(76, 685, '1', -1.08, 8, 0, '2017-09-17 11:40:07'),
(76, 714, '0', -0.00259516, 34, 0, '2017-09-17 11:40:07'),
(76, 1909, '2', 1.83105, 7, 1, '2017-09-17 11:40:07'),
(76, 1922, '3', 0.563333, 17, 1, '2017-09-17 11:40:07'),
(76, 687, '3', -1.61333, 8, 0, '2017-09-17 11:40:07'),
(76, 704, '4', -1.08, 12, 0, '2017-09-17 11:40:07'),
(76, 1915, '3', 1.6875, 7, 1, '2017-09-17 11:40:07'),
(76, 1892, '3', 2.34763, 3, 1, '2017-09-17 11:40:07'),
(76, 1919, '4', 1.41061, 22, 1, '2017-09-17 11:40:07'),
(76, 1912, '4', -1.10587, 11, 0, '2017-09-17 11:40:08'),
(76, 2602, '3', 2.04187, 7, 1, '2017-09-17 11:40:08'),
(76, 2609, '3', -2.04187, 7, 0, '2017-09-17 11:40:08'),
(76, 2606, '1', 2.29688, 5, 1, '2017-09-17 11:40:08'),
(76, 2607, '4', 0.27, 28, 1, '2017-09-17 11:40:08'),
(76, 2611, '3', 1.6875, 10, 1, '2017-09-17 11:40:08'),
(76, 2604, '2', 1.92, 8, 1, '2017-09-17 11:40:08'),
(76, 2613, '2', -1.36688, 13, 0, '2017-09-17 11:40:08'),
(76, 2605, '2', 1.6875, 10, 1, '2017-09-17 11:40:08'),
(76, 2612, '1', 0.12, 32, 1, '2017-09-17 11:40:08'),
(76, 2615, '1', 1.47, 12, 1, '2017-09-17 11:40:08'),
(76, 2601, '2', 2.29688, 5, 1, '2017-09-17 11:40:09'),
(76, 2632, '3', 2.55, 9, 1, '2017-09-17 11:40:09'),
(76, 2626, '3', 2.65, 7, 1, '2017-09-17 11:40:09'),
(76, 2635, '3', -2.7, 6, 0, '2017-09-17 11:40:09'),
(76, 2631, '1', -0.95, 41, 0, '2017-09-17 11:40:09'),
(76, 2627, '4', -2.7, 6, 0, '2017-09-17 11:40:09'),
(76, 2608, '3', 1.17188, 15, 1, '2017-09-17 11:40:09'),
(76, 2630, '3', -2.7, 6, 0, '2017-09-17 11:40:09'),
(76, 2603, '3', -2.1675, 6, 0, '2017-09-17 11:40:09'),
(76, 2610, '3', 1.92, 8, 1, '2017-09-17 11:40:09'),
(76, 2614, '4', 0.9075, 18, 1, '2017-09-17 11:40:09'),
(76, 2623, '2', 2.1675, 9, 1, '2017-09-17 11:40:09'),
(76, 2620, '1', -2.55, 9, 0, '2017-09-17 11:40:09'),
(76, 2622, '2', 2.43, 6, 1, '2017-09-17 11:40:10'),
(76, 2619, '3', 2.7, 6, 1, '2017-09-17 11:40:10'),
(76, 2618, '3', 2.6, 8, 1, '2017-09-17 11:40:10'),
(76, 2629, '3', -2.75, 5, 0, '2017-09-17 11:40:10'),
(76, 2634, '3', -2.5, 10, 0, '2017-09-17 11:40:10'),
(76, 2624, '3', -2.85, 3, 0, '2017-09-17 11:40:10'),
(76, 2621, '3', 2.1675, 9, 1, '2017-09-17 11:40:10'),
(76, 2616, '4', 0.800833, 29, 1, '2017-09-17 11:40:10'),
(76, 2633, '3', 2.5, 10, 1, '2017-09-17 11:40:10'),
(76, 2628, '4', -2.6, 8, 0, '2017-09-17 11:40:10'),
(76, 2625, '3', 2.6, 8, 1, '2017-09-17 11:40:10'),
(76, 2617, '1', 2.7, 6, 1, '2017-09-17 11:40:11'),
(76, 2847, '3', -2.4, 12, 0, '2017-09-17 11:40:11'),
(76, 2820, '2', 1.45, 31, 1, '2017-09-17 11:40:11'),
(76, 2734, '3', 2.3, 14, 1, '2017-09-17 11:40:11'),
(76, 2835, '3', 2.15, 17, 1, '2017-09-17 11:40:11'),
(76, 2735, '3', -2.35, 13, 0, '2017-09-17 11:40:11'),
(76, 2823, '4', -0.7, 46, 0, '2017-09-17 11:40:11'),
(76, 2838, '3', 2.75, 5, 1, '2017-09-17 11:40:11'),
(76, 2825, '4', -2.45, 11, 0, '2017-09-17 11:40:11'),
(76, 2819, '2', 2.45, 11, 1, '2017-09-17 11:40:11'),
(76, 2728, '2', -2.2, 16, 0, '2017-09-17 11:40:11'),
(76, 2730, '2', -2.9, 2, 0, '2017-09-17 11:40:11'),
(76, 2733, '2', 1.85, 23, 1, '2017-09-17 11:40:11'),
(76, 2731, '2', -2.65, 7, 0, '2017-09-17 11:40:12'),
(76, 2816, '2', -2.55, 9, 0, '2017-09-17 11:40:12'),
(76, 2833, '3', 2.6, 8, 1, '2017-09-17 11:40:12'),
(76, 2845, '4', -2.45, 11, 0, '2017-09-17 11:40:12'),
(76, 2729, '4', -2.85, 3, 0, '2017-09-17 11:40:12'),
(76, 2852, '1', -1.92, 12, 0, '2017-09-17 11:40:12'),
(76, 2732, '3', -2.43, 6, 0, '2017-09-17 11:40:12'),
(76, 2841, '3', 2.52083, 5, 1, '2017-09-17 11:40:12'),
(76, 2883, '3', 1.84083, 13, 1, '2017-09-17 11:40:12'),
(76, 2886, '1', 2.61333, 4, 1, '2017-09-17 11:40:12'),
(76, 2866, '4', 2.3, 14, 1, '2017-09-17 11:40:12'),
(76, 853, '0', -2.25333, 9, 0, '2017-09-17 11:40:12'),
(76, 1124, '2', -2.34083, 7, 0, '2017-09-17 11:40:12'),
(76, 613, '4', -2.34083, 7, 0, '2017-09-17 11:40:13'),
(76, 1317, '3', 2.34083, 7, 1, '2017-09-17 11:40:13'),
(77, 736, '2', -2.18253, 5, 0, '2017-09-17 11:40:13'),
(77, 509, '1', 2.37037, 4, 1, '2017-09-17 11:40:13'),
(77, 464, '4', -1.77515, 6, 0, '2017-09-17 11:40:14'),
(77, 490, '1', -2.22454, 5, 0, '2017-09-17 11:40:14'),
(77, 489, '4', -1.92, 8, 0, '2017-09-17 11:40:14'),
(77, 732, '4', 0.925926, 16, 1, '2017-09-17 11:40:14'),
(77, 729, '0', 0, 4, -1, '2017-09-17 11:40:14'),
(77, 498, '0', 0, 16, -1, '2017-09-17 11:40:14'),
(77, 494, '3', 2.25333, 4, 1, '2017-09-17 11:40:14'),
(77, 721, '2', -1.36688, 13, 0, '2017-09-17 11:40:14'),
(77, 733, '3', 1.47, 12, 1, '2017-09-17 11:40:14'),
(77, 734, '3', -1.33333, 10, 0, '2017-09-17 11:40:14'),
(77, 486, '3', -1.6875, 9, 0, '2017-09-17 11:40:14'),
(77, 725, '1', -1.62197, 9, 0, '2017-09-17 11:40:15'),
(77, 485, '2', -2.04726, 8, 0, '2017-09-17 11:40:15'),
(77, 724, '4', -1.76333, 7, 0, '2017-09-17 11:40:15'),
(77, 1117, '2', 1.92, 4, 1, '2017-09-17 11:40:15'),
(77, 2413, '0', 0, 7, -1, '2017-09-17 11:40:15'),
(77, 1130, '2', 1.47, 6, 1, '2017-09-17 11:40:15'),
(77, 1133, '3', 1.47, 6, 1, '2017-09-17 11:40:15'),
(77, 1116, '1', -0.48, 12, 0, '2017-09-17 11:40:15'),
(77, 380, '3', -0.3675, 13, 0, '2017-09-17 11:40:15'),
(77, 2431, '2', -1.40678, 29, 0, '2017-09-17 11:40:15'),
(77, 364, '2', 1.47, 6, 1, '2017-09-17 11:40:15'),
(77, 376, '0', 0, 8, -1, '2017-09-17 11:40:15'),
(77, 1105, '3', -0.9075, 9, 0, '2017-09-17 11:40:15'),
(77, 2418, '2', 2.56687, 6, 1, '2017-09-17 11:40:16'),
(77, 375, '0', 0, 6, -1, '2017-09-17 11:40:16'),
(77, 1122, '4', 1.6875, 5, 1, '2017-09-17 11:40:16'),
(77, 370, '4', -0.3675, 13, 0, '2017-09-17 11:40:16'),
(77, 392, '2', -0.75, 10, 0, '2017-09-17 11:40:16'),
(77, 388, '3', -0.27, 14, 0, '2017-09-17 11:40:16'),
(77, 1110, '2', 1.6875, 5, 1, '2017-09-17 11:40:16'),
(77, 374, '4', 1.2675, 7, 1, '2017-09-17 11:40:16'),
(77, 367, '3', 0.3675, 13, 1, '2017-09-17 11:40:16'),
(77, 2404, '1', 2.50095, 8, 1, '2017-09-17 11:40:16'),
(77, 1145, '1', 1.95, 7, 1, '2017-09-17 11:40:17'),
(77, 2449, '1', -2.7, 10, 0, '2017-09-17 11:40:17'),
(77, 2453, '3', -2.84559, 7, 0, '2017-09-17 11:40:17'),
(77, 1115, '1', 0.75, 10, 1, '2017-09-17 11:40:17'),
(77, 382, '3', -1.2675, 7, 0, '2017-09-17 11:40:17'),
(77, 1131, '4', -1.08, 8, 0, '2017-09-17 11:40:17'),
(77, 372, '2', -0.6075, 11, 0, '2017-09-17 11:40:17'),
(77, 2429, '3', -2.20408, 20, 0, '2017-09-17 11:40:17'),
(77, 1139, '2', 1.47, 6, 1, '2017-09-17 11:40:17'),
(77, 2408, '3', 2.62146, 6, 1, '2017-09-17 11:40:18'),
(77, 2410, '2', 2.65349, 5, 1, '2017-09-17 11:40:18'),
(77, 1157, '1', 1.95, 7, 1, '2017-09-17 11:40:18'),
(77, 2443, '4', 2.6087, 12, 1, '2017-09-17 11:40:18'),
(77, 2435, '1', 2.46923, 23, 1, '2017-09-17 11:40:18'),
(77, 1149, '1', 1.65, 9, 1, '2017-09-17 11:40:18'),
(77, 1147, '1', -1.8, 8, 0, '2017-09-17 11:40:18'),
(77, 2454, '2', 2.64583, 17, 1, '2017-09-17 11:40:18'),
(77, 2661, '2', 2.6232, 31, 1, '2017-09-17 11:40:18'),
(77, 1160, '2', 1.76169, 11, 1, '2017-09-17 11:40:18'),
(77, 2648, '4', 2.89564, 6, 1, '2017-09-17 11:40:18'),
(77, 2636, '4', -2.9188, 5, 0, '2017-09-17 11:40:19'),
(77, 2657, '1', -2.89564, 6, 0, '2017-09-17 11:40:19'),
(77, 2665, '4', 2.79651, 7, 1, '2017-09-17 11:40:19'),
(77, 1168, '4', -1.48993, 13, 0, '2017-09-17 11:40:19'),
(77, 1164, '3', 2.47645, 5, 1, '2017-09-17 11:40:19'),
(77, 2653, '3', -2.84411, 8, 0, '2017-09-17 11:40:19'),
(77, 1159, '1', 2.47645, 5, 1, '2017-09-17 11:40:19'),
(77, 1166, '4', -2.01386, 9, 0, '2017-09-17 11:40:19'),
(77, 1165, '1', -2.36512, 6, 0, '2017-09-17 11:40:19'),
(77, 2638, '1', -2.86514, 6, 0, '2017-09-17 11:40:20'),
(77, 1142, '3', -2.25, 5, 0, '2017-09-17 11:40:20'),
(77, 1143, '4', -2.1, 6, 0, '2017-09-17 11:40:20'),
(77, 1146, '2', -1.2, 12, 0, '2017-09-17 11:40:20'),
(77, 1152, '1', -1.95, 7, 0, '2017-09-17 11:40:20'),
(77, 2451, '3', 2.69118, 14, 1, '2017-09-17 11:40:20'),
(77, 2455, '1', 2.67, 11, 1, '2017-09-17 11:40:20'),
(77, 2456, '3', -2.16923, 36, 0, '2017-09-17 11:40:20'),
(77, 1150, '2', 1.65, 9, 1, '2017-09-17 11:40:20'),
(77, 2440, '1', -2.53636, 17, 0, '2017-09-17 11:40:20'),
(77, 1148, '1', -0.9, 14, 0, '2017-09-17 11:40:20'),
(77, 2434, '2', -2.83636, 6, 0, '2017-09-17 11:40:20'),
(77, 2406, '4', -2.73347, 4, 0, '2017-09-17 11:40:21'),
(77, 373, '4', -1.92, 4, 0, '2017-09-17 11:40:21'),
(77, 366, '4', 1.2675, 7, 1, '2017-09-17 11:40:21'),
(77, 1138, '4', -1.47, 6, 0, '2017-09-17 11:40:21'),
(77, 381, '3', -0.75, 10, 0, '2017-09-17 11:40:21'),
(77, 1136, '1', -0.9075, 9, 0, '2017-09-17 11:40:21'),
(77, 398, '1', 0.6075, 11, 1, '2017-09-17 11:40:21'),
(77, 378, '4', -0.75, 10, 0, '2017-09-17 11:40:21'),
(77, 1121, '2', -0.75, 10, 0, '2017-09-17 11:40:21'),
(77, 1114, '1', 1.08, 8, 1, '2017-09-17 11:40:22'),
(77, 391, '4', -1.08, 8, 0, '2017-09-17 11:40:22'),
(77, 1104, '1', -1.2675, 7, 0, '2017-09-17 11:40:22'),
(77, 2420, '4', -2.52083, 8, 0, '2017-09-17 11:40:22'),
(77, 383, '4', 0.12, 16, 1, '2017-09-17 11:40:22'),
(77, 379, '3', 1.08, 8, 1, '2017-09-17 11:40:22'),
(77, 401, '4', 1.2675, 7, 1, '2017-09-17 11:40:22'),
(77, 363, '3', 1.92, 4, 1, '2017-09-17 11:40:22'),
(77, 400, '1', -1.6875, 5, 0, '2017-09-17 11:40:23'),
(77, 2416, '3', 2.73347, 4, 1, '2017-09-17 11:40:23'),
(77, 394, '3', -1.08, 8, 0, '2017-09-17 11:40:23'),
(77, 402, '2', -0.3675, 13, 0, '2017-09-17 11:40:23'),
(77, 2403, '2', 2.61333, 6, 1, '2017-09-17 11:40:23'),
(77, 399, '2', -0.27, 14, 0, '2017-09-17 11:40:23'),
(77, 384, '2', -0.48, 12, 0, '2017-09-17 11:40:23'),
(77, 371, '2', -0.6075, 11, 0, '2017-09-17 11:40:23'),
(77, 365, '1', -1.2675, 7, 0, '2017-09-17 11:40:23'),
(77, 393, '1', 1.47, 6, 1, '2017-09-17 11:40:23'),
(77, 2432, '3', -2.47934, 10, 0, '2017-09-17 11:40:23'),
(77, 600, '1', -1.85204, 12, 0, '2017-09-17 11:40:24'),
(77, 596, '2', -1.90226, 11, 0, '2017-09-17 11:40:24'),
(77, 599, '1', 1.92, 12, 1, '2017-09-17 11:40:24'),
(77, 1303, '3', -2.00083, 11, 0, '2017-09-17 11:40:24'),
(77, 607, '0', 0, 13, -1, '2017-09-17 11:40:24'),
(77, 624, '1', 2.1675, 9, 1, '2017-09-17 11:40:24'),
(77, 1311, '4', 2.2188, 7, 1, '2017-09-17 11:40:24'),
(77, 854, '1', 2.50776, 6, 1, '2017-09-17 11:40:24'),
(77, 602, '4', -1.5498, 18, 0, '2017-09-17 11:40:24'),
(77, 611, '3', 2.2188, 7, 1, '2017-09-17 11:40:24'),
(77, 1124, '4', 2.1675, 9, 1, '2017-09-17 11:40:25'),
(77, 597, '1', -2.37037, 6, 0, '2017-09-17 11:40:25'),
(77, 609, '3', -1.84083, 13, 0, '2017-09-17 11:40:25'),
(77, 614, '3', 1.99177, 10, 1, '2017-09-17 11:40:25'),
(77, 1089, '4', -2.43, 6, 0, '2017-09-17 11:40:25'),
(77, 1301, '1', -2.37964, 7, 0, '2017-09-17 11:40:25'),
(77, 1317, '2', -2.25333, 8, 0, '2017-09-17 11:40:25'),
(77, 996, '4', -2.43, 5, 0, '2017-09-17 11:40:25'),
(77, 619, '2', -1.84083, 13, 0, '2017-09-17 11:40:25'),
(77, 850, '2', -1.76333, 14, 0, '2017-09-17 11:40:25'),
(77, 593, '3', -2.1675, 9, 0, '2017-09-17 11:40:25'),
(77, 2010, '1', 1.76333, 7, 1, '2017-09-17 11:40:26'),
(77, 703, '3', 0.520833, 14, 1, '2017-09-17 11:40:26'),
(77, 712, '1', 1.50521, 7, 1, '2017-09-17 11:40:26'),
(77, 658, '3', -1.47, 6, 0, '2017-09-17 11:40:26'),
(77, 680, '3', 1.6875, 7, 1, '2017-09-17 11:40:26'),
(77, 2008, '4', 1.47, 9, 1, '2017-09-17 11:40:26'),
(77, 2011, '3', -2.25333, 4, 0, '2017-09-17 11:40:26'),
(77, 679, '1', 1.6875, 6, 1, '2017-09-17 11:40:26'),
(77, 1996, '3', 2.25333, 4, 1, '2017-09-17 11:40:26'),
(77, 2033, '1', -1.6875, 7, 0, '2017-09-17 11:40:26'),
(77, 1985, '3', -1.98047, 6, 0, '2017-09-17 11:40:26'),
(77, 1991, '2', -0.963333, 13, 0, '2017-09-17 11:40:26'),
(77, 2031, '1', 2.08333, 5, 1, '2017-09-17 11:40:27'),
(77, 706, '4', 2.08333, 5, 1, '2017-09-17 11:40:27'),
(77, 2013, '1', -1.33333, 10, 0, '2017-09-17 11:40:27'),
(77, 699, '2', -1.6875, 5, 0, '2017-09-17 11:40:27'),
(77, 716, '1', -1.77515, 6, 0, '2017-09-17 11:40:27'),
(77, 659, '0', 0, 4, -1, '2017-09-17 11:40:27'),
(77, 690, '1', -1.2675, 7, 0, '2017-09-17 11:40:27'),
(77, 676, '4', -2.20408, 4, 0, '2017-09-17 11:40:28'),
(77, 1888, '1', 1.9571, 5, 1, '2017-09-17 11:40:28'),
(77, 663, '1', 2.20408, 4, 1, '2017-09-17 11:40:28'),
(77, 713, '1', -1.77515, 6, 0, '2017-09-17 11:40:28'),
(77, 1920, '2', 1.83105, 7, 1, '2017-09-17 11:40:28'),
(77, 1892, '3', 0.443787, 16, 1, '2017-09-17 11:40:28'),
(77, 1926, '2', 1.98047, 6, 1, '2017-09-17 11:40:28'),
(77, 1906, '2', 2.08333, 5, 1, '2017-09-17 11:40:28'),
(77, 1911, '3', 1.83105, 7, 1, '2017-09-17 11:40:28'),
(77, 1921, '2', -1.76333, 7, 0, '2017-09-17 11:40:29'),
(77, 1919, '2', -2.50776, 6, 0, '2017-09-17 11:40:29'),
(77, 665, '2', -1.92, 6, 0, '2017-09-17 11:40:29'),
(77, 1918, '3', 2.39158, 3, 1, '2017-09-17 11:40:29'),
(77, 689, '1', -2.43, 3, 0, '2017-09-17 11:40:29'),
(77, 664, '0', 0, 5, -1, '2017-09-17 11:40:29'),
(77, 1930, '1', -1.99177, 10, 0, '2017-09-17 11:40:29'),
(77, 685, '3', -0.48, 12, 0, '2017-09-17 11:40:29'),
(77, 1922, '1', -1.08, 12, 0, '2017-09-17 11:40:29'),
(77, 714, '1', 1.03806, 14, 1, '2017-09-17 11:40:29'),
(77, 2034, '4', 1.92, 6, 1, '2017-09-17 11:40:29'),
(77, 1914, '1', -1.2398, 10, 0, '2017-09-17 11:40:30'),
(77, 687, '1', -1.76333, 7, 0, '2017-09-17 11:40:30'),
(77, 1891, '4', 1.47, 9, 1, '2017-09-17 11:40:30'),
(77, 1904, '2', -1.20333, 11, 0, '2017-09-17 11:40:30'),
(77, 704, '3', -2.08333, 5, 0, '2017-09-17 11:40:30'),
(77, 1925, '3', -2.60486, 3, 0, '2017-09-17 11:40:30'),
(77, 1880, '4', -2.18253, 5, 0, '2017-09-17 11:40:30'),
(77, 1909, '2', 2.46387, 3, 1, '2017-09-17 11:40:30'),
(77, 1915, '3', 2.20408, 4, 1, '2017-09-17 11:40:30'),
(77, 717, '3', -1.6875, 9, 0, '2017-09-17 11:40:30'),
(77, 698, '2', -0.213333, 22, 0, '2017-09-17 11:40:30'),
(77, 1908, '3', -1.98047, 6, 0, '2017-09-17 11:40:30'),
(77, 1917, '1', -2.20408, 4, 0, '2017-09-17 11:40:30'),
(77, 1927, '3', -1.92, 6, 0, '2017-09-17 11:40:31'),
(77, 1194, '1', 0.0956633, 23, 1, '2017-09-17 11:40:31'),
(77, 1190, '4', 1.38138, 9, 1, '2017-09-17 11:40:31'),
(77, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:40:31'),
(77, 1292, '2', -0.853333, 14, 0, '2017-09-17 11:40:31'),
(77, 1169, '2', 0.630208, 13, 1, '2017-09-17 11:40:31'),
(77, 1170, '2', 0.75, 12, 1, '2017-09-17 11:40:31'),
(77, 1218, '2', -0.6075, 11, 0, '2017-09-17 11:40:31'),
(77, 1203, '3', 0.27, 21, 1, '2017-09-17 11:40:31'),
(77, 1186, '3', 0.382653, 18, 1, '2017-09-17 11:40:32'),
(77, 1297, '3', 0.240833, 43, 1, '2017-09-17 11:40:32'),
(77, 1174, '3', 0.359467, 17, 1, '2017-09-17 11:40:32'),
(77, 1183, '2', 1.04752, 9, 1, '2017-09-17 11:40:32'),
(77, 1172, '4', 1.2675, 7, 1, '2017-09-17 11:40:32'),
(77, 1210, '1', 0.00520833, 23, 1, '2017-09-17 11:40:32'),
(77, 1227, '3', 0.0208333, 22, 1, '2017-09-17 11:40:32'),
(77, 1196, '4', 0.0833333, 20, 1, '2017-09-17 11:40:32'),
(77, 1197, '1', 0.75, 12, 1, '2017-09-17 11:40:32'),
(77, 1185, '4', 0.646684, 15, 1, '2017-09-17 11:40:32'),
(77, 1216, '4', 1.17188, 9, 1, '2017-09-17 11:40:32'),
(77, 1198, '1', -1.2675, 7, 0, '2017-09-17 11:40:33'),
(77, 1263, '4', -1.6875, 10, 0, '2017-09-17 11:40:33'),
(77, 1261, '0', 0, 30, -1, '2017-09-17 11:40:33'),
(77, 1276, '0', 0, 0, -1, '2017-09-17 11:40:33'),
(77, 1270, '3', -0.239603, 33, 0, '2017-09-17 11:40:33'),
(77, 1173, '4', -0.75, 10, 0, '2017-09-17 11:40:33'),
(77, 1291, '1', -0.12, 16, 0, '2017-09-17 11:40:33'),
(77, 1184, '4', 0.333333, 16, 1, '2017-09-17 11:40:33'),
(77, 1177, '2', 1.79132, 5, 1, '2017-09-17 11:40:33'),
(77, 1265, '0', 0, 6, -1, '2017-09-17 11:40:33'),
(77, 1284, '3', 0.27, 14, 1, '2017-09-17 11:40:33'),
(77, 1282, '1', -1.20333, 11, 0, '2017-09-17 11:40:33'),
(77, 1269, '2', -0.520833, 28, 0, '2017-09-17 11:40:33'),
(77, 1189, '3', 1.2398, 10, 1, '2017-09-17 11:40:34'),
(77, 1199, '0', -0.00292969, 32, 0, '2017-09-17 11:40:34'),
(77, 1219, '3', 1.04752, 9, 1, '2017-09-17 11:40:34'),
(77, 1208, '2', -0.0108, 47, 0, '2017-09-17 11:40:34'),
(77, 1268, '2', -0.220052, 35, 0, '2017-09-17 11:40:34'),
(77, 1281, '1', -0.563333, 17, 0, '2017-09-17 11:40:34'),
(77, 1175, '4', 0.65918, 17, 1, '2017-09-17 11:40:34'),
(77, 1293, '2', 1.6875, 6, 1, '2017-09-17 11:40:34'),
(77, 1171, '4', 1.08, 8, 1, '2017-09-17 11:40:34'),
(77, 1202, '1', 0.520833, 21, 1, '2017-09-17 11:40:34'),
(77, 1191, '3', 2.02423, 5, 1, '2017-09-17 11:40:34'),
(77, 1257, '4', 2.75, 4, 1, '2017-09-17 11:40:35'),
(77, 1200, '4', 1, 24, 1, '2017-09-17 11:40:35'),
(77, 1287, '1', -1.25, 28, 0, '2017-09-17 11:40:35'),
(77, 1217, '2', -2.25, 5, 0, '2017-09-17 11:40:35'),
(77, 1220, '2', 2.46429, 5, 1, '2017-09-17 11:40:35'),
(77, 1294, '3', 2, 8, 1, '2017-09-17 11:40:35'),
(77, 1296, '2', 1.625, 11, 1, '2017-09-17 11:40:35'),
(77, 171, '3', -2.7, 8, 0, '2017-09-17 11:40:35'),
(77, 1264, '2', -1.5, 33, 0, '2017-09-17 11:40:35'),
(77, 1283, '4', 1.625, 11, 1, '2017-09-17 11:40:35'),
(77, 1204, '4', 1.5625, 23, 1, '2017-09-17 11:40:35'),
(77, 1275, '3', -2.61111, 7, 0, '2017-09-17 11:40:36'),
(77, 1229, '2', -1.94444, 19, 0, '2017-09-17 11:40:36'),
(77, 1286, '3', -2.35, 13, 0, '2017-09-17 11:40:36'),
(77, 1206, '4', 0.55, 49, 1, '2017-09-17 11:40:36'),
(77, 1295, '3', -2.125, 7, 0, '2017-09-17 11:40:36'),
(77, 1289, '3', -0.421875, 25, 0, '2017-09-17 11:40:36'),
(77, 1209, '4', -1.6428, 13, 0, '2017-09-17 11:40:37'),
(77, 1299, '3', 2.64738, 4, 1, '2017-09-17 11:40:37'),
(77, 1176, '4', 1.6875, 7, 1, '2017-09-17 11:40:37'),
(77, 173, '1', -0.45, 85, 0, '2017-09-17 11:40:37'),
(77, 1188, '3', -2.14286, 8, 0, '2017-09-17 11:40:37'),
(77, 172, '4', -2.19074, 16, 0, '2017-09-17 11:40:37'),
(77, 1187, '4', -0.84668, 15, 0, '2017-09-17 11:40:37'),
(77, 1298, '2', -2.61333, 4, 0, '2017-09-17 11:40:37'),
(77, 1250, '2', -1.40083, 19, 0, '2017-09-17 11:40:37'),
(77, 1207, '3', -0.0732422, 54, 0, '2017-09-17 11:40:37'),
(77, 1285, '3', 1.08, 12, 1, '2017-09-17 11:40:38'),
(77, 1274, '3', -1.93718, 11, 0, '2017-09-17 11:40:38'),
(77, 1246, '2', -2.34083, 7, 0, '2017-09-17 11:40:38'),
(77, 169, '4', -1.78255, 11, 0, '2017-09-17 11:40:38'),
(77, 170, '3', -2.7648, 4, 0, '2017-09-17 11:40:38'),
(77, 1277, '3', -2.43, 6, 0, '2017-09-17 11:40:38'),
(77, 1201, '1', -0.27, 14, 0, '2017-09-17 11:40:38'),
(77, 1241, '3', -2.50505, 5, 0, '2017-09-17 11:40:38'),
(79, 2611, '3', 2.29688, 5, 1, '2017-09-17 11:40:40'),
(79, 2603, '1', 2.43, 4, 1, '2017-09-17 11:40:40'),
(79, 2614, '4', 2.29688, 5, 1, '2017-09-17 11:40:40'),
(79, 2609, '2', 2.1675, 6, 1, '2017-09-17 11:40:40'),
(79, 2605, '2', 2.56687, 3, 1, '2017-09-17 11:40:40'),
(79, 2618, '3', 2.8, 4, 1, '2017-09-17 11:40:41'),
(79, 2623, '2', 2.6, 8, 1, '2017-09-17 11:40:41'),
(79, 2632, '3', 2.7, 6, 1, '2017-09-17 11:40:41'),
(79, 2617, '1', 2.85, 3, 1, '2017-09-17 11:40:41'),
(79, 2823, '3', 2.58532, 12, 1, '2017-09-17 11:40:41'),
(79, 2833, '3', 2.86514, 4, 1, '2017-09-17 11:40:41'),
(79, 2734, '3', 2.69195, 9, 1, '2017-09-17 11:40:41'),
(79, 2733, '3', -2.47645, 15, 0, '2017-09-17 11:40:41'),
(79, 2820, '2', 2.65665, 10, 1, '2017-09-17 11:40:41'),
(79, 2845, '1', 2.62111, 11, 1, '2017-09-17 11:40:41'),
(79, 2838, '3', 2.89915, 3, 1, '2017-09-17 11:40:42'),
(79, 2884, '4', -2.79285, 8, 0, '2017-09-17 11:40:42'),
(79, 2852, '2', 2.513, 14, 1, '2017-09-17 11:40:42'),
(79, 2886, '1', 2.92404, 3, 1, '2017-09-17 11:40:42'),
(79, 2855, '4', 2.56905, 16, 1, '2017-09-17 11:40:42'),
(79, 2871, '0', 0, 7, -1, '2017-09-17 11:40:42'),
(79, 2887, '3', 2.79285, 8, 1, '2017-09-17 11:40:42'),
(79, 2868, '2', 2.79285, 8, 1, '2017-09-17 11:40:42'),
(79, 2896, '3', 2.87619, 6, 1, '2017-09-17 11:40:42'),
(79, 2891, '1', 2.91834, 4, 1, '2017-09-17 11:40:42'),
(79, 2906, '0', 0, 6, -1, '2017-09-17 11:40:42'),
(79, 2898, '1', -2.85477, 7, 0, '2017-09-17 11:40:42'),
(79, 2890, '4', 2.74383, 12, 1, '2017-09-17 11:40:43'),
(79, 2892, '4', -2.789, 10, 0, '2017-09-17 11:40:47'),
(79, 2902, '2', 2.64998, 16, 1, '2017-09-17 11:40:48'),
(79, 2901, '4', 2.89738, 5, 1, '2017-09-17 11:40:49'),
(79, 2918, '3', 2.8418, 9, 1, '2017-09-17 11:40:49'),
(79, 2925, '1', 2.87848, 7, 1, '2017-09-17 11:40:50'),
(79, 2914, '1', 2.91424, 5, 1, '2017-09-17 11:40:50'),
(79, 2910, '0', 0, 5, -1, '2017-09-17 11:40:51'),
(79, 2916, '2', 2.87848, 7, 1, '2017-09-17 11:40:51'),
(79, 2934, '4', -2.8418, 9, 0, '2017-09-17 11:40:52'),
(79, 2911, '1', 2.93179, 4, 1, '2017-09-17 11:40:52'),
(79, 2926, '1', -2.80416, 11, 0, '2017-09-17 11:40:53'),
(79, 2924, '2', 2.87848, 7, 1, '2017-09-17 11:40:56'),
(79, 2921, '2', -2.80416, 11, 0, '2017-09-17 11:40:56'),
(79, 2923, '4', -2.6424, 19, 0, '2017-09-17 11:40:56'),
(79, 2931, '0', 0, 9, -1, '2017-09-17 11:40:56'),
(79, 2928, '1', -2.8418, 9, 0, '2017-09-17 11:40:56'),
(79, 2955, '0', 0, 7, -1, '2017-09-17 11:40:56'),
(79, 2940, '2', 2.86026, 8, 1, '2017-09-17 11:40:56'),
(79, 2937, '4', -2.76548, 13, 0, '2017-09-17 11:40:56'),
(79, 2948, '2', -2.86026, 8, 0, '2017-09-17 11:40:57'),
(79, 2950, '4', -2.68469, 17, 0, '2017-09-17 11:40:57'),
(79, 2907, '3', 2.57617, 19, 1, '2017-09-17 11:40:57'),
(79, 2957, '3', -2.8418, 9, 0, '2017-09-17 11:40:57'),
(79, 2895, '3', -2.76655, 11, 0, '2017-09-17 11:40:57'),
(79, 2905, '1', 2.89738, 5, 1, '2017-09-17 11:40:57'),
(79, 2903, '3', -2.60112, 18, 0, '2017-09-17 11:40:57'),
(79, 2908, '4', -2.64998, 16, 0, '2017-09-17 11:40:57'),
(79, 2900, '2', 2.789, 10, 1, '2017-09-17 11:40:57'),
(79, 2894, '4', -2.69752, 14, 0, '2017-09-17 11:40:57'),
(79, 2897, '3', -2.76655, 11, 0, '2017-09-17 11:40:57'),
(79, 2909, '3', -2.64998, 16, 0, '2017-09-17 11:40:57'),
(79, 2877, '2', 2.84605, 6, 1, '2017-09-17 11:40:57'),
(79, 2899, '4', -2.87619, 6, 0, '2017-09-17 11:40:57'),
(79, 2883, '3', 2.76586, 9, 1, '2017-09-17 11:40:57'),
(79, 2893, '4', 2.64998, 16, 1, '2017-09-17 11:40:58'),
(79, 2904, '3', 2.64998, 16, 1, '2017-09-17 11:40:58'),
(79, 2939, '4', -2.44558, 24, 0, '2017-09-17 11:40:58'),
(79, 2959, '1', -2.49905, 22, 0, '2017-09-17 11:40:58'),
(79, 2945, '4', 2.8331, 8, 1, '2017-09-17 11:40:58'),
(79, 2952, '2', 2.81118, 9, 1, '2017-09-17 11:40:58'),
(79, 2942, '4', -2.72082, 13, 0, '2017-09-17 11:40:58'),
(79, 2971, '2', 2.87619, 6, 1, '2017-09-17 11:40:58'),
(79, 2979, '1', 2.85477, 7, 1, '2017-09-17 11:40:58'),
(79, 2966, '4', -2.69752, 14, 0, '2017-09-17 11:40:58'),
(79, 2962, '3', 2.789, 10, 1, '2017-09-17 11:40:58'),
(79, 2964, '4', -2.76655, 11, 0, '2017-09-17 11:40:58'),
(79, 2973, '3', 2.6739, 15, 1, '2017-09-17 11:40:58'),
(79, 2969, '1', -2.62572, 17, 0, '2017-09-17 11:40:58'),
(79, 2981, '4', 2.89738, 5, 1, '2017-09-17 11:40:58'),
(79, 2977, '4', -2.87848, 7, 0, '2017-09-17 11:40:58'),
(79, 2975, '2', 2.60112, 18, 1, '2017-09-17 11:40:58'),
(79, 2864, '3', -2.33303, 28, 0, '2017-09-17 11:40:58'),
(79, 2874, '3', -2.81118, 9, 0, '2017-09-17 11:40:58'),
(79, 2888, '3', 2.62572, 17, 1, '2017-09-17 11:40:58'),
(79, 2879, '2', 2.87619, 6, 1, '2017-09-17 11:40:59'),
(79, 2862, '4', 2.80416, 11, 1, '2017-09-17 11:40:59'),
(79, 2859, '2', 2.70534, 16, 1, '2017-09-17 11:40:59'),
(79, 2889, '2', 2.72568, 15, 1, '2017-09-17 11:40:59'),
(79, 2882, '2', -2.78495, 12, 0, '2017-09-17 11:40:59'),
(79, 2885, '4', 2.91424, 5, 1, '2017-09-17 11:40:59'),
(79, 2861, '2', 2.87848, 7, 1, '2017-09-17 11:40:59'),
(79, 2881, '3', -2.32697, 32, 0, '2017-09-17 11:40:59'),
(79, 2866, '4', 2.80416, 11, 1, '2017-09-17 11:40:59'),
(79, 2865, '3', 2.87848, 7, 1, '2017-09-17 11:40:59'),
(79, 2870, '3', 2.89647, 6, 1, '2017-09-17 11:40:59'),
(79, 2735, '1', 2.2407, 35, 1, '2017-09-17 11:40:59'),
(79, 2731, '4', 2.82311, 10, 1, '2017-09-17 11:40:59'),
(79, 2730, '4', 2.91104, 6, 1, '2017-09-17 11:40:59'),
(79, 2847, '3', -2.79782, 13, 0, '2017-09-17 11:40:59'),
(79, 2835, '3', 2.86388, 9, 1, '2017-09-17 11:40:59'),
(79, 2841, '3', 2.94144, 4, 1, '2017-09-17 11:40:59'),
(79, 2732, '4', 2.92634, 5, 1, '2017-09-17 11:41:00'),
(79, 2819, '2', 2.90839, 7, 1, '2017-09-17 11:41:00'),
(79, 2816, '4', 2.93545, 5, 1, '2017-09-17 11:41:00'),
(79, 2728, '4', 2.82233, 13, 1, '2017-09-17 11:41:00'),
(79, 2729, '1', -2.85189, 11, 0, '2017-09-17 11:41:00'),
(79, 2825, '4', -2.86633, 10, 0, '2017-09-17 11:41:00'),
(79, 2634, '4', 2.88055, 9, 1, '2017-09-17 11:41:00'),
(79, 2629, '1', 2.90839, 7, 1, '2017-09-17 11:41:00'),
(79, 2627, '4', -2.96178, 3, 0, '2017-09-17 11:41:00'),
(79, 2633, '3', 2.85189, 11, 1, '2017-09-17 11:41:00'),
(79, 2616, '2', -2.82233, 13, 0, '2017-09-17 11:41:00'),
(79, 2624, '4', -2.71081, 20, 0, '2017-09-17 11:41:00'),
(79, 2628, '4', -2.85189, 11, 0, '2017-09-17 11:41:00'),
(79, 2620, '4', 2.93545, 5, 1, '2017-09-17 11:41:00'),
(79, 2635, '1', 2.90839, 7, 1, '2017-09-17 11:41:00'),
(79, 2626, '3', 2.85189, 11, 1, '2017-09-17 11:41:00'),
(79, 2625, '3', 2.89457, 8, 1, '2017-09-17 11:41:00'),
(79, 2622, '2', 2.79181, 15, 1, '2017-09-17 11:41:01'),
(79, 2739, '0', 0, 16, -1, '2017-09-17 11:41:01'),
(79, 2737, '3', -1.47, 9, 0, '2017-09-17 11:41:01'),
(79, 2755, '3', 0.963333, 13, 1, '2017-09-17 11:41:01'),
(79, 2763, '1', 1.92, 6, 1, '2017-09-17 11:41:01'),
(79, 2760, '4', 0.653333, 16, 1, '2017-09-17 11:41:01'),
(79, 2749, '4', 1.47, 9, 1, '2017-09-17 11:41:01'),
(79, 2762, '3', 1.76333, 7, 1, '2017-09-17 11:41:01'),
(79, 2758, '1', -1.76333, 7, 0, '2017-09-17 11:41:01'),
(79, 2757, '3', 1.92, 6, 1, '2017-09-17 11:41:01'),
(79, 2745, '2', 2.08333, 5, 1, '2017-09-17 11:41:01'),
(79, 2748, '4', -1.20333, 11, 0, '2017-09-17 11:41:01'),
(79, 2759, '2', 2.08333, 5, 1, '2017-09-17 11:41:01'),
(79, 2736, '4', 1.92, 6, 1, '2017-09-17 11:41:01'),
(79, 2784, '2', 2.34, 11, 1, '2017-09-17 11:41:01'),
(79, 2768, '1', -1.74, 21, 0, '2017-09-17 11:41:01'),
(79, 2772, '2', 2.7, 5, 1, '2017-09-17 11:41:01'),
(79, 2771, '3', 1.8, 20, 1, '2017-09-17 11:41:02'),
(79, 2774, '4', 2.16, 14, 1, '2017-09-17 11:41:02'),
(79, 2766, '1', 2.58, 7, 1, '2017-09-17 11:41:02'),
(79, 2793, '2', 2.85539, 5, 1, '2017-09-17 11:41:02'),
(79, 2799, '2', -2.49214, 17, 0, '2017-09-17 11:41:02'),
(79, 2800, '2', 2.70701, 10, 1, '2017-09-17 11:41:02'),
(79, 2809, '2', 2.23459, 25, 1, '2017-09-17 11:41:02'),
(79, 2811, '1', 2.70701, 10, 1, '2017-09-17 11:41:02'),
(79, 2794, '4', -2.52339, 16, 0, '2017-09-17 11:41:02'),
(79, 2796, '2', -2.55445, 15, 0, '2017-09-17 11:41:02'),
(79, 2807, '3', 2.85539, 5, 1, '2017-09-17 11:41:02'),
(79, 2810, '4', 2.67685, 11, 1, '2017-09-17 11:41:02'),
(79, 2814, '4', -2.64652, 12, 0, '2017-09-17 11:41:02'),
(79, 2798, '1', -2.64652, 12, 0, '2017-09-17 11:41:02'),
(79, 2808, '1', -2.61601, 13, 0, '2017-09-17 11:41:02'),
(79, 2803, '3', 2.4607, 18, 1, '2017-09-17 11:41:02'),
(79, 2813, '4', -2.58532, 14, 0, '2017-09-17 11:41:02'),
(79, 2812, '3', 2.73701, 9, 1, '2017-09-17 11:41:02'),
(79, 2806, '4', -2.55445, 15, 0, '2017-09-17 11:41:02'),
(79, 2797, '1', -2.70701, 10, 0, '2017-09-17 11:41:03'),
(79, 2787, '3', -2.64, 6, 0, '2017-09-17 11:41:03'),
(79, 2770, '2', 2.58, 7, 1, '2017-09-17 11:41:03'),
(79, 2779, '1', 1.8, 20, 1, '2017-09-17 11:41:03'),
(79, 2783, '3', 1.92, 18, 1, '2017-09-17 11:41:03'),
(79, 2817, '3', 1.88988, 35, 1, '2017-09-17 11:41:03'),
(79, 2805, '1', 2.79651, 7, 1, '2017-09-17 11:41:03'),
(79, 2802, '3', 2.49214, 17, 1, '2017-09-17 11:41:03'),
(79, 2815, '4', -2.67685, 11, 0, '2017-09-17 11:41:03'),
(79, 2792, '2', -2.61601, 13, 0, '2017-09-17 11:41:03'),
(79, 2801, '2', -2.13414, 28, 0, '2017-09-17 11:41:03'),
(79, 2795, '3', 2.8846, 4, 1, '2017-09-17 11:41:03'),
(79, 2818, '4', -2.67685, 11, 0, '2017-09-17 11:41:03'),
(79, 2839, '0', 0, 6, -1, '2017-09-17 11:41:03'),
(79, 2840, '0', 0, 8, -1, '2017-09-17 11:41:03'),
(79, 2826, '1', -2.55832, 17, 0, '2017-09-17 11:41:03'),
(79, 2789, '4', -1.62, 23, 0, '2017-09-17 11:41:03'),
(79, 2790, '2', -1.86, 19, 0, '2017-09-17 11:41:03'),
(79, 2775, '4', -2.64, 6, 0, '2017-09-17 11:41:04'),
(79, 2786, '3', -0.84, 36, 0, '2017-09-17 11:41:04'),
(79, 2765, '4', 2.16, 14, 1, '2017-09-17 11:41:04'),
(79, 2773, '2', 2.7, 5, 1, '2017-09-17 11:41:04'),
(79, 2782, '1', 2.16, 14, 1, '2017-09-17 11:41:04'),
(79, 2764, '4', -2.58, 7, 0, '2017-09-17 11:41:04'),
(79, 2769, '3', -1.8, 20, 0, '2017-09-17 11:41:04'),
(79, 2777, '4', -2.46, 9, 0, '2017-09-17 11:41:04'),
(79, 2767, '4', 2.52, 8, 1, '2017-09-17 11:41:04'),
(79, 2780, '1', 2.22, 13, 1, '2017-09-17 11:41:04'),
(79, 2778, '2', 2.28, 12, 1, '2017-09-17 11:41:04'),
(79, 2776, '1', 2.46, 9, 1, '2017-09-17 11:41:04'),
(79, 2857, '2', 2.71828, 11, 1, '2017-09-17 11:41:04'),
(79, 2854, '4', 2.4211, 22, 1, '2017-09-17 11:41:04'),
(79, 2828, '4', -2.47645, 20, 0, '2017-09-17 11:41:04'),
(79, 2851, '3', -2.84806, 6, 0, '2017-09-17 11:41:04'),
(79, 2842, '1', 2.84806, 6, 1, '2017-09-17 11:41:05'),
(79, 2827, '2', -2.79651, 8, 0, '2017-09-17 11:41:05'),
(79, 2856, '1', -2.69195, 12, 0, '2017-09-17 11:41:05'),
(79, 2791, '3', 2.58, 7, 1, '2017-09-17 11:41:05'),
(79, 2846, '2', 2.55832, 17, 1, '2017-09-17 11:41:05'),
(79, 2848, '2', 2.77056, 9, 1, '2017-09-17 11:41:05'),
(79, 2837, '4', -2.79651, 8, 0, '2017-09-17 11:41:05'),
(79, 2843, '1', 2.69195, 12, 1, '2017-09-17 11:41:05'),
(79, 2832, '3', 2.82234, 7, 1, '2017-09-17 11:41:05'),
(79, 2834, '2', -2.69195, 12, 0, '2017-09-17 11:41:05'),
(79, 2824, '1', 2.77056, 9, 1, '2017-09-17 11:41:05'),
(79, 2844, '1', 2.44885, 21, 1, '2017-09-17 11:41:05'),
(79, 2850, '1', 2.69195, 12, 1, '2017-09-17 11:41:05'),
(79, 2821, '1', -2.53118, 18, 0, '2017-09-17 11:41:05'),
(79, 2830, '2', 2.36512, 24, 1, '2017-09-17 11:41:05'),
(79, 2829, '4', -2.4211, 22, 0, '2017-09-17 11:41:05'),
(79, 2858, '3', -2.19301, 30, 0, '2017-09-17 11:41:05'),
(79, 2836, '4', 2.87366, 5, 1, '2017-09-17 11:41:06'),
(79, 2831, '0', 0, 6, -1, '2017-09-17 11:41:06'),
(79, 2849, '1', -2.61218, 15, 0, '2017-09-17 11:41:06'),
(79, 2822, '4', 2.47645, 20, 1, '2017-09-17 11:41:06'),
(79, 2922, '3', -2.79651, 8, 0, '2017-09-17 11:41:06'),
(79, 2876, '1', -2.61218, 15, 0, '2017-09-17 11:41:06'),
(79, 2912, '1', 2.53118, 18, 1, '2017-09-17 11:41:06'),
(79, 2919, '4', 2.66549, 13, 1, '2017-09-17 11:41:06'),
(79, 2863, '1', 2.66549, 13, 1, '2017-09-17 11:41:06'),
(79, 2915, '3', -2.86575, 7, 0, '2017-09-17 11:41:06'),
(79, 2875, '2', 2.77056, 9, 1, '2017-09-17 11:41:06'),
(79, 2869, '3', 2.64102, 18, 1, '2017-09-17 11:41:06'),
(79, 2872, '2', 2.84605, 8, 1, '2017-09-17 11:41:06'),
(79, 2880, '3', -2.68328, 16, 0, '2017-09-17 11:41:06'),
(79, 2920, '2', 2.66224, 17, 1, '2017-09-17 11:41:06'),
(79, 2860, '1', -2.76586, 12, 0, '2017-09-17 11:41:06'),
(79, 2927, '1', 2.61964, 19, 1, '2017-09-17 11:41:06'),
(79, 2878, '4', -2.74545, 13, 0, '2017-09-17 11:41:06'),
(79, 2917, '1', 2.80624, 10, 1, '2017-09-17 11:41:06'),
(79, 2867, '3', 2.84605, 8, 1, '2017-09-17 11:41:07'),
(79, 2930, '4', 2.84605, 8, 1, '2017-09-17 11:41:07'),
(79, 2873, '3', 2.86015, 9, 1, '2017-09-17 11:41:07'),
(79, 2913, '3', 2.60112, 24, 1, '2017-09-17 11:41:07'),
(79, 2943, '2', 2.86015, 9, 1, '2017-09-17 11:41:07'),
(79, 2953, '3', 2.87619, 8, 1, '2017-09-17 11:41:07'),
(79, 2941, '3', 2.77037, 17, 1, '2017-09-17 11:41:07'),
(79, 2954, '1', 2.67947, 23, 1, '2017-09-17 11:41:07'),
(79, 2963, '0', 0, 9, -1, '2017-09-17 11:41:07'),
(79, 2965, '1', -2.89647, 8, 0, '2017-09-17 11:41:07'),
(79, 2938, '4', -2.89647, 8, 0, '2017-09-17 11:41:07'),
(79, 2946, '4', 2.82781, 13, 1, '2017-09-17 11:41:07'),
(79, 3443, '0', 0, 8, -1, '2017-09-17 11:41:07'),
(79, 3449, '1', -0.9075, 9, 0, '2017-09-17 11:41:07'),
(79, 3472, '0', -0.0075, 20, 0, '2017-09-17 11:41:07'),
(79, 3494, '2', 1.88021, 5, 1, '2017-09-17 11:41:08'),
(79, 3487, '1', -0.6075, 11, 0, '2017-09-17 11:41:08'),
(79, 3505, '3', -0.443787, 16, 0, '2017-09-17 11:41:08'),
(79, 3479, '1', 1.2675, 7, 1, '2017-09-17 11:41:08'),
(79, 3506, '3', -0.0344388, 25, 0, '2017-09-17 11:41:08'),
(79, 3454, '2', -0.6075, 11, 0, '2017-09-17 11:41:08'),
(79, 3484, '2', 1.47, 6, 1, '2017-09-17 11:41:08'),
(79, 3489, '2', 1.08, 8, 1, '2017-09-17 11:41:08'),
(79, 3452, '2', -1.17188, 9, 0, '2017-09-17 11:41:08'),
(79, 3504, '2', -0.110947, 21, 0, '2017-09-17 11:41:08'),
(79, 3496, '0', -0.0075, 20, 0, '2017-09-17 11:41:08'),
(79, 3499, '4', 1.2675, 7, 1, '2017-09-17 11:41:08'),
(79, 3475, '4', -1.6875, 6, 0, '2017-09-17 11:41:08'),
(79, 3469, '0', 0, 15, -1, '2017-09-17 11:41:08'),
(79, 3459, '1', -0.1875, 15, 0, '2017-09-17 11:41:08'),
(79, 3465, '1', 0.502066, 13, 1, '2017-09-17 11:41:08'),
(79, 3464, '2', 1.02083, 10, 1, '2017-09-17 11:41:08'),
(79, 3445, '3', 0.9075, 9, 1, '2017-09-17 11:41:08'),
(79, 3441, '1', 0.9075, 9, 1, '2017-09-17 11:41:08'),
(79, 3447, '4', 1.47, 6, 1, '2017-09-17 11:41:08'),
(79, 3502, '1', -0.880208, 11, 0, '2017-09-17 11:41:09'),
(79, 3509, '4', -2.1675, 3, 0, '2017-09-17 11:41:09'),
(79, 3461, '0', 0, 10, -1, '2017-09-17 11:41:09'),
(79, 3563, '2', -1.92, 4, 0, '2017-09-17 11:41:09'),
(79, 3527, '4', 1.08, 8, 1, '2017-09-17 11:41:09'),
(79, 3575, '4', 0.0675, 17, 1, '2017-09-17 11:41:09'),
(79, 3599, '1', -0.0399408, 23, 0, '2017-09-17 11:41:09'),
(79, 3569, '2', -0.48, 12, 0, '2017-09-17 11:41:09'),
(79, 3557, '2', 1.17188, 6, 1, '2017-09-17 11:41:09'),
(79, 3542, '3', -0.403333, 19, 0, '2017-09-17 11:41:09'),
(79, 3517, '1', 0.148148, 14, 1, '2017-09-17 11:41:09'),
(79, 3572, '3', 1.47, 6, 1, '2017-09-17 11:41:09'),
(79, 3531, '2', 0.0075, 19, 1, '2017-09-17 11:41:09'),
(79, 3535, '4', -0.75, 10, 0, '2017-09-17 11:41:09'),
(79, 3597, '4', 1.77515, 6, 1, '2017-09-17 11:41:09'),
(79, 3581, '4', -1.50521, 7, 0, '2017-09-17 11:41:09'),
(79, 3529, '0', -0.0117188, 16, 0, '2017-09-17 11:41:09'),
(79, 3584, '3', -0.520833, 14, 0, '2017-09-17 11:41:09'),
(79, 3593, '2', -1.17188, 9, 0, '2017-09-17 11:41:09'),
(79, 3523, '1', -0.27, 21, 0, '2017-09-17 11:41:09'),
(79, 3514, '3', 0.925926, 8, 1, '2017-09-17 11:41:10'),
(79, 3560, '2', 2.1675, 3, 1, '2017-09-17 11:41:10'),
(79, 3533, '2', -0.949219, 7, 0, '2017-09-17 11:41:10'),
(79, 3538, '2', 1.33333, 10, 1, '2017-09-17 11:41:10'),
(79, 3588, '3', -1.88021, 5, 0, '2017-09-17 11:41:10'),
(79, 3546, '2', -1.98047, 3, 0, '2017-09-17 11:41:10'),
(79, 3017, '2', 2.25333, 4, 1, '2017-09-17 11:41:11'),
(79, 3075, '3', 1.08, 12, 1, '2017-09-17 11:41:11'),
(79, 3134, '4', 1.47, 12, 1, '2017-09-17 11:41:11'),
(79, 3085, '3', -1.20333, 11, 0, '2017-09-17 11:41:11'),
(79, 3067, '3', 1.92, 6, 1, '2017-09-17 11:41:11'),
(79, 3061, '3', 1.33333, 10, 1, '2017-09-17 11:41:11'),
(79, 3029, '2', -2.08333, 5, 0, '2017-09-17 11:41:11'),
(79, 3082, '1', -1.20333, 11, 0, '2017-09-17 11:41:11'),
(79, 3053, '2', -1.47, 9, 0, '2017-09-17 11:41:11'),
(79, 3010, '4', 2.08333, 5, 1, '2017-09-17 11:41:11'),
(79, 3070, '1', -0.75, 15, 0, '2017-09-17 11:41:11'),
(79, 3021, '1', 1.76333, 7, 1, '2017-09-17 11:41:12'),
(79, 3094, '2', 1.47, 9, 1, '2017-09-17 11:41:12'),
(79, 3036, '1', 1.08, 12, 1, '2017-09-17 11:41:12'),
(79, 3078, '1', -0.563333, 17, 0, '2017-09-17 11:41:12'),
(79, 3072, '4', 1.92, 6, 1, '2017-09-17 11:41:12'),
(79, 3080, '1', 1.47, 9, 1, '2017-09-17 11:41:12'),
(79, 3141, '3', -1.5, 20, 0, '2017-09-17 11:41:12'),
(79, 3022, '2', -0.963333, 13, 0, '2017-09-17 11:41:12'),
(79, 3088, '2', -2.08333, 5, 0, '2017-09-17 11:41:12'),
(79, 3031, '2', -0.853333, 14, 0, '2017-09-17 11:41:12'),
(79, 3091, '1', -1.76333, 7, 0, '2017-09-17 11:41:12'),
(79, 3033, '3', -0.12, 24, 0, '2017-09-17 11:41:12'),
(79, 3038, '1', 0.963333, 13, 1, '2017-09-17 11:41:12'),
(79, 3057, '2', -0.48, 18, 0, '2017-09-17 11:41:12'),
(79, 3059, '1', 1.76333, 7, 1, '2017-09-17 11:41:12'),
(79, 3064, '2', -0.853333, 14, 0, '2017-09-17 11:41:12'),
(79, 3086, '2', -1.61333, 8, 0, '2017-09-17 11:41:13'),
(79, 3014, '4', -2.25333, 4, 0, '2017-09-17 11:41:13'),
(79, 3025, '3', 0.403333, 19, 1, '2017-09-17 11:41:13'),
(79, 3127, '3', 2.29688, 5, 1, '2017-09-17 11:41:13'),
(79, 3154, '2', 2.43, 4, 1, '2017-09-17 11:41:13'),
(79, 3135, '1', -1.57687, 11, 0, '2017-09-17 11:41:13'),
(79, 3151, '2', 2.04187, 7, 1, '2017-09-17 11:41:13'),
(79, 3104, '1', -1.92, 8, 0, '2017-09-17 11:41:13'),
(79, 3118, '0', 0, 26, -1, '2017-09-17 11:41:13'),
(79, 3107, '4', 2.29688, 5, 1, '2017-09-17 11:41:13'),
(79, 3120, '2', 1.17188, 15, 1, '2017-09-17 11:41:13'),
(79, 3096, '3', -2.04187, 7, 0, '2017-09-17 11:41:13'),
(79, 3113, '1', 2.29688, 5, 1, '2017-09-17 11:41:13'),
(79, 3131, '1', -2.1675, 6, 0, '2017-09-17 11:41:13');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(79, 3098, '2', 2.1675, 6, 1, '2017-09-17 11:41:13'),
(79, 3146, '1', 0.75, 20, 1, '2017-09-17 11:41:14'),
(79, 3128, '0', 0, 14, -1, '2017-09-17 11:41:14'),
(79, 3130, '3', -1.80187, 9, 0, '2017-09-17 11:41:14'),
(79, 3116, '2', -1.17188, 15, 0, '2017-09-17 11:41:14'),
(79, 3138, '1', 1.6875, 10, 1, '2017-09-17 11:41:14'),
(79, 3162, '0', 0, 13, -1, '2017-09-17 11:41:14'),
(79, 3110, '4', 0.27, 28, 1, '2017-09-17 11:41:14'),
(79, 3111, '3', -0.75, 20, 0, '2017-09-17 11:41:14'),
(79, 3115, '2', -1.6875, 10, 0, '2017-09-17 11:41:14'),
(79, 3157, '3', 1.6875, 10, 1, '2017-09-17 11:41:14'),
(79, 3122, '1', 2.1675, 6, 1, '2017-09-17 11:41:14'),
(79, 3143, '1', -2.43, 4, 0, '2017-09-17 11:41:14'),
(79, 3108, '4', -0.9075, 18, 0, '2017-09-17 11:41:14'),
(79, 3125, '1', -1.6875, 10, 0, '2017-09-17 11:41:14'),
(79, 3148, '2', 1.6875, 10, 1, '2017-09-17 11:41:14'),
(79, 3185, '1', -2.0172, 9, 0, '2017-09-17 11:41:14'),
(79, 3175, '4', -0.3072, 34, 0, '2017-09-17 11:41:15'),
(79, 3172, '1', -1.3872, 16, 0, '2017-09-17 11:41:15'),
(79, 3181, '2', 0.12, 40, 1, '2017-09-17 11:41:15'),
(79, 3174, '4', -1.5552, 14, 0, '2017-09-17 11:41:15'),
(79, 3194, '4', 1.92, 10, 1, '2017-09-17 11:41:15'),
(79, 3167, '3', -2.3232, 6, 0, '2017-09-17 11:41:15'),
(79, 3198, '3', -1.1532, 19, 0, '2017-09-17 11:41:15'),
(79, 3200, '4', -1.47, 15, 0, '2017-09-17 11:41:15'),
(79, 3188, '1', 0.75, 25, 1, '2017-09-17 11:41:15'),
(79, 3202, '4', 2.2188, 7, 1, '2017-09-17 11:41:15'),
(79, 3192, '3', 1.6428, 13, 1, '2017-09-17 11:41:15'),
(79, 3178, '1', -1.7328, 12, 0, '2017-09-17 11:41:15'),
(79, 3170, '3', 1.8252, 11, 1, '2017-09-17 11:41:15'),
(79, 3190, '1', -1.2288, 18, 0, '2017-09-17 11:41:15'),
(79, 3206, '3', -2.2188, 7, 0, '2017-09-17 11:41:15'),
(79, 3180, '2', -1.6428, 13, 0, '2017-09-17 11:41:15'),
(79, 3183, '4', -1.8252, 11, 0, '2017-09-17 11:41:16'),
(79, 3164, '4', -1.8252, 11, 0, '2017-09-17 11:41:16'),
(79, 3204, '4', -1.2288, 18, 0, '2017-09-17 11:41:16'),
(79, 3161, '4', -0.2028, 37, 0, '2017-09-17 11:41:16'),
(79, 3208, '3', 2.2188, 7, 1, '2017-09-17 11:41:16'),
(79, 3186, '1', -1.1532, 19, 0, '2017-09-17 11:41:16'),
(79, 3177, '4', 0.8112, 24, 1, '2017-09-17 11:41:16'),
(79, 3209, '1', 1.3872, 16, 1, '2017-09-17 11:41:16'),
(79, 3168, '3', -0.27, 35, 0, '2017-09-17 11:41:16'),
(79, 3196, '3', -2.0172, 9, 0, '2017-09-17 11:41:16'),
(79, 3205, '1', -0.813802, 23, 0, '2017-09-17 11:41:16'),
(79, 3228, '2', -1.41797, 15, 0, '2017-09-17 11:41:16'),
(79, 3217, '1', -1.78255, 11, 0, '2017-09-17 11:41:16'),
(79, 1172, '4', 0.3675, 13, 1, '2017-09-17 11:41:16'),
(79, 1170, '2', 1.02083, 10, 1, '2017-09-17 11:41:16'),
(79, 1174, '3', 0.284024, 18, 1, '2017-09-17 11:41:16'),
(79, 1263, '4', -1.36688, 13, 0, '2017-09-17 11:41:17'),
(79, 1195, '4', 0.12, 16, 1, '2017-09-17 11:41:17'),
(79, 1197, '1', 0.880208, 11, 1, '2017-09-17 11:41:17'),
(79, 1203, '3', 0.0833333, 25, 1, '2017-09-17 11:41:17'),
(79, 1292, '1', 1.08, 12, 1, '2017-09-17 11:41:17'),
(79, 1291, '4', 0.03, 18, 1, '2017-09-17 11:41:17'),
(79, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:41:17'),
(79, 1216, '4', 1.50521, 7, 1, '2017-09-17 11:41:17'),
(79, 1297, '0', 0, 5, -1, '2017-09-17 11:41:17'),
(79, 1194, '0', -0.00382653, 28, 0, '2017-09-17 11:41:17'),
(79, 1218, '4', 0.6075, 11, 1, '2017-09-17 11:41:17'),
(79, 1196, '4', 1.33333, 8, 1, '2017-09-17 11:41:17'),
(79, 1227, '2', -0.333333, 16, 0, '2017-09-17 11:41:17'),
(79, 1169, '2', 0.255208, 17, 1, '2017-09-17 11:41:17'),
(79, 1276, '0', 0, 19, -1, '2017-09-17 11:41:18'),
(79, 1177, '2', 0.892562, 10, 1, '2017-09-17 11:41:18'),
(79, 1198, '4', 0.75, 10, 1, '2017-09-17 11:41:18'),
(79, 1270, '4', 0.886106, 21, 1, '2017-09-17 11:41:18'),
(79, 1184, '0', 0, 17, -1, '2017-09-17 11:41:18'),
(79, 1186, '3', 1.38138, 9, 1, '2017-09-17 11:41:18'),
(79, 1183, '2', 0.502066, 13, 1, '2017-09-17 11:41:18'),
(79, 1208, '2', -1.86, 19, 0, '2017-09-17 11:41:18'),
(79, 1190, '4', 1.53061, 8, 1, '2017-09-17 11:41:18'),
(79, 1210, '4', -0.880208, 11, 0, '2017-09-17 11:41:18'),
(79, 1173, '2', 1.2675, 7, 1, '2017-09-17 11:41:18'),
(79, 1268, '1', 0.5, 40, 1, '2017-09-17 11:41:18'),
(79, 1220, '1', -2.25, 7, 0, '2017-09-17 11:41:18'),
(79, 1261, '1', -0.0747922, 32, 0, '2017-09-17 11:41:18'),
(79, 1199, '2', -0.143555, 25, 0, '2017-09-17 11:41:18'),
(79, 1287, '2', -1.2513, 17, 0, '2017-09-17 11:41:18'),
(79, 1281, '3', 0.48, 18, 1, '2017-09-17 11:41:19'),
(79, 1200, '3', -0.453704, 22, 0, '2017-09-17 11:41:19'),
(79, 1282, '3', 0.853333, 14, 1, '2017-09-17 11:41:19'),
(79, 1257, '1', -1.59505, 13, 0, '2017-09-17 11:41:19'),
(79, 1269, '2', -1.2513, 17, 0, '2017-09-17 11:41:19'),
(79, 1175, '4', 0.0117188, 30, 1, '2017-09-17 11:41:19'),
(79, 1171, '4', 0.6075, 11, 1, '2017-09-17 11:41:19'),
(79, 1265, '4', -1.86501, 11, 0, '2017-09-17 11:41:19'),
(79, 1189, '3', 0.646684, 15, 1, '2017-09-17 11:41:19'),
(79, 1202, '2', -1.22454, 13, 0, '2017-09-17 11:41:19'),
(79, 1293, '2', 1.33333, 8, 1, '2017-09-17 11:41:19'),
(79, 1219, '3', 1.79132, 5, 1, '2017-09-17 11:41:19'),
(79, 1294, '2', -1.33333, 8, 0, '2017-09-17 11:41:19'),
(79, 1217, '3', 0.27, 14, 1, '2017-09-17 11:41:19'),
(79, 1191, '3', 1.85204, 6, 1, '2017-09-17 11:41:19'),
(79, 1284, '1', -0.0675, 17, 0, '2017-09-17 11:41:19'),
(79, 1187, '4', -1.41797, 10, 0, '2017-09-17 11:41:19'),
(79, 1286, '3', -2.25333, 8, 0, '2017-09-17 11:41:19'),
(79, 171, '4', -0.394219, 51, 0, '2017-09-17 11:41:20'),
(79, 1275, '1', -1.81481, 12, 0, '2017-09-17 11:41:20'),
(79, 1250, '1', 1.76333, 14, 1, '2017-09-17 11:41:20'),
(79, 1176, '3', -1.53061, 8, 0, '2017-09-17 11:41:20'),
(79, 1299, '2', -2.73347, 3, 0, '2017-09-17 11:41:20'),
(79, 173, '2', -1.08, 40, 0, '2017-09-17 11:41:20'),
(79, 1289, '1', -1.80187, 9, 0, '2017-09-17 11:41:20'),
(79, 1283, '4', 0.520833, 14, 1, '2017-09-17 11:41:20'),
(79, 1229, '4', 2.27263, 7, 1, '2017-09-17 11:41:21'),
(79, 1209, '3', -2.2188, 7, 0, '2017-09-17 11:41:21'),
(79, 1298, '3', -2.7075, 3, 0, '2017-09-17 11:41:21'),
(79, 1206, '3', -1.33333, 20, 0, '2017-09-17 11:41:21'),
(79, 1188, '1', 2.02423, 5, 1, '2017-09-17 11:41:21'),
(79, 1204, '2', -0.00520833, 46, 0, '2017-09-17 11:41:21'),
(79, 172, '1', -0.595289, 61, 0, '2017-09-17 11:41:21'),
(79, 1295, '3', -1.17188, 9, 0, '2017-09-17 11:41:21'),
(79, 1296, '2', 1.50521, 7, 1, '2017-09-17 11:41:21'),
(79, 1264, '2', -2.15978, 10, 0, '2017-09-17 11:41:21'),
(79, 1262, '0', -0.00110947, 52, 0, '2017-09-17 11:41:21'),
(79, 1241, '3', -1.80589, 13, 0, '2017-09-17 11:41:21'),
(79, 1285, '3', 0.563333, 17, 1, '2017-09-17 11:41:21'),
(79, 1274, '3', -2.78954, 2, 0, '2017-09-17 11:41:21'),
(80, 871, '0', 0, 21, -1, '2017-09-17 11:41:22'),
(80, 856, '4', 2.05737, 11, 1, '2017-09-17 11:41:22'),
(80, 868, '1', 2.29688, 8, 1, '2017-09-17 11:41:22'),
(80, 855, '4', -2.05737, 11, 0, '2017-09-17 11:41:22'),
(80, 2401, '4', 2.05314, 19, 1, '2017-09-17 11:41:22'),
(80, 858, '1', 1.14083, 23, 1, '2017-09-17 11:41:22'),
(80, 340, '3', 2.36297, 9, 1, '2017-09-17 11:41:22'),
(80, 1639, '1', -1.00554, 32, 0, '2017-09-17 11:41:22'),
(80, 864, '3', 2.52083, 5, 1, '2017-09-17 11:41:22'),
(80, 867, '3', 2.00083, 11, 1, '2017-09-17 11:41:22'),
(80, 357, '4', -1.55, 29, 0, '2017-09-17 11:41:22'),
(80, 326, '2', -0.963333, 39, 0, '2017-09-17 11:41:23'),
(80, 361, '1', 2.1132, 9, 1, '2017-09-17 11:41:23'),
(80, 891, '1', 0.75, 27, 1, '2017-09-17 11:41:23'),
(80, 358, '2', 2.4375, 12, 1, '2017-09-17 11:41:23'),
(80, 875, '1', 2.25, 15, 1, '2017-09-17 11:41:23'),
(80, 1683, '0', 0, 15, -1, '2017-09-17 11:41:23'),
(80, 303, '2', 2.18571, 19, 1, '2017-09-17 11:41:23'),
(80, 890, '0', -0.0833333, 36, 0, '2017-09-17 11:41:23'),
(80, 918, '3', 2.6875, 10, 1, '2017-09-17 11:41:23'),
(80, 911, '1', 2.58532, 16, 1, '2017-09-17 11:41:23'),
(80, 360, '2', 2.45974, 17, 1, '2017-09-17 11:41:23'),
(80, 894, '4', -1.14339, 26, 0, '2017-09-17 11:41:23'),
(80, 912, '4', -2.78787, 10, 0, '2017-09-17 11:41:23'),
(80, 969, '1', -2.63128, 15, 0, '2017-09-17 11:41:23'),
(80, 882, '4', 1.125, 40, 1, '2017-09-17 11:41:23'),
(80, 907, '2', 2.75691, 10, 1, '2017-09-17 11:41:23'),
(80, 899, '1', -2.56734, 20, 0, '2017-09-17 11:41:23'),
(80, 896, '2', -2.47645, 10, 0, '2017-09-17 11:41:23'),
(80, 881, '4', -2.37, 21, 0, '2017-09-17 11:41:24'),
(80, 310, '3', 2.76, 4, 1, '2017-09-17 11:41:24'),
(80, 306, '4', -2.51786, 9, 0, '2017-09-17 11:41:24'),
(80, 307, '2', -2.41071, 11, 0, '2017-09-17 11:41:24'),
(80, 887, '1', 2.57812, 9, 1, '2017-09-17 11:41:24'),
(80, 892, '1', 2.4, 6, 1, '2017-09-17 11:41:24'),
(80, 304, '2', 2.46429, 10, 1, '2017-09-17 11:41:24'),
(80, 963, '4', -2.78455, 11, 0, '2017-09-17 11:41:24'),
(80, 308, '4', -2.05714, 22, 0, '2017-09-17 11:41:24'),
(80, 305, '3', -1.5, 34, 0, '2017-09-17 11:41:24'),
(80, 876, '2', 1.85, 23, 1, '2017-09-17 11:41:24'),
(80, 302, '4', -2.43333, 17, 0, '2017-09-17 11:41:24'),
(80, 309, '1', -2.75, 5, 0, '2017-09-17 11:41:24'),
(80, 909, '4', 2.73, 9, 1, '2017-09-17 11:41:24'),
(80, 893, '2', -2.5, 6, 0, '2017-09-17 11:41:24'),
(80, 312, '2', -2.16, 14, 0, '2017-09-17 11:41:24'),
(80, 872, '3', -1.47, 18, 0, '2017-09-17 11:41:24'),
(80, 873, '2', 2.3168, 8, 1, '2017-09-17 11:41:25'),
(80, 904, '3', -2.52857, 11, 0, '2017-09-17 11:41:25'),
(80, 346, '1', 2.4882, 5, 1, '2017-09-17 11:41:25'),
(80, 903, '2', -2.71875, 9, 0, '2017-09-17 11:41:25'),
(80, 362, '4', -2.00083, 11, 0, '2017-09-17 11:41:25'),
(80, 923, '4', 1.79132, 20, 1, '2017-09-17 11:41:25'),
(80, 857, '3', 1.47, 18, 1, '2017-09-17 11:41:25'),
(80, 874, '1', 2.1132, 9, 1, '2017-09-17 11:41:25'),
(80, 910, '1', -2.72727, 8, 0, '2017-09-17 11:41:25'),
(80, 865, '3', -2.00083, 11, 0, '2017-09-17 11:41:25'),
(80, 1125, '2', 1.47, 18, 1, '2017-09-17 11:41:26'),
(80, 863, '2', 2.31956, 7, 1, '2017-09-17 11:41:26'),
(80, 316, '2', -2.67188, 7, 0, '2017-09-17 11:41:26'),
(80, 345, '2', -0.9075, 27, 0, '2017-09-17 11:41:26'),
(80, 859, '4', 2.58673, 5, 1, '2017-09-17 11:41:26'),
(80, 902, '2', -2.26843, 12, 0, '2017-09-17 11:41:26'),
(80, 908, '4', -2.66878, 5, 0, '2017-09-17 11:41:26'),
(80, 317, '1', 0.653333, 32, 1, '2017-09-17 11:41:26'),
(80, 905, '2', 0.787969, 39, 1, '2017-09-17 11:41:26'),
(80, 869, '2', 0.942837, 29, 1, '2017-09-17 11:41:26'),
(80, 900, '2', 2.45578, 8, 1, '2017-09-17 11:41:26'),
(80, 313, '3', 0.865226, 25, 1, '2017-09-17 11:41:26'),
(80, 901, '2', 2.67273, 12, 1, '2017-09-17 11:41:26'),
(80, 897, '2', 2.4, 8, 1, '2017-09-17 11:41:26'),
(80, 898, '4', -2.175, 11, 0, '2017-09-17 11:41:26'),
(80, 895, '3', -2.36842, 8, 0, '2017-09-17 11:41:26'),
(80, 964, '4', 2.14773, 25, 1, '2017-09-17 11:41:26'),
(80, 314, '4', -1.5, 25, 0, '2017-09-17 11:41:27'),
(80, 315, '3', 2.53846, 8, 1, '2017-09-17 11:41:27'),
(80, 356, '1', 2.59091, 9, 1, '2017-09-17 11:41:27'),
(80, 917, '4', 2.85, 4, 1, '2017-09-17 11:41:27'),
(80, 324, '4', 1.44643, 29, 1, '2017-09-17 11:41:27'),
(80, 880, '1', 2.35829, 20, 1, '2017-09-17 11:41:27'),
(80, 919, '3', 0.533534, 74, 1, '2017-09-17 11:41:27'),
(80, 3210, '2', 2.43037, 13, 1, '2017-09-17 11:41:27'),
(80, 926, '1', 2.75492, 12, 1, '2017-09-17 11:41:27'),
(80, 321, '2', 2.71302, 7, 1, '2017-09-17 11:41:27'),
(80, 311, '4', 2.77345, 6, 1, '2017-09-17 11:41:27'),
(80, 924, '4', -2.84806, 6, 0, '2017-09-17 11:41:27'),
(80, 319, '4', 2.79651, 6, 1, '2017-09-17 11:41:27'),
(80, 921, '4', -2.7918, 9, 0, '2017-09-17 11:41:27'),
(80, 870, '4', 2.69586, 8, 1, '2017-09-17 11:41:27'),
(80, 916, '2', 2.89491, 5, 1, '2017-09-17 11:41:27'),
(80, 925, '2', 2.91353, 5, 1, '2017-09-17 11:41:28'),
(80, 931, '4', 2.8931, 7, 1, '2017-09-17 11:41:28'),
(80, 913, '0', 0, 12, -1, '2017-09-17 11:41:28'),
(80, 915, '0', 0, 0, -1, '2017-09-17 11:41:28'),
(80, 927, '2', -2.68677, 19, 0, '2017-09-17 11:41:28'),
(80, 336, '4', -2.71109, 11, 0, '2017-09-17 11:41:28'),
(80, 341, '4', 2.76586, 9, 1, '2017-09-17 11:41:28'),
(80, 929, '2', -2.66646, 21, 0, '2017-09-17 11:41:28'),
(80, 1311, '4', 1.92, 10, 1, '2017-09-17 11:41:28'),
(80, 613, '1', -1.84083, 13, 0, '2017-09-17 11:41:28'),
(80, 606, '3', 2.1675, 9, 1, '2017-09-17 11:41:28'),
(80, 600, '3', 1.85204, 12, 1, '2017-09-17 11:41:28'),
(80, 597, '1', -1.81481, 12, 0, '2017-09-17 11:41:28'),
(80, 596, '1', 2.27263, 7, 1, '2017-09-17 11:41:28'),
(80, 852, '1', -1.54083, 17, 0, '2017-09-17 11:41:29'),
(80, 607, '1', -0.244898, 40, 0, '2017-09-17 11:41:29'),
(80, 853, '4', -1.92, 12, 0, '2017-09-17 11:41:29'),
(80, 622, '1', -1.92, 12, 0, '2017-09-17 11:41:29'),
(80, 605, '4', -2.25333, 8, 0, '2017-09-17 11:41:29'),
(80, 614, '3', 1.4856, 16, 1, '2017-09-17 11:41:29'),
(80, 1303, '1', 1.33333, 20, 1, '2017-09-17 11:41:29'),
(80, 850, '1', -2.25333, 8, 0, '2017-09-17 11:41:29'),
(80, 604, '4', -0.75, 30, 0, '2017-09-17 11:41:29'),
(80, 403, '4', 2.34083, 7, 1, '2017-09-17 11:41:29'),
(80, 602, '2', 0.421875, 40, 1, '2017-09-17 11:41:29'),
(80, 593, '3', -1.92, 12, 0, '2017-09-17 11:41:29'),
(80, 1317, '3', 1.76333, 14, 1, '2017-09-17 11:41:29'),
(80, 1310, '2', -1.60207, 14, 0, '2017-09-17 11:41:29'),
(80, 1089, '4', -2.34083, 7, 0, '2017-09-17 11:41:29'),
(80, 594, '3', 2.2188, 7, 1, '2017-09-17 11:41:29'),
(80, 619, '4', 1.02083, 25, 1, '2017-09-17 11:41:30'),
(80, 996, '4', -1.6428, 13, 0, '2017-09-17 11:41:30'),
(80, 599, '1', 1.54083, 17, 1, '2017-09-17 11:41:30'),
(80, 595, '0', -0.00110947, 52, 0, '2017-09-17 11:41:30'),
(80, 601, '4', 1.38138, 18, 1, '2017-09-17 11:41:30'),
(80, 854, '3', -1.41061, 22, 0, '2017-09-17 11:41:30'),
(80, 1091, '3', -2.25333, 8, 0, '2017-09-17 11:41:30'),
(80, 1301, '3', 2.63672, 4, 1, '2017-09-17 11:41:30'),
(80, 603, '1', 2.05141, 9, 1, '2017-09-17 11:41:30'),
(80, 615, '2', 2.1675, 9, 1, '2017-09-17 11:41:30'),
(80, 1308, '3', 2.08333, 10, 1, '2017-09-17 11:41:30'),
(80, 598, '4', 2.61333, 4, 1, '2017-09-17 11:41:30'),
(80, 611, '3', 1.92, 10, 1, '2017-09-17 11:41:31'),
(80, 609, '2', 0.440833, 37, 1, '2017-09-17 11:41:31'),
(80, 1124, '1', -2.25333, 8, 0, '2017-09-17 11:41:31'),
(80, 1318, '2', 1.76881, 13, 1, '2017-09-17 11:41:31'),
(80, 624, '3', -2.00083, 11, 0, '2017-09-17 11:41:31'),
(80, 1090, '4', -0.520833, 35, 0, '2017-09-17 11:41:31'),
(80, 1339, '2', 2.1675, 9, 1, '2017-09-17 11:41:31'),
(80, 1106, '3', 2.00083, 11, 1, '2017-09-17 11:41:31'),
(80, 1113, '3', -2.77273, 5, 0, '2017-09-17 11:41:31'),
(80, 1328, '2', -2.08333, 10, 0, '2017-09-17 11:41:31'),
(80, 1313, '2', 2.08333, 9, 1, '2017-09-17 11:41:31'),
(80, 1325, '4', -1.17188, 21, 0, '2017-09-17 11:41:31'),
(80, 1334, '4', 1.54083, 17, 1, '2017-09-17 11:41:31'),
(80, 1340, '4', -1.58038, 17, 0, '2017-09-17 11:41:31'),
(80, 1320, '3', 1.6428, 13, 1, '2017-09-17 11:41:31'),
(80, 1332, '3', 2.34083, 7, 1, '2017-09-17 11:41:31'),
(80, 1132, '0', 0, 8, -1, '2017-09-17 11:41:31'),
(80, 1307, '0', 0, 19, -1, '2017-09-17 11:41:31'),
(80, 1337, '2', -1.45312, 33, 0, '2017-09-17 11:41:32'),
(80, 1324, '3', 0.333333, 44, 1, '2017-09-17 11:41:32'),
(80, 1341, '3', -2.1675, 9, 0, '2017-09-17 11:41:32'),
(80, 1331, '2', 2.43, 4, 1, '2017-09-17 11:41:32'),
(80, 1343, '4', 2.46, 9, 1, '2017-09-17 11:41:32'),
(80, 1333, '2', 2.75, 5, 1, '2017-09-17 11:41:32'),
(80, 995, '3', -2.7, 6, 0, '2017-09-17 11:41:32'),
(80, 1323, '1', -2.25, 16, 0, '2017-09-17 11:41:32'),
(80, 1096, '4', -0.5, 50, 0, '2017-09-17 11:41:32'),
(80, 1092, '2', -2.25333, 8, 0, '2017-09-17 11:41:32'),
(80, 1103, '3', -1.38947, 23, 0, '2017-09-17 11:41:32'),
(80, 1322, '1', -2.21558, 9, 0, '2017-09-17 11:41:32'),
(80, 1327, '2', -1.3872, 16, 0, '2017-09-17 11:41:32'),
(80, 1326, '1', 0.2283, 42, 1, '2017-09-17 11:41:32'),
(80, 1338, '4', -1.10587, 22, 0, '2017-09-17 11:41:32'),
(80, 1329, '3', 1.40083, 19, 1, '2017-09-17 11:41:32'),
(80, 1312, '1', -2.15978, 10, 0, '2017-09-17 11:41:33'),
(80, 1335, '2', 1.76881, 13, 1, '2017-09-17 11:41:33'),
(80, 1321, '3', 2.21558, 9, 1, '2017-09-17 11:41:33'),
(80, 1126, '3', -1.47, 18, 0, '2017-09-17 11:41:33'),
(80, 1315, '4', 0.913199, 26, 1, '2017-09-17 11:41:33'),
(80, 1316, '3', 1.76333, 14, 1, '2017-09-17 11:41:33'),
(80, 1345, '1', 2.64738, 4, 1, '2017-09-17 11:41:33'),
(80, 1111, '3', -1.27836, 25, 0, '2017-09-17 11:41:33'),
(80, 1099, '3', -1.82245, 15, 0, '2017-09-17 11:41:33'),
(80, 608, '0', 0, 7, -1, '2017-09-17 11:41:33'),
(80, 1353, '4', -1.08, 24, 0, '2017-09-17 11:41:33'),
(80, 1349, '1', 1.92, 12, 1, '2017-09-17 11:41:33'),
(80, 1355, '3', -1.84083, 13, 0, '2017-09-17 11:41:33'),
(80, 1361, '3', 2.7075, 3, 1, '2017-09-17 11:41:33'),
(80, 1098, '4', -2.1675, 9, 0, '2017-09-17 11:41:33'),
(80, 1363, '2', 2.54956, 5, 1, '2017-09-17 11:41:33'),
(80, 1351, '3', -2.43, 6, 0, '2017-09-17 11:41:34'),
(80, 1118, '2', 0.6075, 33, 1, '2017-09-17 11:41:34'),
(80, 612, '3', 1.20333, 22, 1, '2017-09-17 11:41:34'),
(80, 1123, '4', -2.29688, 8, 0, '2017-09-17 11:41:34'),
(80, 1366, '4', 2.08333, 10, 1, '2017-09-17 11:41:34'),
(80, 623, '1', 0.925926, 40, 1, '2017-09-17 11:41:34'),
(80, 618, '2', -0.639053, 28, 0, '2017-09-17 11:41:34'),
(80, 3060, '3', -0.963333, 13, 0, '2017-09-17 11:41:34'),
(80, 3074, '4', 1.47, 9, 1, '2017-09-17 11:41:34'),
(80, 3007, '1', -1.33333, 10, 0, '2017-09-17 11:41:34'),
(80, 3084, '1', 0, 30, 1, '2017-09-17 11:41:34'),
(80, 3065, '1', -0.0533333, 26, 0, '2017-09-17 11:41:34'),
(80, 3046, '4', -1.33333, 10, 0, '2017-09-17 11:41:34'),
(80, 3081, '3', 2.25333, 4, 1, '2017-09-17 11:41:34'),
(80, 3041, '1', 0.963333, 13, 1, '2017-09-17 11:41:35'),
(80, 3027, '1', 1.61333, 8, 1, '2017-09-17 11:41:35'),
(80, 3012, '3', -1.08, 12, 0, '2017-09-17 11:41:35'),
(80, 3003, '4', 0.963333, 13, 1, '2017-09-17 11:41:35'),
(80, 3043, '3', 1.47, 9, 1, '2017-09-17 11:41:35'),
(80, 2998, '1', -0.75, 15, 0, '2017-09-17 11:41:35'),
(80, 2996, '1', -1.20333, 11, 0, '2017-09-17 11:41:35'),
(80, 3058, '1', 1.47, 9, 1, '2017-09-17 11:41:35'),
(80, 3030, '2', 0.27, 21, 1, '2017-09-17 11:41:35'),
(80, 3023, '3', 2.43, 3, 1, '2017-09-17 11:41:35'),
(80, 3019, '1', 1.20333, 11, 1, '2017-09-17 11:41:35'),
(80, 3015, '3', 2.25333, 4, 1, '2017-09-17 11:41:35'),
(80, 3077, '2', 1.08, 12, 1, '2017-09-17 11:41:35'),
(80, 3037, '1', -1.9, 11, 0, '2017-09-17 11:41:35'),
(80, 2995, '3', 0.333333, 20, 1, '2017-09-17 11:41:35'),
(80, 2997, '1', -1.08, 12, 0, '2017-09-17 11:41:35'),
(80, 3001, '4', 0.333333, 20, 1, '2017-09-17 11:41:35'),
(80, 3069, '2', 1.92, 6, 1, '2017-09-17 11:41:35'),
(80, 2994, '1', 2, 10, 1, '2017-09-17 11:41:35'),
(80, 3005, '1', 2.7, 3, 1, '2017-09-17 11:41:36'),
(80, 2999, '3', 2.7, 3, 1, '2017-09-17 11:41:36'),
(80, 3114, '1', 1.7, 13, 1, '2017-09-17 11:41:36'),
(80, 3137, '2', -2.4, 6, 0, '2017-09-17 11:41:36'),
(80, 3171, '1', 1.7, 13, 1, '2017-09-17 11:41:36'),
(80, 3124, '1', 2.1, 9, 1, '2017-09-17 11:41:36'),
(80, 3166, '1', 2.58532, 6, 1, '2017-09-17 11:41:36'),
(80, 3099, '2', 0.493242, 28, 1, '2017-09-17 11:41:36'),
(80, 3092, '1', -2.21246, 11, 0, '2017-09-17 11:41:36'),
(80, 3126, '3', -1.13703, 23, 0, '2017-09-17 11:41:36'),
(80, 3165, '1', -2.58532, 6, 0, '2017-09-17 11:41:36'),
(80, 3132, '3', 2.6, 4, 1, '2017-09-17 11:41:36'),
(80, 3103, '2', 2.43962, 8, 1, '2017-09-17 11:41:36'),
(80, 3179, '3', -2.65665, 5, 0, '2017-09-17 11:41:36'),
(80, 3089, '2', 1.34442, 21, 1, '2017-09-17 11:41:36'),
(80, 3156, '2', 2.72703, 4, 1, '2017-09-17 11:41:36'),
(80, 3101, '2', -1.44225, 20, 0, '2017-09-17 11:41:37'),
(80, 3147, '4', -1.71792, 17, 0, '2017-09-17 11:41:37'),
(80, 3133, '2', 0, 30, 1, '2017-09-17 11:41:37'),
(80, 3139, '0', -0.310723, 30, 0, '2017-09-17 11:41:37'),
(80, 3176, '4', -2.513, 7, 0, '2017-09-17 11:41:37'),
(80, 3109, '3', -1.6, 14, 0, '2017-09-17 11:41:37'),
(80, 3144, '3', -2.3, 7, 0, '2017-09-17 11:41:37'),
(80, 3159, '3', -2.4, 6, 0, '2017-09-17 11:41:37'),
(80, 3129, '3', 2.6, 4, 1, '2017-09-17 11:41:37'),
(80, 3106, '1', -1.4, 16, 0, '2017-09-17 11:41:37'),
(80, 3169, '1', 2.6, 4, 1, '2017-09-17 11:41:37'),
(80, 3095, '3', -1.6, 14, 0, '2017-09-17 11:41:37'),
(80, 3121, '2', 2.3, 7, 1, '2017-09-17 11:41:37'),
(80, 3150, '3', 2.5, 5, 1, '2017-09-17 11:41:37'),
(80, 3163, '1', -2.5, 5, 0, '2017-09-17 11:41:37'),
(80, 3087, '2', -2.7, 3, 0, '2017-09-17 11:41:38'),
(80, 3173, '3', -2.2, 8, 0, '2017-09-17 11:41:38'),
(80, 3160, '1', 2.6, 4, 1, '2017-09-17 11:41:38'),
(80, 1899, '3', 0.0127599, 43, 1, '2017-09-17 11:41:38'),
(80, 1916, '3', -1.72652, 14, 0, '2017-09-17 11:41:38'),
(80, 2157, '2', -0.276467, 39, 0, '2017-09-17 11:41:38'),
(80, 1907, '2', -0.826875, 19, 0, '2017-09-17 11:41:38'),
(80, 1928, '1', 1.49481, 10, 1, '2017-09-17 11:41:38'),
(80, 1946, '2', -1.80187, 9, 0, '2017-09-17 11:41:38'),
(80, 1953, '3', -0.991875, 17, 0, '2017-09-17 11:41:38'),
(80, 1890, '2', -1.62881, 10, 0, '2017-09-17 11:41:38'),
(80, 1931, '4', -1.57687, 11, 0, '2017-09-17 11:41:38'),
(80, 1949, '0', 0, 5, -1, '2017-09-17 11:41:38'),
(80, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:41:38'),
(80, 1270, '3', -0.511815, 27, 0, '2017-09-17 11:41:38'),
(80, 1174, '3', 1.77515, 6, 1, '2017-09-17 11:41:38'),
(80, 1186, '3', 1.85204, 6, 1, '2017-09-17 11:41:39'),
(80, 1170, '2', 0.1875, 18, 1, '2017-09-17 11:41:39'),
(80, 1183, '2', 0.75, 11, 1, '2017-09-17 11:41:39'),
(80, 1297, '3', 0.853333, 28, 1, '2017-09-17 11:41:39'),
(80, 1198, '2', -0.6075, 11, 0, '2017-09-17 11:41:39'),
(80, 1216, '4', 0.046875, 21, 1, '2017-09-17 11:41:39'),
(80, 1196, '4', 1.33333, 8, 1, '2017-09-17 11:41:39'),
(80, 1172, '0', -0.0075, 20, 0, '2017-09-17 11:41:39'),
(80, 1169, '2', 1.6875, 6, 1, '2017-09-17 11:41:39'),
(80, 1210, '1', 0.880208, 11, 1, '2017-09-17 11:41:39'),
(80, 1195, '2', -0.03, 18, 0, '2017-09-17 11:41:39'),
(80, 1197, '1', 0.046875, 21, 1, '2017-09-17 11:41:39'),
(80, 1227, '1', -0.046875, 21, 0, '2017-09-17 11:41:39'),
(80, 1218, '0', -0.0075, 20, 0, '2017-09-17 11:41:39'),
(80, 1276, '1', 0.75, 16, 1, '2017-09-17 11:41:39'),
(80, 1203, '1', -2.08333, 5, 0, '2017-09-17 11:41:39'),
(80, 1291, '0', -0.0075, 20, 0, '2017-09-17 11:41:39'),
(80, 1173, '2', 1.47, 6, 1, '2017-09-17 11:41:40'),
(80, 1177, '2', 1.58678, 6, 1, '2017-09-17 11:41:40'),
(80, 1292, '3', -1.33333, 10, 0, '2017-09-17 11:41:40'),
(80, 1261, '2', -0.75, 19, 0, '2017-09-17 11:41:40'),
(80, 1263, '3', -1.36688, 13, 0, '2017-09-17 11:41:40'),
(80, 1194, '1', 0.860969, 13, 1, '2017-09-17 11:41:40'),
(80, 1190, '4', 0.646684, 15, 1, '2017-09-17 11:41:40'),
(80, 1184, '3', -0.880208, 11, 0, '2017-09-17 11:41:40'),
(80, 1282, '0', 0, 8, -1, '2017-09-17 11:41:40'),
(80, 1294, '3', 1.17188, 9, 1, '2017-09-17 11:41:41'),
(80, 1220, '0', 0, 9, -1, '2017-09-17 11:41:41'),
(80, 1217, '3', 0.75, 10, 1, '2017-09-17 11:41:41'),
(80, 1281, '1', -1.33333, 10, 0, '2017-09-17 11:41:41'),
(80, 1293, '2', 1.50521, 7, 1, '2017-09-17 11:41:41'),
(80, 1219, '1', -1.04752, 9, 0, '2017-09-17 11:41:41'),
(80, 1208, '2', -0.48, 30, 0, '2017-09-17 11:41:41'),
(80, 1191, '3', 1.6875, 7, 1, '2017-09-17 11:41:41'),
(80, 1287, '2', -0.0833333, 40, 0, '2017-09-17 11:41:41'),
(82, 3400, '0', -0.00292969, 32, 0, '2017-09-17 11:41:42'),
(82, 3413, '0', -0.00333333, 30, 0, '2017-09-17 11:41:42'),
(82, 3403, '4', -0.105469, 26, 0, '2017-09-17 11:41:42'),
(82, 3412, '2', -0.75, 15, 0, '2017-09-17 11:41:42'),
(82, 3409, '4', -0.75, 15, 0, '2017-09-17 11:41:42'),
(82, 3405, '2', -0.48, 18, 0, '2017-09-17 11:41:42'),
(82, 3404, '4', 0.354492, 21, 1, '2017-09-17 11:41:43'),
(82, 3415, '3', 0.0533333, 26, 1, '2017-09-17 11:41:43'),
(82, 3414, '1', -1.76333, 7, 0, '2017-09-17 11:41:43'),
(82, 3402, '1', 1.41797, 10, 1, '2017-09-17 11:41:43'),
(82, 3416, '4', 0.653333, 16, 1, '2017-09-17 11:41:43'),
(82, 3411, '1', 0.333333, 20, 1, '2017-09-17 11:41:43'),
(82, 3399, '2', 1.17188, 12, 1, '2017-09-17 11:41:43'),
(82, 3406, '2', 1.08, 12, 1, '2017-09-17 11:41:43'),
(82, 3398, '4', -1.98047, 6, 0, '2017-09-17 11:41:43'),
(82, 3410, '3', -0.853333, 14, 0, '2017-09-17 11:41:43'),
(82, 3397, '3', -0.1875, 24, 0, '2017-09-17 11:41:43'),
(82, 3407, '1', 0.213333, 22, 1, '2017-09-17 11:41:43'),
(82, 3401, '1', -1.17188, 12, 0, '2017-09-17 11:41:43'),
(82, 3408, '3', 0.27, 21, 1, '2017-09-17 11:41:43'),
(82, 3417, '3', 1.21488, 16, 1, '2017-09-17 11:41:43'),
(82, 3433, '4', -1.3032, 15, 0, '2017-09-17 11:41:44'),
(82, 3430, '4', -0.683368, 23, 0, '2017-09-17 11:41:44'),
(82, 3436, '1', -0.892562, 20, 0, '2017-09-17 11:41:44'),
(82, 3422, '3', 1.3032, 15, 1, '2017-09-17 11:41:44'),
(82, 3437, '3', -0.683368, 23, 0, '2017-09-17 11:41:44'),
(82, 3424, '2', 1.39463, 14, 1, '2017-09-17 11:41:44'),
(82, 3420, '2', 1.3032, 15, 1, '2017-09-17 11:41:44'),
(82, 3429, '4', -1.21488, 16, 0, '2017-09-17 11:41:44'),
(82, 3427, '3', -1.12965, 17, 0, '2017-09-17 11:41:44'),
(82, 3426, '1', 0.154959, 34, 1, '2017-09-17 11:41:44'),
(82, 3423, '3', -1.58678, 12, 0, '2017-09-17 11:41:44'),
(82, 3418, '3', -0.892562, 20, 0, '2017-09-17 11:41:44'),
(82, 3434, '1', 1.3032, 15, 1, '2017-09-17 11:41:44'),
(82, 3425, '2', -1.48915, 13, 0, '2017-09-17 11:41:44'),
(82, 3432, '3', -1.3032, 15, 0, '2017-09-17 11:41:44'),
(82, 3431, '3', -1.58678, 12, 0, '2017-09-17 11:41:44'),
(82, 3428, '1', -0.559401, 25, 0, '2017-09-17 11:41:45'),
(82, 3435, '2', -1.04752, 18, 0, '2017-09-17 11:41:45'),
(82, 593, '1', 1.84083, 13, 1, '2017-09-17 11:41:45'),
(82, 1308, '3', 2.00083, 11, 1, '2017-09-17 11:41:45'),
(82, 850, '1', -2.25333, 8, 0, '2017-09-17 11:41:45'),
(82, 622, '2', 2.25333, 8, 1, '2017-09-17 11:41:45'),
(82, 596, '2', -1.56481, 15, 0, '2017-09-17 11:41:45'),
(82, 602, '3', -1.17188, 24, 0, '2017-09-17 11:41:45'),
(82, 996, '4', -1.7328, 12, 0, '2017-09-17 11:41:45'),
(82, 597, '1', -1.4856, 16, 0, '2017-09-17 11:41:45'),
(82, 614, '2', -2.37037, 6, 0, '2017-09-17 11:41:45'),
(82, 1317, '3', 1.92, 12, 1, '2017-09-17 11:41:45'),
(82, 852, '2', -0.440833, 37, 0, '2017-09-17 11:41:45'),
(82, 1310, '3', -2.24667, 7, 0, '2017-09-17 11:41:45'),
(82, 604, '2', -1.92, 12, 0, '2017-09-17 11:41:45'),
(82, 1089, '4', -2.52083, 5, 0, '2017-09-17 11:41:45'),
(82, 619, '1', -1.33333, 20, 0, '2017-09-17 11:41:45'),
(82, 713, '3', 0.536982, 15, 1, '2017-09-17 11:41:46'),
(82, 2031, '1', 0.853333, 14, 1, '2017-09-17 11:41:46'),
(82, 716, '1', -1.77515, 6, 0, '2017-09-17 11:41:46'),
(82, 712, '2', -1.33333, 8, 0, '2017-09-17 11:41:46'),
(82, 2010, '4', -0.853333, 14, 0, '2017-09-17 11:41:46'),
(82, 1985, '3', -1.5498, 9, 0, '2017-09-17 11:41:46'),
(82, 1991, '4', 0.963333, 13, 1, '2017-09-17 11:41:46'),
(82, 676, '3', -0.1875, 21, 0, '2017-09-17 11:41:46'),
(82, 680, '3', 0.382653, 18, 1, '2017-09-17 11:41:46'),
(82, 659, '3', 1.08, 8, 1, '2017-09-17 11:41:46'),
(82, 1996, '3', 1.76333, 7, 1, '2017-09-17 11:41:46'),
(82, 699, '4', 0.75, 10, 1, '2017-09-17 11:41:46'),
(82, 2033, '3', 0.309949, 19, 1, '2017-09-17 11:41:46'),
(82, 2013, '2', 0.963333, 13, 1, '2017-09-17 11:41:46'),
(82, 2011, '3', -0.653333, 16, 0, '2017-09-17 11:41:46'),
(82, 690, '3', 0.75, 10, 1, '2017-09-17 11:41:46'),
(82, 1888, '1', 1.9571, 5, 1, '2017-09-17 11:41:47'),
(82, 663, '2', -0.00382653, 27, 0, '2017-09-17 11:41:47'),
(82, 658, '1', -0.12, 16, 0, '2017-09-17 11:41:47'),
(82, 679, '1', 1.6875, 6, 1, '2017-09-17 11:41:47'),
(82, 703, '1', -0.255208, 17, 0, '2017-09-17 11:41:47'),
(82, 2008, '1', -0.48, 18, 0, '2017-09-17 11:41:47'),
(82, 706, '2', -1.33333, 10, 0, '2017-09-17 11:41:47'),
(82, 717, '1', -0.333333, 24, 0, '2017-09-17 11:41:47'),
(82, 1927, '2', 0.963333, 13, 1, '2017-09-17 11:41:47'),
(82, 1909, '4', -0.574219, 18, 0, '2017-09-17 11:41:47'),
(82, 1923, '1', 0.949219, 14, 1, '2017-09-17 11:41:47'),
(82, 1929, '2', 1.49481, 10, 1, '2017-09-17 11:41:47'),
(82, 1921, '4', 0.75, 15, 1, '2017-09-17 11:41:47'),
(82, 1920, '2', 0.84668, 15, 1, '2017-09-17 11:41:47'),
(82, 687, '1', -1.92, 6, 0, '2017-09-17 11:41:47'),
(82, 704, '3', -0.403333, 19, 0, '2017-09-17 11:41:47'),
(82, 1880, '1', 1.25606, 12, 1, '2017-09-17 11:41:48'),
(82, 1911, '3', 0.75, 16, 1, '2017-09-17 11:41:48'),
(82, 1919, '4', 2.27816, 9, 1, '2017-09-17 11:41:48'),
(82, 1904, '4', -1.20333, 11, 0, '2017-09-17 11:41:48'),
(82, 1930, '4', -0.695473, 28, 0, '2017-09-17 11:41:48'),
(82, 1914, '1', -1.38138, 9, 0, '2017-09-17 11:41:48'),
(82, 1917, '3', 0.979592, 12, 1, '2017-09-17 11:41:48'),
(82, 1912, '2', 0.137755, 22, 1, '2017-09-17 11:41:48'),
(82, 685, '2', -0.6075, 11, 0, '2017-09-17 11:41:48'),
(82, 1925, '1', 0.26188, 31, 1, '2017-09-17 11:41:48'),
(82, 1915, '2', -0.646684, 15, 0, '2017-09-17 11:41:48'),
(82, 2042, '4', -1.6875, 8, 0, '2017-09-17 11:41:48'),
(82, 1926, '2', 1.98047, 6, 1, '2017-09-17 11:41:48'),
(82, 698, '2', -1.76333, 7, 0, '2017-09-17 11:41:48'),
(82, 1922, '3', 1.20333, 11, 1, '2017-09-17 11:41:49'),
(82, 1908, '1', 0.143555, 25, 1, '2017-09-17 11:41:49'),
(82, 689, '1', -2.08333, 5, 0, '2017-09-17 11:41:49'),
(82, 714, '1', 1.37284, 11, 1, '2017-09-17 11:41:49'),
(82, 1918, '2', -1.38138, 9, 0, '2017-09-17 11:41:49'),
(82, 1906, '4', -1.33333, 10, 0, '2017-09-17 11:41:49'),
(82, 664, '1', -1.25606, 12, 0, '2017-09-17 11:41:49'),
(82, 665, '1', 0.853333, 14, 1, '2017-09-17 11:41:49'),
(82, 2034, '4', 0.963333, 13, 1, '2017-09-17 11:41:49'),
(82, 1891, '1', -1.33333, 10, 0, '2017-09-17 11:41:49'),
(82, 1892, '1', -0.639053, 14, 0, '2017-09-17 11:41:49'),
(82, 1948, '2', 1.20333, 11, 1, '2017-09-17 11:41:49'),
(82, 1887, '2', 0.892562, 20, 1, '2017-09-17 11:41:49'),
(82, 1889, '1', 0.991875, 17, 1, '2017-09-17 11:41:49'),
(82, 657, '3', -1.75433, 8, 0, '2017-09-17 11:41:49'),
(82, 1947, '1', -0.421875, 20, 0, '2017-09-17 11:41:49'),
(82, 1954, '4', -1.96599, 8, 0, '2017-09-17 11:41:49'),
(82, 1944, '2', -1.6875, 7, 0, '2017-09-17 11:41:50'),
(82, 1950, '1', -0.421875, 25, 0, '2017-09-17 11:41:50'),
(82, 1940, '2', -0.6075, 22, 0, '2017-09-17 11:41:50'),
(82, 1881, '1', -1.33333, 10, 0, '2017-09-17 11:41:50'),
(82, 1933, '1', 1.47, 12, 1, '2017-09-17 11:41:50'),
(82, 1941, '1', -1.6875, 9, 0, '2017-09-17 11:41:50'),
(82, 1951, '2', -1.36688, 13, 0, '2017-09-17 11:41:50'),
(82, 684, '1', -2.04187, 7, 0, '2017-09-17 11:41:50'),
(82, 702, '1', 0.936851, 15, 1, '2017-09-17 11:41:50'),
(82, 1937, '1', -0.84668, 15, 0, '2017-09-17 11:41:50'),
(82, 1957, '3', -2.2188, 7, 0, '2017-09-17 11:41:50'),
(82, 1962, '1', -2.1168, 8, 0, '2017-09-17 11:41:50'),
(82, 1177, '2', 1.21488, 8, 1, '2017-09-17 11:41:50'),
(82, 1198, '2', -0.48, 12, 0, '2017-09-17 11:41:50'),
(82, 1297, '3', 0.75, 30, 1, '2017-09-17 11:41:50'),
(82, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:41:50'),
(82, 1184, '3', -0.255208, 17, 0, '2017-09-17 11:41:51'),
(82, 1263, '3', -1.2675, 14, 0, '2017-09-17 11:41:51'),
(82, 1276, '2', -0.84668, 15, 0, '2017-09-17 11:41:51'),
(82, 1203, '3', 0.213333, 22, 1, '2017-09-17 11:41:51'),
(82, 1186, '3', 0.979592, 12, 1, '2017-09-17 11:41:51'),
(82, 1185, '4', 0.1875, 21, 1, '2017-09-17 11:41:51'),
(82, 1270, '1', -0.6862, 24, 0, '2017-09-17 11:41:51'),
(82, 1169, '3', -0.255208, 17, 0, '2017-09-17 11:41:51'),
(82, 1261, '1', -0.299169, 26, 0, '2017-09-17 11:41:51'),
(82, 1195, '1', -1.2675, 7, 0, '2017-09-17 11:41:51'),
(82, 1173, '2', 0.3675, 13, 1, '2017-09-17 11:41:51'),
(82, 1174, '2', -1.13609, 10, 0, '2017-09-17 11:41:51'),
(82, 1216, '1', -0.130208, 19, 0, '2017-09-17 11:41:51'),
(82, 1210, '4', -1.17188, 9, 0, '2017-09-17 11:41:51'),
(82, 1197, '3', -1.33333, 8, 0, '2017-09-17 11:41:51'),
(82, 1183, '2', 0.0557851, 19, 1, '2017-09-17 11:41:52'),
(82, 1218, '2', -0.27, 14, 0, '2017-09-17 11:41:52'),
(82, 1196, '2', -1.02083, 10, 0, '2017-09-17 11:41:52'),
(82, 1194, '3', -2.02423, 5, 0, '2017-09-17 11:41:52'),
(82, 1172, '3', -0.0075, 19, 0, '2017-09-17 11:41:52'),
(82, 1291, '4', 0.03, 18, 1, '2017-09-17 11:41:52'),
(82, 1170, '4', -0.75, 12, 0, '2017-09-17 11:41:52'),
(82, 1292, '1', 1.33333, 10, 1, '2017-09-17 11:41:53'),
(82, 1190, '4', 1.10587, 11, 1, '2017-09-17 11:41:53'),
(82, 1202, '1', 0.280093, 25, 1, '2017-09-17 11:41:53'),
(82, 1191, '3', 1.38138, 9, 1, '2017-09-17 11:41:53'),
(82, 1287, '2', -0.333333, 32, 0, '2017-09-17 11:41:53'),
(82, 1220, '2', 1.38138, 9, 1, '2017-09-17 11:41:53'),
(82, 1284, '2', -1.08, 8, 0, '2017-09-17 11:41:53'),
(82, 1189, '3', 0.860969, 13, 1, '2017-09-17 11:41:53'),
(82, 1219, '3', 1.58678, 6, 1, '2017-09-17 11:41:53'),
(82, 1293, '2', 0.255208, 17, 1, '2017-09-17 11:41:53'),
(82, 1269, '1', 0.688802, 25, 1, '2017-09-17 11:41:53'),
(82, 1199, '3', 0.292969, 22, 1, '2017-09-17 11:41:53'),
(82, 1200, '2', -1.02083, 15, 0, '2017-09-17 11:41:53'),
(82, 1294, '3', 1.50521, 7, 1, '2017-09-17 11:41:53'),
(82, 1171, '4', 0.6075, 11, 1, '2017-09-17 11:41:54'),
(82, 1281, '3', 0.48, 18, 1, '2017-09-17 11:41:54'),
(82, 1265, '3', -1.9571, 10, 0, '2017-09-17 11:41:54'),
(82, 1208, '1', 0.3072, 34, 1, '2017-09-17 11:41:54'),
(82, 1175, '1', -1.98047, 6, 0, '2017-09-17 11:41:54'),
(82, 1257, '2', -1.09505, 19, 0, '2017-09-17 11:41:54'),
(82, 1268, '3', -0.292969, 33, 0, '2017-09-17 11:41:54'),
(82, 1282, '1', -0.27, 21, 0, '2017-09-17 11:41:54'),
(82, 1217, '2', -0.75, 10, 0, '2017-09-17 11:41:54'),
(82, 1250, '1', 1.92, 12, 1, '2017-09-17 11:41:54'),
(82, 1299, '3', 1.93457, 13, 1, '2017-09-17 11:41:54'),
(82, 1187, '1', -0.949219, 14, 0, '2017-09-17 11:41:54'),
(82, 1283, '3', -0.421875, 15, 0, '2017-09-17 11:41:54'),
(82, 1206, '2', -1.20333, 22, 0, '2017-09-17 11:41:54'),
(82, 1264, '3', -1.93457, 13, 0, '2017-09-17 11:41:55'),
(82, 171, '3', -2.10422, 13, 0, '2017-09-17 11:41:55'),
(82, 1298, '2', -1.84083, 13, 0, '2017-09-17 11:41:55'),
(83, 1571, '3', 1.77515, 12, 1, '2017-09-17 11:41:55'),
(83, 3034, '2', 0.0344388, 25, 1, '2017-09-17 11:41:55'),
(83, 1593, '1', 0.892562, 20, 1, '2017-09-17 11:41:55'),
(83, 1616, '1', -0.0510397, 40, 0, '2017-09-17 11:41:55'),
(83, 1563, '2', 1.86501, 11, 1, '2017-09-17 11:41:56'),
(83, 1591, '3', -0.865226, 25, 0, '2017-09-17 11:41:56'),
(83, 1594, '3', -0.0208333, 44, 0, '2017-09-17 11:41:56'),
(83, 1553, '4', 0.958412, 20, 1, '2017-09-17 11:41:56'),
(83, 1574, '1', 1.76881, 13, 1, '2017-09-17 11:41:56'),
(83, 1578, '1', 0.958412, 20, 1, '2017-09-17 11:41:56'),
(83, 1586, '0', 0, 43, -1, '2017-09-17 11:41:56'),
(83, 1589, '1', -1.06293, 17, 0, '2017-09-17 11:41:56'),
(83, 1566, '3', 0.958412, 20, 1, '2017-09-17 11:41:56'),
(83, 1575, '2', -0.27, 42, 0, '2017-09-17 11:41:56'),
(83, 1595, '1', -0.000833333, 59, 0, '2017-09-17 11:41:56'),
(83, 1592, '3', -0.853333, 28, 0, '2017-09-17 11:41:56'),
(83, 1582, '2', 1.63435, 11, 1, '2017-09-17 11:41:56'),
(83, 1559, '4', 0.886106, 21, 1, '2017-09-17 11:41:56'),
(83, 1590, '1', -0.55102, 32, 0, '2017-09-17 11:41:57'),
(83, 1597, '3', 1.2513, 17, 1, '2017-09-17 11:41:57'),
(83, 1596, '1', 0.998521, 22, 1, '2017-09-17 11:41:57'),
(83, 1599, '2', -1.375, 26, 0, '2017-09-17 11:41:57'),
(83, 1606, '2', 0.12, 48, 1, '2017-09-17 11:41:57'),
(83, 1608, '2', -0.217456, 38, 0, '2017-09-17 11:41:57'),
(83, 1609, '1', 0.292969, 33, 1, '2017-09-17 11:41:57'),
(83, 1604, '3', -0.75, 24, 0, '2017-09-17 11:41:57'),
(83, 1612, '2', -0.933062, 23, 0, '2017-09-17 11:41:57'),
(83, 1602, '0', 0, 19, -1, '2017-09-17 11:41:57'),
(83, 1614, '3', -0.806584, 26, 0, '2017-09-17 11:41:57'),
(83, 2406, '1', -2.29688, 11, 0, '2017-09-17 11:41:57'),
(83, 378, '0', -0.0075, 20, 0, '2017-09-17 11:41:58'),
(83, 402, '0', 0, 15, -1, '2017-09-17 11:41:58'),
(83, 2429, '2', -1.78531, 32, 0, '2017-09-17 11:41:58'),
(83, 375, '1', 0.75, 10, 1, '2017-09-17 11:41:58'),
(83, 2400, '3', 2.58673, 5, 1, '2017-09-17 11:41:58'),
(83, 363, '3', 1.92, 4, 1, '2017-09-17 11:41:58'),
(83, 401, '2', -0.12, 16, 0, '2017-09-17 11:41:58'),
(83, 2416, '3', 2.29688, 11, 1, '2017-09-17 11:41:58'),
(83, 1120, '3', 0.0675, 17, 1, '2017-09-17 11:41:58'),
(83, 394, '0', -0.0075, 20, 0, '2017-09-17 11:41:58'),
(83, 2403, '2', 2.61333, 6, 1, '2017-09-17 11:41:58'),
(83, 388, '3', -0.0075, 19, 0, '2017-09-17 11:41:58'),
(83, 2431, '2', -0.0428875, 81, 0, '2017-09-17 11:41:58'),
(83, 2420, '2', -2.29688, 12, 0, '2017-09-17 11:41:58'),
(83, 2422, '3', -1.02997, 53, 0, '2017-09-17 11:41:59'),
(83, 2432, '3', -0.19438, 82, 0, '2017-09-17 11:41:59'),
(83, 372, '0', -0.0075, 20, 0, '2017-09-17 11:41:59'),
(83, 373, '0', 0, 9, -1, '2017-09-17 11:41:59'),
(83, 397, '1', -0.12, 16, 0, '2017-09-17 11:41:59'),
(83, 2418, '2', 1.41797, 25, 1, '2017-09-17 11:41:59'),
(83, 1138, '1', -0.12, 16, 0, '2017-09-17 11:41:59'),
(83, 1140, '1', 0.03, 18, 1, '2017-09-17 11:41:59'),
(83, 2427, '1', -0.046875, 105, 0, '2017-09-17 11:41:59'),
(83, 376, '4', -0.03, 18, 0, '2017-09-17 11:41:59'),
(83, 1109, '4', -1.47, 6, 0, '2017-09-17 11:41:59'),
(83, 380, '3', -0.48, 12, 0, '2017-09-17 11:41:59'),
(83, 1130, '2', 0.75, 10, 1, '2017-09-17 11:41:59'),
(83, 386, '2', -0.0075, 19, 0, '2017-09-17 11:42:00'),
(83, 1117, '2', 0.9075, 9, 1, '2017-09-17 11:42:00'),
(83, 396, '1', -0.0075, 19, 0, '2017-09-17 11:42:00'),
(83, 385, '2', -0.03, 18, 0, '2017-09-17 11:42:00'),
(83, 364, '2', 1.47, 6, 1, '2017-09-17 11:42:00'),
(83, 374, '1', -0.03, 18, 0, '2017-09-17 11:42:00'),
(83, 389, '2', 0.03, 18, 1, '2017-09-17 11:42:00'),
(83, 367, '1', -0.12, 16, 0, '2017-09-17 11:42:00'),
(83, 398, '0', -0.0075, 20, 0, '2017-09-17 11:42:00'),
(83, 1114, '3', -0.3675, 13, 0, '2017-09-17 11:42:00'),
(83, 377, '2', 0.0675, 17, 1, '2017-09-17 11:42:00'),
(83, 1110, '2', 1.47, 6, 1, '2017-09-17 11:42:00'),
(83, 2411, '2', -0.0557851, 95, 0, '2017-09-17 11:42:00'),
(83, 1105, '2', 0.0675, 17, 1, '2017-09-17 11:42:01'),
(83, 1115, '1', 0.03, 18, 1, '2017-09-17 11:42:01'),
(83, 1104, '3', 0.27, 14, 1, '2017-09-17 11:42:01'),
(83, 1116, '0', -0.0075, 20, 0, '2017-09-17 11:42:01'),
(83, 391, '4', -1.47, 6, 0, '2017-09-17 11:42:01'),
(83, 400, '1', -0.27, 14, 0, '2017-09-17 11:42:01'),
(83, 2410, '3', -0.309949, 57, 0, '2017-09-17 11:42:01'),
(83, 2419, '2', 0.0833333, 100, 1, '2017-09-17 11:42:01'),
(83, 1112, '1', -0.75, 10, 0, '2017-09-17 11:42:01'),
(83, 2413, '0', 0, 91, -1, '2017-09-17 11:42:01'),
(83, 1139, '2', 0.12, 16, 1, '2017-09-17 11:42:01'),
(83, 1121, '2', -1.47, 6, 0, '2017-09-17 11:42:01'),
(83, 1107, '4', 0.12, 16, 1, '2017-09-17 11:42:01'),
(83, 390, '0', -0.0075, 20, 0, '2017-09-17 11:42:02'),
(83, 370, '4', -0.0075, 19, 0, '2017-09-17 11:42:02'),
(83, 382, '4', 0.6075, 11, 1, '2017-09-17 11:42:02'),
(83, 384, '3', -0.03, 18, 0, '2017-09-17 11:42:02'),
(83, 2408, '2', -0.886106, 42, 0, '2017-09-17 11:42:02'),
(83, 393, '0', -0.0075, 20, 0, '2017-09-17 11:42:02'),
(83, 399, '0', -0.0075, 20, 0, '2017-09-17 11:42:02'),
(83, 381, '1', 0.0075, 19, 1, '2017-09-17 11:42:02'),
(83, 2031, '1', 0.0133333, 28, 1, '2017-09-17 11:42:02'),
(83, 679, '1', 0.75, 12, 1, '2017-09-17 11:42:02'),
(83, 2011, '3', -0.653333, 16, 0, '2017-09-17 11:42:02'),
(83, 658, '4', -0.1875, 15, 0, '2017-09-17 11:42:02'),
(83, 676, '2', 0.979592, 12, 1, '2017-09-17 11:42:02'),
(83, 2033, '1', -0.646684, 15, 0, '2017-09-17 11:42:02'),
(83, 1985, '4', 0.105469, 26, 1, '2017-09-17 11:42:03'),
(83, 1888, '1', 0.869823, 12, 1, '2017-09-17 11:42:03'),
(83, 713, '3', 0.75, 13, 1, '2017-09-17 11:42:03'),
(83, 1996, '1', -0.853333, 14, 0, '2017-09-17 11:42:03'),
(83, 2013, '2', 0.75, 15, 1, '2017-09-17 11:42:03'),
(83, 699, '2', -0.48, 12, 0, '2017-09-17 11:42:03'),
(83, 1991, '0', 0, 22, -1, '2017-09-17 11:42:03'),
(83, 706, '2', -0.27, 21, 0, '2017-09-17 11:42:03'),
(83, 716, '3', 0.217456, 19, 1, '2017-09-17 11:42:03'),
(83, 690, '1', -0.0675, 17, 0, '2017-09-17 11:42:03'),
(83, 663, '1', 0.75, 14, 1, '2017-09-17 11:42:03'),
(83, 680, '2', -0.0956633, 23, 0, '2017-09-17 11:42:03'),
(83, 2008, '4', 0.0833333, 25, 1, '2017-09-17 11:42:04'),
(83, 712, '3', -0.75, 12, 0, '2017-09-17 11:42:04'),
(83, 2010, '1', 0.653333, 16, 1, '2017-09-17 11:42:04'),
(83, 659, '2', -0.9075, 9, 0, '2017-09-17 11:42:04'),
(83, 703, '3', 0.0833333, 20, 1, '2017-09-17 11:42:04'),
(83, 2042, '2', -0.0732422, 27, 0, '2017-09-17 11:42:04'),
(83, 1918, '3', 0.137755, 22, 1, '2017-09-17 11:42:04'),
(83, 1909, '3', -1.17188, 12, 0, '2017-09-17 11:42:04'),
(83, 2034, '3', -0.563333, 17, 0, '2017-09-17 11:42:04'),
(83, 1927, '3', -0.333333, 20, 0, '2017-09-17 11:42:04'),
(83, 1892, '0', 0, 21, -1, '2017-09-17 11:42:04'),
(83, 1920, '1', -1.05762, 13, 0, '2017-09-17 11:42:04'),
(83, 714, '1', 0.127163, 27, 1, '2017-09-17 11:42:04'),
(83, 698, '2', -1.47, 9, 0, '2017-09-17 11:42:05'),
(83, 1891, '3', -0.27, 21, 0, '2017-09-17 11:42:05'),
(83, 1904, '2', -1.47, 9, 0, '2017-09-17 11:42:05'),
(83, 1925, '3', -0.125517, 35, 0, '2017-09-17 11:42:05'),
(83, 1908, '4', -0.143555, 25, 0, '2017-09-17 11:42:05'),
(83, 1906, '0', 0, 9, -1, '2017-09-17 11:42:05'),
(83, 1926, '2', 0.495117, 19, 1, '2017-09-17 11:42:05'),
(83, 1921, '4', 0.563333, 17, 1, '2017-09-17 11:42:05'),
(83, 1912, '3', -1.6875, 7, 0, '2017-09-17 11:42:05'),
(83, 1923, '1', 0.949219, 14, 1, '2017-09-17 11:42:05'),
(83, 1914, '4', 0.244898, 20, 1, '2017-09-17 11:42:05'),
(83, 685, '0', -0.0075, 20, 0, '2017-09-17 11:42:05'),
(83, 664, '3', 1.49481, 10, 1, '2017-09-17 11:42:06'),
(83, 1919, '2', -1.98918, 13, 0, '2017-09-17 11:42:06'),
(83, 1917, '3', 2.20408, 4, 1, '2017-09-17 11:42:06'),
(83, 1922, '1', -1.33333, 10, 0, '2017-09-17 11:42:06'),
(83, 689, '3', -0.653333, 16, 0, '2017-09-17 11:42:06'),
(83, 1929, '4', -0.16609, 26, 0, '2017-09-17 11:42:06'),
(83, 1930, '4', -0.453704, 33, 0, '2017-09-17 11:42:06'),
(83, 1911, '3', 1.5498, 9, 1, '2017-09-17 11:42:06'),
(83, 665, '4', -0.563333, 17, 0, '2017-09-17 11:42:06'),
(83, 704, '0', -0.00333333, 30, 0, '2017-09-17 11:42:06'),
(83, 1880, '1', 1.49481, 10, 1, '2017-09-17 11:42:06'),
(83, 717, '1', -1.81481, 8, 0, '2017-09-17 11:42:06'),
(83, 1915, '3', 2.20408, 4, 1, '2017-09-17 11:42:06'),
(83, 687, '2', -1.76333, 7, 0, '2017-09-17 11:42:07'),
(83, 1962, '2', 0.1452, 39, 1, '2017-09-17 11:42:07'),
(83, 683, '2', -1.85204, 6, 0, '2017-09-17 11:42:07'),
(83, 1952, '2', 1.39463, 14, 1, '2017-09-17 11:42:07'),
(83, 1169, '2', 1.50521, 7, 1, '2017-09-17 11:42:07'),
(83, 1185, '4', 0.309949, 19, 1, '2017-09-17 11:42:07'),
(83, 1190, '4', 1.53061, 8, 1, '2017-09-17 11:42:07'),
(83, 1198, '2', -1.08, 8, 0, '2017-09-17 11:42:07'),
(83, 1170, '2', 0.75, 12, 1, '2017-09-17 11:42:07'),
(83, 1227, '1', -0.046875, 21, 0, '2017-09-17 11:42:07'),
(83, 1174, '3', 1.43787, 8, 1, '2017-09-17 11:42:07'),
(83, 1218, '1', -0.75, 10, 0, '2017-09-17 11:42:07'),
(83, 1210, '1', 0.333333, 16, 1, '2017-09-17 11:42:07'),
(83, 1186, '3', 0.244898, 20, 1, '2017-09-17 11:42:08'),
(83, 1297, '3', 2.08333, 10, 1, '2017-09-17 11:42:08'),
(83, 1276, '0', 0, 23, -1, '2017-09-17 11:42:08'),
(83, 1183, '2', 0.892562, 10, 1, '2017-09-17 11:42:08'),
(83, 1292, '3', -0.213333, 22, 0, '2017-09-17 11:42:08'),
(83, 1270, '3', -0.239603, 33, 0, '2017-09-17 11:42:08'),
(83, 1194, '1', 1.53061, 8, 1, '2017-09-17 11:42:08'),
(83, 1197, '1', 0.0833333, 20, 1, '2017-09-17 11:42:08'),
(83, 1173, '2', 1.47, 6, 1, '2017-09-17 11:42:08'),
(83, 1216, '1', 0, 24, 0, '2017-09-17 11:42:08'),
(83, 1172, '4', 0.6075, 11, 1, '2017-09-17 11:42:08'),
(83, 1287, '3', 0.3125, 43, 1, '2017-09-17 11:42:08'),
(83, 1171, '4', 0.3, 18, 1, '2017-09-17 11:42:08'),
(83, 1208, '1', 0.06, 49, 1, '2017-09-17 11:42:08'),
(83, 1175, '4', 1.875, 12, 1, '2017-09-17 11:42:08'),
(83, 1257, '0', -0.0625, 48, 0, '2017-09-17 11:42:09'),
(83, 1281, '1', -1.3, 17, 0, '2017-09-17 11:42:09'),
(83, 1189, '1', -1.82143, 11, 0, '2017-09-17 11:42:09'),
(83, 1261, '1', 0, 38, 0, '2017-09-17 11:42:09'),
(83, 1196, '4', 0.0833333, 20, 1, '2017-09-17 11:42:09'),
(83, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:42:09'),
(83, 1177, '4', -0.619835, 12, 0, '2017-09-17 11:42:09'),
(83, 1203, '3', 0.0833333, 25, 1, '2017-09-17 11:42:09'),
(83, 1263, '1', 0.3675, 26, 1, '2017-09-17 11:42:09'),
(83, 1291, '4', 0.0075, 19, 1, '2017-09-17 11:42:10'),
(83, 1184, '4', 1.33333, 8, 1, '2017-09-17 11:42:10'),
(83, 1219, '4', -0.545455, 18, 0, '2017-09-17 11:42:10'),
(83, 1268, '2', -0.5625, 39, 0, '2017-09-17 11:42:10'),
(83, 1282, '1', -0.653333, 16, 0, '2017-09-17 11:42:10'),
(83, 1269, '0', 0, 28, -1, '2017-09-17 11:42:10'),
(83, 1220, '2', 1.10587, 11, 1, '2017-09-17 11:42:10'),
(83, 1200, '2', -0.833333, 26, 0, '2017-09-17 11:42:10'),
(83, 1293, '1', -0.75, 12, 0, '2017-09-17 11:42:10'),
(83, 1202, '3', -0.453704, 22, 0, '2017-09-17 11:42:10'),
(83, 1284, '2', -0.75, 10, 0, '2017-09-17 11:42:10'),
(83, 1199, '2', -0.143555, 25, 0, '2017-09-17 11:42:10'),
(83, 1294, '2', -0.75, 12, 0, '2017-09-17 11:42:10'),
(83, 1265, '0', 0, 11, -1, '2017-09-17 11:42:11'),
(83, 1217, '1', -0.1875, 15, 0, '2017-09-17 11:42:11'),
(83, 1191, '3', 0.979592, 12, 1, '2017-09-17 11:42:11'),
(83, 1295, '2', -1.33333, 8, 0, '2017-09-17 11:42:11'),
(83, 1283, '0', -0.00520833, 24, 0, '2017-09-17 11:42:11'),
(83, 1289, '3', -0.6075, 22, 0, '2017-09-17 11:42:11'),
(83, 1176, '4', 0.979592, 12, 1, '2017-09-17 11:42:11'),
(83, 1229, '0', -0.00102881, 54, 0, '2017-09-17 11:42:11'),
(83, 1209, '0', -0.0012, 50, 0, '2017-09-17 11:42:11'),
(83, 1296, '3', -0.880208, 11, 0, '2017-09-17 11:42:11'),
(83, 1188, '3', -1.10587, 11, 0, '2017-09-17 11:42:11'),
(83, 1187, '1', -0.949219, 14, 0, '2017-09-17 11:42:11'),
(83, 1298, '1', 1.20333, 22, 1, '2017-09-17 11:42:11'),
(83, 1264, '0', -0.000688705, 66, 0, '2017-09-17 11:42:11'),
(83, 1286, '0', -0.000833333, 60, 0, '2017-09-17 11:42:12'),
(83, 1204, '4', 0.046875, 42, 1, '2017-09-17 11:42:12'),
(83, 173, '0', -0.0003, 100, 0, '2017-09-17 11:42:12'),
(83, 1299, '3', 0.364325, 43, 1, '2017-09-17 11:42:12'),
(84, 1203, '4', -0.0833333, 25, 0, '2017-09-17 11:42:12'),
(84, 1172, '1', -1.08, 8, 0, '2017-09-17 11:42:12'),
(84, 1210, '1', 0.520833, 14, 1, '2017-09-17 11:42:12'),
(84, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:42:12'),
(84, 1184, '3', -0.880208, 11, 0, '2017-09-17 11:42:12'),
(84, 1190, '4', 1.6875, 7, 1, '2017-09-17 11:42:13'),
(84, 1173, '2', 0.6075, 11, 1, '2017-09-17 11:42:13'),
(84, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:42:13'),
(84, 1297, '3', 1.6875, 15, 1, '2017-09-17 11:42:13'),
(84, 1198, '4', 1.08, 8, 1, '2017-09-17 11:42:13'),
(84, 1276, '1', 0.292969, 22, 1, '2017-09-17 11:42:13'),
(84, 1218, '3', -0.75, 10, 0, '2017-09-17 11:42:13'),
(84, 1216, '4', 0.520833, 14, 1, '2017-09-17 11:42:13'),
(84, 1292, '1', 0.853333, 14, 1, '2017-09-17 11:42:13'),
(84, 1177, '2', 1.39463, 7, 1, '2017-09-17 11:42:13'),
(84, 1263, '2', -0.0075, 38, 0, '2017-09-17 11:42:13'),
(84, 1174, '0', -0.00443787, 26, 0, '2017-09-17 11:42:13'),
(84, 1183, '2', 0.303719, 15, 1, '2017-09-17 11:42:13'),
(84, 1194, '1', 0.46301, 17, 1, '2017-09-17 11:42:13'),
(84, 1185, '2', 0, 28, 0, '2017-09-17 11:42:14'),
(84, 1291, '4', 0.9075, 9, 1, '2017-09-17 11:42:14'),
(84, 1197, '2', -1.33333, 8, 0, '2017-09-17 11:42:14'),
(84, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:42:14'),
(84, 1186, '3', 0.75, 14, 1, '2017-09-17 11:42:14'),
(84, 1169, '4', -0.880208, 11, 0, '2017-09-17 11:42:14'),
(84, 1170, '2', 0.630208, 13, 1, '2017-09-17 11:42:14'),
(84, 1196, '4', 1.02083, 10, 1, '2017-09-17 11:42:14'),
(84, 1195, '4', 0.0075, 19, 1, '2017-09-17 11:42:14'),
(84, 1294, '3', 1.02083, 10, 1, '2017-09-17 11:42:14'),
(84, 1220, '0', 0, 7, -1, '2017-09-17 11:42:14'),
(84, 1191, '3', 1.6875, 7, 1, '2017-09-17 11:42:14'),
(84, 1282, '3', 1.4, 16, 1, '2017-09-17 11:42:14'),
(84, 1281, '3', 0.7, 23, 1, '2017-09-17 11:42:14'),
(84, 1189, '3', 2.03571, 9, 1, '2017-09-17 11:42:15'),
(84, 1284, '3', 0.3, 18, 1, '2017-09-17 11:42:15'),
(84, 1175, '4', 0.375, 28, 1, '2017-09-17 11:42:15'),
(84, 1171, '0', -0.15, 20, 0, '2017-09-17 11:42:15'),
(84, 1269, '0', -0.0625, 48, 0, '2017-09-17 11:42:15'),
(84, 1268, '0', -0.0625, 48, 0, '2017-09-17 11:42:15'),
(84, 1219, '3', 0.681818, 17, 1, '2017-09-17 11:42:15'),
(84, 1200, '2', -1.83333, 14, 0, '2017-09-17 11:42:15'),
(84, 1257, '0', -0.0625, 48, 0, '2017-09-17 11:42:15'),
(84, 1293, '2', 1.75, 10, 1, '2017-09-17 11:42:16'),
(84, 1208, '1', 1.74, 21, 1, '2017-09-17 11:42:16'),
(84, 1265, '0', 0, 4, -1, '2017-09-17 11:42:16'),
(84, 1217, '3', 1.8, 8, 1, '2017-09-17 11:42:16'),
(84, 1199, '3', 1.96875, 11, 1, '2017-09-17 11:42:16'),
(84, 1229, '4', 0.839947, 46, 1, '2017-09-17 11:42:16'),
(84, 1204, '0', 0, 20, -1, '2017-09-17 11:42:16'),
(84, 1206, '3', -2.17348, 23, 0, '2017-09-17 11:42:16'),
(84, 1202, '1', 1.75, 15, 1, '2017-09-17 11:42:16'),
(84, 1298, '1', 1.44225, 40, 1, '2017-09-17 11:42:16'),
(84, 1275, '0', -0.209987, 54, 0, '2017-09-17 11:42:16'),
(84, 1295, '4', 1.67358, 14, 1, '2017-09-17 11:42:16'),
(84, 1176, '4', 0.676753, 25, 1, '2017-09-17 11:42:16'),
(84, 171, '2', -0.59128, 73, 0, '2017-09-17 11:42:17'),
(84, 1283, '4', 1.31941, 17, 1, '2017-09-17 11:42:17'),
(84, 1299, '4', -2.87753, 4, 0, '2017-09-17 11:42:17'),
(84, 173, '0', -0.139248, 100, 0, '2017-09-17 11:42:17'),
(84, 1289, '0', -0.256496, 40, 0, '2017-09-17 11:42:17'),
(84, 2740, '4', -0.963333, 13, 0, '2017-09-17 11:42:17'),
(84, 2744, '1', 1.20333, 11, 1, '2017-09-17 11:42:17'),
(84, 2746, '2', 1.61333, 8, 1, '2017-09-17 11:42:17'),
(84, 2756, '2', 1.61333, 8, 1, '2017-09-17 11:42:17'),
(84, 2758, '2', -1.61333, 8, 0, '2017-09-17 11:42:17'),
(84, 2743, '4', 2.08333, 5, 1, '2017-09-17 11:42:17'),
(84, 2747, '4', 0.333333, 20, 1, '2017-09-17 11:42:17'),
(84, 2739, '1', 1.47, 9, 1, '2017-09-17 11:42:18'),
(84, 2749, '4', 2.25333, 4, 1, '2017-09-17 11:42:18'),
(84, 2751, '2', 0.853333, 14, 1, '2017-09-17 11:42:18'),
(84, 2754, '1', 2.25333, 4, 1, '2017-09-17 11:42:18'),
(84, 2781, '0', 0, 15, -1, '2017-09-17 11:42:18'),
(84, 2780, '1', 1.56, 24, 1, '2017-09-17 11:42:18'),
(84, 2767, '4', 2.34, 11, 1, '2017-09-17 11:42:18'),
(84, 2778, '2', 2.64, 6, 1, '2017-09-17 11:42:18'),
(84, 2769, '2', -2.1, 15, 0, '2017-09-17 11:42:18'),
(84, 2785, '3', 1.98, 17, 1, '2017-09-17 11:42:18'),
(84, 2791, '3', 2.04, 16, 1, '2017-09-17 11:42:18'),
(84, 2768, '0', 0, 23, -1, '2017-09-17 11:42:18'),
(84, 2765, '4', 2.46, 9, 1, '2017-09-17 11:42:18'),
(84, 2803, '3', 2.8846, 4, 1, '2017-09-17 11:42:18'),
(84, 2792, '4', -2.10012, 29, 0, '2017-09-17 11:42:19'),
(84, 2808, '0', 0, 13, -1, '2017-09-17 11:42:19'),
(84, 2802, '3', 2.26757, 24, 1, '2017-09-17 11:42:19'),
(84, 2806, '1', -2.58532, 14, 0, '2017-09-17 11:42:19'),
(84, 2800, '2', 2.73701, 9, 1, '2017-09-17 11:42:19'),
(84, 2809, '2', 2.55445, 15, 1, '2017-09-17 11:42:19'),
(84, 2795, '4', -2.82602, 6, 0, '2017-09-17 11:42:19'),
(84, 2807, '3', 2.85539, 5, 1, '2017-09-17 11:42:19'),
(84, 2796, '3', -2.26757, 24, 0, '2017-09-17 11:42:19'),
(84, 2794, '1', 2.64652, 12, 1, '2017-09-17 11:42:19'),
(84, 2798, '1', -2.36512, 21, 0, '2017-09-17 11:42:19'),
(84, 2812, '3', 2.67685, 11, 1, '2017-09-17 11:42:19'),
(84, 2814, '4', -2.58532, 14, 0, '2017-09-17 11:42:19'),
(84, 2813, '4', -2.42905, 19, 0, '2017-09-17 11:42:20'),
(84, 2818, '1', -2.20136, 26, 0, '2017-09-17 11:42:20'),
(84, 2793, '4', -2.73701, 9, 0, '2017-09-17 11:42:20'),
(84, 2770, '2', 1.5, 25, 1, '2017-09-17 11:42:20'),
(84, 2810, '2', -2.26757, 24, 0, '2017-09-17 11:42:20'),
(84, 2775, '3', 2.64, 6, 1, '2017-09-17 11:42:20'),
(84, 2801, '1', 2.70701, 10, 1, '2017-09-17 11:42:20'),
(84, 2815, '1', 2.64652, 12, 1, '2017-09-17 11:42:20'),
(84, 2817, '1', -2.61601, 13, 0, '2017-09-17 11:42:20'),
(84, 2799, '2', -1.81718, 37, 0, '2017-09-17 11:42:20'),
(84, 2805, '1', 2.82602, 6, 1, '2017-09-17 11:42:20'),
(84, 2811, '1', 2.79651, 7, 1, '2017-09-17 11:42:20'),
(84, 2797, '1', -2.82602, 6, 0, '2017-09-17 11:42:20'),
(84, 2822, '4', 2.61218, 15, 1, '2017-09-17 11:42:20'),
(84, 2857, '2', 2.27988, 27, 1, '2017-09-17 11:42:21'),
(84, 2824, '1', 2.89915, 4, 1, '2017-09-17 11:42:21'),
(84, 2858, '1', -2.77056, 9, 0, '2017-09-17 11:42:21'),
(84, 2834, '2', -2.04426, 35, 0, '2017-09-17 11:42:21'),
(84, 2843, '1', 2.82234, 7, 1, '2017-09-17 11:42:21'),
(84, 2826, '4', -2.25111, 28, 0, '2017-09-17 11:42:21'),
(84, 2842, '4', -2.55832, 17, 0, '2017-09-17 11:42:21'),
(84, 2856, '3', 1.56006, 50, 1, '2017-09-17 11:42:21'),
(84, 2848, '3', -2.66549, 13, 0, '2017-09-17 11:42:21'),
(84, 2850, '3', -2.77056, 9, 0, '2017-09-17 11:42:21'),
(84, 2840, '4', -2.71828, 11, 0, '2017-09-17 11:42:21'),
(84, 2776, '1', 2.76, 4, 1, '2017-09-17 11:42:21');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(84, 2854, '1', -1.82635, 42, 0, '2017-09-17 11:42:21'),
(84, 2779, '1', 1.8, 20, 1, '2017-09-17 11:42:22'),
(84, 2836, '4', 2.79651, 8, 1, '2017-09-17 11:42:22'),
(84, 2839, '4', -2.79651, 8, 0, '2017-09-17 11:42:22'),
(84, 2831, '4', -2.79651, 8, 0, '2017-09-17 11:42:22'),
(84, 2766, '1', 2.34, 11, 1, '2017-09-17 11:42:22'),
(84, 2846, '2', 1.98323, 37, 1, '2017-09-17 11:42:22'),
(84, 2830, '1', -2.4211, 22, 0, '2017-09-17 11:42:22'),
(84, 2828, '1', -2.4211, 22, 0, '2017-09-17 11:42:22'),
(84, 2787, '3', -2.34, 11, 0, '2017-09-17 11:42:22'),
(84, 2790, '3', 1.62, 23, 1, '2017-09-17 11:42:22'),
(84, 2771, '3', 2.4, 10, 1, '2017-09-17 11:42:22'),
(84, 2764, '1', 2.34, 11, 1, '2017-09-17 11:42:22'),
(84, 2849, '4', 2.69195, 12, 1, '2017-09-17 11:42:22'),
(84, 2832, '3', 2.82234, 7, 1, '2017-09-17 11:42:23'),
(84, 2851, '2', 2.30847, 26, 1, '2017-09-17 11:42:23'),
(84, 2827, '0', 0, 10, -1, '2017-09-17 11:42:23'),
(84, 2829, '2', -2.66549, 13, 0, '2017-09-17 11:42:23'),
(84, 2821, '1', -2.74448, 10, 0, '2017-09-17 11:42:23'),
(84, 2844, '1', 2.61218, 15, 1, '2017-09-17 11:42:23'),
(84, 2837, '1', -2.55832, 17, 0, '2017-09-17 11:42:23'),
(84, 2875, '1', -2.82234, 7, 0, '2017-09-17 11:42:23'),
(84, 2919, '1', -2.84806, 6, 0, '2017-09-17 11:42:23'),
(84, 2782, '1', 2.88, 2, 1, '2017-09-17 11:42:23'),
(84, 2876, '4', 2.79651, 8, 1, '2017-09-17 11:42:23'),
(84, 2873, '2', -2.58532, 16, 0, '2017-09-17 11:42:23'),
(84, 2872, '2', 2.71828, 11, 1, '2017-09-17 11:42:23'),
(84, 2880, '2', -2.53118, 18, 0, '2017-09-17 11:42:23'),
(84, 2863, '2', -2.74448, 10, 0, '2017-09-17 11:42:23'),
(84, 2772, '1', -1.92, 18, 0, '2017-09-17 11:42:24'),
(84, 2773, '1', -2.76, 4, 0, '2017-09-17 11:42:24'),
(84, 2774, '4', 1.86, 19, 1, '2017-09-17 11:42:24'),
(84, 2784, '2', 2.52, 8, 1, '2017-09-17 11:42:24'),
(84, 2783, '2', -2.28, 12, 0, '2017-09-17 11:42:24'),
(84, 2786, '4', 0.96, 34, 1, '2017-09-17 11:42:24'),
(84, 2777, '4', -2.64, 6, 0, '2017-09-17 11:42:24'),
(84, 2789, '4', -2.64, 6, 0, '2017-09-17 11:42:24'),
(84, 2613, '4', 2.43, 4, 1, '2017-09-17 11:42:24'),
(84, 2614, '4', 2.1675, 6, 1, '2017-09-17 11:42:24'),
(84, 2612, '1', 1.92, 8, 1, '2017-09-17 11:42:24'),
(84, 2601, '2', 2.56687, 3, 1, '2017-09-17 11:42:24'),
(84, 2611, '3', 2.43, 4, 1, '2017-09-17 11:42:24'),
(84, 2626, '3', 2.7, 6, 1, '2017-09-17 11:42:24'),
(84, 2620, '4', 2.7, 6, 1, '2017-09-17 11:42:24'),
(84, 2623, '3', -2.3, 14, 0, '2017-09-17 11:42:24'),
(84, 2635, '0', 0, 5, -1, '2017-09-17 11:42:24'),
(84, 2625, '3', 2.6, 8, 1, '2017-09-17 11:42:25'),
(84, 2630, '0', 0, 13, -1, '2017-09-17 11:42:25'),
(84, 2619, '0', 0, 12, -1, '2017-09-17 11:42:25'),
(84, 2617, '1', 2.8, 4, 1, '2017-09-17 11:42:25'),
(84, 2730, '4', 2.65665, 10, 1, '2017-09-17 11:42:25'),
(84, 2733, '2', 1.84765, 31, 1, '2017-09-17 11:42:25'),
(84, 2819, '2', 2.65665, 10, 1, '2017-09-17 11:42:25'),
(84, 2729, '3', -2.62111, 11, 0, '2017-09-17 11:42:25'),
(84, 2816, '4', 2.83093, 5, 1, '2017-09-17 11:42:25'),
(84, 2845, '2', -2.76188, 7, 0, '2017-09-17 11:42:25'),
(84, 2823, '2', -2.43962, 16, 0, '2017-09-17 11:42:25'),
(84, 2847, '1', -1.53686, 38, 0, '2017-09-17 11:42:25'),
(84, 2852, '2', 1.76169, 33, 1, '2017-09-17 11:42:25'),
(84, 2838, '3', 2.86514, 4, 1, '2017-09-17 11:42:25'),
(84, 2732, '3', -2.83093, 5, 0, '2017-09-17 11:42:25'),
(84, 2731, '4', 2.32743, 19, 1, '2017-09-17 11:42:26'),
(84, 2820, '1', -2.43962, 16, 0, '2017-09-17 11:42:26'),
(84, 2825, '4', -2.65665, 10, 0, '2017-09-17 11:42:26'),
(84, 2629, '1', 2, 20, 1, '2017-09-17 11:42:26'),
(84, 2728, '2', -2.54929, 13, 0, '2017-09-17 11:42:26'),
(84, 2631, '4', -1.35, 33, 0, '2017-09-17 11:42:26'),
(84, 2621, '3', 2.55, 9, 1, '2017-09-17 11:42:26'),
(84, 2835, '3', 2.32743, 19, 1, '2017-09-17 11:42:26'),
(84, 2735, '1', 2.62111, 11, 1, '2017-09-17 11:42:26'),
(84, 2734, '3', 2.25111, 21, 1, '2017-09-17 11:42:26'),
(84, 2841, '3', 2.83093, 5, 1, '2017-09-17 11:42:26'),
(84, 2833, '3', 2.79651, 6, 1, '2017-09-17 11:42:26'),
(84, 2877, '2', 2.72703, 8, 1, '2017-09-17 11:42:26'),
(84, 2871, '2', 2.62679, 14, 1, '2017-09-17 11:42:26'),
(84, 2889, '2', 2.81957, 7, 1, '2017-09-17 11:42:26'),
(84, 2887, '3', 2.62679, 14, 1, '2017-09-17 11:42:26'),
(84, 2870, '3', 2.87228, 5, 1, '2017-09-17 11:42:27'),
(84, 2892, '3', -2.6739, 15, 0, '2017-09-17 11:42:27'),
(84, 2855, '0', -0.387298, 60, 0, '2017-09-17 11:42:27'),
(84, 2859, '0', 0, 3, -1, '2017-09-17 11:42:27'),
(84, 2866, '4', 2.76586, 9, 1, '2017-09-17 11:42:27'),
(84, 2904, '2', -1.76811, 44, 0, '2017-09-17 11:42:27'),
(84, 3029, '3', 1.20333, 11, 1, '2017-09-17 11:42:27'),
(84, 3070, '0', 0, 19, -1, '2017-09-17 11:42:27'),
(84, 3061, '3', 1.33333, 10, 1, '2017-09-17 11:42:27'),
(84, 3080, '1', 1.92, 6, 1, '2017-09-17 11:42:27'),
(84, 3022, '2', -0.653333, 16, 0, '2017-09-17 11:42:27'),
(84, 3078, '1', -0.27, 21, 0, '2017-09-17 11:42:27'),
(84, 3085, '1', 0.12, 24, 1, '2017-09-17 11:42:27'),
(84, 3094, '2', 0.653333, 16, 1, '2017-09-17 11:42:27'),
(84, 3082, '1', -1.20333, 11, 0, '2017-09-17 11:42:27'),
(84, 3038, '2', -0.403333, 19, 0, '2017-09-17 11:42:27'),
(84, 3053, '2', -0.75, 15, 0, '2017-09-17 11:42:28'),
(84, 3014, '4', -1.33333, 10, 0, '2017-09-17 11:42:28'),
(84, 3033, '0', 0, 16, -1, '2017-09-17 11:42:28'),
(84, 3086, '2', -1.20333, 11, 0, '2017-09-17 11:42:28'),
(84, 3036, '1', 0.12, 24, 1, '2017-09-17 11:42:28'),
(84, 3017, '2', 1.08, 12, 1, '2017-09-17 11:42:28'),
(84, 3091, '2', 2.61333, 2, 1, '2017-09-17 11:42:28'),
(84, 3064, '4', 1.08, 12, 1, '2017-09-17 11:42:28'),
(84, 3059, '1', 1.47, 9, 1, '2017-09-17 11:42:28'),
(84, 3057, '1', 0.333333, 20, 1, '2017-09-17 11:42:28'),
(84, 3031, '1', -0.403333, 19, 0, '2017-09-17 11:42:28'),
(84, 3088, '2', -0.00333333, 29, 0, '2017-09-17 11:42:28'),
(84, 3025, '1', -0.333333, 20, 0, '2017-09-17 11:42:28'),
(84, 3021, '1', 1.92, 6, 1, '2017-09-17 11:42:28'),
(84, 3134, '0', 0, 12, -1, '2017-09-17 11:42:28'),
(84, 3010, '1', -1.08, 12, 0, '2017-09-17 11:42:28'),
(84, 3072, '1', -2.08333, 5, 0, '2017-09-17 11:42:29'),
(84, 3067, '3', 1.33333, 10, 1, '2017-09-17 11:42:29'),
(84, 3075, '3', 1.20333, 11, 1, '2017-09-17 11:42:29'),
(84, 3143, '1', -2.04187, 7, 0, '2017-09-17 11:42:29'),
(84, 3111, '3', -2.04187, 7, 0, '2017-09-17 11:42:29'),
(84, 3104, '1', -1.17188, 15, 0, '2017-09-17 11:42:29'),
(84, 3107, '4', 2.1675, 6, 1, '2017-09-17 11:42:29'),
(84, 3113, '1', 2.56687, 3, 1, '2017-09-17 11:42:29'),
(84, 3098, '1', -0.6075, 22, 0, '2017-09-17 11:42:29'),
(84, 3115, '2', -0.9075, 18, 0, '2017-09-17 11:42:29'),
(84, 3138, '0', -0.001875, 40, 0, '2017-09-17 11:42:29'),
(84, 3096, '2', 0.046875, 35, 1, '2017-09-17 11:42:29'),
(84, 3154, '2', 0.9075, 18, 1, '2017-09-17 11:42:30'),
(84, 3131, '2', -0.48, 24, 0, '2017-09-17 11:42:30'),
(84, 3110, '0', -0.001875, 40, 0, '2017-09-17 11:42:30'),
(84, 3135, '1', -1.17188, 15, 0, '2017-09-17 11:42:30'),
(84, 3157, '3', 1.6875, 10, 1, '2017-09-17 11:42:30'),
(84, 3116, '2', -1.36688, 13, 0, '2017-09-17 11:42:30'),
(84, 3122, '1', 1.80187, 9, 1, '2017-09-17 11:42:30'),
(84, 3120, '4', -0.03, 36, 0, '2017-09-17 11:42:30'),
(84, 3118, '2', -0.316875, 27, 0, '2017-09-17 11:42:30'),
(84, 3162, '2', 2.1168, 8, 1, '2017-09-17 11:42:30'),
(84, 3146, '1', 1.57687, 11, 1, '2017-09-17 11:42:30'),
(84, 3127, '3', 1.17188, 15, 1, '2017-09-17 11:42:30'),
(84, 3141, '3', -2.325, 9, 0, '2017-09-17 11:42:30'),
(84, 3108, '0', -0.001875, 40, 0, '2017-09-17 11:42:30'),
(84, 3148, '2', 0.1875, 30, 1, '2017-09-17 11:42:30'),
(84, 3125, '1', -1.08, 16, 0, '2017-09-17 11:42:30'),
(84, 3130, '2', 1.47, 12, 1, '2017-09-17 11:42:31'),
(84, 3128, '1', 1.57687, 11, 1, '2017-09-17 11:42:31'),
(84, 3151, '2', 2.025, 13, 1, '2017-09-17 11:42:31'),
(84, 3202, '4', 2.34, 11, 1, '2017-09-17 11:42:31'),
(84, 3186, '4', -1.14, 31, 0, '2017-09-17 11:42:31'),
(84, 3204, '3', -2.16, 14, 0, '2017-09-17 11:42:31'),
(84, 3200, '3', -2.58, 7, 0, '2017-09-17 11:42:31'),
(84, 3209, '2', -1.8252, 11, 0, '2017-09-17 11:42:31'),
(84, 3185, '1', -0.2028, 37, 0, '2017-09-17 11:42:31'),
(84, 3194, '1', -1.3068, 17, 0, '2017-09-17 11:42:31'),
(84, 3208, '3', 2.1168, 8, 1, '2017-09-17 11:42:31'),
(84, 3206, '2', -2.0172, 9, 0, '2017-09-17 11:42:31'),
(84, 3175, '2', 1.3872, 16, 1, '2017-09-17 11:42:31'),
(84, 3198, '2', -1.1532, 19, 0, '2017-09-17 11:42:31'),
(84, 3167, '4', 1.92, 10, 1, '2017-09-17 11:42:31'),
(84, 3174, '4', -0.12, 40, 0, '2017-09-17 11:42:32'),
(84, 3170, '3', 0.9408, 22, 1, '2017-09-17 11:42:32'),
(84, 3168, '1', -0.5808, 28, 0, '2017-09-17 11:42:32'),
(84, 3183, '3', 1.47, 15, 1, '2017-09-17 11:42:32'),
(84, 3188, '3', -2.3232, 6, 0, '2017-09-17 11:42:32'),
(84, 3172, '4', 1.5552, 14, 1, '2017-09-17 11:42:32'),
(84, 3177, '4', 0.5808, 28, 1, '2017-09-17 11:42:32'),
(84, 3196, '4', -0.8748, 23, 0, '2017-09-17 11:42:32'),
(84, 3180, '2', -2.0172, 9, 0, '2017-09-17 11:42:32'),
(84, 3178, '1', -1.8252, 11, 0, '2017-09-17 11:42:32'),
(84, 3192, '1', -1.7328, 12, 0, '2017-09-17 11:42:32'),
(84, 3181, '2', 0.2352, 36, 1, '2017-09-17 11:42:32'),
(84, 3164, '3', 1.3872, 16, 1, '2017-09-17 11:42:32'),
(84, 3161, '3', -1.1532, 19, 0, '2017-09-17 11:42:32'),
(84, 3190, '3', -1.6428, 13, 0, '2017-09-17 11:42:32'),
(84, 3228, '2', -1.6875, 12, 0, '2017-09-17 11:42:32'),
(84, 3197, '4', 1.78255, 11, 1, '2017-09-17 11:42:32'),
(84, 3265, '1', -1.78255, 11, 0, '2017-09-17 11:42:33'),
(84, 3195, '2', 1.88021, 10, 1, '2017-09-17 11:42:33'),
(84, 3266, '4', -1.6875, 12, 0, '2017-09-17 11:42:33'),
(84, 3193, '1', -1.33333, 16, 0, '2017-09-17 11:42:33'),
(84, 3212, '1', -1.17188, 18, 0, '2017-09-17 11:42:33'),
(84, 3261, '4', -1.88021, 10, 0, '2017-09-17 11:42:33'),
(85, 373, '0', -0.0075, 20, 0, '2017-09-17 11:42:33'),
(85, 2404, '2', -2.10149, 15, 0, '2017-09-17 11:42:33'),
(85, 1107, '0', -0.0075, 20, 0, '2017-09-17 11:42:33'),
(85, 1139, '2', 1.47, 6, 1, '2017-09-17 11:42:33'),
(85, 392, '0', -0.0075, 20, 0, '2017-09-17 11:42:33'),
(85, 402, '3', 0, 20, 1, '2017-09-17 11:42:34'),
(85, 388, '0', -0.0075, 20, 0, '2017-09-17 11:42:34'),
(85, 398, '0', -0.0075, 20, 0, '2017-09-17 11:42:34'),
(85, 2429, '4', 2.02423, 25, 1, '2017-09-17 11:42:34'),
(85, 1122, '4', 0, 20, 1, '2017-09-17 11:42:34'),
(85, 394, '0', -0.0075, 20, 0, '2017-09-17 11:42:34'),
(85, 1115, '1', 0.6075, 11, 1, '2017-09-17 11:42:34'),
(85, 364, '2', 1.08, 8, 1, '2017-09-17 11:42:34'),
(85, 1131, '1', 0.1875, 15, 1, '2017-09-17 11:42:34'),
(85, 367, '3', 1.08, 8, 1, '2017-09-17 11:42:34'),
(85, 1110, '2', 1.2675, 7, 1, '2017-09-17 11:42:34'),
(85, 1104, '3', 1.2675, 7, 1, '2017-09-17 11:42:34'),
(85, 371, '4', 0.27, 14, 1, '2017-09-17 11:42:34'),
(85, 2410, '1', -1.79634, 19, 0, '2017-09-17 11:42:34'),
(85, 1109, '3', 1.08, 8, 1, '2017-09-17 11:42:34'),
(85, 366, '4', 1.08, 8, 1, '2017-09-17 11:42:34'),
(85, 1105, '2', 0.6075, 11, 1, '2017-09-17 11:42:34'),
(85, 372, '1', -0.0075, 19, 0, '2017-09-17 11:42:35'),
(85, 386, '1', -0.6075, 11, 0, '2017-09-17 11:42:35'),
(85, 391, '0', -0.0075, 20, 0, '2017-09-17 11:42:35'),
(85, 2406, '1', -2.41774, 9, 0, '2017-09-17 11:42:35'),
(85, 378, '1', 0.48, 12, 1, '2017-09-17 11:42:35'),
(85, 399, '0', -0.0075, 20, 0, '2017-09-17 11:42:35'),
(85, 393, '4', -0.3675, 13, 0, '2017-09-17 11:42:35'),
(85, 2419, '2', 0.500208, 71, 1, '2017-09-17 11:42:35'),
(85, 384, '0', -0.0075, 20, 0, '2017-09-17 11:42:35'),
(85, 2431, '1', -1.78674, 21, 0, '2017-09-17 11:42:35'),
(85, 2400, '3', 2.58673, 5, 1, '2017-09-17 11:42:35'),
(85, 383, '0', -0.0075, 20, 0, '2017-09-17 11:42:35'),
(85, 363, '3', 1.92, 4, 1, '2017-09-17 11:42:35'),
(85, 395, '0', -0.0075, 20, 0, '2017-09-17 11:42:35'),
(85, 397, '0', -0.0075, 20, 0, '2017-09-17 11:42:35'),
(85, 1117, '2', 1.6875, 5, 1, '2017-09-17 11:42:35'),
(85, 2454, '2', 2.54167, 22, 1, '2017-09-17 11:42:36'),
(85, 2447, '4', 2.42045, 17, 1, '2017-09-17 11:42:36'),
(85, 1143, '2', -1.65, 9, 0, '2017-09-17 11:42:36'),
(85, 2440, '2', -1.96364, 38, 0, '2017-09-17 11:42:36'),
(85, 2456, '3', -1.06154, 84, 0, '2017-09-17 11:42:36'),
(85, 1157, '1', 1.65, 9, 1, '2017-09-17 11:42:36'),
(85, 1154, '1', 0.9, 14, 1, '2017-09-17 11:42:36'),
(85, 2455, '4', -2.46, 18, 0, '2017-09-17 11:42:36'),
(85, 2457, '2', 2.39516, 25, 1, '2017-09-17 11:42:36'),
(85, 1153, '2', 1.35, 11, 1, '2017-09-17 11:42:36'),
(85, 2442, '4', 2.775, 6, 1, '2017-09-17 11:42:36'),
(85, 2444, '4', -2.43, 19, 0, '2017-09-17 11:42:36'),
(85, 1150, '3', -0.3, 18, 0, '2017-09-17 11:42:36'),
(85, 2439, '1', 2.79, 7, 1, '2017-09-17 11:42:36'),
(85, 1156, '1', 2.4, 4, 1, '2017-09-17 11:42:36'),
(85, 1141, '0', -0.15, 20, 0, '2017-09-17 11:42:36'),
(85, 2449, '3', 2.46, 18, 1, '2017-09-17 11:42:37'),
(85, 2639, '1', -2.80944, 9, 0, '2017-09-17 11:42:37'),
(85, 1148, '0', -0.15, 20, 0, '2017-09-17 11:42:37'),
(85, 3051, '0', -0.00443787, 26, 0, '2017-09-17 11:42:37'),
(85, 1452, '2', 2.1675, 6, 1, '2017-09-17 11:42:37'),
(85, 1454, '3', -0.75, 18, 0, '2017-09-17 11:42:37'),
(85, 2929, '4', 1.33333, 8, 1, '2017-09-17 11:42:37'),
(85, 1456, '0', -0.001875, 40, 0, '2017-09-17 11:42:37'),
(85, 1457, '4', 2.29688, 5, 1, '2017-09-17 11:42:37'),
(85, 1455, '1', 2.29688, 5, 1, '2017-09-17 11:42:37'),
(85, 1463, '2', 1.6875, 11, 1, '2017-09-17 11:42:37'),
(85, 1461, '2', -1.4518, 14, 0, '2017-09-17 11:42:37'),
(85, 1465, '0', -0.00382653, 28, 0, '2017-09-17 11:42:37'),
(85, 3004, '2', -0.653333, 16, 0, '2017-09-17 11:42:37'),
(85, 1450, '4', 0.592593, 20, 1, '2017-09-17 11:42:38'),
(85, 1467, '3', 0.9075, 27, 1, '2017-09-17 11:42:38'),
(85, 1459, '0', 0, 24, -1, '2017-09-17 11:42:38'),
(85, 3044, '3', 1.6875, 6, 1, '2017-09-17 11:42:38'),
(85, 1478, '2', 2.1, 12, 1, '2017-09-17 11:42:38'),
(85, 1475, '2', 2.02174, 15, 1, '2017-09-17 11:42:38'),
(85, 1491, '1', -1.92857, 15, 0, '2017-09-17 11:42:38'),
(85, 1481, '1', -2.1, 12, 0, '2017-09-17 11:42:38'),
(85, 1487, '0', 0, 15, -1, '2017-09-17 11:42:38'),
(85, 1482, '3', -2.11364, 13, 0, '2017-09-17 11:42:38'),
(85, 1464, '2', 0.880208, 22, 1, '2017-09-17 11:42:38'),
(85, 3039, '1', 0.998521, 11, 1, '2017-09-17 11:42:38'),
(85, 1453, '1', 1.5552, 14, 1, '2017-09-17 11:42:38'),
(85, 3002, '1', 2.19231, 7, 1, '2017-09-17 11:42:38'),
(85, 1486, '4', -2.38636, 9, 0, '2017-09-17 11:42:38'),
(85, 1470, '1', 2.22, 13, 1, '2017-09-17 11:42:38'),
(85, 2933, '1', -0.375, 21, 0, '2017-09-17 11:42:38'),
(85, 1483, '2', -1.81579, 15, 0, '2017-09-17 11:42:38'),
(85, 3000, '0', 0, 7, -1, '2017-09-17 11:42:39'),
(85, 1477, '4', -0.5, 45, 0, '2017-09-17 11:42:39'),
(85, 1473, '1', 1.86, 19, 1, '2017-09-17 11:42:39'),
(85, 1468, '2', 0.9, 28, 1, '2017-09-17 11:42:39'),
(85, 1480, '4', 1.71429, 18, 1, '2017-09-17 11:42:39'),
(85, 1484, '2', -2.5, 7, 0, '2017-09-17 11:42:39'),
(85, 1485, '4', 2.30769, 12, 1, '2017-09-17 11:42:39'),
(85, 1469, '2', 2.4, 8, 1, '2017-09-17 11:42:39'),
(85, 1472, '4', -0.9, 28, 0, '2017-09-17 11:42:39'),
(85, 1471, '4', 2.25, 15, 1, '2017-09-17 11:42:39'),
(85, 1476, '3', 1.15385, 32, 1, '2017-09-17 11:42:39'),
(85, 1502, '1', -2.40413, 13, 0, '2017-09-17 11:42:39'),
(85, 1479, '4', -1.84091, 17, 0, '2017-09-17 11:42:39'),
(85, 3008, '1', -1.71429, 12, 0, '2017-09-17 11:42:39'),
(85, 1474, '3', -2.35714, 9, 0, '2017-09-17 11:42:39'),
(85, 1488, '2', 1.97727, 15, 1, '2017-09-17 11:42:39'),
(85, 1496, '4', 0.818182, 32, 1, '2017-09-17 11:42:40'),
(85, 1504, '0', -0.0375, 80, 0, '2017-09-17 11:42:40'),
(85, 1494, '4', 1.89474, 14, 1, '2017-09-17 11:42:40'),
(85, 1495, '2', 1.78571, 17, 1, '2017-09-17 11:42:40'),
(85, 1501, '3', 2.45455, 8, 1, '2017-09-17 11:42:40'),
(85, 1505, '1', 2.66549, 13, 1, '2017-09-17 11:42:40'),
(85, 1506, '1', 2.22796, 18, 1, '2017-09-17 11:42:40'),
(85, 3062, '3', -1.88988, 16, 0, '2017-09-17 11:42:40'),
(85, 1503, '0', -0.233677, 46, 0, '2017-09-17 11:42:40'),
(85, 2947, '3', 2.43962, 8, 1, '2017-09-17 11:42:40'),
(85, 1498, '2', -1.72891, 27, 0, '2017-09-17 11:42:40'),
(85, 1490, '1', 2.57552, 9, 1, '2017-09-17 11:42:40'),
(85, 1497, '2', 0.248288, 41, 1, '2017-09-17 11:42:40'),
(85, 3054, '2', -0.310723, 29, 0, '2017-09-17 11:42:40'),
(85, 3076, '0', -0.310723, 30, 0, '2017-09-17 11:42:40'),
(85, 1507, '1', 2.17046, 20, 1, '2017-09-17 11:42:40'),
(85, 1489, '3', -1.64155, 25, 0, '2017-09-17 11:42:41'),
(85, 1492, '2', 2.57552, 9, 1, '2017-09-17 11:42:41'),
(85, 1499, '3', -1.88988, 23, 0, '2017-09-17 11:42:41'),
(85, 1493, '3', -2.36512, 12, 0, '2017-09-17 11:42:41'),
(85, 1500, '3', -2.0326, 23, 0, '2017-09-17 11:42:41'),
(85, 1524, '2', 2.32399, 14, 1, '2017-09-17 11:42:41'),
(85, 1517, '3', -2.0274, 24, 0, '2017-09-17 11:42:41'),
(85, 1523, '3', 2.45246, 12, 1, '2017-09-17 11:42:41'),
(85, 1527, '1', 2.10865, 23, 1, '2017-09-17 11:42:41'),
(85, 1528, '1', 2.50031, 11, 1, '2017-09-17 11:42:41'),
(85, 1520, '3', -2.43698, 15, 0, '2017-09-17 11:42:41'),
(85, 1512, '3', -1.06508, 41, 0, '2017-09-17 11:42:41'),
(85, 1521, '1', 2.59301, 11, 1, '2017-09-17 11:42:41'),
(85, 1510, '3', -1.84111, 27, 0, '2017-09-17 11:42:42'),
(85, 1513, '3', 0.90856, 40, 1, '2017-09-17 11:42:42'),
(85, 1509, '1', -2.64301, 9, 0, '2017-09-17 11:42:42'),
(85, 1515, '1', 2.25111, 14, 1, '2017-09-17 11:42:42'),
(85, 2401, '2', -1.66711, 28, 0, '2017-09-17 11:42:42'),
(85, 923, '4', 2.12138, 14, 1, '2017-09-17 11:42:42'),
(85, 872, '4', -2.1675, 9, 0, '2017-09-17 11:42:42'),
(85, 340, '3', 2.36297, 9, 1, '2017-09-17 11:42:42'),
(85, 859, '4', 2.20408, 10, 1, '2017-09-17 11:42:42'),
(85, 858, '0', 0, 15, -1, '2017-09-17 11:42:42'),
(85, 868, '1', 2.37964, 7, 1, '2017-09-17 11:42:42'),
(85, 326, '2', -2.19593, 13, 0, '2017-09-17 11:42:42'),
(85, 871, '3', 2.08333, 11, 1, '2017-09-17 11:42:42'),
(85, 857, '3', 2.08333, 10, 1, '2017-09-17 11:42:42'),
(85, 867, '3', 1.61333, 16, 1, '2017-09-17 11:42:42'),
(85, 1639, '4', 1.09903, 30, 1, '2017-09-17 11:42:42'),
(85, 865, '2', 2.52083, 5, 1, '2017-09-17 11:42:42'),
(85, 1683, '0', 0, 27, -1, '2017-09-17 11:42:43'),
(85, 309, '0', 0, 23, -1, '2017-09-17 11:42:43'),
(85, 358, '3', -2.4375, 12, 0, '2017-09-17 11:42:43'),
(85, 1125, '4', -1.92, 12, 0, '2017-09-17 11:42:43'),
(85, 362, '3', 1.92, 12, 1, '2017-09-17 11:42:43'),
(85, 863, '2', 2.41142, 6, 1, '2017-09-17 11:42:43'),
(85, 890, '2', 1.75, 15, 1, '2017-09-17 11:42:43'),
(85, 875, '1', 1.4, 32, 1, '2017-09-17 11:42:43'),
(85, 891, '4', -2.25, 9, 0, '2017-09-17 11:42:43'),
(85, 303, '3', -1.24286, 41, 0, '2017-09-17 11:42:43'),
(85, 310, '3', 2.76, 4, 1, '2017-09-17 11:42:43'),
(85, 305, '2', 1.5, 34, 1, '2017-09-17 11:42:43'),
(85, 304, '2', 2.35714, 12, 1, '2017-09-17 11:42:43'),
(85, 892, '1', 2.3, 7, 1, '2017-09-17 11:42:43'),
(85, 894, '1', 2.57263, 7, 1, '2017-09-17 11:42:43'),
(85, 963, '4', -2.39104, 30, 0, '2017-09-17 11:42:43'),
(85, 316, '1', 2.61218, 12, 1, '2017-09-17 11:42:44'),
(85, 899, '3', 2.70074, 14, 1, '2017-09-17 11:42:44'),
(85, 897, '2', 2.07443, 17, 1, '2017-09-17 11:42:44'),
(85, 313, '2', -2.61714, 10, 0, '2017-09-17 11:42:44'),
(85, 895, '3', -2.56259, 8, 0, '2017-09-17 11:42:44'),
(85, 312, '3', 2.75492, 6, 1, '2017-09-17 11:42:44'),
(85, 911, '3', -2.61218, 15, 0, '2017-09-17 11:42:44'),
(85, 903, '2', -2.74448, 12, 0, '2017-09-17 11:42:44'),
(85, 896, '2', -2.53118, 9, 0, '2017-09-17 11:42:44'),
(85, 887, '1', 2.48438, 11, 1, '2017-09-17 11:42:44'),
(85, 969, '3', 2.52858, 19, 1, '2017-09-17 11:42:44'),
(85, 909, '4', 2.73401, 13, 1, '2017-09-17 11:42:44'),
(85, 904, '3', -2.16788, 27, 0, '2017-09-17 11:42:44'),
(85, 898, '3', -2.4211, 11, 0, '2017-09-17 11:42:44'),
(85, 902, '3', -2.77847, 10, 0, '2017-09-17 11:42:44'),
(85, 882, '4', 1.21875, 38, 1, '2017-09-17 11:42:45'),
(85, 302, '4', -2.53333, 14, 0, '2017-09-17 11:42:45'),
(85, 306, '4', -2.51786, 9, 0, '2017-09-17 11:42:45'),
(85, 876, '2', 0.55, 49, 1, '2017-09-17 11:42:45'),
(85, 308, '3', 2.61429, 9, 1, '2017-09-17 11:42:45'),
(85, 881, '3', 2.43, 19, 1, '2017-09-17 11:42:45'),
(85, 901, '2', 2.88989, 6, 1, '2017-09-17 11:42:45'),
(85, 315, '4', -2.76455, 6, 0, '2017-09-17 11:42:45'),
(85, 869, '1', -2.45974, 17, 0, '2017-09-17 11:42:45'),
(85, 307, '3', -1.92857, 20, 0, '2017-09-17 11:42:45'),
(85, 918, '3', 2.59375, 13, 1, '2017-09-17 11:42:45'),
(85, 357, '1', 2.45, 11, 1, '2017-09-17 11:42:45'),
(85, 900, '4', -2.65665, 14, 0, '2017-09-17 11:42:45'),
(85, 912, '4', -2.25, 24, 0, '2017-09-17 11:42:45'),
(85, 356, '1', 2.68182, 7, 1, '2017-09-17 11:42:45'),
(85, 910, '1', -2.72727, 8, 0, '2017-09-17 11:42:45'),
(85, 907, '2', 2.46429, 15, 1, '2017-09-17 11:42:46'),
(85, 893, '2', -1.91667, 13, 0, '2017-09-17 11:42:46'),
(85, 908, '2', 2.89773, 3, 1, '2017-09-17 11:42:46'),
(85, 964, '1', -2.69318, 9, 0, '2017-09-17 11:42:46'),
(85, 905, '2', 1.5375, 39, 1, '2017-09-17 11:42:46'),
(85, 360, '2', 2.68182, 7, 1, '2017-09-17 11:42:46'),
(85, 317, '2', -2.62111, 11, 0, '2017-09-17 11:42:46'),
(85, 314, '4', -2.22, 13, 0, '2017-09-17 11:42:46'),
(85, 928, '1', 2.79545, 6, 1, '2017-09-17 11:42:46'),
(85, 921, '2', 2.59091, 12, 1, '2017-09-17 11:42:46'),
(85, 926, '1', 2.43222, 27, 1, '2017-09-17 11:42:46'),
(85, 322, '3', -2.86514, 4, 0, '2017-09-17 11:42:46'),
(85, 324, '3', -1.93462, 27, 0, '2017-09-17 11:42:46'),
(85, 342, '3', 2.4, 10, 1, '2017-09-17 11:42:46'),
(85, 931, '3', -2.75492, 12, 0, '2017-09-17 11:42:46'),
(85, 922, '4', -2.68269, 11, 0, '2017-09-17 11:42:46'),
(85, 888, '3', 2.625, 5, 1, '2017-09-17 11:42:46'),
(85, 929, '3', 2.67, 11, 1, '2017-09-17 11:42:46'),
(85, 355, '2', -2.58532, 12, 0, '2017-09-17 11:42:47'),
(85, 925, '2', 2.82955, 5, 1, '2017-09-17 11:42:47'),
(85, 913, '2', -2.88217, 7, 0, '2017-09-17 11:42:47'),
(85, 889, '4', -2.025, 13, 0, '2017-09-17 11:42:47'),
(85, 321, '2', 2.64, 6, 1, '2017-09-17 11:42:47'),
(85, 927, '2', -2.65625, 11, 0, '2017-09-17 11:42:47'),
(85, 914, '2', -2.8125, 5, 0, '2017-09-17 11:42:47'),
(85, 323, '3', -2.7, 6, 0, '2017-09-17 11:42:47'),
(85, 880, '3', -2.54545, 10, 0, '2017-09-17 11:42:47'),
(85, 856, '4', 2.21558, 9, 1, '2017-09-17 11:42:47'),
(85, 341, '4', 2.7, 6, 1, '2017-09-17 11:42:47'),
(85, 311, '4', 2.55556, 8, 1, '2017-09-17 11:42:47'),
(85, 336, '3', 2.5, 10, 1, '2017-09-17 11:42:47'),
(85, 924, '3', 2.1, 24, 1, '2017-09-17 11:42:47'),
(85, 920, '4', -2.70412, 15, 0, '2017-09-17 11:42:47'),
(85, 861, '3', 2.75, 5, 1, '2017-09-17 11:42:48'),
(85, 919, '3', 2.74448, 10, 1, '2017-09-17 11:42:48'),
(85, 870, '4', 2.69586, 8, 1, '2017-09-17 11:42:48'),
(85, 915, '3', -2.57552, 18, 0, '2017-09-17 11:42:48'),
(85, 862, '4', 2.58532, 12, 1, '2017-09-17 11:42:48'),
(85, 930, '1', 1.79878, 45, 1, '2017-09-17 11:42:48'),
(85, 916, '2', 2.91608, 4, 1, '2017-09-17 11:42:48'),
(85, 3210, '2', 2.65665, 8, 1, '2017-09-17 11:42:48'),
(85, 319, '1', -2.72703, 8, 0, '2017-09-17 11:42:48'),
(85, 353, '1', -2.58532, 10, 0, '2017-09-17 11:42:48'),
(85, 917, '4', 2.87366, 5, 1, '2017-09-17 11:42:48'),
(85, 943, '1', 2.88217, 7, 1, '2017-09-17 11:42:48'),
(85, 3152, '3', 2.13414, 12, 1, '2017-09-17 11:42:48'),
(85, 879, '3', -2.9542, 2, 0, '2017-09-17 11:42:48'),
(85, 984, '2', 2.54477, 21, 1, '2017-09-17 11:42:48'),
(85, 886, '2', -2.54337, 18, 0, '2017-09-17 11:42:48'),
(85, 938, '4', 2.8903, 5, 1, '2017-09-17 11:42:49'),
(85, 498, '2', 1.80187, 9, 1, '2017-09-17 11:42:49'),
(85, 481, '1', 1.57687, 11, 1, '2017-09-17 11:42:49'),
(85, 489, '4', -1.57687, 11, 0, '2017-09-17 11:42:49'),
(85, 731, '2', 1.12037, 14, 1, '2017-09-17 11:42:49'),
(85, 736, '2', -0.259516, 24, 0, '2017-09-17 11:42:49'),
(85, 490, '2', 0.0833333, 30, 1, '2017-09-17 11:42:49'),
(85, 734, '2', 0.563333, 17, 1, '2017-09-17 11:42:49'),
(85, 465, '2', 0.27, 21, 1, '2017-09-17 11:42:49'),
(85, 728, '1', 1.86981, 8, 1, '2017-09-17 11:42:49'),
(85, 724, '1', 2.25333, 4, 1, '2017-09-17 11:42:49'),
(85, 729, '1', -1.56481, 10, 0, '2017-09-17 11:42:49'),
(85, 486, '1', 1.02083, 15, 1, '2017-09-17 11:42:49'),
(85, 727, '2', 2.08333, 6, 1, '2017-09-17 11:42:49'),
(85, 730, '0', 0, 9, -1, '2017-09-17 11:42:49'),
(85, 464, '1', -1.43787, 8, 0, '2017-09-17 11:42:49'),
(85, 722, '2', -2.22454, 5, 0, '2017-09-17 11:42:50'),
(85, 509, '0', 0, 22, -1, '2017-09-17 11:42:50'),
(85, 732, '4', 1.44676, 11, 1, '2017-09-17 11:42:50'),
(85, 720, '4', 1.62881, 10, 1, '2017-09-17 11:42:50'),
(85, 725, '4', 2.18253, 5, 1, '2017-09-17 11:42:50'),
(85, 744, '0', 0, 9, -1, '2017-09-17 11:42:50'),
(85, 482, '4', 2.14286, 12, 1, '2017-09-17 11:42:50'),
(85, 754, '4', 2.14286, 12, 1, '2017-09-17 11:42:50'),
(85, 756, '4', -1.75, 20, 0, '2017-09-17 11:42:50'),
(85, 753, '4', 2.64286, 5, 1, '2017-09-17 11:42:50'),
(85, 752, '3', 2.02174, 15, 1, '2017-09-17 11:42:50'),
(85, 740, '3', -1.75, 15, 0, '2017-09-17 11:42:50'),
(85, 742, '1', 0.6, 32, 1, '2017-09-17 11:42:50'),
(85, 483, '4', -2.54348, 7, 0, '2017-09-17 11:42:51'),
(85, 499, '1', 2.44737, 7, 1, '2017-09-17 11:42:51'),
(85, 739, '1', 2.33333, 8, 1, '2017-09-17 11:42:51'),
(85, 751, '2', 1.56818, 21, 1, '2017-09-17 11:42:51'),
(85, 767, '4', -0.47247, 45, 0, '2017-09-17 11:42:51'),
(85, 470, '4', 2.63891, 7, 1, '2017-09-17 11:42:51'),
(85, 776, '4', -2.45246, 12, 0, '2017-09-17 11:42:51'),
(85, 760, '4', 2.53118, 9, 1, '2017-09-17 11:42:51'),
(85, 761, '3', 1.42127, 31, 1, '2017-09-17 11:42:51'),
(85, 491, '1', -2.67526, 6, 0, '2017-09-17 11:42:51'),
(85, 770, '2', 2.56734, 10, 1, '2017-09-17 11:42:51'),
(85, 772, '3', 2.70074, 7, 1, '2017-09-17 11:42:51'),
(85, 769, '1', 2.47645, 11, 1, '2017-09-17 11:42:51'),
(85, 764, '2', 2.35259, 11, 1, '2017-09-17 11:42:51'),
(85, 484, '0', 0, 28, -1, '2017-09-17 11:42:51'),
(85, 488, '3', 1.44225, 24, 1, '2017-09-17 11:42:51'),
(85, 768, '3', 2.5221, 11, 1, '2017-09-17 11:42:51'),
(85, 787, '4', 2.17124, 20, 1, '2017-09-17 11:42:52'),
(85, 496, '4', -1.91881, 26, 0, '2017-09-17 11:42:52'),
(85, 792, '2', 2.69921, 8, 1, '2017-09-17 11:42:52'),
(85, 789, '2', 2.37171, 18, 1, '2017-09-17 11:42:52'),
(85, 797, '1', 2.69056, 9, 1, '2017-09-17 11:42:52'),
(85, 469, '3', -2.44949, 12, 0, '2017-09-17 11:42:52'),
(85, 468, '1', -2.50998, 9, 0, '2017-09-17 11:42:52'),
(85, 500, '1', -2.76586, 6, 0, '2017-09-17 11:42:52'),
(85, 784, '4', 1.5353, 31, 1, '2017-09-17 11:42:52'),
(85, 798, '1', -2.169, 21, 0, '2017-09-17 11:42:52'),
(85, 782, '4', -2.52488, 14, 0, '2017-09-17 11:42:52'),
(85, 774, '1', 2.56734, 10, 1, '2017-09-17 11:42:52'),
(85, 473, '1', -2.56905, 8, 0, '2017-09-17 11:42:52'),
(85, 765, '2', 0, 40, 1, '2017-09-17 11:42:52'),
(85, 492, '2', 2.74448, 5, 1, '2017-09-17 11:42:52'),
(85, 788, '1', 2.81577, 5, 1, '2017-09-17 11:42:52'),
(85, 501, '1', -2.79751, 6, 0, '2017-09-17 11:42:52'),
(85, 783, '2', 2.79751, 6, 1, '2017-09-17 11:42:53'),
(85, 780, '4', -2.37171, 15, 0, '2017-09-17 11:42:53'),
(85, 794, '4', -2.75103, 7, 0, '2017-09-17 11:42:53'),
(85, 766, '3', -2.50258, 10, 0, '2017-09-17 11:42:53'),
(85, 759, '4', -2.40413, 13, 0, '2017-09-17 11:42:53'),
(85, 471, '2', 2.36512, 9, 1, '2017-09-17 11:42:53'),
(85, 493, '1', 2.43962, 8, 1, '2017-09-17 11:42:53'),
(85, 773, '1', -1.54495, 29, 0, '2017-09-17 11:42:53'),
(85, 758, '2', -2.2693, 13, 0, '2017-09-17 11:42:53'),
(85, 775, '4', 2.45246, 12, 1, '2017-09-17 11:42:53'),
(85, 762, '3', 2.30847, 13, 1, '2017-09-17 11:42:53'),
(85, 763, '3', -2.82346, 4, 0, '2017-09-17 11:42:53'),
(85, 771, '1', 1.99791, 21, 1, '2017-09-17 11:42:53'),
(85, 777, '2', 1.60496, 28, 1, '2017-09-17 11:42:53'),
(85, 779, '1', -2.35532, 14, 0, '2017-09-17 11:42:53'),
(85, 793, '1', -2.53118, 9, 0, '2017-09-17 11:42:53'),
(85, 497, '1', -2.20571, 17, 0, '2017-09-17 11:42:53'),
(85, 495, '2', -2.50533, 9, 0, '2017-09-17 11:42:54'),
(85, 785, '2', -0.486068, 43, 0, '2017-09-17 11:42:54'),
(85, 522, '2', -2.59728, 7, 0, '2017-09-17 11:42:54'),
(85, 786, '2', -2.71302, 7, 0, '2017-09-17 11:42:54'),
(85, 755, '0', -0.0625, 48, 0, '2017-09-17 11:42:54'),
(85, 474, '2', -2.1, 12, 0, '2017-09-17 11:42:54'),
(85, 480, '4', -0.6, 32, 0, '2017-09-17 11:42:54'),
(85, 475, '4', 2.41304, 9, 1, '2017-09-17 11:42:54'),
(85, 479, '4', 2.6087, 6, 1, '2017-09-17 11:42:54'),
(85, 795, '1', -2.68736, 7, 0, '2017-09-17 11:42:54'),
(85, 743, '4', 2.5, 6, 1, '2017-09-17 11:42:54'),
(85, 778, '3', 2.38385, 14, 1, '2017-09-17 11:42:54'),
(85, 521, '3', -2.71536, 5, 0, '2017-09-17 11:42:54'),
(85, 796, '3', -1.71391, 25, 0, '2017-09-17 11:42:54'),
(85, 478, '2', -2.52, 8, 0, '2017-09-17 11:42:54'),
(85, 738, '2', 1.58824, 16, 1, '2017-09-17 11:42:54'),
(85, 477, '3', -1.5, 23, 0, '2017-09-17 11:42:54'),
(85, 750, '3', -2.67391, 5, 0, '2017-09-17 11:42:55'),
(85, 747, '2', 1.91667, 13, 1, '2017-09-17 11:42:55'),
(85, 746, '1', -2.5, 6, 0, '2017-09-17 11:42:55'),
(85, 476, '1', -2.325, 9, 0, '2017-09-17 11:42:55'),
(85, 757, '2', 2.34783, 10, 1, '2017-09-17 11:42:55'),
(85, 749, '1', -0.3125, 43, 0, '2017-09-17 11:42:55'),
(85, 748, '2', 2.475, 7, 1, '2017-09-17 11:42:55'),
(85, 741, '4', -2.52632, 6, 0, '2017-09-17 11:42:55'),
(85, 502, '2', 2.54348, 7, 1, '2017-09-17 11:42:55'),
(85, 745, '2', 2.55, 6, 1, '2017-09-17 11:42:55'),
(85, 791, '4', -2.175, 11, 0, '2017-09-17 11:42:55'),
(85, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:42:55'),
(85, 1170, '2', 0.00520833, 23, 1, '2017-09-17 11:42:55'),
(85, 1276, '1', 0.292969, 22, 1, '2017-09-17 11:42:55'),
(85, 1292, '2', -1.20333, 11, 0, '2017-09-17 11:42:55'),
(85, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:42:55'),
(85, 1197, '1', 1.02083, 10, 1, '2017-09-17 11:42:56'),
(85, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:42:56'),
(85, 1297, '3', 1.92, 12, 1, '2017-09-17 11:42:56'),
(85, 1190, '4', 0.979592, 12, 1, '2017-09-17 11:42:56'),
(85, 1183, '2', 0.22314, 16, 1, '2017-09-17 11:42:56'),
(85, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:42:56'),
(85, 1177, '2', 0.0991736, 18, 1, '2017-09-17 11:42:56'),
(85, 1216, '4', 0.880208, 11, 1, '2017-09-17 11:42:56'),
(85, 1194, '0', 0, 18, -1, '2017-09-17 11:42:56'),
(85, 1186, '3', 0.75, 14, 1, '2017-09-17 11:42:56'),
(85, 1291, '4', 0.48, 12, 1, '2017-09-17 11:42:56'),
(85, 1173, '2', 1.08, 8, 1, '2017-09-17 11:42:56'),
(85, 1184, '4', 0.130208, 19, 1, '2017-09-17 11:42:56'),
(85, 1263, '0', 0, 15, -1, '2017-09-17 11:42:56'),
(85, 1196, '4', 0.75, 12, 1, '2017-09-17 11:42:56'),
(85, 1185, '3', -0.0612245, 24, 0, '2017-09-17 11:42:56'),
(85, 1169, '2', 0.421875, 15, 1, '2017-09-17 11:42:57'),
(85, 1218, '0', 0, 11, -1, '2017-09-17 11:42:57'),
(85, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:42:57'),
(85, 1172, '4', 0.9075, 9, 1, '2017-09-17 11:42:57'),
(85, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:42:57'),
(85, 1174, '3', 0.284024, 18, 1, '2017-09-17 11:42:57'),
(85, 1198, '4', 1.47, 6, 1, '2017-09-17 11:42:57'),
(85, 1199, '3', 0.9375, 22, 1, '2017-09-17 11:42:57'),
(85, 1282, '3', 1.4, 16, 1, '2017-09-17 11:42:57'),
(85, 1175, '0', -0.09375, 32, 0, '2017-09-17 11:42:57'),
(85, 1268, '1', 0.4375, 41, 1, '2017-09-17 11:42:57'),
(85, 1189, '3', 1.39286, 15, 1, '2017-09-17 11:42:57'),
(85, 1202, '1', 1.5, 18, 1, '2017-09-17 11:42:57'),
(85, 1269, '0', -0.0625, 48, 0, '2017-09-17 11:42:57'),
(85, 1217, '3', 1.35, 11, 1, '2017-09-17 11:42:57'),
(85, 1293, '2', 2, 8, 1, '2017-09-17 11:42:57'),
(85, 1208, '1', 0.96, 34, 1, '2017-09-17 11:42:58'),
(85, 1250, '1', 1.39376, 41, 1, '2017-09-17 11:42:58'),
(85, 1296, '3', -1.88988, 12, 0, '2017-09-17 11:42:58'),
(85, 1287, '0', -0.0625, 48, 0, '2017-09-17 11:42:58'),
(85, 1284, '3', 1.8, 8, 1, '2017-09-17 11:42:58'),
(85, 1204, '4', 1.99347, 22, 1, '2017-09-17 11:42:58'),
(85, 1286, '4', 1.84765, 31, 1, '2017-09-17 11:42:58'),
(85, 1264, '4', 2.35829, 20, 1, '2017-09-17 11:42:58'),
(85, 1209, '0', -0.221042, 50, 0, '2017-09-17 11:42:58'),
(85, 1275, '4', 0.529134, 50, 1, '2017-09-17 11:42:58'),
(85, 1176, '4', 2.55445, 6, 1, '2017-09-17 11:42:58'),
(85, 1295, '4', 1.88988, 12, 1, '2017-09-17 11:42:58'),
(85, 1299, '0', 0, 7, -1, '2017-09-17 11:42:58'),
(85, 1229, '4', 1.49518, 35, 1, '2017-09-17 11:42:58'),
(85, 1298, '4', -2.89915, 3, 0, '2017-09-17 11:42:58'),
(85, 172, '2', 2.06897, 47, 1, '2017-09-17 11:42:59'),
(85, 1206, '3', -2.13414, 24, 0, '2017-09-17 11:42:59'),
(85, 1187, '2', 2.19301, 12, 1, '2017-09-17 11:42:59'),
(85, 171, '1', 2.30847, 26, 1, '2017-09-17 11:42:59'),
(85, 1207, '1', -1.29904, 52, 0, '2017-09-17 11:42:59'),
(85, 1283, '4', 2.19301, 9, 1, '2017-09-17 11:42:59'),
(85, 1278, '0', -0.387298, 60, 0, '2017-09-17 11:42:59'),
(85, 169, '2', 2.52488, 14, 1, '2017-09-17 11:42:59'),
(85, 1267, '2', -2.53546, 20, 0, '2017-09-17 11:42:59'),
(85, 1230, '2', -2.57087, 17, 0, '2017-09-17 11:42:59'),
(85, 1188, '4', 0, 28, 0, '2017-09-17 11:42:59'),
(85, 173, '4', 2.73401, 13, 1, '2017-09-17 11:42:59'),
(85, 1256, '2', -1.74745, 37, 0, '2017-09-17 11:42:59'),
(85, 1289, '2', 2.25111, 14, 1, '2017-09-17 11:42:59'),
(85, 1277, '2', 2.65518, 13, 1, '2017-09-17 11:42:59'),
(86, 1190, '4', 0.979592, 12, 1, '2017-09-17 11:43:00'),
(86, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:43:00'),
(86, 1198, '4', 0.48, 12, 1, '2017-09-17 11:43:00'),
(86, 1196, '4', 0.421875, 15, 1, '2017-09-17 11:43:00'),
(86, 1197, '1', 0.520833, 14, 1, '2017-09-17 11:43:00'),
(86, 1263, '3', -0.091875, 33, 0, '2017-09-17 11:43:00'),
(86, 1218, '0', -0.0075, 20, 0, '2017-09-17 11:43:00'),
(86, 1194, '1', 0.46301, 17, 1, '2017-09-17 11:43:00'),
(86, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:43:00'),
(86, 1276, '2', -0.84668, 15, 0, '2017-09-17 11:43:00'),
(86, 1183, '2', 0.303719, 15, 1, '2017-09-17 11:43:01'),
(86, 1210, '1', 0.130208, 19, 1, '2017-09-17 11:43:01'),
(86, 1172, '4', 0.1875, 15, 1, '2017-09-17 11:43:01'),
(86, 1270, '1', -0.17155, 35, 0, '2017-09-17 11:43:01'),
(86, 1297, '3', 1.14083, 23, 1, '2017-09-17 11:43:01'),
(86, 1170, '1', -0.880208, 11, 0, '2017-09-17 11:43:01'),
(86, 1184, '3', -0.1875, 18, 0, '2017-09-17 11:43:01'),
(86, 1292, '1', 1.47, 9, 1, '2017-09-17 11:43:01'),
(86, 1216, '4', 0.046875, 21, 1, '2017-09-17 11:43:01'),
(86, 1261, '3', 0.0747922, 32, 1, '2017-09-17 11:43:01'),
(86, 1291, '4', 0.1875, 15, 1, '2017-09-17 11:43:01'),
(86, 1169, '2', 0.630208, 13, 1, '2017-09-17 11:43:01'),
(86, 1174, '3', 0.998521, 11, 1, '2017-09-17 11:43:01'),
(86, 1177, '2', 1.04752, 9, 1, '2017-09-17 11:43:01'),
(86, 1173, '2', 1.6875, 5, 1, '2017-09-17 11:43:01'),
(86, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:43:01'),
(86, 1186, '3', 1.2398, 10, 1, '2017-09-17 11:43:02'),
(86, 1195, '3', -0.0075, 19, 0, '2017-09-17 11:43:02'),
(86, 1265, '1', -0.586908, 29, 0, '2017-09-17 11:43:02'),
(86, 1191, '3', 1.38138, 9, 1, '2017-09-17 11:43:02'),
(86, 1217, '3', 0.9, 14, 1, '2017-09-17 11:43:02'),
(86, 1199, '4', -1.03125, 21, 0, '2017-09-17 11:43:02'),
(86, 1257, '4', 1.6875, 21, 1, '2017-09-17 11:43:02'),
(86, 1281, '3', 0.4, 26, 1, '2017-09-17 11:43:02'),
(86, 1219, '1', -0.272727, 20, 0, '2017-09-17 11:43:02'),
(86, 1200, '2', -1.41667, 19, 0, '2017-09-17 11:43:02'),
(86, 1293, '2', 1.875, 9, 1, '2017-09-17 11:43:02'),
(86, 1294, '3', 2, 8, 1, '2017-09-17 11:43:02'),
(86, 1287, '2', -2.1875, 13, 0, '2017-09-17 11:43:02'),
(86, 1282, '4', -1.5, 15, 0, '2017-09-17 11:43:02'),
(86, 1269, '2', -1.125, 30, 0, '2017-09-17 11:43:02'),
(86, 1284, '3', 0.3675, 13, 1, '2017-09-17 11:43:02'),
(86, 1268, '3', -0.75, 36, 0, '2017-09-17 11:43:03'),
(86, 1220, '1', -0.309949, 19, 0, '2017-09-17 11:43:03'),
(86, 1189, '3', 2.02423, 5, 1, '2017-09-17 11:43:03'),
(86, 1208, '2', -1.5, 25, 0, '2017-09-17 11:43:03'),
(86, 1175, '4', 0.0263672, 29, 1, '2017-09-17 11:43:03'),
(86, 1171, '4', 1.47, 6, 1, '2017-09-17 11:43:03'),
(86, 1202, '3', -0.916667, 25, 0, '2017-09-17 11:43:03'),
(86, 1283, '4', 1.25, 14, 1, '2017-09-17 11:43:03'),
(86, 1204, '4', 0.75, 36, 1, '2017-09-17 11:43:03'),
(86, 1188, '4', -1.92857, 10, 0, '2017-09-17 11:43:03'),
(86, 1187, '1', -1.59375, 15, 0, '2017-09-17 11:43:03'),
(86, 171, '3', -0.75, 40, 0, '2017-09-17 11:43:03'),
(86, 172, '1', -0.547686, 63, 0, '2017-09-17 11:43:03'),
(86, 1299, '3', 0.892562, 30, 1, '2017-09-17 11:43:03'),
(86, 1264, '3', 0, 66, 0, '2017-09-17 11:43:04'),
(86, 1289, '1', -1.2675, 14, 0, '2017-09-17 11:43:04'),
(86, 1286, '4', 0.1875, 45, 1, '2017-09-17 11:43:04'),
(86, 1229, '4', 0.00925926, 51, 1, '2017-09-17 11:43:04'),
(86, 1209, '0', -0.0012, 50, 0, '2017-09-17 11:43:04'),
(86, 1296, '1', -0.1875, 18, 0, '2017-09-17 11:43:04'),
(86, 1295, '4', 1.6875, 6, 1, '2017-09-17 11:43:04'),
(86, 1176, '3', -1.53061, 8, 0, '2017-09-17 11:43:04'),
(86, 173, '3', -0.0675, 85, 0, '2017-09-17 11:43:04'),
(86, 1275, '3', 0, 54, 0, '2017-09-17 11:43:04'),
(86, 1140, '4', -0.9075, 9, 0, '2017-09-17 11:43:04'),
(86, 382, '4', 0.48, 12, 1, '2017-09-17 11:43:04'),
(86, 2419, '2', 0.75, 60, 1, '2017-09-17 11:43:04'),
(86, 1104, '3', 1.92, 4, 1, '2017-09-17 11:43:04'),
(86, 2404, '1', 2.44175, 9, 1, '2017-09-17 11:43:04'),
(86, 395, '2', -0.0075, 19, 0, '2017-09-17 11:43:05'),
(86, 2408, '3', 2.50095, 8, 1, '2017-09-17 11:43:05'),
(86, 1120, '3', 0.75, 10, 1, '2017-09-17 11:43:05'),
(86, 400, '2', -0.12, 16, 0, '2017-09-17 11:43:05'),
(86, 399, '0', -0.0075, 20, 0, '2017-09-17 11:43:05'),
(86, 398, '0', -0.0075, 20, 0, '2017-09-17 11:43:05'),
(86, 384, '4', -0.12, 16, 0, '2017-09-17 11:43:05'),
(86, 1105, '2', 0.9075, 9, 1, '2017-09-17 11:43:05'),
(86, 376, '1', -0.9075, 9, 0, '2017-09-17 11:43:05'),
(86, 2411, '1', -0.619835, 60, 0, '2017-09-17 11:43:05'),
(86, 389, '0', -0.0075, 20, 0, '2017-09-17 11:43:05'),
(86, 1138, '3', -0.6075, 11, 0, '2017-09-17 11:43:05'),
(86, 1133, '3', 1.6875, 5, 1, '2017-09-17 11:43:05'),
(86, 2432, '3', -1.96388, 21, 0, '2017-09-17 11:43:06'),
(86, 2403, '2', 2.61333, 6, 1, '2017-09-17 11:43:06'),
(86, 379, '3', 0.75, 10, 1, '2017-09-17 11:43:06'),
(86, 366, '4', 0.75, 10, 1, '2017-09-17 11:43:06'),
(86, 1143, '2', -1.8, 8, 0, '2017-09-17 11:43:06'),
(86, 2413, '1', 2.26843, 12, 1, '2017-09-17 11:43:06'),
(86, 2451, '3', 2.75735, 11, 1, '2017-09-17 11:43:06'),
(86, 2450, '4', -0.5, 120, 0, '2017-09-17 11:43:06'),
(86, 1147, '4', 0.9, 14, 1, '2017-09-17 11:43:06'),
(86, 1155, '4', 0.6, 16, 1, '2017-09-17 11:43:06'),
(86, 2449, '4', -2.01, 33, 0, '2017-09-17 11:43:06'),
(86, 2447, '4', 2.14773, 25, 1, '2017-09-17 11:43:06'),
(86, 2443, '2', -1.8913, 34, 0, '2017-09-17 11:43:06'),
(86, 1148, '0', -0.15, 20, 0, '2017-09-17 11:43:06'),
(86, 2442, '4', 2.5125, 13, 1, '2017-09-17 11:43:06'),
(86, 1144, '4', -1.5, 10, 0, '2017-09-17 11:43:06'),
(86, 2453, '4', 1.56618, 65, 1, '2017-09-17 11:43:07'),
(86, 1141, '1', 0.75, 15, 1, '2017-09-17 11:43:07'),
(86, 2440, '1', -2.45455, 20, 0, '2017-09-17 11:43:07'),
(86, 1145, '3', -0.6, 16, 0, '2017-09-17 11:43:07'),
(86, 1154, '0', -0.15, 20, 0, '2017-09-17 11:43:07'),
(86, 1156, '1', 0.75, 15, 1, '2017-09-17 11:43:07'),
(86, 2444, '2', -0.93, 69, 0, '2017-09-17 11:43:07'),
(86, 2435, '1', 1.70769, 56, 1, '2017-09-17 11:43:07'),
(86, 2445, '4', 2.60769, 17, 1, '2017-09-17 11:43:07'),
(86, 1153, '2', 2.1, 6, 1, '2017-09-17 11:43:07'),
(86, 2454, '2', 2.5625, 21, 1, '2017-09-17 11:43:07'),
(86, 2638, '4', 2.4642, 23, 1, '2017-09-17 11:43:07'),
(86, 2653, '3', -2.28208, 35, 0, '2017-09-17 11:43:07'),
(86, 2648, '3', -2.78936, 12, 0, '2017-09-17 11:43:07'),
(86, 1151, '2', 2.4, 4, 1, '2017-09-17 11:43:07'),
(86, 2657, '2', -2.30257, 38, 0, '2017-09-17 11:43:08'),
(86, 2438, '4', -1.8, 52, 0, '2017-09-17 11:43:08'),
(86, 2446, '3', -2.12903, 36, 0, '2017-09-17 11:43:08'),
(86, 1142, '4', 2.25, 5, 1, '2017-09-17 11:43:08'),
(86, 1146, '1', 2.1, 6, 1, '2017-09-17 11:43:08'),
(86, 1149, '2', -1.2, 12, 0, '2017-09-17 11:43:08'),
(86, 2457, '2', 1.16129, 76, 1, '2017-09-17 11:43:08'),
(86, 2456, '4', -1.5, 65, 0, '2017-09-17 11:43:08'),
(86, 2455, '4', -2.19, 27, 0, '2017-09-17 11:43:08'),
(86, 2434, '1', 2.50909, 18, 1, '2017-09-17 11:43:08'),
(86, 2448, '4', -2.54348, 14, 0, '2017-09-17 11:43:08'),
(86, 1157, '1', 1.05, 13, 1, '2017-09-17 11:43:08'),
(86, 1152, '3', -1.2, 12, 0, '2017-09-17 11:43:08'),
(86, 2439, '3', -2.55, 15, 0, '2017-09-17 11:43:08'),
(86, 1150, '3', -1.5, 10, 0, '2017-09-17 11:43:08'),
(86, 703, '0', -0.00520833, 24, 0, '2017-09-17 11:43:09'),
(86, 690, '2', -0.12, 16, 0, '2017-09-17 11:43:09'),
(86, 706, '4', 2.08333, 5, 1, '2017-09-17 11:43:09'),
(86, 2013, '2', 1.47, 9, 1, '2017-09-17 11:43:09'),
(86, 659, '3', 1.47, 6, 1, '2017-09-17 11:43:09'),
(86, 676, '2', 1.53061, 8, 1, '2017-09-17 11:43:09'),
(86, 2011, '3', -0.163333, 23, 0, '2017-09-17 11:43:09'),
(86, 658, '4', -0.75, 10, 0, '2017-09-17 11:43:09'),
(86, 2031, '1', 1.76333, 7, 1, '2017-09-17 11:43:09'),
(86, 679, '1', 1.50521, 7, 1, '2017-09-17 11:43:09'),
(86, 716, '2', -0.159763, 20, 0, '2017-09-17 11:43:09'),
(86, 2010, '1', 2.25333, 4, 1, '2017-09-17 11:43:09'),
(86, 1923, '4', -0.46875, 27, 0, '2017-09-17 11:43:09'),
(86, 717, '4', 1.75, 15, 1, '2017-09-17 11:43:09'),
(86, 689, '1', -2.2, 8, 0, '2017-09-17 11:43:09'),
(86, 680, '3', 1.6875, 7, 1, '2017-09-17 11:43:09'),
(86, 1920, '2', 2.4375, 6, 1, '2017-09-17 11:43:10'),
(86, 1927, '3', -1, 20, 0, '2017-09-17 11:43:10'),
(86, 1911, '3', 2.4375, 6, 1, '2017-09-17 11:43:10'),
(86, 1908, '4', -1.40625, 17, 0, '2017-09-17 11:43:10'),
(86, 2042, '3', 1.96875, 11, 1, '2017-09-17 11:43:10'),
(86, 685, '0', -0.15, 20, 0, '2017-09-17 11:43:10'),
(86, 1909, '2', 2.4375, 6, 1, '2017-09-17 11:43:10'),
(86, 665, '1', 2, 10, 1, '2017-09-17 11:43:10'),
(86, 1948, '1', -2.43962, 8, 0, '2017-09-17 11:43:10'),
(86, 1904, '2', -2.2, 8, 0, '2017-09-17 11:43:10'),
(86, 714, '1', 1.94118, 12, 1, '2017-09-17 11:43:10'),
(86, 1892, '3', 1.96154, 9, 1, '2017-09-17 11:43:10'),
(86, 704, '1', 1.5, 15, 1, '2017-09-17 11:43:10'),
(86, 1887, '2', 2.52623, 10, 1, '2017-09-17 11:43:10'),
(86, 672, '3', -2.39719, 8, 0, '2017-09-17 11:43:11'),
(86, 1939, '3', -2.36512, 9, 0, '2017-09-17 11:43:11'),
(86, 1918, '2', -2.46429, 5, 0, '2017-09-17 11:43:11'),
(86, 1926, '3', -2.625, 4, 0, '2017-09-17 11:43:11'),
(86, 1914, '4', 0.321429, 25, 1, '2017-09-17 11:43:11'),
(86, 1906, '2', 2.7, 3, 1, '2017-09-17 11:43:11'),
(86, 687, '1', -2.5, 5, 0, '2017-09-17 11:43:11'),
(86, 1929, '2', 2.20588, 9, 1, '2017-09-17 11:43:11'),
(86, 1919, '2', -2.61429, 9, 0, '2017-09-17 11:43:11'),
(86, 664, '2', -1.14706, 21, 0, '2017-09-17 11:43:11'),
(86, 698, '3', -1.8, 12, 0, '2017-09-17 11:43:11'),
(86, 1880, '3', -2.55882, 5, 0, '2017-09-17 11:43:11'),
(86, 713, '3', 1.60207, 7, 1, '2017-09-17 11:43:11'),
(86, 1921, '3', -1.5, 15, 0, '2017-09-17 11:43:11'),
(86, 1985, '4', 0.495117, 19, 1, '2017-09-17 11:43:11'),
(86, 699, '2', -0.3675, 13, 0, '2017-09-17 11:43:11'),
(86, 712, '4', -1.50521, 7, 0, '2017-09-17 11:43:12'),
(86, 2008, '4', 1.76333, 7, 1, '2017-09-17 11:43:12'),
(86, 2033, '3', 1.38138, 9, 1, '2017-09-17 11:43:12'),
(86, 1891, '4', 1.8, 12, 1, '2017-09-17 11:43:12'),
(86, 1930, '3', -2.55556, 8, 0, '2017-09-17 11:43:12'),
(86, 1996, '3', 1.33333, 10, 1, '2017-09-17 11:43:12'),
(86, 1922, '3', 2, 10, 1, '2017-09-17 11:43:12'),
(86, 1915, '2', -2.25, 7, 0, '2017-09-17 11:43:12'),
(86, 1925, '1', 0.954545, 30, 1, '2017-09-17 11:43:12'),
(86, 1912, '2', 1.92857, 10, 1, '2017-09-17 11:43:12'),
(86, 2034, '3', -2, 10, 0, '2017-09-17 11:43:12'),
(86, 1917, '3', 1.92857, 10, 1, '2017-09-17 11:43:12'),
(86, 1955, '1', 2.45455, 8, 1, '2017-09-17 11:43:12'),
(86, 1936, '4', 2.53125, 5, 1, '2017-09-17 11:43:12'),
(86, 1901, '3', 1.9, 11, 1, '2017-09-17 11:43:12'),
(86, 1957, '3', -2.22796, 18, 0, '2017-09-17 11:43:12'),
(86, 1963, '2', 1.875, 18, 1, '2017-09-17 11:43:13'),
(86, 684, '3', 1.5, 20, 1, '2017-09-17 11:43:13'),
(86, 1889, '2', -2.30847, 13, 0, '2017-09-17 11:43:13'),
(86, 702, '2', -2.55882, 5, 0, '2017-09-17 11:43:13'),
(86, 1940, '1', 1.875, 15, 1, '2017-09-17 11:43:13'),
(86, 700, '4', 2.25, 8, 1, '2017-09-17 11:43:13'),
(86, 657, '4', -2.37835, 10, 0, '2017-09-17 11:43:13'),
(86, 695, '3', 1.6, 14, 1, '2017-09-17 11:43:13'),
(86, 683, '3', 1.82143, 11, 1, '2017-09-17 11:43:13'),
(86, 1937, '2', 2.47645, 8, 1, '2017-09-17 11:43:13'),
(86, 1942, '2', -2.40717, 9, 0, '2017-09-17 11:43:13'),
(86, 1962, '3', -2.83779, 4, 0, '2017-09-17 11:43:13'),
(86, 1952, '3', -2.18182, 12, 0, '2017-09-17 11:43:13'),
(86, 1951, '3', -2.55, 6, 0, '2017-09-17 11:43:13'),
(86, 1954, '1', -2.14286, 12, 0, '2017-09-17 11:43:13'),
(86, 1950, '0', -0.075, 40, 0, '2017-09-17 11:43:14'),
(86, 1945, '3', 1, 40, 0, '2017-09-17 11:43:14'),
(86, 1947, '3', 0, 32, 0, '2017-09-17 11:43:14'),
(86, 1933, '4', -2.325, 9, 0, '2017-09-17 11:43:14'),
(86, 1881, '2', 2, 10, 1, '2017-09-17 11:43:14'),
(86, 1934, '1', 2.3, 7, 1, '2017-09-17 11:43:14'),
(86, 686, '1', -0.45, 17, 0, '2017-09-17 11:43:14'),
(86, 1944, '1', 1.92857, 10, 1, '2017-09-17 11:43:14'),
(86, 1941, '1', -2.33333, 8, 0, '2017-09-17 11:43:14'),
(86, 671, '4', 2.25, 9, 1, '2017-09-17 11:43:14'),
(86, 1965, '1', 1.23529, 20, 1, '2017-09-17 11:43:14'),
(86, 1973, '1', -1.725, 17, 0, '2017-09-17 11:43:14'),
(86, 688, '1', 0.825, 29, 1, '2017-09-17 11:43:14'),
(86, 1983, '3', -2, 12, 0, '2017-09-17 11:43:14'),
(86, 1988, '2', 2.4, 6, 1, '2017-09-17 11:43:14'),
(86, 694, '2', -0.9, 21, 0, '2017-09-17 11:43:15'),
(86, 1893, '3', -1.4, 16, 0, '2017-09-17 11:43:15'),
(86, 1898, '4', 2.20588, 9, 1, '2017-09-17 11:43:15'),
(86, 1966, '3', -2, 10, 0, '2017-09-17 11:43:15'),
(86, 693, '2', -2, 10, 0, '2017-09-17 11:43:15'),
(86, 1984, '2', -0.666667, 28, 0, '2017-09-17 11:43:15'),
(86, 1964, '3', -2.325, 9, 0, '2017-09-17 11:43:15'),
(86, 1970, '2', -1.96875, 11, 0, '2017-09-17 11:43:15'),
(86, 1991, '4', 1.33333, 10, 1, '2017-09-17 11:43:15'),
(86, 663, '1', 2.39158, 3, 1, '2017-09-17 11:43:15'),
(86, 1990, '2', 2.4, 6, 1, '2017-09-17 11:43:15'),
(86, 1974, '3', -2.0625, 10, 0, '2017-09-17 11:43:15'),
(86, 1978, '4', -2.2, 8, 0, '2017-09-17 11:43:15'),
(86, 1888, '4', -1.77515, 6, 0, '2017-09-17 11:43:16'),
(86, 1987, '4', -1.17188, 15, 0, '2017-09-17 11:43:16'),
(86, 674, '3', 1.08, 12, 1, '2017-09-17 11:43:16'),
(86, 660, '1', 1.94676, 7, 1, '2017-09-17 11:43:16'),
(86, 1884, '4', 1.67647, 15, 1, '2017-09-17 11:43:16'),
(86, 1977, '3', -2.41304, 9, 0, '2017-09-17 11:43:16'),
(86, 1971, '3', 0.502066, 26, 1, '2017-09-17 11:43:16'),
(86, 669, '4', -1.38138, 9, 0, '2017-09-17 11:43:16'),
(86, 1975, '3', 0.860969, 13, 1, '2017-09-17 11:43:16'),
(86, 1969, '4', -1.58678, 12, 0, '2017-09-17 11:43:16'),
(86, 711, '2', -1.44676, 11, 0, '2017-09-17 11:43:16'),
(86, 1967, '1', -0.9075, 18, 0, '2017-09-17 11:43:16'),
(86, 1882, '1', 1.12037, 14, 1, '2017-09-17 11:43:16'),
(86, 1981, '2', -1.75433, 8, 0, '2017-09-17 11:43:16'),
(86, 2001, '3', 1.5498, 9, 1, '2017-09-17 11:43:17'),
(86, 677, '3', -1.62197, 9, 0, '2017-09-17 11:43:17'),
(86, 1883, '3', 1.49481, 10, 1, '2017-09-17 11:43:17'),
(86, 705, '3', -1.47, 9, 0, '2017-09-17 11:43:17'),
(86, 2004, '4', -2.04187, 7, 0, '2017-09-17 11:43:17'),
(86, 2003, '4', 1.36688, 13, 1, '2017-09-17 11:43:17'),
(86, 1997, '3', 1.85204, 6, 1, '2017-09-17 11:43:17'),
(86, 2000, '4', 1.98047, 6, 1, '2017-09-17 11:43:17'),
(86, 675, '2', -2.04187, 7, 0, '2017-09-17 11:43:17'),
(86, 2005, '3', -1.5498, 9, 0, '2017-09-17 11:43:17'),
(86, 2279, '4', -1.36688, 13, 0, '2017-09-17 11:43:17'),
(86, 1638, '2', 1.79132, 10, 1, '2017-09-17 11:43:17'),
(86, 2278, '1', 1.81481, 8, 1, '2017-09-17 11:43:17'),
(86, 2283, '4', -1.83105, 7, 0, '2017-09-17 11:43:17'),
(86, 2277, '2', 2.2188, 7, 1, '2017-09-17 11:43:18'),
(86, 2276, '1', 2.1888, 7, 1, '2017-09-17 11:43:18'),
(86, 2272, '1', 1.12037, 14, 1, '2017-09-17 11:43:18'),
(86, 1555, '4', -2.04726, 8, 0, '2017-09-17 11:43:18'),
(86, 2270, '1', 2.50095, 4, 1, '2017-09-17 11:43:18'),
(86, 2286, '2', 1.44676, 11, 1, '2017-09-17 11:43:18'),
(86, 2285, '2', 1.96599, 8, 1, '2017-09-17 11:43:18'),
(86, 2366, '2', -2.81822, 8, 0, '2017-09-17 11:43:18'),
(86, 2275, '3', -2.38327, 5, 0, '2017-09-17 11:43:18'),
(86, 2282, '4', -0.563333, 17, 0, '2017-09-17 11:43:18'),
(86, 2271, '3', -1.92, 6, 0, '2017-09-17 11:43:18'),
(86, 2268, '3', -2.1675, 6, 0, '2017-09-17 11:43:18'),
(86, 2281, '3', -1.73677, 11, 0, '2017-09-17 11:43:18'),
(86, 2269, '4', 1.63435, 11, 1, '2017-09-17 11:43:18'),
(86, 2274, '3', -1.7415, 10, 0, '2017-09-17 11:43:18'),
(86, 2287, '2', 1.96599, 8, 1, '2017-09-17 11:43:19'),
(86, 2280, '3', -2.22454, 5, 0, '2017-09-17 11:43:19'),
(86, 2273, '3', -1.12037, 14, 0, '2017-09-17 11:43:19'),
(86, 2284, '3', -1.74723, 9, 0, '2017-09-17 11:43:19'),
(86, 2306, '3', -2.1675, 9, 0, '2017-09-17 11:43:19'),
(86, 2297, '1', -2.05959, 12, 0, '2017-09-17 11:43:19'),
(86, 2294, '2', -2.04726, 8, 0, '2017-09-17 11:43:19'),
(86, 6, '2', 0.27, 14, 1, '2017-09-17 11:43:19'),
(86, 1, '4', 1.6875, 5, 1, '2017-09-17 11:43:19'),
(86, 19, '2', 1.6875, 5, 1, '2017-09-17 11:43:19'),
(86, 5, '3', 1.6875, 5, 1, '2017-09-17 11:43:19'),
(86, 13, '1', 1.08, 8, 1, '2017-09-17 11:43:19'),
(86, 88, '1', 0.6075, 11, 1, '2017-09-17 11:43:19'),
(86, 16, '1', 0.9075, 9, 1, '2017-09-17 11:43:20'),
(86, 9, '2', 1.47, 6, 1, '2017-09-17 11:43:20'),
(86, 12, '2', -1.08, 8, 0, '2017-09-17 11:43:20'),
(86, 7, '2', -1.2675, 7, 0, '2017-09-17 11:43:20'),
(86, 11, '2', -0.3675, 13, 0, '2017-09-17 11:43:20'),
(86, 3, '3', 0.9075, 9, 1, '2017-09-17 11:43:20'),
(86, 10, '3', -2.1675, 3, 0, '2017-09-17 11:43:20'),
(86, 18, '4', 0.9075, 9, 1, '2017-09-17 11:43:20'),
(86, 14, '1', 0.3675, 13, 1, '2017-09-17 11:43:20'),
(86, 8, '1', -0.9075, 9, 0, '2017-09-17 11:43:20'),
(86, 17, '1', 0.9075, 9, 1, '2017-09-17 11:43:20'),
(86, 4, '2', -0.6075, 11, 0, '2017-09-17 11:43:21'),
(86, 2, '3', 1.6875, 5, 1, '2017-09-17 11:43:21'),
(86, 25, '2', 1.6875, 5, 1, '2017-09-17 11:43:21'),
(86, 22, '1', 0.75, 10, 1, '2017-09-17 11:43:21'),
(86, 39, '2', 0.9, 14, 1, '2017-09-17 11:43:21'),
(86, 34, '1', -1.2, 12, 0, '2017-09-17 11:43:21'),
(86, 38, '2', 1.6875, 5, 1, '2017-09-17 11:43:21'),
(86, 30, '2', 1.65, 9, 1, '2017-09-17 11:43:21'),
(86, 35, '2', 2.1, 6, 1, '2017-09-17 11:43:21'),
(86, 23, '1', 2.1, 6, 1, '2017-09-17 11:43:21'),
(86, 29, '3', -0.6, 16, 0, '2017-09-17 11:43:21'),
(86, 21, '3', -1.05, 13, 0, '2017-09-17 11:43:21'),
(86, 37, '1', 0, 20, 1, '2017-09-17 11:43:21'),
(86, 40, '4', 0.3, 18, 1, '2017-09-17 11:43:21'),
(86, 33, '3', 1.2, 12, 1, '2017-09-17 11:43:21'),
(86, 31, '2', -1.2, 12, 0, '2017-09-17 11:43:22'),
(86, 36, '4', 1.2, 12, 1, '2017-09-17 11:43:22'),
(86, 20, '2', 1.95, 7, 1, '2017-09-17 11:43:22'),
(86, 32, '4', -0.9, 14, 0, '2017-09-17 11:43:22'),
(86, 24, '3', 2.25, 5, 1, '2017-09-17 11:43:22'),
(86, 54, '2', 2.47645, 5, 1, '2017-09-17 11:43:22'),
(86, 43, '1', 2.01386, 9, 1, '2017-09-17 11:43:22'),
(86, 51, '2', -1.48993, 13, 0, '2017-09-17 11:43:22'),
(86, 46, '2', -2.47645, 5, 0, '2017-09-17 11:43:22'),
(86, 47, '1', 1.76169, 11, 1, '2017-09-17 11:43:22'),
(86, 52, '4', -2.01386, 9, 0, '2017-09-17 11:43:22'),
(86, 60, '1', 2.25111, 7, 1, '2017-09-17 11:43:22'),
(86, 48, '2', 0.64633, 18, 1, '2017-09-17 11:43:22'),
(86, 42, '3', -1.34442, 14, 0, '2017-09-17 11:43:22'),
(86, 50, '4', -1.02599, 16, 0, '2017-09-17 11:43:22'),
(86, 58, '3', -2.01386, 9, 0, '2017-09-17 11:43:23'),
(86, 28, '3', -1.8, 8, 0, '2017-09-17 11:43:23'),
(86, 26, '4', 1.65, 9, 1, '2017-09-17 11:43:23'),
(86, 55, '2', -1.8, 8, 0, '2017-09-17 11:43:23'),
(86, 53, '2', 0.75, 15, 1, '2017-09-17 11:43:23'),
(86, 41, '2', -0.45, 17, 0, '2017-09-17 11:43:23'),
(86, 45, '4', -0.9, 14, 0, '2017-09-17 11:43:23'),
(86, 57, '1', 1.8, 8, 1, '2017-09-17 11:43:23'),
(86, 44, '1', 2.1, 6, 1, '2017-09-17 11:43:23'),
(86, 56, '3', 2.36512, 6, 1, '2017-09-17 11:43:23'),
(86, 59, '2', 2.25111, 7, 1, '2017-09-17 11:43:23'),
(86, 49, '2', 2.25111, 7, 1, '2017-09-17 11:43:23'),
(86, 70, '2', -1.19055, 15, 0, '2017-09-17 11:43:23'),
(86, 74, '3', -2.01386, 9, 0, '2017-09-17 11:43:23'),
(86, 67, '2', -2.13414, 8, 0, '2017-09-17 11:43:23'),
(86, 75, '2', -1.88988, 10, 0, '2017-09-17 11:43:23'),
(86, 71, '3', -2.01386, 9, 0, '2017-09-17 11:43:24'),
(86, 69, '1', 0.75, 15, 1, '2017-09-17 11:43:24'),
(86, 65, '3', 0.6, 16, 1, '2017-09-17 11:43:24'),
(86, 64, '2', -1.5, 10, 0, '2017-09-17 11:43:24'),
(86, 72, '3', -2.4, 4, 0, '2017-09-17 11:43:24'),
(86, 78, '1', 1.65, 9, 1, '2017-09-17 11:43:24'),
(86, 62, '2', -2.1, 6, 0, '2017-09-17 11:43:24');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(86, 63, '3', -1.5, 10, 0, '2017-09-17 11:43:24'),
(86, 77, '4', -1.35, 11, 0, '2017-09-17 11:43:24'),
(86, 73, '1', 1.35, 11, 1, '2017-09-17 11:43:24'),
(86, 79, '2', -1.5, 10, 0, '2017-09-17 11:43:24'),
(86, 80, '2', -1.65, 9, 0, '2017-09-17 11:43:24'),
(86, 68, '4', -1.65, 9, 0, '2017-09-17 11:43:24'),
(86, 76, '3', -0.6075, 11, 0, '2017-09-17 11:43:24'),
(86, 61, '2', -1.2675, 7, 0, '2017-09-17 11:43:24'),
(86, 83, '2', -0.9075, 9, 0, '2017-09-17 11:43:25'),
(86, 85, '0', -0.0075, 20, 0, '2017-09-17 11:43:25'),
(86, 91, '3', -1.6875, 5, 0, '2017-09-17 11:43:25'),
(86, 81, '2', -0.75, 10, 0, '2017-09-17 11:43:25'),
(86, 90, '3', -0.9075, 9, 0, '2017-09-17 11:43:25'),
(86, 92, '0', -0.0117188, 16, 0, '2017-09-17 11:43:25'),
(86, 94, '4', -0.27, 14, 0, '2017-09-17 11:43:25'),
(86, 84, '4', -0.27, 14, 0, '2017-09-17 11:43:25'),
(86, 87, '1', 0.48, 12, 1, '2017-09-17 11:43:25'),
(86, 86, '3', -1.2675, 7, 0, '2017-09-17 11:43:25'),
(86, 89, '0', -0.0075, 20, 0, '2017-09-17 11:43:25'),
(86, 93, '3', -0.55102, 8, 0, '2017-09-17 11:43:25'),
(86, 95, '4', -0.3675, 13, 0, '2017-09-17 11:43:26'),
(86, 82, '2', -0.12, 16, 0, '2017-09-17 11:43:26'),
(86, 96, '0', -0.0075, 20, 0, '2017-09-17 11:43:26'),
(86, 106, '0', 0, 8, -1, '2017-09-17 11:43:26'),
(86, 100, '4', 0, 10, 0, '2017-09-17 11:43:26'),
(86, 102, '4', -0.0075, 19, 0, '2017-09-17 11:43:26'),
(86, 98, '1', -0.03, 18, 0, '2017-09-17 11:43:26'),
(86, 97, '4', 1.6875, 5, 1, '2017-09-17 11:43:26'),
(86, 103, '2', -1.08, 16, 0, '2017-09-17 11:43:26'),
(86, 110, '3', 1.33667, 133, 1, '2017-09-17 11:43:26'),
(86, 109, '2', -1.33333, 10, 0, '2017-09-17 11:43:26'),
(86, 99, '3', -0.48, 12, 0, '2017-09-17 11:43:26'),
(86, 105, '2', -0.292969, 11, 0, '2017-09-17 11:43:26'),
(86, 107, '4', -0.9075, 18, 0, '2017-09-17 11:43:26'),
(86, 104, '1', 2.6508, 24, 1, '2017-09-17 11:43:27'),
(86, 101, '3', -0.1875, 12, 0, '2017-09-17 11:43:27'),
(86, 108, '3', -0.6075, 11, 0, '2017-09-17 11:43:27'),
(86, 116, '0', -0.03, 10, 0, '2017-09-17 11:43:27'),
(86, 112, '1', -0.75, 20, 0, '2017-09-17 11:43:27'),
(86, 117, '2', -0.0833333, 25, 0, '2017-09-17 11:43:27'),
(86, 113, '2', -0.0133333, 28, 0, '2017-09-17 11:43:27'),
(86, 119, '2', -1.47, 72, 0, '2017-09-17 11:43:27'),
(86, 111, '0', -0.0117188, 16, 0, '2017-09-17 11:43:27'),
(86, 120, '2', 0.6075, 11, 1, '2017-09-17 11:43:27'),
(86, 118, '0', 0, 6, -1, '2017-09-17 11:43:27'),
(86, 114, '2', -0.9075, 9, 0, '2017-09-17 11:43:27'),
(86, 115, '0', 0, 4, -1, '2017-09-17 11:43:27'),
(86, 128, '3', -0.12, 16, 0, '2017-09-17 11:43:27'),
(86, 123, '3', -0.3675, 13, 0, '2017-09-17 11:43:28'),
(86, 2608, '3', 2.29688, 5, 1, '2017-09-17 11:43:28'),
(86, 2601, '2', 2.56687, 3, 1, '2017-09-17 11:43:28'),
(86, 2604, '4', -1.36688, 13, 0, '2017-09-17 11:43:28'),
(86, 2614, '4', 1.92, 8, 1, '2017-09-17 11:43:28'),
(86, 2610, '3', 2.1675, 6, 1, '2017-09-17 11:43:28'),
(86, 2603, '1', 2.1675, 6, 1, '2017-09-17 11:43:28'),
(86, 2606, '1', 2.29688, 5, 1, '2017-09-17 11:43:28'),
(86, 2618, '3', 2.1, 18, 1, '2017-09-17 11:43:28'),
(86, 2624, '1', -2.3, 14, 0, '2017-09-17 11:43:28'),
(86, 2633, '3', 2.6, 8, 1, '2017-09-17 11:43:28'),
(86, 2625, '1', -2.2, 16, 0, '2017-09-17 11:43:28'),
(86, 2627, '2', 2.5, 10, 1, '2017-09-17 11:43:28'),
(86, 2629, '2', -2.55, 9, 0, '2017-09-17 11:43:28'),
(86, 2634, '3', -2, 20, 0, '2017-09-17 11:43:28'),
(86, 2622, '2', 2.55, 9, 1, '2017-09-17 11:43:28'),
(86, 2631, '3', 2.45, 11, 1, '2017-09-17 11:43:29'),
(86, 2623, '3', -2.6, 8, 0, '2017-09-17 11:43:29'),
(86, 2626, '3', 2.75, 5, 1, '2017-09-17 11:43:29'),
(86, 2621, '3', 2.85, 3, 1, '2017-09-17 11:43:29'),
(86, 2616, '4', 2.4, 12, 1, '2017-09-17 11:43:29'),
(86, 2732, '4', 2.83093, 5, 1, '2017-09-17 11:43:29'),
(86, 2833, '3', 2.83093, 5, 1, '2017-09-17 11:43:29'),
(86, 2816, '4', 2.76188, 7, 1, '2017-09-17 11:43:29'),
(86, 2734, '1', -2.83093, 5, 0, '2017-09-17 11:43:29'),
(86, 2819, '2', 2.83093, 5, 1, '2017-09-17 11:43:29'),
(86, 2729, '2', 2.72703, 8, 1, '2017-09-17 11:43:29'),
(86, 2835, '2', -2.513, 14, 0, '2017-09-17 11:43:29'),
(86, 2852, '3', -2.47645, 15, 0, '2017-09-17 11:43:29'),
(86, 2845, '4', -2.76188, 7, 0, '2017-09-17 11:43:29'),
(86, 2728, '2', -2.09443, 25, 0, '2017-09-17 11:43:29'),
(86, 2825, '3', 2.79651, 6, 1, '2017-09-17 11:43:30'),
(86, 2823, '1', -2.65665, 10, 0, '2017-09-17 11:43:30'),
(86, 2731, '4', 2.76188, 7, 1, '2017-09-17 11:43:30'),
(86, 2733, '4', -2.76188, 7, 0, '2017-09-17 11:43:30'),
(86, 2847, '4', 2.58532, 12, 1, '2017-09-17 11:43:30'),
(86, 2730, '4', 2.79651, 6, 1, '2017-09-17 11:43:30'),
(86, 2820, '4', -2.62111, 11, 0, '2017-09-17 11:43:30'),
(86, 2838, '3', 2.83093, 5, 1, '2017-09-17 11:43:30'),
(86, 2841, '3', 2.83093, 5, 1, '2017-09-17 11:43:30'),
(86, 2735, '1', 2.83093, 5, 1, '2017-09-17 11:43:30'),
(86, 2881, '3', -2.40251, 17, 0, '2017-09-17 11:43:30'),
(86, 2888, '1', -2.65665, 10, 0, '2017-09-17 11:43:30'),
(86, 2879, '4', -2.54929, 13, 0, '2017-09-17 11:43:30'),
(86, 2862, '4', 2.36512, 18, 1, '2017-09-17 11:43:30'),
(86, 2874, '3', -2.72703, 8, 0, '2017-09-17 11:43:30'),
(86, 2889, '1', -2.76188, 7, 0, '2017-09-17 11:43:31'),
(86, 2870, '3', 2.86514, 4, 1, '2017-09-17 11:43:31'),
(86, 2861, '2', 2.83093, 5, 1, '2017-09-17 11:43:31'),
(86, 2877, '2', 2.79651, 6, 1, '2017-09-17 11:43:31'),
(86, 2868, '2', 2.54929, 13, 1, '2017-09-17 11:43:31'),
(86, 2886, '1', 2.79651, 6, 1, '2017-09-17 11:43:31'),
(86, 2887, '3', 2.79285, 8, 1, '2017-09-17 11:43:31'),
(86, 2883, '3', 2.87228, 5, 1, '2017-09-17 11:43:31'),
(86, 2885, '4', 2.73861, 10, 1, '2017-09-17 11:43:31'),
(86, 2882, '1', 2.79285, 8, 1, '2017-09-17 11:43:31'),
(86, 2902, '2', 2.81118, 9, 1, '2017-09-17 11:43:31'),
(86, 2905, '1', 2.72082, 13, 1, '2017-09-17 11:43:31'),
(86, 2894, '2', 2.76655, 11, 1, '2017-09-17 11:43:31'),
(86, 2911, '3', -2.93179, 4, 0, '2017-09-17 11:43:31'),
(86, 2897, '1', -2.81118, 9, 0, '2017-09-17 11:43:31'),
(86, 2904, '3', 2.76655, 11, 1, '2017-09-17 11:43:32'),
(86, 2908, '2', -2.76655, 11, 0, '2017-09-17 11:43:32'),
(86, 2903, '3', -2.69752, 14, 0, '2017-09-17 11:43:32'),
(86, 2890, '4', 2.789, 10, 1, '2017-09-17 11:43:32'),
(86, 2898, '1', -2.81118, 9, 0, '2017-09-17 11:43:32'),
(86, 2901, '4', 2.89738, 5, 1, '2017-09-17 11:43:32'),
(86, 2892, '2', 2.76655, 11, 1, '2017-09-17 11:43:32'),
(86, 2896, '1', -2.85477, 7, 0, '2017-09-17 11:43:32'),
(86, 2909, '4', 2.62572, 17, 1, '2017-09-17 11:43:32'),
(86, 2891, '4', -2.87619, 6, 0, '2017-09-17 11:43:32'),
(86, 2906, '3', -2.87619, 6, 0, '2017-09-17 11:43:32'),
(86, 2893, '4', 2.87619, 6, 1, '2017-09-17 11:43:32'),
(86, 2907, '3', 2.8331, 8, 1, '2017-09-17 11:43:32'),
(86, 2899, '2', 2.85477, 7, 1, '2017-09-17 11:43:32'),
(86, 2918, '3', 2.72568, 15, 1, '2017-09-17 11:43:32'),
(86, 2921, '2', -2.89647, 6, 0, '2017-09-17 11:43:33'),
(86, 2916, '2', 2.78495, 12, 1, '2017-09-17 11:43:33'),
(86, 2934, '1', -2.78495, 12, 0, '2017-09-17 11:43:33'),
(86, 2923, '0', 0, 7, -1, '2017-09-17 11:43:33'),
(86, 2926, '3', 2.8418, 9, 1, '2017-09-17 11:43:33'),
(86, 2910, '3', -2.89647, 6, 0, '2017-09-17 11:43:33'),
(86, 2914, '2', -2.82311, 10, 0, '2017-09-17 11:43:33'),
(86, 2895, '2', 2.89738, 5, 1, '2017-09-17 11:43:33'),
(86, 2928, '1', -2.86026, 8, 0, '2017-09-17 11:43:33'),
(86, 2900, '2', 2.789, 10, 1, '2017-09-17 11:43:33'),
(86, 2924, '3', -2.87848, 7, 0, '2017-09-17 11:43:33'),
(86, 2931, '4', 2.87619, 6, 1, '2017-09-17 11:43:33'),
(86, 2925, '1', 2.8418, 9, 1, '2017-09-17 11:43:33'),
(86, 2940, '3', -2.89647, 6, 0, '2017-09-17 11:43:33'),
(86, 2952, '2', 2.86026, 8, 1, '2017-09-17 11:43:33'),
(86, 2945, '4', 2.8418, 9, 1, '2017-09-17 11:43:34'),
(86, 2959, '1', -2.82311, 10, 0, '2017-09-17 11:43:34'),
(86, 2942, '3', -2.86026, 8, 0, '2017-09-17 11:43:34'),
(86, 2948, '3', -2.82311, 10, 0, '2017-09-17 11:43:34'),
(86, 2937, '2', 2.8331, 8, 1, '2017-09-17 11:43:34'),
(86, 2955, '3', -2.87848, 7, 0, '2017-09-17 11:43:34'),
(86, 2957, '1', -2.85477, 7, 0, '2017-09-17 11:43:34'),
(86, 2939, '3', 2.62572, 17, 1, '2017-09-17 11:43:34'),
(86, 2950, '4', -2.81118, 9, 0, '2017-09-17 11:43:34'),
(86, 2973, '3', 2.60112, 18, 1, '2017-09-17 11:43:34'),
(86, 2981, '4', 2.87619, 6, 1, '2017-09-17 11:43:34'),
(86, 2966, '1', 2.89738, 5, 1, '2017-09-17 11:43:34'),
(86, 2969, '1', -2.93179, 4, 0, '2017-09-17 11:43:34'),
(86, 2962, '2', -2.76655, 11, 0, '2017-09-17 11:43:34'),
(86, 2971, '2', 2.81118, 9, 1, '2017-09-17 11:43:34'),
(86, 2979, '4', -2.86026, 8, 0, '2017-09-17 11:43:35'),
(86, 2975, '0', 0, 2, -1, '2017-09-17 11:43:35'),
(86, 2977, '0', 0, 9, -1, '2017-09-17 11:43:35'),
(86, 2964, '1', -2.789, 10, 0, '2017-09-17 11:43:35'),
(86, 2865, '3', 2.87619, 6, 1, '2017-09-17 11:43:35'),
(86, 2855, '1', -2.72082, 13, 0, '2017-09-17 11:43:35'),
(86, 2859, '2', 2.789, 10, 1, '2017-09-17 11:43:35'),
(86, 2871, '2', 2.72082, 13, 1, '2017-09-17 11:43:35'),
(86, 2864, '2', 2.89647, 6, 1, '2017-09-17 11:43:35'),
(86, 2866, '4', 2.82311, 10, 1, '2017-09-17 11:43:35'),
(86, 2884, '4', -2.72568, 15, 0, '2017-09-17 11:43:35'),
(86, 2628, '4', -2.89647, 6, 0, '2017-09-17 11:43:35'),
(86, 2620, '4', 2.89647, 6, 1, '2017-09-17 11:43:35'),
(86, 2635, '3', -2.91424, 5, 0, '2017-09-17 11:43:35'),
(86, 2630, '2', 2.6424, 19, 1, '2017-09-17 11:43:35'),
(86, 2619, '0', 0, 5, -1, '2017-09-17 11:43:36'),
(86, 2632, '2', -2.87848, 7, 0, '2017-09-17 11:43:36'),
(86, 2617, '1', 2.87619, 6, 1, '2017-09-17 11:43:36'),
(86, 2611, '3', 2.8418, 6, 1, '2017-09-17 11:43:36'),
(86, 2609, '2', 2.75564, 9, 1, '2017-09-17 11:43:36'),
(86, 2602, '3', 2.78495, 8, 1, '2017-09-17 11:43:36'),
(86, 2615, '1', 2.78495, 8, 1, '2017-09-17 11:43:36'),
(86, 2607, '4', 2.8694, 5, 1, '2017-09-17 11:43:36'),
(86, 2613, '4', 2.8694, 5, 1, '2017-09-17 11:43:36'),
(86, 2605, '2', 2.8694, 5, 1, '2017-09-17 11:43:36'),
(86, 2612, '2', -2.8147, 8, 0, '2017-09-17 11:43:36'),
(87, 3034, '1', -0.0153061, 26, 0, '2017-09-17 11:43:37'),
(87, 1563, '2', 0.159763, 40, 1, '2017-09-17 11:43:37'),
(87, 1597, '0', 0, 15, -1, '2017-09-17 11:43:37'),
(87, 1591, '3', -0.00411523, 52, 0, '2017-09-17 11:43:37'),
(87, 1596, '1', 1.77515, 12, 1, '2017-09-17 11:43:37'),
(87, 1566, '2', -0.204159, 34, 0, '2017-09-17 11:43:37'),
(87, 1590, '4', 0.0344388, 50, 1, '2017-09-17 11:43:37'),
(87, 1594, '4', 1.02083, 20, 1, '2017-09-17 11:43:37'),
(87, 1574, '1', 0.646684, 30, 1, '2017-09-17 11:43:37'),
(87, 1578, '1', 0.0694707, 39, 1, '2017-09-17 11:43:37'),
(87, 1586, '4', -0.0127599, 43, 0, '2017-09-17 11:43:38'),
(87, 1559, '4', 2.15643, 7, 1, '2017-09-17 11:43:38'),
(87, 1582, '2', 2.32823, 5, 1, '2017-09-17 11:43:38'),
(87, 1553, '0', -0.00141777, 46, 0, '2017-09-17 11:43:38'),
(87, 1593, '1', 0.22314, 32, 1, '2017-09-17 11:43:38'),
(87, 1571, '3', 0.536982, 30, 1, '2017-09-17 11:43:38'),
(87, 1595, '1', -0.0675, 51, 0, '2017-09-17 11:43:38'),
(87, 1589, '4', -0.435374, 26, 0, '2017-09-17 11:43:38'),
(87, 1575, '4', 0.03, 54, 1, '2017-09-17 11:43:38'),
(87, 1616, '0', 0, 43, -1, '2017-09-17 11:43:38'),
(87, 1592, '3', -0.0408333, 53, 0, '2017-09-17 11:43:38'),
(87, 1609, '4', -0.00130208, 47, 0, '2017-09-17 11:43:38'),
(87, 1611, '4', 0.958412, 20, 1, '2017-09-17 11:43:38'),
(87, 1605, '3', 1.54083, 17, 1, '2017-09-17 11:43:38'),
(87, 1607, '1', 2.53448, 9, 1, '2017-09-17 11:43:38'),
(87, 1613, '1', -1.85, 23, 0, '2017-09-17 11:43:39'),
(87, 1598, '1', 0.461538, 44, 1, '2017-09-17 11:43:39'),
(87, 1603, '2', 2.71154, 5, 1, '2017-09-17 11:43:39'),
(87, 1604, '1', -0.6875, 37, 0, '2017-09-17 11:43:39'),
(87, 1606, '1', -1.1, 38, 0, '2017-09-17 11:43:39'),
(87, 1617, '3', -0.195652, 43, 0, '2017-09-17 11:43:39'),
(87, 1610, '0', 0, 11, -1, '2017-09-17 11:43:39'),
(87, 1608, '3', 1.84615, 20, 1, '2017-09-17 11:43:39'),
(87, 1600, '0', -0.0576923, 52, 0, '2017-09-17 11:43:39'),
(87, 1615, '3', 2.06897, 18, 1, '2017-09-17 11:43:39'),
(87, 1599, '1', 2, 16, 1, '2017-09-17 11:43:39'),
(87, 1614, '3', -0.277778, 49, 0, '2017-09-17 11:43:39'),
(87, 1612, '3', -2.25, 13, 0, '2017-09-17 11:43:39'),
(87, 1601, '2', 1.01786, 37, 1, '2017-09-17 11:43:39'),
(87, 1602, '1', 2.6, 8, 1, '2017-09-17 11:43:39'),
(87, 1621, '4', -2.30769, 12, 0, '2017-09-17 11:43:40'),
(87, 1645, '2', -0.328125, 57, 0, '2017-09-17 11:43:40'),
(87, 1629, '3', 2.28261, 11, 1, '2017-09-17 11:43:40'),
(87, 1628, '1', 0.978261, 31, 1, '2017-09-17 11:43:40'),
(87, 1651, '3', 2.80447, 5, 1, '2017-09-17 11:43:40'),
(87, 1636, '4', 2.84996, 4, 1, '2017-09-17 11:43:40'),
(87, 1620, '1', 1.25581, 35, 1, '2017-09-17 11:43:40'),
(87, 1654, '4', 1.31941, 34, 1, '2017-09-17 11:43:40'),
(87, 1624, '4', 2.02257, 25, 1, '2017-09-17 11:43:40'),
(87, 1656, '2', 2.78787, 5, 1, '2017-09-17 11:43:40'),
(87, 1630, '3', -0.370939, 44, 0, '2017-09-17 11:43:40'),
(87, 1622, '4', 2.27578, 19, 1, '2017-09-17 11:43:40'),
(87, 2613, '4', 2.29688, 5, 1, '2017-09-17 11:43:40'),
(87, 2615, '4', -0.826875, 19, 0, '2017-09-17 11:43:40'),
(87, 2608, '3', 0.316875, 27, 1, '2017-09-17 11:43:40'),
(87, 2603, '3', -0.0675, 34, 0, '2017-09-17 11:43:41'),
(87, 2605, '2', 1.80187, 9, 1, '2017-09-17 11:43:41'),
(87, 2614, '1', -1.2675, 14, 0, '2017-09-17 11:43:41'),
(87, 2601, '2', 2.04187, 7, 1, '2017-09-17 11:43:41'),
(87, 2606, '1', 2.1675, 6, 1, '2017-09-17 11:43:41'),
(87, 2604, '1', -0.991875, 17, 0, '2017-09-17 11:43:41'),
(87, 2612, '1', 1.80187, 9, 1, '2017-09-17 11:43:41'),
(87, 2602, '0', 0, 10, -1, '2017-09-17 11:43:41'),
(87, 2610, '3', 0.016875, 37, 1, '2017-09-17 11:43:41'),
(87, 2611, '3', 1.92, 8, 1, '2017-09-17 11:43:41'),
(87, 2607, '4', 0.151875, 31, 1, '2017-09-17 11:43:41'),
(87, 2609, '0', 0, 19, -1, '2017-09-17 11:43:41'),
(87, 2619, '3', 1.76333, 14, 1, '2017-09-17 11:43:41'),
(87, 2616, '1', -2.45, 11, 0, '2017-09-17 11:43:41'),
(87, 2627, '2', 0.403333, 38, 1, '2017-09-17 11:43:41'),
(87, 2635, '4', -1.47, 18, 0, '2017-09-17 11:43:42'),
(87, 2625, '2', -1.20333, 22, 0, '2017-09-17 11:43:42'),
(87, 2623, '2', 0.0675, 51, 1, '2017-09-17 11:43:42'),
(87, 2626, '2', -0.0075, 57, 0, '2017-09-17 11:43:42'),
(87, 2617, '1', 2.25333, 8, 1, '2017-09-17 11:43:42'),
(87, 2632, '3', 2.43, 6, 1, '2017-09-17 11:43:42'),
(87, 2621, '2', -0.25, 55, 0, '2017-09-17 11:43:42'),
(87, 2629, '0', 0, 5, -1, '2017-09-17 11:43:42'),
(87, 2622, '1', -2.2, 16, 0, '2017-09-17 11:43:42'),
(87, 2631, '1', -0.0408333, 53, 0, '2017-09-17 11:43:42'),
(87, 2633, '3', 0.440833, 37, 1, '2017-09-17 11:43:42'),
(87, 2620, '4', 2.43, 6, 1, '2017-09-17 11:43:42'),
(87, 2628, '4', -2.65, 7, 0, '2017-09-17 11:43:42'),
(87, 2630, '2', 0.6075, 33, 1, '2017-09-17 11:43:42'),
(87, 2634, '2', -1.76333, 14, 0, '2017-09-17 11:43:42'),
(87, 2618, '2', -1.76333, 14, 0, '2017-09-17 11:43:43'),
(87, 2624, '4', -0.48, 36, 0, '2017-09-17 11:43:43'),
(87, 2825, '3', 1.6875, 15, 1, '2017-09-17 11:43:43'),
(87, 2823, '1', -2.00083, 11, 0, '2017-09-17 11:43:43'),
(87, 2730, '4', 1.14083, 23, 1, '2017-09-17 11:43:43'),
(87, 2731, '4', 1.84083, 13, 1, '2017-09-17 11:43:43'),
(87, 2734, '3', 1.84083, 13, 1, '2017-09-17 11:43:43'),
(87, 2845, '2', -2.1675, 9, 0, '2017-09-17 11:43:43'),
(87, 2819, '2', 1.92, 12, 1, '2017-09-17 11:43:43'),
(87, 2820, '2', 1.54083, 17, 1, '2017-09-17 11:43:43'),
(87, 2735, '4', 0, 60, 0, '2017-09-17 11:43:43'),
(87, 2732, '4', 2.55, 9, 1, '2017-09-17 11:43:43'),
(87, 2729, '4', -1.8, 24, 0, '2017-09-17 11:43:43'),
(87, 2816, '1', -2.55, 9, 0, '2017-09-17 11:43:43'),
(87, 2838, '3', 2.61333, 4, 1, '2017-09-17 11:43:43'),
(87, 2852, '4', -2.5, 10, 0, '2017-09-17 11:43:44'),
(87, 2833, '4', -2.25333, 8, 0, '2017-09-17 11:43:44'),
(87, 2841, '4', -2.34083, 7, 0, '2017-09-17 11:43:44'),
(87, 2835, '1', -1.61333, 16, 0, '2017-09-17 11:43:44'),
(87, 2733, '2', 0.240833, 43, 1, '2017-09-17 11:43:44'),
(87, 2847, '4', 1.61333, 16, 1, '2017-09-17 11:43:44'),
(87, 2728, '1', -1.02083, 25, 0, '2017-09-17 11:43:44'),
(87, 2865, '3', 1.14083, 23, 1, '2017-09-17 11:43:44'),
(87, 2871, '3', -1.08, 24, 0, '2017-09-17 11:43:44'),
(87, 2889, '4', -1.76333, 14, 0, '2017-09-17 11:43:44'),
(87, 2884, '4', -2.00083, 11, 0, '2017-09-17 11:43:44'),
(87, 2870, '3', 1.47, 18, 1, '2017-09-17 11:43:44'),
(87, 2877, '2', 2.08333, 10, 1, '2017-09-17 11:43:44'),
(87, 2881, '3', -1.92, 12, 0, '2017-09-17 11:43:44'),
(87, 2879, '2', 1.92, 12, 1, '2017-09-17 11:43:44'),
(87, 2886, '1', 2.52083, 5, 1, '2017-09-17 11:43:45'),
(87, 2888, '3', 1.2675, 21, 1, '2017-09-17 11:43:45'),
(87, 2861, '2', 1.76333, 14, 1, '2017-09-17 11:43:45'),
(87, 2859, '3', -0.0075, 57, 0, '2017-09-17 11:43:45'),
(87, 2874, '3', -2.1675, 9, 0, '2017-09-17 11:43:45'),
(87, 2855, '1', -1.02083, 25, 0, '2017-09-17 11:43:45'),
(87, 2864, '2', 1.47, 18, 1, '2017-09-17 11:43:45'),
(87, 2883, '4', -1.6875, 15, 0, '2017-09-17 11:43:45'),
(87, 2862, '4', 0.140833, 47, 1, '2017-09-17 11:43:45'),
(87, 2866, '3', -1.76333, 14, 0, '2017-09-17 11:43:45'),
(87, 2868, '2', 2.25333, 8, 1, '2017-09-17 11:43:45'),
(87, 2887, '3', 1.54083, 17, 1, '2017-09-17 11:43:45'),
(87, 2882, '3', -1.20333, 22, 0, '2017-09-17 11:43:45'),
(87, 2013, '2', 0.0133333, 28, 1, '2017-09-17 11:43:45'),
(87, 1985, '1', -1.05762, 13, 0, '2017-09-17 11:43:45'),
(87, 2011, '0', -0.00333333, 30, 0, '2017-09-17 11:43:45'),
(87, 1996, '3', 0.963333, 13, 1, '2017-09-17 11:43:46'),
(87, 2008, '4', 0.653333, 16, 1, '2017-09-17 11:43:46'),
(87, 1991, '4', 0.03, 27, 1, '2017-09-17 11:43:46'),
(87, 716, '2', -0.0177515, 24, 0, '2017-09-17 11:43:46'),
(87, 676, '4', -0.00382653, 27, 0, '2017-09-17 11:43:46'),
(87, 703, '2', -0.1875, 18, 0, '2017-09-17 11:43:46'),
(87, 2010, '1', 0.963333, 13, 1, '2017-09-17 11:43:46'),
(87, 699, '2', -0.12, 16, 0, '2017-09-17 11:43:46'),
(87, 659, '3', 0.48, 12, 1, '2017-09-17 11:43:46'),
(87, 690, '2', -0.9075, 9, 0, '2017-09-17 11:43:46'),
(87, 706, '4', 2.08333, 5, 1, '2017-09-17 11:43:46'),
(87, 663, '1', 1.6875, 7, 1, '2017-09-17 11:43:46'),
(87, 2031, '1', 0.963333, 13, 1, '2017-09-17 11:43:46'),
(87, 680, '3', 0.382653, 18, 1, '2017-09-17 11:43:46'),
(87, 658, '1', -0.27, 14, 0, '2017-09-17 11:43:46'),
(87, 679, '1', 1.6875, 6, 1, '2017-09-17 11:43:47'),
(87, 712, '2', -0.520833, 14, 0, '2017-09-17 11:43:47'),
(87, 713, '3', 1.77515, 6, 1, '2017-09-17 11:43:47'),
(87, 2033, '3', 1.2398, 10, 1, '2017-09-17 11:43:47'),
(87, 1888, '3', -1.77515, 6, 0, '2017-09-17 11:43:47'),
(87, 704, '4', -1.08, 12, 0, '2017-09-17 11:43:47'),
(87, 1923, '1', 1.17188, 12, 1, '2017-09-17 11:43:47'),
(87, 1892, '1', -0.998521, 11, 0, '2017-09-17 11:43:47'),
(87, 1925, '4', -0.348657, 29, 0, '2017-09-17 11:43:47'),
(87, 717, '3', -1.12037, 14, 0, '2017-09-17 11:43:47'),
(87, 1922, '3', 1.76333, 7, 1, '2017-09-17 11:43:47'),
(87, 1926, '2', 1.41797, 10, 1, '2017-09-17 11:43:47'),
(87, 2034, '2', -1.76333, 7, 0, '2017-09-17 11:43:47'),
(87, 698, '4', 1.33333, 10, 1, '2017-09-17 11:43:47'),
(87, 2042, '1', -1.83105, 7, 0, '2017-09-17 11:43:48'),
(87, 1927, '0', 0, 14, -1, '2017-09-17 11:43:48'),
(87, 1906, '1', -1.76333, 7, 0, '2017-09-17 11:43:48'),
(87, 1911, '3', 1.98047, 6, 1, '2017-09-17 11:43:48'),
(87, 1912, '0', 0, 10, -1, '2017-09-17 11:43:48'),
(87, 1880, '1', 2.33564, 4, 1, '2017-09-17 11:43:48'),
(87, 687, '2', -2.25333, 4, 0, '2017-09-17 11:43:48'),
(87, 664, '4', -1.89187, 7, 0, '2017-09-17 11:43:48'),
(87, 1917, '3', 1.53061, 8, 1, '2017-09-17 11:43:48'),
(87, 1919, '4', 2.27816, 9, 1, '2017-09-17 11:43:48'),
(87, 1930, '4', -0.695473, 28, 0, '2017-09-17 11:43:48'),
(87, 685, '2', -0.48, 12, 0, '2017-09-17 11:43:48'),
(87, 1918, '3', 1.38138, 9, 1, '2017-09-17 11:43:48'),
(87, 1909, '1', -1.83105, 7, 0, '2017-09-17 11:43:48'),
(87, 1915, '3', 2.02423, 5, 1, '2017-09-17 11:43:48'),
(87, 1921, '2', -1.76333, 7, 0, '2017-09-17 11:43:49'),
(87, 689, '3', -1.47, 9, 0, '2017-09-17 11:43:49'),
(87, 1891, '1', -0.403333, 19, 0, '2017-09-17 11:43:49'),
(87, 1914, '3', -1.38138, 9, 0, '2017-09-17 11:43:49'),
(87, 1908, '4', -1.29199, 11, 0, '2017-09-17 11:43:49'),
(87, 1920, '2', 1.17188, 12, 1, '2017-09-17 11:43:49'),
(87, 1904, '0', 0, 9, -1, '2017-09-17 11:43:49'),
(87, 665, '1', 1.08, 12, 1, '2017-09-17 11:43:49'),
(87, 1929, '0', -0.00259516, 34, 0, '2017-09-17 11:43:49'),
(87, 714, '3', -0.84083, 16, 0, '2017-09-17 11:43:49'),
(87, 1951, '2', -2.1675, 6, 0, '2017-09-17 11:43:49'),
(87, 1947, '3', -0.0263672, 29, 0, '2017-09-17 11:43:49'),
(87, 1955, '3', -2.35692, 5, 0, '2017-09-17 11:43:49'),
(87, 1945, '1', 1.20333, 11, 1, '2017-09-17 11:43:49'),
(87, 1937, '2', 0.237305, 23, 1, '2017-09-17 11:43:49'),
(87, 1887, '2', 1.89824, 9, 1, '2017-09-17 11:43:50'),
(87, 1957, '3', -1.3872, 16, 0, '2017-09-17 11:43:50'),
(87, 686, '3', 0.75, 10, 1, '2017-09-17 11:43:50'),
(87, 683, '1', -1.53061, 8, 0, '2017-09-17 11:43:50'),
(87, 657, '3', -0.84083, 16, 0, '2017-09-17 11:43:50'),
(87, 1203, '3', 0.03, 27, 1, '2017-09-17 11:43:50'),
(87, 1174, '3', 0.0399408, 23, 1, '2017-09-17 11:43:50'),
(87, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:43:50'),
(87, 1291, '1', -0.12, 16, 0, '2017-09-17 11:43:50'),
(87, 1263, '3', -0.001875, 39, 0, '2017-09-17 11:43:50'),
(87, 1197, '3', -0.0208333, 22, 0, '2017-09-17 11:43:50'),
(87, 1218, '0', 0, 14, -1, '2017-09-17 11:43:50'),
(87, 1190, '4', 0.646684, 15, 1, '2017-09-17 11:43:51'),
(87, 1196, '4', 0.0208333, 22, 1, '2017-09-17 11:43:51'),
(87, 1173, '2', 0.12, 16, 1, '2017-09-17 11:43:51'),
(87, 1186, '3', 0.46301, 17, 1, '2017-09-17 11:43:51'),
(87, 1297, '3', 0.3675, 39, 1, '2017-09-17 11:43:51'),
(87, 1292, '0', 0, 10, -1, '2017-09-17 11:43:51'),
(87, 1169, '0', -0.00520833, 24, 0, '2017-09-17 11:43:51'),
(87, 1276, '2', -0.237305, 23, 0, '2017-09-17 11:43:51'),
(87, 1184, '3', -0.0208333, 22, 0, '2017-09-17 11:43:51'),
(87, 1183, '2', 0.75, 11, 1, '2017-09-17 11:43:51'),
(87, 1216, '2', -0.520833, 14, 0, '2017-09-17 11:43:51'),
(87, 1194, '1', 1.2398, 10, 1, '2017-09-17 11:43:51'),
(87, 1177, '2', 1.04752, 9, 1, '2017-09-17 11:43:51'),
(87, 1198, '2', -0.12, 16, 0, '2017-09-17 11:43:51'),
(87, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:43:51'),
(87, 1172, '4', 0.27, 14, 1, '2017-09-17 11:43:52'),
(87, 1210, '1', 0.00520833, 23, 1, '2017-09-17 11:43:52'),
(87, 1170, '2', 0.630208, 13, 1, '2017-09-17 11:43:52'),
(87, 1270, '4', 0.0510397, 40, 1, '2017-09-17 11:43:52'),
(87, 1185, '2', -0.0344388, 25, 0, '2017-09-17 11:43:52'),
(87, 1227, '0', 0, 20, -1, '2017-09-17 11:43:52'),
(87, 1175, '4', 0.292969, 22, 1, '2017-09-17 11:43:52'),
(87, 1217, '3', 0.6075, 11, 1, '2017-09-17 11:43:52'),
(87, 1171, '4', 0.03, 18, 1, '2017-09-17 11:43:52'),
(87, 1282, '3', 0.653333, 16, 1, '2017-09-17 11:43:52'),
(87, 1293, '2', 0.880208, 11, 1, '2017-09-17 11:43:52'),
(87, 1265, '3', -0.693417, 27, 0, '2017-09-17 11:43:52'),
(87, 1202, '3', -0.391204, 23, 0, '2017-09-17 11:43:52'),
(87, 1191, '3', 1.6875, 7, 1, '2017-09-17 11:43:52'),
(87, 1294, '0', -0.00520833, 24, 0, '2017-09-17 11:43:52'),
(87, 1257, '3', -0.574219, 27, 0, '2017-09-17 11:43:53'),
(87, 1199, '3', 0.0732422, 27, 1, '2017-09-17 11:43:53'),
(87, 1189, '4', -1.2398, 10, 0, '2017-09-17 11:43:53'),
(87, 1281, '3', 0.03, 27, 1, '2017-09-17 11:43:53'),
(87, 1287, '2', -0.376302, 31, 0, '2017-09-17 11:43:53'),
(87, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:43:53'),
(87, 1219, '3', 1.04752, 9, 1, '2017-09-17 11:43:53'),
(87, 1268, '1', 0.376302, 31, 1, '2017-09-17 11:43:53'),
(87, 1284, '0', -0.0075, 20, 0, '2017-09-17 11:43:53'),
(87, 1208, '4', -0.1452, 39, 0, '2017-09-17 11:43:53'),
(87, 1220, '1', -0.55102, 16, 0, '2017-09-17 11:43:53'),
(87, 1200, '0', -0.00231481, 36, 0, '2017-09-17 11:43:53'),
(87, 1204, '2', -0.255208, 34, 0, '2017-09-17 11:43:53'),
(87, 173, '4', 1.2288, 36, 1, '2017-09-17 11:43:53'),
(87, 172, '4', -1.96388, 21, 0, '2017-09-17 11:43:53'),
(87, 1229, '3', -2.17695, 8, 0, '2017-09-17 11:43:54'),
(87, 1187, '1', -0.84668, 15, 0, '2017-09-17 11:43:54'),
(87, 1299, '1', -1.52135, 19, 0, '2017-09-17 11:43:54'),
(87, 1264, '2', -0.539945, 38, 0, '2017-09-17 11:43:54'),
(87, 1289, '0', -0.001875, 40, 0, '2017-09-17 11:43:54'),
(87, 1206, '3', -0.300833, 41, 0, '2017-09-17 11:43:54'),
(87, 1176, '1', -0.55102, 16, 0, '2017-09-17 11:43:54'),
(87, 1283, '0', -0.00520833, 24, 0, '2017-09-17 11:43:54'),
(87, 1295, '4', 0.1875, 18, 1, '2017-09-17 11:43:54'),
(87, 1250, '4', -2.00083, 11, 0, '2017-09-17 11:43:54'),
(87, 1209, '2', 0.0192, 46, 1, '2017-09-17 11:43:54'),
(87, 1296, '1', -1.02083, 10, 0, '2017-09-17 11:43:54'),
(87, 171, '3', -0.574219, 45, 0, '2017-09-17 11:43:54'),
(87, 1188, '0', -0.00382653, 28, 0, '2017-09-17 11:43:54'),
(87, 1275, '2', -1.26029, 19, 0, '2017-09-17 11:43:54'),
(87, 2752, '4', -1.33333, 10, 0, '2017-09-17 11:43:55'),
(87, 2762, '3', 1.61333, 8, 1, '2017-09-17 11:43:55'),
(87, 2753, '3', -0.75, 15, 0, '2017-09-17 11:43:55'),
(87, 2757, '1', -0.963333, 13, 0, '2017-09-17 11:43:55'),
(87, 2744, '4', -0.48, 18, 0, '2017-09-17 11:43:55'),
(87, 2751, '3', -0.563333, 17, 0, '2017-09-17 11:43:55'),
(87, 2760, '4', 0.963333, 13, 1, '2017-09-17 11:43:55'),
(87, 2740, '1', -1.76333, 7, 0, '2017-09-17 11:43:55'),
(87, 2736, '4', 1.47, 9, 1, '2017-09-17 11:43:55'),
(87, 2761, '1', 1.08, 12, 1, '2017-09-17 11:43:55'),
(87, 2754, '0', -0.00333333, 30, 0, '2017-09-17 11:43:55'),
(87, 2755, '3', 0.963333, 13, 1, '2017-09-17 11:43:55'),
(87, 2756, '2', 1.20333, 11, 1, '2017-09-17 11:43:55'),
(87, 2759, '2', 2.25333, 4, 1, '2017-09-17 11:43:55'),
(87, 2742, '4', 1.92, 6, 1, '2017-09-17 11:43:55'),
(87, 2763, '4', -0.75, 15, 0, '2017-09-17 11:43:56'),
(87, 2758, '4', 1.08, 12, 1, '2017-09-17 11:43:56'),
(87, 2748, '2', -0.853333, 14, 0, '2017-09-17 11:43:56'),
(87, 2737, '4', 0.963333, 13, 1, '2017-09-17 11:43:56'),
(87, 2749, '4', 1.61333, 8, 1, '2017-09-17 11:43:56'),
(87, 2750, '4', 0.12, 24, 1, '2017-09-17 11:43:56'),
(87, 2746, '2', 1.76333, 7, 1, '2017-09-17 11:43:56'),
(87, 2741, '4', -0.75, 15, 0, '2017-09-17 11:43:56'),
(87, 2745, '0', 0, 4, -1, '2017-09-17 11:43:56'),
(87, 2738, '3', -1.76333, 7, 0, '2017-09-17 11:43:56'),
(87, 2743, '4', 1.20333, 11, 1, '2017-09-17 11:43:56'),
(87, 2739, '1', 0.213333, 22, 1, '2017-09-17 11:43:56'),
(87, 2747, '1', -0.75, 15, 0, '2017-09-17 11:43:56'),
(87, 2778, '2', 1.92, 10, 1, '2017-09-17 11:43:56'),
(87, 2790, '0', 0, 5, -1, '2017-09-17 11:43:56'),
(87, 2789, '4', -0.0048, 48, 0, '2017-09-17 11:43:57'),
(87, 2786, '1', -0.9408, 22, 0, '2017-09-17 11:43:57'),
(87, 2772, '2', 2.0172, 9, 1, '2017-09-17 11:43:57'),
(87, 2779, '0', 0, 5, -1, '2017-09-17 11:43:57'),
(87, 2768, '4', 2.1, 15, 1, '2017-09-17 11:43:57'),
(87, 2771, '4', -2.1, 15, 0, '2017-09-17 11:43:57'),
(87, 2766, '1', 2.58, 7, 1, '2017-09-17 11:43:57'),
(87, 2773, '2', 2.7, 5, 1, '2017-09-17 11:43:57'),
(87, 2769, '4', 2.1, 15, 1, '2017-09-17 11:43:57'),
(87, 2780, '2', -0.54, 41, 0, '2017-09-17 11:43:57'),
(87, 2791, '3', 2.52, 8, 1, '2017-09-17 11:43:57'),
(87, 2798, '1', -2.61601, 13, 0, '2017-09-17 11:43:57'),
(87, 2765, '1', -1.44, 26, 0, '2017-09-17 11:43:57'),
(87, 2774, '4', 2.46, 9, 1, '2017-09-17 11:43:57'),
(87, 2783, '1', -2.4, 10, 0, '2017-09-17 11:43:58'),
(87, 2782, '1', 2.1, 15, 1, '2017-09-17 11:43:58'),
(87, 2764, '4', -2.28, 12, 0, '2017-09-17 11:43:58'),
(87, 2781, '4', -1.8, 20, 0, '2017-09-17 11:43:58'),
(87, 2784, '4', -2.46, 9, 0, '2017-09-17 11:43:58'),
(87, 2777, '1', -2.34, 11, 0, '2017-09-17 11:43:58'),
(87, 2785, '4', -1.8252, 11, 0, '2017-09-17 11:43:58'),
(87, 2770, '2', 1.3872, 16, 1, '2017-09-17 11:43:58'),
(87, 2775, '1', -1.7328, 12, 0, '2017-09-17 11:43:58'),
(87, 2767, '4', 1.3068, 17, 1, '2017-09-17 11:43:58'),
(87, 2776, '1', 2.3232, 6, 1, '2017-09-17 11:43:58'),
(87, 2787, '3', -2.46, 9, 0, '2017-09-17 11:43:58'),
(87, 2802, '3', 1.92, 14, 1, '2017-09-17 11:43:58'),
(87, 2808, '4', -2.1, 21, 0, '2017-09-17 11:43:58'),
(87, 2795, '3', 1.7198, 17, 1, '2017-09-17 11:43:58'),
(87, 2805, '4', -2.13122, 11, 0, '2017-09-17 11:43:59'),
(87, 2813, '4', -2.43, 7, 0, '2017-09-17 11:43:59'),
(87, 2794, '0', -0.000612245, 70, 0, '2017-09-17 11:43:59'),
(87, 2796, '3', -1.41061, 22, 0, '2017-09-17 11:43:59'),
(87, 2801, '3', -2.13122, 11, 0, '2017-09-17 11:43:59'),
(87, 2810, '2', -1.18531, 26, 0, '2017-09-17 11:43:59'),
(87, 2806, '2', -0.514898, 41, 0, '2017-09-17 11:43:59'),
(87, 2793, '4', -2.05959, 12, 0, '2017-09-17 11:43:59'),
(87, 2803, '3', 0.979592, 30, 1, '2017-09-17 11:43:59'),
(87, 2818, '1', -1.7198, 17, 0, '2017-09-17 11:43:59'),
(87, 2815, '2', -0.626939, 38, 0, '2017-09-17 11:43:59'),
(87, 2792, '1', -2.27816, 9, 0, '2017-09-17 11:43:59'),
(87, 2812, '3', 2.43, 7, 1, '2017-09-17 11:43:59'),
(87, 2797, '1', -2.13122, 11, 0, '2017-09-17 11:43:59'),
(87, 2807, '3', 2.27816, 9, 1, '2017-09-17 11:43:59'),
(87, 2814, '1', 0.588367, 39, 1, '2017-09-17 11:44:00'),
(87, 2799, '3', -1.78531, 16, 0, '2017-09-17 11:44:00'),
(87, 2811, '2', -1.41061, 22, 0, '2017-09-17 11:44:00'),
(87, 2817, '3', 1.53061, 20, 1, '2017-09-17 11:44:00'),
(87, 2800, '2', 1.53061, 20, 1, '2017-09-17 11:44:00'),
(87, 2809, '3', -0.22102, 51, 0, '2017-09-17 11:44:00'),
(87, 2857, '4', -0.641719, 43, 0, '2017-09-17 11:44:00'),
(87, 2856, '2', -1.86047, 17, 0, '2017-09-17 11:44:00'),
(87, 2843, '3', -1.31672, 27, 0, '2017-09-17 11:44:00'),
(87, 2831, '4', -2.10422, 13, 0, '2017-09-17 11:44:00'),
(87, 2846, '4', -2.49797, 7, 0, '2017-09-17 11:44:00'),
(88, 3414, '3', -0.963333, 13, 0, '2017-09-17 11:44:01'),
(88, 3409, '1', -0.963333, 13, 0, '2017-09-17 11:44:01'),
(88, 3403, '2', 1.29199, 11, 1, '2017-09-17 11:44:01'),
(88, 3402, '1', 1.41797, 10, 1, '2017-09-17 11:44:01'),
(88, 3407, '1', 1.47, 9, 1, '2017-09-17 11:44:01'),
(88, 3398, '2', -1.05762, 13, 0, '2017-09-17 11:44:01'),
(88, 3406, '1', -1.92, 6, 0, '2017-09-17 11:44:01'),
(88, 3399, '3', -1.6875, 8, 0, '2017-09-17 11:44:01'),
(88, 3401, '1', -1.5498, 9, 0, '2017-09-17 11:44:01'),
(88, 3413, '3', -1.47, 9, 0, '2017-09-17 11:44:01'),
(88, 3405, '1', 1.92, 6, 1, '2017-09-17 11:44:01'),
(88, 3412, '4', 0.653333, 16, 1, '2017-09-17 11:44:01'),
(88, 3416, '3', -0.963333, 13, 0, '2017-09-17 11:44:01'),
(88, 3397, '3', -1.6875, 8, 0, '2017-09-17 11:44:02'),
(88, 3411, '2', -1.20333, 11, 0, '2017-09-17 11:44:02'),
(88, 3408, '3', 1.61333, 8, 1, '2017-09-17 11:44:02'),
(88, 3400, '3', -1.17188, 12, 0, '2017-09-17 11:44:02'),
(88, 3410, '2', -1.47, 9, 0, '2017-09-17 11:44:02'),
(88, 3404, '4', 1.6875, 8, 1, '2017-09-17 11:44:02'),
(88, 3415, '2', -0.75, 15, 0, '2017-09-17 11:44:02'),
(88, 3419, '3', -1.12965, 17, 0, '2017-09-17 11:44:02'),
(88, 3427, '3', -1.48915, 13, 0, '2017-09-17 11:44:02'),
(88, 3433, '2', 1.3032, 15, 1, '2017-09-17 11:44:02'),
(88, 3421, '4', 1.3032, 15, 1, '2017-09-17 11:44:02'),
(88, 3424, '2', 1.6875, 11, 1, '2017-09-17 11:44:03'),
(88, 3431, '3', -1.6875, 11, 0, '2017-09-17 11:44:03'),
(88, 3418, '1', 0.447831, 27, 1, '2017-09-17 11:44:03'),
(88, 3436, '4', 1.3032, 15, 1, '2017-09-17 11:44:03'),
(88, 3426, '1', 1.89824, 9, 1, '2017-09-17 11:44:03'),
(88, 3434, '2', -1.21488, 16, 0, '2017-09-17 11:44:03'),
(88, 3430, '1', 1.04752, 18, 1, '2017-09-17 11:44:03'),
(88, 3437, '2', 0.683368, 23, 1, '2017-09-17 11:44:03'),
(88, 3422, '3', 1.3032, 15, 1, '2017-09-17 11:44:03'),
(88, 3432, '2', -1.48915, 13, 0, '2017-09-17 11:44:03'),
(88, 3429, '1', 1.89824, 9, 1, '2017-09-17 11:44:03'),
(88, 3420, '4', -1.3032, 15, 0, '2017-09-17 11:44:03'),
(88, 3435, '0', 0, 24, -1, '2017-09-17 11:44:03'),
(88, 3423, '1', 1.79132, 10, 1, '2017-09-17 11:44:03'),
(88, 3417, '4', -0.396694, 28, 0, '2017-09-17 11:44:04'),
(88, 3428, '1', -0.447831, 27, 0, '2017-09-17 11:44:04'),
(88, 3425, '4', -1.6875, 11, 0, '2017-09-17 11:44:04'),
(88, 3460, '2', 0.0648789, 29, 1, '2017-09-17 11:44:04'),
(88, 3456, '3', 0.936851, 15, 1, '2017-09-17 11:44:04'),
(88, 3442, '4', 1.14446, 13, 1, '2017-09-17 11:44:04'),
(88, 3440, '4', -2.0346, 6, 0, '2017-09-17 11:44:04'),
(88, 3470, '2', 0.58391, 19, 1, '2017-09-17 11:44:04'),
(88, 3451, '1', -0.84083, 16, 0, '2017-09-17 11:44:04'),
(88, 3438, '1', 1.14446, 13, 1, '2017-09-17 11:44:04'),
(88, 3455, '2', -1.49481, 10, 0, '2017-09-17 11:44:04'),
(88, 3439, '4', 1.03806, 14, 1, '2017-09-17 11:44:04'),
(88, 3448, '3', 1.62197, 9, 1, '2017-09-17 11:44:04'),
(88, 3450, '4', -0.75, 17, 0, '2017-09-17 11:44:04'),
(88, 3462, '1', -0.84083, 16, 0, '2017-09-17 11:44:05'),
(88, 3468, '4', -1.62197, 9, 0, '2017-09-17 11:44:05'),
(88, 3444, '3', -0.0103806, 32, 0, '2017-09-17 11:44:05'),
(88, 3453, '4', 0.84083, 16, 1, '2017-09-17 11:44:05'),
(88, 3457, '2', -0.210208, 25, 0, '2017-09-17 11:44:05'),
(88, 3463, '0', -0.00259516, 34, 0, '2017-09-17 11:44:05'),
(88, 3458, '3', -0.75, 17, 0, '2017-09-17 11:44:05'),
(88, 3466, '4', 1.03806, 14, 1, '2017-09-17 11:44:05'),
(88, 3446, '4', -0.66436, 18, 0, '2017-09-17 11:44:05'),
(88, 3511, '4', -1.08, 16, 0, '2017-09-17 11:44:05'),
(88, 3483, '4', 1.17188, 15, 1, '2017-09-17 11:44:05'),
(88, 3490, '2', -1.08, 16, 0, '2017-09-17 11:44:05'),
(88, 3495, '0', 0, 9, -1, '2017-09-17 11:44:05'),
(88, 3519, '4', -1.6875, 10, 0, '2017-09-17 11:44:05'),
(88, 3476, '4', -0.9075, 18, 0, '2017-09-17 11:44:05'),
(88, 3477, '4', -2.1675, 6, 0, '2017-09-17 11:44:06'),
(88, 3493, '2', 1.17188, 15, 1, '2017-09-17 11:44:06'),
(88, 3481, '1', -1.57687, 11, 0, '2017-09-17 11:44:06'),
(88, 3500, '3', -0.75, 20, 0, '2017-09-17 11:44:06'),
(88, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:44:06'),
(88, 1174, '3', 0.998521, 11, 1, '2017-09-17 11:44:06'),
(88, 1198, '4', 1.47, 6, 1, '2017-09-17 11:44:06'),
(88, 1210, '1', 0.255208, 17, 1, '2017-09-17 11:44:06'),
(88, 1203, '3', 0.75, 15, 1, '2017-09-17 11:44:06'),
(88, 1297, '3', 0.403333, 38, 1, '2017-09-17 11:44:06'),
(88, 1292, '2', -0.75, 15, 0, '2017-09-17 11:44:06'),
(88, 1276, '4', -0.237305, 23, 0, '2017-09-17 11:44:06'),
(88, 1183, '2', 0.154959, 17, 1, '2017-09-17 11:44:06'),
(88, 1196, '4', 1.33333, 8, 1, '2017-09-17 11:44:06'),
(88, 1184, '4', 0.421875, 15, 1, '2017-09-17 11:44:06'),
(88, 1190, '4', 1.38138, 9, 1, '2017-09-17 11:44:07'),
(88, 1263, '2', -0.826875, 19, 0, '2017-09-17 11:44:07'),
(88, 1216, '4', 0.046875, 21, 1, '2017-09-17 11:44:07'),
(88, 1170, '2', 1.02083, 10, 1, '2017-09-17 11:44:07'),
(88, 1197, '1', 1.17188, 9, 1, '2017-09-17 11:44:07'),
(88, 1218, '1', -1.08, 8, 0, '2017-09-17 11:44:07'),
(88, 1194, '2', -0.0153061, 26, 0, '2017-09-17 11:44:07'),
(88, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:44:07'),
(88, 1186, '3', 0.244898, 20, 1, '2017-09-17 11:44:07'),
(88, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:44:07'),
(88, 1185, '3', -0.0612245, 24, 0, '2017-09-17 11:44:07'),
(88, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:44:07'),
(88, 1173, '2', 1.08, 8, 1, '2017-09-17 11:44:07'),
(88, 1169, '2', 1.33333, 8, 1, '2017-09-17 11:44:07'),
(88, 1291, '4', 0.48, 12, 1, '2017-09-17 11:44:08'),
(88, 1177, '2', 1.58678, 6, 1, '2017-09-17 11:44:08'),
(88, 1171, '4', 1.35, 11, 1, '2017-09-17 11:44:08'),
(88, 1282, '1', -1.8, 12, 0, '2017-09-17 11:44:08'),
(88, 1284, '3', 1.5, 10, 1, '2017-09-17 11:44:08'),
(88, 1175, '2', -1.03125, 21, 0, '2017-09-17 11:44:08'),
(88, 1294, '3', 1.875, 9, 1, '2017-09-17 11:44:08'),
(88, 1281, '3', 1.4, 16, 1, '2017-09-17 11:44:08'),
(88, 1191, '3', 2.14286, 8, 1, '2017-09-17 11:44:08'),
(88, 1269, '0', -0.0625, 48, 0, '2017-09-17 11:44:08'),
(88, 1189, '3', 0.75, 21, 1, '2017-09-17 11:44:08'),
(88, 1217, '3', 2.1, 6, 1, '2017-09-17 11:44:08'),
(88, 1202, '1', 1, 24, 1, '2017-09-17 11:44:08'),
(88, 1275, '3', -0.839947, 46, 0, '2017-09-17 11:44:08'),
(88, 1219, '1', -1.09091, 14, 0, '2017-09-17 11:44:08'),
(88, 1199, '0', -0.09375, 32, 0, '2017-09-17 11:44:09'),
(88, 1268, '1', 0.375, 42, 1, '2017-09-17 11:44:09'),
(88, 1257, '0', 0, 4, -1, '2017-09-17 11:44:09'),
(88, 1220, '0', 0, 16, -1, '2017-09-17 11:44:09'),
(88, 1200, '2', -1.33333, 20, 0, '2017-09-17 11:44:09'),
(88, 1265, '0', 0, 7, -1, '2017-09-17 11:44:09'),
(88, 1287, '1', -1.125, 30, 0, '2017-09-17 11:44:09'),
(88, 1293, '2', 1.75, 10, 1, '2017-09-17 11:44:09'),
(88, 1208, '1', 1.08, 32, 1, '2017-09-17 11:44:09'),
(88, 1299, '1', -1.68182, 29, 0, '2017-09-17 11:44:09'),
(88, 1264, '2', -1.27273, 38, 0, '2017-09-17 11:44:09'),
(88, 171, '2', -0.075, 78, 0, '2017-09-17 11:44:09'),
(88, 1204, '4', 1.75, 20, 1, '2017-09-17 11:44:09'),
(88, 1206, '3', -2.15, 17, 0, '2017-09-17 11:44:09'),
(88, 1296, '1', -1.625, 11, 0, '2017-09-17 11:44:09'),
(88, 1188, '3', -2.25, 7, 0, '2017-09-17 11:44:10'),
(88, 1229, '1', -1.66667, 24, 0, '2017-09-17 11:44:10'),
(88, 1289, '3', -1.5, 20, 0, '2017-09-17 11:44:10'),
(88, 1172, '3', -0.48, 12, 0, '2017-09-17 11:44:10'),
(88, 1298, '4', -1.92, 12, 0, '2017-09-17 11:44:10'),
(88, 1209, '4', -0.0048, 48, 0, '2017-09-17 11:44:10'),
(88, 1176, '4', 1.85204, 6, 1, '2017-09-17 11:44:10'),
(88, 1250, '3', -1.20333, 22, 0, '2017-09-17 11:44:10'),
(88, 172, '2', 1.11298, 43, 1, '2017-09-17 11:44:10'),
(88, 1187, '1', -1.17188, 12, 0, '2017-09-17 11:44:10'),
(88, 1295, '3', -0.520833, 14, 0, '2017-09-17 11:44:10'),
(88, 1283, '4', 0.421875, 15, 1, '2017-09-17 11:44:10'),
(88, 1286, '4', 0.00333333, 58, 1, '2017-09-17 11:44:10'),
(88, 173, '4', 1.2288, 36, 1, '2017-09-17 11:44:10'),
(88, 1274, '0', -0.000956633, 56, 0, '2017-09-17 11:44:10'),
(89, 1263, '3', -0.151875, 31, 0, '2017-09-17 11:44:11'),
(89, 1170, '4', -0.0208333, 22, 0, '2017-09-17 11:44:11'),
(89, 1169, '2', 0.75, 12, 1, '2017-09-17 11:44:11'),
(89, 1177, '2', 1.21488, 8, 1, '2017-09-17 11:44:11'),
(89, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:44:11'),
(89, 1190, '0', -0.00382653, 28, 0, '2017-09-17 11:44:11'),
(89, 1218, '1', -0.0675, 17, 0, '2017-09-17 11:44:11'),
(89, 1173, '1', -0.6075, 11, 0, '2017-09-17 11:44:11'),
(89, 1210, '1', 0.00520833, 23, 1, '2017-09-17 11:44:11'),
(89, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:44:11'),
(89, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:44:11'),
(89, 1196, '4', 0.0208333, 22, 1, '2017-09-17 11:44:12'),
(89, 1172, '2', -0.0675, 17, 0, '2017-09-17 11:44:12'),
(89, 1184, '4', 0.880208, 11, 1, '2017-09-17 11:44:12'),
(89, 1291, '0', -0.0075, 20, 0, '2017-09-17 11:44:12'),
(89, 1185, '3', -0.0153061, 26, 0, '2017-09-17 11:44:12'),
(89, 1183, '2', 0.502066, 13, 1, '2017-09-17 11:44:12'),
(89, 1216, '4', 0.75, 12, 1, '2017-09-17 11:44:12'),
(89, 1195, '4', 0.0075, 19, 1, '2017-09-17 11:44:12'),
(89, 1186, '3', 0.137755, 22, 1, '2017-09-17 11:44:12'),
(89, 1194, '1', 1.53061, 8, 1, '2017-09-17 11:44:12'),
(89, 1197, '0', -0.00520833, 24, 0, '2017-09-17 11:44:12'),
(89, 1297, '3', 1.40083, 19, 1, '2017-09-17 11:44:12'),
(89, 1292, '0', -0.00333333, 30, 0, '2017-09-17 11:44:12'),
(89, 1174, '3', 1.13609, 10, 1, '2017-09-17 11:44:12'),
(89, 1198, '4', 0.27, 14, 1, '2017-09-17 11:44:12'),
(89, 1261, '3', 0.0186981, 35, 1, '2017-09-17 11:44:13'),
(89, 1276, '1', 0.75, 16, 1, '2017-09-17 11:44:13'),
(89, 1191, '3', 0.0153061, 26, 1, '2017-09-17 11:44:13'),
(89, 1199, '3', 0.292969, 22, 1, '2017-09-17 11:44:13'),
(89, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:44:13'),
(89, 1284, '0', -0.0075, 20, 0, '2017-09-17 11:44:13'),
(89, 1219, '1', -0.154959, 17, 0, '2017-09-17 11:44:13'),
(89, 1257, '0', -0.00130208, 48, 0, '2017-09-17 11:44:13'),
(89, 1175, '4', 0.75, 16, 1, '2017-09-17 11:44:13'),
(89, 1265, '0', -0.00110947, 52, 0, '2017-09-17 11:44:13'),
(89, 1293, '2', 0.520833, 14, 1, '2017-09-17 11:44:13'),
(89, 1294, '3', 0.046875, 21, 1, '2017-09-17 11:44:13'),
(89, 1202, '3', -0.00925926, 34, 0, '2017-09-17 11:44:13'),
(89, 1281, '1', -0.00333333, 29, 0, '2017-09-17 11:44:14'),
(89, 1217, '0', -0.0075, 20, 0, '2017-09-17 11:44:14'),
(89, 1208, '0', -0.0012, 50, 0, '2017-09-17 11:44:14'),
(89, 1282, '0', -0.00333333, 30, 0, '2017-09-17 11:44:14'),
(89, 1200, '0', -0.00231481, 36, 0, '2017-09-17 11:44:14'),
(89, 1287, '4', -0.0117188, 45, 0, '2017-09-17 11:44:14'),
(89, 1171, '0', -0.0075, 20, 0, '2017-09-17 11:44:14'),
(89, 1220, '2', 0.1875, 21, 1, '2017-09-17 11:44:14'),
(89, 1268, '1', 0.125, 46, 1, '2017-09-17 11:44:14'),
(89, 1189, '0', -0.107143, 28, 0, '2017-09-17 11:44:14'),
(89, 1275, '0', -0.0555556, 54, 0, '2017-09-17 11:44:14'),
(89, 1204, '1', -1.02083, 20, 0, '2017-09-17 11:44:14'),
(89, 1286, '0', 0, 57, -1, '2017-09-17 11:44:14'),
(89, 1176, '4', 1.2398, 10, 1, '2017-09-17 11:44:14'),
(89, 1295, '4', 1.75, 10, 1, '2017-09-17 11:44:14'),
(89, 1299, '3', 2.09091, 20, 1, '2017-09-17 11:44:15'),
(89, 173, '0', -0.03, 100, 0, '2017-09-17 11:44:15'),
(89, 2013, '2', 0.653333, 16, 1, '2017-09-17 11:44:15'),
(89, 690, '0', -0.0075, 20, 0, '2017-09-17 11:44:15'),
(89, 2011, '0', 0, 17, -1, '2017-09-17 11:44:15'),
(89, 2010, '1', 1.20333, 11, 1, '2017-09-17 11:44:15'),
(89, 1888, '1', 0.284024, 18, 1, '2017-09-17 11:44:15'),
(89, 1996, '1', 0, 30, 0, '2017-09-17 11:44:15'),
(89, 658, '2', 0.3675, 13, 1, '2017-09-17 11:44:15'),
(89, 699, '2', -0.3675, 13, 0, '2017-09-17 11:44:15'),
(89, 680, '2', -0.0612245, 24, 0, '2017-09-17 11:44:15'),
(89, 712, '1', 0.046875, 21, 1, '2017-09-17 11:44:15'),
(89, 1991, '4', 0.0133333, 28, 1, '2017-09-17 11:44:15'),
(89, 703, '0', -0.00520833, 24, 0, '2017-09-17 11:44:15'),
(89, 663, '1', 1.85204, 6, 1, '2017-09-17 11:44:15'),
(89, 706, '4', 1.33333, 10, 1, '2017-09-17 11:44:16'),
(89, 2033, '4', -0.0612245, 24, 0, '2017-09-17 11:44:16'),
(89, 2031, '3', 0, 30, 0, '2017-09-17 11:44:16'),
(89, 676, '2', 0.309949, 19, 1, '2017-09-17 11:44:16'),
(89, 2008, '3', -0.75, 15, 0, '2017-09-17 11:44:16'),
(89, 659, '0', 0, 17, -1, '2017-09-17 11:44:16'),
(89, 716, '1', -1.13609, 10, 0, '2017-09-17 11:44:16'),
(89, 1985, '4', 0.00292969, 31, 1, '2017-09-17 11:44:16'),
(89, 713, '3', 0.869823, 12, 1, '2017-09-17 11:44:16'),
(89, 679, '1', 0.1875, 18, 1, '2017-09-17 11:44:16'),
(89, 2042, '1', -0.84668, 15, 0, '2017-09-17 11:44:16'),
(89, 1927, '1', -0.03, 27, 0, '2017-09-17 11:44:16'),
(89, 1880, '1', 1.62197, 9, 1, '2017-09-17 11:44:16'),
(89, 1926, '4', -0.143555, 25, 0, '2017-09-17 11:44:16'),
(89, 1925, '1', 0.26188, 31, 1, '2017-09-17 11:44:17'),
(89, 1911, '3', 0.237305, 23, 1, '2017-09-17 11:44:17'),
(89, 1912, '1', -0.979592, 12, 0, '2017-09-17 11:44:17'),
(89, 2034, '4', 0.48, 18, 1, '2017-09-17 11:44:17'),
(89, 1918, '0', -0.00382653, 28, 0, '2017-09-17 11:44:17'),
(89, 704, '4', -0.213333, 22, 0, '2017-09-17 11:44:17'),
(89, 714, '1', 0.373702, 22, 1, '2017-09-17 11:44:17'),
(89, 689, '1', -0.75, 15, 0, '2017-09-17 11:44:17'),
(89, 1929, '2', 0.0103806, 32, 1, '2017-09-17 11:44:17'),
(89, 685, '0', -0.0075, 20, 0, '2017-09-17 11:44:17'),
(89, 1920, '2', 0.75, 16, 1, '2017-09-17 11:44:17'),
(89, 665, '4', -1.33333, 10, 0, '2017-09-17 11:44:17'),
(89, 1892, '4', -0.0710059, 22, 0, '2017-09-17 11:44:17'),
(89, 1923, '3', -0.354492, 21, 0, '2017-09-17 11:44:17'),
(89, 1917, '3', 1.53061, 8, 1, '2017-09-17 11:44:17'),
(89, 698, '2', -0.213333, 22, 0, '2017-09-17 11:44:18'),
(89, 1930, '0', 0, 20, -1, '2017-09-17 11:44:18'),
(89, 1919, '4', 0.156735, 54, 1, '2017-09-17 11:44:18'),
(89, 1915, '3', 1.38138, 9, 1, '2017-09-17 11:44:18'),
(89, 1891, '0', -0.00333333, 30, 0, '2017-09-17 11:44:18'),
(89, 1906, '3', -0.963333, 13, 0, '2017-09-17 11:44:18'),
(89, 664, '1', -0.16609, 26, 0, '2017-09-17 11:44:18'),
(89, 717, '4', 0.00925926, 34, 1, '2017-09-17 11:44:18'),
(89, 1914, '1', -0.46301, 17, 0, '2017-09-17 11:44:18'),
(89, 1922, '1', -0.963333, 13, 0, '2017-09-17 11:44:18'),
(89, 1904, '2', -0.0833333, 25, 0, '2017-09-17 11:44:18'),
(89, 687, '1', -0.653333, 16, 0, '2017-09-17 11:44:18'),
(89, 1909, '2', 1.29199, 11, 1, '2017-09-17 11:44:18'),
(89, 1921, '4', 0.653333, 16, 1, '2017-09-17 11:44:18'),
(89, 1908, '4', -0.1875, 24, 0, '2017-09-17 11:44:18'),
(89, 1936, '4', 1.05762, 13, 1, '2017-09-17 11:44:19'),
(89, 1887, '2', 2.00826, 8, 1, '2017-09-17 11:44:19'),
(89, 700, '1', 0, 32, 0, '2017-09-17 11:44:19'),
(89, 1901, '4', -0.27, 21, 0, '2017-09-17 11:44:19'),
(89, 1957, '2', -0.6912, 26, 0, '2017-09-17 11:44:19'),
(89, 684, '0', -0.001875, 40, 0, '2017-09-17 11:44:19'),
(89, 1955, '1', 0.26188, 31, 1, '2017-09-17 11:44:19'),
(89, 1948, '2', 0.963333, 13, 1, '2017-09-17 11:44:19'),
(89, 1962, '2', 0.2352, 36, 1, '2017-09-17 11:44:19'),
(89, 1940, '1', 0.316875, 27, 1, '2017-09-17 11:44:19'),
(89, 1950, '0', -0.001875, 40, 0, '2017-09-17 11:44:19'),
(89, 1945, '0', -0.00333333, 30, 0, '2017-09-17 11:44:19'),
(89, 1942, '2', -2.29688, 4, 0, '2017-09-17 11:44:19'),
(89, 1933, '0', -0.001875, 40, 0, '2017-09-17 11:44:19'),
(89, 1089, '4', -2.34083, 7, 0, '2017-09-17 11:44:19'),
(89, 613, '4', -1.02083, 25, 0, '2017-09-17 11:44:20'),
(89, 622, '2', 1.92, 12, 1, '2017-09-17 11:44:20'),
(89, 609, '1', -1.92, 12, 0, '2017-09-17 11:44:20'),
(89, 850, '0', -0.000833333, 60, 0, '2017-09-17 11:44:20'),
(89, 600, '3', 1.6081, 15, 1, '2017-09-17 11:44:20'),
(89, 1310, '4', 2.24667, 7, 1, '2017-09-17 11:44:20'),
(89, 593, '3', -1.47, 18, 0, '2017-09-17 11:44:20'),
(89, 619, '1', -1.20333, 22, 0, '2017-09-17 11:44:20'),
(89, 1318, '2', 2.02423, 10, 1, '2017-09-17 11:44:20'),
(89, 611, '2', -0.6348, 27, 0, '2017-09-17 11:44:20'),
(89, 996, '4', -2.3232, 6, 0, '2017-09-17 11:44:20'),
(89, 602, '2', 0.105469, 52, 1, '2017-09-17 11:44:20'),
(89, 596, '2', -1.81481, 12, 0, '2017-09-17 11:44:20'),
(89, 1303, '2', -1.08, 24, 0, '2017-09-17 11:44:21'),
(89, 854, '3', -2.50776, 6, 0, '2017-09-17 11:44:21'),
(89, 594, '3', 1.7328, 12, 1, '2017-09-17 11:44:21'),
(89, 403, '4', 1.92, 12, 1, '2017-09-17 11:44:21'),
(89, 595, '4', 0.693417, 27, 1, '2017-09-17 11:44:21'),
(89, 605, '2', 0.000833333, 59, 1, '2017-09-17 11:44:21'),
(89, 606, '1', -1.6875, 15, 0, '2017-09-17 11:44:21'),
(89, 1317, '3', 0.653333, 32, 1, '2017-09-17 11:44:21'),
(89, 853, '4', -1.61333, 16, 0, '2017-09-17 11:44:21'),
(89, 607, '2', -0.1875, 42, 0, '2017-09-17 11:44:21'),
(89, 615, '2', 2.34083, 7, 1, '2017-09-17 11:44:21'),
(89, 614, '3', 1.33333, 18, 1, '2017-09-17 11:44:21'),
(89, 601, '1', -1.85204, 12, 0, '2017-09-17 11:44:22'),
(89, 604, '3', 2.00083, 11, 1, '2017-09-17 11:44:22'),
(89, 624, '1', 0.00333333, 58, 1, '2017-09-17 11:44:22'),
(89, 852, '4', 1.47, 18, 1, '2017-09-17 11:44:22'),
(89, 603, '4', -1.9571, 10, 0, '2017-09-17 11:44:22'),
(89, 1311, '3', -1.5552, 14, 0, '2017-09-17 11:44:22'),
(89, 598, '3', -1.20333, 22, 0, '2017-09-17 11:44:22'),
(89, 1091, '3', -0.9075, 27, 0, '2017-09-17 11:44:22'),
(89, 599, '1', 1.08, 24, 1, '2017-09-17 11:44:22'),
(89, 1124, '0', 0, 3, -1, '2017-09-17 11:44:22'),
(89, 1308, '3', 0.700833, 31, 1, '2017-09-17 11:44:22'),
(89, 597, '1', -1.72942, 13, 0, '2017-09-17 11:44:22'),
(89, 1301, '4', -0.65918, 34, 0, '2017-09-17 11:44:22'),
(89, 1341, '3', -1.40083, 19, 0, '2017-09-17 11:44:22'),
(89, 1333, '2', 2.34083, 7, 1, '2017-09-17 11:44:22'),
(89, 1323, '1', -0.164795, 49, 0, '2017-09-17 11:44:22'),
(89, 1113, '1', 1.72176, 16, 1, '2017-09-17 11:44:23'),
(89, 1325, '4', -0.161671, 43, 0, '2017-09-17 11:44:23'),
(89, 1312, '1', -1.86226, 14, 0, '2017-09-17 11:44:23'),
(89, 1132, '1', 1.33333, 20, 1, '2017-09-17 11:44:23'),
(89, 1106, '2', -1.6875, 15, 0, '2017-09-17 11:44:23'),
(89, 1315, '4', 1.80589, 13, 1, '2017-09-17 11:44:23'),
(89, 1126, '0', 0, 19, -1, '2017-09-17 11:44:23'),
(89, 1092, '3', -1.92, 12, 0, '2017-09-17 11:44:23'),
(89, 1334, '0', 0, 57, -1, '2017-09-17 11:44:23'),
(89, 1307, '4', -2.18253, 10, 0, '2017-09-17 11:44:23'),
(89, 720, '1', -1.09903, 15, 0, '2017-09-17 11:44:23'),
(89, 721, '2', -0.12, 32, 0, '2017-09-17 11:44:23'),
(89, 734, '3', -0.0533333, 26, 0, '2017-09-17 11:44:23'),
(89, 733, '3', 0.421875, 25, 1, '2017-09-17 11:44:23'),
(89, 509, '0', -0.00231481, 36, 0, '2017-09-17 11:44:23'),
(89, 464, '2', -0.443787, 36, 0, '2017-09-17 11:44:24'),
(89, 489, '2', -0.75, 20, 0, '2017-09-17 11:44:24'),
(89, 725, '1', -0.438581, 21, 0, '2017-09-17 11:44:24'),
(89, 481, '3', -0.27, 28, 0, '2017-09-17 11:44:24'),
(89, 728, '2', -0.831025, 18, 0, '2017-09-17 11:44:24'),
(89, 466, '0', 0, 20, -1, '2017-09-17 11:44:24'),
(89, 719, '3', 1.56481, 10, 1, '2017-09-17 11:44:24'),
(89, 724, '4', -1.47, 9, 0, '2017-09-17 11:44:24'),
(89, 722, '3', 1.6875, 9, 1, '2017-09-17 11:44:24'),
(89, 730, '2', 1.81481, 8, 1, '2017-09-17 11:44:24'),
(89, 737, '4', 0.001875, 39, 1, '2017-09-17 11:44:24'),
(89, 736, '2', -2.18253, 5, 0, '2017-09-17 11:44:24'),
(89, 731, '2', 0.835648, 17, 1, '2017-09-17 11:44:24'),
(89, 735, '3', -0.27, 21, 0, '2017-09-17 11:44:24'),
(89, 485, '2', -0.318998, 31, 0, '2017-09-17 11:44:24'),
(89, 498, '0', -0.001875, 40, 0, '2017-09-17 11:44:25'),
(89, 723, '1', 2.08333, 6, 1, '2017-09-17 11:44:25'),
(89, 494, '3', 2.08333, 5, 1, '2017-09-17 11:44:25'),
(89, 727, '4', -1.02083, 15, 0, '2017-09-17 11:44:25'),
(89, 472, '2', -0.991875, 17, 0, '2017-09-17 11:44:25'),
(89, 465, '2', 0.563333, 17, 1, '2017-09-17 11:44:25'),
(89, 718, '1', 1.08, 12, 1, '2017-09-17 11:44:25'),
(89, 726, '1', 1.37284, 11, 1, '2017-09-17 11:44:25'),
(89, 732, '4', 0.037037, 32, 1, '2017-09-17 11:44:25'),
(89, 490, '0', -0.00231481, 36, 0, '2017-09-17 11:44:25'),
(89, 729, '0', 0, 6, -1, '2017-09-17 11:44:25'),
(89, 487, '4', 1.47, 12, 1, '2017-09-17 11:44:25'),
(89, 486, '1', 1.6875, 9, 1, '2017-09-17 11:44:25'),
(89, 740, '1', 0.835648, 17, 1, '2017-09-17 11:44:25'),
(89, 744, '0', 0, 8, -1, '2017-09-17 11:44:26'),
(89, 745, '3', -0.27, 28, 0, '2017-09-17 11:44:26'),
(89, 754, '1', -1.2398, 15, 0, '2017-09-17 11:44:26'),
(89, 482, '4', 1.53061, 12, 1, '2017-09-17 11:44:26'),
(89, 741, '4', -1.29848, 13, 0, '2017-09-17 11:44:26'),
(89, 502, '2', 1.4518, 14, 1, '2017-09-17 11:44:26'),
(89, 475, '0', -0.00141777, 46, 0, '2017-09-17 11:44:26'),
(89, 755, '4', -0.880208, 22, 0, '2017-09-17 11:44:26'),
(89, 474, '3', -2.04187, 7, 0, '2017-09-17 11:44:26'),
(89, 739, '0', -0.00231481, 36, 0, '2017-09-17 11:44:26'),
(89, 749, '1', -0.0208333, 44, 0, '2017-09-17 11:44:26'),
(89, 478, '0', -0.0012, 50, 0, '2017-09-17 11:44:26'),
(89, 753, '4', 0.613946, 23, 1, '2017-09-17 11:44:26'),
(89, 757, '4', -0.114839, 37, 0, '2017-09-17 11:44:27'),
(89, 477, '3', -0.816635, 22, 0, '2017-09-17 11:44:27'),
(89, 752, '3', 0.511815, 27, 1, '2017-09-17 11:44:27'),
(89, 480, '1', -0.1875, 30, 0, '2017-09-17 11:44:27'),
(89, 751, '2', 0.559401, 25, 1, '2017-09-17 11:44:27'),
(89, 483, '4', -1.73677, 11, 0, '2017-09-17 11:44:27'),
(89, 742, '0', -0.001875, 40, 0, '2017-09-17 11:44:27'),
(89, 756, '4', -0.333333, 32, 0, '2017-09-17 11:44:27'),
(89, 750, '0', -0.00141777, 46, 0, '2017-09-17 11:44:27'),
(89, 479, '1', -0.75, 23, 0, '2017-09-17 11:44:27'),
(89, 748, '1', -1.80187, 9, 0, '2017-09-17 11:44:27'),
(89, 746, '0', -0.00231481, 36, 0, '2017-09-17 11:44:27'),
(89, 743, '4', 1.56481, 10, 1, '2017-09-17 11:44:27'),
(89, 499, '1', 1.74723, 9, 1, '2017-09-17 11:44:28'),
(89, 747, '2', 1.56481, 10, 1, '2017-09-17 11:44:28'),
(89, 738, '2', 2.0346, 6, 1, '2017-09-17 11:44:28'),
(89, 476, '2', -1.80187, 9, 0, '2017-09-17 11:44:28'),
(89, 758, '3', -0.0747922, 32, 0, '2017-09-17 11:44:28'),
(89, 762, '3', 0.75, 20, 1, '2017-09-17 11:44:28'),
(89, 492, '4', -0.12, 32, 0, '2017-09-17 11:44:28'),
(89, 775, '0', -0.00141777, 46, 0, '2017-09-17 11:44:28'),
(89, 484, '4', -1.11153, 18, 0, '2017-09-17 11:44:28'),
(89, 488, '1', -1.33333, 12, 0, '2017-09-17 11:44:28'),
(90, 2762, '4', -0.403333, 19, 0, '2017-09-17 11:44:29'),
(90, 2760, '4', 0.403333, 19, 1, '2017-09-17 11:44:29'),
(90, 2757, '1', -1.33333, 10, 0, '2017-09-17 11:44:29'),
(90, 2741, '1', -1.76333, 7, 0, '2017-09-17 11:44:29'),
(90, 2739, '1', 0.963333, 13, 1, '2017-09-17 11:44:29'),
(90, 2761, '1', 0.75, 15, 1, '2017-09-17 11:44:29'),
(90, 2750, '4', 1.33333, 10, 1, '2017-09-17 11:44:29'),
(90, 2751, '2', 1.08, 12, 1, '2017-09-17 11:44:29'),
(90, 2755, '3', 1.20333, 11, 1, '2017-09-17 11:44:29'),
(90, 2748, '4', -0.48, 18, 0, '2017-09-17 11:44:29'),
(90, 2737, '3', -1.47, 9, 0, '2017-09-17 11:44:29'),
(90, 2738, '2', 1.76333, 7, 1, '2017-09-17 11:44:30'),
(90, 2756, '2', 1.76333, 7, 1, '2017-09-17 11:44:30'),
(90, 2759, '2', 1.76333, 7, 1, '2017-09-17 11:44:30'),
(90, 2747, '1', -1.20333, 11, 0, '2017-09-17 11:44:30'),
(90, 2745, '1', -0.653333, 16, 0, '2017-09-17 11:44:30');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(90, 2758, '4', 1.33333, 10, 1, '2017-09-17 11:44:30'),
(90, 2740, '3', 0.0533333, 26, 1, '2017-09-17 11:44:30'),
(90, 2749, '4', 1.76333, 7, 1, '2017-09-17 11:44:30'),
(90, 2753, '2', 1.47, 9, 1, '2017-09-17 11:44:30'),
(90, 2736, '3', -1.08, 12, 0, '2017-09-17 11:44:30'),
(90, 2746, '2', 1.61333, 8, 1, '2017-09-17 11:44:30'),
(90, 2742, '4', 1.33333, 10, 1, '2017-09-17 11:44:30'),
(90, 2769, '2', -1.92, 18, 0, '2017-09-17 11:44:31'),
(90, 2754, '4', -1.61333, 8, 0, '2017-09-17 11:44:31'),
(90, 2743, '4', 0.853333, 14, 1, '2017-09-17 11:44:31'),
(90, 2763, '1', 1.20333, 11, 1, '2017-09-17 11:44:31'),
(90, 2744, '0', 0, 30, -1, '2017-09-17 11:44:31'),
(90, 2752, '3', -0.48, 18, 0, '2017-09-17 11:44:31'),
(90, 2775, '0', 0, 14, -1, '2017-09-17 11:44:31'),
(90, 2765, '4', 1.47, 15, 1, '2017-09-17 11:44:31'),
(90, 2774, '4', 1.6428, 13, 1, '2017-09-17 11:44:31'),
(90, 2789, '0', 0, 31, -1, '2017-09-17 11:44:31'),
(90, 2777, '3', -1.08, 32, 0, '2017-09-17 11:44:31'),
(90, 2770, '2', 1.5, 25, 1, '2017-09-17 11:44:31'),
(90, 2783, '3', 2.1, 15, 1, '2017-09-17 11:44:31'),
(90, 2785, '4', -2.1, 15, 0, '2017-09-17 11:44:31'),
(90, 2773, '4', -2.46, 9, 0, '2017-09-17 11:44:32'),
(90, 2768, '4', 0.75, 25, 1, '2017-09-17 11:44:32'),
(90, 2790, '3', 1.08, 32, 1, '2017-09-17 11:44:32'),
(90, 2771, '3', 2.22, 13, 1, '2017-09-17 11:44:32'),
(90, 2780, '2', -0.54, 41, 0, '2017-09-17 11:44:32'),
(90, 2772, '4', -2.7, 5, 0, '2017-09-17 11:44:32'),
(90, 2778, '2', 1.14, 31, 1, '2017-09-17 11:44:32'),
(90, 2767, '4', 2.52, 8, 1, '2017-09-17 11:44:32'),
(90, 2782, '3', -1.92, 18, 0, '2017-09-17 11:44:32'),
(90, 2781, '2', -1.32, 28, 0, '2017-09-17 11:44:32'),
(90, 2764, '2', -1.62, 23, 0, '2017-09-17 11:44:32'),
(90, 2784, '4', -0.9408, 22, 0, '2017-09-17 11:44:32'),
(90, 2786, '4', 1.0092, 21, 1, '2017-09-17 11:44:32'),
(90, 2791, '3', 1.7328, 12, 1, '2017-09-17 11:44:33'),
(90, 2766, '1', 1.62, 23, 1, '2017-09-17 11:44:33'),
(90, 2787, '2', -2.34, 11, 0, '2017-09-17 11:44:33'),
(90, 2779, '4', -1.32, 28, 0, '2017-09-17 11:44:33'),
(90, 2776, '1', 1.7328, 12, 1, '2017-09-17 11:44:33'),
(90, 2801, '1', 2.4, 14, 1, '2017-09-17 11:44:33'),
(90, 2793, '2', 2.7, 7, 1, '2017-09-17 11:44:33'),
(90, 2795, '3', 2.52857, 11, 1, '2017-09-17 11:44:33'),
(90, 2794, '3', -2.18571, 19, 0, '2017-09-17 11:44:33'),
(90, 2807, '3', 2.44286, 13, 1, '2017-09-17 11:44:33'),
(90, 2818, '4', -1.97143, 24, 0, '2017-09-17 11:44:33'),
(90, 2802, '3', 2.31429, 16, 1, '2017-09-17 11:44:33'),
(90, 2803, '3', 2.74286, 6, 1, '2017-09-17 11:44:33'),
(90, 2792, '3', 2.79651, 7, 1, '2017-09-17 11:44:33'),
(90, 2806, '4', -0.583208, 64, 0, '2017-09-17 11:44:33'),
(90, 2808, '3', 1.58964, 43, 1, '2017-09-17 11:44:33'),
(90, 2810, '4', 2.36512, 21, 1, '2017-09-17 11:44:34'),
(90, 2817, '1', -2.4607, 18, 0, '2017-09-17 11:44:34'),
(90, 2815, '4', -2.03126, 31, 0, '2017-09-17 11:44:34'),
(90, 2809, '3', -2.30032, 23, 0, '2017-09-17 11:44:34'),
(90, 2805, '2', -1.34442, 49, 0, '2017-09-17 11:44:34'),
(90, 2796, '3', -2.4, 14, 0, '2017-09-17 11:44:34'),
(90, 2811, '3', -2.31429, 16, 0, '2017-09-17 11:44:34'),
(90, 2800, '2', 2.31429, 16, 1, '2017-09-17 11:44:34'),
(90, 2799, '2', -2.22857, 18, 0, '2017-09-17 11:44:34'),
(90, 2797, '1', -1.88571, 26, 0, '2017-09-17 11:44:34'),
(90, 2812, '3', 2.35714, 15, 1, '2017-09-17 11:44:34'),
(90, 2814, '1', 1.62857, 32, 1, '2017-09-17 11:44:34'),
(90, 2813, '3', 2.05714, 22, 1, '2017-09-17 11:44:34'),
(90, 2798, '4', 1.97143, 24, 1, '2017-09-17 11:44:34'),
(90, 2856, '1', -2.27988, 27, 0, '2017-09-17 11:44:35'),
(90, 2858, '1', -1.9875, 27, 0, '2017-09-17 11:44:35'),
(90, 1196, '4', 1.02083, 10, 1, '2017-09-17 11:44:35'),
(90, 1169, '2', 0.520833, 14, 1, '2017-09-17 11:44:35'),
(90, 1190, '2', -0.0612245, 24, 0, '2017-09-17 11:44:35'),
(90, 1210, '1', 0, 24, 1, '2017-09-17 11:44:35'),
(90, 1170, '2', 0.880208, 11, 1, '2017-09-17 11:44:35'),
(90, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:44:35'),
(90, 1173, '2', 0.0675, 17, 1, '2017-09-17 11:44:35'),
(90, 1174, '3', 1.43787, 8, 1, '2017-09-17 11:44:35'),
(90, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:44:35'),
(90, 1291, '4', 0.0675, 17, 1, '2017-09-17 11:44:35'),
(90, 1183, '2', 1.39463, 7, 1, '2017-09-17 11:44:35'),
(90, 1276, '0', -0.00292969, 32, 0, '2017-09-17 11:44:35'),
(90, 1216, '3', -0.75, 12, 0, '2017-09-17 11:44:36'),
(90, 1292, '3', -1.08, 12, 0, '2017-09-17 11:44:36'),
(90, 1185, '2', -0.0344388, 25, 0, '2017-09-17 11:44:36'),
(90, 1227, '3', 0.00520833, 23, 1, '2017-09-17 11:44:36'),
(90, 1177, '2', 0.154959, 17, 1, '2017-09-17 11:44:36'),
(90, 1194, '1', 1.38138, 9, 1, '2017-09-17 11:44:36'),
(90, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:44:36'),
(90, 1172, '2', -0.9075, 9, 0, '2017-09-17 11:44:36'),
(90, 1263, '2', -0.226875, 29, 0, '2017-09-17 11:44:36'),
(90, 1297, '3', 0.0075, 57, 1, '2017-09-17 11:44:36'),
(90, 1218, '4', 0.12, 16, 1, '2017-09-17 11:44:36'),
(90, 1186, '3', 1.10587, 11, 1, '2017-09-17 11:44:36'),
(90, 1197, '1', 0.0208333, 22, 1, '2017-09-17 11:44:36'),
(90, 1184, '4', 0.75, 12, 1, '2017-09-17 11:44:36'),
(90, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:44:37'),
(90, 1198, '4', 0.48, 12, 1, '2017-09-17 11:44:37'),
(90, 1199, '2', -0.105469, 26, 0, '2017-09-17 11:44:37'),
(90, 1265, '0', 0, 7, -1, '2017-09-17 11:44:37'),
(90, 1284, '3', 0.0075, 19, 1, '2017-09-17 11:44:37'),
(90, 1293, '2', 0.421875, 15, 1, '2017-09-17 11:44:37'),
(90, 1268, '3', -1.09505, 19, 0, '2017-09-17 11:44:37'),
(90, 1269, '0', 0, 36, -1, '2017-09-17 11:44:37'),
(90, 1294, '3', 0.00520833, 23, 1, '2017-09-17 11:44:37'),
(90, 1200, '3', -0.835648, 17, 0, '2017-09-17 11:44:37'),
(90, 1282, '1', -0.853333, 14, 0, '2017-09-17 11:44:37'),
(90, 1220, '4', -0.137755, 22, 0, '2017-09-17 11:44:37'),
(90, 1257, '2', -0.688802, 25, 0, '2017-09-17 11:44:37'),
(90, 1217, '2', -0.6075, 11, 0, '2017-09-17 11:44:37'),
(90, 1208, '1', 0.3888, 32, 1, '2017-09-17 11:44:38'),
(90, 1281, '1', -0.333333, 20, 0, '2017-09-17 11:44:38'),
(90, 1189, '3', 0.979592, 12, 1, '2017-09-17 11:44:38'),
(90, 1175, '2', -0.354492, 21, 0, '2017-09-17 11:44:38'),
(90, 1191, '3', 0.979592, 12, 1, '2017-09-17 11:44:38'),
(90, 1202, '1', 0.391204, 23, 1, '2017-09-17 11:44:38'),
(90, 1219, '3', 0.619835, 12, 1, '2017-09-17 11:44:38'),
(90, 1287, '4', -1.78255, 11, 0, '2017-09-17 11:44:38'),
(90, 1171, '4', 0.75, 10, 1, '2017-09-17 11:44:38'),
(90, 1206, '1', -0.300833, 41, 0, '2017-09-17 11:44:38'),
(90, 1283, '4', 0.255208, 17, 1, '2017-09-17 11:44:38'),
(90, 172, '2', 1.39463, 35, 1, '2017-09-17 11:44:38'),
(90, 1296, '0', 0, 17, -1, '2017-09-17 11:44:38'),
(90, 171, '1', 0.135469, 63, 1, '2017-09-17 11:44:38'),
(90, 1298, '0', -0.000833333, 60, 0, '2017-09-17 11:44:38'),
(90, 1229, '1', -0.124486, 43, 0, '2017-09-17 11:44:38'),
(90, 1275, '1', -1.12037, 21, 0, '2017-09-17 11:44:39'),
(90, 1204, '1', -0.0117188, 45, 0, '2017-09-17 11:44:39'),
(90, 1187, '1', -0.046875, 28, 0, '2017-09-17 11:44:39'),
(90, 1299, '3', 0.364325, 43, 1, '2017-09-17 11:44:39'),
(90, 1188, '1', 1.38138, 9, 1, '2017-09-17 11:44:39'),
(90, 1295, '3', -0.880208, 11, 0, '2017-09-17 11:44:39'),
(90, 1209, '0', -0.0012, 50, 0, '2017-09-17 11:44:39'),
(90, 1286, '4', 0.00333333, 58, 1, '2017-09-17 11:44:39'),
(90, 2605, '2', 1.6875, 10, 1, '2017-09-17 11:44:39'),
(90, 2614, '4', 0.541875, 23, 1, '2017-09-17 11:44:39'),
(90, 2611, '3', 2.04187, 7, 1, '2017-09-17 11:44:39'),
(90, 2613, '4', 1.47, 12, 1, '2017-09-17 11:44:39'),
(90, 2610, '3', 1.6875, 10, 1, '2017-09-17 11:44:39'),
(90, 2612, '2', -1.36688, 13, 0, '2017-09-17 11:44:39'),
(90, 2606, '1', 2.04187, 7, 1, '2017-09-17 11:44:39'),
(90, 2603, '2', -0.991875, 17, 0, '2017-09-17 11:44:40'),
(90, 2615, '2', -0.48, 24, 0, '2017-09-17 11:44:40'),
(90, 2608, '3', 1.80187, 9, 1, '2017-09-17 11:44:40'),
(90, 2609, '1', -0.991875, 17, 0, '2017-09-17 11:44:40'),
(90, 2602, '2', -1.2675, 14, 0, '2017-09-17 11:44:40'),
(90, 2604, '3', -1.17188, 15, 0, '2017-09-17 11:44:40'),
(90, 2607, '3', -1.47, 12, 0, '2017-09-17 11:44:40'),
(90, 2601, '2', 2.1675, 6, 1, '2017-09-17 11:44:40'),
(90, 2618, '4', -2.08333, 10, 0, '2017-09-17 11:44:40'),
(90, 2630, '2', 0.653333, 32, 1, '2017-09-17 11:44:40'),
(90, 2629, '4', -1.40083, 19, 0, '2017-09-17 11:44:40'),
(90, 2633, '3', 0.6075, 33, 1, '2017-09-17 11:44:40'),
(90, 2616, '4', 2.1675, 9, 1, '2017-09-17 11:44:40'),
(90, 2622, '2', 1.33333, 20, 1, '2017-09-17 11:44:40'),
(90, 2631, '3', 1.02083, 25, 1, '2017-09-17 11:44:40'),
(90, 2621, '3', 1.54083, 17, 1, '2017-09-17 11:44:41'),
(90, 2617, '1', 2.43, 6, 1, '2017-09-17 11:44:41'),
(90, 2632, '2', -1.85, 23, 0, '2017-09-17 11:44:41'),
(90, 2634, '2', -2.55, 9, 0, '2017-09-17 11:44:41'),
(90, 2624, '1', -0.9075, 27, 0, '2017-09-17 11:44:41'),
(90, 2635, '0', 0, 13, -1, '2017-09-17 11:44:41'),
(90, 2623, '3', -2.1675, 9, 0, '2017-09-17 11:44:41'),
(90, 2628, '3', -2.1675, 9, 0, '2017-09-17 11:44:41'),
(90, 2626, '3', 1.20333, 22, 1, '2017-09-17 11:44:41'),
(90, 2625, '3', 1.84083, 13, 1, '2017-09-17 11:44:41'),
(90, 2620, '4', 1.84083, 13, 1, '2017-09-17 11:44:41'),
(90, 2627, '4', -1.6875, 15, 0, '2017-09-17 11:44:41'),
(90, 2619, '3', 1.47, 18, 1, '2017-09-17 11:44:42'),
(90, 2825, '3', 2.00083, 11, 1, '2017-09-17 11:44:42'),
(90, 2820, '2', 2.08333, 10, 1, '2017-09-17 11:44:42'),
(90, 2735, '4', -1.7, 26, 0, '2017-09-17 11:44:42'),
(90, 2847, '4', 0.75, 30, 1, '2017-09-17 11:44:42'),
(90, 2816, '2', -2.15, 17, 0, '2017-09-17 11:44:42'),
(90, 2730, '2', -0.163333, 46, 0, '2017-09-17 11:44:42'),
(90, 2852, '3', -1.40083, 19, 0, '2017-09-17 11:44:42'),
(90, 2731, '4', 1.20333, 22, 1, '2017-09-17 11:44:42'),
(90, 2845, '2', -1.40083, 19, 0, '2017-09-17 11:44:42'),
(90, 2734, '1', -1.92, 12, 0, '2017-09-17 11:44:42'),
(90, 2841, '3', 2.00083, 11, 1, '2017-09-17 11:44:42'),
(90, 2733, '2', 0.963333, 26, 1, '2017-09-17 11:44:42'),
(90, 2732, '4', 1.61333, 16, 1, '2017-09-17 11:44:42'),
(90, 2823, '1', -1.76333, 14, 0, '2017-09-17 11:44:42'),
(90, 2819, '2', 1.40083, 19, 1, '2017-09-17 11:44:43'),
(90, 2728, '4', 0.963333, 26, 1, '2017-09-17 11:44:43'),
(90, 2835, '4', -0.300833, 41, 0, '2017-09-17 11:44:43'),
(90, 2838, '3', 0.00333333, 58, 1, '2017-09-17 11:44:43'),
(90, 2833, '3', 1.54083, 17, 1, '2017-09-17 11:44:43'),
(90, 2729, '2', 1.1, 38, 1, '2017-09-17 11:44:43'),
(90, 2870, '3', 2.7, 6, 1, '2017-09-17 11:44:43'),
(90, 2866, '4', 2.05, 19, 1, '2017-09-17 11:44:43'),
(90, 2879, '3', -1.45, 31, 0, '2017-09-17 11:44:43'),
(90, 2884, '1', 2.05, 19, 1, '2017-09-17 11:44:43'),
(90, 2868, '1', -1.65, 27, 0, '2017-09-17 11:44:43'),
(90, 2885, '4', 1.5, 30, 1, '2017-09-17 11:44:43'),
(90, 2887, '3', 1.75, 25, 1, '2017-09-17 11:44:43'),
(90, 2883, '4', -1.65, 27, 0, '2017-09-17 11:44:43'),
(90, 2859, '1', -1.55, 29, 0, '2017-09-17 11:44:43'),
(90, 2886, '1', 2.7, 6, 1, '2017-09-17 11:44:43'),
(90, 2882, '4', -2.35, 13, 0, '2017-09-17 11:44:44'),
(90, 2888, '0', 0, 18, -1, '2017-09-17 11:44:44'),
(90, 2864, '2', 2.4, 12, 1, '2017-09-17 11:44:44'),
(90, 2877, '2', 2.7, 6, 1, '2017-09-17 11:44:44'),
(90, 2861, '3', -2.05434, 26, 0, '2017-09-17 11:44:44'),
(90, 2862, '0', 0, 12, -1, '2017-09-17 11:44:44'),
(90, 2855, '1', -0.6, 48, 0, '2017-09-17 11:44:44'),
(90, 2889, '0', -0.05, 60, 0, '2017-09-17 11:44:44'),
(90, 2874, '3', -1.85, 23, 0, '2017-09-17 11:44:44'),
(90, 2881, '4', -2, 20, 0, '2017-09-17 11:44:44'),
(90, 2871, '2', 2.55, 9, 1, '2017-09-17 11:44:44'),
(90, 2865, '3', 2.4, 12, 1, '2017-09-17 11:44:44'),
(90, 2896, '3', 2.7, 6, 1, '2017-09-17 11:44:44'),
(90, 1, '4', 0.75, 10, 1, '2017-09-17 11:44:44'),
(90, 2, '3', 1.47, 6, 1, '2017-09-17 11:44:44'),
(90, 4, '2', -0.6075, 11, 0, '2017-09-17 11:44:45'),
(90, 14, '1', 0.48, 12, 1, '2017-09-17 11:44:45'),
(90, 19, '4', -0.0675, 17, 0, '2017-09-17 11:44:45'),
(90, 11, '1', 0.75, 10, 1, '2017-09-17 11:44:45'),
(90, 9, '2', 1.2675, 7, 1, '2017-09-17 11:44:45'),
(90, 7, '3', -0.0675, 17, 0, '2017-09-17 11:44:45'),
(90, 17, '1', 0.75, 10, 1, '2017-09-17 11:44:45'),
(90, 16, '1', 1.2675, 7, 1, '2017-09-17 11:44:45'),
(90, 12, '1', -0.75, 10, 0, '2017-09-17 11:44:45'),
(90, 3, '3', 0.9075, 9, 1, '2017-09-17 11:44:45'),
(90, 6, '3', -0.1875, 15, 0, '2017-09-17 11:44:45'),
(90, 13, '1', 0.1875, 15, 1, '2017-09-17 11:44:45'),
(90, 8, '1', -0.0075, 19, 0, '2017-09-17 11:44:45'),
(90, 10, '1', 0.75, 10, 1, '2017-09-17 11:44:45'),
(90, 88, '4', 0, 20, 0, '2017-09-17 11:44:45'),
(90, 18, '4', 0.27, 14, 1, '2017-09-17 11:44:46'),
(90, 5, '1', -0.03, 18, 0, '2017-09-17 11:44:46'),
(90, 37, '1', 0.03, 18, 1, '2017-09-17 11:44:46'),
(90, 22, '1', 0.48, 12, 1, '2017-09-17 11:44:46'),
(90, 33, '3', 0.0075, 19, 1, '2017-09-17 11:44:46'),
(90, 36, '4', 0.6075, 11, 1, '2017-09-17 11:44:46'),
(90, 35, '2', 0.27, 14, 1, '2017-09-17 11:44:46'),
(90, 29, '2', -0.1875, 15, 0, '2017-09-17 11:44:46'),
(90, 39, '2', 0.03, 18, 1, '2017-09-17 11:44:46'),
(90, 23, '1', 1.08, 8, 1, '2017-09-17 11:44:46'),
(90, 24, '3', 0.3675, 13, 1, '2017-09-17 11:44:46'),
(90, 28, '1', -0.75, 10, 0, '2017-09-17 11:44:46'),
(90, 25, '3', -0.12, 16, 0, '2017-09-17 11:44:46'),
(90, 20, '2', 0.12, 16, 1, '2017-09-17 11:44:46'),
(90, 40, '0', -0.0075, 20, 0, '2017-09-17 11:44:46'),
(90, 30, '2', 0.27, 14, 1, '2017-09-17 11:44:47'),
(90, 31, '2', -0.27, 14, 0, '2017-09-17 11:44:47'),
(90, 26, '4', 0.6075, 11, 1, '2017-09-17 11:44:47'),
(90, 21, '2', 0.12, 16, 1, '2017-09-17 11:44:47'),
(90, 32, '3', 0.0675, 17, 1, '2017-09-17 11:44:47'),
(90, 34, '2', 0.6075, 11, 1, '2017-09-17 11:44:47'),
(90, 38, '2', 1.5, 10, 1, '2017-09-17 11:44:47'),
(90, 59, '2', 1.35, 11, 1, '2017-09-17 11:44:47'),
(90, 53, '1', -1.2, 12, 0, '2017-09-17 11:44:47'),
(90, 56, '3', 1.95, 7, 1, '2017-09-17 11:44:47'),
(90, 45, '4', -0.6, 16, 0, '2017-09-17 11:44:47'),
(90, 52, '0', -0.15, 20, 0, '2017-09-17 11:44:47'),
(90, 57, '1', 2.1, 6, 1, '2017-09-17 11:44:47'),
(90, 42, '2', 0.45, 17, 1, '2017-09-17 11:44:47'),
(90, 44, '1', 0.9, 14, 1, '2017-09-17 11:44:48'),
(90, 55, '2', -1.2, 12, 0, '2017-09-17 11:44:48'),
(90, 60, '0', 0, 7, -1, '2017-09-17 11:44:48'),
(90, 48, '4', -0.15, 19, 0, '2017-09-17 11:44:48'),
(90, 49, '4', -0.75, 15, 0, '2017-09-17 11:44:48'),
(90, 46, '1', 1.65, 9, 1, '2017-09-17 11:44:48'),
(90, 51, '3', 0, 20, 0, '2017-09-17 11:44:48'),
(90, 54, '3', -1.65, 9, 0, '2017-09-17 11:44:48'),
(90, 50, '3', -0.6, 16, 0, '2017-09-17 11:44:48'),
(90, 47, '3', -0.3, 18, 0, '2017-09-17 11:44:48'),
(90, 41, '0', -0.15, 20, 0, '2017-09-17 11:44:48'),
(90, 43, '4', 0.15, 21, 0, '2017-09-17 11:44:48'),
(90, 58, '4', -1.65, 9, 0, '2017-09-17 11:44:48'),
(90, 62, '1', -0.3, 18, 0, '2017-09-17 11:44:48'),
(90, 72, '0', 0, 12, -1, '2017-09-17 11:44:48'),
(90, 76, '1', 0.15, 19, 1, '2017-09-17 11:44:49'),
(90, 68, '4', -1.35, 11, 0, '2017-09-17 11:44:49'),
(90, 67, '0', -0.15, 20, 0, '2017-09-17 11:44:49'),
(90, 73, '1', 1.05, 13, 1, '2017-09-17 11:44:49'),
(90, 77, '2', 1.05, 13, 1, '2017-09-17 11:44:49'),
(90, 70, '3', -1.35, 11, 0, '2017-09-17 11:44:49'),
(90, 78, '1', 0.15, 19, 1, '2017-09-17 11:44:49'),
(90, 79, '2', -0.3, 18, 0, '2017-09-17 11:44:49'),
(90, 71, '0', 0, 10, -1, '2017-09-17 11:44:49'),
(90, 74, '3', -1.35, 11, 0, '2017-09-17 11:44:49'),
(90, 64, '4', 0.0075, 19, 1, '2017-09-17 11:44:49'),
(90, 80, '1', -0.9075, 9, 0, '2017-09-17 11:44:49'),
(90, 65, '3', 0.27, 14, 1, '2017-09-17 11:44:49'),
(90, 75, '2', -0.03, 18, 0, '2017-09-17 11:44:49'),
(90, 61, '1', 0.03, 18, 1, '2017-09-17 11:44:49'),
(90, 69, '1', 0.27, 14, 1, '2017-09-17 11:44:50'),
(90, 63, '3', -0.27, 14, 0, '2017-09-17 11:44:50'),
(90, 87, '2', 0, 20, 0, '2017-09-17 11:44:50'),
(90, 90, '3', -0.3675, 13, 0, '2017-09-17 11:44:50'),
(90, 81, '3', -0.48, 12, 0, '2017-09-17 11:44:50'),
(90, 93, '3', -0.0612245, 12, 0, '2017-09-17 11:44:50'),
(90, 94, '0', -0.0075, 20, 0, '2017-09-17 11:44:50'),
(90, 86, '4', -0.0075, 21, 0, '2017-09-17 11:44:50'),
(90, 89, '0', -0.0075, 20, 0, '2017-09-17 11:44:50'),
(90, 92, '0', -0.0117188, 16, 0, '2017-09-17 11:44:50'),
(90, 83, '1', 0.9075, 9, 1, '2017-09-17 11:44:50'),
(90, 95, '3', 0.6075, 11, 1, '2017-09-17 11:44:50'),
(90, 91, '3', -1.08, 8, 0, '2017-09-17 11:44:50'),
(90, 85, '4', -0.1875, 15, 0, '2017-09-17 11:44:50'),
(90, 82, '1', 0.6075, 11, 1, '2017-09-17 11:44:50'),
(90, 84, '1', -0.03, 18, 0, '2017-09-17 11:44:51'),
(90, 109, '0', -0.00333333, 30, 0, '2017-09-17 11:44:51'),
(90, 107, '2', -0.27, 28, 0, '2017-09-17 11:44:51'),
(90, 97, '4', 0.0075, 19, 1, '2017-09-17 11:44:51'),
(90, 102, '1', -0.0075, 19, 0, '2017-09-17 11:44:51'),
(90, 104, '1', 1.74422, 95, 1, '2017-09-17 11:44:51'),
(90, 99, '3', -0.45, 17, 0, '2017-09-17 11:44:51'),
(90, 110, '1', -2.43, 40, 0, '2017-09-17 11:44:51'),
(90, 96, '4', -1.6875, 5, 0, '2017-09-17 11:44:51'),
(90, 494, '3', 0.653333, 16, 1, '2017-09-17 11:44:51'),
(90, 721, '2', -0.226875, 29, 0, '2017-09-17 11:44:51'),
(90, 733, '3', 0.27, 28, 1, '2017-09-17 11:44:51'),
(90, 730, '2', 0.148148, 28, 1, '2017-09-17 11:44:51'),
(90, 465, '2', 0.853333, 14, 1, '2017-09-17 11:44:52'),
(90, 732, '4', 0.231481, 26, 1, '2017-09-17 11:44:52'),
(90, 720, '3', -0.916205, 17, 0, '2017-09-17 11:44:52'),
(90, 726, '1', 0.16609, 26, 1, '2017-09-17 11:44:52'),
(90, 486, '4', -0.925926, 16, 0, '2017-09-17 11:44:52'),
(90, 737, '4', 0.1875, 30, 1, '2017-09-17 11:44:52'),
(90, 490, '2', 0.835648, 17, 1, '2017-09-17 11:44:52'),
(90, 464, '3', 0.359467, 17, 1, '2017-09-17 11:44:52'),
(90, 718, '1', 1.08, 12, 1, '2017-09-17 11:44:52'),
(90, 725, '0', 0, 13, -1, '2017-09-17 11:44:52'),
(90, 489, '4', -0.6075, 22, 0, '2017-09-17 11:44:52'),
(90, 498, '0', 0, 9, -1, '2017-09-17 11:44:52'),
(90, 734, '2', 1.33333, 10, 1, '2017-09-17 11:44:52'),
(90, 731, '2', 0.453704, 22, 1, '2017-09-17 11:44:52'),
(90, 466, '0', -0.00333333, 30, 0, '2017-09-17 11:44:52'),
(90, 509, '2', -0.391204, 23, 0, '2017-09-17 11:44:53'),
(90, 724, '2', -1.20333, 11, 0, '2017-09-17 11:44:53'),
(90, 722, '2', -1.22454, 13, 0, '2017-09-17 11:44:53'),
(90, 723, '1', 0.520833, 21, 1, '2017-09-17 11:44:53'),
(90, 736, '3', -0.210208, 25, 0, '2017-09-17 11:44:53'),
(90, 728, '4', -0.00831025, 36, 0, '2017-09-17 11:44:53'),
(90, 729, '1', -1.56481, 10, 0, '2017-09-17 11:44:53'),
(90, 481, '3', -1.92, 8, 0, '2017-09-17 11:44:53'),
(90, 487, '4', 1.2675, 14, 1, '2017-09-17 11:44:53'),
(90, 735, '3', -0.853333, 14, 0, '2017-09-17 11:44:53'),
(90, 727, '3', -1.12037, 14, 0, '2017-09-17 11:44:53'),
(90, 719, '3', 0.668981, 19, 1, '2017-09-17 11:44:53'),
(90, 472, '3', -1.92, 8, 0, '2017-09-17 11:44:53'),
(90, 485, '2', -0.816635, 22, 0, '2017-09-17 11:44:53'),
(90, 748, '2', 0.03, 36, 1, '2017-09-17 11:44:53'),
(90, 742, '1', 1.47, 12, 1, '2017-09-17 11:44:54'),
(90, 753, '4', 0.89966, 19, 1, '2017-09-17 11:44:54'),
(90, 477, '3', -0.0127599, 43, 0, '2017-09-17 11:44:54'),
(90, 752, '1', -0.0127599, 43, 0, '2017-09-17 11:44:54'),
(90, 476, '2', -0.421875, 25, 0, '2017-09-17 11:44:54'),
(90, 502, '2', 1.4518, 14, 1, '2017-09-17 11:44:54'),
(90, 740, '3', -1.12037, 14, 0, '2017-09-17 11:44:54'),
(90, 741, '4', -0.132964, 30, 0, '2017-09-17 11:44:54'),
(90, 756, '2', 0.520833, 28, 1, '2017-09-17 11:44:54'),
(90, 751, '2', 0.892562, 20, 1, '2017-09-17 11:44:54'),
(90, 744, '0', 0, 5, -1, '2017-09-17 11:44:54'),
(90, 743, '2', -0.668981, 19, 0, '2017-09-17 11:44:54'),
(90, 475, '4', 0.0907372, 38, 1, '2017-09-17 11:44:54'),
(90, 482, '1', -1.33333, 14, 0, '2017-09-17 11:44:54'),
(90, 755, '0', -0.00130208, 48, 0, '2017-09-17 11:44:54'),
(90, 747, '2', 1.6875, 9, 1, '2017-09-17 11:44:55'),
(90, 750, '1', -0.17155, 35, 0, '2017-09-17 11:44:55'),
(90, 745, '0', -0.001875, 40, 0, '2017-09-17 11:44:55'),
(90, 474, '1', 0.541875, 23, 1, '2017-09-17 11:44:55'),
(90, 478, '2', -0.03, 45, 0, '2017-09-17 11:44:55'),
(90, 480, '3', -1.47, 12, 0, '2017-09-17 11:44:55'),
(90, 479, '1', -0.511815, 27, 0, '2017-09-17 11:44:55'),
(90, 746, '3', -0.00925926, 34, 0, '2017-09-17 11:44:55'),
(90, 483, '1', -0.239603, 33, 0, '2017-09-17 11:44:55'),
(90, 739, '1', 0.925926, 16, 1, '2017-09-17 11:44:55'),
(90, 754, '4', 0.89966, 19, 1, '2017-09-17 11:44:55'),
(90, 757, '3', -0.459357, 28, 0, '2017-09-17 11:44:55'),
(90, 738, '1', -0.58391, 19, 0, '2017-09-17 11:44:55'),
(90, 499, '1', 1.19668, 14, 1, '2017-09-17 11:44:55'),
(90, 749, '2', 0.046875, 42, 1, '2017-09-17 11:44:55'),
(90, 772, '3', 0.0638021, 41, 1, '2017-09-17 11:44:56'),
(90, 762, '1', -1.2675, 14, 0, '2017-09-17 11:44:56'),
(90, 488, '1', -0.925926, 16, 0, '2017-09-17 11:44:56'),
(90, 369, '2', 1.2675, 7, 1, '2017-09-17 11:44:56'),
(90, 370, '1', -0.03, 18, 0, '2017-09-17 11:44:56'),
(90, 396, '1', -0.0075, 19, 0, '2017-09-17 11:44:56'),
(90, 393, '4', -0.27, 14, 0, '2017-09-17 11:44:56'),
(90, 374, '4', 0.9075, 9, 1, '2017-09-17 11:44:56'),
(90, 2432, '1', -1.92, 22, 0, '2017-09-17 11:44:56'),
(90, 1109, '3', 1.2675, 7, 1, '2017-09-17 11:44:56'),
(90, 2422, '3', -2.29688, 16, 0, '2017-09-17 11:44:56'),
(90, 397, '0', -0.0075, 20, 0, '2017-09-17 11:44:56'),
(90, 2414, '3', 1.39463, 28, 1, '2017-09-17 11:44:56'),
(90, 398, '0', -0.0075, 20, 0, '2017-09-17 11:44:56'),
(90, 400, '3', 0, 20, 0, '2017-09-17 11:44:56'),
(90, 372, '2', -0.0075, 19, 0, '2017-09-17 11:44:57'),
(90, 392, '1', -0.12, 16, 0, '2017-09-17 11:44:57'),
(90, 1110, '2', 1.2675, 7, 1, '2017-09-17 11:44:57'),
(90, 2408, '3', 2.10149, 15, 1, '2017-09-17 11:44:57'),
(90, 1133, '2', -0.27, 14, 0, '2017-09-17 11:44:57'),
(90, 1116, '4', 0.9075, 9, 1, '2017-09-17 11:44:57'),
(90, 382, '4', 0.03, 18, 1, '2017-09-17 11:44:57'),
(90, 2416, '3', 2.54171, 7, 1, '2017-09-17 11:44:57'),
(90, 380, '1', 0.75, 10, 1, '2017-09-17 11:44:57'),
(90, 365, '4', -1.08, 8, 0, '2017-09-17 11:44:57'),
(90, 401, '3', -0.1875, 15, 0, '2017-09-17 11:44:57'),
(90, 375, '1', 0.3675, 13, 1, '2017-09-17 11:44:57'),
(90, 379, '3', 0.9075, 9, 1, '2017-09-17 11:44:57'),
(90, 2406, '4', -2.54171, 7, 0, '2017-09-17 11:44:57'),
(90, 1115, '0', -0.0075, 20, 0, '2017-09-17 11:44:58'),
(90, 1107, '4', 0.6075, 11, 1, '2017-09-17 11:44:58'),
(90, 2400, '3', 2.13122, 11, 1, '2017-09-17 11:44:58'),
(90, 1122, '2', -1.2675, 7, 0, '2017-09-17 11:44:58'),
(90, 387, '4', 0.27, 14, 1, '2017-09-17 11:44:58'),
(90, 2429, '3', -1.7524, 33, 0, '2017-09-17 11:44:58'),
(90, 388, '3', -0.03, 18, 0, '2017-09-17 11:44:58'),
(90, 377, '2', 0.0675, 17, 1, '2017-09-17 11:44:58'),
(90, 399, '0', 0, 20, -1, '2017-09-17 11:44:58'),
(90, 2419, '0', -2.12521, 20, 0, '2017-09-17 11:44:58'),
(90, 363, '3', 2.1675, 3, 1, '2017-09-17 11:44:58'),
(90, 385, '0', 0, 11, -1, '2017-09-17 11:44:58'),
(90, 2431, '2', -1.99374, 17, 0, '2017-09-17 11:44:58'),
(90, 1138, '1', -0.6075, 11, 0, '2017-09-17 11:44:58'),
(90, 390, '0', -0.0075, 20, 0, '2017-09-17 11:44:58'),
(90, 391, '0', -0.0075, 20, 0, '2017-09-17 11:44:59'),
(90, 1105, '2', 0.75, 10, 1, '2017-09-17 11:44:59'),
(90, 2413, '4', -1.73677, 22, 0, '2017-09-17 11:44:59'),
(90, 1140, '1', 1.08, 8, 1, '2017-09-17 11:44:59'),
(90, 2410, '2', 2.39158, 9, 1, '2017-09-17 11:44:59'),
(90, 1114, '4', -0.3675, 13, 0, '2017-09-17 11:44:59'),
(90, 376, '1', -1.47, 6, 0, '2017-09-17 11:44:59'),
(90, 2404, '2', -2.50095, 8, 0, '2017-09-17 11:44:59'),
(90, 1120, '4', -0.48, 12, 0, '2017-09-17 11:44:59'),
(90, 381, '1', 1.2675, 7, 1, '2017-09-17 11:44:59'),
(90, 1117, '2', 1.08, 8, 1, '2017-09-17 11:44:59'),
(90, 1112, '4', 1.2675, 7, 1, '2017-09-17 11:44:59'),
(90, 364, '2', 1.6875, 5, 1, '2017-09-17 11:44:59'),
(90, 1131, '3', -0.75, 10, 0, '2017-09-17 11:44:59'),
(90, 366, '4', 1.2675, 7, 1, '2017-09-17 11:44:59'),
(90, 371, '3', -1.6875, 5, 0, '2017-09-17 11:45:00'),
(90, 367, '1', -0.12, 16, 0, '2017-09-17 11:45:00'),
(90, 384, '0', -0.0075, 20, 0, '2017-09-17 11:45:00'),
(90, 383, '0', -0.0075, 20, 0, '2017-09-17 11:45:00'),
(90, 2418, '2', 2.63672, 5, 1, '2017-09-17 11:45:00'),
(90, 1139, '0', -0.0075, 20, 0, '2017-09-17 11:45:00'),
(90, 373, '1', 0.3675, 13, 1, '2017-09-17 11:45:00'),
(90, 1121, '3', -0.6075, 11, 0, '2017-09-17 11:45:00'),
(90, 386, '2', -0.75, 10, 0, '2017-09-17 11:45:00'),
(90, 389, '1', -0.27, 14, 0, '2017-09-17 11:45:00'),
(90, 368, '3', 0.27, 14, 1, '2017-09-17 11:45:00'),
(90, 394, '4', -0.03, 18, 0, '2017-09-17 11:45:00'),
(90, 378, '1', 0.12, 16, 1, '2017-09-17 11:45:00'),
(90, 2411, '1', -2.14438, 17, 0, '2017-09-17 11:45:00'),
(90, 1104, '3', 0.48, 12, 1, '2017-09-17 11:45:00'),
(90, 402, '0', -0.0075, 20, 0, '2017-09-17 11:45:00'),
(90, 2420, '3', 2.40755, 10, 1, '2017-09-17 11:45:01'),
(90, 1130, '3', -1.47, 6, 0, '2017-09-17 11:45:01'),
(90, 1137, '2', 1.47, 6, 1, '2017-09-17 11:45:01'),
(90, 395, '2', -0.0675, 17, 0, '2017-09-17 11:45:01'),
(90, 2427, '0', 0, 14, -1, '2017-09-17 11:45:01'),
(90, 1136, '2', 1.08, 8, 1, '2017-09-17 11:45:01'),
(90, 2403, '2', 2.73926, 4, 1, '2017-09-17 11:45:01'),
(90, 1143, '0', -0.15, 20, 0, '2017-09-17 11:45:01'),
(90, 2442, '4', 2.7375, 7, 1, '2017-09-17 11:45:01'),
(90, 1145, '1', 1.2, 12, 1, '2017-09-17 11:45:01'),
(90, 2445, '1', -2.79231, 9, 0, '2017-09-17 11:45:01'),
(90, 2450, '4', -2.52083, 23, 0, '2017-09-17 11:45:01'),
(90, 2435, '2', -1.10787, 51, 0, '2017-09-17 11:45:01'),
(91, 1263, '1', 0.541875, 23, 1, '2017-09-17 11:45:02'),
(91, 1218, '1', -1.2675, 7, 0, '2017-09-17 11:45:02'),
(91, 1291, '4', 0.6075, 11, 1, '2017-09-17 11:45:02'),
(91, 1196, '4', 0.880208, 11, 1, '2017-09-17 11:45:02'),
(91, 1190, '4', 1.38138, 9, 1, '2017-09-17 11:45:02'),
(91, 1172, '2', -1.08, 8, 0, '2017-09-17 11:45:02'),
(91, 1186, '3', 1.2398, 10, 1, '2017-09-17 11:45:02'),
(91, 1169, '2', 1.88021, 5, 1, '2017-09-17 11:45:02'),
(91, 1170, '2', 1.33333, 8, 1, '2017-09-17 11:45:03'),
(91, 1173, '2', 1.47, 6, 1, '2017-09-17 11:45:03'),
(91, 1203, '3', 1.20333, 11, 1, '2017-09-17 11:45:03'),
(91, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:45:03'),
(91, 1216, '4', 0.630208, 13, 1, '2017-09-17 11:45:03'),
(91, 1194, '1', 1.6875, 7, 1, '2017-09-17 11:45:03'),
(91, 1284, '3', 1.65, 9, 1, '2017-09-17 11:45:03'),
(91, 1189, '3', 1.71429, 12, 1, '2017-09-17 11:45:03'),
(91, 1200, '4', 1.58333, 17, 1, '2017-09-17 11:45:03'),
(91, 1281, '3', 1.5, 15, 1, '2017-09-17 11:45:03'),
(91, 1282, '4', -1.7, 13, 0, '2017-09-17 11:45:03'),
(91, 1175, '4', 1.40625, 17, 1, '2017-09-17 11:45:03'),
(91, 1293, '2', 2.25, 6, 1, '2017-09-17 11:45:03'),
(91, 1287, '2', -1.1875, 29, 0, '2017-09-17 11:45:04'),
(91, 1199, '3', 1.21875, 19, 1, '2017-09-17 11:45:04'),
(91, 1171, '4', 1.65, 9, 1, '2017-09-17 11:45:04'),
(91, 1275, '4', 1.88988, 27, 1, '2017-09-17 11:45:04'),
(91, 1286, '0', -0.195743, 60, 0, '2017-09-17 11:45:04'),
(91, 1296, '4', -0.572357, 22, 0, '2017-09-17 11:45:04'),
(91, 1229, '4', 1.74716, 30, 1, '2017-09-17 11:45:04'),
(91, 171, '4', -0.938599, 66, 0, '2017-09-17 11:45:04'),
(91, 1176, '4', 2.63128, 5, 1, '2017-09-17 11:45:04'),
(91, 1209, '2', 1.78769, 27, 1, '2017-09-17 11:45:04'),
(91, 1206, '3', -2.01386, 27, 0, '2017-09-17 11:45:04'),
(91, 1283, '1', -2.19301, 9, 0, '2017-09-17 11:45:04'),
(91, 1299, '3', 2.55914, 14, 1, '2017-09-17 11:45:04'),
(91, 1298, '1', 2.13414, 24, 1, '2017-09-17 11:45:05'),
(91, 1187, '1', -2.33688, 10, 0, '2017-09-17 11:45:05'),
(91, 1289, '2', 1.48993, 26, 1, '2017-09-17 11:45:05'),
(91, 1295, '4', 2.19301, 9, 1, '2017-09-17 11:45:05'),
(91, 1188, '2', -2.3166, 9, 0, '2017-09-17 11:45:05'),
(91, 172, '1', -2.38555, 32, 0, '2017-09-17 11:45:05'),
(91, 1250, '0', -0.195743, 60, 0, '2017-09-17 11:45:05'),
(91, 1264, '3', -1.39821, 45, 0, '2017-09-17 11:45:05'),
(91, 173, '1', -1.7091, 57, 0, '2017-09-17 11:45:05'),
(91, 1204, '4', 2.24148, 17, 1, '2017-09-17 11:45:05'),
(91, 170, '4', 0.769869, 87, 1, '2017-09-17 11:45:05'),
(91, 1285, '3', 1.88988, 15, 1, '2017-09-17 11:45:05'),
(91, 1246, '3', 2.17348, 23, 1, '2017-09-17 11:45:05'),
(91, 1230, '3', 2.08194, 27, 1, '2017-09-17 11:45:05'),
(91, 1247, '4', -0.60654, 60, 0, '2017-09-17 11:45:05'),
(91, 1201, '4', 1.76169, 11, 1, '2017-09-17 11:45:05'),
(91, 1262, '3', 1.88988, 26, 1, '2017-09-17 11:45:06'),
(91, 1260, '4', -1.88988, 32, 0, '2017-09-17 11:45:06'),
(91, 1249, '0', 0, 11, -1, '2017-09-17 11:45:06'),
(91, 1288, '2', 0.734771, 58, 1, '2017-09-17 11:45:06'),
(91, 1274, '4', -1.84461, 29, 0, '2017-09-17 11:45:06'),
(91, 169, '2', 2.43037, 13, 1, '2017-09-17 11:45:06'),
(91, 1241, '0', 0, 4, -1, '2017-09-17 11:45:06'),
(91, 1267, '2', -2.06584, 30, 0, '2017-09-17 11:45:06'),
(91, 1278, '3', 0.64633, 54, 1, '2017-09-17 11:45:06'),
(91, 1277, '0', 0, 20, -1, '2017-09-17 11:45:06'),
(91, 1256, '0', -0.204957, 56, 0, '2017-09-17 11:45:06'),
(91, 1235, '0', 0, 4, -1, '2017-09-17 11:45:06'),
(91, 1240, '4', -1.15859, 38, 0, '2017-09-17 11:45:06'),
(91, 855, '1', -1.41797, 20, 0, '2017-09-17 11:45:06'),
(91, 871, '3', 2.3168, 8, 1, '2017-09-17 11:45:06'),
(91, 326, '3', -2.37037, 10, 0, '2017-09-17 11:45:07'),
(91, 873, '2', 2.2376, 9, 1, '2017-09-17 11:45:07'),
(91, 856, '4', 2.54956, 5, 1, '2017-09-17 11:45:07'),
(91, 361, '2', -1.85204, 12, 0, '2017-09-17 11:45:07'),
(91, 1639, '4', 2.19443, 11, 1, '2017-09-17 11:45:07'),
(91, 857, '3', 2.34083, 7, 1, '2017-09-17 11:45:07'),
(91, 868, '1', 2.46387, 6, 1, '2017-09-17 11:45:07'),
(91, 340, '3', 2.10422, 13, 1, '2017-09-17 11:45:07'),
(91, 305, '3', -2.47059, 12, 0, '2017-09-17 11:45:07'),
(91, 362, '4', -2.08333, 10, 0, '2017-09-17 11:45:07'),
(91, 867, '3', 1.40083, 19, 1, '2017-09-17 11:45:07'),
(91, 346, '2', -1.93718, 11, 0, '2017-09-17 11:45:07'),
(91, 864, '3', 2.43, 6, 1, '2017-09-17 11:45:07'),
(91, 1125, '1', -1.54083, 17, 0, '2017-09-17 11:45:07'),
(91, 872, '4', -2.1675, 9, 0, '2017-09-17 11:45:08'),
(91, 858, '3', -1.2675, 21, 0, '2017-09-17 11:45:08'),
(91, 863, '2', 2.41142, 6, 1, '2017-09-17 11:45:08'),
(91, 345, '1', 1.6875, 15, 1, '2017-09-17 11:45:08'),
(91, 2401, '4', 2.14438, 17, 1, '2017-09-17 11:45:08'),
(91, 859, '4', 1.92, 14, 1, '2017-09-17 11:45:08'),
(91, 882, '4', 2.25, 16, 1, '2017-09-17 11:45:08'),
(91, 876, '2', 1.65, 27, 1, '2017-09-17 11:45:08'),
(91, 309, '4', 2.7, 6, 1, '2017-09-17 11:45:08'),
(91, 890, '2', 1.91667, 13, 1, '2017-09-17 11:45:08'),
(91, 918, '3', 2.78125, 7, 1, '2017-09-17 11:45:08'),
(91, 908, '4', -2.81531, 8, 0, '2017-09-17 11:45:08'),
(91, 881, '3', 2.55, 15, 1, '2017-09-17 11:45:08'),
(91, 315, '3', 2.76455, 6, 1, '2017-09-17 11:45:08'),
(91, 316, '4', -2.67874, 10, 0, '2017-09-17 11:45:08'),
(91, 909, '4', 2.31985, 32, 1, '2017-09-17 11:45:09'),
(91, 903, '4', 2.83093, 8, 1, '2017-09-17 11:45:09'),
(91, 869, '2', 2.62435, 12, 1, '2017-09-17 11:45:09'),
(91, 893, '3', 2.65665, 6, 1, '2017-09-17 11:45:09'),
(91, 360, '3', -2.72067, 9, 0, '2017-09-17 11:45:09'),
(91, 901, '2', 2.73972, 14, 1, '2017-09-17 11:45:09'),
(91, 963, '4', -2.72434, 14, 0, '2017-09-17 11:45:09'),
(91, 898, '4', -2.36512, 12, 0, '2017-09-17 11:45:09'),
(91, 912, '4', -2.78787, 10, 0, '2017-09-17 11:45:09'),
(91, 356, '4', -2.62435, 12, 0, '2017-09-17 11:45:09'),
(91, 910, '2', -2.76819, 10, 0, '2017-09-17 11:45:09'),
(91, 891, '1', 1.5, 18, 1, '2017-09-17 11:45:09'),
(91, 317, '3', -2.58532, 12, 0, '2017-09-17 11:45:09'),
(91, 892, '2', -2.2, 8, 0, '2017-09-17 11:45:09'),
(91, 357, '1', 2.6, 8, 1, '2017-09-17 11:45:09'),
(91, 310, '3', 1.68, 22, 1, '2017-09-17 11:45:10'),
(91, 964, '1', -2.59999, 17, 0, '2017-09-17 11:45:10'),
(91, 887, '2', -2.57812, 9, 0, '2017-09-17 11:45:10'),
(91, 306, '3', 2.625, 7, 1, '2017-09-17 11:45:10'),
(91, 302, '4', -2.56667, 13, 0, '2017-09-17 11:45:10'),
(91, 308, '1', -2.57143, 10, 0, '2017-09-17 11:45:10'),
(91, 1683, '1', 2.225, 31, 1, '2017-09-17 11:45:10'),
(91, 875, '1', 2.65, 7, 1, '2017-09-17 11:45:10'),
(91, 303, '2', 2.52857, 11, 1, '2017-09-17 11:45:10'),
(91, 896, '4', 2.69195, 6, 1, '2017-09-17 11:45:10'),
(91, 907, '2', 2.80636, 8, 1, '2017-09-17 11:45:10'),
(91, 905, '3', -2.58532, 16, 0, '2017-09-17 11:45:10'),
(91, 904, '4', -2.82602, 6, 0, '2017-09-17 11:45:10'),
(91, 314, '4', -1.83914, 26, 0, '2017-09-17 11:45:10'),
(91, 358, '2', 2.4375, 12, 1, '2017-09-17 11:45:10'),
(91, 969, '3', 2.87974, 5, 1, '2017-09-17 11:45:10'),
(91, 899, '1', -2.74448, 12, 0, '2017-09-17 11:45:11'),
(91, 902, '3', -2.80101, 9, 0, '2017-09-17 11:45:11'),
(91, 304, '3', -2.25, 14, 0, '2017-09-17 11:45:11'),
(91, 307, '2', -2.35714, 12, 0, '2017-09-17 11:45:11'),
(91, 897, '0', 0, 5, -1, '2017-09-17 11:45:11'),
(91, 312, '2', -2.52, 8, 0, '2017-09-17 11:45:11'),
(91, 894, '0', 0, 7, -1, '2017-09-17 11:45:11'),
(91, 313, '3', 2.38889, 11, 1, '2017-09-17 11:45:11'),
(91, 911, '2', -2.6625, 9, 0, '2017-09-17 11:45:11'),
(91, 900, '2', 2.46429, 15, 1, '2017-09-17 11:45:11'),
(91, 895, '4', -1.97368, 13, 0, '2017-09-17 11:45:11'),
(91, 861, '3', 2.65, 7, 1, '2017-09-17 11:45:11'),
(91, 888, '4', -2.025, 13, 0, '2017-09-17 11:45:11'),
(91, 322, '1', 2.55, 9, 1, '2017-09-17 11:45:11'),
(91, 880, '3', -2.63636, 8, 0, '2017-09-17 11:45:11'),
(91, 323, '4', 2.25, 15, 1, '2017-09-17 11:45:12'),
(91, 353, '4', 2.34, 11, 1, '2017-09-17 11:45:12'),
(91, 3210, '2', 1.3125, 27, 1, '2017-09-17 11:45:12'),
(91, 341, '4', 2.6, 8, 1, '2017-09-17 11:45:12'),
(91, 926, '1', 2.73401, 13, 1, '2017-09-17 11:45:12'),
(91, 324, '4', 2.15104, 22, 1, '2017-09-17 11:45:12'),
(91, 931, '2', -2.79651, 10, 0, '2017-09-17 11:45:12'),
(91, 920, '2', -2.72434, 14, 0, '2017-09-17 11:45:12'),
(91, 927, '2', -2.71875, 9, 0, '2017-09-17 11:45:12'),
(91, 929, '2', -2.52, 16, 0, '2017-09-17 11:45:12'),
(91, 924, '4', -2.775, 6, 0, '2017-09-17 11:45:12'),
(91, 917, '4', 2.7, 8, 1, '2017-09-17 11:45:12'),
(91, 319, '4', 2.6, 8, 1, '2017-09-17 11:45:12'),
(91, 311, '4', 2.61111, 7, 1, '2017-09-17 11:45:12'),
(91, 915, '4', -2.65909, 10, 0, '2017-09-17 11:45:12'),
(91, 925, '2', 2.65909, 10, 1, '2017-09-17 11:45:13'),
(91, 916, '2', 2.8125, 6, 1, '2017-09-17 11:45:13'),
(91, 922, '4', -2.76455, 12, 0, '2017-09-17 11:45:13'),
(91, 919, '3', 2.625, 10, 1, '2017-09-17 11:45:13'),
(91, 355, '2', -2.40251, 17, 0, '2017-09-17 11:45:13'),
(91, 321, '2', 2.76, 4, 1, '2017-09-17 11:45:13'),
(91, 930, '1', 2.58019, 17, 1, '2017-09-17 11:45:13'),
(91, 928, '1', 2.83872, 7, 1, '2017-09-17 11:45:13'),
(91, 921, '2', 2.72067, 12, 1, '2017-09-17 11:45:13'),
(91, 862, '4', 2.62111, 11, 1, '2017-09-17 11:45:13'),
(91, 336, '3', 2.76188, 7, 1, '2017-09-17 11:45:13'),
(91, 914, '3', 2.80624, 10, 1, '2017-09-17 11:45:13'),
(91, 913, '3', -2.50998, 36, 0, '2017-09-17 11:45:14'),
(91, 870, '4', 2.23607, 24, 1, '2017-09-17 11:45:14'),
(91, 342, '3', 2.78209, 7, 1, '2017-09-17 11:45:14'),
(91, 889, '4', -2.32379, 16, 0, '2017-09-17 11:45:14'),
(91, 877, '2', 2.78107, 9, 1, '2017-09-17 11:45:14'),
(91, 879, '3', -2.63715, 15, 0, '2017-09-17 11:45:14'),
(91, 350, '4', -2.65518, 13, 0, '2017-09-17 11:45:14'),
(91, 945, '4', 2.8666, 8, 1, '2017-09-17 11:45:14'),
(91, 984, '3', -2.85591, 9, 0, '2017-09-17 11:45:14'),
(91, 943, '1', 2.84605, 12, 1, '2017-09-17 11:45:14'),
(91, 936, '3', -2.81069, 11, 0, '2017-09-17 11:45:14'),
(91, 933, '4', 2.87821, 7, 1, '2017-09-17 11:45:14'),
(91, 932, '3', -2.81069, 11, 0, '2017-09-17 11:45:14'),
(91, 944, '2', 2.87821, 7, 1, '2017-09-17 11:45:14'),
(91, 946, '1', -2.78209, 14, 0, '2017-09-17 11:45:14'),
(91, 344, '2', 2.84605, 6, 1, '2017-09-17 11:45:15'),
(91, 935, '3', -2.82622, 9, 0, '2017-09-17 11:45:15'),
(91, 3152, '0', 0, 12, -1, '2017-09-17 11:45:15'),
(91, 883, '2', 2.79285, 8, 1, '2017-09-17 11:45:15'),
(91, 938, '4', 2.93406, 4, 1, '2017-09-17 11:45:15'),
(91, 940, '4', -2.63391, 22, 0, '2017-09-17 11:45:15'),
(91, 878, '1', -2.65518, 13, 0, '2017-09-17 11:45:15'),
(91, 939, '1', 2.94174, 4, 1, '2017-09-17 11:45:15'),
(91, 1899, '3', 2.26843, 6, 1, '2017-09-17 11:45:15'),
(91, 1953, '2', -0.316875, 27, 0, '2017-09-17 11:45:15'),
(91, 1913, '4', -0.27, 42, 0, '2017-09-17 11:45:15'),
(91, 1946, '2', -1.92, 8, 0, '2017-09-17 11:45:15'),
(91, 2157, '3', -0.919324, 25, 0, '2017-09-17 11:45:15'),
(91, 1931, '1', 1.80187, 9, 1, '2017-09-17 11:45:15'),
(91, 1943, '1', 1.48315, 19, 1, '2017-09-17 11:45:15'),
(91, 1902, '1', 1.29199, 11, 1, '2017-09-17 11:45:15'),
(91, 1949, '3', -1.4518, 14, 0, '2017-09-17 11:45:16'),
(91, 1890, '1', -1.51454, 11, 0, '2017-09-17 11:45:16'),
(91, 1895, '4', 1.73677, 11, 1, '2017-09-17 11:45:16'),
(91, 1916, '1', 1.96998, 11, 1, '2017-09-17 11:45:16'),
(91, 1928, '1', 1.62197, 9, 1, '2017-09-17 11:45:16'),
(91, 1907, '3', 1.08, 16, 1, '2017-09-17 11:45:16'),
(91, 1935, '1', 1.6875, 13, 1, '2017-09-17 11:45:16'),
(91, 1886, '3', 2.08333, 6, 1, '2017-09-17 11:45:16'),
(91, 2060, '1', -1.875, 15, 0, '2017-09-17 11:45:16'),
(91, 1924, '4', 1.89187, 7, 1, '2017-09-17 11:45:16'),
(91, 1976, '4', -2.4, 10, 0, '2017-09-17 11:45:16'),
(91, 1910, '4', -1.88021, 10, 0, '2017-09-17 11:45:16'),
(91, 1905, '4', 1.54395, 13, 1, '2017-09-17 11:45:16'),
(91, 2148, '2', 0.676875, 21, 1, '2017-09-17 11:45:16'),
(91, 1938, '3', -1.50521, 14, 0, '2017-09-17 11:45:16'),
(91, 1932, '4', -1.4518, 14, 0, '2017-09-17 11:45:17'),
(91, 1956, '4', 1.17188, 21, 1, '2017-09-17 11:45:17'),
(91, 2052, '4', -1.83743, 10, 0, '2017-09-17 11:45:17'),
(91, 1980, '4', 2.00826, 8, 1, '2017-09-17 11:45:17'),
(91, 1982, '1', 0.75, 23, 1, '2017-09-17 11:45:17'),
(91, 1960, '2', -2.52083, 5, 0, '2017-09-17 11:45:17'),
(91, 2057, '4', 0.653333, 16, 1, '2017-09-17 11:45:17'),
(91, 1959, '2', -2.05141, 9, 0, '2017-09-17 11:45:17'),
(91, 1979, '4', 0.0675, 34, 1, '2017-09-17 11:45:17'),
(91, 1972, '2', -1.64609, 14, 0, '2017-09-17 11:45:17'),
(91, 2053, '4', 1.79132, 10, 1, '2017-09-17 11:45:17'),
(91, 1958, '4', -1.85204, 12, 0, '2017-09-17 11:45:17'),
(91, 1989, '1', 1.98047, 9, 1, '2017-09-17 11:45:17'),
(91, 2054, '2', 1.80187, 9, 1, '2017-09-17 11:45:18'),
(91, 1961, '2', -0.5292, 29, 0, '2017-09-17 11:45:18'),
(91, 1968, '1', 1.88021, 10, 1, '2017-09-17 11:45:18'),
(91, 1992, '4', -2.04187, 7, 0, '2017-09-17 11:45:18'),
(91, 2048, '4', -2.38327, 5, 0, '2017-09-17 11:45:18'),
(91, 1986, '4', -1.92, 10, 0, '2017-09-17 11:45:18'),
(91, 2079, '1', 1.7328, 12, 1, '2017-09-17 11:45:18'),
(91, 2082, '2', 2.1168, 8, 1, '2017-09-17 11:45:18'),
(91, 2070, '3', -2.52083, 4, 0, '2017-09-17 11:45:18'),
(91, 2071, '3', 0.619835, 24, 1, '2017-09-17 11:45:18'),
(91, 2069, '1', 2.5392, 4, 1, '2017-09-17 11:45:18'),
(91, 2083, '1', -1.98047, 9, 0, '2017-09-17 11:45:18'),
(91, 2068, '3', -1.85204, 9, 0, '2017-09-17 11:45:18'),
(91, 2075, '1', 1.78255, 11, 1, '2017-09-17 11:45:18'),
(91, 2080, '1', 0.170068, 32, 1, '2017-09-17 11:45:18'),
(91, 2081, '4', 0.284024, 36, 1, '2017-09-17 11:45:19'),
(91, 2066, '2', -1.6875, 10, 0, '2017-09-17 11:45:19'),
(91, 2076, '1', -1.9571, 10, 0, '2017-09-17 11:45:19'),
(91, 2064, '1', 2.20408, 6, 1, '2017-09-17 11:45:19'),
(91, 2073, '1', 1.47, 15, 1, '2017-09-17 11:45:19'),
(91, 2074, '2', 0.396694, 28, 1, '2017-09-17 11:45:19'),
(91, 2067, '3', -1.94093, 9, 0, '2017-09-17 11:45:19'),
(91, 2077, '3', 1.93718, 11, 1, '2017-09-17 11:45:19'),
(91, 2084, '1', 1.88021, 10, 1, '2017-09-17 11:45:19'),
(91, 2072, '3', -1.83743, 10, 0, '2017-09-17 11:45:19'),
(91, 2078, '3', -2.14793, 8, 0, '2017-09-17 11:45:19'),
(91, 2088, '1', 1.60207, 14, 1, '2017-09-17 11:45:19'),
(91, 2099, '4', 2.50095, 4, 1, '2017-09-17 11:45:19'),
(91, 2098, '1', -2.24667, 7, 0, '2017-09-17 11:45:19'),
(91, 2094, '4', 1.63894, 12, 1, '2017-09-17 11:45:20'),
(91, 2089, '1', -1.0535, 22, 0, '2017-09-17 11:45:20'),
(91, 2090, '2', -2.08333, 8, 0, '2017-09-17 11:45:20'),
(91, 2087, '3', 1.33333, 14, 1, '2017-09-17 11:45:20'),
(91, 2092, '1', -0.376302, 31, 0, '2017-09-17 11:45:20'),
(91, 2103, '3', 2.29688, 6, 1, '2017-09-17 11:45:20'),
(91, 2095, '3', -1.88021, 10, 0, '2017-09-17 11:45:20'),
(91, 2085, '1', -0.12, 32, 0, '2017-09-17 11:45:20'),
(91, 2102, '3', 2.04726, 8, 1, '2017-09-17 11:45:20'),
(91, 2086, '4', 2.20408, 6, 1, '2017-09-17 11:45:20'),
(91, 2096, '3', 0.913199, 26, 1, '2017-09-17 11:45:20'),
(91, 2097, '4', 1.50521, 14, 1, '2017-09-17 11:45:20'),
(91, 2100, '1', 2.19643, 15, 1, '2017-09-17 11:45:20'),
(91, 2101, '3', 2.4, 12, 1, '2017-09-17 11:45:20'),
(91, 2093, '3', 2.25, 11, 1, '2017-09-17 11:45:20'),
(91, 2091, '2', 2.54348, 7, 1, '2017-09-17 11:45:20'),
(91, 2104, '4', 2.14286, 12, 1, '2017-09-17 11:45:20'),
(91, 2114, '2', -2.07906, 22, 0, '2017-09-17 11:45:21'),
(91, 2106, '3', 1.78571, 17, 1, '2017-09-17 11:45:21'),
(91, 2105, '1', -2.64301, 9, 0, '2017-09-17 11:45:21'),
(91, 2112, '4', 1.83333, 14, 1, '2017-09-17 11:45:21'),
(91, 2115, '4', 2.71302, 7, 1, '2017-09-17 11:45:21'),
(91, 2107, '0', 0, 6, -1, '2017-09-17 11:45:21'),
(91, 2109, '0', 0, 13, -1, '2017-09-17 11:45:21'),
(91, 2117, '4', -2.43037, 13, 0, '2017-09-17 11:45:21'),
(91, 2116, '1', -2.47645, 12, 0, '2017-09-17 11:45:21'),
(91, 2118, '2', 2.5, 8, 1, '2017-09-17 11:45:21'),
(91, 2113, '4', 2.69195, 6, 1, '2017-09-17 11:45:21'),
(91, 2108, '1', 2.76455, 6, 1, '2017-09-17 11:45:21'),
(91, 2111, '4', 2.61923, 7, 1, '2017-09-17 11:45:22'),
(91, 2110, '2', 2.43037, 13, 1, '2017-09-17 11:45:22'),
(91, 2125, '2', -2.47645, 12, 0, '2017-09-17 11:45:22'),
(91, 2119, '4', -2.74448, 6, 0, '2017-09-17 11:45:22'),
(91, 2122, '4', 2.67874, 10, 1, '2017-09-17 11:45:22'),
(91, 2120, '2', 2.54205, 11, 1, '2017-09-17 11:45:22'),
(91, 2127, '2', -1.37273, 29, 0, '2017-09-17 11:45:22'),
(91, 2121, '3', 2.61218, 9, 1, '2017-09-17 11:45:22'),
(91, 2130, '3', -1.84111, 27, 0, '2017-09-17 11:45:22'),
(91, 2123, '3', -2.24148, 17, 0, '2017-09-17 11:45:22'),
(91, 2132, '1', -2.30408, 17, 0, '2017-09-17 11:45:22'),
(91, 2126, '1', 2.30134, 21, 1, '2017-09-17 11:45:22'),
(91, 2128, '0', 0, 7, -1, '2017-09-17 11:45:22'),
(91, 2129, '4', -2.53722, 12, 0, '2017-09-17 11:45:22'),
(91, 2124, '0', 0, 16, -1, '2017-09-17 11:45:22'),
(91, 2131, '2', -2.57552, 9, 0, '2017-09-17 11:45:23'),
(91, 2136, '1', 2.67272, 7, 1, '2017-09-17 11:45:23'),
(91, 2142, '4', -2.4474, 10, 0, '2017-09-17 11:45:23'),
(91, 2137, '2', -2.82346, 4, 0, '2017-09-17 11:45:23'),
(91, 2008, '4', 1.76333, 7, 1, '2017-09-17 11:45:23'),
(91, 1888, '1', 1.60207, 7, 1, '2017-09-17 11:45:23'),
(91, 2010, '1', 2.25333, 4, 1, '2017-09-17 11:45:23'),
(91, 2011, '4', -0.853333, 14, 0, '2017-09-17 11:45:23'),
(91, 679, '1', 1.33333, 8, 1, '2017-09-17 11:45:23'),
(91, 1996, '3', 1.61333, 8, 1, '2017-09-17 11:45:23'),
(91, 2033, '4', -0.244898, 20, 0, '2017-09-17 11:45:23'),
(91, 2031, '1', 1.08, 12, 1, '2017-09-17 11:45:23'),
(91, 680, '3', 0.309949, 19, 1, '2017-09-17 11:45:23'),
(91, 659, '3', 1.47, 6, 1, '2017-09-17 11:45:23'),
(91, 1911, '3', 2.15625, 9, 1, '2017-09-17 11:45:23'),
(91, 698, '4', 2.3, 7, 1, '2017-09-17 11:45:24'),
(91, 1919, '3', -2.48571, 12, 0, '2017-09-17 11:45:24'),
(91, 689, '3', -1.5, 15, 0, '2017-09-17 11:45:24'),
(91, 687, '1', -1.8, 12, 0, '2017-09-17 11:45:24'),
(91, 706, '4', 2.08333, 5, 1, '2017-09-17 11:45:24'),
(91, 1929, '2', 1.5, 17, 1, '2017-09-17 11:45:24'),
(91, 717, '4', 1.91667, 13, 1, '2017-09-17 11:45:24'),
(91, 664, '3', 2.20588, 9, 1, '2017-09-17 11:45:24'),
(91, 1927, '1', -1.6, 14, 0, '2017-09-17 11:45:24'),
(91, 1918, '4', -2.03571, 9, 0, '2017-09-17 11:45:24'),
(91, 1915, '3', 2.46429, 5, 1, '2017-09-17 11:45:24'),
(91, 1925, '1', 1.70455, 19, 1, '2017-09-17 11:45:24'),
(91, 2034, '3', -1.4, 16, 0, '2017-09-17 11:45:24'),
(91, 714, '1', 1.5, 17, 1, '2017-09-17 11:45:24'),
(91, 685, '3', -1.05, 13, 0, '2017-09-17 11:45:24'),
(91, 1912, '2', 2.46429, 5, 1, '2017-09-17 11:45:25'),
(91, 1921, '4', 2.2, 8, 1, '2017-09-17 11:45:25'),
(91, 1963, '2', 2.61218, 9, 1, '2017-09-17 11:45:25'),
(91, 1881, '2', 2.513, 7, 1, '2017-09-17 11:45:25'),
(91, 1936, '4', 2.67874, 5, 1, '2017-09-17 11:45:25'),
(91, 1945, '1', 1.97297, 14, 1, '2017-09-17 11:45:25'),
(91, 1889, '2', -2.25111, 14, 0, '2017-09-17 11:45:25'),
(91, 1947, '3', -1.08915, 25, 0, '2017-09-17 11:45:25'),
(91, 1950, '3', 2.25111, 14, 1, '2017-09-17 11:45:25'),
(91, 1957, '1', 2.40996, 14, 1, '2017-09-17 11:45:25'),
(91, 1954, '4', -1.22805, 31, 0, '2017-09-17 11:45:25'),
(91, 1934, '1', 2.28943, 10, 1, '2017-09-17 11:45:25'),
(91, 657, '1', 2.44397, 9, 1, '2017-09-17 11:45:25'),
(91, 693, '3', 1.97484, 17, 1, '2017-09-17 11:45:25'),
(91, 1970, '3', 2.59808, 8, 1, '2017-09-17 11:45:26'),
(91, 1964, '4', 2.37171, 15, 1, '2017-09-17 11:45:26'),
(91, 1967, '4', 2.64102, 9, 1, '2017-09-17 11:45:26'),
(91, 1999, '3', 2.6739, 9, 1, '2017-09-17 11:45:26'),
(91, 696, '0', 0, 10, -1, '2017-09-17 11:45:26'),
(91, 1993, '1', 2.0645, 17, 1, '2017-09-17 11:45:26'),
(91, 2002, '3', 2.56897, 9, 1, '2017-09-17 11:45:26'),
(91, 2005, '3', -2.7609, 6, 0, '2017-09-17 11:45:26'),
(91, 1994, '3', 2.51401, 10, 1, '2017-09-17 11:45:26'),
(91, 1998, '3', -2.38325, 14, 0, '2017-09-17 11:45:26'),
(91, 2000, '3', -2.6739, 8, 0, '2017-09-17 11:45:26'),
(91, 2001, '3', 2.6739, 8, 1, '2017-09-17 11:45:26'),
(91, 1883, '3', 2.42628, 14, 1, '2017-09-17 11:45:26'),
(91, 2004, '3', -2.4043, 17, 0, '2017-09-17 11:45:26'),
(91, 678, '4', 2.59284, 11, 1, '2017-09-17 11:45:26'),
(91, 668, '2', 2.27357, 18, 1, '2017-09-17 11:45:26'),
(91, 705, '0', 0, 3, -1, '2017-09-17 11:45:26'),
(91, 1903, '1', -2.55085, 10, 0, '2017-09-17 11:45:27'),
(91, 2003, '4', 2.52515, 14, 1, '2017-09-17 11:45:27'),
(91, 670, '2', 1.95064, 29, 1, '2017-09-17 11:45:27'),
(91, 662, '4', 2.75892, 8, 1, '2017-09-17 11:45:27'),
(91, 2019, '4', -2.68729, 9, 0, '2017-09-17 11:45:27'),
(91, 2012, '3', -2.13633, 23, 0, '2017-09-17 11:45:27'),
(91, 675, '1', 2.17975, 22, 1, '2017-09-17 11:45:27'),
(91, 1885, '1', -2.65158, 13, 0, '2017-09-17 11:45:27'),
(91, 1894, '1', -1.93318, 24, 0, '2017-09-17 11:45:27'),
(91, 2007, '1', 1.80617, 23, 1, '2017-09-17 11:45:27'),
(91, 1997, '3', 1.72305, 21, 1, '2017-09-17 11:45:27'),
(91, 666, '3', -2.4365, 13, 0, '2017-09-17 11:45:27'),
(91, 2006, '1', -2.10369, 20, 0, '2017-09-17 11:45:27'),
(91, 677, '2', 2.2191, 18, 1, '2017-09-17 11:45:28'),
(91, 1896, '1', 2.48584, 15, 1, '2017-09-17 11:45:28'),
(91, 2015, '3', -2.1201, 22, 0, '2017-09-17 11:45:28'),
(91, 1995, '3', -2.72413, 6, 0, '2017-09-17 11:45:28'),
(91, 2009, '1', 2.74383, 6, 1, '2017-09-17 11:45:28'),
(91, 2021, '3', 2.8331, 4, 1, '2017-09-17 11:45:28'),
(91, 708, '3', 2.52148, 13, 1, '2017-09-17 11:45:28'),
(91, 682, '3', 2.48255, 13, 1, '2017-09-17 11:45:28'),
(91, 661, '2', -2.74338, 8, 0, '2017-09-17 11:45:28'),
(91, 1900, '1', -2.45796, 18, 0, '2017-09-17 11:45:28'),
(91, 2020, '4', 2.42971, 15, 1, '2017-09-17 11:45:28'),
(91, 2014, '2', -2.56496, 18, 0, '2017-09-17 11:45:28'),
(91, 2022, '4', 2.60702, 11, 1, '2017-09-17 11:45:28'),
(91, 710, '2', -2.21042, 24, 0, '2017-09-17 11:45:28'),
(91, 1897, '3', -1.80761, 25, 0, '2017-09-17 11:45:28'),
(91, 2018, '2', 2.38325, 14, 1, '2017-09-17 11:45:29'),
(91, 2017, '0', 0, 11, -1, '2017-09-17 11:45:29'),
(91, 673, '2', -2.59315, 17, 0, '2017-09-17 11:45:29'),
(91, 2016, '1', 2.27357, 16, 1, '2017-09-17 11:45:29'),
(91, 2028, '4', 2.63625, 9, 1, '2017-09-17 11:45:29'),
(91, 2026, '2', 2.14723, 19, 1, '2017-09-17 11:45:29'),
(91, 707, '2', -2.66371, 15, 0, '2017-09-17 11:45:29'),
(91, 2025, '1', 2.74572, 7, 1, '2017-09-17 11:45:29'),
(91, 667, '0', 0, 5, -1, '2017-09-17 11:45:29'),
(91, 692, '4', 2.69787, 12, 1, '2017-09-17 11:45:29'),
(91, 681, '3', -1.10521, 19, 0, '2017-09-17 11:45:29'),
(91, 2027, '4', 2.69161, 10, 1, '2017-09-17 11:45:29'),
(91, 691, '0', 0, 32, -1, '2017-09-17 11:45:29'),
(91, 2030, '2', -2.2407, 21, 0, '2017-09-17 11:45:29'),
(91, 2023, '3', -2.67115, 10, 0, '2017-09-17 11:45:29'),
(91, 2029, '4', 2.19718, 17, 1, '2017-09-17 11:45:30'),
(91, 2024, '2', 2.3811, 17, 1, '2017-09-17 11:45:30'),
(91, 2037, '1', 2.3811, 15, 1, '2017-09-17 11:45:30'),
(91, 2036, '4', 2.82311, 5, 1, '2017-09-17 11:45:30'),
(91, 2044, '1', 2.78495, 8, 1, '2017-09-17 11:45:30'),
(91, 2040, '1', 2.5303, 12, 1, '2017-09-17 11:45:30'),
(91, 2043, '2', 2.53622, 16, 1, '2017-09-17 11:45:30'),
(91, 2035, '3', -2.64422, 10, 0, '2017-09-17 11:45:30'),
(91, 709, '2', -1.5913, 41, 0, '2017-09-17 11:45:30'),
(91, 2047, '1', 2.70534, 8, 1, '2017-09-17 11:45:30'),
(91, 2038, '4', -2.8147, 8, 0, '2017-09-17 11:45:30'),
(91, 2046, '2', -2.3811, 16, 0, '2017-09-17 11:45:30'),
(92, 1114, '3', -0.0075, 19, 0, '2017-09-17 11:45:31'),
(92, 2420, '4', -1.50521, 28, 0, '2017-09-17 11:45:31'),
(92, 2410, '3', -1.6875, 21, 0, '2017-09-17 11:45:31'),
(92, 1131, '4', -0.12, 16, 0, '2017-09-17 11:45:31'),
(92, 2413, '1', 1.23381, 33, 1, '2017-09-17 11:45:31'),
(92, 2411, '2', -1.11298, 43, 0, '2017-09-17 11:45:31'),
(92, 370, '0', -0.0075, 20, 0, '2017-09-17 11:45:31'),
(92, 2406, '1', -2.35692, 10, 0, '2017-09-17 11:45:31'),
(92, 2418, '2', 2.43, 8, 1, '2017-09-17 11:45:32'),
(92, 402, '1', -0.1875, 15, 0, '2017-09-17 11:45:32'),
(92, 1121, '2', -0.75, 10, 0, '2017-09-17 11:45:32'),
(92, 391, '0', -0.0075, 20, 0, '2017-09-17 11:45:32'),
(92, 384, '0', -0.0075, 20, 0, '2017-09-17 11:45:32'),
(92, 378, '2', -0.48, 12, 0, '2017-09-17 11:45:32'),
(92, 377, '4', -0.27, 14, 0, '2017-09-17 11:45:32'),
(92, 367, '4', -0.9075, 9, 0, '2017-09-17 11:45:32'),
(92, 368, '3', 0.3675, 13, 1, '2017-09-17 11:45:32'),
(92, 380, '2', -0.12, 16, 0, '2017-09-17 11:45:32'),
(92, 399, '1', 0.12, 16, 1, '2017-09-17 11:45:32'),
(92, 2429, '0', 0, 37, -1, '2017-09-17 11:45:32'),
(92, 2403, '2', 1.71259, 22, 1, '2017-09-17 11:45:32'),
(92, 1107, '4', 1.2675, 7, 1, '2017-09-17 11:45:32'),
(92, 1133, '3', 0.0075, 19, 1, '2017-09-17 11:45:32'),
(92, 1116, '4', 0.75, 10, 1, '2017-09-17 11:45:33'),
(92, 1122, '0', -0.0075, 20, 0, '2017-09-17 11:45:33'),
(92, 2422, '3', -1.35425, 42, 0, '2017-09-17 11:45:33'),
(92, 1120, '4', -0.27, 14, 0, '2017-09-17 11:45:33'),
(92, 1109, '3', 0.1875, 15, 1, '2017-09-17 11:45:33'),
(92, 401, '4', 0.6075, 11, 1, '2017-09-17 11:45:33'),
(92, 2414, '4', -1.95287, 17, 0, '2017-09-17 11:45:33'),
(92, 369, '2', 0.3675, 13, 1, '2017-09-17 11:45:33'),
(92, 2431, '4', 1.6875, 23, 1, '2017-09-17 11:45:33'),
(92, 379, '3', 0.3675, 13, 1, '2017-09-17 11:45:33'),
(92, 2404, '4', -2.04726, 16, 0, '2017-09-17 11:45:33'),
(92, 375, '1', 0.0075, 19, 1, '2017-09-17 11:45:33'),
(92, 398, '3', -0.6075, 11, 0, '2017-09-17 11:45:33'),
(92, 390, '4', 0.27, 14, 1, '2017-09-17 11:45:33'),
(92, 2416, '3', 2.47934, 8, 1, '2017-09-17 11:45:33'),
(92, 1130, '2', 0.27, 14, 1, '2017-09-17 11:45:34'),
(92, 366, '4', 1.2675, 7, 1, '2017-09-17 11:45:34'),
(92, 394, '4', -0.27, 14, 0, '2017-09-17 11:45:34'),
(92, 2400, '3', 2.05959, 12, 1, '2017-09-17 11:45:34'),
(92, 1110, '2', 0.75, 10, 1, '2017-09-17 11:45:34'),
(92, 2432, '1', -1.83372, 24, 0, '2017-09-17 11:45:34'),
(92, 364, '2', 1.2675, 7, 1, '2017-09-17 11:45:34'),
(92, 400, '1', -0.3675, 13, 0, '2017-09-17 11:45:34'),
(92, 387, '1', -0.27, 14, 0, '2017-09-17 11:45:34'),
(92, 385, '4', -0.48, 12, 0, '2017-09-17 11:45:34'),
(92, 2427, '4', 1.30021, 41, 1, '2017-09-17 11:45:34'),
(92, 374, '4', 0.03, 18, 1, '2017-09-17 11:45:34'),
(92, 393, '4', -0.6075, 11, 0, '2017-09-17 11:45:34'),
(92, 1136, '3', -0.27, 14, 0, '2017-09-17 11:45:34'),
(92, 1112, '2', -0.12, 16, 0, '2017-09-17 11:45:34'),
(92, 381, '1', 0.1875, 15, 1, '2017-09-17 11:45:35'),
(92, 386, '3', -0.27, 14, 0, '2017-09-17 11:45:35'),
(92, 397, '0', -0.0075, 20, 0, '2017-09-17 11:45:35'),
(92, 373, '0', -0.0075, 20, 0, '2017-09-17 11:45:35'),
(92, 2929, '4', 1.33333, 8, 1, '2017-09-17 11:45:35'),
(92, 1461, '3', 1.54395, 13, 1, '2017-09-17 11:45:35'),
(92, 1466, '2', 0.0972, 41, 1, '2017-09-17 11:45:35'),
(92, 3035, '2', 0.137755, 22, 1, '2017-09-17 11:45:35'),
(92, 1463, '2', 1.12965, 17, 1, '2017-09-17 11:45:35'),
(92, 1458, '4', -0.00925926, 34, 0, '2017-09-17 11:45:35'),
(92, 1457, '2', -1.57687, 11, 0, '2017-09-17 11:45:35'),
(92, 3051, '4', -0.110947, 21, 0, '2017-09-17 11:45:35'),
(92, 1455, '2', -1.92, 8, 0, '2017-09-17 11:45:36'),
(92, 3039, '1', 0.75, 13, 1, '2017-09-17 11:45:36'),
(92, 1454, '2', 0.835648, 17, 1, '2017-09-17 11:45:36'),
(92, 1459, '3', -1.36688, 13, 0, '2017-09-17 11:45:36'),
(92, 1449, '1', -0.421875, 25, 0, '2017-09-17 11:45:36'),
(92, 3044, '3', 0.1875, 18, 1, '2017-09-17 11:45:36'),
(92, 1462, '1', 0.6075, 22, 1, '2017-09-17 11:45:36');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(92, 1460, '1', 0.459357, 28, 1, '2017-09-17 11:45:36'),
(92, 1453, '4', -0.75, 25, 0, '2017-09-17 11:45:36'),
(92, 1452, '2', 1.80187, 9, 1, '2017-09-17 11:45:36'),
(92, 1464, '4', -1.50521, 14, 0, '2017-09-17 11:45:36'),
(92, 1451, '3', -0.231481, 26, 0, '2017-09-17 11:45:36'),
(92, 1467, '3', 0.403333, 38, 1, '2017-09-17 11:45:36'),
(92, 3004, '3', 1.92, 6, 1, '2017-09-17 11:45:36'),
(92, 1450, '1', -0.925926, 16, 0, '2017-09-17 11:45:36'),
(92, 1465, '1', 0.646684, 15, 1, '2017-09-17 11:45:37'),
(92, 1456, '1', 0.991875, 17, 1, '2017-09-17 11:45:37'),
(92, 1478, '2', 0.0675, 34, 1, '2017-09-17 11:45:37'),
(92, 3008, '2', 1.53061, 8, 1, '2017-09-17 11:45:37'),
(92, 1486, '4', -1.89824, 9, 0, '2017-09-17 11:45:37'),
(92, 1479, '1', -1.48915, 13, 0, '2017-09-17 11:45:37'),
(92, 1488, '2', 0.559401, 25, 1, '2017-09-17 11:45:37'),
(92, 1468, '2', 1.47, 12, 1, '2017-09-17 11:45:37'),
(92, 1474, '3', -0.89966, 19, 0, '2017-09-17 11:45:37'),
(92, 1471, '4', 1.02083, 25, 1, '2017-09-17 11:45:37'),
(92, 1485, '3', -1.20821, 19, 0, '2017-09-17 11:45:37'),
(92, 1470, '1', 1.3872, 16, 1, '2017-09-17 11:45:37'),
(92, 1477, '3', 0.695473, 28, 1, '2017-09-17 11:45:37'),
(92, 3000, '2', -0.130208, 19, 0, '2017-09-17 11:45:37'),
(92, 1491, '2', 1.85204, 9, 1, '2017-09-17 11:45:38'),
(92, 1476, '0', 0, 10, -1, '2017-09-17 11:45:38'),
(92, 1475, '4', -1.03355, 19, 0, '2017-09-17 11:45:38'),
(92, 1483, '2', -0.916205, 17, 0, '2017-09-17 11:45:38'),
(92, 2933, '4', -0.0833333, 20, 0, '2017-09-17 11:45:38'),
(92, 1487, '3', -1.27599, 16, 0, '2017-09-17 11:45:38'),
(92, 1469, '1', -1.57687, 11, 0, '2017-09-17 11:45:38'),
(92, 1482, '3', -0.892562, 20, 0, '2017-09-17 11:45:38'),
(92, 1484, '4', 1.63435, 11, 1, '2017-09-17 11:45:38'),
(92, 1480, '3', -1.53061, 12, 0, '2017-09-17 11:45:38'),
(92, 3002, '1', 0.443787, 16, 1, '2017-09-17 11:45:38'),
(92, 1481, '1', -1.2675, 14, 0, '2017-09-17 11:45:38'),
(92, 1473, '4', -0.8112, 24, 0, '2017-09-17 11:45:38'),
(92, 1472, '3', 1.08, 16, 1, '2017-09-17 11:45:38'),
(92, 3062, '2', -0.75, 16, 0, '2017-09-17 11:45:38'),
(92, 1497, '2', 0.0612245, 36, 1, '2017-09-17 11:45:39'),
(92, 1507, '1', 0.808802, 25, 1, '2017-09-17 11:45:39'),
(92, 2947, '3', 0.403333, 19, 1, '2017-09-17 11:45:39'),
(92, 3054, '1', -0.0133333, 28, 0, '2017-09-17 11:45:39'),
(92, 1495, '3', -1.14966, 16, 0, '2017-09-17 11:45:39'),
(92, 1489, '3', -0.170068, 32, 0, '2017-09-17 11:45:39'),
(92, 3076, '1', 0.563333, 17, 1, '2017-09-17 11:45:39'),
(92, 1492, '2', 0.892562, 20, 1, '2017-09-17 11:45:39'),
(92, 1490, '2', -1.79132, 10, 0, '2017-09-17 11:45:39'),
(92, 1496, '4', 1.58678, 12, 1, '2017-09-17 11:45:39'),
(92, 1506, '1', 0.8748, 23, 1, '2017-09-17 11:45:39'),
(92, 1503, '2', 0.958412, 20, 1, '2017-09-17 11:45:39'),
(92, 1501, '3', 0.683368, 23, 1, '2017-09-17 11:45:39'),
(92, 1504, '1', 0.676875, 42, 1, '2017-09-17 11:45:39'),
(92, 1494, '4', 1.29848, 13, 1, '2017-09-17 11:45:39'),
(92, 1499, '3', -0.958412, 20, 0, '2017-09-17 11:45:40'),
(92, 1498, '3', 0.255208, 34, 1, '2017-09-17 11:45:40'),
(92, 1493, '2', -0.1875, 30, 0, '2017-09-17 11:45:40'),
(92, 1502, '3', -0.886106, 21, 0, '2017-09-17 11:45:40'),
(92, 1505, '1', 1.36688, 26, 1, '2017-09-17 11:45:40'),
(92, 1500, '0', 0, 15, -1, '2017-09-17 11:45:40'),
(92, 1511, '0', 0, 25, -1, '2017-09-17 11:45:40'),
(92, 1526, '2', -0.9408, 22, 0, '2017-09-17 11:45:40'),
(92, 1514, '4', 2.12138, 7, 1, '2017-09-17 11:45:40'),
(92, 1518, '2', -1.2398, 15, 0, '2017-09-17 11:45:40'),
(92, 1513, '4', -1.88021, 10, 0, '2017-09-17 11:45:40'),
(92, 2146, '3', -0.137755, 22, 0, '2017-09-17 11:45:40'),
(92, 2144, '3', -1.59505, 13, 0, '2017-09-17 11:45:40'),
(92, 2154, '2', 0.453704, 22, 1, '2017-09-17 11:45:40'),
(92, 2145, '4', -0.0710059, 22, 0, '2017-09-17 11:45:40'),
(92, 2161, '1', -0.75, 17, 0, '2017-09-17 11:45:41'),
(92, 2159, '4', 0.157552, 37, 1, '2017-09-17 11:45:41'),
(92, 2180, '1', -1.2398, 10, 0, '2017-09-17 11:45:41'),
(92, 2160, '2', -1.47, 9, 0, '2017-09-17 11:45:41'),
(92, 2149, '2', -1.09903, 15, 0, '2017-09-17 11:45:41'),
(92, 2158, '1', 1.02083, 20, 1, '2017-09-17 11:45:41'),
(92, 2155, '3', -1.96599, 8, 0, '2017-09-17 11:45:41'),
(92, 2143, '4', 1.2675, 14, 1, '2017-09-17 11:45:41'),
(92, 2151, '4', -0.48, 30, 0, '2017-09-17 11:45:41'),
(92, 2150, '3', -1.86981, 8, 0, '2017-09-17 11:45:41'),
(92, 2156, '3', -1.2288, 18, 0, '2017-09-17 11:45:42'),
(92, 2147, '2', -1.20333, 22, 0, '2017-09-17 11:45:42'),
(92, 872, '4', -1.2675, 21, 0, '2017-09-17 11:45:42'),
(92, 345, '3', -1.61333, 16, 0, '2017-09-17 11:45:42'),
(92, 863, '2', 2.1412, 9, 1, '2017-09-17 11:45:42'),
(92, 857, '3', 0.563333, 34, 1, '2017-09-17 11:45:42'),
(92, 867, '3', 1.61333, 16, 1, '2017-09-17 11:45:42'),
(92, 865, '2', 2.1675, 9, 1, '2017-09-17 11:45:42'),
(92, 340, '3', 2.23172, 11, 1, '2017-09-17 11:45:42'),
(92, 326, '2', -1.47, 27, 0, '2017-09-17 11:45:42'),
(92, 874, '4', -1.53061, 16, 0, '2017-09-17 11:45:42'),
(92, 923, '4', 2.17911, 13, 1, '2017-09-17 11:45:42'),
(92, 855, '4', -1.5498, 18, 0, '2017-09-17 11:45:42'),
(92, 858, '2', -2.34083, 7, 0, '2017-09-17 11:45:42'),
(92, 346, '1', 0.75, 28, 1, '2017-09-17 11:45:42'),
(92, 864, '3', 1.54083, 17, 1, '2017-09-17 11:45:42'),
(92, 361, '1', 0.979592, 24, 1, '2017-09-17 11:45:43'),
(92, 871, '1', -1.93457, 13, 0, '2017-09-17 11:45:43'),
(92, 362, '4', -2.08333, 10, 0, '2017-09-17 11:45:43'),
(92, 856, '4', 2.21558, 9, 1, '2017-09-17 11:45:43'),
(92, 2401, '2', -2.43, 11, 0, '2017-09-17 11:45:43'),
(92, 868, '3', -2.05737, 11, 0, '2017-09-17 11:45:43'),
(92, 1125, '2', 1.08, 24, 1, '2017-09-17 11:45:43'),
(92, 859, '4', 1.78531, 16, 1, '2017-09-17 11:45:43'),
(92, 873, '2', 0.705234, 34, 1, '2017-09-17 11:45:43'),
(92, 1639, '4', 1.6875, 19, 1, '2017-09-17 11:45:43'),
(92, 310, '3', 1.8252, 11, 1, '2017-09-17 11:45:43'),
(92, 891, '1', 1.33333, 12, 1, '2017-09-17 11:45:43'),
(92, 307, '3', -1.6081, 15, 0, '2017-09-17 11:45:43'),
(92, 306, '3', 1.38138, 18, 1, '2017-09-17 11:45:43'),
(92, 875, '4', -1.92, 12, 0, '2017-09-17 11:45:44'),
(92, 881, '1', -2.1168, 16, 0, '2017-09-17 11:45:44'),
(92, 302, '4', -1.47, 27, 0, '2017-09-17 11:45:44'),
(92, 358, '1', -1.48315, 19, 0, '2017-09-17 11:45:44'),
(92, 305, '1', -1.49481, 20, 0, '2017-09-17 11:45:44'),
(92, 876, '1', -1.02083, 25, 0, '2017-09-17 11:45:44'),
(92, 357, '1', 1.47, 18, 1, '2017-09-17 11:45:44'),
(92, 309, '1', -2.1675, 9, 0, '2017-09-17 11:45:44'),
(92, 918, '1', -1.93001, 19, 0, '2017-09-17 11:45:44'),
(92, 890, '2', 1.22454, 13, 1, '2017-09-17 11:45:44'),
(92, 308, '1', -1.13204, 27, 0, '2017-09-17 11:45:44'),
(92, 304, '2', 1.17188, 21, 1, '2017-09-17 11:45:44'),
(92, 882, '4', 0.949219, 28, 1, '2017-09-17 11:45:44'),
(92, 887, '1', 2.37964, 7, 1, '2017-09-17 11:45:44'),
(92, 892, '3', -1.08, 12, 0, '2017-09-17 11:45:45'),
(92, 1683, '4', -0.826875, 57, 0, '2017-09-17 11:45:45'),
(92, 303, '2', 1.47, 21, 1, '2017-09-17 11:45:45'),
(92, 314, '3', 1.92, 10, 1, '2017-09-17 11:45:45'),
(92, 964, '4', 1.58678, 24, 1, '2017-09-17 11:45:45'),
(92, 969, '3', 2.08333, 14, 1, '2017-09-17 11:45:45'),
(92, 896, '4', 1.6875, 10, 1, '2017-09-17 11:45:45'),
(92, 912, '0', 0, 16, -1, '2017-09-17 11:45:45'),
(92, 910, '1', -1.89824, 18, 0, '2017-09-17 11:45:45'),
(92, 908, '0', 0, 4, -1, '2017-09-17 11:45:45'),
(92, 905, '3', -1.6875, 20, 0, '2017-09-17 11:45:45'),
(92, 903, '4', 2.08333, 16, 1, '2017-09-17 11:45:46'),
(92, 901, '2', 2.14438, 17, 1, '2017-09-17 11:45:46'),
(92, 895, '1', 1.09903, 15, 1, '2017-09-17 11:45:46'),
(92, 909, '4', 1.9683, 19, 1, '2017-09-17 11:45:46'),
(92, 315, '4', -0.998521, 22, 0, '2017-09-17 11:45:46'),
(92, 356, '1', 0.99449, 28, 1, '2017-09-17 11:45:46'),
(92, 911, '0', 0, 3, -1, '2017-09-17 11:45:46'),
(92, 869, '2', 1.04752, 27, 1, '2017-09-17 11:45:46'),
(92, 898, '4', -2.025, 13, 0, '2017-09-17 11:45:46'),
(92, 360, '4', -0.75, 33, 0, '2017-09-17 11:45:46'),
(92, 904, '4', -1.08, 28, 0, '2017-09-17 11:45:46'),
(92, 893, '3', 0, 36, 1, '2017-09-17 11:45:46'),
(92, 963, '1', 0.561668, 59, 1, '2017-09-17 11:45:47'),
(92, 899, '1', -1.83105, 21, 0, '2017-09-17 11:45:47'),
(92, 907, '2', 1.7415, 20, 1, '2017-09-17 11:45:47'),
(92, 312, '1', -0.4332, 31, 0, '2017-09-17 11:45:47'),
(92, 900, '4', -2.26573, 11, 0, '2017-09-17 11:45:47'),
(92, 902, '3', -1.27599, 32, 0, '2017-09-17 11:45:47'),
(92, 894, '4', -0.210208, 25, 0, '2017-09-17 11:45:47'),
(92, 897, '2', 1.17188, 15, 1, '2017-09-17 11:45:47'),
(92, 316, '4', -1.61792, 17, 0, '2017-09-17 11:45:47'),
(92, 317, '2', -1.6875, 15, 0, '2017-09-17 11:45:47'),
(92, 313, '2', -1.81481, 12, 0, '2017-09-17 11:45:47'),
(92, 880, '1', 1.93457, 13, 1, '2017-09-17 11:45:47'),
(92, 926, '1', 1.3068, 34, 1, '2017-09-17 11:45:48'),
(92, 1195, '3', -0.48, 12, 0, '2017-09-17 11:45:48'),
(92, 1216, '2', -1.33333, 8, 0, '2017-09-17 11:45:48'),
(92, 1177, '2', 0.892562, 10, 1, '2017-09-17 11:45:48'),
(92, 1270, '3', -0.511815, 27, 0, '2017-09-17 11:45:48'),
(92, 1297, '3', 1.02083, 25, 1, '2017-09-17 11:45:48'),
(92, 1291, '1', -0.0675, 17, 0, '2017-09-17 11:45:48'),
(92, 1185, '1', -0.0344388, 25, 0, '2017-09-17 11:45:48'),
(92, 1173, '2', 0.1875, 15, 1, '2017-09-17 11:45:48'),
(92, 1190, '4', 0.75, 14, 1, '2017-09-17 11:45:48'),
(92, 1186, '4', -0.0612245, 24, 0, '2017-09-17 11:45:48'),
(92, 1198, '3', -0.0075, 19, 0, '2017-09-17 11:45:48'),
(92, 1276, '1', 0.65918, 17, 1, '2017-09-17 11:45:48'),
(92, 1184, '4', 0.630208, 13, 1, '2017-09-17 11:45:48'),
(92, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:45:49'),
(92, 1194, '1', 0.75, 14, 1, '2017-09-17 11:45:49'),
(92, 1172, '2', -0.27, 14, 0, '2017-09-17 11:45:49'),
(92, 1203, '3', 0.0833333, 25, 1, '2017-09-17 11:45:49'),
(92, 1218, '3', -0.9075, 9, 0, '2017-09-17 11:45:49'),
(92, 1292, '2', -1.33333, 10, 0, '2017-09-17 11:45:49'),
(92, 1197, '3', -0.880208, 11, 0, '2017-09-17 11:45:49'),
(92, 1263, '3', -0.9075, 18, 0, '2017-09-17 11:45:49'),
(92, 1170, '2', 1.33333, 8, 1, '2017-09-17 11:45:49'),
(92, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:45:49'),
(92, 1169, '2', 0.421875, 15, 1, '2017-09-17 11:45:49'),
(92, 1196, '4', 0.421875, 15, 1, '2017-09-17 11:45:49'),
(92, 1174, '3', 0.536982, 15, 1, '2017-09-17 11:45:49'),
(92, 1183, '2', 0.619835, 12, 1, '2017-09-17 11:45:49'),
(92, 1210, '1', 0, 24, 1, '2017-09-17 11:45:50'),
(92, 1200, '2', -0.453704, 22, 0, '2017-09-17 11:45:50'),
(92, 1191, '3', 0.0612245, 24, 1, '2017-09-17 11:45:50'),
(92, 1287, '4', -0.046875, 42, 0, '2017-09-17 11:45:50'),
(92, 1268, '3', -1.02083, 20, 0, '2017-09-17 11:45:50'),
(92, 1220, '2', 0.646684, 15, 1, '2017-09-17 11:45:50'),
(92, 1284, '1', -0.3675, 13, 0, '2017-09-17 11:45:50'),
(92, 1269, '3', -0.292969, 33, 0, '2017-09-17 11:45:50'),
(92, 1175, '4', 0.0732422, 27, 1, '2017-09-17 11:45:50'),
(92, 1282, '3', 0.213333, 22, 1, '2017-09-17 11:45:50'),
(92, 1257, '3', -0.880208, 22, 0, '2017-09-17 11:45:50'),
(92, 1189, '3', 0.309949, 19, 1, '2017-09-17 11:45:50'),
(92, 1202, '1', 0.0578704, 31, 1, '2017-09-17 11:45:50'),
(92, 1199, '2', -0.0263672, 29, 0, '2017-09-17 11:45:50'),
(92, 1294, '3', 0.1875, 18, 1, '2017-09-17 11:45:50'),
(92, 1265, '0', 0, 6, -1, '2017-09-17 11:45:51'),
(92, 1219, '3', 0.154959, 17, 1, '2017-09-17 11:45:51'),
(92, 1217, '3', 0.12, 16, 1, '2017-09-17 11:45:51'),
(92, 1281, '1', -0.163333, 23, 0, '2017-09-17 11:45:51'),
(92, 1171, '4', 0.9075, 9, 1, '2017-09-17 11:45:51'),
(92, 1293, '2', 0.046875, 21, 1, '2017-09-17 11:45:51'),
(92, 1208, '2', -0.6348, 27, 0, '2017-09-17 11:45:51'),
(92, 1295, '3', -0.1875, 18, 0, '2017-09-17 11:45:51'),
(92, 1229, '4', 0.544239, 31, 1, '2017-09-17 11:45:51'),
(92, 172, '3', -2.2376, 15, 0, '2017-09-17 11:45:51'),
(92, 1298, '4', -0.403333, 38, 0, '2017-09-17 11:45:51'),
(92, 1187, '0', 0, 13, -1, '2017-09-17 11:45:51'),
(92, 1275, '2', -1.4856, 16, 0, '2017-09-17 11:45:51'),
(92, 1283, '1', -0.0833333, 20, 0, '2017-09-17 11:45:51'),
(92, 1188, '3', -0.75, 14, 0, '2017-09-17 11:45:51'),
(92, 1204, '4', 0.333333, 32, 1, '2017-09-17 11:45:52'),
(92, 171, '1', 0.316875, 54, 1, '2017-09-17 11:45:52'),
(92, 1299, '1', -1.79132, 15, 0, '2017-09-17 11:45:52'),
(92, 1250, '2', -1.40083, 19, 0, '2017-09-17 11:45:52'),
(92, 1296, '1', -0.1875, 18, 0, '2017-09-17 11:45:52'),
(92, 1176, '4', 0.00382653, 27, 1, '2017-09-17 11:45:52'),
(92, 1286, '0', 0, 7, -1, '2017-09-17 11:45:52'),
(92, 1206, '3', -0.240833, 43, 0, '2017-09-17 11:45:52'),
(92, 1289, '1', -0.421875, 25, 0, '2017-09-17 11:45:52'),
(92, 1264, '4', 1.33333, 22, 1, '2017-09-17 11:45:52'),
(92, 173, '4', 2.3232, 12, 1, '2017-09-17 11:45:52'),
(92, 1209, '2', 0.5808, 28, 1, '2017-09-17 11:45:52'),
(92, 1288, '3', -2.2376, 9, 0, '2017-09-17 11:45:52'),
(92, 1240, '3', 2.1168, 8, 1, '2017-09-17 11:45:52'),
(92, 1246, '3', 2.7075, 3, 1, '2017-09-17 11:45:53'),
(92, 170, '3', -2.5392, 8, 0, '2017-09-17 11:45:53'),
(92, 1285, '0', -0.00333333, 30, 0, '2017-09-17 11:45:53'),
(92, 1256, '3', 1.53061, 16, 1, '2017-09-17 11:45:53'),
(93, 1125, '0', -1.61333, 17, 0, '2017-09-17 11:45:54'),
(93, 865, '0', -2.34083, 8, 0, '2017-09-17 11:45:54'),
(93, 855, '0', -2.46387, 7, 0, '2017-09-17 11:45:54'),
(93, 598, '4', 1.84083, 13, 1, '2017-09-17 11:45:54'),
(93, 1301, '2', -2.13574, 10, 0, '2017-09-17 11:45:54'),
(93, 615, '2', 2.08333, 10, 1, '2017-09-17 11:45:54'),
(93, 1303, '1', 1.6875, 15, 1, '2017-09-17 11:45:54'),
(93, 1310, '3', -2.14793, 8, 0, '2017-09-17 11:45:54'),
(93, 1308, '4', -2.00083, 11, 0, '2017-09-17 11:45:54'),
(93, 599, '4', -0.800833, 29, 0, '2017-09-17 11:45:54'),
(93, 594, '3', 1.8252, 11, 1, '2017-09-17 11:45:54'),
(93, 595, '4', 1.9571, 10, 1, '2017-09-17 11:45:54'),
(93, 596, '4', -1.4856, 16, 0, '2017-09-17 11:45:54'),
(93, 606, '4', -2.34083, 7, 0, '2017-09-17 11:45:54'),
(93, 403, '0', 0, 10, -1, '2017-09-17 11:45:55'),
(93, 597, '2', 1.90226, 11, 1, '2017-09-17 11:45:55'),
(93, 613, '3', -2.43, 6, 0, '2017-09-17 11:45:55'),
(93, 1311, '2', -2.43, 5, 0, '2017-09-17 11:45:55'),
(93, 593, '0', 0, 1, -1, '2017-09-17 11:45:55'),
(93, 996, '0', 0, 1, -1, '2017-09-17 11:45:55'),
(93, 1317, '1', -2.34083, 7, 0, '2017-09-17 11:45:55'),
(93, 605, '1', -2.52083, 5, 0, '2017-09-17 11:45:55'),
(93, 853, '4', -2.80333, 2, 0, '2017-09-17 11:45:55'),
(93, 1461, '3', 1.94093, 9, 1, '2017-09-17 11:45:55'),
(93, 1466, '0', 0, 12, -1, '2017-09-17 11:45:55'),
(93, 1454, '2', 0.925926, 16, 1, '2017-09-17 11:45:55'),
(93, 3039, '1', 0.869823, 12, 1, '2017-09-17 11:45:55'),
(93, 1467, '1', -0.653333, 32, 0, '2017-09-17 11:45:55'),
(93, 1449, '0', 0, 17, -1, '2017-09-17 11:45:56'),
(93, 1462, '0', 0, 8, -1, '2017-09-17 11:45:56'),
(93, 3035, '2', 1.85204, 6, 1, '2017-09-17 11:45:56'),
(93, 3044, '3', 1.50521, 7, 1, '2017-09-17 11:45:56'),
(93, 1460, '3', -1.83743, 10, 0, '2017-09-17 11:45:56'),
(93, 1463, '2', 1.89824, 9, 1, '2017-09-17 11:45:56'),
(93, 1450, '1', -1.33333, 12, 0, '2017-09-17 11:45:56'),
(93, 1464, '1', -2.1888, 7, 0, '2017-09-17 11:45:56'),
(93, 1451, '1', 0.453704, 22, 1, '2017-09-17 11:45:56'),
(93, 1459, '3', -2.04187, 7, 0, '2017-09-17 11:45:56'),
(93, 1457, '3', -2.1675, 6, 0, '2017-09-17 11:45:56'),
(93, 1452, '2', 1.80187, 9, 1, '2017-09-17 11:45:56'),
(93, 1465, '1', 1.53061, 8, 1, '2017-09-17 11:45:56'),
(93, 1458, '1', -2.52083, 3, 0, '2017-09-17 11:45:56'),
(93, 2929, '2', -1.50521, 7, 0, '2017-09-17 11:45:56'),
(93, 1455, '2', -1.92, 8, 0, '2017-09-17 11:45:57'),
(93, 3051, '2', -0.639053, 14, 0, '2017-09-17 11:45:57'),
(93, 3004, '2', -1.76333, 7, 0, '2017-09-17 11:45:57'),
(93, 1453, '3', -2.0172, 9, 0, '2017-09-17 11:45:57'),
(93, 1456, '2', -1.47, 12, 0, '2017-09-17 11:45:57'),
(93, 1469, '1', -2.04187, 7, 0, '2017-09-17 11:45:57'),
(93, 1194, '0', -0.0153061, 27, 0, '2017-09-17 11:45:57'),
(93, 1292, '0', -1.33333, 11, 0, '2017-09-17 11:45:57'),
(93, 1196, '4', 1.33333, 8, 1, '2017-09-17 11:45:57'),
(93, 1261, '3', 0.00831025, 36, 1, '2017-09-17 11:45:57'),
(93, 1173, '2', 0.12, 16, 1, '2017-09-17 11:45:57'),
(93, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:45:57'),
(93, 1216, '2', -0.421875, 15, 0, '2017-09-17 11:45:58'),
(93, 1270, '0', 0, 17, -1, '2017-09-17 11:45:58'),
(93, 1183, '0', 0, 1, -1, '2017-09-17 11:45:58'),
(93, 1174, '0', 0, 4, -1, '2017-09-17 11:45:58'),
(93, 1185, '2', -2.20408, 4, 0, '2017-09-17 11:45:58'),
(93, 1291, '1', -0.6075, 11, 0, '2017-09-17 11:45:58'),
(93, 1297, '3', 1.84083, 13, 1, '2017-09-17 11:45:58'),
(93, 1197, '2', -0.75, 12, 0, '2017-09-17 11:45:58'),
(93, 1218, '1', -1.6875, 5, 0, '2017-09-17 11:45:58'),
(93, 1190, '4', 2.02423, 5, 1, '2017-09-17 11:45:58'),
(93, 1227, '2', -0.0833333, 20, 0, '2017-09-17 11:45:58'),
(93, 1177, '2', 0.892562, 10, 1, '2017-09-17 11:45:58'),
(93, 1198, '2', -1.2675, 7, 0, '2017-09-17 11:45:58'),
(93, 1186, '2', -2.58673, 2, 0, '2017-09-17 11:45:59'),
(93, 1169, '2', 1.33333, 8, 1, '2017-09-17 11:45:59'),
(93, 1172, '2', -0.9075, 9, 0, '2017-09-17 11:45:59'),
(93, 1184, '4', 0.630208, 13, 1, '2017-09-17 11:45:59'),
(93, 1203, '4', -0.213333, 22, 0, '2017-09-17 11:45:59'),
(93, 1276, '4', -2.13574, 5, 0, '2017-09-17 11:45:59'),
(93, 1263, '4', -1.6875, 10, 0, '2017-09-17 11:45:59'),
(93, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:45:59'),
(93, 1170, '4', -1.02083, 10, 0, '2017-09-17 11:45:59'),
(93, 1200, '4', 0.925926, 16, 1, '2017-09-17 11:45:59'),
(93, 1175, '4', 2.63672, 2, 1, '2017-09-17 11:45:59'),
(93, 1287, '4', -1.41797, 15, 0, '2017-09-17 11:45:59'),
(93, 1219, '3', 1.39463, 7, 1, '2017-09-17 11:45:59'),
(93, 1265, '3', -2.24667, 7, 0, '2017-09-17 11:45:59'),
(93, 1191, '3', 1.6875, 7, 1, '2017-09-17 11:45:59'),
(93, 1284, '1', -0.48, 12, 0, '2017-09-17 11:46:00'),
(93, 1294, '3', 1.6875, 6, 1, '2017-09-17 11:46:00'),
(93, 1220, '3', -1.6875, 7, 0, '2017-09-17 11:46:00'),
(93, 1268, '2', -1.41797, 15, 0, '2017-09-17 11:46:00'),
(93, 1208, '2', -2.0172, 9, 0, '2017-09-17 11:46:00'),
(93, 1281, '2', -1.92, 6, 0, '2017-09-17 11:46:00'),
(93, 679, '1', 0.00520833, 23, 1, '2017-09-17 11:46:00'),
(93, 676, '1', -1.2398, 10, 0, '2017-09-17 11:46:00'),
(93, 706, '2', -1.76333, 7, 0, '2017-09-17 11:46:00'),
(93, 712, '2', -0.880208, 11, 0, '2017-09-17 11:46:00'),
(93, 699, '2', -1.47, 6, 0, '2017-09-17 11:46:00'),
(93, 663, '1', 1.2398, 10, 1, '2017-09-17 11:46:00'),
(93, 1991, '1', -1.47, 9, 0, '2017-09-17 11:46:00'),
(93, 1996, '2', -0.163333, 23, 0, '2017-09-17 11:46:00'),
(93, 680, '3', 0.244898, 20, 1, '2017-09-17 11:46:01'),
(93, 2011, '3', -1.20333, 11, 0, '2017-09-17 11:46:01'),
(93, 659, '3', 0.75, 10, 1, '2017-09-17 11:46:01'),
(93, 1985, '4', 1.5498, 9, 1, '2017-09-17 11:46:01'),
(93, 2031, '1', 1.33333, 10, 1, '2017-09-17 11:46:01'),
(93, 2033, '3', 0.0344388, 25, 1, '2017-09-17 11:46:01'),
(93, 703, '0', 0, 8, -1, '2017-09-17 11:46:01'),
(93, 716, '3', 0.998521, 11, 1, '2017-09-17 11:46:01'),
(93, 2013, '1', -1.47, 9, 0, '2017-09-17 11:46:01'),
(93, 713, '3', 0.75, 13, 1, '2017-09-17 11:46:01'),
(93, 2008, '4', 1.76333, 7, 1, '2017-09-17 11:46:01'),
(93, 2010, '1', 1.47, 9, 1, '2017-09-17 11:46:01'),
(93, 658, '0', 0, 5, -1, '2017-09-17 11:46:01'),
(93, 1888, '1', 0.159763, 20, 1, '2017-09-17 11:46:01'),
(93, 690, '1', -0.0675, 17, 0, '2017-09-17 11:46:01'),
(93, 687, '0', 0, 5, -1, '2017-09-17 11:46:02'),
(93, 685, '1', -1.6875, 5, 0, '2017-09-17 11:46:02'),
(93, 1917, '4', -0.00382653, 27, 0, '2017-09-17 11:46:02'),
(93, 1920, '2', 1.98047, 6, 1, '2017-09-17 11:46:02'),
(93, 2034, '4', 0.653333, 16, 1, '2017-09-17 11:46:02'),
(93, 2042, '1', -0.84668, 15, 0, '2017-09-17 11:46:02'),
(93, 1904, '1', 1.92, 6, 1, '2017-09-17 11:46:02'),
(93, 1929, '1', -2.18253, 5, 0, '2017-09-17 11:46:02'),
(93, 1892, '1', -2.14793, 4, 0, '2017-09-17 11:46:02'),
(93, 1930, '1', -2.67593, 3, 0, '2017-09-17 11:46:02'),
(93, 714, '1', 0.508651, 20, 1, '2017-09-17 11:46:02'),
(93, 1912, '1', -1.10587, 11, 0, '2017-09-17 11:46:02'),
(93, 1918, '1', -1.53061, 8, 0, '2017-09-17 11:46:02'),
(93, 1915, '1', -1.38138, 9, 0, '2017-09-17 11:46:03'),
(93, 1909, '2', 2.13574, 5, 1, '2017-09-17 11:46:03'),
(93, 1911, '2', -2.46387, 3, 0, '2017-09-17 11:46:03'),
(93, 1927, '2', 2.08333, 5, 1, '2017-09-17 11:46:03'),
(93, 665, '2', -2.25333, 4, 0, '2017-09-17 11:46:03'),
(93, 1922, '2', -0.27, 21, 0, '2017-09-17 11:46:03'),
(93, 1906, '2', 2.43, 3, 1, '2017-09-17 11:46:03'),
(93, 698, '2', -2.08333, 5, 0, '2017-09-17 11:46:03'),
(93, 1880, '1', 1.75433, 8, 1, '2017-09-17 11:46:03'),
(93, 689, '1', -1.08, 12, 0, '2017-09-17 11:46:03'),
(93, 1926, '1', -0.237305, 23, 0, '2017-09-17 11:46:03'),
(93, 1914, '1', -1.85204, 6, 0, '2017-09-17 11:46:03'),
(93, 717, '2', -1.81481, 8, 0, '2017-09-17 11:46:03'),
(94, 373, '0', -0.0075, 20, 0, '2017-09-17 11:46:04'),
(94, 387, '0', -0.0075, 20, 0, '2017-09-17 11:46:04'),
(94, 384, '0', -0.0075, 20, 0, '2017-09-17 11:46:04'),
(94, 1120, '4', -1.2675, 7, 0, '2017-09-17 11:46:04'),
(94, 1138, '1', -0.03, 18, 0, '2017-09-17 11:46:04'),
(94, 2427, '4', 0.500208, 71, 1, '2017-09-17 11:46:04'),
(94, 381, '0', -0.0075, 20, 0, '2017-09-17 11:46:04'),
(94, 1112, '1', -0.48, 12, 0, '2017-09-17 11:46:05'),
(94, 394, '4', -0.0075, 19, 0, '2017-09-17 11:46:05'),
(94, 396, '0', -0.0075, 20, 0, '2017-09-17 11:46:05'),
(94, 2431, '2', -2.10149, 15, 0, '2017-09-17 11:46:05'),
(94, 369, '2', 1.2675, 7, 1, '2017-09-17 11:46:05'),
(94, 376, '1', -0.1875, 15, 0, '2017-09-17 11:46:05'),
(94, 380, '1', 0.0075, 19, 1, '2017-09-17 11:46:05'),
(94, 374, '4', 0.3675, 13, 1, '2017-09-17 11:46:05'),
(94, 388, '0', -0.0075, 20, 0, '2017-09-17 11:46:05'),
(94, 401, '2', -0.3675, 13, 0, '2017-09-17 11:46:05'),
(94, 1117, '2', 1.08, 8, 1, '2017-09-17 11:46:05'),
(94, 392, '0', -0.0075, 20, 0, '2017-09-17 11:46:05'),
(94, 383, '1', 0, 20, 0, '2017-09-17 11:46:05'),
(94, 368, '3', 1.08, 8, 1, '2017-09-17 11:46:06'),
(94, 397, '0', -0.0075, 20, 0, '2017-09-17 11:46:06'),
(94, 386, '0', -0.0075, 20, 0, '2017-09-17 11:46:06'),
(94, 378, '4', -0.12, 16, 0, '2017-09-17 11:46:06'),
(94, 2422, '1', 0.0065918, 122, 1, '2017-09-17 11:46:06'),
(94, 1121, '2', -0.0075, 19, 0, '2017-09-17 11:46:06'),
(94, 1140, '1', 0.1875, 15, 1, '2017-09-17 11:46:06'),
(94, 372, '2', -0.3675, 13, 0, '2017-09-17 11:46:06'),
(94, 1139, '2', 0.1875, 15, 1, '2017-09-17 11:46:06'),
(94, 2414, '3', 0.348657, 58, 1, '2017-09-17 11:46:06'),
(94, 2404, '1', 1.27599, 32, 1, '2017-09-17 11:46:06'),
(94, 371, '0', -0.0075, 20, 0, '2017-09-17 11:46:07'),
(94, 400, '2', 0, 20, 0, '2017-09-17 11:46:07'),
(94, 1110, '2', 1.08, 8, 1, '2017-09-17 11:46:07'),
(94, 1115, '4', -0.0675, 17, 0, '2017-09-17 11:46:07'),
(94, 1136, '0', -0.0075, 20, 0, '2017-09-17 11:46:07'),
(94, 391, '0', -0.0075, 20, 0, '2017-09-17 11:46:07'),
(94, 2410, '1', -0.357568, 55, 0, '2017-09-17 11:46:07'),
(94, 1130, '1', 0, 20, 0, '2017-09-17 11:46:07'),
(94, 1104, '0', -0.0075, 20, 0, '2017-09-17 11:46:07'),
(94, 1107, '4', 1.6875, 5, 1, '2017-09-17 11:46:07'),
(94, 375, '1', 0.48, 12, 1, '2017-09-17 11:46:07'),
(94, 399, '0', -0.0075, 20, 0, '2017-09-17 11:46:07'),
(94, 2419, '4', -0.255208, 85, 0, '2017-09-17 11:46:08'),
(94, 379, '0', -0.0075, 20, 0, '2017-09-17 11:46:08'),
(94, 2411, '1', -0.922562, 49, 0, '2017-09-17 11:46:08'),
(94, 377, '0', -0.0075, 20, 0, '2017-09-17 11:46:08'),
(94, 1109, '0', -0.0075, 20, 0, '2017-09-17 11:46:08'),
(94, 1122, '4', 0.9075, 9, 1, '2017-09-17 11:46:08'),
(94, 2429, '2', -2.02423, 25, 0, '2017-09-17 11:46:08'),
(94, 366, '4', 0.1875, 15, 1, '2017-09-17 11:46:08'),
(94, 382, '4', 0.75, 10, 1, '2017-09-17 11:46:08'),
(94, 390, '4', 0.0075, 19, 1, '2017-09-17 11:46:08'),
(94, 1114, '4', -0.27, 14, 0, '2017-09-17 11:46:08'),
(94, 1133, '3', 0.0075, 19, 1, '2017-09-17 11:46:08'),
(94, 389, '3', -0.3675, 13, 0, '2017-09-17 11:46:08'),
(94, 2406, '1', -2.06444, 15, 0, '2017-09-17 11:46:09'),
(94, 2400, '3', 1.78531, 16, 1, '2017-09-17 11:46:09'),
(94, 393, '0', -0.0075, 20, 0, '2017-09-17 11:46:09'),
(94, 2418, '2', 2.63672, 5, 1, '2017-09-17 11:46:09'),
(94, 364, '2', 0.27, 14, 1, '2017-09-17 11:46:09'),
(94, 2416, '3', 2.73347, 4, 1, '2017-09-17 11:46:09'),
(94, 370, '1', -0.03, 18, 0, '2017-09-17 11:46:09'),
(94, 2403, '2', 2.73926, 4, 1, '2017-09-17 11:46:09'),
(94, 1157, '1', 1.5, 10, 1, '2017-09-17 11:46:09'),
(94, 2457, '2', 1.42742, 65, 1, '2017-09-17 11:46:09'),
(94, 601, '4', 0.979592, 24, 1, '2017-09-17 11:46:09'),
(94, 599, '1', 0.0833333, 50, 1, '2017-09-17 11:46:09'),
(94, 613, '4', -1.61333, 16, 0, '2017-09-17 11:46:09'),
(94, 996, '4', -1.3872, 16, 0, '2017-09-17 11:46:10'),
(94, 595, '3', -0.134246, 41, 0, '2017-09-17 11:46:10'),
(94, 597, '1', -1.1893, 20, 0, '2017-09-17 11:46:10'),
(94, 615, '3', -0.853333, 28, 0, '2017-09-17 11:46:10'),
(94, 1310, '3', -1.20821, 19, 0, '2017-09-17 11:46:10'),
(94, 604, '4', -1.76333, 14, 0, '2017-09-17 11:46:10'),
(94, 1091, '2', -1.54083, 17, 0, '2017-09-17 11:46:10'),
(94, 1303, '1', 1.76333, 14, 1, '2017-09-17 11:46:10'),
(94, 852, '2', -0.853333, 28, 0, '2017-09-17 11:46:10'),
(94, 624, '1', 0.0675, 51, 1, '2017-09-17 11:46:10'),
(94, 619, '1', -0.27, 42, 0, '2017-09-17 11:46:10'),
(94, 1318, '2', 2.20408, 8, 1, '2017-09-17 11:46:10'),
(94, 853, '0', 0, 20, -1, '2017-09-17 11:46:10'),
(94, 1317, '3', 1.84083, 13, 1, '2017-09-17 11:46:10'),
(94, 603, '1', 1.77515, 12, 1, '2017-09-17 11:46:11'),
(94, 602, '3', -0.0065918, 61, 0, '2017-09-17 11:46:11'),
(94, 596, '2', -0.00925926, 51, 0, '2017-09-17 11:46:11'),
(94, 850, '3', 1.40083, 19, 1, '2017-09-17 11:46:11'),
(94, 605, '0', 0, 11, -1, '2017-09-17 11:46:11'),
(94, 622, '1', -1.33333, 20, 0, '2017-09-17 11:46:11'),
(94, 403, '4', 1.33333, 20, 1, '2017-09-17 11:46:11'),
(94, 606, '3', 1.08, 24, 1, '2017-09-17 11:46:11'),
(94, 611, '2', -1.3872, 16, 0, '2017-09-17 11:46:11'),
(94, 594, '3', 2.2188, 7, 1, '2017-09-17 11:46:11'),
(94, 854, '1', 2.58673, 5, 1, '2017-09-17 11:46:11'),
(94, 614, '1', -1.56481, 15, 0, '2017-09-17 11:46:11'),
(94, 1089, '4', -2.1675, 9, 0, '2017-09-17 11:46:11'),
(94, 1124, '3', -1.47, 18, 0, '2017-09-17 11:46:11'),
(94, 593, '1', 1.6875, 15, 1, '2017-09-17 11:46:11'),
(94, 609, '1', -0.100833, 49, 0, '2017-09-17 11:46:12'),
(94, 607, '1', -0.00382653, 54, 0, '2017-09-17 11:46:12'),
(94, 598, '4', 2.1675, 9, 1, '2017-09-17 11:46:12'),
(94, 1308, '3', 2.1675, 9, 1, '2017-09-17 11:46:12'),
(94, 1301, '3', 0.143555, 50, 1, '2017-09-17 11:46:12'),
(94, 600, '3', 2.29688, 7, 1, '2017-09-17 11:46:12'),
(94, 1311, '4', 0.8748, 23, 1, '2017-09-17 11:46:12'),
(94, 1325, '1', 0.860969, 26, 1, '2017-09-17 11:46:12'),
(94, 1341, '3', -1.6875, 15, 0, '2017-09-17 11:46:12'),
(94, 1329, '3', 2.08333, 10, 1, '2017-09-17 11:46:12'),
(94, 1331, '2', 1.6875, 10, 1, '2017-09-17 11:46:12'),
(94, 1321, '3', 1.92188, 23, 1, '2017-09-17 11:46:12'),
(94, 1103, '4', -1, 48, 0, '2017-09-17 11:46:13'),
(94, 1327, '3', 0.12, 48, 1, '2017-09-17 11:46:13'),
(94, 1328, '2', -0.65, 47, 0, '2017-09-17 11:46:13'),
(94, 1324, '3', 2.45455, 12, 1, '2017-09-17 11:46:13'),
(94, 1113, '2', -2.5, 11, 0, '2017-09-17 11:46:13'),
(94, 1090, '4', -2.15, 17, 0, '2017-09-17 11:46:13'),
(94, 1307, '2', 1.62197, 18, 1, '2017-09-17 11:46:13'),
(94, 1322, '3', 1.26562, 37, 1, '2017-09-17 11:46:13'),
(94, 1337, '3', 1.35938, 35, 1, '2017-09-17 11:46:13'),
(94, 995, '1', -2.25, 15, 0, '2017-09-17 11:46:13'),
(94, 1332, '3', 2.1, 18, 1, '2017-09-17 11:46:13'),
(94, 1326, '1', 1.96552, 20, 1, '2017-09-17 11:46:13'),
(94, 1335, '2', 2.57143, 8, 1, '2017-09-17 11:46:13'),
(94, 1106, '1', -2.05, 19, 0, '2017-09-17 11:46:13'),
(94, 1323, '1', -0.421875, 55, 0, '2017-09-17 11:46:13'),
(94, 1339, '3', -1.45, 31, 0, '2017-09-17 11:46:14'),
(94, 1334, '4', 2.55, 9, 1, '2017-09-17 11:46:14'),
(94, 1312, '1', -2.13636, 19, 0, '2017-09-17 11:46:14'),
(94, 1313, '2', 2.55556, 8, 1, '2017-09-17 11:46:14'),
(94, 1452, '0', -0.001875, 40, 0, '2017-09-17 11:46:14'),
(94, 3051, '2', -0.284024, 18, 0, '2017-09-17 11:46:14'),
(94, 1449, '1', -1.36688, 13, 0, '2017-09-17 11:46:14'),
(94, 1465, '1', 0.137755, 22, 1, '2017-09-17 11:46:14'),
(94, 1454, '2', 0.148148, 28, 1, '2017-09-17 11:46:14'),
(94, 3044, '3', 2.08333, 4, 1, '2017-09-17 11:46:14'),
(94, 3004, '0', -0.00333333, 30, 0, '2017-09-17 11:46:14'),
(94, 2929, '4', 1.17188, 9, 1, '2017-09-17 11:46:14'),
(94, 1462, '1', 1.80187, 9, 1, '2017-09-17 11:46:14'),
(94, 3035, '2', 1.6875, 7, 1, '2017-09-17 11:46:14'),
(94, 1464, '4', -1.2513, 17, 0, '2017-09-17 11:46:15'),
(94, 1466, '1', -0.0012, 49, 0, '2017-09-17 11:46:15'),
(94, 1463, '2', 0.00619835, 42, 1, '2017-09-17 11:46:15'),
(94, 1459, '2', 0.27, 28, 1, '2017-09-17 11:46:15'),
(94, 1460, '1', 0.362949, 30, 1, '2017-09-17 11:46:15'),
(94, 1461, '3', 1.11153, 18, 1, '2017-09-17 11:46:15'),
(94, 1457, '4', 0.826875, 19, 1, '2017-09-17 11:46:15'),
(94, 1451, '1', 0.0833333, 30, 1, '2017-09-17 11:46:15'),
(94, 1450, '0', 0, 26, -1, '2017-09-17 11:46:15'),
(94, 1455, '1', 0.046875, 35, 1, '2017-09-17 11:46:15'),
(94, 1467, '3', 0.563333, 34, 1, '2017-09-17 11:46:15'),
(94, 1456, '1', 1.57687, 11, 1, '2017-09-17 11:46:15'),
(94, 1453, '1', 0.27, 35, 1, '2017-09-17 11:46:15'),
(94, 1458, '0', 0, 9, -1, '2017-09-17 11:46:16'),
(94, 3039, '1', 0.443787, 16, 1, '2017-09-17 11:46:16'),
(94, 1491, '1', -1.96599, 8, 0, '2017-09-17 11:46:16'),
(94, 1468, '1', -0.091875, 33, 0, '2017-09-17 11:46:16'),
(94, 3000, '3', 0.1875, 18, 1, '2017-09-17 11:46:16'),
(94, 1483, '2', -0.67313, 20, 0, '2017-09-17 11:46:16'),
(94, 1472, '0', 0, 33, -1, '2017-09-17 11:46:16'),
(94, 1485, '4', 0.1875, 39, 1, '2017-09-17 11:46:16'),
(94, 1481, '2', 0, 40, 1, '2017-09-17 11:46:16'),
(94, 3002, '0', -0.75, 40, 0, '2017-09-17 11:46:16'),
(94, 1486, '2', -0.0557851, 38, 0, '2017-09-17 11:46:16'),
(94, 1478, '3', -0.091875, 33, 0, '2017-09-17 11:46:16'),
(94, 1477, '3', 0.297325, 37, 1, '2017-09-17 11:46:17'),
(94, 1469, '1', -0.541875, 23, 0, '2017-09-17 11:46:17'),
(94, 1488, '2', 0.0557851, 38, 1, '2017-09-17 11:46:17'),
(94, 1476, '0', -0.00110947, 52, 0, '2017-09-17 11:46:17'),
(94, 2933, '1', -0.333333, 16, 0, '2017-09-17 11:46:17'),
(94, 1471, '4', 0.00333333, 58, 1, '2017-09-17 11:46:17'),
(94, 3008, '1', -0.55102, 16, 0, '2017-09-17 11:46:17'),
(94, 1482, '1', 2.35692, 5, 1, '2017-09-17 11:46:17'),
(94, 1480, '3', -0.55102, 24, 0, '2017-09-17 11:46:17'),
(94, 1479, '3', 0.75, 22, 1, '2017-09-17 11:46:18'),
(94, 1484, '2', -0.0612245, 36, 0, '2017-09-17 11:46:18'),
(94, 1474, '0', -0.00170068, 42, 0, '2017-09-17 11:46:18'),
(94, 1473, '3', -0.6348, 27, 0, '2017-09-17 11:46:18'),
(94, 1475, '0', -0.00141777, 46, 0, '2017-09-17 11:46:18'),
(94, 1487, '1', 0.0127599, 43, 1, '2017-09-17 11:46:18'),
(94, 1470, '1', 1.1532, 19, 1, '2017-09-17 11:46:18'),
(94, 1497, '2', 0.0153061, 39, 1, '2017-09-17 11:46:18'),
(94, 1499, '1', -0.409735, 29, 0, '2017-09-17 11:46:18'),
(94, 3076, '1', 0.75, 15, 1, '2017-09-17 11:46:18'),
(94, 1493, '4', 1.47, 12, 1, '2017-09-17 11:46:18'),
(94, 2947, '3', 1.9, 11, 1, '2017-09-17 11:46:18'),
(94, 1505, '4', -1.7625, 33, 0, '2017-09-17 11:46:18'),
(94, 3062, '3', -1.40625, 17, 0, '2017-09-17 11:46:19'),
(94, 1886, '1', -0.835648, 17, 0, '2017-09-17 11:46:19'),
(94, 1953, '1', -1.2675, 14, 0, '2017-09-17 11:46:19'),
(94, 1905, '4', 0.0510397, 40, 1, '2017-09-17 11:46:19'),
(94, 1895, '4', 1.63894, 12, 1, '2017-09-17 11:46:19'),
(94, 1946, '4', 0.3675, 26, 1, '2017-09-17 11:46:19'),
(94, 1924, '4', 1.25606, 12, 1, '2017-09-17 11:46:19'),
(94, 1935, '1', 0.359467, 34, 1, '2017-09-17 11:46:19'),
(94, 1928, '1', 1.03806, 14, 1, '2017-09-17 11:46:19'),
(94, 1890, '2', -1.99654, 7, 0, '2017-09-17 11:46:19'),
(94, 2148, '2', 0.27, 28, 1, '2017-09-17 11:46:19'),
(94, 1931, '1', 0.48, 24, 1, '2017-09-17 11:46:19'),
(94, 1907, '0', -0.001875, 40, 0, '2017-09-17 11:46:19'),
(94, 1938, '1', 1.88021, 10, 1, '2017-09-17 11:46:20'),
(94, 1899, '1', -0.75, 23, 0, '2017-09-17 11:46:20'),
(94, 2157, '2', -1.17188, 21, 0, '2017-09-17 11:46:20'),
(94, 1932, '1', 0.511815, 27, 1, '2017-09-17 11:46:20'),
(94, 1910, '2', 2.1888, 7, 1, '2017-09-17 11:46:20'),
(94, 1902, '4', -0.0263672, 29, 0, '2017-09-17 11:46:20'),
(94, 1916, '3', -1.35642, 19, 0, '2017-09-17 11:46:20'),
(94, 1949, '4', 1.83743, 10, 1, '2017-09-17 11:46:20'),
(94, 1913, '0', 0, 11, -1, '2017-09-17 11:46:20'),
(94, 1943, '1', 0.75, 32, 1, '2017-09-17 11:46:20'),
(94, 2052, '3', 1.19234, 17, 1, '2017-09-17 11:46:20'),
(94, 1989, '1', 1.33333, 16, 1, '2017-09-17 11:46:20'),
(94, 1986, '4', -1.8252, 11, 0, '2017-09-17 11:46:20'),
(94, 1186, '3', 0.75, 14, 1, '2017-09-17 11:46:21'),
(94, 1276, '1', 0.354492, 21, 1, '2017-09-17 11:46:21'),
(94, 1190, '4', 0.00382653, 27, 1, '2017-09-17 11:46:21'),
(94, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:46:21'),
(94, 1194, '0', -0.00382653, 28, 0, '2017-09-17 11:46:21'),
(94, 1184, '0', -0.00520833, 24, 0, '2017-09-17 11:46:21'),
(94, 1177, '2', 1.21488, 8, 1, '2017-09-17 11:46:21'),
(94, 1173, '2', 0.9075, 9, 1, '2017-09-17 11:46:21'),
(94, 1198, '4', 0.0675, 17, 1, '2017-09-17 11:46:21'),
(94, 1169, '2', 0.0833333, 20, 1, '2017-09-17 11:46:21'),
(94, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:46:21'),
(94, 1195, '1', -5.07, 46, 0, '2017-09-17 11:46:22'),
(94, 1197, '0', -0.00520833, 24, 0, '2017-09-17 11:46:22'),
(94, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:46:22'),
(94, 1291, '4', 0.48, 12, 1, '2017-09-17 11:46:22'),
(94, 1172, '4', 0.27, 14, 1, '2017-09-17 11:46:22'),
(94, 1216, '0', -0.00520833, 24, 0, '2017-09-17 11:46:22'),
(94, 1183, '2', 0.502066, 13, 1, '2017-09-17 11:46:22'),
(94, 1292, '2', -0.12, 24, 0, '2017-09-17 11:46:22'),
(94, 1196, '0', -0.00520833, 24, 0, '2017-09-17 11:46:22'),
(94, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:46:22'),
(94, 1203, '3', 0.0533333, 26, 1, '2017-09-17 11:46:22'),
(94, 1170, '2', 0, 24, 1, '2017-09-17 11:46:22'),
(94, 1297, '3', 2.43, 6, 1, '2017-09-17 11:46:23'),
(94, 1218, '2', -0.12, 16, 0, '2017-09-17 11:46:23'),
(94, 1174, '3', 1.13609, 10, 1, '2017-09-17 11:46:23'),
(94, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:46:23'),
(94, 1263, '2', -1.08, 16, 0, '2017-09-17 11:46:23'),
(94, 1294, '3', 0.255208, 17, 1, '2017-09-17 11:46:23'),
(94, 1200, '4', 0.592593, 20, 1, '2017-09-17 11:46:23'),
(94, 1208, '2', -0.0108, 47, 0, '2017-09-17 11:46:23'),
(94, 1217, '0', 0, 10, -1, '2017-09-17 11:46:23'),
(94, 1189, '3', 1.38138, 9, 1, '2017-09-17 11:46:23'),
(94, 1191, '4', -0.1875, 21, 0, '2017-09-17 11:46:23'),
(94, 1257, '2', -0.0208333, 44, 0, '2017-09-17 11:46:23'),
(94, 1199, '0', -0.00292969, 32, 0, '2017-09-17 11:46:23'),
(94, 1269, '0', 0, 13, -1, '2017-09-17 11:46:24'),
(94, 1219, '1', -0.22314, 16, 0, '2017-09-17 11:46:24'),
(94, 1202, '3', -0.0208333, 33, 0, '2017-09-17 11:46:24'),
(94, 1284, '3', 0.12, 16, 1, '2017-09-17 11:46:24'),
(94, 1293, '2', 1.17188, 9, 1, '2017-09-17 11:46:24'),
(94, 1281, '3', 0.403333, 19, 1, '2017-09-17 11:46:24'),
(94, 1282, '0', 0, 25, -1, '2017-09-17 11:46:24'),
(94, 1265, '0', -0.00110947, 52, 0, '2017-09-17 11:46:24'),
(94, 1220, '2', 0.979592, 12, 1, '2017-09-17 11:46:24'),
(94, 1287, '2', -0.00520833, 46, 0, '2017-09-17 11:46:24'),
(94, 1175, '4', 0.495117, 19, 1, '2017-09-17 11:46:24'),
(94, 1171, '4', 1.08, 8, 1, '2017-09-17 11:46:24'),
(94, 1268, '0', -0.00130208, 48, 0, '2017-09-17 11:46:25'),
(94, 172, '2', 0.524628, 64, 1, '2017-09-17 11:46:25'),
(94, 1188, '3', -1.10587, 11, 0, '2017-09-17 11:46:25'),
(94, 1176, '4', 0.646684, 15, 1, '2017-09-17 11:46:25'),
(94, 1275, '1', -0.231481, 39, 0, '2017-09-17 11:46:25'),
(94, 1204, '4', 1.50521, 14, 1, '2017-09-17 11:46:25'),
(94, 173, '3', -0.0147, 93, 0, '2017-09-17 11:46:25'),
(94, 1296, '2', 0.00520833, 23, 1, '2017-09-17 11:46:25'),
(94, 1209, '0', -0.0012, 50, 0, '2017-09-17 11:46:25'),
(94, 1250, '0', -0.000833333, 60, 0, '2017-09-17 11:46:25'),
(95, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:46:26'),
(95, 1174, '0', -0.00443787, 26, 0, '2017-09-17 11:46:26'),
(95, 1297, '3', 1.92, 12, 1, '2017-09-17 11:46:26'),
(95, 1172, '4', 0.0675, 17, 1, '2017-09-17 11:46:26'),
(95, 1197, '3', -1.33333, 8, 0, '2017-09-17 11:46:26'),
(95, 1292, '2', -0.963333, 13, 0, '2017-09-17 11:46:26'),
(95, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:46:26'),
(95, 1218, '0', -0.0075, 20, 0, '2017-09-17 11:46:26'),
(95, 1190, '4', 0.75, 14, 1, '2017-09-17 11:46:27'),
(95, 1198, '4', 0.03, 18, 1, '2017-09-17 11:46:27'),
(95, 1270, '1', -0.114839, 37, 0, '2017-09-17 11:46:27'),
(95, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:46:27'),
(95, 1184, '0', -0.00520833, 24, 0, '2017-09-17 11:46:27'),
(95, 1291, '4', 0.12, 16, 1, '2017-09-17 11:46:27'),
(95, 1186, '3', 0.137755, 22, 1, '2017-09-17 11:46:27'),
(95, 1185, '2', -0.309949, 19, 0, '2017-09-17 11:46:27'),
(95, 1170, '2', 0.255208, 17, 1, '2017-09-17 11:46:27'),
(95, 1194, '1', 0.646684, 15, 1, '2017-09-17 11:46:27'),
(95, 1227, '1', -0.046875, 21, 0, '2017-09-17 11:46:27'),
(95, 1177, '2', 0.502066, 13, 1, '2017-09-17 11:46:28'),
(95, 1183, '2', 1.04752, 9, 1, '2017-09-17 11:46:28'),
(95, 1169, '2', 1.17188, 9, 1, '2017-09-17 11:46:28'),
(95, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:46:28'),
(95, 1216, '2', -0.0833333, 20, 0, '2017-09-17 11:46:28'),
(95, 1196, '4', 1.17188, 9, 1, '2017-09-17 11:46:28'),
(95, 1276, '0', -0.00292969, 32, 0, '2017-09-17 11:46:28'),
(95, 1263, '2', -0.3675, 26, 0, '2017-09-17 11:46:28'),
(95, 1173, '2', 0.48, 12, 1, '2017-09-17 11:46:28'),
(95, 1175, '0', -0.00292969, 32, 0, '2017-09-17 11:46:28'),
(95, 1268, '4', -0.75, 24, 0, '2017-09-17 11:46:28'),
(95, 1281, '0', -0.00333333, 30, 0, '2017-09-17 11:46:29'),
(95, 1257, '0', -0.00130208, 48, 0, '2017-09-17 11:46:29'),
(95, 1217, '2', -0.3675, 13, 0, '2017-09-17 11:46:29'),
(95, 1189, '3', 1.2398, 10, 1, '2017-09-17 11:46:29'),
(95, 3465, '3', -0.75, 11, 0, '2017-09-17 11:46:29'),
(95, 3464, '0', -0.00520833, 24, 0, '2017-09-17 11:46:29'),
(95, 3469, '4', -0.27, 14, 0, '2017-09-17 11:46:29'),
(95, 3452, '0', -0.00520833, 24, 0, '2017-09-17 11:46:29'),
(95, 3447, '0', -0.0075, 20, 0, '2017-09-17 11:46:29'),
(95, 3461, '1', 0.0833333, 20, 1, '2017-09-17 11:46:29'),
(95, 854, '4', -1.65551, 18, 0, '2017-09-17 11:46:29'),
(95, 615, '4', -0.6075, 33, 0, '2017-09-17 11:46:29'),
(95, 850, '2', -1.54083, 17, 0, '2017-09-17 11:46:30'),
(95, 624, '3', -1.76333, 14, 0, '2017-09-17 11:46:30'),
(95, 593, '1', 1.76333, 14, 1, '2017-09-17 11:46:30'),
(95, 597, '4', -1.90226, 11, 0, '2017-09-17 11:46:30'),
(95, 619, '0', -0.000833333, 60, 0, '2017-09-17 11:46:30'),
(95, 622, '4', -1.2675, 21, 0, '2017-09-17 11:46:30'),
(95, 606, '1', -2.1675, 9, 0, '2017-09-17 11:46:30'),
(95, 594, '4', -1.08, 20, 0, '2017-09-17 11:46:30'),
(95, 2613, '0', -0.676875, 60, 0, '2017-09-17 11:46:30'),
(95, 2607, '2', -1.47, 12, 0, '2017-09-17 11:46:30'),
(95, 2615, '4', -0.6075, 22, 0, '2017-09-17 11:46:30'),
(95, 2609, '3', -1.6875, 10, 0, '2017-09-17 11:46:30'),
(95, 2606, '0', -0.001875, 40, 0, '2017-09-17 11:46:30'),
(95, 2602, '1', -1.92, 8, 0, '2017-09-17 11:46:31'),
(95, 2603, '2', -0.541875, 23, 0, '2017-09-17 11:46:31'),
(95, 2614, '4', 1.92, 8, 1, '2017-09-17 11:46:31'),
(95, 2608, '0', -0.001875, 40, 0, '2017-09-17 11:46:31'),
(95, 2610, '1', -1.92, 8, 0, '2017-09-17 11:46:31'),
(95, 2601, '2', 0.676875, 21, 1, '2017-09-17 11:46:31'),
(95, 2604, '1', -1.6875, 10, 0, '2017-09-17 11:46:31'),
(95, 2611, '0', -0.001875, 40, 0, '2017-09-17 11:46:31'),
(95, 2612, '3', -1.2675, 14, 0, '2017-09-17 11:46:31'),
(95, 2605, '2', 0.991875, 17, 1, '2017-09-17 11:46:31'),
(95, 2624, '0', -0.3675, 40, 0, '2017-09-17 11:46:31'),
(95, 2627, '1', -1.08, 24, 0, '2017-09-17 11:46:31'),
(95, 2628, '3', -1.84083, 13, 0, '2017-09-17 11:46:31'),
(95, 3158, '0', -0.916205, 60, 0, '2017-09-17 11:46:32'),
(95, 3040, '2', -0.244898, 20, 0, '2017-09-17 11:46:32'),
(95, 3045, '1', 0.46301, 17, 1, '2017-09-17 11:46:32'),
(95, 3073, '0', -0.00382653, 28, 0, '2017-09-17 11:46:32'),
(95, 3011, '0', -0.00382653, 28, 0, '2017-09-17 11:46:32'),
(95, 3042, '0', -0.00382653, 28, 0, '2017-09-17 11:46:32'),
(95, 3032, '1', -1.6875, 7, 0, '2017-09-17 11:46:32'),
(95, 3006, '1', 1.2398, 10, 1, '2017-09-17 11:46:32'),
(95, 3009, '0', -0.00382653, 28, 0, '2017-09-17 11:46:32'),
(95, 3018, '4', -0.244898, 20, 0, '2017-09-17 11:46:32'),
(95, 3055, '0', -0.00382653, 28, 0, '2017-09-17 11:46:32'),
(95, 3083, '2', -0.1875, 21, 0, '2017-09-17 11:46:32'),
(95, 3013, '4', -0.0956633, 23, 0, '2017-09-17 11:46:32'),
(95, 3066, '0', -0.00382653, 28, 0, '2017-09-17 11:46:33'),
(95, 3028, '3', -0.00382653, 27, 0, '2017-09-17 11:46:33'),
(95, 3016, '0', -0.00382653, 28, 0, '2017-09-17 11:46:33'),
(95, 3052, '1', -0.0956633, 23, 0, '2017-09-17 11:46:33'),
(95, 3047, '0', -0.00382653, 28, 0, '2017-09-17 11:46:33'),
(95, 3063, '1', 0.0612245, 24, 1, '2017-09-17 11:46:33'),
(95, 3026, '0', -0.00382653, 28, 0, '2017-09-17 11:46:33'),
(95, 3024, '4', -0.382653, 18, 0, '2017-09-17 11:46:33'),
(95, 3020, '1', -0.860969, 13, 0, '2017-09-17 11:46:33'),
(95, 3079, '0', -0.00382653, 28, 0, '2017-09-17 11:46:33'),
(95, 3056, '4', 0.1875, 21, 1, '2017-09-17 11:46:33'),
(95, 3050, '3', 0.75, 14, 1, '2017-09-17 11:46:33'),
(95, 3068, '0', -0.00382653, 28, 0, '2017-09-17 11:46:34'),
(95, 3093, '3', 1.09903, 15, 1, '2017-09-17 11:46:34'),
(95, 3112, '3', -0.467452, 23, 0, '2017-09-17 11:46:34'),
(95, 3292, '0', -0.00207756, 38, 0, '2017-09-17 11:46:34'),
(95, 3295, '1', -0.207756, 28, 0, '2017-09-17 11:46:34'),
(95, 3117, '4', 1.09903, 15, 1, '2017-09-17 11:46:34'),
(95, 3123, '0', -0.00207756, 38, 0, '2017-09-17 11:46:34'),
(95, 3105, '1', -0.75, 19, 0, '2017-09-17 11:46:34'),
(95, 3097, '2', -1.51454, 11, 0, '2017-09-17 11:46:34'),
(95, 3149, '0', -0.00207756, 38, 0, '2017-09-17 11:46:34'),
(95, 3291, '1', -0.0747922, 32, 0, '2017-09-17 11:46:34'),
(95, 3136, '1', -1.51454, 11, 0, '2017-09-17 11:46:35'),
(95, 3142, '0', -0.00207756, 38, 0, '2017-09-17 11:46:35'),
(95, 3102, '2', -0.467452, 23, 0, '2017-09-17 11:46:35'),
(95, 3119, '0', -0.00207756, 38, 0, '2017-09-17 11:46:35'),
(95, 3140, '0', 0, 24, -1, '2017-09-17 11:46:35'),
(95, 3100, '4', -0.251385, 27, 0, '2017-09-17 11:46:35'),
(95, 3153, '0', -0.00207756, 38, 0, '2017-09-17 11:46:35'),
(95, 3155, '0', -0.00207756, 38, 0, '2017-09-17 11:46:35'),
(95, 3290, '0', -0.00207756, 38, 0, '2017-09-17 11:46:35'),
(95, 3294, '1', -0.0186981, 35, 0, '2017-09-17 11:46:35'),
(95, 3287, '0', -0.00207756, 38, 0, '2017-09-17 11:46:35'),
(95, 3293, '3', -0.75, 19, 0, '2017-09-17 11:46:35'),
(95, 3289, '0', 0, 20, -1, '2017-09-17 11:46:36'),
(95, 3145, '0', -0.00207756, 38, 0, '2017-09-17 11:46:36'),
(95, 3090, '1', -1.00554, 16, 0, '2017-09-17 11:46:36'),
(95, 3288, '0', -0.00207756, 38, 0, '2017-09-17 11:46:36'),
(95, 3312, '0', -0.114839, 38, 0, '2017-09-17 11:46:36'),
(95, 3302, '4', -1.19234, 17, 0, '2017-09-17 11:46:36'),
(95, 3313, '1', -1.27599, 16, 0, '2017-09-17 11:46:36'),
(95, 3310, '0', -0.00141777, 46, 0, '2017-09-17 11:46:36'),
(95, 3311, '0', 0, 16, -1, '2017-09-17 11:46:36'),
(95, 3322, '0', -0.00141777, 46, 0, '2017-09-17 11:46:36'),
(95, 3298, '4', -0.0127599, 43, 0, '2017-09-17 11:46:36'),
(95, 3306, '1', 1.36248, 15, 1, '2017-09-17 11:46:36'),
(95, 3315, '3', -0.958412, 20, 0, '2017-09-17 11:46:37'),
(95, 3314, '0', -0.00141777, 46, 0, '2017-09-17 11:46:37'),
(95, 3303, '3', -1.73677, 11, 0, '2017-09-17 11:46:37'),
(96, 2614, '1', -1.17188, 15, 0, '2017-09-17 11:46:37'),
(96, 2603, '1', 1.08, 16, 1, '2017-09-17 11:46:37'),
(96, 2615, '4', -0.12, 32, 0, '2017-09-17 11:46:37'),
(96, 2613, '4', 1.80187, 9, 1, '2017-09-17 11:46:38'),
(96, 2602, '2', -0.151875, 31, 0, '2017-09-17 11:46:38'),
(96, 2612, '2', -1.57687, 11, 0, '2017-09-17 11:46:38'),
(96, 2609, '0', 0, 17, -1, '2017-09-17 11:46:38'),
(96, 2610, '3', 1.08, 16, 1, '2017-09-17 11:46:38'),
(96, 2604, '2', 0.75, 20, 1, '2017-09-17 11:46:38'),
(96, 2601, '0', 0, 31, -1, '2017-09-17 11:46:38'),
(96, 2605, '2', 1.92, 8, 1, '2017-09-17 11:46:38'),
(96, 2608, '3', 0.9075, 18, 1, '2017-09-17 11:46:38'),
(96, 2611, '0', 0, 20, -1, '2017-09-17 11:46:38'),
(96, 2606, '1', 2.1675, 6, 1, '2017-09-17 11:46:38'),
(96, 2607, '1', -0.48, 24, 0, '2017-09-17 11:46:38'),
(96, 2617, '1', 2.52083, 5, 1, '2017-09-17 11:46:38'),
(96, 2625, '1', -1.76333, 14, 0, '2017-09-17 11:46:39'),
(96, 2619, '3', 2.00083, 11, 1, '2017-09-17 11:46:39'),
(96, 2621, '2', -0.03, 54, 0, '2017-09-17 11:46:39'),
(96, 2626, '3', 1.76333, 14, 1, '2017-09-17 11:46:39'),
(96, 2627, '4', -2.2, 16, 0, '2017-09-17 11:46:39'),
(96, 2633, '3', 0.800833, 29, 1, '2017-09-17 11:46:39'),
(96, 2618, '4', -1.08, 24, 0, '2017-09-17 11:46:39'),
(96, 2620, '4', 1.92, 12, 1, '2017-09-17 11:46:39'),
(96, 2634, '4', 0.65, 47, 1, '2017-09-17 11:46:39'),
(96, 2629, '2', -2.25, 15, 0, '2017-09-17 11:46:39'),
(96, 2635, '0', -0.000833333, 60, 0, '2017-09-17 11:46:39'),
(96, 2622, '4', -0.163333, 46, 0, '2017-09-17 11:46:39'),
(96, 2630, '2', 0.963333, 26, 1, '2017-09-17 11:46:40'),
(96, 2628, '4', -2.1675, 9, 0, '2017-09-17 11:46:40'),
(96, 2616, '1', -1.14083, 23, 0, '2017-09-17 11:46:40'),
(96, 2624, '2', 1.14083, 23, 1, '2017-09-17 11:46:40'),
(96, 2623, '3', -2.25333, 8, 0, '2017-09-17 11:46:40'),
(96, 2632, '3', 1.54083, 17, 1, '2017-09-17 11:46:40'),
(96, 2631, '2', -0.0675, 51, 0, '2017-09-17 11:46:40'),
(96, 2734, '3', 2.08333, 10, 1, '2017-09-17 11:46:40'),
(96, 2816, '4', 1.40083, 19, 1, '2017-09-17 11:46:40'),
(96, 2847, '2', -0.213333, 44, 0, '2017-09-17 11:46:40'),
(96, 2833, '3', 1.20333, 22, 1, '2017-09-17 11:46:40'),
(96, 2841, '3', 1.1, 38, 1, '2017-09-17 11:46:41'),
(96, 2823, '2', -0.5, 50, 0, '2017-09-17 11:46:41'),
(96, 2728, '2', -0.95, 41, 0, '2017-09-17 11:46:41'),
(96, 2732, '4', 2.2, 16, 1, '2017-09-17 11:46:41'),
(96, 2730, '3', -2, 20, 0, '2017-09-17 11:46:41'),
(96, 2731, '3', -1.45, 31, 0, '2017-09-17 11:46:41'),
(96, 2729, '2', 1.54083, 17, 1, '2017-09-17 11:46:41'),
(96, 2819, '2', 1.8, 24, 1, '2017-09-17 11:46:41'),
(96, 2825, '4', -2.45, 11, 0, '2017-09-17 11:46:41'),
(96, 2835, '1', -1.85, 23, 0, '2017-09-17 11:46:41'),
(96, 2735, '4', -0.963333, 26, 0, '2017-09-17 11:46:41'),
(96, 2838, '3', 1.6875, 15, 1, '2017-09-17 11:46:41'),
(96, 2820, '2', 0.0833333, 50, 1, '2017-09-17 11:46:42'),
(96, 2852, '3', -1.2675, 21, 0, '2017-09-17 11:46:42'),
(96, 2733, '4', -0.653333, 32, 0, '2017-09-17 11:46:42'),
(96, 2845, '1', 0.563333, 34, 1, '2017-09-17 11:46:42'),
(96, 2889, '1', -0.563333, 34, 0, '2017-09-17 11:46:42'),
(96, 2879, '1', -0.563333, 34, 0, '2017-09-17 11:46:42'),
(96, 2861, '2', 1.6875, 15, 1, '2017-09-17 11:46:42'),
(96, 2883, '4', -1.47, 18, 0, '2017-09-17 11:46:42'),
(96, 2871, '1', -0.0408333, 53, 0, '2017-09-17 11:46:42'),
(96, 2877, '2', 2.25333, 8, 1, '2017-09-17 11:46:42'),
(96, 1190, '0', -0.00382653, 28, 0, '2017-09-17 11:46:42'),
(96, 1263, '2', -0.541875, 23, 0, '2017-09-17 11:46:42'),
(96, 1185, '1', -0.0612245, 24, 0, '2017-09-17 11:46:43'),
(96, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:46:43'),
(96, 1261, '2', -0.00831025, 36, 0, '2017-09-17 11:46:43'),
(96, 1297, '3', 1.20333, 22, 1, '2017-09-17 11:46:43'),
(96, 1270, '1', -0.0226843, 42, 0, '2017-09-17 11:46:43'),
(96, 1186, '3', 0.137755, 22, 1, '2017-09-17 11:46:43'),
(96, 1292, '2', -0.963333, 13, 0, '2017-09-17 11:46:43'),
(96, 1194, '2', -0.0153061, 26, 0, '2017-09-17 11:46:43'),
(96, 1170, '0', -0.00520833, 24, 0, '2017-09-17 11:46:43'),
(96, 1276, '2', -0.0117188, 30, 0, '2017-09-17 11:46:43'),
(96, 1173, '2', 0.0675, 17, 1, '2017-09-17 11:46:43'),
(96, 1169, '2', 0.255208, 17, 1, '2017-09-17 11:46:43'),
(96, 1198, '3', -0.6075, 11, 0, '2017-09-17 11:46:43'),
(96, 1177, '4', -0.619835, 12, 0, '2017-09-17 11:46:44'),
(96, 1291, '1', -0.0075, 19, 0, '2017-09-17 11:46:44'),
(96, 1196, '0', -0.00520833, 24, 0, '2017-09-17 11:46:44'),
(96, 1197, '3', -0.255208, 17, 0, '2017-09-17 11:46:44'),
(96, 1195, '1', 0, 20, 0, '2017-09-17 11:46:44'),
(96, 1218, '4', 0.12, 16, 1, '2017-09-17 11:46:44'),
(96, 1172, '4', 0.3675, 13, 1, '2017-09-17 11:46:44'),
(96, 1183, '2', 0.154959, 17, 1, '2017-09-17 11:46:44'),
(96, 1216, '4', 0.880208, 11, 1, '2017-09-17 11:46:44'),
(96, 1174, '3', 0.359467, 17, 1, '2017-09-17 11:46:44'),
(96, 1203, '2', -0.03, 27, 0, '2017-09-17 11:46:44'),
(96, 1184, '0', -0.00520833, 24, 0, '2017-09-17 11:46:44'),
(96, 1227, '0', 0, 16, -1, '2017-09-17 11:46:44'),
(96, 1284, '3', 0.03, 18, 1, '2017-09-17 11:46:45'),
(96, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:46:45'),
(96, 1268, '1', 0.0638021, 41, 1, '2017-09-17 11:46:45'),
(96, 1282, '0', 0, 14, -1, '2017-09-17 11:46:45'),
(96, 1175, '4', 0.75, 16, 1, '2017-09-17 11:46:45'),
(96, 1281, '3', 0.0533333, 26, 1, '2017-09-17 11:46:45'),
(96, 1191, '3', 0.382653, 18, 1, '2017-09-17 11:46:45'),
(96, 1171, '4', 0.3675, 13, 1, '2017-09-17 11:46:45'),
(96, 1294, '4', -0.130208, 19, 0, '2017-09-17 11:46:45'),
(96, 1287, '1', -0.105469, 39, 0, '2017-09-17 11:46:45'),
(96, 1199, '0', -0.00292969, 32, 0, '2017-09-17 11:46:45'),
(96, 1257, '0', 0, 7, -1, '2017-09-17 11:46:45'),
(96, 1208, '1', 0.0588, 43, 1, '2017-09-17 11:46:46'),
(96, 1200, '4', 0.00231481, 35, 1, '2017-09-17 11:46:46'),
(96, 1220, '4', -0.382653, 18, 0, '2017-09-17 11:46:46'),
(96, 1265, '0', -0.00110947, 52, 0, '2017-09-17 11:46:46'),
(96, 1189, '3', 1.53061, 8, 1, '2017-09-17 11:46:46'),
(96, 1293, '0', -0.00520833, 24, 0, '2017-09-17 11:46:46'),
(96, 1202, '1', 0.231481, 26, 1, '2017-09-17 11:46:46'),
(96, 1219, '0', -0.00619835, 22, 0, '2017-09-17 11:46:46'),
(96, 1217, '1', -0.6075, 11, 0, '2017-09-17 11:46:46'),
(96, 171, '0', -0.00046875, 80, 0, '2017-09-17 11:46:46'),
(96, 1299, '2', -0.843664, 31, 0, '2017-09-17 11:46:46'),
(96, 1204, '2', -0.470052, 29, 0, '2017-09-17 11:46:46'),
(96, 1296, '3', -0.630208, 13, 0, '2017-09-17 11:46:47'),
(96, 1298, '2', -2.1675, 9, 0, '2017-09-17 11:46:47'),
(96, 1187, '1', -0.84668, 15, 0, '2017-09-17 11:46:47'),
(96, 1283, '4', 0.0833333, 20, 1, '2017-09-17 11:46:47'),
(96, 1209, '0', -0.0012, 50, 0, '2017-09-17 11:46:47'),
(96, 1275, '1', -0.592593, 30, 0, '2017-09-17 11:46:47'),
(96, 1176, '0', -0.00382653, 28, 0, '2017-09-17 11:46:47'),
(96, 604, '3', 1.40083, 19, 1, '2017-09-17 11:46:47'),
(96, 1124, '0', -0.000833333, 60, 0, '2017-09-17 11:46:47'),
(96, 1091, '2', -2.00083, 11, 0, '2017-09-17 11:46:48'),
(96, 1317, '3', 0.333333, 40, 1, '2017-09-17 11:46:48'),
(96, 613, '4', -1.84083, 13, 0, '2017-09-17 11:46:48'),
(96, 601, '4', 2.39158, 6, 1, '2017-09-17 11:46:48'),
(96, 1311, '4', 1.5552, 14, 1, '2017-09-17 11:46:48'),
(96, 609, '3', -1.84083, 13, 0, '2017-09-17 11:46:48'),
(96, 996, '4', -1.2288, 18, 0, '2017-09-17 11:46:48'),
(96, 602, '0', 0, 56, -1, '2017-09-17 11:46:48'),
(96, 599, '1', 0.75, 30, 1, '2017-09-17 11:46:48'),
(96, 607, '3', 2.20408, 8, 1, '2017-09-17 11:46:48'),
(96, 622, '2', 1.76333, 14, 1, '2017-09-17 11:46:48'),
(96, 1301, '0', 0, 9, -1, '2017-09-17 11:46:48'),
(96, 600, '3', 1.45504, 17, 1, '2017-09-17 11:46:49'),
(96, 597, '0', 0, 16, -1, '2017-09-17 11:46:49'),
(96, 595, '3', -0.134246, 41, 0, '2017-09-17 11:46:49'),
(96, 1310, '3', -0.998521, 22, 0, '2017-09-17 11:46:49'),
(96, 605, '3', -2.25333, 8, 0, '2017-09-17 11:46:49'),
(96, 403, '3', -2.1675, 9, 0, '2017-09-17 11:46:49'),
(96, 1303, '1', 0.03, 54, 1, '2017-09-17 11:46:49'),
(96, 603, '1', 0.320636, 35, 1, '2017-09-17 11:46:49'),
(96, 611, '2', -0.6348, 27, 0, '2017-09-17 11:46:49'),
(96, 852, '2', -2.52083, 5, 0, '2017-09-17 11:46:49'),
(96, 1308, '2', -1.02083, 25, 0, '2017-09-17 11:46:49'),
(96, 619, '2', -1.47, 18, 0, '2017-09-17 11:46:49'),
(96, 615, '2', 1.47, 18, 1, '2017-09-17 11:46:49'),
(96, 624, '2', -2.08333, 10, 0, '2017-09-17 11:46:50'),
(96, 606, '4', -0.27, 42, 0, '2017-09-17 11:46:50'),
(96, 853, '4', -1.61333, 16, 0, '2017-09-17 11:46:50'),
(96, 593, '0', -0.000833333, 60, 0, '2017-09-17 11:46:50'),
(96, 850, '2', -1.54083, 17, 0, '2017-09-17 11:46:50'),
(96, 594, '2', -0.4332, 31, 0, '2017-09-17 11:46:50'),
(96, 2407, '0', -1.80187, 10, 0, '2017-09-17 11:46:50'),
(96, 2409, '0', -0.421875, 26, 0, '2017-09-17 11:46:50'),
(96, 2394, '2', 0.676875, 21, 1, '2017-09-17 11:46:50');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(96, 2397, '0', -0.001875, 40, 0, '2017-09-17 11:46:50'),
(96, 2421, '0', -0.001875, 40, 0, '2017-09-17 11:46:50'),
(96, 2437, '3', -1.2675, 14, 0, '2017-09-17 11:46:50'),
(96, 2389, '3', -0.046875, 35, 0, '2017-09-17 11:46:51'),
(96, 2424, '3', -1.17188, 15, 0, '2017-09-17 11:46:51'),
(96, 2391, '3', -1.6875, 10, 0, '2017-09-17 11:46:51'),
(96, 2425, '4', 0.826875, 19, 1, '2017-09-17 11:46:51'),
(96, 2430, '2', 0.6075, 22, 1, '2017-09-17 11:46:51'),
(96, 2426, '1', 1.80187, 9, 1, '2017-09-17 11:46:51'),
(96, 2433, '1', 2.04187, 7, 1, '2017-09-17 11:46:51'),
(96, 2452, '2', -1.17188, 15, 0, '2017-09-17 11:46:51'),
(96, 2459, '2', -1.80187, 9, 0, '2017-09-17 11:46:51'),
(96, 2417, '3', 0.991875, 17, 1, '2017-09-17 11:46:51'),
(96, 2441, '1', 0.75, 20, 1, '2017-09-17 11:46:51'),
(96, 2405, '3', 0.316875, 27, 1, '2017-09-17 11:46:51'),
(96, 2462, '3', -2.56687, 3, 0, '2017-09-17 11:46:52'),
(96, 2388, '3', 1.36688, 13, 1, '2017-09-17 11:46:52'),
(96, 2415, '4', 0.541875, 23, 1, '2017-09-17 11:46:52'),
(96, 2460, '4', -2.29688, 5, 0, '2017-09-17 11:46:52'),
(96, 2423, '3', 1.47, 12, 1, '2017-09-17 11:46:52'),
(96, 2412, '3', -2.43, 4, 0, '2017-09-17 11:46:52'),
(96, 2395, '3', -0.826875, 19, 0, '2017-09-17 11:46:52'),
(96, 2392, '1', -0.316875, 27, 0, '2017-09-17 11:46:52'),
(96, 2390, '2', -2.04187, 7, 0, '2017-09-17 11:46:52'),
(96, 2387, '4', 0.421875, 25, 1, '2017-09-17 11:46:52'),
(96, 2463, '4', -2.04187, 7, 0, '2017-09-17 11:46:52'),
(96, 396, '0', -0.0075, 20, 0, '2017-09-17 11:46:52'),
(96, 398, '1', 0.3675, 13, 1, '2017-09-17 11:46:53'),
(96, 1130, '1', -1.2675, 7, 0, '2017-09-17 11:46:53'),
(96, 2413, '0', 0, 11, -1, '2017-09-17 11:46:53'),
(96, 2418, '2', 2.56687, 6, 1, '2017-09-17 11:46:53'),
(96, 367, '0', 0, 8, -1, '2017-09-17 11:46:53'),
(96, 390, '2', -0.12, 16, 0, '2017-09-17 11:46:53'),
(96, 2427, '0', 0, 3, -1, '2017-09-17 11:46:53'),
(96, 2429, '4', 2.35347, 16, 1, '2017-09-17 11:46:53'),
(96, 402, '4', -1.6875, 5, 0, '2017-09-17 11:46:53'),
(96, 381, '4', -0.9075, 9, 0, '2017-09-17 11:46:53'),
(96, 395, '0', -0.0075, 20, 0, '2017-09-17 11:46:53'),
(96, 364, '4', -0.48, 12, 0, '2017-09-17 11:46:54'),
(96, 386, '4', 1.92, 4, 1, '2017-09-17 11:46:54'),
(96, 2400, '3', 2.27816, 9, 1, '2017-09-17 11:46:54'),
(96, 2408, '1', -2.62146, 6, 0, '2017-09-17 11:46:54'),
(96, 1110, '2', 1.2675, 7, 1, '2017-09-17 11:46:54'),
(96, 368, '3', 1.2675, 7, 1, '2017-09-17 11:46:54'),
(96, 385, '4', -0.0675, 17, 0, '2017-09-17 11:46:54'),
(96, 372, '4', 2.1675, 3, 1, '2017-09-17 11:46:54'),
(96, 384, '4', -1.92, 4, 0, '2017-09-17 11:46:54'),
(96, 2406, '1', -2.06444, 15, 0, '2017-09-17 11:46:54'),
(96, 383, '0', -0.0075, 20, 0, '2017-09-17 11:46:54'),
(96, 1140, '1', 0.9075, 9, 1, '2017-09-17 11:46:54'),
(96, 391, '2', 0.48, 12, 1, '2017-09-17 11:46:55'),
(96, 392, '2', -1.92, 4, 0, '2017-09-17 11:46:55'),
(96, 366, '3', -0.75, 10, 0, '2017-09-17 11:46:55'),
(96, 1139, '2', 0.1875, 15, 1, '2017-09-17 11:46:55'),
(96, 1115, '1', 1.6875, 5, 1, '2017-09-17 11:46:55'),
(96, 2403, '1', -2.08333, 15, 0, '2017-09-17 11:46:55'),
(96, 2420, '1', -2.46387, 9, 0, '2017-09-17 11:46:55'),
(96, 399, '1', 0.9075, 9, 1, '2017-09-17 11:46:55'),
(96, 377, '1', -1.92, 4, 0, '2017-09-17 11:46:55'),
(96, 1107, '4', 1.47, 6, 1, '2017-09-17 11:46:55'),
(96, 1109, '4', -0.9075, 9, 0, '2017-09-17 11:46:55'),
(96, 380, '4', -1.08, 8, 0, '2017-09-17 11:46:55'),
(96, 400, '4', 1.08, 8, 1, '2017-09-17 11:46:55'),
(96, 2432, '4', 2.8386, 3, 1, '2017-09-17 11:46:56'),
(96, 2422, '3', -2.37964, 14, 0, '2017-09-17 11:46:56'),
(96, 2410, '3', -2.72109, 4, 0, '2017-09-17 11:46:56'),
(96, 2414, '3', 2.66878, 5, 1, '2017-09-17 11:46:56'),
(96, 1137, '4', -1.08, 8, 0, '2017-09-17 11:46:56'),
(96, 2419, '4', -2.47521, 11, 0, '2017-09-17 11:46:56'),
(96, 388, '4', -1.47, 6, 0, '2017-09-17 11:46:56'),
(96, 370, '4', -1.2675, 7, 0, '2017-09-17 11:46:56'),
(96, 373, '4', -1.92, 4, 0, '2017-09-17 11:46:56'),
(96, 394, '1', -0.6075, 11, 0, '2017-09-17 11:46:56'),
(96, 374, '1', -1.6875, 5, 0, '2017-09-17 11:46:56'),
(97, 2610, '3', 0.826875, 19, 1, '2017-09-17 11:46:57'),
(97, 2607, '4', 1.80187, 9, 1, '2017-09-17 11:46:57'),
(97, 2614, '4', 1.92, 8, 1, '2017-09-17 11:46:57'),
(97, 2602, '3', 0.046875, 35, 1, '2017-09-17 11:46:57'),
(97, 2615, '1', 0.27, 28, 1, '2017-09-17 11:46:57'),
(97, 2608, '4', -1.57687, 11, 0, '2017-09-17 11:46:57'),
(97, 2604, '4', -0.12, 32, 0, '2017-09-17 11:46:58'),
(97, 2601, '2', 2.56687, 3, 1, '2017-09-17 11:46:58'),
(97, 2609, '2', 1.17188, 15, 1, '2017-09-17 11:46:58'),
(97, 2612, '1', 1.80187, 9, 1, '2017-09-17 11:46:58'),
(97, 2605, '2', 1.92, 8, 1, '2017-09-17 11:46:58'),
(97, 2617, '1', 2.7, 6, 1, '2017-09-17 11:46:58'),
(97, 2624, '2', 2.2, 16, 1, '2017-09-17 11:46:58'),
(97, 2627, '0', 0, 14, -1, '2017-09-17 11:46:58'),
(97, 2632, '3', 2.15, 17, 1, '2017-09-17 11:46:58'),
(97, 2635, '4', -2.1, 18, 0, '2017-09-17 11:46:58'),
(97, 2625, '4', -1.75, 25, 0, '2017-09-17 11:46:58'),
(97, 2630, '0', 0, 24, -1, '2017-09-17 11:46:58'),
(97, 2616, '1', -0.85, 43, 0, '2017-09-17 11:46:58'),
(97, 2631, '3', 2.3, 14, 1, '2017-09-17 11:46:59'),
(97, 2619, '0', 0, 10, -1, '2017-09-17 11:46:59'),
(97, 2618, '3', 2.55, 9, 1, '2017-09-17 11:46:59'),
(97, 2633, '3', 1.95, 21, 1, '2017-09-17 11:46:59'),
(97, 2621, '3', 2.1, 18, 1, '2017-09-17 11:46:59'),
(97, 2835, '3', 1.62865, 36, 1, '2017-09-17 11:46:59'),
(97, 2730, '4', 1.67358, 35, 1, '2017-09-17 11:46:59'),
(97, 2733, '2', 2.21246, 22, 1, '2017-09-17 11:46:59'),
(97, 1169, '2', 0.421875, 15, 1, '2017-09-17 11:46:59'),
(97, 1227, '0', 0, 22, -1, '2017-09-17 11:46:59'),
(97, 1270, '0', 0, 0, -1, '2017-09-17 11:46:59'),
(97, 1170, '2', 0.520833, 14, 1, '2017-09-17 11:46:59'),
(97, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:47:00'),
(97, 1216, '0', -0.00520833, 24, 0, '2017-09-17 11:47:00'),
(97, 1297, '3', 0.963333, 26, 1, '2017-09-17 11:47:00'),
(97, 1218, '0', -0.0075, 20, 0, '2017-09-17 11:47:00'),
(97, 1172, '1', -0.0075, 21, 0, '2017-09-17 11:47:00'),
(97, 1291, '4', 0.0675, 17, 1, '2017-09-17 11:47:00'),
(97, 1183, '2', 0.75, 11, 1, '2017-09-17 11:47:00'),
(97, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:47:00'),
(97, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:47:00'),
(97, 1195, '4', 0.03, 18, 1, '2017-09-17 11:47:00'),
(97, 1186, '3', 0.244898, 20, 1, '2017-09-17 11:47:00'),
(97, 1276, '0', -0.00292969, 32, 0, '2017-09-17 11:47:00'),
(97, 1184, '4', 0.520833, 14, 1, '2017-09-17 11:47:01'),
(97, 1292, '0', 0, 12, -1, '2017-09-17 11:47:01'),
(97, 1194, '1', 0.0956633, 23, 1, '2017-09-17 11:47:01'),
(97, 1198, '4', 0.0075, 19, 1, '2017-09-17 11:47:01'),
(97, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:47:01'),
(97, 1263, '0', -0.001875, 40, 0, '2017-09-17 11:47:01'),
(97, 1197, '1', 0.00520833, 23, 1, '2017-09-17 11:47:01'),
(97, 1190, '4', 0.979592, 12, 1, '2017-09-17 11:47:01'),
(97, 1177, '2', 1.39463, 7, 1, '2017-09-17 11:47:01'),
(97, 1196, '4', 0.880208, 11, 1, '2017-09-17 11:47:01'),
(97, 1174, '3', 1.28254, 9, 1, '2017-09-17 11:47:01'),
(97, 1173, '2', 0.0075, 19, 1, '2017-09-17 11:47:01'),
(97, 1287, '0', -0.00130208, 48, 0, '2017-09-17 11:47:02'),
(97, 1202, '1', 0.00925926, 34, 1, '2017-09-17 11:47:02'),
(97, 1217, '0', -0.0075, 20, 0, '2017-09-17 11:47:02'),
(97, 1282, '1', -0.27, 21, 0, '2017-09-17 11:47:02'),
(97, 1281, '3', 0.03, 27, 1, '2017-09-17 11:47:02'),
(97, 1294, '3', 0.421875, 15, 1, '2017-09-17 11:47:02'),
(97, 1200, '2', 0, 36, 0, '2017-09-17 11:47:02'),
(97, 1219, '4', -0.396694, 14, 0, '2017-09-17 11:47:02'),
(97, 1208, '0', -0.0012, 50, 0, '2017-09-17 11:47:02'),
(97, 1268, '3', -0.0208333, 44, 0, '2017-09-17 11:47:02'),
(97, 1220, '4', -0.0956633, 23, 0, '2017-09-17 11:47:02'),
(97, 1257, '0', -0.00130208, 48, 0, '2017-09-17 11:47:02'),
(97, 1199, '3', 0.0117188, 30, 1, '2017-09-17 11:47:02'),
(97, 1293, '2', 0.75, 12, 1, '2017-09-17 11:47:03'),
(97, 1191, '3', 0.75, 14, 1, '2017-09-17 11:47:03'),
(97, 1175, '4', 0, 32, 1, '2017-09-17 11:47:03'),
(97, 1171, '4', 0.0075, 19, 1, '2017-09-17 11:47:03'),
(97, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:47:03'),
(97, 1189, '1', -0.979592, 12, 0, '2017-09-17 11:47:03'),
(97, 1265, '0', -0.00110947, 52, 0, '2017-09-17 11:47:03'),
(97, 1284, '3', 0.0075, 19, 1, '2017-09-17 11:47:03'),
(97, 1298, '1', 0.520833, 35, 1, '2017-09-17 11:47:03'),
(97, 1229, '0', -0.00102881, 54, 0, '2017-09-17 11:47:03'),
(97, 1250, '0', -0.000833333, 60, 0, '2017-09-17 11:47:03'),
(97, 1289, '0', -0.001875, 40, 0, '2017-09-17 11:47:03'),
(97, 1283, '0', -0.00520833, 24, 0, '2017-09-17 11:47:03'),
(97, 1204, '2', -0.046875, 42, 0, '2017-09-17 11:47:04'),
(97, 1176, '0', -0.00382653, 28, 0, '2017-09-17 11:47:04'),
(97, 1286, '0', -0.000833333, 60, 0, '2017-09-17 11:47:04'),
(97, 380, '0', -0.0075, 20, 0, '2017-09-17 11:47:04'),
(97, 1120, '3', 0.12, 16, 1, '2017-09-17 11:47:04'),
(97, 399, '0', -0.0075, 20, 0, '2017-09-17 11:47:04'),
(97, 371, '2', -0.9075, 9, 0, '2017-09-17 11:47:04'),
(97, 1109, '4', -1.08, 8, 0, '2017-09-17 11:47:04'),
(97, 1121, '2', -0.03, 18, 0, '2017-09-17 11:47:04'),
(97, 2403, '2', 2.61333, 6, 1, '2017-09-17 11:47:04'),
(97, 2431, '2', -1.40678, 29, 0, '2017-09-17 11:47:04'),
(97, 366, '4', 0.6075, 11, 1, '2017-09-17 11:47:04'),
(97, 367, '1', -0.0675, 17, 0, '2017-09-17 11:47:04'),
(97, 395, '4', -0.1875, 15, 0, '2017-09-17 11:47:05'),
(97, 1140, '0', 0, 19, -1, '2017-09-17 11:47:05'),
(97, 1139, '0', 0, 13, -1, '2017-09-17 11:47:05'),
(97, 1122, '0', 0, 1, -1, '2017-09-17 11:47:05'),
(97, 1133, '3', 1.2675, 7, 1, '2017-09-17 11:47:05'),
(97, 401, '0', -0.0075, 20, 0, '2017-09-17 11:47:05'),
(97, 372, '0', -0.0075, 20, 0, '2017-09-17 11:47:05'),
(97, 2748, '4', -0.48, 18, 0, '2017-09-17 11:47:05'),
(97, 2738, '2', 1.61333, 8, 1, '2017-09-17 11:47:05'),
(97, 2737, '4', 0.563333, 17, 1, '2017-09-17 11:47:05'),
(97, 2760, '4', 0.0833333, 25, 1, '2017-09-17 11:47:05'),
(97, 2758, '4', 1.61333, 8, 1, '2017-09-17 11:47:05'),
(97, 2747, '3', -0.213333, 22, 0, '2017-09-17 11:47:06'),
(97, 2736, '4', 2.08333, 5, 1, '2017-09-17 11:47:06'),
(97, 2761, '1', 0.653333, 16, 1, '2017-09-17 11:47:06'),
(97, 2752, '4', -1.20333, 11, 0, '2017-09-17 11:47:06'),
(97, 2754, '1', 1.47, 9, 1, '2017-09-17 11:47:06'),
(97, 2755, '3', 0.403333, 19, 1, '2017-09-17 11:47:06'),
(97, 2740, '0', 0, 29, -1, '2017-09-17 11:47:06'),
(97, 2741, '3', 1.61333, 8, 1, '2017-09-17 11:47:06'),
(97, 2744, '1', 0.563333, 17, 1, '2017-09-17 11:47:06'),
(97, 2751, '0', -0.00333333, 30, 0, '2017-09-17 11:47:06'),
(97, 2742, '0', 0, 31, -1, '2017-09-17 11:47:07'),
(97, 2743, '2', -0.963333, 13, 0, '2017-09-17 11:47:07'),
(97, 2745, '3', -0.403333, 19, 0, '2017-09-17 11:47:07'),
(97, 2756, '2', 1.61333, 8, 1, '2017-09-17 11:47:07'),
(97, 2763, '1', 0.963333, 13, 1, '2017-09-17 11:47:07'),
(97, 2750, '1', -1.08, 12, 0, '2017-09-17 11:47:07'),
(97, 2746, '1', -0.653333, 16, 0, '2017-09-17 11:47:07'),
(97, 2757, '1', -1.76333, 7, 0, '2017-09-17 11:47:07'),
(97, 2739, '2', -0.213333, 22, 0, '2017-09-17 11:47:07'),
(97, 2749, '3', -0.213333, 22, 0, '2017-09-17 11:47:07'),
(97, 2762, '3', 0.27, 21, 1, '2017-09-17 11:47:07'),
(97, 2759, '2', 2.08333, 5, 1, '2017-09-17 11:47:07'),
(97, 2753, '2', 2.08333, 5, 1, '2017-09-17 11:47:08'),
(97, 2785, '4', -2.34, 11, 0, '2017-09-17 11:47:08'),
(97, 2767, '2', -1.5552, 14, 0, '2017-09-17 11:47:08'),
(97, 2765, '0', 0, 16, -1, '2017-09-17 11:47:08'),
(97, 2772, '4', -2.43, 5, 0, '2017-09-17 11:47:08'),
(97, 2787, '3', -1.7328, 12, 0, '2017-09-17 11:47:08'),
(97, 2784, '2', 2.5392, 4, 1, '2017-09-17 11:47:08'),
(97, 2786, '2', -1.3068, 17, 0, '2017-09-17 11:47:08'),
(97, 2779, '4', -1.47, 15, 0, '2017-09-17 11:47:08'),
(97, 2781, '3', 1.3068, 17, 1, '2017-09-17 11:47:08'),
(97, 2764, '1', 1.92, 10, 1, '2017-09-17 11:47:08'),
(97, 2769, '4', 1.6428, 13, 1, '2017-09-17 11:47:08'),
(97, 2780, '1', 0.0588, 43, 1, '2017-09-17 11:47:08'),
(97, 2773, '4', -2.5392, 4, 0, '2017-09-17 11:47:09'),
(97, 2776, '1', 2.5392, 4, 1, '2017-09-17 11:47:09'),
(97, 2789, '0', -0.0012, 50, 0, '2017-09-17 11:47:09'),
(97, 2783, '4', -1.6428, 13, 0, '2017-09-17 11:47:09'),
(97, 2770, '2', 1.7328, 12, 1, '2017-09-17 11:47:09'),
(98, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:47:09'),
(98, 1172, '4', 0.27, 14, 1, '2017-09-17 11:47:09'),
(98, 1196, '4', 0.75, 12, 1, '2017-09-17 11:47:09'),
(98, 1184, '4', 0.880208, 11, 1, '2017-09-17 11:47:10'),
(98, 1174, '3', 1.43787, 8, 1, '2017-09-17 11:47:10'),
(98, 1216, '4', 0.00520833, 23, 1, '2017-09-17 11:47:10'),
(98, 1198, '4', 0.9075, 9, 1, '2017-09-17 11:47:10'),
(98, 1195, '4', 0.0675, 17, 1, '2017-09-17 11:47:10'),
(98, 1197, '1', 1.88021, 5, 1, '2017-09-17 11:47:10'),
(98, 1169, '2', 1.33333, 8, 1, '2017-09-17 11:47:10'),
(98, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:47:10'),
(98, 1183, '2', 0.892562, 10, 1, '2017-09-17 11:47:10'),
(98, 1170, '2', 0.880208, 11, 1, '2017-09-17 11:47:10'),
(98, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:47:10'),
(98, 1203, '3', 0.213333, 22, 1, '2017-09-17 11:47:10'),
(98, 1190, '4', 0.382653, 18, 1, '2017-09-17 11:47:10'),
(98, 1177, '0', -0.00619835, 22, 0, '2017-09-17 11:47:11'),
(98, 1185, '3', -0.00382653, 27, 0, '2017-09-17 11:47:11'),
(98, 1276, '3', -0.105469, 26, 0, '2017-09-17 11:47:11'),
(98, 1173, '2', 0.12, 16, 1, '2017-09-17 11:47:11'),
(98, 1218, '0', -0.0075, 20, 0, '2017-09-17 11:47:11'),
(98, 1194, '1', 1.53061, 8, 1, '2017-09-17 11:47:11'),
(98, 1282, '2', -0.7, 23, 0, '2017-09-17 11:47:11'),
(98, 1220, '0', 0, 17, -1, '2017-09-17 11:47:11'),
(98, 1287, '4', -0.6875, 37, 0, '2017-09-17 11:47:11'),
(98, 1268, '3', -0.5625, 39, 0, '2017-09-17 11:47:11'),
(98, 1291, '1', -0.1875, 15, 0, '2017-09-17 11:47:11'),
(98, 1186, '3', 0.979592, 12, 1, '2017-09-17 11:47:11'),
(98, 1269, '0', -0.0625, 48, 0, '2017-09-17 11:47:11'),
(98, 1265, '0', -0.0576923, 52, 0, '2017-09-17 11:47:12'),
(98, 1208, '1', 0.66, 39, 1, '2017-09-17 11:47:12'),
(98, 1202, '1', 0.833333, 26, 1, '2017-09-17 11:47:12'),
(98, 1219, '3', 0.272727, 20, 1, '2017-09-17 11:47:12'),
(98, 1171, '4', 1.2, 12, 1, '2017-09-17 11:47:12'),
(98, 1191, '3', 2.14286, 8, 1, '2017-09-17 11:47:12'),
(98, 1200, '3', -0.833333, 26, 0, '2017-09-17 11:47:12'),
(98, 1175, '4', 0.5625, 26, 1, '2017-09-17 11:47:12'),
(98, 1284, '0', -0.15, 20, 0, '2017-09-17 11:47:12'),
(98, 1281, '1', -1, 20, 0, '2017-09-17 11:47:12'),
(98, 1257, '4', 0.125, 46, 1, '2017-09-17 11:47:12'),
(98, 1199, '4', -0.65625, 25, 0, '2017-09-17 11:47:12'),
(98, 1294, '3', 1.5, 12, 1, '2017-09-17 11:47:13'),
(98, 1217, '3', 1.35, 11, 1, '2017-09-17 11:47:13'),
(98, 1189, '3', 1.60714, 13, 1, '2017-09-17 11:47:13'),
(98, 1293, '2', 1.5, 12, 1, '2017-09-17 11:47:13'),
(98, 1283, '0', 0, 22, -1, '2017-09-17 11:47:13'),
(98, 1296, '2', 1, 16, 1, '2017-09-17 11:47:13'),
(98, 1187, '1', -1.96783, 15, 0, '2017-09-17 11:47:13'),
(98, 1204, '0', -0.0625, 48, 0, '2017-09-17 11:47:13'),
(98, 1289, '1', 0, 40, 0, '2017-09-17 11:47:13'),
(98, 1206, '0', -1.05, 40, 0, '2017-09-17 11:47:13'),
(98, 1264, '0', -0.0454545, 66, 0, '2017-09-17 11:47:13'),
(98, 172, '3', -1.44545, 57, 0, '2017-09-17 11:47:14'),
(98, 171, '1', 0.7875, 59, 1, '2017-09-17 11:47:14'),
(98, 1275, '0', -0.0555556, 54, 0, '2017-09-17 11:47:14'),
(98, 1229, '0', 0, 27, -1, '2017-09-17 11:47:14'),
(98, 1176, '4', 1.92857, 10, 1, '2017-09-17 11:47:14'),
(98, 1299, '0', -0.0454545, 66, 0, '2017-09-17 11:47:14'),
(98, 1295, '4', 1.25, 14, 1, '2017-09-17 11:47:14'),
(98, 874, '1', 2.58673, 4, 1, '2017-09-17 11:47:14'),
(98, 346, '1', 1.45504, 17, 1, '2017-09-17 11:47:14'),
(98, 868, '1', 2.21558, 9, 1, '2017-09-17 11:47:14'),
(98, 1125, '1', -0.75, 30, 0, '2017-09-17 11:47:14'),
(98, 2401, '2', -2.05314, 19, 0, '2017-09-17 11:47:14'),
(98, 340, '1', -1.74422, 19, 0, '2017-09-17 11:47:14'),
(98, 361, '1', 0.382653, 36, 1, '2017-09-17 11:47:15'),
(98, 855, '1', -1.35425, 21, 0, '2017-09-17 11:47:15'),
(98, 863, '2', 2.1412, 9, 1, '2017-09-17 11:47:15'),
(98, 865, '3', -2.1675, 9, 0, '2017-09-17 11:47:15'),
(98, 362, '4', -2.25333, 8, 0, '2017-09-17 11:47:15'),
(98, 859, '2', -1.78531, 16, 0, '2017-09-17 11:47:15'),
(98, 923, '3', -2.00826, 16, 0, '2017-09-17 11:47:15'),
(98, 326, '4', 1.47, 27, 1, '2017-09-17 11:47:15'),
(98, 857, '3', 1.6875, 15, 1, '2017-09-17 11:47:15'),
(98, 873, '3', -1.21488, 24, 0, '2017-09-17 11:47:15'),
(98, 1639, '1', -1.35093, 25, 0, '2017-09-17 11:47:15'),
(98, 858, '3', -1.6875, 15, 0, '2017-09-17 11:47:15'),
(98, 864, '3', 2.25333, 8, 1, '2017-09-17 11:47:15'),
(98, 871, '0', 0, 19, -1, '2017-09-17 11:47:16'),
(98, 872, '4', -1.61333, 16, 0, '2017-09-17 11:47:16'),
(98, 867, '3', 1.6875, 15, 1, '2017-09-17 11:47:16'),
(98, 856, '4', 2.37964, 7, 1, '2017-09-17 11:47:16'),
(98, 345, '1', 1.33333, 20, 1, '2017-09-17 11:47:16'),
(98, 306, '0', 0, 9, -1, '2017-09-17 11:47:16'),
(98, 891, '4', -1.94676, 7, 0, '2017-09-17 11:47:16'),
(98, 309, '4', 2.34083, 7, 1, '2017-09-17 11:47:16'),
(98, 882, '1', -1.29199, 22, 0, '2017-09-17 11:47:16'),
(98, 304, '2', 0.979592, 24, 1, '2017-09-17 11:47:16'),
(98, 881, '4', -2.2707, 13, 0, '2017-09-17 11:47:16'),
(98, 357, '1', 1.76333, 14, 1, '2017-09-17 11:47:16'),
(98, 892, '0', 0, 12, -1, '2017-09-17 11:47:17'),
(98, 875, '1', 1.92, 12, 1, '2017-09-17 11:47:17'),
(98, 305, '3', -1.3138, 23, 0, '2017-09-17 11:47:17'),
(98, 1683, '4', -1.72521, 29, 0, '2017-09-17 11:47:17'),
(98, 890, '2', 0.231481, 26, 1, '2017-09-17 11:47:17'),
(98, 308, '2', -1.08, 28, 0, '2017-09-17 11:47:18'),
(98, 303, '2', 1.53061, 20, 1, '2017-09-17 11:47:18'),
(98, 302, '1', 1.71259, 22, 1, '2017-09-17 11:47:18'),
(98, 876, '2', 0.6075, 33, 1, '2017-09-17 11:47:18'),
(98, 310, '1', -1.3068, 17, 0, '2017-09-17 11:47:18'),
(98, 887, '1', 2.37964, 7, 1, '2017-09-17 11:47:18'),
(98, 307, '1', 1.6875, 14, 1, '2017-09-17 11:47:18'),
(98, 358, '1', -1.75854, 15, 0, '2017-09-17 11:47:18'),
(98, 918, '3', 2.57845, 7, 1, '2017-09-17 11:47:18'),
(98, 897, '2', 0.9075, 18, 1, '2017-09-17 11:47:18'),
(98, 894, '3', -0.75, 17, 0, '2017-09-17 11:47:18'),
(98, 893, '3', 1.94676, 7, 1, '2017-09-17 11:47:18'),
(98, 964, '1', -0.968492, 38, 0, '2017-09-17 11:47:18'),
(98, 901, '2', 2.38116, 12, 1, '2017-09-17 11:47:19'),
(98, 905, '2', 1.2675, 28, 1, '2017-09-17 11:47:19'),
(98, 356, '1', 0.75, 33, 1, '2017-09-17 11:47:19'),
(98, 910, '2', -1.70455, 38, 0, '2017-09-17 11:47:19'),
(98, 912, '2', 2.46387, 9, 1, '2017-09-17 11:47:19'),
(98, 969, '2', -2.64286, 10, 0, '2017-09-17 11:47:19'),
(98, 312, '4', -1.92, 10, 0, '2017-09-17 11:47:19'),
(98, 963, '2', -1.0662, 42, 0, '2017-09-17 11:47:19'),
(98, 904, '2', 1.59245, 19, 1, '2017-09-17 11:47:19'),
(98, 896, '3', -0.676875, 21, 0, '2017-09-17 11:47:19'),
(98, 314, '4', -0.5292, 29, 0, '2017-09-17 11:47:19'),
(98, 899, '1', -2.1888, 14, 0, '2017-09-17 11:47:20'),
(98, 895, '1', 1.40443, 12, 1, '2017-09-17 11:47:20'),
(98, 902, '4', -1.88882, 19, 0, '2017-09-17 11:47:20'),
(98, 911, '2', -2.10422, 13, 0, '2017-09-17 11:47:20'),
(98, 907, '2', 2.39158, 9, 1, '2017-09-17 11:47:20'),
(98, 869, '4', -0.705234, 34, 0, '2017-09-17 11:47:20'),
(98, 900, '2', 2.45578, 8, 1, '2017-09-17 11:47:20'),
(98, 909, '1', -1.6428, 26, 0, '2017-09-17 11:47:20'),
(98, 903, '4', 1.83105, 21, 1, '2017-09-17 11:47:20'),
(98, 908, '2', 2.66878, 5, 1, '2017-09-17 11:47:20'),
(98, 315, '1', -1.20821, 19, 0, '2017-09-17 11:47:20'),
(98, 317, '1', 1.61333, 16, 1, '2017-09-17 11:47:20'),
(98, 316, '1', 1.98047, 12, 1, '2017-09-17 11:47:21'),
(98, 898, '4', -2.4, 8, 0, '2017-09-17 11:47:21'),
(98, 313, '4', -1.99177, 10, 0, '2017-09-17 11:47:21'),
(98, 360, '2', 1.86226, 14, 1, '2017-09-17 11:47:21'),
(98, 929, '1', -1.8252, 22, 0, '2017-09-17 11:47:21'),
(98, 3210, '1', -1.02083, 20, 0, '2017-09-17 11:47:21'),
(98, 341, '3', -1.92, 12, 0, '2017-09-17 11:47:21'),
(98, 322, '3', -1.02083, 25, 0, '2017-09-17 11:47:21'),
(98, 930, '2', -2.08333, 14, 0, '2017-09-17 11:47:21'),
(98, 919, '3', 1.6875, 20, 1, '2017-09-17 11:47:21'),
(98, 324, '1', -1.2398, 20, 0, '2017-09-17 11:47:21'),
(98, 605, '1', -2.08333, 10, 0, '2017-09-17 11:47:22'),
(98, 601, '4', 1.53061, 16, 1, '2017-09-17 11:47:22'),
(98, 611, '1', -1.5552, 14, 0, '2017-09-17 11:47:22'),
(98, 603, '1', 1.0662, 21, 1, '2017-09-17 11:47:22'),
(98, 593, '3', -0.853333, 28, 0, '2017-09-17 11:47:22'),
(98, 1301, '3', 1.6875, 16, 1, '2017-09-17 11:47:22'),
(98, 996, '4', -0.6912, 26, 0, '2017-09-17 11:47:22'),
(98, 594, '3', 2.0172, 9, 1, '2017-09-17 11:47:22'),
(98, 606, '4', -2.1675, 9, 0, '2017-09-17 11:47:22'),
(98, 1303, '1', 1.02083, 25, 1, '2017-09-17 11:47:22'),
(98, 604, '4', -1.61333, 16, 0, '2017-09-17 11:47:22'),
(98, 1308, '3', 0.653333, 32, 1, '2017-09-17 11:47:22'),
(98, 607, '3', 0.919324, 25, 1, '2017-09-17 11:47:23'),
(98, 602, '1', -0.949219, 28, 0, '2017-09-17 11:47:23'),
(98, 613, '4', -1.61333, 16, 0, '2017-09-17 11:47:23'),
(98, 609, '1', -1.02083, 25, 0, '2017-09-17 11:47:23'),
(98, 597, '0', 0, 13, -1, '2017-09-17 11:47:23'),
(98, 622, '2', 1.76333, 14, 1, '2017-09-17 11:47:23'),
(98, 614, '2', -1.90226, 11, 0, '2017-09-17 11:47:23'),
(98, 596, '2', -1.72942, 13, 0, '2017-09-17 11:47:23'),
(98, 852, '1', -0.3675, 39, 0, '2017-09-17 11:47:23'),
(98, 1311, '4', 2.0172, 9, 1, '2017-09-17 11:47:23'),
(98, 619, '3', -0.963333, 26, 0, '2017-09-17 11:47:23'),
(98, 853, '4', -0.6075, 33, 0, '2017-09-17 11:47:23'),
(98, 598, '4', 2.25333, 8, 1, '2017-09-17 11:47:23'),
(98, 1310, '4', 2.34763, 6, 1, '2017-09-17 11:47:24'),
(98, 403, '4', 2.08333, 10, 1, '2017-09-17 11:47:24'),
(98, 600, '3', 1.38138, 18, 1, '2017-09-17 11:47:24'),
(98, 615, '1', -1.84083, 13, 0, '2017-09-17 11:47:24'),
(98, 850, '3', 2.00083, 11, 1, '2017-09-17 11:47:24'),
(98, 1091, '0', 0, 10, -1, '2017-09-17 11:47:24'),
(98, 595, '3', -0.869823, 24, 0, '2017-09-17 11:47:24'),
(98, 1124, '1', -0.48, 36, 0, '2017-09-17 11:47:24'),
(98, 1317, '3', 1.76333, 14, 1, '2017-09-17 11:47:24'),
(98, 854, '1', 2.27816, 9, 1, '2017-09-17 11:47:24'),
(98, 599, '1', 0.240833, 43, 1, '2017-09-17 11:47:24'),
(98, 1318, '2', 2.1132, 9, 1, '2017-09-17 11:47:24'),
(98, 624, '1', 1.08, 24, 1, '2017-09-17 11:47:24'),
(98, 1089, '4', -2.25333, 8, 0, '2017-09-17 11:47:25'),
(98, 1343, '4', 1.47, 15, 1, '2017-09-17 11:47:25'),
(98, 1329, '3', 2.25333, 8, 1, '2017-09-17 11:47:25'),
(98, 1332, '3', 2.6, 8, 1, '2017-09-17 11:47:25'),
(98, 1339, '2', 2.6, 8, 1, '2017-09-17 11:47:25'),
(98, 1328, '2', -2.05, 19, 0, '2017-09-17 11:47:25'),
(98, 1096, '3', 2.45, 11, 1, '2017-09-17 11:47:25'),
(98, 1321, '3', 2.71875, 6, 1, '2017-09-17 11:47:25'),
(98, 1132, '2', -2.6, 8, 0, '2017-09-17 11:47:25'),
(98, 1315, '2', -1.91379, 21, 0, '2017-09-17 11:47:25'),
(98, 1337, '3', 1.3125, 36, 1, '2017-09-17 11:47:25'),
(98, 1334, '4', 2.55, 9, 1, '2017-09-17 11:47:25'),
(98, 1113, '1', 1.95455, 23, 1, '2017-09-17 11:47:26'),
(98, 1111, '2', 2.1604, 28, 1, '2017-09-17 11:47:26'),
(98, 610, '3', -2.5156, 13, 0, '2017-09-17 11:47:26'),
(98, 1307, '2', 2.51471, 11, 1, '2017-09-17 11:47:26'),
(98, 1363, '1', -2.33688, 20, 0, '2017-09-17 11:47:26'),
(98, 1090, '1', -2.7, 6, 0, '2017-09-17 11:47:26'),
(98, 1326, '1', 1.81034, 23, 1, '2017-09-17 11:47:26'),
(98, 1333, '2', 2.7, 6, 1, '2017-09-17 11:47:26'),
(98, 1099, '2', -2.54077, 15, 0, '2017-09-17 11:47:26'),
(98, 1327, '1', -2.4, 10, 0, '2017-09-17 11:47:26'),
(98, 1340, '2', 2.46774, 11, 1, '2017-09-17 11:47:26'),
(98, 1324, '3', 2.54545, 10, 1, '2017-09-17 11:47:27'),
(98, 608, '3', -2.47645, 15, 0, '2017-09-17 11:47:27'),
(98, 1126, '3', -2.65, 7, 0, '2017-09-17 11:47:27'),
(98, 1325, '3', -1.98214, 19, 0, '2017-09-17 11:47:27'),
(98, 1106, '2', -2.55, 9, 0, '2017-09-17 11:47:27'),
(98, 1313, '2', 2.5, 9, 1, '2017-09-17 11:47:27'),
(98, 1092, '2', -2.5, 10, 0, '2017-09-17 11:47:27'),
(98, 1341, '3', -2.35, 13, 0, '2017-09-17 11:47:27'),
(98, 1338, '2', 2.02423, 10, 1, '2017-09-17 11:47:27'),
(98, 995, '4', 2.5, 10, 1, '2017-09-17 11:47:27'),
(98, 1322, '0', 0, 10, -1, '2017-09-17 11:47:27'),
(98, 1331, '2', 2.325, 9, 1, '2017-09-17 11:47:28'),
(98, 1335, '2', 2.46429, 10, 1, '2017-09-17 11:47:28'),
(98, 1103, '3', -1.79167, 29, 0, '2017-09-17 11:47:28'),
(98, 1320, '3', 2.22, 13, 1, '2017-09-17 11:47:28'),
(98, 1312, '1', -1.13636, 41, 0, '2017-09-17 11:47:28'),
(98, 1323, '1', -2.29688, 15, 0, '2017-09-17 11:47:28'),
(98, 1304, '2', 1.28571, 32, 1, '2017-09-17 11:47:28'),
(98, 1366, '4', 2.45, 11, 1, '2017-09-17 11:47:28'),
(98, 1344, '4', 2.7, 6, 1, '2017-09-17 11:47:28'),
(98, 1352, '2', -2.86514, 4, 0, '2017-09-17 11:47:28'),
(98, 1360, '2', 2.6, 8, 1, '2017-09-17 11:47:28'),
(98, 1353, '2', 2.72703, 8, 1, '2017-09-17 11:47:28'),
(98, 1348, '4', -2.72908, 9, 0, '2017-09-17 11:47:29'),
(98, 1316, '4', -2.05434, 26, 0, '2017-09-17 11:47:29'),
(98, 617, '3', -2.69195, 9, 0, '2017-09-17 11:47:29'),
(98, 618, '3', -2.76923, 4, 0, '2017-09-17 11:47:29'),
(98, 1367, '4', -2.70833, 7, 0, '2017-09-17 11:47:29'),
(98, 1095, '3', -1.75, 25, 0, '2017-09-17 11:47:29'),
(98, 1351, '3', -2.65, 7, 0, '2017-09-17 11:47:29'),
(98, 1349, '1', 2.43, 6, 1, '2017-09-17 11:47:29'),
(98, 1356, '1', 2.25333, 8, 1, '2017-09-17 11:47:29'),
(98, 1108, '2', -1.5, 28, 0, '2017-09-17 11:47:29'),
(98, 1346, '4', 1.6875, 28, 1, '2017-09-17 11:47:29'),
(98, 509, '3', -0.391204, 23, 0, '2017-09-17 11:47:29'),
(98, 472, '4', -0.75, 20, 0, '2017-09-17 11:47:30'),
(98, 465, '3', -0.853333, 14, 0, '2017-09-17 11:47:30'),
(98, 720, '4', 0.600416, 21, 1, '2017-09-17 11:47:30'),
(98, 730, '1', -1.02083, 15, 0, '2017-09-17 11:47:30'),
(98, 489, '1', 0.6075, 22, 1, '2017-09-17 11:47:30'),
(98, 728, '4', -0.531856, 22, 0, '2017-09-17 11:47:30'),
(98, 719, '3', 1.02083, 15, 1, '2017-09-17 11:47:30'),
(98, 722, '3', 2.52083, 3, 1, '2017-09-17 11:47:30'),
(98, 726, '1', 0.0233564, 31, 1, '2017-09-17 11:47:30'),
(98, 724, '4', -1.92, 6, 0, '2017-09-17 11:47:30'),
(98, 486, '1', 2.22454, 5, 1, '2017-09-17 11:47:30'),
(98, 729, '4', -1.81481, 8, 0, '2017-09-17 11:47:30'),
(98, 727, '2', 1.56481, 10, 1, '2017-09-17 11:47:30'),
(98, 733, '1', -0.6075, 22, 0, '2017-09-17 11:47:31'),
(98, 723, '1', 1.6875, 9, 1, '2017-09-17 11:47:31'),
(98, 734, '2', 1.76333, 7, 1, '2017-09-17 11:47:31'),
(98, 737, '3', -0.046875, 35, 0, '2017-09-17 11:47:31'),
(98, 732, '3', -1.02083, 15, 0, '2017-09-17 11:47:31'),
(98, 725, '3', -0.66436, 18, 0, '2017-09-17 11:47:31'),
(98, 498, '2', 1.57687, 11, 1, '2017-09-17 11:47:31'),
(98, 494, '3', 1.61333, 8, 1, '2017-09-17 11:47:31'),
(98, 481, '4', -1.6875, 10, 0, '2017-09-17 11:47:31'),
(98, 490, '2', 2.08333, 6, 1, '2017-09-17 11:47:31'),
(98, 464, '3', 1.13609, 10, 1, '2017-09-17 11:47:31'),
(98, 721, '2', -0.27, 28, 0, '2017-09-17 11:47:31'),
(98, 466, '0', 0, 7, -1, '2017-09-17 11:47:31'),
(98, 731, '4', -0.00231481, 35, 0, '2017-09-17 11:47:32'),
(98, 718, '4', -1.20333, 11, 0, '2017-09-17 11:47:32'),
(98, 485, '2', -1.83743, 10, 0, '2017-09-17 11:47:32'),
(98, 735, '1', -0.0133333, 28, 0, '2017-09-17 11:47:32'),
(98, 487, '4', 2.04187, 7, 1, '2017-09-17 11:47:32'),
(98, 736, '2', -0.373702, 22, 0, '2017-09-17 11:47:32'),
(98, 502, '2', 1.63894, 12, 1, '2017-09-17 11:47:32'),
(98, 474, '3', -1.80187, 9, 0, '2017-09-17 11:47:32'),
(98, 742, '3', -1.17188, 15, 0, '2017-09-17 11:47:32'),
(98, 483, '1', -0.141777, 36, 0, '2017-09-17 11:47:32'),
(98, 499, '2', -1.29848, 13, 0, '2017-09-17 11:47:32'),
(98, 478, '1', -1.47, 15, 0, '2017-09-17 11:47:33'),
(98, 476, '2', -0.826875, 19, 0, '2017-09-17 11:47:33'),
(98, 755, '1', 0.0833333, 40, 1, '2017-09-17 11:47:33'),
(98, 757, '1', -1.54395, 13, 0, '2017-09-17 11:47:33'),
(98, 751, '1', -0.396694, 28, 0, '2017-09-17 11:47:33'),
(98, 475, '1', -0.886106, 21, 0, '2017-09-17 11:47:33'),
(98, 748, '4', -1.36688, 13, 0, '2017-09-17 11:47:33'),
(98, 754, '4', 1.7415, 10, 1, '2017-09-17 11:47:33'),
(98, 746, '2', -2.08333, 6, 0, '2017-09-17 11:47:33'),
(98, 750, '3', -0.204159, 34, 0, '2017-09-17 11:47:33'),
(98, 741, '3', -2.26247, 5, 0, '2017-09-17 11:47:33'),
(98, 753, '4', 2.08333, 7, 1, '2017-09-17 11:47:34'),
(98, 756, '2', 1.78255, 11, 1, '2017-09-17 11:47:34'),
(98, 740, '3', -1.22454, 13, 0, '2017-09-17 11:47:34'),
(98, 749, '2', 0.1875, 36, 1, '2017-09-17 11:47:34'),
(98, 747, '2', 1.44676, 11, 1, '2017-09-17 11:47:34'),
(98, 739, '0', 0, 12, -1, '2017-09-17 11:47:34'),
(98, 482, '4', 0.382653, 27, 1, '2017-09-17 11:47:34'),
(98, 479, '3', -1.94093, 9, 0, '2017-09-17 11:47:34'),
(98, 744, '0', 0, 15, -1, '2017-09-17 11:47:34'),
(98, 743, '2', -1.33333, 12, 0, '2017-09-17 11:47:34'),
(98, 477, '3', -0.886106, 21, 0, '2017-09-17 11:47:34'),
(98, 480, '4', -1.47, 12, 0, '2017-09-17 11:47:34'),
(98, 745, '4', -1.80187, 9, 0, '2017-09-17 11:47:35'),
(98, 752, '2', -0.958412, 20, 0, '2017-09-17 11:47:35'),
(98, 1594, '2', -1.09505, 19, 0, '2017-09-17 11:47:35'),
(98, 1590, '4', 1.76881, 13, 1, '2017-09-17 11:47:35'),
(98, 1563, '2', 2.45081, 5, 1, '2017-09-17 11:47:35'),
(98, 1586, '0', 0, 15, -1, '2017-09-17 11:47:35'),
(98, 1589, '4', -1.33333, 14, 0, '2017-09-17 11:47:35'),
(98, 1597, '3', 1.2513, 17, 1, '2017-09-17 11:47:35'),
(98, 1616, '1', -1.73677, 11, 0, '2017-09-17 11:47:35'),
(98, 1574, '1', 1.45504, 17, 1, '2017-09-17 11:47:35'),
(98, 1571, '3', 2.24667, 7, 1, '2017-09-17 11:47:35'),
(98, 1566, '3', 1.36248, 15, 1, '2017-09-17 11:47:35'),
(98, 1595, '1', -1.92, 12, 0, '2017-09-17 11:47:36'),
(98, 1593, '1', 1.3032, 15, 1, '2017-09-17 11:47:36'),
(98, 1578, '1', 1.54395, 13, 1, '2017-09-17 11:47:36'),
(98, 1592, '1', -0.653333, 32, 0, '2017-09-17 11:47:36'),
(98, 3034, '0', 0, 15, -1, '2017-09-17 11:47:36'),
(98, 1591, '2', -1.90226, 11, 0, '2017-09-17 11:47:36'),
(98, 1582, '2', 1.53061, 12, 1, '2017-09-17 11:47:36'),
(98, 1559, '2', -2.38327, 5, 0, '2017-09-17 11:47:36'),
(98, 1596, '4', -1.6875, 13, 0, '2017-09-17 11:47:36'),
(98, 1553, '4', 1.73677, 11, 1, '2017-09-17 11:47:36'),
(98, 1575, '3', -2.08333, 10, 0, '2017-09-17 11:47:36'),
(98, 1613, '1', -1.20333, 22, 0, '2017-09-17 11:47:36'),
(98, 1599, '1', 1.59505, 13, 1, '2017-09-17 11:47:36'),
(98, 1614, '4', 1.72942, 13, 1, '2017-09-17 11:47:37'),
(98, 1605, '3', 1.84083, 13, 1, '2017-09-17 11:47:37'),
(98, 1612, '2', -1.86501, 11, 0, '2017-09-17 11:47:37'),
(98, 1601, '2', 1.93718, 11, 1, '2017-09-17 11:47:37'),
(98, 1598, '1', 1.0662, 21, 1, '2017-09-17 11:47:37'),
(98, 1603, '2', 2.45081, 5, 1, '2017-09-17 11:47:37'),
(98, 1608, '3', 1.3591, 17, 1, '2017-09-17 11:47:37'),
(98, 1611, '4', 2.47826, 8, 1, '2017-09-17 11:47:37'),
(98, 1602, '1', 2.4, 12, 1, '2017-09-17 11:47:37'),
(98, 1610, '0', 0, 12, -1, '2017-09-17 11:47:37'),
(98, 1609, '2', -2.0625, 15, 0, '2017-09-17 11:47:37'),
(98, 1607, '2', -2.32759, 13, 0, '2017-09-17 11:47:37'),
(98, 1615, '3', 2.12069, 17, 1, '2017-09-17 11:47:38'),
(98, 1617, '1', 2.54348, 7, 1, '2017-09-17 11:47:38'),
(98, 1600, '4', 2.71154, 5, 1, '2017-09-17 11:47:38'),
(98, 1606, '4', -1.55, 29, 0, '2017-09-17 11:47:38'),
(98, 1604, '2', 2.3125, 11, 1, '2017-09-17 11:47:38'),
(98, 1620, '4', -0.6875, 37, 0, '2017-09-17 11:47:38'),
(98, 1636, '4', 1.55556, 26, 1, '2017-09-17 11:47:38'),
(98, 1640, '0', -0.195743, 60, 0, '2017-09-17 11:47:38'),
(98, 1618, '4', -2.1813, 19, 0, '2017-09-17 11:47:38'),
(98, 1626, '4', 2.55556, 8, 1, '2017-09-17 11:47:38'),
(98, 1625, '1', 2.43037, 13, 1, '2017-09-17 11:47:38'),
(98, 1651, '3', 2.72434, 7, 1, '2017-09-17 11:47:39'),
(98, 1631, '3', -2.17046, 20, 0, '2017-09-17 11:47:39'),
(98, 1621, '3', -2.60187, 10, 0, '2017-09-17 11:47:39'),
(98, 1622, '4', 2.39719, 16, 1, '2017-09-17 11:47:39'),
(98, 1619, '2', -2.0326, 23, 0, '2017-09-17 11:47:39'),
(98, 1630, '2', -2.59468, 9, 0, '2017-09-17 11:47:39'),
(98, 1629, '3', 2.54348, 7, 1, '2017-09-17 11:47:39'),
(98, 1654, '4', 2.24148, 17, 1, '2017-09-17 11:47:39'),
(98, 1628, '1', 2.7331, 6, 1, '2017-09-17 11:47:39'),
(98, 1645, '3', -1.96783, 30, 0, '2017-09-17 11:47:39'),
(98, 1623, '3', 2.69195, 9, 1, '2017-09-17 11:47:39'),
(98, 1627, '3', 2.81531, 4, 1, '2017-09-17 11:47:40'),
(98, 1624, '4', 2.78169, 6, 1, '2017-09-17 11:47:40'),
(98, 1656, '2', 2.78787, 5, 1, '2017-09-17 11:47:40'),
(98, 1685, '4', 2.62882, 13, 1, '2017-09-17 11:47:40'),
(98, 1691, '1', 2.59808, 8, 1, '2017-09-17 11:47:40'),
(98, 1664, '1', 2.31633, 21, 1, '2017-09-17 11:47:40'),
(98, 1699, '3', -2.25, 21, 0, '2017-09-17 11:47:40'),
(98, 1682, '3', -1.97139, 25, 0, '2017-09-17 11:47:40'),
(98, 1686, '1', 2.69615, 10, 1, '2017-09-17 11:47:40'),
(98, 1689, '3', 2.57519, 10, 1, '2017-09-17 11:47:40'),
(98, 1669, '0', 0, 29, -1, '2017-09-17 11:47:40'),
(98, 1688, '2', 2.35005, 17, 1, '2017-09-17 11:47:41'),
(98, 1823, '4', -2.88778, 4, 0, '2017-09-17 11:47:41'),
(98, 1687, '3', 2.80624, 8, 1, '2017-09-17 11:47:41'),
(98, 1791, '1', -2.49446, 17, 0, '2017-09-17 11:47:41'),
(98, 1690, '2', 2.57519, 10, 1, '2017-09-17 11:47:41'),
(98, 1820, '2', 2.47047, 20, 1, '2017-09-17 11:47:41'),
(98, 1779, '1', -2.45718, 22, 0, '2017-09-17 11:47:41'),
(98, 1710, '2', -2.83794, 7, 0, '2017-09-17 11:47:41'),
(98, 1684, '2', 2.75103, 7, 1, '2017-09-17 11:47:41'),
(98, 1718, '4', -2.58691, 13, 0, '2017-09-17 11:47:41'),
(98, 1680, '3', 2.77263, 7, 1, '2017-09-17 11:47:41'),
(98, 1716, '1', 2.05613, 33, 1, '2017-09-17 11:47:41'),
(98, 1705, '4', 2.61346, 14, 1, '2017-09-17 11:47:42'),
(98, 1703, '3', -2.1063, 27, 0, '2017-09-17 11:47:42'),
(98, 1829, '1', 1.72305, 36, 1, '2017-09-17 11:47:42'),
(98, 1780, '1', 2.6739, 13, 1, '2017-09-17 11:47:42'),
(98, 1722, '2', -2.789, 8, 0, '2017-09-17 11:47:42'),
(98, 1713, '2', 2.73236, 10, 1, '2017-09-17 11:47:42'),
(98, 1764, '2', -2.71309, 12, 0, '2017-09-17 11:47:42'),
(98, 1827, '4', 2.73236, 10, 1, '2017-09-17 11:47:42'),
(98, 1854, '1', -2.34755, 22, 0, '2017-09-17 11:47:42'),
(98, 1848, '1', -2.7609, 12, 0, '2017-09-17 11:47:42'),
(98, 1843, '4', 2.71618, 11, 1, '2017-09-17 11:47:42'),
(98, 1858, '2', -2.6739, 16, 0, '2017-09-17 11:47:42'),
(98, 1845, '2', 2.62572, 17, 1, '2017-09-17 11:47:42'),
(98, 1835, '2', 2.73758, 9, 1, '2017-09-17 11:47:43'),
(98, 1855, '2', -2.7979, 8, 0, '2017-09-17 11:47:43'),
(98, 1857, '3', 2.66157, 15, 1, '2017-09-17 11:47:43'),
(98, 1846, '3', -2.71618, 11, 0, '2017-09-17 11:47:43'),
(98, 1839, '4', -2.8928, 4, 0, '2017-09-17 11:47:43'),
(98, 1831, '4', -2.88778, 4, 0, '2017-09-17 11:47:43'),
(98, 1697, '4', -2.79751, 6, 0, '2017-09-17 11:47:43'),
(98, 1692, '3', -2.63715, 10, 0, '2017-09-17 11:47:43'),
(98, 1659, '3', -1.74929, 33, 0, '2017-09-17 11:47:43'),
(98, 1673, '1', -2.30612, 18, 0, '2017-09-17 11:47:43'),
(99, 3018, '3', -0.00382653, 27, 0, '2017-09-17 11:47:44'),
(99, 3028, '1', -0.46301, 17, 0, '2017-09-17 11:47:44'),
(99, 3063, '2', 0, 28, 0, '2017-09-17 11:47:44'),
(99, 3011, '0', -0.00382653, 28, 0, '2017-09-17 11:47:44'),
(99, 3073, '0', -0.00382653, 28, 0, '2017-09-17 11:47:44'),
(99, 3032, '2', 0.646684, 15, 1, '2017-09-17 11:47:44'),
(99, 3056, '2', -0.55102, 16, 0, '2017-09-17 11:47:44'),
(99, 3009, '4', 1.2398, 10, 1, '2017-09-17 11:47:44'),
(99, 3040, '0', -0.00382653, 28, 0, '2017-09-17 11:47:45'),
(99, 3013, '2', 1.38138, 9, 1, '2017-09-17 11:47:45'),
(99, 3055, '3', -0.979592, 12, 0, '2017-09-17 11:47:45'),
(99, 3050, '3', 1.38138, 9, 1, '2017-09-17 11:47:45'),
(99, 3047, '4', -0.860969, 13, 0, '2017-09-17 11:47:45'),
(99, 3020, '1', -0.75, 14, 0, '2017-09-17 11:47:45'),
(99, 3052, '1', -1.10587, 11, 0, '2017-09-17 11:47:45'),
(99, 3026, '1', -0.75, 14, 0, '2017-09-17 11:47:45'),
(99, 3079, '3', -0.244898, 20, 0, '2017-09-17 11:47:45'),
(99, 3024, '0', -0.00382653, 28, 0, '2017-09-17 11:47:45'),
(99, 3068, '3', -0.244898, 20, 0, '2017-09-17 11:47:45'),
(99, 3016, '0', -0.00382653, 28, 0, '2017-09-17 11:47:45'),
(99, 3066, '1', 0.860969, 13, 1, '2017-09-17 11:47:46'),
(99, 3158, '3', -0.101801, 31, 0, '2017-09-17 11:47:46'),
(99, 3045, '3', -0.55102, 16, 0, '2017-09-17 11:47:46'),
(99, 3042, '2', 0.860969, 13, 1, '2017-09-17 11:47:46'),
(99, 3006, '1', 0.309949, 19, 1, '2017-09-17 11:47:46'),
(99, 3083, '0', -0.00382653, 28, 0, '2017-09-17 11:47:46'),
(99, 3100, '2', -1.62881, 10, 0, '2017-09-17 11:47:46'),
(99, 3119, '3', -0.831025, 18, 0, '2017-09-17 11:47:46'),
(99, 3102, '1', 0.831025, 18, 1, '2017-09-17 11:47:46'),
(99, 3136, '3', -1.40443, 12, 0, '2017-09-17 11:47:46'),
(99, 3123, '2', -0.916205, 17, 0, '2017-09-17 11:47:46'),
(99, 3291, '2', 1.51454, 11, 1, '2017-09-17 11:47:47'),
(99, 3290, '3', -0.75, 19, 0, '2017-09-17 11:47:47'),
(99, 3293, '1', 1.19668, 14, 1, '2017-09-17 11:47:47'),
(99, 3287, '3', -0.916205, 17, 0, '2017-09-17 11:47:47'),
(99, 3155, '4', -0.00207756, 37, 0, '2017-09-17 11:47:47'),
(99, 3105, '2', -1.09903, 15, 0, '2017-09-17 11:47:47'),
(99, 3149, '2', -1.00554, 16, 0, '2017-09-17 11:47:47'),
(99, 3117, '1', -1.62881, 10, 0, '2017-09-17 11:47:47'),
(99, 3295, '2', 0.132964, 30, 1, '2017-09-17 11:47:47'),
(99, 3093, '2', -1.62881, 10, 0, '2017-09-17 11:47:47'),
(99, 3292, '1', 0, 38, 0, '2017-09-17 11:47:48'),
(99, 3090, '1', -1.29848, 13, 0, '2017-09-17 11:47:48'),
(99, 3288, '0', -0.00207756, 38, 0, '2017-09-17 11:47:48'),
(99, 3145, '2', 0.467452, 23, 1, '2017-09-17 11:47:48'),
(99, 3140, '4', -1.00554, 16, 0, '2017-09-17 11:47:48'),
(99, 3289, '0', 0, 18, -1, '2017-09-17 11:47:48'),
(99, 3142, '3', -1.00554, 16, 0, '2017-09-17 11:47:48'),
(99, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:47:48'),
(99, 1216, '0', 0, 13, -1, '2017-09-17 11:47:48'),
(99, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:47:48'),
(99, 1177, '2', 1.21488, 8, 1, '2017-09-17 11:47:48'),
(99, 1203, '3', 0, 30, 1, '2017-09-17 11:47:48'),
(99, 1190, '2', -0.137755, 22, 0, '2017-09-17 11:47:48'),
(99, 1292, '1', 0.48, 18, 1, '2017-09-17 11:47:49'),
(99, 1197, '3', -1.50521, 7, 0, '2017-09-17 11:47:49'),
(99, 1184, '4', 0.520833, 14, 1, '2017-09-17 11:47:49'),
(99, 1291, '4', 0.3675, 13, 1, '2017-09-17 11:47:49'),
(99, 1172, '0', -0.0075, 20, 0, '2017-09-17 11:47:49'),
(99, 1210, '1', 0.0833333, 20, 1, '2017-09-17 11:47:49'),
(99, 1263, '2', -0.9075, 18, 0, '2017-09-17 11:47:49'),
(99, 1183, '2', 0.0991736, 18, 1, '2017-09-17 11:47:49'),
(99, 1174, '0', 0, 7, -1, '2017-09-17 11:47:49'),
(99, 1218, '3', -0.27, 14, 0, '2017-09-17 11:47:49'),
(99, 1276, '2', -0.046875, 28, 0, '2017-09-17 11:47:49'),
(99, 1196, '4', 1.17188, 9, 1, '2017-09-17 11:47:49'),
(99, 1270, '3', -0.511815, 27, 0, '2017-09-17 11:47:49'),
(99, 1186, '3', 0.860969, 13, 1, '2017-09-17 11:47:50'),
(99, 1297, '3', 1.84083, 13, 1, '2017-09-17 11:47:50'),
(99, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:47:50'),
(99, 1170, '2', 0.520833, 14, 1, '2017-09-17 11:47:50'),
(99, 1198, '2', -0.75, 10, 0, '2017-09-17 11:47:50'),
(99, 1194, '1', 1.10587, 11, 1, '2017-09-17 11:47:50'),
(99, 1173, '4', -0.27, 14, 0, '2017-09-17 11:47:50'),
(99, 1261, '0', 0, 33, -1, '2017-09-17 11:47:50'),
(99, 1169, '2', 0.75, 12, 1, '2017-09-17 11:47:50'),
(99, 1171, '4', 1.08, 8, 1, '2017-09-17 11:47:50'),
(99, 1269, '1', 0.130208, 38, 1, '2017-09-17 11:47:50'),
(99, 1199, '0', -0.00292969, 32, 0, '2017-09-17 11:47:50'),
(99, 1189, '1', -0.979592, 12, 0, '2017-09-17 11:47:51'),
(99, 1208, '0', -0.0012, 50, 0, '2017-09-17 11:47:51'),
(99, 1293, '1', -0.333333, 16, 0, '2017-09-17 11:47:51'),
(99, 1191, '3', 1.38138, 9, 1, '2017-09-17 11:47:51'),
(99, 1257, '4', 1.50521, 14, 1, '2017-09-17 11:47:51'),
(99, 1281, '1', -0.0533333, 26, 0, '2017-09-17 11:47:51'),
(99, 1219, '3', 0.892562, 10, 1, '2017-09-17 11:47:51'),
(99, 1220, '4', -0.646684, 15, 0, '2017-09-17 11:47:51'),
(99, 1294, '3', 1.02083, 10, 1, '2017-09-17 11:47:51'),
(99, 1287, '2', -0.046875, 42, 0, '2017-09-17 11:47:51'),
(99, 1200, '3', -0.00231481, 35, 0, '2017-09-17 11:47:51'),
(99, 1265, '3', -0.320636, 35, 0, '2017-09-17 11:47:51'),
(99, 1202, '1', 0.0208333, 33, 1, '2017-09-17 11:47:51'),
(99, 1217, '0', -0.0075, 20, 0, '2017-09-17 11:47:52'),
(99, 1282, '1', -0.0833333, 25, 0, '2017-09-17 11:47:52'),
(99, 1284, '4', -0.27, 14, 0, '2017-09-17 11:47:52'),
(99, 1268, '1', 0.0833333, 40, 1, '2017-09-17 11:47:52'),
(99, 1175, '0', -0.00292969, 32, 0, '2017-09-17 11:47:52'),
(99, 1289, '1', -0.541875, 23, 0, '2017-09-17 11:47:52'),
(99, 1250, '0', -0.000833333, 60, 0, '2017-09-17 11:47:52'),
(99, 1296, '1', -0.1875, 18, 0, '2017-09-17 11:47:52'),
(99, 1264, '0', -0.000688705, 66, 0, '2017-09-17 11:47:52'),
(99, 1283, '0', -0.00520833, 24, 0, '2017-09-17 11:47:53'),
(99, 1187, '1', -0.75, 16, 0, '2017-09-17 11:47:53'),
(99, 1286, '0', -0.000833333, 60, 0, '2017-09-17 11:47:53'),
(99, 1209, '2', 0.5808, 28, 1, '2017-09-17 11:47:53'),
(99, 1298, '0', -0.000833333, 60, 0, '2017-09-17 11:47:53'),
(99, 1204, '2', -0.880208, 22, 0, '2017-09-17 11:47:53'),
(99, 172, '3', -1.70802, 27, 0, '2017-09-17 11:47:53'),
(99, 1295, '1', -0.333333, 16, 0, '2017-09-17 11:47:53'),
(99, 171, '0', -0.00046875, 80, 0, '2017-09-17 11:47:53'),
(100, 2615, '1', 2.04187, 7, 1, '2017-09-17 11:47:54'),
(100, 2605, '2', 1.92, 8, 1, '2017-09-17 11:47:54'),
(100, 2603, '1', 1.57687, 11, 1, '2017-09-17 11:47:54'),
(100, 2612, '1', 1.80187, 9, 1, '2017-09-17 11:47:54'),
(100, 2606, '1', 2.43, 4, 1, '2017-09-17 11:47:54'),
(100, 2614, '4', 1.2675, 14, 1, '2017-09-17 11:47:54'),
(100, 2620, '4', 2.75, 5, 1, '2017-09-17 11:47:54'),
(100, 2619, '4', -2.35, 13, 0, '2017-09-17 11:47:54'),
(100, 2624, '0', 0, 28, -1, '2017-09-17 11:47:54'),
(100, 2623, '3', -2.6, 8, 0, '2017-09-17 11:47:55'),
(100, 2607, '4', 1.92, 8, 1, '2017-09-17 11:47:55'),
(100, 2625, '0', 0, 8, -1, '2017-09-17 11:47:55'),
(100, 2635, '0', 0, 5, -1, '2017-09-17 11:47:55'),
(100, 2629, '1', 1.8, 24, 1, '2017-09-17 11:47:55'),
(100, 2617, '1', 2.65, 7, 1, '2017-09-17 11:47:55'),
(100, 2634, '4', 2.05, 19, 1, '2017-09-17 11:47:55'),
(100, 2626, '3', 2.55, 9, 1, '2017-09-17 11:47:55'),
(100, 2632, '3', 2.55, 9, 1, '2017-09-17 11:47:55'),
(100, 2838, '3', 2.79651, 6, 1, '2017-09-17 11:47:55'),
(100, 2833, '3', 2.76188, 7, 1, '2017-09-17 11:47:55'),
(100, 2730, '3', -1.88988, 30, 0, '2017-09-17 11:47:55'),
(100, 2841, '3', 2.76188, 7, 1, '2017-09-17 11:47:55'),
(100, 2820, '1', -2.513, 14, 0, '2017-09-17 11:47:56'),
(100, 2835, '3', 2.76188, 7, 1, '2017-09-17 11:47:56'),
(100, 2825, '3', 2.62111, 11, 1, '2017-09-17 11:47:56'),
(100, 2845, '1', 2.69195, 9, 1, '2017-09-17 11:47:56'),
(100, 2819, '2', 2.79651, 6, 1, '2017-09-17 11:47:56'),
(100, 2883, '3', 2.29129, 25, 1, '2017-09-17 11:47:56'),
(100, 2881, '0', 0, 24, -1, '2017-09-17 11:47:56'),
(100, 2879, '4', -2.44949, 20, 0, '2017-09-17 11:47:56'),
(100, 2855, '4', 1.68819, 41, 1, '2017-09-17 11:47:56'),
(100, 2868, '2', 2.81957, 7, 1, '2017-09-17 11:47:56'),
(100, 2861, '2', 2.81957, 7, 1, '2017-09-17 11:47:56'),
(100, 1462, '1', 1.47, 12, 1, '2017-09-17 11:47:56'),
(100, 3039, '1', 1.60207, 7, 1, '2017-09-17 11:47:57'),
(100, 1451, '1', 1.44676, 11, 1, '2017-09-17 11:47:57'),
(100, 1449, '4', 0.48, 24, 1, '2017-09-17 11:47:57'),
(100, 1455, '0', 0, 10, -1, '2017-09-17 11:47:57'),
(100, 1464, '0', 0, 16, -1, '2017-09-17 11:47:57'),
(100, 1463, '1', -0.559401, 25, 0, '2017-09-17 11:47:57'),
(100, 3051, '3', 0.110947, 21, 1, '2017-09-17 11:47:57'),
(100, 3004, '3', 0.0533333, 26, 1, '2017-09-17 11:47:57'),
(100, 1450, '3', -1.22454, 13, 0, '2017-09-17 11:47:57'),
(100, 1453, '1', 0.6348, 27, 1, '2017-09-17 11:47:57'),
(100, 1465, '1', 0.979592, 12, 1, '2017-09-17 11:47:57'),
(100, 2929, '4', 1.50521, 7, 1, '2017-09-17 11:47:57'),
(100, 1466, '2', 0.0012, 49, 1, '2017-09-17 11:47:58'),
(100, 1452, '2', 0.9075, 18, 1, '2017-09-17 11:47:58'),
(100, 1457, '4', 2.29688, 5, 1, '2017-09-17 11:47:58'),
(100, 1454, '2', 0.280093, 25, 1, '2017-09-17 11:47:58'),
(100, 3035, '2', 1.6875, 7, 1, '2017-09-17 11:47:58'),
(100, 1473, '1', 2.1, 15, 1, '2017-09-17 11:47:58'),
(100, 1488, '2', 1.43182, 23, 1, '2017-09-17 11:47:58'),
(100, 1475, '2', 1.04348, 30, 1, '2017-09-17 11:47:58'),
(100, 1483, '3', -2.05263, 12, 0, '2017-09-17 11:47:58'),
(100, 3000, '4', -1.75, 10, 0, '2017-09-17 11:47:58'),
(100, 1478, '2', 0.675, 31, 1, '2017-09-17 11:47:58'),
(100, 1469, '0', 0, 15, -1, '2017-09-17 11:47:58'),
(100, 1474, '2', 1.71429, 18, 1, '2017-09-17 11:47:58'),
(100, 3008, '1', -1.5, 14, 0, '2017-09-17 11:47:59'),
(100, 1472, '1', -1.5, 20, 0, '2017-09-17 11:47:59'),
(100, 1477, '2', -0.388889, 47, 0, '2017-09-17 11:47:59'),
(100, 1480, '3', -2.28571, 10, 0, '2017-09-17 11:47:59'),
(100, 1460, '3', -0.459357, 28, 0, '2017-09-17 11:47:59'),
(100, 1459, '2', 1.92, 8, 1, '2017-09-17 11:47:59'),
(100, 2933, '1', -0.5, 20, 0, '2017-09-17 11:47:59'),
(100, 1491, '1', -2.57143, 6, 0, '2017-09-17 11:47:59'),
(100, 1458, '3', 1.02083, 15, 1, '2017-09-17 11:47:59'),
(100, 1467, '3', 0.75, 30, 1, '2017-09-17 11:47:59'),
(100, 3044, '3', 1.88021, 5, 1, '2017-09-17 11:47:59'),
(100, 1471, '4', 2.25, 15, 1, '2017-09-17 11:48:00'),
(100, 1470, '1', 2.28, 12, 1, '2017-09-17 11:48:00'),
(100, 1482, '2', -2.52273, 7, 0, '2017-09-17 11:48:00'),
(100, 1476, '2', -2.59615, 7, 0, '2017-09-17 11:48:00'),
(100, 1468, '2', 2.625, 5, 1, '2017-09-17 11:48:00'),
(100, 1487, '3', -2.28261, 11, 0, '2017-09-17 11:48:00'),
(100, 3002, '1', 1.84615, 10, 1, '2017-09-17 11:48:00'),
(100, 1486, '4', -2.45455, 8, 0, '2017-09-17 11:48:00'),
(100, 1481, '4', -1.35, 22, 0, '2017-09-17 11:48:00'),
(100, 1456, '1', 1.2675, 14, 1, '2017-09-17 11:48:00'),
(100, 1485, '4', 1.67308, 23, 1, '2017-09-17 11:48:00'),
(100, 1479, '2', -1.5, 22, 0, '2017-09-17 11:48:00'),
(100, 1484, '2', -2.5, 7, 0, '2017-09-17 11:48:01'),
(100, 1461, '3', 1.54395, 13, 1, '2017-09-17 11:48:01'),
(100, 1496, '4', 0.819731, 21, 1, '2017-09-17 11:48:01'),
(100, 1507, '3', -1.09615, 33, 0, '2017-09-17 11:48:01'),
(100, 1504, '3', -2.56687, 6, 0, '2017-09-17 11:48:01'),
(100, 3076, '1', 0.853333, 14, 1, '2017-09-17 11:48:01'),
(100, 1505, '1', 0.866719, 37, 1, '2017-09-17 11:48:01'),
(100, 3054, '0', -0.00333333, 30, 0, '2017-09-17 11:48:01'),
(100, 1489, '3', -0.89966, 19, 0, '2017-09-17 11:48:01'),
(100, 1500, '3', -0.400518, 33, 0, '2017-09-17 11:48:01'),
(100, 1495, '3', -0.89966, 19, 0, '2017-09-17 11:48:01'),
(100, 3062, '3', -0.495117, 19, 0, '2017-09-17 11:48:01'),
(100, 1502, '4', -0.409735, 29, 0, '2017-09-17 11:48:02'),
(100, 1494, '4', 1.40443, 12, 1, '2017-09-17 11:48:02'),
(100, 2947, '3', 1.33333, 10, 1, '2017-09-17 11:48:02'),
(100, 1493, '4', 0.3675, 26, 1, '2017-09-17 11:48:02'),
(100, 1497, '2', 0.137755, 33, 1, '2017-09-17 11:48:02'),
(100, 1498, '1', -0.1875, 36, 0, '2017-09-17 11:48:02'),
(100, 1501, '3', 0.502066, 26, 1, '2017-09-17 11:48:02'),
(100, 1499, '3', -1.4518, 14, 0, '2017-09-17 11:48:02'),
(100, 1506, '1', 0.8112, 24, 1, '2017-09-17 11:48:02'),
(100, 1503, '1', -0.0127599, 43, 0, '2017-09-17 11:48:02'),
(100, 1492, '2', 1.79132, 10, 1, '2017-09-17 11:48:02'),
(100, 1490, '1', 2.35692, 5, 1, '2017-09-17 11:48:02'),
(100, 1518, '1', -2.35714, 9, 0, '2017-09-17 11:48:02'),
(100, 1517, '1', 0.75, 27, 1, '2017-09-17 11:48:03'),
(100, 1522, '1', -1.6875, 21, 0, '2017-09-17 11:48:03'),
(100, 1523, '3', 1.63894, 12, 1, '2017-09-17 11:48:03'),
(100, 1514, '3', -1.97727, 15, 0, '2017-09-17 11:48:03'),
(100, 1526, '3', 0.6912, 26, 1, '2017-09-17 11:48:03'),
(100, 1527, '3', -0.506059, 33, 0, '2017-09-17 11:48:03'),
(100, 1510, '3', -2.34763, 6, 0, '2017-09-17 11:48:03'),
(100, 1632, '0', -1.47, 10, 0, '2017-09-17 11:48:03'),
(100, 1633, '2', 0.998521, 11, 1, '2017-09-17 11:48:03'),
(100, 1641, '3', 0.75, 14, 1, '2017-09-17 11:48:03'),
(100, 1635, '3', -1.08, 12, 0, '2017-09-17 11:48:03'),
(100, 1634, '3', 1.6875, 6, 1, '2017-09-17 11:48:03'),
(100, 1709, '4', 2.26843, 6, 1, '2017-09-17 11:48:03'),
(100, 1712, '2', 1.72942, 13, 1, '2017-09-17 11:48:04'),
(100, 1674, '1', 2.55621, 4, 1, '2017-09-17 11:48:04'),
(100, 1658, '1', 0.563333, 17, 1, '2017-09-17 11:48:04'),
(100, 1660, '4', 0.359467, 17, 1, '2017-09-17 11:48:04'),
(100, 1668, '4', -1.80187, 9, 0, '2017-09-17 11:48:04'),
(100, 1715, '1', 0.592593, 30, 1, '2017-09-17 11:48:04'),
(100, 1676, '4', 0.8748, 23, 1, '2017-09-17 11:48:04'),
(100, 1681, '3', 1.41797, 15, 1, '2017-09-17 11:48:04'),
(100, 1708, '3', -0.292969, 33, 0, '2017-09-17 11:48:04'),
(100, 1679, '3', -1.58678, 12, 0, '2017-09-17 11:48:04'),
(100, 1666, '4', -2.2376, 6, 0, '2017-09-17 11:48:04'),
(100, 1693, '1', -1.02083, 20, 0, '2017-09-17 11:48:04'),
(100, 1700, '1', 1.08, 20, 1, '2017-09-17 11:48:04'),
(100, 1707, '4', 0.695473, 28, 1, '2017-09-17 11:48:05'),
(100, 1663, '1', 0.853333, 14, 1, '2017-09-17 11:48:05'),
(100, 1667, '3', 2.45578, 4, 1, '2017-09-17 11:48:05'),
(100, 1665, '3', -0.502066, 26, 0, '2017-09-17 11:48:05'),
(100, 1677, '2', 1.88021, 10, 1, '2017-09-17 11:48:05'),
(100, 1704, '3', -1.55769, 25, 0, '2017-09-17 11:48:05'),
(100, 1643, '2', 0.284024, 18, 1, '2017-09-17 11:48:05'),
(100, 1694, '1', 1.83743, 10, 1, '2017-09-17 11:48:05'),
(100, 1714, '3', 2.68421, 4, 1, '2017-09-17 11:48:05'),
(100, 1637, '1', 1.125, 15, 1, '2017-09-17 11:48:05'),
(100, 1671, '4', -2.28571, 10, 0, '2017-09-17 11:48:05'),
(100, 1644, '4', -0.75, 21, 0, '2017-09-17 11:48:06'),
(100, 1646, '2', 2.42308, 5, 1, '2017-09-17 11:48:06'),
(100, 1655, '1', 2.45455, 8, 1, '2017-09-17 11:48:06'),
(100, 1672, '1', -1.75, 20, 0, '2017-09-17 11:48:06'),
(100, 1662, '1', 1.60714, 13, 1, '2017-09-17 11:48:06'),
(100, 1695, '3', 1, 36, 1, '2017-09-17 11:48:06'),
(100, 1657, '4', 1.2, 12, 1, '2017-09-17 11:48:06'),
(100, 1702, '3', -2.72727, 4, 0, '2017-09-17 11:48:06'),
(100, 1698, '3', -2.07692, 16, 0, '2017-09-17 11:48:06'),
(100, 1661, '3', 1.5, 13, 1, '2017-09-17 11:48:06'),
(100, 1675, '1', -2.05556, 17, 0, '2017-09-17 11:48:06'),
(100, 1647, '3', 1.84615, 10, 1, '2017-09-17 11:48:07'),
(100, 1696, '4', 1.90909, 16, 1, '2017-09-17 11:48:07'),
(100, 1706, '0', 0, 23, -1, '2017-09-17 11:48:07'),
(100, 1711, '1', 2.25, 11, 1, '2017-09-17 11:48:07'),
(100, 1642, '1', -1.4, 16, 0, '2017-09-17 11:48:07'),
(100, 1653, '1', -1.71429, 12, 0, '2017-09-17 11:48:07'),
(100, 1717, '4', 1.725, 17, 1, '2017-09-17 11:48:07'),
(100, 1719, '1', 2.4, 8, 1, '2017-09-17 11:48:07'),
(100, 1650, '1', 2.07906, 11, 1, '2017-09-17 11:48:07'),
(100, 1721, '2', 2.47645, 11, 1, '2017-09-17 11:48:07'),
(100, 1648, '2', -2.34776, 8, 0, '2017-09-17 11:48:07'),
(100, 1720, '3', 2.74448, 5, 1, '2017-09-17 11:48:08'),
(100, 1788, '4', 2.13414, 16, 1, '2017-09-17 11:48:08'),
(100, 1754, '3', 2.33163, 17, 1, '2017-09-17 11:48:08'),
(100, 1782, '3', -2.47645, 10, 0, '2017-09-17 11:48:08'),
(100, 1765, '0', 0, 12, -1, '2017-09-17 11:48:08'),
(100, 1723, '4', 2.56734, 10, 1, '2017-09-17 11:48:08'),
(100, 1760, '0', 0, 15, -1, '2017-09-17 11:48:08'),
(100, 1773, '0', 0, 31, -1, '2017-09-17 11:48:08'),
(100, 1759, '4', 0.794792, 38, 1, '2017-09-17 11:48:08'),
(100, 1784, '4', 2.36512, 6, 1, '2017-09-17 11:48:08'),
(100, 1778, '2', -2.38385, 14, 0, '2017-09-17 11:48:08'),
(100, 1736, '1', -2.5156, 13, 0, '2017-09-17 11:48:08'),
(100, 1750, '1', 2.53118, 9, 1, '2017-09-17 11:48:08'),
(100, 1753, '4', 2.16635, 17, 1, '2017-09-17 11:48:09'),
(100, 1786, '4', -2.25998, 18, 0, '2017-09-17 11:48:09'),
(100, 1649, '4', -1.59835, 22, 0, '2017-09-17 11:48:09'),
(100, 1735, '4', -2.69195, 6, 0, '2017-09-17 11:48:09'),
(100, 1783, '2', -2.21952, 16, 0, '2017-09-17 11:48:09'),
(100, 1730, '4', 1.62865, 30, 1, '2017-09-17 11:48:09'),
(100, 1728, '4', -2.73071, 5, 0, '2017-09-17 11:48:09'),
(100, 1770, '2', 2.53722, 12, 1, '2017-09-17 11:48:09'),
(100, 1742, '2', -2.0274, 32, 0, '2017-09-17 11:48:09'),
(100, 1740, '3', 2.81531, 4, 1, '2017-09-17 11:48:09'),
(100, 1748, '3', -2.30599, 15, 0, '2017-09-17 11:48:09'),
(100, 1785, '3', -2.76455, 6, 0, '2017-09-17 11:48:09'),
(100, 1768, '3', 2.53722, 12, 1, '2017-09-17 11:48:09'),
(100, 1790, '3', 2.43393, 14, 1, '2017-09-17 11:48:10'),
(100, 1757, '3', -2.40413, 13, 0, '2017-09-17 11:48:10'),
(100, 1776, '4', -1.68531, 22, 0, '2017-09-17 11:48:10'),
(100, 1774, '1', 2.74448, 5, 1, '2017-09-17 11:48:10'),
(100, 1789, '1', -2.20571, 17, 0, '2017-09-17 11:48:10'),
(100, 1771, '4', 2.50031, 11, 1, '2017-09-17 11:48:10');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(100, 1725, '1', 2.47645, 12, 1, '2017-09-17 11:48:10'),
(100, 1726, '3', 2.13414, 20, 1, '2017-09-17 11:48:10'),
(100, 1756, '3', -2.43037, 13, 0, '2017-09-17 11:48:10'),
(100, 1734, '1', -0.537121, 61, 0, '2017-09-17 11:48:10'),
(100, 1738, '1', 2.39719, 12, 1, '2017-09-17 11:48:10'),
(100, 1749, '1', 2.5221, 11, 1, '2017-09-17 11:48:10'),
(100, 1731, '2', -2.27205, 15, 0, '2017-09-17 11:48:11'),
(100, 1792, '4', 1.88988, 22, 1, '2017-09-17 11:48:11'),
(100, 1746, '1', 2.76819, 5, 1, '2017-09-17 11:48:11'),
(100, 1739, '1', 2.78787, 5, 1, '2017-09-17 11:48:11'),
(100, 1762, '1', -2.59808, 10, 0, '2017-09-17 11:48:11'),
(100, 1732, '1', -2.81866, 5, 0, '2017-09-17 11:48:11'),
(100, 1743, '1', -2.8681, 3, 0, '2017-09-17 11:48:11'),
(100, 1752, '1', 2.62823, 9, 1, '2017-09-17 11:48:11'),
(100, 3042, '2', 0.75, 14, 1, '2017-09-17 11:48:11'),
(100, 3055, '4', 1.10587, 11, 1, '2017-09-17 11:48:11'),
(100, 3009, '0', 0, 11, -1, '2017-09-17 11:48:11'),
(100, 3052, '4', 1.85204, 6, 1, '2017-09-17 11:48:12'),
(100, 3018, '2', -1.38138, 9, 0, '2017-09-17 11:48:12'),
(100, 3011, '0', 0, 11, -1, '2017-09-17 11:48:12'),
(100, 3066, '1', 0.860969, 13, 1, '2017-09-17 11:48:12'),
(100, 3024, '3', -0.860969, 13, 0, '2017-09-17 11:48:12'),
(100, 3013, '2', 1.6875, 7, 1, '2017-09-17 11:48:12'),
(100, 3026, '2', 1.38138, 9, 1, '2017-09-17 11:48:12'),
(100, 3056, '4', 1.6875, 7, 1, '2017-09-17 11:48:12'),
(100, 3158, '0', 0, 17, -1, '2017-09-17 11:48:12'),
(100, 3063, '1', 0.0153061, 26, 1, '2017-09-17 11:48:12'),
(100, 3040, '0', -0.00382653, 28, 0, '2017-09-17 11:48:12'),
(100, 3028, '2', 0.979592, 12, 1, '2017-09-17 11:48:13'),
(100, 3068, '2', -1.2398, 10, 0, '2017-09-17 11:48:13'),
(100, 3073, '0', -0.00382653, 28, 0, '2017-09-17 11:48:13'),
(100, 3032, '2', 1.85204, 6, 1, '2017-09-17 11:48:13'),
(100, 3006, '1', 1.53061, 8, 1, '2017-09-17 11:48:13'),
(100, 3287, '2', 1.97368, 13, 1, '2017-09-17 11:48:13'),
(100, 3112, '4', -2.36842, 8, 0, '2017-09-17 11:48:13'),
(100, 3079, '3', -0.646684, 15, 0, '2017-09-17 11:48:13'),
(100, 3045, '1', 1.6875, 7, 1, '2017-09-17 11:48:13'),
(100, 3149, '1', 1.26316, 22, 1, '2017-09-17 11:48:13'),
(100, 3289, '1', -2.36842, 8, 0, '2017-09-17 11:48:13'),
(100, 3083, '0', -0.00382653, 28, 0, '2017-09-17 11:48:13'),
(100, 3016, '4', 0, 28, 0, '2017-09-17 11:48:14'),
(100, 3050, '3', 1.6875, 7, 1, '2017-09-17 11:48:14'),
(100, 3155, '1', 0.789474, 28, 1, '2017-09-17 11:48:14'),
(100, 3293, '1', 2.28947, 9, 1, '2017-09-17 11:48:14'),
(100, 3145, '3', -1.10526, 24, 0, '2017-09-17 11:48:14'),
(100, 3119, '1', -1.97368, 13, 0, '2017-09-17 11:48:14'),
(100, 3294, '4', 1.65789, 17, 1, '2017-09-17 11:48:14'),
(100, 3123, '1', -1.97368, 13, 0, '2017-09-17 11:48:14'),
(100, 3142, '2', -1.73684, 16, 0, '2017-09-17 11:48:14'),
(100, 3020, '1', -1.85204, 6, 0, '2017-09-17 11:48:14'),
(100, 3047, '1', -0.244898, 20, 0, '2017-09-17 11:48:14'),
(100, 3290, '1', 2.40166, 4, 1, '2017-09-17 11:48:15'),
(100, 3093, '4', -0.299169, 26, 0, '2017-09-17 11:48:15'),
(100, 3105, '1', -0.168283, 29, 0, '2017-09-17 11:48:15'),
(100, 3292, '1', -0.531856, 22, 0, '2017-09-17 11:48:15'),
(100, 3097, '2', -1.74723, 9, 0, '2017-09-17 11:48:15'),
(100, 3102, '2', -1.86981, 8, 0, '2017-09-17 11:48:15'),
(100, 3288, '2', -0.299169, 26, 0, '2017-09-17 11:48:15'),
(100, 3100, '2', -1.86981, 8, 0, '2017-09-17 11:48:15'),
(100, 3295, '2', 0.207756, 28, 1, '2017-09-17 11:48:15'),
(100, 3140, '2', 2.12742, 6, 1, '2017-09-17 11:48:15'),
(100, 3153, '0', -0.00207756, 38, 0, '2017-09-17 11:48:15'),
(100, 3090, '1', -1.09903, 15, 0, '2017-09-17 11:48:15'),
(100, 3117, '2', -1.99654, 7, 0, '2017-09-17 11:48:15'),
(100, 3291, '2', 1.86981, 8, 1, '2017-09-17 11:48:15'),
(100, 3136, '3', -0.207756, 28, 0, '2017-09-17 11:48:16'),
(100, 3301, '3', 1.73677, 11, 1, '2017-09-17 11:48:16'),
(100, 3308, '3', 0.362949, 30, 1, '2017-09-17 11:48:16'),
(100, 1210, '0', -0.421875, 16, 0, '2017-09-17 11:48:16'),
(100, 1218, '4', 0.1875, 15, 1, '2017-09-17 11:48:16'),
(100, 1216, '4', 1.02083, 10, 1, '2017-09-17 11:48:16'),
(100, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:48:16'),
(100, 1297, '4', -0.653333, 32, 0, '2017-09-17 11:48:16'),
(100, 1197, '2', -0.046875, 21, 0, '2017-09-17 11:48:16'),
(100, 1196, '2', -1.6875, 6, 0, '2017-09-17 11:48:16'),
(100, 1195, '2', -1.92, 4, 0, '2017-09-17 11:48:16'),
(100, 1194, '2', -2.58673, 2, 0, '2017-09-17 11:48:16'),
(100, 1186, '2', -2.20408, 4, 0, '2017-09-17 11:48:16'),
(100, 1263, '2', -2.04187, 7, 0, '2017-09-17 11:48:16'),
(101, 361, '1', 1.93718, 11, 1, '2017-09-17 11:48:17'),
(101, 874, '3', -1.53061, 16, 0, '2017-09-17 11:48:18'),
(101, 872, '4', -0.440833, 37, 0, '2017-09-17 11:48:18'),
(101, 867, '3', 0.75, 30, 1, '2017-09-17 11:48:18'),
(101, 871, '1', -1.10193, 26, 0, '2017-09-17 11:48:18'),
(101, 1125, '2', 1.33333, 20, 1, '2017-09-17 11:48:18'),
(101, 340, '3', 2.04187, 14, 1, '2017-09-17 11:48:18'),
(101, 362, '3', 1.76333, 14, 1, '2017-09-17 11:48:18'),
(101, 873, '2', 2.3168, 8, 1, '2017-09-17 11:48:18'),
(101, 858, '2', -2.1675, 9, 0, '2017-09-17 11:48:18'),
(101, 923, '1', -2.35692, 10, 0, '2017-09-17 11:48:18'),
(101, 856, '1', -2.21558, 9, 0, '2017-09-17 11:48:18'),
(101, 1639, '4', 1.99654, 14, 1, '2017-09-17 11:48:18'),
(101, 863, '2', 2.31956, 7, 1, '2017-09-17 11:48:19'),
(101, 2401, '2', -2.19074, 16, 0, '2017-09-17 11:48:19'),
(101, 346, '3', -0.75, 28, 0, '2017-09-17 11:48:19'),
(101, 864, '3', 2.25333, 8, 1, '2017-09-17 11:48:19'),
(101, 868, '3', -1.6875, 16, 0, '2017-09-17 11:48:19'),
(101, 859, '4', 2.20408, 10, 1, '2017-09-17 11:48:19'),
(101, 857, '3', 1.76333, 14, 1, '2017-09-17 11:48:19'),
(101, 345, '2', -2.1675, 9, 0, '2017-09-17 11:48:19'),
(101, 326, '4', 1.71259, 22, 1, '2017-09-17 11:48:19'),
(101, 865, '3', -1.47, 18, 0, '2017-09-17 11:48:19'),
(101, 855, '3', -1.98047, 12, 0, '2017-09-17 11:48:19'),
(101, 891, '1', 0.592593, 20, 1, '2017-09-17 11:48:19'),
(101, 310, '3', 2.1168, 8, 1, '2017-09-17 11:48:19'),
(101, 876, '4', -1.20333, 22, 0, '2017-09-17 11:48:20'),
(101, 302, '4', -2.13926, 14, 0, '2017-09-17 11:48:20'),
(101, 304, '3', -2.1132, 9, 0, '2017-09-17 11:48:20'),
(101, 1683, '4', -1.61333, 32, 0, '2017-09-17 11:48:20'),
(101, 309, '1', -2.08333, 10, 0, '2017-09-17 11:48:20'),
(101, 881, '4', -2.1675, 15, 0, '2017-09-17 11:48:20'),
(101, 358, '1', -2.21558, 9, 0, '2017-09-17 11:48:20'),
(101, 307, '1', 1.38138, 18, 1, '2017-09-17 11:48:20'),
(101, 887, '2', -2.21558, 9, 0, '2017-09-17 11:48:20'),
(101, 875, '3', -1.92, 12, 0, '2017-09-17 11:48:20'),
(101, 403, '3', -1.84083, 13, 0, '2017-09-17 11:48:20'),
(101, 595, '3', -1.20821, 19, 0, '2017-09-17 11:48:20'),
(101, 611, '3', 1.2288, 18, 1, '2017-09-17 11:48:20'),
(101, 600, '3', 2.1132, 9, 1, '2017-09-17 11:48:21'),
(101, 606, '1', -2.08333, 10, 0, '2017-09-17 11:48:21'),
(101, 1311, '4', 1.3872, 16, 1, '2017-09-17 11:48:21'),
(101, 596, '1', 1.64609, 14, 1, '2017-09-17 11:48:21'),
(101, 1124, '3', -1.76333, 14, 0, '2017-09-17 11:48:21'),
(101, 1318, '2', 1.93718, 11, 1, '2017-09-17 11:48:21'),
(101, 605, '3', -1.40083, 19, 0, '2017-09-17 11:48:21'),
(101, 619, '4', 1.6875, 15, 1, '2017-09-17 11:48:21'),
(101, 996, '4', -2.2188, 7, 0, '2017-09-17 11:48:21'),
(101, 1317, '3', 1.92, 12, 1, '2017-09-17 11:48:21'),
(101, 1303, '3', -1.20333, 22, 0, '2017-09-17 11:48:21'),
(101, 624, '1', 1.40083, 19, 1, '2017-09-17 11:48:21'),
(101, 597, '4', -1.81481, 12, 0, '2017-09-17 11:48:21'),
(101, 1301, '3', 1.98047, 12, 1, '2017-09-17 11:48:21'),
(101, 852, '4', 1.84083, 13, 1, '2017-09-17 11:48:22'),
(101, 614, '1', -2.08333, 9, 0, '2017-09-17 11:48:22'),
(101, 850, '2', -2.00083, 11, 0, '2017-09-17 11:48:22'),
(101, 613, '1', -1.84083, 13, 0, '2017-09-17 11:48:22'),
(101, 1310, '1', -2.14793, 8, 0, '2017-09-17 11:48:22'),
(101, 615, '1', -2.25333, 8, 0, '2017-09-17 11:48:22'),
(101, 609, '3', -1.40083, 19, 0, '2017-09-17 11:48:22'),
(101, 603, '1', 1.51886, 15, 1, '2017-09-17 11:48:22'),
(101, 1089, '4', -2.25333, 8, 0, '2017-09-17 11:48:22'),
(101, 599, '3', -1.54083, 17, 0, '2017-09-17 11:48:22'),
(101, 658, '1', -0.75, 10, 0, '2017-09-17 11:48:22'),
(101, 2033, '3', 0.979592, 12, 1, '2017-09-17 11:48:22'),
(101, 1985, '3', -1.6875, 8, 0, '2017-09-17 11:48:23'),
(101, 716, '1', -1.13609, 10, 0, '2017-09-17 11:48:23'),
(101, 713, '3', 1.13609, 10, 1, '2017-09-17 11:48:23'),
(101, 1991, '3', -0.163333, 23, 0, '2017-09-17 11:48:23'),
(101, 676, '2', 1.10587, 11, 1, '2017-09-17 11:48:23'),
(101, 2013, '2', 0.963333, 13, 1, '2017-09-17 11:48:23'),
(101, 659, '4', -0.03, 18, 0, '2017-09-17 11:48:23'),
(101, 712, '2', -1.88021, 5, 0, '2017-09-17 11:48:23'),
(101, 2008, '2', -1.33333, 10, 0, '2017-09-17 11:48:23'),
(101, 663, '1', 1.10587, 11, 1, '2017-09-17 11:48:23'),
(101, 699, '3', -0.27, 14, 0, '2017-09-17 11:48:23'),
(101, 2010, '1', 1.61333, 8, 1, '2017-09-17 11:48:23'),
(101, 706, '4', 1.92, 6, 1, '2017-09-17 11:48:23'),
(101, 2031, '1', 1.61333, 8, 1, '2017-09-17 11:48:24'),
(101, 1888, '1', 0.359467, 17, 1, '2017-09-17 11:48:24'),
(101, 679, '1', 1.02083, 10, 1, '2017-09-17 11:48:24'),
(101, 690, '0', -0.0075, 20, 0, '2017-09-17 11:48:24'),
(101, 1996, '2', -1.61333, 8, 0, '2017-09-17 11:48:24'),
(101, 680, '3', 1.85204, 6, 1, '2017-09-17 11:48:24'),
(101, 703, '2', -0.00520833, 23, 0, '2017-09-17 11:48:24'),
(101, 2011, '2', 0.75, 15, 1, '2017-09-17 11:48:24'),
(101, 1892, '3', 0.217456, 19, 1, '2017-09-17 11:48:24'),
(101, 685, '1', -0.03, 18, 0, '2017-09-17 11:48:24'),
(101, 1925, '1', 1.04752, 18, 1, '2017-09-17 11:48:24'),
(101, 687, '1', -0.0533333, 26, 0, '2017-09-17 11:48:24'),
(101, 1914, '4', 0.979592, 12, 1, '2017-09-17 11:48:24'),
(101, 1891, '4', 0.27, 21, 1, '2017-09-17 11:48:25'),
(101, 1904, '4', -0.27, 21, 0, '2017-09-17 11:48:25'),
(101, 1915, '1', -0.46301, 17, 0, '2017-09-17 11:48:25'),
(101, 1917, '1', -0.00382653, 27, 0, '2017-09-17 11:48:25'),
(101, 664, '2', -1.25606, 12, 0, '2017-09-17 11:48:25'),
(101, 704, '2', -0.653333, 16, 0, '2017-09-17 11:48:25'),
(101, 717, '3', -0.280093, 25, 0, '2017-09-17 11:48:25'),
(101, 1919, '1', -2.27816, 9, 0, '2017-09-17 11:48:25'),
(101, 1923, '1', 0.292969, 22, 1, '2017-09-17 11:48:25'),
(101, 2034, '1', -1.76333, 7, 0, '2017-09-17 11:48:25'),
(101, 714, '3', -0.508651, 20, 0, '2017-09-17 11:48:25'),
(101, 1880, '3', -0.314014, 23, 0, '2017-09-17 11:48:25'),
(101, 1929, '2', 0.438581, 21, 1, '2017-09-17 11:48:25'),
(101, 1911, '3', 1.41797, 10, 1, '2017-09-17 11:48:26'),
(101, 1912, '1', -1.53061, 8, 0, '2017-09-17 11:48:26'),
(101, 1927, '4', -0.563333, 17, 0, '2017-09-17 11:48:26'),
(101, 689, '1', -1.47, 9, 0, '2017-09-17 11:48:26'),
(101, 1920, '2', 1.6875, 8, 1, '2017-09-17 11:48:26'),
(101, 1930, '4', -1.1893, 20, 0, '2017-09-17 11:48:26'),
(101, 698, '2', -1.92, 6, 0, '2017-09-17 11:48:26'),
(101, 665, '1', 0.403333, 19, 1, '2017-09-17 11:48:26'),
(101, 1908, '1', 0.495117, 19, 1, '2017-09-17 11:48:26'),
(101, 1906, '2', 1.33333, 10, 1, '2017-09-17 11:48:26'),
(101, 1926, '2', 1.41797, 10, 1, '2017-09-17 11:48:26'),
(101, 1922, '3', 1.33333, 10, 1, '2017-09-17 11:48:26'),
(101, 1921, '4', 1.47, 9, 1, '2017-09-17 11:48:26'),
(101, 1909, '4', -1.41797, 10, 0, '2017-09-17 11:48:27'),
(101, 1918, '3', 1.6875, 7, 1, '2017-09-17 11:48:27'),
(101, 2042, '4', -2.13574, 5, 0, '2017-09-17 11:48:27'),
(101, 1951, '3', -1.80187, 9, 0, '2017-09-17 11:48:27'),
(101, 702, '3', -0.58391, 19, 0, '2017-09-17 11:48:27'),
(101, 1941, '1', -1.81481, 8, 0, '2017-09-17 11:48:27'),
(101, 1889, '2', -1.57687, 11, 0, '2017-09-17 11:48:27'),
(101, 1948, '2', 1.33333, 10, 1, '2017-09-17 11:48:27'),
(101, 1937, '2', 0.574219, 18, 1, '2017-09-17 11:48:27'),
(101, 1957, '3', -1.7328, 12, 0, '2017-09-17 11:48:27'),
(101, 695, '3', 1.08, 12, 1, '2017-09-17 11:48:27'),
(101, 1936, '4', 1.6875, 8, 1, '2017-09-17 11:48:27'),
(101, 1939, '3', -1.08, 12, 0, '2017-09-17 11:48:27'),
(101, 672, '4', 0.860969, 13, 1, '2017-09-17 11:48:27'),
(101, 1881, '2', 1.20333, 11, 1, '2017-09-17 11:48:28'),
(101, 684, '2', -0.9075, 18, 0, '2017-09-17 11:48:28'),
(101, 1963, '2', 1.6875, 12, 1, '2017-09-17 11:48:28'),
(101, 1944, '1', 1.6875, 7, 1, '2017-09-17 11:48:28'),
(101, 1955, '1', 1.04752, 18, 1, '2017-09-17 11:48:28'),
(101, 1933, '3', -1.47, 12, 0, '2017-09-17 11:48:28'),
(101, 1934, '4', -0.75, 15, 0, '2017-09-17 11:48:28'),
(101, 1940, '3', -1.17188, 15, 0, '2017-09-17 11:48:28'),
(101, 1901, '4', -0.653333, 16, 0, '2017-09-17 11:48:28'),
(101, 1954, '3', -1.63435, 11, 0, '2017-09-17 11:48:28'),
(101, 1947, '1', -0.75, 16, 0, '2017-09-17 11:48:28'),
(101, 700, '0', -0.00292969, 32, 0, '2017-09-17 11:48:28'),
(101, 657, '3', -1.62197, 9, 0, '2017-09-17 11:48:28'),
(101, 1962, '1', -1.8252, 11, 0, '2017-09-17 11:48:28'),
(101, 1942, '2', -1.98047, 6, 0, '2017-09-17 11:48:28'),
(101, 1952, '2', 1.48915, 13, 1, '2017-09-17 11:48:29'),
(101, 1887, '2', 1.48915, 13, 1, '2017-09-17 11:48:29'),
(101, 1945, '1', 0.563333, 17, 1, '2017-09-17 11:48:29'),
(101, 683, '4', -0.1875, 21, 0, '2017-09-17 11:48:29'),
(101, 686, '4', -1.08, 8, 0, '2017-09-17 11:48:29'),
(101, 1950, '4', -0.046875, 35, 0, '2017-09-17 11:48:29'),
(101, 1990, '2', 1.08, 12, 1, '2017-09-17 11:48:29'),
(101, 660, '1', 1.81481, 8, 1, '2017-09-17 11:48:29'),
(101, 693, '3', 0.853333, 14, 1, '2017-09-17 11:48:29'),
(101, 688, '4', -1.47, 12, 0, '2017-09-17 11:48:29'),
(101, 1964, '2', -0.676875, 21, 0, '2017-09-17 11:48:29'),
(101, 1965, '3', -1.14446, 13, 0, '2017-09-17 11:48:29'),
(101, 1969, '1', -1.48915, 13, 0, '2017-09-17 11:48:29'),
(101, 1987, '3', 0.991875, 17, 1, '2017-09-17 11:48:30'),
(101, 1898, '4', 0.58391, 19, 1, '2017-09-17 11:48:30'),
(101, 711, '4', -0.0833333, 30, 0, '2017-09-17 11:48:30'),
(101, 1970, '2', -1.5498, 9, 0, '2017-09-17 11:48:30'),
(101, 1988, '2', 1.20333, 11, 1, '2017-09-17 11:48:30'),
(101, 1974, '3', -0.949219, 14, 0, '2017-09-17 11:48:30'),
(101, 671, '0', -0.00231481, 36, 0, '2017-09-17 11:48:30'),
(101, 1966, '2', 1.61333, 8, 1, '2017-09-17 11:48:30'),
(101, 1967, '1', -1.17188, 15, 0, '2017-09-17 11:48:30'),
(101, 1183, '2', 0.154959, 17, 1, '2017-09-17 11:48:30'),
(101, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:48:30'),
(101, 1263, '2', -1.92, 8, 0, '2017-09-17 11:48:30'),
(101, 1203, '3', 0.27, 21, 1, '2017-09-17 11:48:30'),
(101, 1198, '2', -0.48, 12, 0, '2017-09-17 11:48:31'),
(101, 1173, '2', 0.75, 10, 1, '2017-09-17 11:48:31'),
(101, 1216, '1', -0.520833, 14, 0, '2017-09-17 11:48:31'),
(101, 1177, '2', 0.619835, 12, 1, '2017-09-17 11:48:31'),
(101, 1190, '4', 1.2398, 10, 1, '2017-09-17 11:48:31'),
(101, 1292, '1', 1.08, 12, 1, '2017-09-17 11:48:31'),
(101, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:48:31'),
(101, 1276, '4', -1.05762, 13, 0, '2017-09-17 11:48:31'),
(101, 1184, '4', 0.255208, 17, 1, '2017-09-17 11:48:31'),
(101, 1172, '3', -0.75, 10, 0, '2017-09-17 11:48:31'),
(101, 1261, '3', 0.467452, 23, 1, '2017-09-17 11:48:31'),
(101, 1297, '3', 2.25333, 8, 1, '2017-09-17 11:48:31'),
(101, 1196, '4', 0.880208, 11, 1, '2017-09-17 11:48:31'),
(101, 1174, '3', 0.75, 13, 1, '2017-09-17 11:48:32'),
(101, 1170, '2', 0.75, 12, 1, '2017-09-17 11:48:32'),
(101, 1291, '4', 0.75, 10, 1, '2017-09-17 11:48:32'),
(101, 1197, '3', -1.33333, 8, 0, '2017-09-17 11:48:32'),
(101, 1210, '1', 0.333333, 16, 1, '2017-09-17 11:48:32'),
(101, 1169, '2', 1.02083, 10, 1, '2017-09-17 11:48:32'),
(101, 1185, '4', 0.46301, 17, 1, '2017-09-17 11:48:32'),
(101, 1218, '2', -0.6075, 11, 0, '2017-09-17 11:48:32'),
(101, 1270, '3', -1.11153, 18, 0, '2017-09-17 11:48:32'),
(101, 1186, '3', 0.979592, 12, 1, '2017-09-17 11:48:32'),
(101, 1194, '1', 0.979592, 12, 1, '2017-09-17 11:48:32'),
(101, 1175, '2', -0.949219, 14, 0, '2017-09-17 11:48:32'),
(101, 1293, '1', -1.02083, 10, 0, '2017-09-17 11:48:32'),
(101, 1269, '1', 1.59505, 13, 1, '2017-09-17 11:48:32'),
(101, 1208, '3', -0.9408, 22, 0, '2017-09-17 11:48:33'),
(101, 1287, '4', -0.880208, 22, 0, '2017-09-17 11:48:33'),
(101, 1294, '3', 0.333333, 16, 1, '2017-09-17 11:48:33'),
(101, 1191, '3', 1.6875, 7, 1, '2017-09-17 11:48:33'),
(101, 1281, '2', -0.0133333, 28, 0, '2017-09-17 11:48:33'),
(101, 1199, '4', -0.949219, 14, 0, '2017-09-17 11:48:33'),
(101, 1268, '3', -1.41797, 15, 0, '2017-09-17 11:48:33'),
(101, 1284, '3', 0.0675, 17, 1, '2017-09-17 11:48:33'),
(101, 1189, '1', -0.979592, 12, 0, '2017-09-17 11:48:33'),
(101, 1217, '3', 1.08, 8, 1, '2017-09-17 11:48:33'),
(101, 1200, '4', 1.12037, 14, 1, '2017-09-17 11:48:33'),
(101, 1265, '1', -1.86501, 11, 0, '2017-09-17 11:48:33'),
(101, 1202, '2', -0.231481, 26, 0, '2017-09-17 11:48:33'),
(101, 1220, '4', -1.38138, 9, 0, '2017-09-17 11:48:33'),
(101, 1219, '3', 1.21488, 8, 1, '2017-09-17 11:48:33'),
(101, 1282, '4', -0.333333, 20, 0, '2017-09-17 11:48:34'),
(101, 1171, '4', 0.48, 12, 1, '2017-09-17 11:48:34'),
(101, 1257, '2', -0.949219, 21, 0, '2017-09-17 11:48:34'),
(101, 1283, '4', 0.880208, 11, 1, '2017-09-17 11:48:34'),
(101, 1275, '1', -1.72942, 13, 0, '2017-09-17 11:48:34'),
(101, 1187, '1', -0.949219, 14, 0, '2017-09-17 11:48:34'),
(101, 172, '3', -1.50843, 32, 0, '2017-09-17 11:48:34'),
(101, 1295, '4', 1.02083, 10, 1, '2017-09-17 11:48:34'),
(101, 171, '4', -1.80187, 18, 0, '2017-09-17 11:48:34'),
(101, 1289, '4', -0.48, 24, 0, '2017-09-17 11:48:34'),
(101, 173, '1', -2.3763, 11, 0, '2017-09-17 11:48:34'),
(101, 1176, '4', 1.2398, 10, 1, '2017-09-17 11:48:34'),
(101, 1204, '3', -0.630208, 26, 0, '2017-09-17 11:48:34'),
(101, 1299, '3', 1.93457, 13, 1, '2017-09-17 11:48:34'),
(101, 1286, '1', -1.76333, 14, 0, '2017-09-17 11:48:34'),
(101, 1296, '1', -0.880208, 11, 0, '2017-09-17 11:48:35'),
(101, 1206, '3', -1.6875, 15, 0, '2017-09-17 11:48:35'),
(101, 1209, '2', 0.8112, 24, 1, '2017-09-17 11:48:35'),
(101, 1298, '1', 2.25333, 8, 1, '2017-09-17 11:48:35'),
(101, 1188, '3', -0.979592, 12, 0, '2017-09-17 11:48:35'),
(101, 1264, '3', -1.86226, 14, 0, '2017-09-17 11:48:35'),
(101, 1250, '3', -1.47, 18, 0, '2017-09-17 11:48:35'),
(101, 1229, '1', -1.33333, 18, 0, '2017-09-17 11:48:35'),
(101, 1288, '2', 0.843664, 31, 1, '2017-09-17 11:48:35'),
(101, 1260, '4', -0.897217, 29, 0, '2017-09-17 11:48:35'),
(101, 1278, '4', -1.20333, 22, 0, '2017-09-17 11:48:35'),
(101, 1467, '3', 0.6075, 33, 1, '2017-09-17 11:48:35'),
(101, 3051, '1', -0.284024, 18, 0, '2017-09-17 11:48:35'),
(101, 2929, '4', 1.17188, 9, 1, '2017-09-17 11:48:36'),
(101, 1457, '4', 1.36688, 13, 1, '2017-09-17 11:48:36'),
(101, 1455, '3', -1.6875, 10, 0, '2017-09-17 11:48:36'),
(101, 3044, '2', -1.33333, 8, 0, '2017-09-17 11:48:36'),
(101, 1466, '2', 0.48, 30, 1, '2017-09-17 11:48:36'),
(101, 1450, '2', -1.44676, 11, 0, '2017-09-17 11:48:36'),
(101, 1459, '3', -1.57687, 11, 0, '2017-09-17 11:48:36'),
(101, 1460, '1', 1.36248, 15, 1, '2017-09-17 11:48:36'),
(101, 1458, '1', -2.22454, 5, 0, '2017-09-17 11:48:36'),
(101, 3039, '1', 1.28254, 9, 1, '2017-09-17 11:48:36'),
(101, 1452, '1', -1.92, 8, 0, '2017-09-17 11:48:36'),
(101, 1456, '1', 1.08, 16, 1, '2017-09-17 11:48:36'),
(101, 1464, '2', 1.78255, 11, 1, '2017-09-17 11:48:36'),
(101, 1465, '2', -0.382653, 18, 0, '2017-09-17 11:48:37'),
(101, 1462, '1', 1.36688, 13, 1, '2017-09-17 11:48:37'),
(101, 1449, '3', -1.36688, 13, 0, '2017-09-17 11:48:37'),
(101, 1461, '3', 1.19234, 17, 1, '2017-09-17 11:48:37'),
(101, 1463, '3', -1.48915, 13, 0, '2017-09-17 11:48:37'),
(101, 1454, '2', 0.925926, 16, 1, '2017-09-17 11:48:37'),
(101, 3035, '2', 0.860969, 13, 1, '2017-09-17 11:48:37'),
(101, 1453, '4', -1.6428, 13, 0, '2017-09-17 11:48:37'),
(101, 3004, '2', -1.47, 9, 0, '2017-09-17 11:48:37'),
(101, 1451, '1', 0.668981, 19, 1, '2017-09-17 11:48:37'),
(101, 1475, '1', -2.04726, 8, 0, '2017-09-17 11:48:37'),
(101, 1470, '4', -1.3872, 16, 0, '2017-09-17 11:48:37'),
(101, 1488, '4', -1.6875, 11, 0, '2017-09-17 11:48:37'),
(101, 2933, '2', 0.75, 12, 1, '2017-09-17 11:48:38'),
(101, 1479, '3', 1.89824, 9, 1, '2017-09-17 11:48:38'),
(101, 1478, '1', -0.676875, 21, 0, '2017-09-17 11:48:38'),
(101, 1473, '4', -1.3872, 16, 0, '2017-09-17 11:48:38'),
(101, 1468, '2', 1.47, 12, 1, '2017-09-17 11:48:38'),
(101, 1483, '4', 0.916205, 17, 1, '2017-09-17 11:48:38'),
(101, 1472, '4', -2.1675, 6, 0, '2017-09-17 11:48:38'),
(101, 1469, '4', -0.826875, 19, 0, '2017-09-17 11:48:38'),
(101, 1471, '1', -1.47, 18, 0, '2017-09-17 11:48:38'),
(101, 3008, '1', -0.75, 14, 0, '2017-09-17 11:48:38'),
(101, 728, '1', 2.12742, 6, 1, '2017-09-17 11:48:38'),
(101, 737, '4', 0.48, 24, 1, '2017-09-17 11:48:38'),
(101, 730, '1', -0.231481, 26, 0, '2017-09-17 11:48:38'),
(101, 725, '3', -1.37284, 11, 0, '2017-09-17 11:48:38'),
(101, 731, '3', -0.925926, 16, 0, '2017-09-17 11:48:38'),
(101, 465, '2', 0.853333, 14, 1, '2017-09-17 11:48:39'),
(101, 486, '2', -1.81481, 8, 0, '2017-09-17 11:48:39'),
(101, 724, '4', -1.47, 9, 0, '2017-09-17 11:48:39'),
(101, 464, '1', -1.13609, 10, 0, '2017-09-17 11:48:39'),
(101, 735, '1', -0.963333, 13, 0, '2017-09-17 11:48:39'),
(101, 509, '2', -1.44676, 11, 0, '2017-09-17 11:48:39'),
(101, 723, '2', -1.81481, 8, 0, '2017-09-17 11:48:39'),
(101, 719, '3', 1.44676, 11, 1, '2017-09-17 11:48:39'),
(101, 485, '2', -2.04726, 8, 0, '2017-09-17 11:48:39'),
(101, 721, '1', 0.826875, 19, 1, '2017-09-17 11:48:39'),
(101, 481, '3', -0.6075, 22, 0, '2017-09-17 11:48:39'),
(101, 498, '3', -1.92, 8, 0, '2017-09-17 11:48:39'),
(102, 2611, '2', -1.08, 16, 0, '2017-09-17 11:48:40'),
(102, 2615, '4', 0, 40, 0, '2017-09-17 11:48:40'),
(102, 2609, '2', 0.9075, 18, 1, '2017-09-17 11:48:40'),
(102, 2607, '0', -0.001875, 40, 0, '2017-09-17 11:48:40'),
(102, 2610, '3', 0.9075, 18, 1, '2017-09-17 11:48:40'),
(102, 2614, '4', 1.80187, 9, 1, '2017-09-17 11:48:40'),
(102, 2602, '3', 0.826875, 19, 1, '2017-09-17 11:48:40'),
(102, 2608, '3', 1.36688, 13, 1, '2017-09-17 11:48:40'),
(102, 2601, '2', 1.47, 12, 1, '2017-09-17 11:48:40'),
(102, 2612, '0', -0.001875, 40, 0, '2017-09-17 11:48:40'),
(102, 2604, '0', -0.001875, 40, 0, '2017-09-17 11:48:41'),
(102, 2605, '2', 1.92, 8, 1, '2017-09-17 11:48:41'),
(102, 2603, '0', 0, 13, -1, '2017-09-17 11:48:41'),
(102, 2613, '4', 1.08, 16, 1, '2017-09-17 11:48:41'),
(102, 2606, '1', 1.92, 8, 1, '2017-09-17 11:48:41'),
(102, 2631, '2', -1.25, 35, 0, '2017-09-17 11:48:41'),
(102, 2626, '2', -0.853333, 28, 0, '2017-09-17 11:48:41'),
(102, 2628, '0', 0, 14, -1, '2017-09-17 11:48:41'),
(102, 2633, '3', 0.853333, 28, 1, '2017-09-17 11:48:41'),
(102, 2627, '0', -0.000833333, 60, 0, '2017-09-17 11:48:41'),
(102, 2634, '0', -0.000833333, 60, 0, '2017-09-17 11:48:41'),
(102, 2621, '3', 1.92, 12, 1, '2017-09-17 11:48:41'),
(102, 2624, '2', 1.7, 26, 1, '2017-09-17 11:48:41'),
(102, 2622, '2', 2.15, 17, 1, '2017-09-17 11:48:41'),
(102, 2623, '0', 0, 15, -1, '2017-09-17 11:48:42'),
(102, 2632, '1', -2.5, 10, 0, '2017-09-17 11:48:42'),
(102, 2625, '1', -2, 20, 0, '2017-09-17 11:48:42'),
(102, 2619, '3', 2.4, 12, 1, '2017-09-17 11:48:42'),
(102, 2616, '1', -1.7, 26, 0, '2017-09-17 11:48:42'),
(102, 2630, '0', -0.05, 60, 0, '2017-09-17 11:48:42'),
(102, 2629, '0', -0.05, 60, 0, '2017-09-17 11:48:42'),
(102, 2617, '1', 2.6, 8, 1, '2017-09-17 11:48:42'),
(102, 2620, '3', -1.35, 33, 0, '2017-09-17 11:48:42'),
(102, 2618, '3', 2.3, 14, 1, '2017-09-17 11:48:42'),
(102, 2635, '0', -0.05, 60, 0, '2017-09-17 11:48:42'),
(102, 2823, '1', -1.3, 34, 0, '2017-09-17 11:48:42'),
(102, 2852, '3', -1.4, 32, 0, '2017-09-17 11:48:43'),
(102, 2732, '4', 2.45, 11, 1, '2017-09-17 11:48:43'),
(102, 2835, '0', -0.05, 60, 0, '2017-09-17 11:48:43'),
(102, 2729, '0', -0.05, 60, 0, '2017-09-17 11:48:43'),
(102, 2825, '4', -2.5, 10, 0, '2017-09-17 11:48:43'),
(102, 2734, '3', 2.35, 13, 1, '2017-09-17 11:48:43'),
(102, 2731, '4', 1.4, 32, 1, '2017-09-17 11:48:43'),
(102, 2735, '4', -1.7, 26, 0, '2017-09-17 11:48:43'),
(102, 2816, '4', 2.2, 16, 1, '2017-09-17 11:48:43'),
(102, 2833, '0', -0.05, 60, 0, '2017-09-17 11:48:43'),
(102, 2819, '2', 2.4, 12, 1, '2017-09-17 11:48:43'),
(102, 2733, '2', 1.55, 29, 1, '2017-09-17 11:48:43'),
(102, 2728, '3', -0.846932, 51, 0, '2017-09-17 11:48:43'),
(102, 2845, '0', -0.05, 60, 0, '2017-09-17 11:48:43'),
(102, 2841, '3', 2.5, 10, 1, '2017-09-17 11:48:43'),
(102, 2838, '3', 2.65665, 10, 1, '2017-09-17 11:48:44'),
(102, 2847, '3', -2.01386, 27, 0, '2017-09-17 11:48:44'),
(102, 2730, '4', 2.513, 14, 1, '2017-09-17 11:48:44'),
(102, 2820, '2', 2.25111, 21, 1, '2017-09-17 11:48:44'),
(102, 1172, '0', -0.0075, 20, 0, '2017-09-17 11:48:44'),
(102, 1276, '0', 0, 19, -1, '2017-09-17 11:48:44'),
(102, 1169, '2', 0.00520833, 23, 1, '2017-09-17 11:48:44'),
(102, 1203, '3', 0.0833333, 25, 1, '2017-09-17 11:48:44'),
(102, 1198, '0', -0.0075, 20, 0, '2017-09-17 11:48:44'),
(102, 1190, '4', 1.38138, 9, 1, '2017-09-17 11:48:44'),
(102, 1270, '3', -0.0127599, 43, 0, '2017-09-17 11:48:44'),
(102, 1174, '0', -0.00443787, 26, 0, '2017-09-17 11:48:44'),
(102, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:48:44'),
(102, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:48:44'),
(102, 1291, '1', -0.48, 12, 0, '2017-09-17 11:48:44'),
(102, 1197, '3', -0.421875, 15, 0, '2017-09-17 11:48:45'),
(102, 1170, '1', -0.130208, 19, 0, '2017-09-17 11:48:45'),
(102, 1186, '3', 1.2398, 10, 1, '2017-09-17 11:48:45'),
(102, 1196, '4', 0.046875, 21, 1, '2017-09-17 11:48:45'),
(102, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:48:45'),
(102, 1184, '4', 0.255208, 17, 1, '2017-09-17 11:48:45'),
(102, 1177, '2', 1.04752, 9, 1, '2017-09-17 11:48:45'),
(102, 1216, '4', 0.0208333, 22, 1, '2017-09-17 11:48:45'),
(102, 1218, '0', 0, 8, -1, '2017-09-17 11:48:45'),
(102, 1297, '0', -0.000833333, 60, 0, '2017-09-17 11:48:45'),
(102, 1194, '1', 0.55102, 16, 1, '2017-09-17 11:48:45'),
(102, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:48:45'),
(102, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:48:45'),
(102, 1263, '1', 1.08, 16, 1, '2017-09-17 11:48:45'),
(102, 1183, '2', 0.154959, 17, 1, '2017-09-17 11:48:45'),
(102, 1173, '1', -0.12, 16, 0, '2017-09-17 11:48:46'),
(102, 1292, '1', 0.653333, 16, 1, '2017-09-17 11:48:46'),
(102, 1191, '2', -1.38138, 9, 0, '2017-09-17 11:48:46'),
(102, 1200, '4', 0.148148, 28, 1, '2017-09-17 11:48:46'),
(102, 1268, '0', -0.00130208, 48, 0, '2017-09-17 11:48:46'),
(102, 1257, '0', 0, 8, -1, '2017-09-17 11:48:46'),
(102, 1281, '0', -0.00333333, 30, 0, '2017-09-17 11:48:46'),
(102, 1217, '3', 0.1875, 15, 1, '2017-09-17 11:48:46'),
(102, 1189, '3', 0.860969, 13, 1, '2017-09-17 11:48:46'),
(102, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:48:46'),
(102, 1287, '2', -0.105469, 39, 0, '2017-09-17 11:48:46'),
(102, 1208, '1', 0.3468, 33, 1, '2017-09-17 11:48:46'),
(102, 1284, '3', 0.12, 16, 1, '2017-09-17 11:48:46'),
(102, 1199, '0', -0.00292969, 32, 0, '2017-09-17 11:48:46'),
(102, 1171, '4', 1.6875, 5, 1, '2017-09-17 11:48:47'),
(102, 1202, '3', -0.0833333, 30, 0, '2017-09-17 11:48:47'),
(102, 1293, '2', 1.17188, 9, 1, '2017-09-17 11:48:47'),
(102, 1175, '4', 0.1875, 24, 1, '2017-09-17 11:48:47'),
(102, 1294, '3', 0.255208, 17, 1, '2017-09-17 11:48:47'),
(102, 1282, '0', -0.00333333, 30, 0, '2017-09-17 11:48:47'),
(102, 1219, '3', 0.75, 11, 1, '2017-09-17 11:48:47'),
(102, 1220, '2', 0.137755, 22, 1, '2017-09-17 11:48:47'),
(102, 1265, '0', -0.00110947, 52, 0, '2017-09-17 11:48:47'),
(102, 1250, '4', -0.6075, 33, 0, '2017-09-17 11:48:47'),
(102, 1206, '3', -0.3675, 39, 0, '2017-09-17 11:48:47'),
(102, 1209, '0', -0.0012, 50, 0, '2017-09-17 11:48:47'),
(102, 1298, '0', -0.000833333, 60, 0, '2017-09-17 11:48:48'),
(102, 1229, '0', -0.00102881, 54, 0, '2017-09-17 11:48:48'),
(102, 1176, '0', -0.00382653, 28, 0, '2017-09-17 11:48:48'),
(102, 172, '0', -0.000247934, 110, 0, '2017-09-17 11:48:48'),
(102, 607, '0', -0.000956633, 56, 0, '2017-09-17 11:48:48'),
(102, 601, '4', 0.860969, 26, 1, '2017-09-17 11:48:48'),
(102, 403, '1', -0.27, 42, 0, '2017-09-17 11:48:48'),
(102, 599, '1', 0.48, 36, 1, '2017-09-17 11:48:48'),
(102, 1308, '1', -1.08, 24, 0, '2017-09-17 11:48:48'),
(102, 1311, '4', 0.75, 25, 1, '2017-09-17 11:48:48'),
(102, 606, '3', 0.800833, 29, 1, '2017-09-17 11:48:48'),
(102, 1091, '2', -1.6875, 15, 0, '2017-09-17 11:48:48'),
(102, 1089, '4', -1.54083, 17, 0, '2017-09-17 11:48:48'),
(102, 854, '1', 1.65551, 18, 1, '2017-09-17 11:48:48'),
(102, 852, '0', 0, 15, -1, '2017-09-17 11:48:49'),
(102, 611, '3', 1.8252, 11, 1, '2017-09-17 11:48:49'),
(102, 1124, '1', -0.700833, 31, 0, '2017-09-17 11:48:49'),
(102, 598, '1', -0.0833333, 50, 0, '2017-09-17 11:48:49'),
(102, 595, '4', 0.998521, 22, 1, '2017-09-17 11:48:49'),
(102, 619, '4', 1.54083, 17, 1, '2017-09-17 11:48:49'),
(102, 853, '4', -0.440833, 37, 0, '2017-09-17 11:48:49'),
(102, 1317, '3', 1.76333, 14, 1, '2017-09-17 11:48:49'),
(102, 1301, '3', 2.21558, 9, 1, '2017-09-17 11:48:49'),
(102, 594, '3', 1.5552, 14, 1, '2017-09-17 11:48:49'),
(102, 604, '4', -1.76333, 14, 0, '2017-09-17 11:48:49'),
(102, 603, '1', 0.536982, 30, 1, '2017-09-17 11:48:49'),
(102, 624, '1', 2.43, 6, 1, '2017-09-17 11:48:49'),
(102, 596, '1', 1.1893, 20, 1, '2017-09-17 11:48:49'),
(102, 1320, '3', 2.16, 14, 1, '2017-09-17 11:48:49'),
(102, 1338, '2', 2.03571, 18, 1, '2017-09-17 11:48:50'),
(102, 1315, '0', -0.0517241, 58, 0, '2017-09-17 11:48:50'),
(102, 1329, '3', 0.15, 57, 1, '2017-09-17 11:48:50'),
(102, 1332, '1', -2.5, 10, 0, '2017-09-17 11:48:50'),
(102, 1106, '0', -0.05, 60, 0, '2017-09-17 11:48:50'),
(102, 1092, '1', 0.25, 55, 1, '2017-09-17 11:48:50'),
(102, 1312, '1', -1.90909, 24, 0, '2017-09-17 11:48:50'),
(102, 1323, '1', -0.1875, 60, 0, '2017-09-17 11:48:50'),
(102, 1113, '1', 1.63636, 30, 1, '2017-09-17 11:48:50'),
(102, 1313, '1', -2.22222, 14, 0, '2017-09-17 11:48:50'),
(102, 1339, '2', 1.95, 21, 1, '2017-09-17 11:48:50'),
(102, 995, '2', -1.5, 30, 0, '2017-09-17 11:48:50'),
(102, 1126, '2', 1.3, 34, 1, '2017-09-17 11:48:50'),
(102, 1335, '2', 2.46429, 10, 1, '2017-09-17 11:48:50'),
(102, 1331, '2', 1.8, 16, 1, '2017-09-17 11:48:50'),
(102, 1090, '2', 1.5, 30, 1, '2017-09-17 11:48:51'),
(102, 1326, '1', 2.43103, 11, 1, '2017-09-17 11:48:51'),
(102, 1344, '1', -2.01386, 27, 0, '2017-09-17 11:48:51'),
(102, 1337, '0', -0.046875, 64, 0, '2017-09-17 11:48:51'),
(102, 1327, '1', -2.34, 11, 0, '2017-09-17 11:48:51'),
(102, 1333, '2', 2.75, 5, 1, '2017-09-17 11:48:51'),
(102, 1132, '2', -2.6, 8, 0, '2017-09-17 11:48:51'),
(102, 1096, '3', 1.8, 24, 1, '2017-09-17 11:48:51'),
(102, 1324, '3', 2.5, 11, 1, '2017-09-17 11:48:51'),
(102, 1349, '3', -2.58532, 12, 0, '2017-09-17 11:48:51'),
(102, 1334, '4', 2.6, 8, 1, '2017-09-17 11:48:51'),
(102, 1361, '2', -2.72703, 8, 0, '2017-09-17 11:48:51'),
(102, 1322, '2', -2.67188, 7, 0, '2017-09-17 11:48:51'),
(102, 1341, '2', -1.7, 26, 0, '2017-09-17 11:48:51'),
(102, 1328, '3', 2.1, 18, 1, '2017-09-17 11:48:52'),
(102, 1307, '3', -2.69118, 7, 0, '2017-09-17 11:48:52'),
(102, 1340, '2', 0.629032, 49, 1, '2017-09-17 11:48:52'),
(102, 1103, '2', 2.45833, 13, 1, '2017-09-17 11:48:52'),
(102, 1343, '4', 0.9, 35, 1, '2017-09-17 11:48:52'),
(102, 1321, '3', 1.35938, 35, 1, '2017-09-17 11:48:52'),
(102, 2389, '3', -0.48, 24, 0, '2017-09-17 11:48:52'),
(102, 2425, '1', -1.08, 16, 0, '2017-09-17 11:48:52'),
(102, 2430, '1', -1.08, 16, 0, '2017-09-17 11:48:52'),
(102, 2437, '2', 2.04187, 7, 1, '2017-09-17 11:48:52'),
(102, 2412, '2', -1.2675, 14, 0, '2017-09-17 11:48:52'),
(102, 2391, '2', 2.1675, 6, 1, '2017-09-17 11:48:52'),
(102, 2463, '2', -1.80187, 9, 0, '2017-09-17 11:48:52'),
(102, 2462, '2', 0.826875, 19, 1, '2017-09-17 11:48:53'),
(102, 2395, '3', -1.2675, 14, 0, '2017-09-17 11:48:53'),
(102, 2423, '3', 0.316875, 27, 1, '2017-09-17 11:48:53'),
(102, 2415, '1', -0.151875, 31, 0, '2017-09-17 11:48:53'),
(102, 2461, '1', -0.6075, 22, 0, '2017-09-17 11:48:53'),
(102, 2458, '0', -0.001875, 40, 0, '2017-09-17 11:48:53'),
(102, 2409, '4', 0, 40, 0, '2017-09-17 11:48:53'),
(102, 2388, '1', -2.04187, 7, 0, '2017-09-17 11:48:53'),
(102, 2433, '0', -0.001875, 40, 0, '2017-09-17 11:48:53'),
(102, 2396, '0', -0.001875, 40, 0, '2017-09-17 11:48:53'),
(102, 2397, '0', -0.001875, 40, 0, '2017-09-17 11:48:53'),
(102, 2405, '0', -0.001875, 40, 0, '2017-09-17 11:48:53'),
(102, 2421, '2', 0.541875, 23, 1, '2017-09-17 11:48:53'),
(102, 2424, '4', -0.541875, 23, 0, '2017-09-17 11:48:54'),
(102, 2436, '1', -0.991875, 17, 0, '2017-09-17 11:48:54'),
(102, 2402, '3', 0.316875, 27, 1, '2017-09-17 11:48:54'),
(102, 2390, '1', -0.226875, 29, 0, '2017-09-17 11:48:54'),
(102, 2398, '1', -0.1875, 30, 0, '2017-09-17 11:48:54'),
(102, 2459, '3', 1.92, 8, 1, '2017-09-17 11:48:54'),
(102, 2441, '4', -0.991875, 17, 0, '2017-09-17 11:48:54'),
(102, 2426, '4', -1.36688, 13, 0, '2017-09-17 11:48:54'),
(102, 2428, '4', -2.29688, 5, 0, '2017-09-17 11:48:54'),
(102, 2460, '4', -0.151875, 31, 0, '2017-09-17 11:48:54'),
(102, 2394, '4', -1.92, 8, 0, '2017-09-17 11:48:54'),
(102, 364, '2', 0.3675, 13, 1, '2017-09-17 11:48:54'),
(102, 2419, '2', 2.29688, 15, 1, '2017-09-17 11:48:54'),
(102, 2416, '3', 2.54171, 7, 1, '2017-09-17 11:48:55'),
(102, 372, '0', -0.0075, 20, 0, '2017-09-17 11:48:55'),
(102, 378, '1', 1.08, 8, 1, '2017-09-17 11:48:55'),
(102, 1115, '1', 0.27, 14, 1, '2017-09-17 11:48:55'),
(102, 371, '2', -0.0075, 19, 0, '2017-09-17 11:48:55'),
(102, 1110, '3', -1.6875, 5, 0, '2017-09-17 11:48:55'),
(102, 384, '0', -0.0075, 20, 0, '2017-09-17 11:48:55'),
(102, 400, '3', -0.3675, 13, 0, '2017-09-17 11:48:55'),
(102, 1104, '3', 1.6875, 5, 1, '2017-09-17 11:48:55'),
(102, 2418, '2', 2.63672, 5, 1, '2017-09-17 11:48:55'),
(102, 381, '0', -0.0075, 20, 0, '2017-09-17 11:48:55'),
(102, 373, '3', -1.2675, 7, 0, '2017-09-17 11:48:55'),
(102, 1109, '4', -1.47, 6, 0, '2017-09-17 11:48:56'),
(102, 1130, '2', 1.08, 8, 1, '2017-09-17 11:48:56'),
(102, 382, '4', 0.48, 12, 1, '2017-09-17 11:48:56'),
(102, 392, '4', -0.48, 12, 0, '2017-09-17 11:48:56'),
(102, 2431, '2', -2.21207, 13, 0, '2017-09-17 11:48:56'),
(102, 2414, '3', 2.2376, 12, 1, '2017-09-17 11:48:56'),
(102, 395, '3', -0.75, 10, 0, '2017-09-17 11:48:56'),
(102, 399, '3', -0.48, 12, 0, '2017-09-17 11:48:56'),
(102, 387, '3', -1.47, 6, 0, '2017-09-17 11:48:56'),
(102, 394, '0', -0.0075, 20, 0, '2017-09-17 11:48:56'),
(102, 377, '3', -1.92, 4, 0, '2017-09-17 11:48:56'),
(102, 386, '4', 0.27, 14, 1, '2017-09-17 11:48:56'),
(102, 365, '4', -1.6875, 5, 0, '2017-09-17 11:48:56'),
(102, 398, '1', 0.0075, 19, 1, '2017-09-17 11:48:56'),
(102, 397, '0', -0.0075, 20, 0, '2017-09-17 11:48:56'),
(102, 370, '4', -0.3675, 13, 0, '2017-09-17 11:48:57'),
(102, 1112, '2', -1.2675, 7, 0, '2017-09-17 11:48:57'),
(102, 1133, '3', 1.08, 8, 1, '2017-09-17 11:48:57'),
(102, 363, '3', 1.92, 4, 1, '2017-09-17 11:48:57'),
(102, 1139, '2', 1.08, 8, 1, '2017-09-17 11:48:57'),
(102, 1121, '2', -0.48, 12, 0, '2017-09-17 11:48:57'),
(102, 1131, '2', -1.2675, 7, 0, '2017-09-17 11:48:57'),
(102, 402, '2', -1.08, 8, 0, '2017-09-17 11:48:57'),
(102, 396, '0', -0.0075, 20, 0, '2017-09-17 11:48:57'),
(102, 385, '2', -0.0675, 17, 0, '2017-09-17 11:48:58'),
(102, 2413, '2', -2.50095, 8, 0, '2017-09-17 11:48:58'),
(102, 366, '2', -0.1875, 15, 0, '2017-09-17 11:48:58'),
(102, 367, '3', 0.48, 12, 1, '2017-09-17 11:48:58'),
(102, 2411, '3', -2.2376, 15, 0, '2017-09-17 11:48:58'),
(102, 401, '3', -0.75, 10, 0, '2017-09-17 11:48:58'),
(102, 376, '3', -1.6875, 5, 0, '2017-09-17 11:48:58'),
(102, 1122, '4', 0.03, 18, 1, '2017-09-17 11:48:58'),
(102, 1140, '1', 1.2675, 7, 1, '2017-09-17 11:48:58'),
(102, 379, '3', 0.3675, 13, 1, '2017-09-17 11:48:58'),
(102, 393, '3', -1.92, 4, 0, '2017-09-17 11:48:58'),
(102, 391, '3', -0.48, 12, 0, '2017-09-17 11:48:58'),
(102, 2404, '3', -2.62146, 6, 0, '2017-09-17 11:48:58'),
(102, 1137, '2', 1.08, 8, 1, '2017-09-17 11:48:59'),
(102, 2422, '2', -1.98047, 24, 0, '2017-09-17 11:48:59'),
(103, 1461, '3', 1.03355, 19, 1, '2017-09-17 11:48:59'),
(103, 1450, '2', -0.592593, 20, 0, '2017-09-17 11:48:59'),
(103, 1459, '2', 0.541875, 23, 1, '2017-09-17 11:48:59'),
(103, 3004, '3', 1.47, 9, 1, '2017-09-17 11:48:59'),
(103, 3035, '2', 1.10587, 11, 1, '2017-09-17 11:48:59'),
(103, 1460, '2', -0.00567108, 44, 0, '2017-09-17 11:49:00'),
(103, 1453, '1', 0.75, 25, 1, '2017-09-17 11:49:00'),
(103, 1454, '2', 1.56481, 10, 1, '2017-09-17 11:49:00'),
(103, 1452, '2', 0.091875, 33, 1, '2017-09-17 11:49:00'),
(103, 1465, '0', -0.00382653, 28, 0, '2017-09-17 11:49:00'),
(103, 3051, '0', -0.00443787, 26, 0, '2017-09-17 11:49:00'),
(103, 1462, '1', 1.92, 8, 1, '2017-09-17 11:49:00'),
(103, 1634, '3', 0.880208, 11, 1, '2017-09-17 11:49:00'),
(103, 1641, '3', 0.646684, 15, 1, '2017-09-17 11:49:00'),
(103, 1632, '0', -0.00333333, 30, 0, '2017-09-17 11:49:00'),
(103, 1635, '4', 0.853333, 14, 1, '2017-09-17 11:49:00'),
(103, 1633, '2', 0.869823, 12, 1, '2017-09-17 11:49:00'),
(103, 1712, '2', 1.4856, 16, 1, '2017-09-17 11:49:01'),
(103, 1647, '3', 1.77515, 6, 1, '2017-09-17 11:49:01'),
(103, 1675, '2', -1.64609, 14, 0, '2017-09-17 11:49:01'),
(103, 1704, '3', -1.77515, 12, 0, '2017-09-17 11:49:01'),
(103, 1660, '0', 0, 23, -1, '2017-09-17 11:49:01'),
(103, 1711, '1', 1.79132, 10, 1, '2017-09-17 11:49:01'),
(103, 1677, '3', -1.59505, 13, 0, '2017-09-17 11:49:01'),
(103, 1672, '1', -1.98047, 9, 0, '2017-09-17 11:49:01'),
(103, 1662, '2', -0.0612245, 24, 0, '2017-09-17 11:49:01'),
(103, 1644, '0', 0, 23, -1, '2017-09-17 11:49:01'),
(103, 1663, '2', -0.963333, 13, 0, '2017-09-17 11:49:01'),
(103, 1674, '1', 2.24667, 7, 1, '2017-09-17 11:49:01'),
(103, 1709, '2', -2.26843, 6, 0, '2017-09-17 11:49:01'),
(103, 1696, '1', -0.619835, 24, 0, '2017-09-17 11:49:01'),
(103, 1694, '1', 2.04726, 8, 1, '2017-09-17 11:49:02'),
(103, 1666, '2', 1.12965, 17, 1, '2017-09-17 11:49:02'),
(103, 1553, '2', -2.15643, 7, 0, '2017-09-17 11:49:02'),
(103, 1582, '2', 1.96599, 8, 1, '2017-09-17 11:49:02'),
(103, 1589, '2', -0.979592, 18, 0, '2017-09-17 11:49:02'),
(103, 1586, '0', 0, 14, -1, '2017-09-17 11:49:02'),
(103, 1575, '0', 0, 14, -1, '2017-09-17 11:49:02'),
(103, 1571, '4', -1.9571, 10, 0, '2017-09-17 11:49:02'),
(103, 1566, '2', -2.38327, 5, 0, '2017-09-17 11:49:02'),
(103, 1593, '1', 1.21488, 16, 1, '2017-09-17 11:49:02'),
(103, 1597, '0', 0, 9, -1, '2017-09-17 11:49:02'),
(103, 1596, '1', 1.6875, 13, 1, '2017-09-17 11:49:02'),
(103, 1591, '3', -1.81481, 12, 0, '2017-09-17 11:49:02'),
(103, 1590, '3', -1.45504, 17, 0, '2017-09-17 11:49:02'),
(103, 1594, '4', 1.09505, 19, 1, '2017-09-17 11:49:02'),
(103, 1592, '3', -2.08333, 10, 0, '2017-09-17 11:49:03'),
(103, 1559, '4', 1.94093, 9, 1, '2017-09-17 11:49:03'),
(103, 1563, '2', 1.77515, 12, 1, '2017-09-17 11:49:03'),
(103, 1574, '2', -2.1132, 9, 0, '2017-09-17 11:49:03'),
(103, 3034, '1', -0.860969, 13, 0, '2017-09-17 11:49:03'),
(103, 1595, '1', -1.76333, 14, 0, '2017-09-17 11:49:03'),
(103, 1616, '3', -1.27599, 16, 0, '2017-09-17 11:49:03'),
(103, 1578, '1', 2.04726, 8, 1, '2017-09-17 11:49:03'),
(103, 1602, '2', -1.08, 24, 0, '2017-09-17 11:49:03'),
(103, 1606, '1', -0.520833, 35, 0, '2017-09-17 11:49:03'),
(103, 1603, '2', 2.45081, 5, 1, '2017-09-17 11:49:03'),
(103, 1617, '1', 0.239603, 33, 1, '2017-09-17 11:49:03'),
(103, 1607, '1', 2.31956, 7, 1, '2017-09-17 11:49:03'),
(103, 1599, '2', -0.105469, 39, 0, '2017-09-17 11:49:03'),
(103, 1615, '2', -1.96998, 11, 0, '2017-09-17 11:49:04'),
(103, 1604, '2', 1.09505, 19, 1, '2017-09-17 11:49:04'),
(103, 1608, '3', 1.28254, 18, 1, '2017-09-17 11:49:04'),
(103, 1614, '2', -1.1893, 20, 0, '2017-09-17 11:49:04'),
(103, 1600, '1', -0.1875, 39, 0, '2017-09-17 11:49:04'),
(103, 1601, '2', 1.53061, 16, 1, '2017-09-17 11:49:04'),
(103, 1610, '2', -1.7328, 12, 0, '2017-09-17 11:49:04'),
(103, 1609, '1', 1.98047, 9, 1, '2017-09-17 11:49:04'),
(103, 1605, '1', -1.33333, 20, 0, '2017-09-17 11:49:04'),
(103, 1611, '1', -0.459357, 28, 0, '2017-09-17 11:49:04'),
(103, 1598, '1', 1.60207, 14, 1, '2017-09-17 11:49:04'),
(103, 1612, '4', 1.9571, 10, 1, '2017-09-17 11:49:04'),
(103, 1613, '1', -1.02083, 25, 0, '2017-09-17 11:49:04'),
(103, 1629, '3', 1.63894, 12, 1, '2017-09-17 11:49:05'),
(103, 1619, '2', -0.869823, 24, 0, '2017-09-17 11:49:05'),
(103, 1621, '3', -1.86501, 11, 0, '2017-09-17 11:49:05'),
(103, 1627, '2', -2.00826, 8, 0, '2017-09-17 11:49:05'),
(103, 1645, '3', -1.83105, 14, 0, '2017-09-17 11:49:05'),
(103, 1622, '0', -0.000956633, 56, 0, '2017-09-17 11:49:05'),
(103, 1640, '0', -0.000833333, 60, 0, '2017-09-17 11:49:05'),
(103, 1624, '1', -0.421875, 35, 0, '2017-09-17 11:49:05'),
(103, 1626, '4', 1.12037, 21, 1, '2017-09-17 11:49:05'),
(103, 1631, '2', -1.86501, 11, 0, '2017-09-17 11:49:05'),
(103, 1623, '3', 2.1675, 9, 1, '2017-09-17 11:49:05'),
(103, 1628, '1', 2.38327, 5, 1, '2017-09-17 11:49:05'),
(103, 1620, '0', -0.00130208, 48, 0, '2017-09-17 11:49:05'),
(103, 1656, '3', -0.880208, 22, 0, '2017-09-17 11:49:06'),
(103, 1630, '4', 1.54395, 13, 1, '2017-09-17 11:49:06'),
(103, 1618, '1', -1.2288, 18, 0, '2017-09-17 11:49:06'),
(103, 1654, '1', -1.50521, 14, 0, '2017-09-17 11:49:06'),
(103, 1636, '1', -1.81481, 12, 0, '2017-09-17 11:49:06'),
(103, 1625, '1', 1.88021, 10, 1, '2017-09-17 11:49:06'),
(103, 1651, '3', 1.60207, 14, 1, '2017-09-17 11:49:06'),
(103, 1687, '2', -1.29199, 22, 0, '2017-09-17 11:49:06'),
(103, 1684, '2', 0.303719, 30, 1, '2017-09-17 11:49:06'),
(103, 1701, '1', 1.80589, 13, 1, '2017-09-17 11:49:06'),
(103, 1699, '1', 0.333333, 32, 1, '2017-09-17 11:49:06'),
(103, 1692, '1', -1.12965, 17, 0, '2017-09-17 11:49:06'),
(103, 1664, '0', -0.00110947, 52, 0, '2017-09-17 11:49:07'),
(103, 1659, '0', -0.0012, 50, 0, '2017-09-17 11:49:07'),
(103, 1680, '4', -1.59505, 13, 0, '2017-09-17 11:49:07'),
(103, 1670, '3', -0.17155, 35, 0, '2017-09-17 11:49:07'),
(103, 1682, '0', -0.00154959, 44, 0, '2017-09-17 11:49:07'),
(103, 1669, '3', -2.04726, 8, 0, '2017-09-17 11:49:07'),
(103, 1685, '4', 1.76881, 13, 1, '2017-09-17 11:49:07'),
(103, 1686, '1', 2.24667, 7, 1, '2017-09-17 11:49:07'),
(103, 1678, '4', 1.94093, 9, 1, '2017-09-17 11:49:07'),
(103, 1690, '3', -1.51454, 11, 0, '2017-09-17 11:49:07'),
(103, 1673, '3', -0.348657, 29, 0, '2017-09-17 11:49:07'),
(103, 1689, '1', -2.12742, 6, 0, '2017-09-17 11:49:07'),
(103, 1688, '2', 2.12138, 7, 1, '2017-09-17 11:49:07'),
(103, 1691, '1', 1.41797, 10, 1, '2017-09-17 11:49:07'),
(103, 1697, '0', -0.00141777, 46, 0, '2017-09-17 11:49:08'),
(103, 2601, '2', 2.1675, 6, 1, '2017-09-17 11:49:08'),
(103, 2607, '1', -1.47, 12, 0, '2017-09-17 11:49:08'),
(103, 2615, '2', -0.046875, 35, 0, '2017-09-17 11:49:08'),
(103, 2603, '1', 0.001875, 39, 1, '2017-09-17 11:49:08'),
(103, 2609, '0', -0.001875, 40, 0, '2017-09-17 11:49:08'),
(103, 2606, '1', 0.001875, 39, 1, '2017-09-17 11:49:08'),
(103, 2613, '0', -0.001875, 40, 0, '2017-09-17 11:49:08'),
(103, 2614, '4', 0.03, 36, 1, '2017-09-17 11:49:08'),
(103, 2602, '3', 0, 40, 1, '2017-09-17 11:49:08'),
(103, 2611, '3', 0.001875, 39, 1, '2017-09-17 11:49:08'),
(103, 2604, '0', -0.001875, 40, 0, '2017-09-17 11:49:08'),
(103, 2605, '3', -0.48, 24, 0, '2017-09-17 11:49:08'),
(103, 2612, '2', -0.151875, 31, 0, '2017-09-17 11:49:08'),
(103, 2610, '4', -1.57687, 11, 0, '2017-09-17 11:49:08'),
(103, 2608, '0', -0.001875, 40, 0, '2017-09-17 11:49:09'),
(103, 2634, '3', -1.92, 12, 0, '2017-09-17 11:49:09'),
(103, 2630, '2', 1.54083, 17, 1, '2017-09-17 11:49:09'),
(103, 2619, '0', 0, 37, -1, '2017-09-17 11:49:09'),
(103, 2616, '1', -0.0075, 57, 0, '2017-09-17 11:49:09'),
(103, 2629, '0', 0, 51, -1, '2017-09-17 11:49:09'),
(103, 2626, '2', -0.000833333, 59, 0, '2017-09-17 11:49:09'),
(103, 2628, '4', 0, 60, 0, '2017-09-17 11:49:09'),
(103, 2621, '3', 1.33333, 20, 1, '2017-09-17 11:49:09'),
(103, 2625, '3', 1.6875, 15, 1, '2017-09-17 11:49:09'),
(103, 2624, '2', 0.03, 54, 1, '2017-09-17 11:49:09'),
(103, 2632, '3', 0.6075, 33, 1, '2017-09-17 11:49:09'),
(103, 2635, '2', -1.40083, 19, 0, '2017-09-17 11:49:09'),
(103, 2627, '2', 0.800833, 29, 1, '2017-09-17 11:49:10'),
(103, 2631, '0', 0, 49, -1, '2017-09-17 11:49:10'),
(103, 2617, '1', 2.43, 6, 1, '2017-09-17 11:49:10'),
(103, 2618, '3', 2.08333, 10, 1, '2017-09-17 11:49:10'),
(103, 2633, '3', 0.0675, 51, 1, '2017-09-17 11:49:10'),
(103, 2622, '1', -0.12, 48, 0, '2017-09-17 11:49:10'),
(103, 2623, '2', 2.08333, 10, 1, '2017-09-17 11:49:10'),
(103, 2620, '1', -1.40083, 19, 0, '2017-09-17 11:49:10'),
(103, 2820, '2', 1.47, 18, 1, '2017-09-17 11:49:10'),
(103, 2731, '0', -0.000833333, 60, 0, '2017-09-17 11:49:10'),
(103, 2852, '4', -0.213333, 44, 0, '2017-09-17 11:49:10'),
(103, 2819, '2', 1.6875, 15, 1, '2017-09-17 11:49:10'),
(103, 2733, '3', -0.563333, 34, 0, '2017-09-17 11:49:10'),
(103, 1197, '2', -0.046875, 21, 0, '2017-09-17 11:49:11'),
(103, 1216, '3', -0.520833, 14, 0, '2017-09-17 11:49:11'),
(103, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:49:11'),
(103, 1177, '2', 0.619835, 12, 1, '2017-09-17 11:49:11'),
(103, 1186, '3', 0, 28, 1, '2017-09-17 11:49:11'),
(103, 1218, '3', -0.6075, 11, 0, '2017-09-17 11:49:11'),
(103, 1190, '0', 0, 24, -1, '2017-09-17 11:49:11'),
(103, 1196, '0', -0.00520833, 24, 0, '2017-09-17 11:49:11'),
(103, 1174, '0', 0, 4, -1, '2017-09-17 11:49:11'),
(103, 1185, '3', -0.0956633, 23, 0, '2017-09-17 11:49:11'),
(103, 1198, '0', 0, 11, -1, '2017-09-17 11:49:11'),
(103, 1276, '1', 0.105469, 26, 1, '2017-09-17 11:49:11'),
(103, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:49:11'),
(103, 1173, '0', -0.0075, 20, 0, '2017-09-17 11:49:12'),
(103, 1184, '3', -0.333333, 16, 0, '2017-09-17 11:49:12'),
(103, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:49:12'),
(103, 1169, '2', 1.33333, 8, 1, '2017-09-17 11:49:12'),
(103, 1297, '3', 1.54083, 17, 1, '2017-09-17 11:49:12'),
(103, 1194, '1', 0.75, 14, 1, '2017-09-17 11:49:12'),
(103, 1291, '0', -0.0075, 20, 0, '2017-09-17 11:49:12'),
(103, 1170, '1', -1.17188, 9, 0, '2017-09-17 11:49:12'),
(103, 1195, '4', 0.0075, 19, 1, '2017-09-17 11:49:12'),
(103, 1292, '1', 1.61333, 8, 1, '2017-09-17 11:49:12'),
(103, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:49:12'),
(103, 1263, '1', 0.676875, 21, 1, '2017-09-17 11:49:12'),
(103, 1172, '2', -0.03, 18, 0, '2017-09-17 11:49:12'),
(103, 1227, '3', 0.0208333, 22, 1, '2017-09-17 11:49:12'),
(103, 1183, '2', 0.154959, 17, 1, '2017-09-17 11:49:13'),
(103, 1219, '0', -0.00619835, 22, 0, '2017-09-17 11:49:13'),
(103, 1208, '2', -0.3888, 32, 0, '2017-09-17 11:49:13'),
(103, 1281, '0', -0.00333333, 30, 0, '2017-09-17 11:49:13'),
(104, 1291, '1', -0.03, 18, 0, '2017-09-17 11:49:13'),
(104, 1174, '3', 0.217456, 19, 1, '2017-09-17 11:49:13'),
(104, 1173, '2', 0.12, 16, 1, '2017-09-17 11:49:13'),
(104, 1195, '0', 0, 19, -1, '2017-09-17 11:49:14'),
(104, 1184, '4', 0.046875, 21, 1, '2017-09-17 11:49:14'),
(104, 1177, '4', -1.39463, 7, 0, '2017-09-17 11:49:14'),
(104, 1216, '4', 0.00520833, 23, 1, '2017-09-17 11:49:14'),
(104, 1169, '2', 0.421875, 15, 1, '2017-09-17 11:49:14'),
(104, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:49:14'),
(104, 1198, '2', -0.0675, 17, 0, '2017-09-17 11:49:14'),
(104, 1263, '0', -0.001875, 40, 0, '2017-09-17 11:49:14'),
(104, 1270, '0', 0, 44, -1, '2017-09-17 11:49:14'),
(104, 1183, '2', 0.303719, 15, 1, '2017-09-17 11:49:14'),
(104, 1186, '3', 1.10587, 11, 1, '2017-09-17 11:49:14'),
(104, 1196, '4', 0, 24, 1, '2017-09-17 11:49:14'),
(104, 1172, '4', 0.6075, 11, 1, '2017-09-17 11:49:14'),
(104, 1194, '1', 0.75, 14, 1, '2017-09-17 11:49:14'),
(104, 1218, '0', -0.0075, 20, 0, '2017-09-17 11:49:14'),
(104, 1197, '0', -0.00520833, 24, 0, '2017-09-17 11:49:15'),
(104, 1190, '4', 0.75, 14, 1, '2017-09-17 11:49:15'),
(104, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:49:15'),
(104, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:49:15'),
(104, 1276, '0', 0, 17, -1, '2017-09-17 11:49:15'),
(104, 1292, '1', 0.403333, 19, 1, '2017-09-17 11:49:15'),
(104, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:49:15'),
(104, 1297, '3', 1.08, 24, 1, '2017-09-17 11:49:15'),
(104, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:49:15'),
(104, 1170, '2', 0.520833, 14, 1, '2017-09-17 11:49:15'),
(104, 1175, '0', -0.00292969, 32, 0, '2017-09-17 11:49:15'),
(104, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:49:15'),
(104, 1189, '3', 0.55102, 16, 1, '2017-09-17 11:49:15'),
(104, 1171, '4', 0.9075, 9, 1, '2017-09-17 11:49:16'),
(104, 1208, '0', -0.0012, 50, 0, '2017-09-17 11:49:16'),
(104, 1219, '3', 0, 22, 1, '2017-09-17 11:49:16'),
(104, 1200, '0', -0.520833, 22, 0, '2017-09-17 11:49:16'),
(104, 1287, '3', 0.1875, 36, 1, '2017-09-17 11:49:16'),
(104, 1281, '0', -0.00333333, 30, 0, '2017-09-17 11:49:16'),
(104, 1202, '3', -0.0833333, 30, 0, '2017-09-17 11:49:16'),
(104, 1294, '3', 0.520833, 14, 1, '2017-09-17 11:49:16'),
(104, 1191, '3', 0.55102, 16, 1, '2017-09-17 11:49:16'),
(104, 1220, '0', -0.00382653, 28, 0, '2017-09-17 11:49:16'),
(104, 1257, '0', -0.00130208, 48, 0, '2017-09-17 11:49:16'),
(104, 1268, '0', -0.00130208, 48, 0, '2017-09-17 11:49:16'),
(104, 1199, '3', 0.105469, 26, 1, '2017-09-17 11:49:16'),
(104, 1293, '1', -0.255208, 17, 0, '2017-09-17 11:49:17'),
(104, 1282, '0', -0.00333333, 30, 0, '2017-09-17 11:49:17'),
(104, 1265, '0', -0.00110947, 52, 0, '2017-09-17 11:49:17'),
(104, 1284, '0', -0.0075, 20, 0, '2017-09-17 11:49:17'),
(104, 1217, '2', -0.1875, 15, 0, '2017-09-17 11:49:17'),
(104, 1176, '3', -0.55102, 16, 0, '2017-09-17 11:49:17'),
(104, 1206, '3', -0.653333, 32, 0, '2017-09-17 11:49:17'),
(104, 171, '1', 0.0075, 76, 1, '2017-09-17 11:49:17'),
(104, 1299, '0', -0.000688705, 66, 0, '2017-09-17 11:49:17'),
(104, 1296, '4', 0, 24, 0, '2017-09-17 11:49:17'),
(104, 1250, '0', -0.000833333, 60, 0, '2017-09-17 11:49:17'),
(104, 2606, '1', 2.04187, 7, 1, '2017-09-17 11:49:17'),
(104, 2605, '3', -1.2675, 14, 0, '2017-09-17 11:49:17'),
(104, 2609, '3', -1.17188, 15, 0, '2017-09-17 11:49:18'),
(104, 2608, '3', 1.47, 12, 1, '2017-09-17 11:49:18'),
(104, 2603, '0', -0.001875, 40, 0, '2017-09-17 11:49:18'),
(104, 2611, '3', 1.80187, 9, 1, '2017-09-17 11:49:18'),
(104, 2607, '0', 0, 32, -1, '2017-09-17 11:49:18'),
(104, 2601, '2', 1.6875, 10, 1, '2017-09-17 11:49:18'),
(104, 2614, '4', 2.04187, 7, 1, '2017-09-17 11:49:18'),
(104, 2615, '4', -0.9075, 18, 0, '2017-09-17 11:49:18'),
(104, 2602, '4', -0.421875, 25, 0, '2017-09-17 11:49:18'),
(104, 2612, '0', -0.001875, 40, 0, '2017-09-17 11:49:18'),
(104, 2610, '2', -1.92, 8, 0, '2017-09-17 11:49:18'),
(104, 2604, '0', -0.001875, 40, 0, '2017-09-17 11:49:18'),
(104, 2613, '4', 0.9075, 18, 1, '2017-09-17 11:49:18'),
(104, 2622, '2', 1.92, 12, 1, '2017-09-17 11:49:18'),
(104, 2624, '0', 0, 19, -1, '2017-09-17 11:49:18'),
(104, 2617, '1', 2.1675, 9, 1, '2017-09-17 11:49:19'),
(104, 2630, '0', -0.000833333, 60, 0, '2017-09-17 11:49:19'),
(104, 2619, '0', 0, 18, -1, '2017-09-17 11:49:19'),
(104, 2635, '4', -2.00083, 11, 0, '2017-09-17 11:49:19'),
(104, 2625, '1', -1.33333, 20, 0, '2017-09-17 11:49:19'),
(104, 2633, '3', 1.76333, 14, 1, '2017-09-17 11:49:19'),
(104, 2618, '3', 1.84083, 13, 1, '2017-09-17 11:49:19'),
(104, 2626, '2', -2.1675, 9, 0, '2017-09-17 11:49:19'),
(104, 2632, '4', -1.20333, 22, 0, '2017-09-17 11:49:19'),
(104, 2616, '1', -0.12, 48, 0, '2017-09-17 11:49:19'),
(104, 2631, '1', -0.403333, 38, 0, '2017-09-17 11:49:19'),
(104, 2628, '2', -1.61333, 16, 0, '2017-09-17 11:49:19'),
(104, 2623, '3', -1.47, 18, 0, '2017-09-17 11:49:19'),
(104, 2620, '4', 0.163333, 46, 1, '2017-09-17 11:49:19'),
(104, 2634, '1', -1.76333, 14, 0, '2017-09-17 11:49:19'),
(104, 2627, '0', -0.000833333, 60, 0, '2017-09-17 11:49:20'),
(104, 2629, '4', -0.3675, 39, 0, '2017-09-17 11:49:20'),
(104, 2621, '3', 1.76333, 14, 1, '2017-09-17 11:49:20'),
(104, 2847, '4', 0.213333, 44, 1, '2017-09-17 11:49:20'),
(104, 2841, '3', 2.25333, 8, 1, '2017-09-17 11:49:20'),
(104, 2729, '0', -0.000833333, 60, 0, '2017-09-17 11:49:20'),
(104, 2816, '1', -1.61333, 16, 0, '2017-09-17 11:49:20'),
(104, 2735, '4', -1.40083, 19, 0, '2017-09-17 11:49:20'),
(104, 2852, '3', -0.0833333, 50, 0, '2017-09-17 11:49:20'),
(104, 2731, '0', -0.000833333, 60, 0, '2017-09-17 11:49:20'),
(104, 2734, '1', -0.520833, 35, 0, '2017-09-17 11:49:20');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(104, 2825, '2', -0.403333, 38, 0, '2017-09-17 11:49:20'),
(104, 2728, '4', 0.27, 42, 1, '2017-09-17 11:49:20'),
(104, 2838, '3', 1.92, 12, 1, '2017-09-17 11:49:20'),
(104, 2833, '0', -0.000833333, 60, 0, '2017-09-17 11:49:20'),
(104, 2820, '4', -0.27, 42, 0, '2017-09-17 11:49:21'),
(104, 2835, '2', -0.12, 48, 0, '2017-09-17 11:49:21'),
(104, 2733, '2', 0.48, 36, 1, '2017-09-17 11:49:21'),
(104, 2732, '4', 1.33333, 20, 1, '2017-09-17 11:49:21'),
(104, 2819, '2', 0.963333, 26, 1, '2017-09-17 11:49:21'),
(104, 2823, '1', -0.9075, 27, 0, '2017-09-17 11:49:21'),
(104, 2730, '4', 0.700833, 31, 1, '2017-09-17 11:49:21'),
(104, 611, '2', -1.1532, 19, 0, '2017-09-17 11:49:21'),
(104, 1301, '4', -0.0593262, 55, 0, '2017-09-17 11:49:21'),
(104, 605, '2', 0.1875, 45, 1, '2017-09-17 11:49:21'),
(104, 1089, '4', -1.84083, 13, 0, '2017-09-17 11:49:22'),
(104, 1311, '4', 2.0172, 9, 1, '2017-09-17 11:49:22'),
(104, 606, '4', -1.47, 18, 0, '2017-09-17 11:49:22'),
(104, 596, '2', -0.925926, 24, 0, '2017-09-17 11:49:22'),
(104, 601, '4', 1.93718, 11, 1, '2017-09-17 11:49:22'),
(104, 615, '2', 1.54083, 17, 1, '2017-09-17 11:49:22'),
(104, 1308, '4', -1.54083, 17, 0, '2017-09-17 11:49:22'),
(104, 852, '4', 1.54083, 17, 1, '2017-09-17 11:49:22'),
(104, 1124, '1', -0.3675, 39, 0, '2017-09-17 11:49:22'),
(104, 593, '1', 0.0833333, 50, 1, '2017-09-17 11:49:22'),
(104, 599, '1', 0.1875, 45, 1, '2017-09-17 11:49:22'),
(104, 595, '2', -0.693417, 27, 0, '2017-09-17 11:49:22'),
(104, 1318, '2', 0.46301, 34, 1, '2017-09-17 11:49:22'),
(104, 853, '4', -1.14083, 23, 0, '2017-09-17 11:49:23'),
(104, 622, '1', -0.800833, 29, 0, '2017-09-17 11:49:23'),
(104, 602, '1', -0.264404, 45, 0, '2017-09-17 11:49:23'),
(104, 614, '2', -2.08333, 9, 0, '2017-09-17 11:49:23'),
(104, 609, '1', -1.92, 12, 0, '2017-09-17 11:49:23'),
(104, 603, '4', -1.0662, 21, 0, '2017-09-17 11:49:23'),
(104, 850, '2', -0.300833, 41, 0, '2017-09-17 11:49:23'),
(104, 403, '4', 1.14083, 23, 1, '2017-09-17 11:49:23'),
(104, 1310, '3', -1.77515, 12, 0, '2017-09-17 11:49:23'),
(104, 598, '2', -1.02083, 25, 0, '2017-09-17 11:49:23'),
(104, 619, '0', -0.000833333, 60, 0, '2017-09-17 11:49:23'),
(104, 607, '0', 0, 34, -1, '2017-09-17 11:49:23'),
(104, 594, '3', 1.92, 10, 1, '2017-09-17 11:49:23'),
(104, 1303, '1', 0.800833, 29, 1, '2017-09-17 11:49:23'),
(104, 996, '4', -1.7328, 12, 0, '2017-09-17 11:49:24'),
(104, 597, '4', -1.26029, 19, 0, '2017-09-17 11:49:24'),
(104, 613, '4', -1.2675, 21, 0, '2017-09-17 11:49:24'),
(104, 490, '2', 0.333333, 24, 1, '2017-09-17 11:49:24'),
(104, 465, '0', -0.00333333, 30, 0, '2017-09-17 11:49:24'),
(104, 489, '0', -0.001875, 40, 0, '2017-09-17 11:49:24'),
(104, 726, '1', 1.03806, 14, 1, '2017-09-17 11:49:24'),
(104, 509, '3', -0.835648, 17, 0, '2017-09-17 11:49:24'),
(104, 487, '4', 0.151875, 31, 1, '2017-09-17 11:49:24'),
(104, 481, '1', 0.12, 32, 1, '2017-09-17 11:49:24'),
(104, 718, '1', 1.33333, 10, 1, '2017-09-17 11:49:24'),
(104, 486, '1', 1.6875, 9, 1, '2017-09-17 11:49:24'),
(104, 719, '0', -0.00231481, 36, 0, '2017-09-17 11:49:24'),
(104, 494, '0', 0, 20, -1, '2017-09-17 11:49:24'),
(104, 722, '3', 1.02083, 15, 1, '2017-09-17 11:49:24'),
(104, 732, '3', -1.02083, 15, 0, '2017-09-17 11:49:25'),
(104, 724, '0', -0.00333333, 30, 0, '2017-09-17 11:49:25'),
(104, 737, '0', 0, 19, -1, '2017-09-17 11:49:25'),
(104, 720, '1', -0.531856, 22, 0, '2017-09-17 11:49:25'),
(104, 727, '2', 1.56481, 10, 1, '2017-09-17 11:49:25'),
(104, 485, '2', -0.239603, 33, 0, '2017-09-17 11:49:25'),
(104, 464, '1', -1.28254, 9, 0, '2017-09-17 11:49:25'),
(104, 730, '0', -0.00231481, 36, 0, '2017-09-17 11:49:25'),
(104, 723, '1', 1.44676, 11, 1, '2017-09-17 11:49:25'),
(104, 731, '0', -0.00231481, 36, 0, '2017-09-17 11:49:25'),
(104, 729, '0', 0, 17, -1, '2017-09-17 11:49:25'),
(104, 472, '0', -0.001875, 40, 0, '2017-09-17 11:49:25'),
(104, 736, '3', -0.127163, 27, 0, '2017-09-17 11:49:25'),
(104, 466, '0', -0.00333333, 30, 0, '2017-09-17 11:49:25'),
(104, 498, '2', 0.091875, 33, 1, '2017-09-17 11:49:25'),
(104, 734, '4', -0.00333333, 29, 0, '2017-09-17 11:49:26'),
(104, 721, '1', 0.046875, 35, 1, '2017-09-17 11:49:26'),
(104, 735, '0', -0.00333333, 30, 0, '2017-09-17 11:49:26'),
(104, 728, '0', -0.00207756, 38, 0, '2017-09-17 11:49:26'),
(104, 725, '1', -0.16609, 26, 0, '2017-09-17 11:49:26'),
(104, 733, '1', -0.001875, 39, 0, '2017-09-17 11:49:26'),
(104, 752, '4', -0.277883, 32, 0, '2017-09-17 11:49:26'),
(104, 747, '2', 0.0208333, 33, 1, '2017-09-17 11:49:26'),
(104, 757, '3', -0.00567108, 44, 0, '2017-09-17 11:49:26'),
(104, 477, '3', -0.511815, 27, 0, '2017-09-17 11:49:26'),
(104, 475, '3', -0.0694707, 39, 0, '2017-09-17 11:49:26'),
(104, 739, '1', 1.33333, 12, 1, '2017-09-17 11:49:26'),
(104, 748, '4', -0.016875, 37, 0, '2017-09-17 11:49:26'),
(104, 482, '1', -1.53061, 12, 0, '2017-09-17 11:49:26'),
(104, 483, '2', 1.94093, 9, 1, '2017-09-17 11:49:27'),
(104, 756, '3', -0.0208333, 44, 0, '2017-09-17 11:49:27'),
(104, 754, '1', -0.137755, 33, 0, '2017-09-17 11:49:27'),
(104, 745, '0', -0.001875, 40, 0, '2017-09-17 11:49:27'),
(104, 750, '1', -0.00141777, 45, 0, '2017-09-17 11:49:27'),
(104, 741, '3', -0.101801, 31, 0, '2017-09-17 11:49:27'),
(104, 499, '1', 0.101801, 31, 1, '2017-09-17 11:49:27'),
(104, 742, '1', 1.47, 12, 1, '2017-09-17 11:49:27'),
(104, 478, '2', -1.5552, 14, 0, '2017-09-17 11:49:27'),
(104, 480, '0', -0.001875, 40, 0, '2017-09-17 11:49:27'),
(104, 740, '3', -0.0578704, 31, 0, '2017-09-17 11:49:28'),
(104, 476, '3', 0.75, 20, 1, '2017-09-17 11:49:28'),
(104, 738, '3', -1.25606, 12, 0, '2017-09-17 11:49:28'),
(104, 751, '1', -0.559401, 25, 0, '2017-09-17 11:49:28'),
(104, 474, '3', -0.991875, 17, 0, '2017-09-17 11:49:28'),
(104, 744, '3', 1.92, 8, 1, '2017-09-17 11:49:28'),
(104, 753, '1', -2.20408, 6, 0, '2017-09-17 11:49:28'),
(104, 1586, '0', -1.19234, 18, 0, '2017-09-17 11:49:28'),
(104, 1591, '0', -0.124486, 44, 0, '2017-09-17 11:49:28'),
(104, 1597, '0', 0, 26, -1, '2017-09-17 11:49:28'),
(104, 1559, '2', -1.11153, 18, 0, '2017-09-17 11:49:28'),
(104, 1594, '2', -0.630208, 26, 0, '2017-09-17 11:49:28'),
(104, 1566, '3', 0.362949, 30, 1, '2017-09-17 11:49:28'),
(104, 1575, '3', -0.403333, 38, 0, '2017-09-17 11:49:28'),
(104, 1582, '2', 1.33333, 14, 1, '2017-09-17 11:49:29'),
(104, 1595, '2', -1.2675, 21, 0, '2017-09-17 11:49:29'),
(104, 1553, '4', 1.19234, 17, 1, '2017-09-17 11:49:29'),
(104, 1593, '1', 0.00619835, 42, 1, '2017-09-17 11:49:29'),
(104, 1592, '3', -0.853333, 28, 0, '2017-09-17 11:49:29'),
(104, 3034, '0', -0.00382653, 28, 0, '2017-09-17 11:49:29'),
(104, 1616, '0', 0, 15, -1, '2017-09-17 11:49:29'),
(104, 1596, '3', -0.1875, 39, 0, '2017-09-17 11:49:29'),
(104, 1571, '3', 2.24667, 7, 1, '2017-09-17 11:49:29'),
(104, 1574, '1', 1.6081, 15, 1, '2017-09-17 11:49:29'),
(104, 1563, '1', -1.13609, 20, 0, '2017-09-17 11:49:29'),
(104, 1590, '1', -0.646684, 30, 0, '2017-09-17 11:49:29'),
(104, 1578, '1', 0.816635, 22, 1, '2017-09-17 11:49:29'),
(104, 1589, '0', 0, 37, -1, '2017-09-17 11:49:29'),
(104, 1600, '1', -0.00998521, 49, 0, '2017-09-17 11:49:30'),
(104, 1609, '2', -1.17188, 18, 0, '2017-09-17 11:49:30'),
(104, 1606, '2', 1.14083, 23, 1, '2017-09-17 11:49:30'),
(104, 1610, '2', -0.1728, 38, 0, '2017-09-17 11:49:30'),
(104, 1599, '1', 1.50521, 14, 1, '2017-09-17 11:49:30'),
(104, 1615, '3', 1.03092, 24, 1, '2017-09-17 11:49:30'),
(104, 1604, '2', 1.02083, 20, 1, '2017-09-17 11:49:30'),
(104, 1611, '4', 0.816635, 22, 1, '2017-09-17 11:49:30'),
(104, 1598, '1', 1.9571, 10, 1, '2017-09-17 11:49:30'),
(104, 1608, '1', -0.400518, 33, 0, '2017-09-17 11:49:30'),
(104, 1603, '2', 1.9571, 10, 1, '2017-09-17 11:49:30'),
(104, 1602, '1', 1.08, 24, 1, '2017-09-17 11:49:30'),
(104, 1612, '4', 1.9571, 10, 1, '2017-09-17 11:49:30'),
(104, 1605, '3', 2.4, 12, 1, '2017-09-17 11:49:30'),
(104, 1613, '1', -1.65, 27, 0, '2017-09-17 11:49:30'),
(104, 1617, '3', -1.43478, 24, 0, '2017-09-17 11:49:31'),
(104, 1614, '3', -1.94444, 19, 0, '2017-09-17 11:49:31'),
(104, 1601, '2', 1.6081, 15, 1, '2017-09-17 11:49:31'),
(104, 1607, '1', 0.802616, 28, 1, '2017-09-17 11:49:31'),
(104, 1645, '1', 1.96875, 22, 1, '2017-09-17 11:49:31'),
(104, 1620, '1', 0, 48, 1, '2017-09-17 11:49:31'),
(104, 1625, '1', 1.9375, 17, 1, '2017-09-17 11:49:31'),
(104, 1622, '0', -0.0535714, 56, 0, '2017-09-17 11:49:31'),
(104, 1654, '4', 1.75, 20, 1, '2017-09-17 11:49:31'),
(104, 1656, '2', 0.8125, 35, 1, '2017-09-17 11:49:31'),
(104, 1631, '0', -0.0576923, 52, 0, '2017-09-17 11:49:31'),
(104, 1640, '2', -2.4, 12, 0, '2017-09-17 11:49:31'),
(104, 1636, '4', 0.777778, 40, 1, '2017-09-17 11:49:31'),
(104, 1630, '4', 2.47826, 8, 1, '2017-09-17 11:49:31'),
(104, 1619, '2', -2.53846, 8, 0, '2017-09-17 11:49:31'),
(104, 1621, '2', -2.01923, 17, 0, '2017-09-17 11:49:32'),
(104, 1651, '3', 1.96154, 18, 1, '2017-09-17 11:49:32'),
(104, 1623, '3', 2.15, 17, 1, '2017-09-17 11:49:32'),
(104, 1624, '3', -2.625, 7, 0, '2017-09-17 11:49:32'),
(104, 1618, '1', -0.06, 49, 0, '2017-09-17 11:49:32'),
(104, 1628, '1', 1.69565, 20, 1, '2017-09-17 11:49:32'),
(104, 1629, '1', -1.36957, 25, 0, '2017-09-17 11:49:32'),
(104, 1627, '3', 2.45455, 8, 1, '2017-09-17 11:49:32'),
(104, 1626, '4', 1.55556, 26, 1, '2017-09-17 11:49:32'),
(104, 1684, '2', 1.36364, 24, 1, '2017-09-17 11:49:32'),
(104, 1669, '2', -2.45246, 12, 0, '2017-09-17 11:49:32'),
(105, 1172, '3', -0.03, 18, 0, '2017-09-17 11:49:33'),
(105, 1194, '1', 0.0153061, 26, 1, '2017-09-17 11:49:33'),
(105, 1203, '3', 0.12, 24, 1, '2017-09-17 11:49:33'),
(105, 1196, '0', -0.00520833, 24, 0, '2017-09-17 11:49:33'),
(105, 1184, '0', -0.00520833, 24, 0, '2017-09-17 11:49:33'),
(105, 1177, '2', 0.892562, 10, 1, '2017-09-17 11:49:33'),
(105, 1261, '2', -0.75, 19, 0, '2017-09-17 11:49:33'),
(105, 1174, '3', 1.13609, 10, 1, '2017-09-17 11:49:33'),
(105, 1170, '2', 0.520833, 14, 1, '2017-09-17 11:49:34'),
(105, 1216, '4', 1.33333, 8, 1, '2017-09-17 11:49:34'),
(105, 1183, '2', 0.892562, 10, 1, '2017-09-17 11:49:34'),
(105, 1227, '1', -1.02083, 10, 0, '2017-09-17 11:49:34'),
(105, 1195, '1', -1.2675, 7, 0, '2017-09-17 11:49:34'),
(105, 1190, '4', 1.53061, 8, 1, '2017-09-17 11:49:34'),
(105, 1292, '0', 0, 11, -1, '2017-09-17 11:49:34'),
(105, 1185, '3', -0.646684, 15, 0, '2017-09-17 11:49:34'),
(105, 1291, '1', -0.75, 10, 0, '2017-09-17 11:49:34'),
(105, 1218, '2', -0.48, 12, 0, '2017-09-17 11:49:34'),
(105, 1263, '4', -0.3675, 26, 0, '2017-09-17 11:49:34'),
(105, 1169, '4', -0.255208, 17, 0, '2017-09-17 11:49:34'),
(105, 1276, '2', -0.949219, 14, 0, '2017-09-17 11:49:34'),
(105, 1210, '1', 0.255208, 17, 1, '2017-09-17 11:49:35'),
(105, 1173, '3', -0.0075, 19, 0, '2017-09-17 11:49:35'),
(105, 1186, '3', 1.53061, 8, 1, '2017-09-17 11:49:35'),
(105, 1197, '0', -0.00520833, 24, 0, '2017-09-17 11:49:35'),
(105, 1198, '3', -0.75, 10, 0, '2017-09-17 11:49:35'),
(105, 1270, '3', -0.567108, 26, 0, '2017-09-17 11:49:35'),
(105, 1297, '2', -0.800833, 29, 0, '2017-09-17 11:49:35'),
(105, 1294, '3', 1.02083, 10, 1, '2017-09-17 11:49:35'),
(105, 1265, '3', -2.45081, 5, 0, '2017-09-17 11:49:35'),
(105, 1269, '3', -1.17188, 18, 0, '2017-09-17 11:49:35'),
(105, 1217, '0', -0.0075, 20, 0, '2017-09-17 11:49:35'),
(105, 1208, '2', -1.47, 15, 0, '2017-09-17 11:49:35'),
(105, 1175, '2', -1.17188, 12, 0, '2017-09-17 11:49:35'),
(105, 1293, '1', -1.02083, 10, 0, '2017-09-17 11:49:35'),
(105, 1191, '3', 1.85204, 6, 1, '2017-09-17 11:49:36'),
(105, 1202, '3', -0.75, 18, 0, '2017-09-17 11:49:36'),
(105, 1199, '3', 0.421875, 20, 1, '2017-09-17 11:49:36'),
(105, 1287, '2', -1.78255, 11, 0, '2017-09-17 11:49:36'),
(105, 1200, '2', -0.1875, 27, 0, '2017-09-17 11:49:36'),
(105, 1220, '2', 1.53061, 8, 1, '2017-09-17 11:49:36'),
(105, 1171, '2', -0.0075, 19, 0, '2017-09-17 11:49:36'),
(105, 1282, '2', -1.76333, 7, 0, '2017-09-17 11:49:36'),
(105, 1219, '4', -0.75, 11, 0, '2017-09-17 11:49:36'),
(105, 1189, '1', -2.02423, 5, 0, '2017-09-17 11:49:36'),
(105, 2602, '1', -2.43, 4, 0, '2017-09-17 11:49:36'),
(105, 2606, '1', 2.29688, 5, 1, '2017-09-17 11:49:36'),
(105, 2605, '0', 0, 20, -1, '2017-09-17 11:49:36'),
(105, 2604, '2', 2.1675, 6, 1, '2017-09-17 11:49:36'),
(105, 2601, '3', -1.36688, 13, 0, '2017-09-17 11:49:36'),
(105, 2613, '2', -0.676875, 21, 0, '2017-09-17 11:49:37'),
(105, 2607, '3', -2.1675, 6, 0, '2017-09-17 11:49:37'),
(105, 2611, '3', 1.92, 8, 1, '2017-09-17 11:49:37'),
(105, 2612, '1', 1.6875, 10, 1, '2017-09-17 11:49:37'),
(105, 2608, '3', 1.2675, 14, 1, '2017-09-17 11:49:37'),
(105, 2614, '4', 2.04187, 7, 1, '2017-09-17 11:49:37'),
(105, 2609, '3', -1.36688, 13, 0, '2017-09-17 11:49:37'),
(105, 2610, '3', 1.80187, 9, 1, '2017-09-17 11:49:37'),
(105, 2603, '4', -2.29688, 5, 0, '2017-09-17 11:49:37'),
(105, 2615, '3', -0.091875, 33, 0, '2017-09-17 11:49:37'),
(105, 2622, '2', 2.1675, 9, 1, '2017-09-17 11:49:37'),
(105, 2627, '2', 1.14083, 23, 1, '2017-09-17 11:49:37'),
(105, 2617, '1', 2.1675, 9, 1, '2017-09-17 11:49:37'),
(105, 2630, '2', 1.2675, 21, 1, '2017-09-17 11:49:38'),
(105, 2616, '4', 1.92, 12, 1, '2017-09-17 11:49:38'),
(105, 2631, '2', -2.7, 6, 0, '2017-09-17 11:49:38'),
(105, 2626, '3', 1.61333, 16, 1, '2017-09-17 11:49:38'),
(105, 2621, '4', -2.05, 19, 0, '2017-09-17 11:49:38'),
(105, 2625, '3', 0.520833, 35, 1, '2017-09-17 11:49:38'),
(105, 2624, '2', 2.25333, 8, 1, '2017-09-17 11:49:38'),
(105, 2628, '3', -2.55, 9, 0, '2017-09-17 11:49:38'),
(105, 2629, '2', -2.43, 6, 0, '2017-09-17 11:49:38'),
(105, 2619, '3', 0.9075, 27, 1, '2017-09-17 11:49:38'),
(105, 2632, '3', 2.08333, 10, 1, '2017-09-17 11:49:38'),
(105, 2635, '3', -2.08333, 10, 0, '2017-09-17 11:49:38'),
(105, 2623, '2', 2.1675, 9, 1, '2017-09-17 11:49:38'),
(105, 2634, '2', -1.92, 12, 0, '2017-09-17 11:49:39'),
(105, 2633, '3', 1.84083, 13, 1, '2017-09-17 11:49:39'),
(105, 2618, '3', 2.25333, 8, 1, '2017-09-17 11:49:39'),
(105, 2620, '4', 2.7, 6, 1, '2017-09-17 11:49:39'),
(105, 2819, '2', 2.35, 13, 1, '2017-09-17 11:49:39'),
(105, 2833, '2', -2.4, 12, 0, '2017-09-17 11:49:39'),
(105, 2823, '2', -2, 20, 0, '2017-09-17 11:49:39'),
(105, 2852, '3', -1.65, 27, 0, '2017-09-17 11:49:39'),
(105, 2728, '3', -2, 20, 0, '2017-09-17 11:49:39'),
(105, 2729, '2', 2.1675, 9, 1, '2017-09-17 11:49:39'),
(105, 2820, '3', -2.4, 12, 0, '2017-09-17 11:49:39'),
(105, 2816, '1', -0.853333, 28, 0, '2017-09-17 11:49:39'),
(105, 2825, '3', 2.00083, 11, 1, '2017-09-17 11:49:39'),
(105, 2734, '3', 2.43, 6, 1, '2017-09-17 11:49:40'),
(105, 2735, '2', -2.2, 16, 0, '2017-09-17 11:49:40'),
(105, 2730, '4', 2.1675, 9, 1, '2017-09-17 11:49:40'),
(105, 2732, '4', 2.2, 16, 1, '2017-09-17 11:49:40'),
(105, 2845, '2', -2.7, 6, 0, '2017-09-17 11:49:40'),
(105, 2841, '3', 2.75, 5, 1, '2017-09-17 11:49:40'),
(105, 2838, '3', 2.75, 5, 1, '2017-09-17 11:49:40'),
(105, 2835, '2', -2.55, 9, 0, '2017-09-17 11:49:40'),
(105, 2731, '2', -0.55, 49, 0, '2017-09-17 11:49:40'),
(105, 2847, '1', -2.1, 18, 0, '2017-09-17 11:49:40'),
(105, 2733, '4', -2.7, 6, 0, '2017-09-17 11:49:40'),
(105, 2868, '2', 2.52083, 5, 1, '2017-09-17 11:49:40'),
(105, 2859, '3', -2.75, 5, 0, '2017-09-17 11:49:40'),
(105, 2864, '2', 2.43, 6, 1, '2017-09-17 11:49:41'),
(105, 2882, '3', -2.8, 4, 0, '2017-09-17 11:49:41'),
(105, 2877, '4', -2.00083, 11, 0, '2017-09-17 11:49:41'),
(105, 2885, '1', -1.92, 12, 0, '2017-09-17 11:49:41'),
(105, 2871, '1', -1.47, 18, 0, '2017-09-17 11:49:41'),
(105, 2866, '1', -2.00083, 11, 0, '2017-09-17 11:49:41'),
(105, 2874, '1', 1.14083, 23, 1, '2017-09-17 11:49:41'),
(105, 2865, '2', -1.84083, 13, 0, '2017-09-17 11:49:41'),
(105, 2889, '2', 1.08, 24, 1, '2017-09-17 11:49:41'),
(105, 2870, '3', 2.43, 6, 1, '2017-09-17 11:49:41'),
(105, 2855, '3', -2.34083, 7, 0, '2017-09-17 11:49:41'),
(105, 2883, '3', 2.00083, 11, 1, '2017-09-17 11:49:41'),
(105, 2879, '2', 2.1675, 9, 1, '2017-09-17 11:49:41'),
(105, 2886, '3', -1.92, 12, 0, '2017-09-17 11:49:42'),
(105, 2881, '3', -2.61333, 4, 0, '2017-09-17 11:49:42'),
(105, 2888, '1', -1.92, 12, 0, '2017-09-17 11:49:42'),
(105, 2862, '2', -1.40083, 19, 0, '2017-09-17 11:49:42'),
(105, 2884, '4', -2.25333, 8, 0, '2017-09-17 11:49:42'),
(105, 2861, '2', 1.76333, 14, 1, '2017-09-17 11:49:42'),
(105, 2887, '2', -2.1675, 9, 0, '2017-09-17 11:49:42'),
(105, 2894, '3', -2.1675, 9, 0, '2017-09-17 11:49:42'),
(105, 2901, '3', -2.1675, 9, 0, '2017-09-17 11:49:42'),
(105, 2909, '1', -1.2675, 21, 0, '2017-09-17 11:49:42'),
(105, 366, '4', 1.2675, 7, 1, '2017-09-17 11:49:42'),
(105, 370, '4', -0.9075, 9, 0, '2017-09-17 11:49:42'),
(105, 1112, '1', -1.47, 6, 0, '2017-09-17 11:49:42'),
(105, 2414, '4', -1.53758, 25, 0, '2017-09-17 11:49:42'),
(105, 1114, '1', 0.12, 16, 1, '2017-09-17 11:49:42'),
(105, 2420, '3', 2.52083, 8, 1, '2017-09-17 11:49:43'),
(105, 390, '3', 0, 20, 0, '2017-09-17 11:49:43'),
(105, 1130, '3', -0.27, 14, 0, '2017-09-17 11:49:43'),
(105, 1136, '1', -0.12, 16, 0, '2017-09-17 11:49:43'),
(105, 388, '2', 0.6075, 11, 1, '2017-09-17 11:49:43'),
(105, 1104, '3', 1.6875, 5, 1, '2017-09-17 11:49:43'),
(105, 368, '3', 0.9075, 9, 1, '2017-09-17 11:49:43'),
(105, 2427, '2', -1.76333, 28, 0, '2017-09-17 11:49:43'),
(105, 376, '1', -0.1875, 15, 0, '2017-09-17 11:49:43'),
(105, 384, '2', -0.9075, 9, 0, '2017-09-17 11:49:43'),
(105, 1109, '2', -0.27, 14, 0, '2017-09-17 11:49:43'),
(105, 2432, '1', -1.21488, 40, 0, '2017-09-17 11:49:43'),
(105, 1140, '2', -0.03, 18, 0, '2017-09-17 11:49:43'),
(105, 397, '2', -0.1875, 15, 0, '2017-09-17 11:49:43'),
(105, 396, '0', -0.0075, 20, 0, '2017-09-17 11:49:43'),
(105, 2429, '2', -2.62668, 9, 0, '2017-09-17 11:49:44'),
(105, 2416, '3', 2.47934, 8, 1, '2017-09-17 11:49:44'),
(105, 1122, '4', 1.92, 4, 1, '2017-09-17 11:49:44'),
(105, 1117, '2', 1.92, 4, 1, '2017-09-17 11:49:44'),
(105, 377, '0', -0.0075, 20, 0, '2017-09-17 11:49:44'),
(105, 378, '3', -0.6075, 11, 0, '2017-09-17 11:49:44'),
(105, 387, '1', -0.48, 12, 0, '2017-09-17 11:49:44'),
(105, 392, '2', -0.27, 14, 0, '2017-09-17 11:49:44'),
(105, 389, '3', -0.48, 12, 0, '2017-09-17 11:49:44'),
(105, 2403, '2', 2.67593, 5, 1, '2017-09-17 11:49:44'),
(105, 401, '2', -0.3675, 13, 0, '2017-09-17 11:49:44'),
(105, 1137, '2', 1.2675, 7, 1, '2017-09-17 11:49:44'),
(105, 373, '2', -1.47, 6, 0, '2017-09-17 11:49:44'),
(105, 393, '2', -1.08, 8, 0, '2017-09-17 11:49:45'),
(105, 367, '2', -0.0675, 17, 0, '2017-09-17 11:49:45'),
(105, 2410, '3', -1.90859, 17, 0, '2017-09-17 11:49:45'),
(105, 363, '1', -0.75, 10, 0, '2017-09-17 11:49:45'),
(105, 2406, '2', -2.35692, 10, 0, '2017-09-17 11:49:45'),
(105, 398, '3', -0.3675, 13, 0, '2017-09-17 11:49:45'),
(105, 364, '4', -1.08, 8, 0, '2017-09-17 11:49:45'),
(105, 2418, '4', -2.63672, 5, 0, '2017-09-17 11:49:45'),
(105, 380, '3', -1.47, 6, 0, '2017-09-17 11:49:45'),
(105, 1138, '3', -0.12, 16, 0, '2017-09-17 11:49:45'),
(105, 379, '3', 1.2675, 7, 1, '2017-09-17 11:49:45'),
(105, 2400, '3', 2.58673, 5, 1, '2017-09-17 11:49:45'),
(105, 1107, '3', -0.9075, 9, 0, '2017-09-17 11:49:45'),
(105, 365, '3', 1.47, 6, 1, '2017-09-17 11:49:46'),
(105, 1115, '2', -0.27, 14, 0, '2017-09-17 11:49:46'),
(105, 2419, '2', 2.52083, 10, 1, '2017-09-17 11:49:46'),
(105, 381, '1', 0.3675, 13, 1, '2017-09-17 11:49:46'),
(105, 382, '2', -0.75, 10, 0, '2017-09-17 11:49:46'),
(105, 375, '1', 1.6875, 5, 1, '2017-09-17 11:49:46'),
(105, 385, '3', -0.03, 18, 0, '2017-09-17 11:49:46'),
(105, 2408, '2', -2.3255, 11, 0, '2017-09-17 11:49:46'),
(105, 369, '1', -0.3675, 13, 0, '2017-09-17 11:49:46'),
(105, 386, '4', 0.6075, 11, 1, '2017-09-17 11:49:46'),
(105, 371, '2', -0.6075, 11, 0, '2017-09-17 11:49:46'),
(105, 1110, '2', 0.9075, 9, 1, '2017-09-17 11:49:46'),
(105, 1116, '4', 0.0675, 17, 1, '2017-09-17 11:49:47'),
(105, 1120, '2', -1.08, 8, 0, '2017-09-17 11:49:47'),
(105, 2411, '2', -2.8386, 3, 0, '2017-09-17 11:49:47'),
(105, 402, '2', -0.3675, 13, 0, '2017-09-17 11:49:47'),
(105, 2404, '1', 2.04726, 16, 1, '2017-09-17 11:49:47'),
(105, 2413, '2', -2.68277, 5, 0, '2017-09-17 11:49:47'),
(105, 2422, '3', -2.54956, 10, 0, '2017-09-17 11:49:47'),
(105, 6, '4', -0.75, 10, 0, '2017-09-17 11:49:47'),
(105, 7, '2', -1.92, 4, 0, '2017-09-17 11:49:47'),
(105, 12, '2', -0.9075, 9, 0, '2017-09-17 11:49:47'),
(105, 5, '3', 1.47, 6, 1, '2017-09-17 11:49:47'),
(105, 8, '2', 1.92, 4, 1, '2017-09-17 11:49:47'),
(105, 88, '3', -1.47, 6, 0, '2017-09-17 11:49:47'),
(105, 1, '3', -1.92, 4, 0, '2017-09-17 11:49:48'),
(105, 11, '1', 1.2675, 7, 1, '2017-09-17 11:49:48'),
(105, 17, '3', -1.2675, 7, 0, '2017-09-17 11:49:48'),
(105, 9, '4', -0.9075, 9, 0, '2017-09-17 11:49:48'),
(105, 16, '1', 0.48, 12, 1, '2017-09-17 11:49:48'),
(105, 10, '2', -1.47, 6, 0, '2017-09-17 11:49:48'),
(105, 4, '4', 1.47, 6, 1, '2017-09-17 11:49:48'),
(105, 19, '2', 0.27, 14, 1, '2017-09-17 11:49:48'),
(105, 14, '4', -1.2675, 7, 0, '2017-09-17 11:49:48'),
(105, 2, '2', -0.9075, 9, 0, '2017-09-17 11:49:48'),
(105, 3, '1', -0.9075, 9, 0, '2017-09-17 11:49:48'),
(105, 18, '4', 0.27, 14, 1, '2017-09-17 11:49:48'),
(105, 13, '1', 1.47, 6, 1, '2017-09-17 11:49:48'),
(105, 33, '3', 1.47, 6, 1, '2017-09-17 11:49:48'),
(105, 39, '3', -1.6875, 5, 0, '2017-09-17 11:49:48'),
(105, 32, '3', 1.6875, 5, 1, '2017-09-17 11:49:49'),
(105, 35, '3', -0.75, 10, 0, '2017-09-17 11:49:49'),
(105, 26, '1', -0.9075, 9, 0, '2017-09-17 11:49:49'),
(105, 29, '2', -1.08, 8, 0, '2017-09-17 11:49:49'),
(105, 34, '3', -1.47, 6, 0, '2017-09-17 11:49:49'),
(105, 36, '3', -0.6075, 11, 0, '2017-09-17 11:49:49'),
(105, 31, '2', -0.48, 12, 0, '2017-09-17 11:49:49'),
(105, 21, '1', -0.3675, 13, 0, '2017-09-17 11:49:49'),
(105, 37, '2', -0.27, 14, 0, '2017-09-17 11:49:49'),
(105, 38, '3', -0.9075, 9, 0, '2017-09-17 11:49:49'),
(105, 2274, '3', -2.08333, 7, 0, '2017-09-17 11:49:49'),
(105, 2286, '2', 2.22454, 5, 1, '2017-09-17 11:49:49'),
(105, 2277, '3', -1.47, 15, 0, '2017-09-17 11:49:49'),
(105, 2281, '2', -2.15643, 7, 0, '2017-09-17 11:49:50'),
(105, 2275, '2', -1.73677, 11, 0, '2017-09-17 11:49:50'),
(105, 1555, '2', -2.38327, 5, 0, '2017-09-17 11:49:50'),
(105, 2280, '2', -0.333333, 24, 0, '2017-09-17 11:49:50'),
(105, 2269, '2', -2.20408, 6, 0, '2017-09-17 11:49:50'),
(105, 1991, '3', -0.213333, 22, 0, '2017-09-17 11:49:50'),
(105, 1888, '3', -1.43787, 8, 0, '2017-09-17 11:49:50'),
(105, 716, '3', 1.77515, 6, 1, '2017-09-17 11:49:50'),
(105, 676, '4', -0.55102, 16, 0, '2017-09-17 11:49:50'),
(105, 690, '1', -0.75, 10, 0, '2017-09-17 11:49:50'),
(105, 713, '1', -0.998521, 11, 0, '2017-09-17 11:49:50'),
(105, 712, '1', 0.255208, 17, 1, '2017-09-17 11:49:50'),
(105, 2008, '2', -0.0133333, 28, 0, '2017-09-17 11:49:50'),
(105, 703, '1', -0.00520833, 23, 0, '2017-09-17 11:49:51'),
(105, 2033, '0', -0.00382653, 28, 0, '2017-09-17 11:49:51'),
(105, 663, '1', 2.02423, 5, 1, '2017-09-17 11:49:51'),
(105, 1996, '1', -1.33333, 10, 0, '2017-09-17 11:49:51'),
(105, 2011, '2', 0.213333, 22, 1, '2017-09-17 11:49:51'),
(105, 679, '0', -0.00520833, 24, 0, '2017-09-17 11:49:51'),
(105, 699, '2', -0.03, 18, 0, '2017-09-17 11:49:51'),
(105, 659, '2', -0.12, 16, 0, '2017-09-17 11:49:51'),
(105, 1985, '3', -1.98047, 6, 0, '2017-09-17 11:49:51'),
(105, 2031, '3', -1.61333, 8, 0, '2017-09-17 11:49:51'),
(105, 680, '1', -0.55102, 16, 0, '2017-09-17 11:49:51'),
(105, 2013, '2', 0.75, 15, 1, '2017-09-17 11:49:51'),
(105, 2010, '1', 1.92, 6, 1, '2017-09-17 11:49:52'),
(105, 658, '1', -1.2675, 7, 0, '2017-09-17 11:49:52'),
(105, 706, '2', -1.92, 6, 0, '2017-09-17 11:49:52'),
(105, 717, '3', -1.56481, 10, 0, '2017-09-17 11:49:52'),
(105, 1891, '2', -0.75, 15, 0, '2017-09-17 11:49:52'),
(105, 1906, '3', -2.25333, 4, 0, '2017-09-17 11:49:52'),
(106, 2432, '3', -0.777521, 54, 0, '2017-09-17 11:49:53'),
(106, 397, '0', -0.0075, 20, 0, '2017-09-17 11:49:53'),
(106, 1122, '4', 0.75, 10, 1, '2017-09-17 11:49:53'),
(106, 2408, '2', -1.6875, 23, 0, '2017-09-17 11:49:53'),
(106, 390, '0', -0.0075, 20, 0, '2017-09-17 11:49:53'),
(106, 388, '1', -0.0675, 17, 0, '2017-09-17 11:49:53'),
(106, 374, '0', -0.0075, 20, 0, '2017-09-17 11:49:53'),
(106, 2419, '2', 0.880208, 55, 1, '2017-09-17 11:49:53'),
(106, 1120, '2', -0.1875, 15, 0, '2017-09-17 11:49:53'),
(106, 379, '0', -0.0075, 20, 0, '2017-09-17 11:49:53'),
(106, 369, '0', -0.0075, 20, 0, '2017-09-17 11:49:53'),
(106, 392, '1', -0.1875, 15, 0, '2017-09-17 11:49:53'),
(106, 373, '2', -0.0075, 19, 0, '2017-09-17 11:49:53'),
(106, 378, '0', 0, 16, -1, '2017-09-17 11:49:53'),
(106, 385, '0', 0, 7, -1, '2017-09-17 11:49:54'),
(106, 2422, '3', -1.98047, 24, 0, '2017-09-17 11:49:54'),
(106, 400, '0', -0.0075, 20, 0, '2017-09-17 11:49:54'),
(106, 1137, '4', -0.0675, 17, 0, '2017-09-17 11:49:54'),
(106, 2406, '1', -1.95287, 17, 0, '2017-09-17 11:49:54'),
(106, 2404, '1', 1.63894, 24, 1, '2017-09-17 11:49:54'),
(106, 1138, '0', 0, 7, -1, '2017-09-17 11:49:54'),
(106, 2403, '2', 2.49037, 8, 1, '2017-09-17 11:49:54'),
(106, 2420, '3', 2.35189, 11, 1, '2017-09-17 11:49:54'),
(106, 389, '0', -0.0075, 20, 0, '2017-09-17 11:49:54'),
(106, 377, '0', -0.0075, 20, 0, '2017-09-17 11:49:54'),
(106, 380, '4', -0.03, 18, 0, '2017-09-17 11:49:54'),
(106, 386, '0', -0.0075, 20, 0, '2017-09-17 11:49:54'),
(106, 1139, '0', -0.0075, 20, 0, '2017-09-17 11:49:54'),
(106, 1107, '4', 0.9075, 9, 1, '2017-09-17 11:49:54'),
(106, 1130, '0', -0.0075, 20, 0, '2017-09-17 11:49:55'),
(106, 366, '4', 0.48, 12, 1, '2017-09-17 11:49:55'),
(106, 398, '3', -0.12, 16, 0, '2017-09-17 11:49:55'),
(106, 399, '0', -0.0075, 20, 0, '2017-09-17 11:49:55'),
(106, 1115, '1', 0.9075, 9, 1, '2017-09-17 11:49:55'),
(106, 1140, '1', 0.9075, 9, 1, '2017-09-17 11:49:55'),
(106, 372, '0', -0.0075, 20, 0, '2017-09-17 11:49:55'),
(106, 1110, '2', 1.2675, 7, 1, '2017-09-17 11:49:55'),
(106, 1133, '3', 0.27, 14, 1, '2017-09-17 11:49:55'),
(106, 365, '0', -0.0075, 20, 0, '2017-09-17 11:49:55'),
(106, 2413, '3', -2.50095, 8, 0, '2017-09-17 11:49:55'),
(106, 394, '4', -0.0675, 17, 0, '2017-09-17 11:49:55'),
(106, 1131, '0', -0.0075, 20, 0, '2017-09-17 11:49:55'),
(106, 401, '0', -0.0075, 20, 0, '2017-09-17 11:49:56'),
(106, 1116, '2', -0.0675, 17, 0, '2017-09-17 11:49:56'),
(106, 395, '0', -0.0075, 20, 0, '2017-09-17 11:49:56'),
(106, 368, '3', 0.6075, 11, 1, '2017-09-17 11:49:56'),
(106, 1114, '4', -0.6075, 11, 0, '2017-09-17 11:49:56'),
(106, 387, '0', -0.0075, 20, 0, '2017-09-17 11:49:56'),
(106, 370, '4', -0.6075, 11, 0, '2017-09-17 11:49:56'),
(106, 391, '2', 0.12, 16, 1, '2017-09-17 11:49:56'),
(106, 2411, '1', -0.12, 88, 0, '2017-09-17 11:49:56'),
(106, 2400, '3', 2.58673, 5, 1, '2017-09-17 11:49:56'),
(106, 375, '1', 0.6075, 11, 1, '2017-09-17 11:49:56'),
(106, 1121, '0', -0.0075, 20, 0, '2017-09-17 11:49:56'),
(106, 1112, '0', -0.0075, 20, 0, '2017-09-17 11:49:56'),
(106, 2431, '3', -1.27599, 32, 0, '2017-09-17 11:49:57'),
(106, 2609, '0', -0.001875, 40, 0, '2017-09-17 11:49:57'),
(106, 2608, '3', 2.04187, 7, 1, '2017-09-17 11:49:57'),
(106, 2604, '1', -1.36688, 13, 0, '2017-09-17 11:49:57'),
(106, 2612, '2', -0.826875, 19, 0, '2017-09-17 11:49:57'),
(106, 2603, '3', -1.17188, 15, 0, '2017-09-17 11:49:57'),
(106, 2615, '3', -0.826875, 19, 0, '2017-09-17 11:49:57'),
(106, 2613, '4', 2.1675, 6, 1, '2017-09-17 11:49:57'),
(106, 2610, '3', 1.36688, 13, 1, '2017-09-17 11:49:57'),
(106, 2611, '3', 1.47, 12, 1, '2017-09-17 11:49:58'),
(106, 2606, '1', 1.80187, 9, 1, '2017-09-17 11:49:58'),
(106, 2601, '2', 2.04187, 7, 1, '2017-09-17 11:49:58'),
(106, 2602, '4', -1.57687, 11, 0, '2017-09-17 11:49:58'),
(106, 2605, '2', 0.75, 20, 1, '2017-09-17 11:49:58'),
(106, 2607, '3', -1.17188, 15, 0, '2017-09-17 11:49:58'),
(106, 2614, '4', 1.6875, 10, 1, '2017-09-17 11:49:58'),
(106, 2629, '2', -2.00083, 11, 0, '2017-09-17 11:49:58'),
(106, 2623, '3', -1.84083, 13, 0, '2017-09-17 11:49:58'),
(106, 2627, '2', 1.92, 12, 1, '2017-09-17 11:49:58'),
(106, 2617, '1', 2.43, 6, 1, '2017-09-17 11:49:58'),
(106, 2630, '0', 0, 33, -1, '2017-09-17 11:49:58'),
(106, 2624, '3', 0, 60, 0, '2017-09-17 11:49:58'),
(106, 2632, '1', -2.25333, 8, 0, '2017-09-17 11:49:58'),
(106, 2635, '4', -2.1675, 9, 0, '2017-09-17 11:49:59'),
(106, 2628, '4', -2.25333, 8, 0, '2017-09-17 11:49:59'),
(106, 2619, '3', 1.84083, 13, 1, '2017-09-17 11:49:59'),
(106, 2626, '3', 2.25333, 8, 1, '2017-09-17 11:49:59'),
(106, 2621, '0', 0, 11, -1, '2017-09-17 11:49:59'),
(106, 2618, '3', 2.00083, 11, 1, '2017-09-17 11:49:59'),
(106, 2616, '1', -1.92, 12, 0, '2017-09-17 11:49:59'),
(106, 2620, '4', 2.34083, 7, 1, '2017-09-17 11:49:59'),
(106, 2633, '0', 0, 9, -1, '2017-09-17 11:49:59'),
(106, 2631, '2', -0.653333, 32, 0, '2017-09-17 11:49:59'),
(106, 2634, '4', 1.08, 24, 1, '2017-09-17 11:49:59'),
(106, 2622, '4', -1.6875, 15, 0, '2017-09-17 11:49:59'),
(106, 2625, '3', 1.08, 24, 1, '2017-09-17 11:49:59'),
(106, 2845, '4', -0.403333, 38, 0, '2017-09-17 11:49:59'),
(106, 2823, '1', -0.700833, 31, 0, '2017-09-17 11:49:59'),
(106, 2841, '3', 2.34083, 7, 1, '2017-09-17 11:50:00'),
(106, 2732, '4', 1.02083, 25, 1, '2017-09-17 11:50:00'),
(106, 2729, '0', -0.000833333, 60, 0, '2017-09-17 11:50:00'),
(106, 2731, '4', 0.520833, 35, 1, '2017-09-17 11:50:00'),
(106, 2825, '1', -1.76333, 14, 0, '2017-09-17 11:50:00'),
(106, 2730, '3', -1.2675, 21, 0, '2017-09-17 11:50:00'),
(106, 2816, '0', -0.000833333, 60, 0, '2017-09-17 11:50:00'),
(106, 2819, '1', -1.76333, 14, 0, '2017-09-17 11:50:00'),
(106, 2833, '1', -1.14083, 23, 0, '2017-09-17 11:50:00'),
(106, 2733, '1', -1.92, 12, 0, '2017-09-17 11:50:00'),
(106, 2734, '1', -1.54083, 17, 0, '2017-09-17 11:50:00'),
(106, 2852, '3', -0.403333, 38, 0, '2017-09-17 11:50:00'),
(106, 2728, '3', -0.0075, 57, 0, '2017-09-17 11:50:00'),
(106, 2847, '4', 1.33333, 20, 1, '2017-09-17 11:50:00'),
(106, 2838, '3', 2.1675, 9, 1, '2017-09-17 11:50:00'),
(106, 2820, '0', -0.000833333, 60, 0, '2017-09-17 11:50:01'),
(106, 1197, '1', 0.421875, 15, 1, '2017-09-17 11:50:01'),
(106, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:50:01'),
(106, 1183, '2', 0.75, 11, 1, '2017-09-17 11:50:01'),
(106, 1276, '4', -0.354492, 21, 0, '2017-09-17 11:50:01'),
(106, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:50:01'),
(106, 1194, '1', 1.53061, 8, 1, '2017-09-17 11:50:01'),
(106, 1190, '0', -0.00382653, 28, 0, '2017-09-17 11:50:01'),
(106, 1174, '3', 0.536982, 15, 1, '2017-09-17 11:50:01'),
(106, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:50:01'),
(106, 1173, '2', 0.27, 14, 1, '2017-09-17 11:50:01'),
(106, 1218, '2', -0.48, 12, 0, '2017-09-17 11:50:01'),
(106, 1198, '1', -0.27, 14, 0, '2017-09-17 11:50:01'),
(106, 1291, '0', -0.0075, 20, 0, '2017-09-17 11:50:01'),
(106, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:50:01'),
(106, 1270, '3', -0.0510397, 40, 0, '2017-09-17 11:50:02'),
(106, 1177, '2', 1.21488, 8, 1, '2017-09-17 11:50:02'),
(106, 1172, '4', 0.03, 18, 1, '2017-09-17 11:50:02'),
(106, 1297, '3', 1.6875, 15, 1, '2017-09-17 11:50:02'),
(106, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:50:02'),
(106, 1170, '2', 1.17188, 9, 1, '2017-09-17 11:50:02'),
(106, 1169, '2', 1.50521, 7, 1, '2017-09-17 11:50:02'),
(106, 1216, '4', 0.255208, 17, 1, '2017-09-17 11:50:02'),
(106, 1263, '2', -0.091875, 33, 0, '2017-09-17 11:50:02'),
(106, 1186, '3', 0.646684, 15, 1, '2017-09-17 11:50:02'),
(106, 1196, '4', 0.255208, 17, 1, '2017-09-17 11:50:03'),
(106, 1292, '3', -0.27, 21, 0, '2017-09-17 11:50:03'),
(106, 1184, '4', 0.421875, 15, 1, '2017-09-17 11:50:03'),
(106, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:50:03'),
(106, 1281, '0', -0.00333333, 30, 0, '2017-09-17 11:50:03'),
(106, 1171, '3', -0.48, 12, 0, '2017-09-17 11:50:03'),
(106, 1175, '0', -0.00292969, 32, 0, '2017-09-17 11:50:03'),
(106, 1200, '3', -0.391204, 23, 0, '2017-09-17 11:50:03'),
(106, 1265, '0', 0, 34, -1, '2017-09-17 11:50:03'),
(106, 1219, '0', -0.00619835, 22, 0, '2017-09-17 11:50:03'),
(106, 1268, '0', -0.00130208, 48, 0, '2017-09-17 11:50:03'),
(106, 1199, '3', 0.75, 16, 1, '2017-09-17 11:50:03'),
(106, 1257, '4', 0.0117188, 45, 1, '2017-09-17 11:50:04'),
(106, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:50:04'),
(106, 1282, '0', 0, 9, -1, '2017-09-17 11:50:04'),
(106, 1293, '2', 0.255208, 17, 1, '2017-09-17 11:50:04'),
(106, 1202, '1', 0.592593, 20, 1, '2017-09-17 11:50:04'),
(106, 1220, '0', 0, 7, -1, '2017-09-17 11:50:04'),
(106, 1191, '3', 1.38138, 9, 1, '2017-09-17 11:50:04'),
(106, 1287, '3', 0.625, 38, 1, '2017-09-17 11:50:04'),
(106, 1294, '0', -0.125, 24, 0, '2017-09-17 11:50:04'),
(106, 1284, '3', 0.3, 18, 1, '2017-09-17 11:50:04'),
(106, 1189, '1', -1.5, 14, 0, '2017-09-17 11:50:04'),
(106, 1208, '2', 0, 50, 0, '2017-09-17 11:50:04'),
(106, 1217, '0', 4.35, 50, 0, '2017-09-17 11:50:04'),
(106, 1206, '4', 1.05, 39, 1, '2017-09-17 11:50:04'),
(106, 1209, '0', -0.06, 50, 0, '2017-09-17 11:50:05'),
(106, 1289, '1', -1.575, 19, 0, '2017-09-17 11:50:05'),
(106, 1275, '0', -0.0555556, 54, 0, '2017-09-17 11:50:05'),
(106, 1295, '3', -0.5, 20, 0, '2017-09-17 11:50:05'),
(106, 1299, '0', -0.0454545, 66, 0, '2017-09-17 11:50:05'),
(106, 1188, '0', -0.107143, 28, 0, '2017-09-17 11:50:05'),
(106, 1264, '0', -0.0454545, 66, 0, '2017-09-17 11:50:05'),
(106, 1462, '1', 2.1675, 6, 1, '2017-09-17 11:50:05'),
(106, 2929, '4', 1.6875, 6, 1, '2017-09-17 11:50:05'),
(106, 3004, '2', -1.92, 6, 0, '2017-09-17 11:50:05'),
(106, 1454, '2', 0.0833333, 30, 1, '2017-09-17 11:50:05'),
(106, 1460, '2', -0.886106, 21, 0, '2017-09-17 11:50:05'),
(106, 1466, '0', 0, 8, -1, '2017-09-17 11:50:05'),
(106, 3051, '1', -1.28254, 9, 0, '2017-09-17 11:50:05'),
(106, 1452, '1', -1.6875, 10, 0, '2017-09-17 11:50:05'),
(106, 1455, '1', 1.57687, 11, 1, '2017-09-17 11:50:06'),
(106, 1450, '4', 0.75, 18, 1, '2017-09-17 11:50:06'),
(106, 3039, '1', 1.13609, 10, 1, '2017-09-17 11:50:06'),
(106, 1453, '2', -1.7328, 12, 0, '2017-09-17 11:50:06'),
(106, 3035, '2', 0.309949, 19, 1, '2017-09-17 11:50:06'),
(106, 1458, '0', 0, 10, -1, '2017-09-17 11:50:06'),
(106, 1465, '1', 0.55102, 16, 1, '2017-09-17 11:50:06'),
(106, 1459, '3', -1.6875, 10, 0, '2017-09-17 11:50:06'),
(106, 1449, '1', -1.17188, 15, 0, '2017-09-17 11:50:06'),
(106, 1463, '2', 2.00826, 8, 1, '2017-09-17 11:50:06'),
(106, 1451, '1', 0.231481, 26, 1, '2017-09-17 11:50:06'),
(106, 3044, '3', 1.50521, 7, 1, '2017-09-17 11:50:06'),
(106, 1456, '3', -1.2675, 14, 0, '2017-09-17 11:50:06'),
(106, 1461, '0', 0, 23, -1, '2017-09-17 11:50:06'),
(106, 1457, '4', 1.92, 8, 1, '2017-09-17 11:50:06'),
(106, 1464, '2', 1.2513, 17, 1, '2017-09-17 11:50:07'),
(106, 1467, '3', 1.40083, 19, 1, '2017-09-17 11:50:07'),
(106, 1470, '1', 1.92, 10, 1, '2017-09-17 11:50:07'),
(106, 1479, '0', -0.00154959, 44, 0, '2017-09-17 11:50:07'),
(106, 1484, '0', -0.00170068, 42, 0, '2017-09-17 11:50:07'),
(106, 1478, '3', -1.92, 8, 0, '2017-09-17 11:50:07'),
(106, 1469, '1', -1.2675, 14, 0, '2017-09-17 11:50:07'),
(106, 1486, '0', -0.00154959, 44, 0, '2017-09-17 11:50:07'),
(106, 1487, '0', -0.00141777, 46, 0, '2017-09-17 11:50:07'),
(106, 1491, '1', -1.43027, 13, 0, '2017-09-17 11:50:07'),
(106, 2933, '2', 0.333333, 16, 1, '2017-09-17 11:50:07'),
(106, 1124, '0', 0, 23, -1, '2017-09-17 11:50:07'),
(106, 854, '1', 2.43, 7, 1, '2017-09-17 11:50:08'),
(106, 619, '0', 0, 6, -1, '2017-09-17 11:50:08'),
(106, 1091, '0', 0, 0, -1, '2017-09-17 11:50:08'),
(106, 595, '1', -2.24667, 7, 0, '2017-09-17 11:50:08'),
(106, 1310, '3', -2.05141, 9, 0, '2017-09-17 11:50:08'),
(106, 598, '3', -2.1675, 9, 0, '2017-09-17 11:50:08'),
(106, 596, '2', -1.72942, 13, 0, '2017-09-17 11:50:08'),
(106, 852, '2', -1.54083, 17, 0, '2017-09-17 11:50:08'),
(106, 611, '2', -2.0172, 9, 0, '2017-09-17 11:50:08'),
(106, 996, '4', -1.7328, 12, 0, '2017-09-17 11:50:08'),
(107, 1196, '0', -0.00520833, 24, 0, '2017-09-17 11:50:09'),
(107, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:50:09'),
(107, 1169, '2', 0.630208, 13, 1, '2017-09-17 11:50:09'),
(107, 1172, '4', 0.27, 14, 1, '2017-09-17 11:50:09'),
(107, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:50:09'),
(107, 1174, '3', 0.536982, 15, 1, '2017-09-17 11:50:09'),
(107, 1186, '3', 1.6875, 7, 1, '2017-09-17 11:50:09'),
(107, 1197, '3', 0, 24, 0, '2017-09-17 11:50:09'),
(107, 1297, '0', -0.000833333, 60, 0, '2017-09-17 11:50:09'),
(107, 1270, '0', 0, 23, -1, '2017-09-17 11:50:09'),
(107, 1183, '2', 0.619835, 12, 1, '2017-09-17 11:50:10'),
(107, 1218, '0', 0, 11, -1, '2017-09-17 11:50:10'),
(107, 1177, '0', 0, 15, -1, '2017-09-17 11:50:10'),
(107, 1263, '0', -0.001875, 40, 0, '2017-09-17 11:50:10'),
(107, 1184, '4', 0.1875, 18, 1, '2017-09-17 11:50:10'),
(107, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:50:10'),
(107, 1292, '0', -0.00333333, 30, 0, '2017-09-17 11:50:10'),
(107, 1198, '0', -0.0075, 20, 0, '2017-09-17 11:50:10'),
(107, 1194, '0', -0.00382653, 28, 0, '2017-09-17 11:50:10'),
(107, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:50:10'),
(107, 1291, '1', -0.48, 12, 0, '2017-09-17 11:50:10'),
(107, 1170, '2', 0.75, 12, 1, '2017-09-17 11:50:10'),
(107, 1190, '0', -0.00382653, 28, 0, '2017-09-17 11:50:10'),
(107, 1276, '2', -0.75, 16, 0, '2017-09-17 11:50:10'),
(107, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:50:10'),
(107, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:50:11'),
(107, 1216, '0', -0.00520833, 24, 0, '2017-09-17 11:50:11'),
(107, 1173, '2', 0.48, 12, 1, '2017-09-17 11:50:11'),
(107, 1191, '3', 1.2398, 10, 1, '2017-09-17 11:50:11'),
(107, 1200, '0', -0.00231481, 36, 0, '2017-09-17 11:50:11'),
(107, 1287, '0', -0.00130208, 48, 0, '2017-09-17 11:50:11'),
(107, 1199, '0', -0.00292969, 32, 0, '2017-09-17 11:50:11'),
(107, 1265, '0', -0.00110947, 52, 0, '2017-09-17 11:50:11'),
(107, 1268, '0', -0.00130208, 48, 0, '2017-09-17 11:50:11'),
(107, 1219, '3', 0.0247934, 20, 1, '2017-09-17 11:50:11'),
(107, 1217, '3', 0.6075, 11, 1, '2017-09-17 11:50:11'),
(107, 1284, '3', 0.0675, 17, 1, '2017-09-17 11:50:11'),
(107, 1171, '4', 0.3675, 13, 1, '2017-09-17 11:50:11'),
(107, 1294, '0', -0.00520833, 24, 0, '2017-09-17 11:50:11'),
(107, 1257, '0', -0.00130208, 48, 0, '2017-09-17 11:50:11'),
(107, 1175, '4', 0.1875, 24, 1, '2017-09-17 11:50:12'),
(107, 1220, '0', -0.00382653, 28, 0, '2017-09-17 11:50:12'),
(107, 1282, '2', 0, 30, 0, '2017-09-17 11:50:12'),
(107, 1269, '0', -0.470052, 30, 0, '2017-09-17 11:50:12'),
(107, 1202, '0', -0.00231481, 36, 0, '2017-09-17 11:50:12'),
(107, 1281, '0', -0.00333333, 30, 0, '2017-09-17 11:50:12'),
(107, 1293, '0', -0.00520833, 24, 0, '2017-09-17 11:50:12'),
(107, 1208, '0', -0.0012, 50, 0, '2017-09-17 11:50:12'),
(107, 1189, '3', 1.38138, 9, 1, '2017-09-17 11:50:12'),
(107, 1298, '1', 0.0208333, 55, 1, '2017-09-17 11:50:12'),
(107, 1176, '4', 0.244898, 20, 1, '2017-09-17 11:50:12'),
(107, 1295, '1', -0.630208, 13, 0, '2017-09-17 11:50:12'),
(107, 1188, '1', 1.10587, 11, 1, '2017-09-17 11:50:12'),
(107, 173, '0', -0.0003, 100, 0, '2017-09-17 11:50:12'),
(107, 1209, '0', -0.0012, 50, 0, '2017-09-17 11:50:13'),
(107, 3063, '1', 0.309949, 19, 1, '2017-09-17 11:50:13'),
(107, 3068, '1', 0.244898, 20, 1, '2017-09-17 11:50:13'),
(107, 3066, '0', -0.00382653, 28, 0, '2017-09-17 11:50:13'),
(107, 3011, '0', 0, 17, -1, '2017-09-17 11:50:13'),
(107, 3013, '0', 0, 20, -1, '2017-09-17 11:50:13'),
(107, 3047, '1', -0.979592, 12, 0, '2017-09-17 11:50:13'),
(107, 3024, '0', 0, 18, -1, '2017-09-17 11:50:13'),
(107, 3158, '0', -0.00207756, 38, 0, '2017-09-17 11:50:13'),
(107, 3055, '4', 1.53061, 8, 1, '2017-09-17 11:50:13'),
(107, 3079, '3', -0.46301, 17, 0, '2017-09-17 11:50:13'),
(107, 3026, '2', 1.38138, 9, 1, '2017-09-17 11:50:13'),
(107, 3045, '1', 0.309949, 19, 1, '2017-09-17 11:50:13'),
(107, 3040, '0', -0.00382653, 28, 0, '2017-09-17 11:50:14'),
(107, 3056, '0', -0.00382653, 28, 0, '2017-09-17 11:50:14'),
(107, 3009, '0', -0.00382653, 28, 0, '2017-09-17 11:50:14'),
(107, 3032, '0', -0.00382653, 28, 0, '2017-09-17 11:50:14'),
(107, 3052, '2', 0, 28, 0, '2017-09-17 11:50:14'),
(107, 3073, '0', -0.00382653, 28, 0, '2017-09-17 11:50:14'),
(107, 3028, '1', -1.6875, 7, 0, '2017-09-17 11:50:14'),
(107, 3016, '0', -0.00382653, 28, 0, '2017-09-17 11:50:14'),
(107, 3006, '1', 0.0956633, 23, 1, '2017-09-17 11:50:14'),
(107, 3050, '3', 0.309949, 19, 1, '2017-09-17 11:50:14'),
(107, 3018, '3', -0.0612245, 24, 0, '2017-09-17 11:50:14'),
(107, 3042, '2', 0.75, 14, 1, '2017-09-17 11:50:14'),
(107, 3083, '0', -0.00382653, 28, 0, '2017-09-17 11:50:14'),
(107, 3020, '1', -1.2398, 10, 0, '2017-09-17 11:50:15'),
(107, 3145, '2', 0.467452, 23, 1, '2017-09-17 11:50:15'),
(107, 3291, '2', 0.351108, 25, 1, '2017-09-17 11:50:15'),
(107, 3142, '4', 0.916205, 17, 1, '2017-09-17 11:50:15'),
(107, 3136, '2', 0.467452, 23, 1, '2017-09-17 11:50:15'),
(107, 3112, '4', -0.251385, 27, 0, '2017-09-17 11:50:15'),
(107, 3097, '0', -0.00207756, 38, 0, '2017-09-17 11:50:15'),
(107, 3155, '4', -0.033241, 34, 0, '2017-09-17 11:50:15'),
(107, 3295, '0', -0.00207756, 38, 0, '2017-09-17 11:50:15'),
(107, 3117, '4', 0.75, 19, 1, '2017-09-17 11:50:15'),
(107, 3287, '4', -1.09903, 15, 0, '2017-09-17 11:50:15'),
(107, 3288, '0', -0.00207756, 38, 0, '2017-09-17 11:50:15'),
(107, 3090, '1', -1.51454, 11, 0, '2017-09-17 11:50:16'),
(107, 3102, '1', 0.407202, 24, 1, '2017-09-17 11:50:16'),
(107, 3292, '1', -0.00831025, 36, 0, '2017-09-17 11:50:16'),
(107, 3149, '4', -0.67313, 20, 0, '2017-09-17 11:50:16'),
(107, 3100, '2', -1.99654, 7, 0, '2017-09-17 11:50:16'),
(107, 3123, '0', -0.00207756, 38, 0, '2017-09-17 11:50:16'),
(107, 3105, '2', -0.00831025, 36, 0, '2017-09-17 11:50:16'),
(107, 3119, '2', 1.99654, 7, 1, '2017-09-17 11:50:16'),
(107, 3294, '3', -0.75, 19, 0, '2017-09-17 11:50:16'),
(107, 3153, '0', -0.00207756, 38, 0, '2017-09-17 11:50:16'),
(107, 3290, '3', -1.62881, 10, 0, '2017-09-17 11:50:16'),
(107, 3140, '3', -1.40443, 12, 0, '2017-09-17 11:50:16'),
(107, 3293, '1', 1.86981, 8, 1, '2017-09-17 11:50:16'),
(107, 3093, '2', -1.86981, 8, 0, '2017-09-17 11:50:16'),
(107, 3289, '2', -1.86981, 8, 0, '2017-09-17 11:50:16'),
(107, 3306, '1', 0.886106, 21, 1, '2017-09-17 11:50:17'),
(107, 3322, '3', 0.00567108, 44, 1, '2017-09-17 11:50:17'),
(107, 3312, '3', 1.94093, 9, 1, '2017-09-17 11:50:17'),
(107, 3300, '3', -2.15643, 7, 0, '2017-09-17 11:50:17'),
(107, 3303, '3', -1.83743, 10, 0, '2017-09-17 11:50:17'),
(107, 3304, '3', -2.15643, 7, 0, '2017-09-17 11:50:17'),
(107, 3315, '3', -1.83743, 10, 0, '2017-09-17 11:50:17'),
(107, 1301, '0', -2.13574, 11, 0, '2017-09-17 11:50:17'),
(107, 596, '1', 1.81481, 12, 1, '2017-09-17 11:50:17'),
(107, 854, '1', 1.85204, 15, 1, '2017-09-17 11:50:17'),
(107, 1124, '1', -0.9075, 27, 0, '2017-09-17 11:50:17'),
(107, 597, '2', 1.72942, 13, 1, '2017-09-17 11:50:17'),
(107, 598, '4', 1.92, 12, 1, '2017-09-17 11:50:18'),
(107, 600, '3', 2.1132, 9, 1, '2017-09-17 11:50:18'),
(107, 996, '4', -2.2188, 7, 0, '2017-09-17 11:50:18'),
(107, 604, '3', 2.1675, 9, 1, '2017-09-17 11:50:18'),
(107, 1089, '4', -2.00083, 11, 0, '2017-09-17 11:50:18'),
(107, 613, '4', -1.92, 12, 0, '2017-09-17 11:50:18'),
(107, 1311, '4', 2.0172, 9, 1, '2017-09-17 11:50:18'),
(107, 624, '4', -2.25333, 8, 0, '2017-09-17 11:50:18'),
(107, 594, '3', 1.6428, 13, 1, '2017-09-17 11:50:18'),
(107, 1318, '1', -2.02423, 10, 0, '2017-09-17 11:50:18'),
(107, 853, '4', -1.08, 24, 0, '2017-09-17 11:50:18'),
(107, 602, '4', -0.457764, 39, 0, '2017-09-17 11:50:18'),
(107, 1308, '4', -1.47, 18, 0, '2017-09-17 11:50:18'),
(107, 403, '4', 2.43, 6, 1, '2017-09-17 11:50:18'),
(107, 603, '1', 1.86501, 11, 1, '2017-09-17 11:50:19'),
(107, 601, '4', 1.85204, 12, 1, '2017-09-17 11:50:19'),
(107, 599, '1', 1.40083, 19, 1, '2017-09-17 11:50:19'),
(107, 1317, '3', 1.14083, 23, 1, '2017-09-17 11:50:19'),
(107, 1303, '1', 1.92, 12, 1, '2017-09-17 11:50:19'),
(107, 607, '1', -1.10587, 22, 0, '2017-09-17 11:50:19'),
(107, 852, '1', -0.300833, 41, 0, '2017-09-17 11:50:19'),
(107, 619, '1', -1.2675, 21, 0, '2017-09-17 11:50:19'),
(107, 1091, '1', -0.963333, 26, 0, '2017-09-17 11:50:19'),
(107, 595, '3', -1.77515, 12, 0, '2017-09-17 11:50:19'),
(107, 1310, '3', -1.9571, 10, 0, '2017-09-17 11:50:19'),
(107, 622, '1', -2.00083, 11, 0, '2017-09-17 11:50:19'),
(107, 605, '1', -2.43, 6, 0, '2017-09-17 11:50:20'),
(107, 609, '2', 1.76333, 14, 1, '2017-09-17 11:50:20'),
(107, 606, '3', 2.25333, 8, 1, '2017-09-17 11:50:20'),
(107, 593, '1', 2.00083, 11, 1, '2017-09-17 11:50:20'),
(107, 615, '1', -2.00083, 11, 0, '2017-09-17 11:50:20'),
(107, 614, '1', -1.90226, 11, 0, '2017-09-17 11:50:20'),
(107, 611, '3', 2.3232, 6, 1, '2017-09-17 11:50:20'),
(107, 850, '3', 2.1675, 9, 1, '2017-09-17 11:50:20'),
(107, 1307, '3', -2.49394, 6, 0, '2017-09-17 11:50:20'),
(107, 1343, '3', -2.5392, 4, 0, '2017-09-17 11:50:20'),
(107, 1324, '2', -2.15978, 10, 0, '2017-09-17 11:50:20'),
(107, 1337, '2', -2.37964, 7, 0, '2017-09-17 11:50:20'),
(107, 1126, '2', 0.48, 36, 1, '2017-09-17 11:50:20'),
(107, 1096, '3', 1.47, 18, 1, '2017-09-17 11:50:21'),
(107, 1315, '3', -2.41142, 6, 0, '2017-09-17 11:50:21'),
(107, 1334, '4', 2.52083, 5, 1, '2017-09-17 11:50:21'),
(107, 1325, '4', -1.45504, 17, 0, '2017-09-17 11:50:21'),
(107, 1327, '4', -1.3872, 16, 0, '2017-09-17 11:50:21'),
(107, 1103, '1', -1.75058, 17, 0, '2017-09-17 11:50:21'),
(107, 1322, '4', -2.37964, 7, 0, '2017-09-17 11:50:21'),
(107, 1137, '2', 0.75, 10, 1, '2017-09-17 11:50:21'),
(107, 401, '2', -1.2675, 7, 0, '2017-09-17 11:50:21'),
(107, 2432, '2', -2.63033, 7, 0, '2017-09-17 11:50:21'),
(107, 2414, '4', -1.58678, 24, 0, '2017-09-17 11:50:21'),
(107, 392, '4', -0.9075, 9, 0, '2017-09-17 11:50:21'),
(107, 379, '4', -0.9075, 9, 0, '2017-09-17 11:50:21'),
(107, 2427, '4', 2.56687, 9, 1, '2017-09-17 11:50:22'),
(107, 389, '3', -0.03, 18, 0, '2017-09-17 11:50:22'),
(107, 367, '3', 1.2675, 7, 1, '2017-09-17 11:50:22'),
(107, 383, '0', -0.0075, 20, 0, '2017-09-17 11:50:22'),
(107, 394, '0', -0.0075, 20, 0, '2017-09-17 11:50:22'),
(107, 366, '4', 1.47, 6, 1, '2017-09-17 11:50:22'),
(107, 1107, '3', -0.27, 14, 0, '2017-09-17 11:50:22'),
(107, 1121, '3', -0.75, 10, 0, '2017-09-17 11:50:22'),
(107, 1117, '3', -0.75, 10, 0, '2017-09-17 11:50:22'),
(107, 371, '4', 0.3675, 13, 1, '2017-09-17 11:50:22'),
(107, 370, '0', -0.0075, 20, 0, '2017-09-17 11:50:22'),
(107, 398, '0', -0.0075, 20, 0, '2017-09-17 11:50:22'),
(107, 378, '1', 1.2675, 7, 1, '2017-09-17 11:50:23'),
(107, 376, '1', -1.47, 6, 0, '2017-09-17 11:50:23'),
(107, 1136, '1', -0.6075, 11, 0, '2017-09-17 11:50:23'),
(107, 402, '1', -1.2675, 7, 0, '2017-09-17 11:50:23'),
(107, 1104, '3', 0.9075, 9, 1, '2017-09-17 11:50:23'),
(107, 2422, '3', -2.33807, 15, 0, '2017-09-17 11:50:23'),
(107, 2420, '3', 2.57845, 7, 1, '2017-09-17 11:50:23'),
(107, 1105, '2', 0.03, 18, 1, '2017-09-17 11:50:23'),
(107, 1138, '1', -1.2675, 7, 0, '2017-09-17 11:50:23'),
(107, 382, '4', 0.0675, 17, 1, '2017-09-17 11:50:23'),
(107, 399, '4', -0.27, 14, 0, '2017-09-17 11:50:23'),
(107, 2403, '2', 2.02815, 16, 1, '2017-09-17 11:50:23'),
(107, 373, '2', -1.08, 8, 0, '2017-09-17 11:50:23'),
(107, 1120, '4', -0.0675, 17, 0, '2017-09-17 11:50:24'),
(107, 397, '4', -0.48, 12, 0, '2017-09-17 11:50:24'),
(107, 375, '1', 1.08, 8, 1, '2017-09-17 11:50:24'),
(107, 369, '2', 1.47, 6, 1, '2017-09-17 11:50:24'),
(107, 387, '2', -1.6875, 5, 0, '2017-09-17 11:50:24'),
(107, 1110, '2', 1.47, 6, 1, '2017-09-17 11:50:24'),
(107, 395, '2', -1.08, 8, 0, '2017-09-17 11:50:24'),
(107, 1112, '1', -0.6075, 11, 0, '2017-09-17 11:50:24'),
(107, 2408, '1', -2.21207, 13, 0, '2017-09-17 11:50:24'),
(107, 1139, '2', 0.75, 10, 1, '2017-09-17 11:50:24'),
(107, 396, '2', -1.2675, 7, 0, '2017-09-17 11:50:24'),
(107, 385, '2', -0.27, 14, 0, '2017-09-17 11:50:24'),
(107, 377, '2', 1.47, 6, 1, '2017-09-17 11:50:24'),
(107, 374, '1', -0.9075, 9, 0, '2017-09-17 11:50:24'),
(107, 381, '1', 0.9075, 9, 1, '2017-09-17 11:50:25'),
(107, 2411, '1', -2.68165, 6, 0, '2017-09-17 11:50:25'),
(107, 2400, '3', 2.66694, 4, 1, '2017-09-17 11:50:25'),
(107, 2431, '2', -1.15158, 35, 0, '2017-09-17 11:50:25'),
(107, 2418, '2', 2.63672, 5, 1, '2017-09-17 11:50:25'),
(107, 1130, '2', 2.1675, 3, 1, '2017-09-17 11:50:25'),
(107, 2416, '3', 2.47934, 8, 1, '2017-09-17 11:50:25'),
(107, 390, '0', -0.0075, 20, 0, '2017-09-17 11:50:25'),
(107, 1133, '0', -0.0075, 20, 0, '2017-09-17 11:50:25'),
(107, 1131, '3', -0.75, 10, 0, '2017-09-17 11:50:25'),
(107, 1122, '3', -0.75, 10, 0, '2017-09-17 11:50:25'),
(107, 400, '1', -1.2675, 7, 0, '2017-09-17 11:50:25'),
(107, 1116, '0', -0.0075, 20, 0, '2017-09-17 11:50:25'),
(107, 2410, '2', 2.58673, 6, 1, '2017-09-17 11:50:26'),
(107, 1115, '1', 1.08, 8, 1, '2017-09-17 11:50:26'),
(107, 388, '1', -0.9075, 9, 0, '2017-09-17 11:50:26'),
(107, 372, '2', -0.75, 10, 0, '2017-09-17 11:50:26'),
(107, 365, '1', -1.08, 8, 0, '2017-09-17 11:50:26'),
(107, 386, '1', -0.9075, 9, 0, '2017-09-17 11:50:26'),
(107, 391, '1', -1.47, 6, 0, '2017-09-17 11:50:26'),
(107, 384, '1', 1.92, 4, 1, '2017-09-17 11:50:26'),
(107, 363, '3', 2.1675, 3, 1, '2017-09-17 11:50:26'),
(107, 2413, '3', -2.56085, 7, 0, '2017-09-17 11:50:26'),
(107, 368, '3', 0.75, 10, 1, '2017-09-17 11:50:26'),
(107, 2404, '3', -2.44175, 9, 0, '2017-09-17 11:50:26'),
(107, 1114, '3', -0.27, 14, 0, '2017-09-17 11:50:26'),
(107, 380, '4', -0.6075, 11, 0, '2017-09-17 11:50:27'),
(107, 2429, '4', 2.05959, 24, 1, '2017-09-17 11:50:27'),
(107, 2406, '1', -2.79894, 3, 0, '2017-09-17 11:50:27'),
(107, 1140, '1', 0.9075, 9, 1, '2017-09-17 11:50:27'),
(107, 364, '2', 1.47, 6, 1, '2017-09-17 11:50:27'),
(107, 1109, '4', -1.2675, 7, 0, '2017-09-17 11:50:27'),
(107, 2419, '4', -2.80333, 4, 0, '2017-09-17 11:50:27'),
(107, 393, '4', -2.1675, 3, 0, '2017-09-17 11:50:27'),
(107, 1143, '4', -1.47, 6, 0, '2017-09-17 11:50:27'),
(107, 659, '0', -1.92, 5, 0, '2017-09-17 11:50:28'),
(107, 658, '0', -1.6875, 6, 0, '2017-09-17 11:50:28'),
(107, 690, '0', -1.6875, 6, 0, '2017-09-17 11:50:28'),
(107, 2033, '0', -1.38138, 10, 0, '2017-09-17 11:50:28'),
(107, 712, '3', -1.88021, 5, 0, '2017-09-17 11:50:28'),
(107, 1888, '1', 0.359467, 17, 1, '2017-09-17 11:50:28'),
(107, 680, '3', 1.6875, 7, 1, '2017-09-17 11:50:28'),
(107, 1985, '3', -1.17188, 12, 0, '2017-09-17 11:50:28'),
(107, 2013, '2', 1.76333, 7, 1, '2017-09-17 11:50:28'),
(107, 706, '2', -1.33333, 10, 0, '2017-09-17 11:50:28'),
(107, 2008, '4', 1.61333, 8, 1, '2017-09-17 11:50:28'),
(107, 716, '3', 1.60207, 7, 1, '2017-09-17 11:50:28'),
(107, 1991, '3', -1.92, 6, 0, '2017-09-17 11:50:28'),
(107, 679, '1', 2.08333, 4, 1, '2017-09-17 11:50:29'),
(107, 2010, '1', 1.47, 9, 1, '2017-09-17 11:50:29'),
(107, 676, '1', -1.6875, 7, 0, '2017-09-17 11:50:29'),
(107, 2031, '1', 1.92, 6, 1, '2017-09-17 11:50:29'),
(107, 1996, '1', -1.76333, 7, 0, '2017-09-17 11:50:29'),
(107, 713, '3', 1.60207, 7, 1, '2017-09-17 11:50:29'),
(107, 2011, '3', -0.75, 15, 0, '2017-09-17 11:50:29'),
(107, 663, '1', 1.85204, 6, 1, '2017-09-17 11:50:29'),
(107, 699, '2', -0.75, 10, 0, '2017-09-17 11:50:29'),
(107, 703, '2', -1.33333, 8, 0, '2017-09-17 11:50:29'),
(107, 1925, '2', -2.35692, 5, 0, '2017-09-17 11:50:29'),
(107, 664, '2', -1.75433, 8, 0, '2017-09-17 11:50:29'),
(107, 1921, '2', -2.08333, 5, 0, '2017-09-17 11:50:29'),
(107, 1917, '3', 1.6875, 7, 1, '2017-09-17 11:50:30'),
(107, 687, '3', -1.92, 6, 0, '2017-09-17 11:50:30'),
(107, 1906, '3', -2.08333, 5, 0, '2017-09-17 11:50:30'),
(108, 2608, '4', -1.17188, 15, 0, '2017-09-17 11:50:30'),
(108, 2612, '2', -1.57687, 11, 0, '2017-09-17 11:50:30'),
(108, 2615, '1', 0.3675, 26, 1, '2017-09-17 11:50:30'),
(108, 2607, '4', 1.80187, 9, 1, '2017-09-17 11:50:30'),
(108, 2603, '1', 1.36688, 13, 1, '2017-09-17 11:50:31'),
(108, 2604, '4', -0.826875, 19, 0, '2017-09-17 11:50:31'),
(108, 2613, '4', 1.6875, 10, 1, '2017-09-17 11:50:31'),
(108, 2609, '4', -1.2675, 14, 0, '2017-09-17 11:50:31'),
(108, 2606, '1', 1.6875, 10, 1, '2017-09-17 11:50:31'),
(108, 2601, '1', -2.1675, 6, 0, '2017-09-17 11:50:31'),
(108, 2611, '2', -1.57687, 11, 0, '2017-09-17 11:50:31'),
(108, 2605, '2', 2.04187, 7, 1, '2017-09-17 11:50:31'),
(108, 2614, '4', 1.36688, 13, 1, '2017-09-17 11:50:31'),
(108, 2602, '3', 0.676875, 21, 1, '2017-09-17 11:50:31'),
(108, 2610, '3', 1.17188, 15, 1, '2017-09-17 11:50:31');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(108, 2626, '1', -2.08333, 10, 0, '2017-09-17 11:50:31'),
(108, 2617, '1', 2.34083, 7, 1, '2017-09-17 11:50:31'),
(108, 2635, '3', -1.61333, 16, 0, '2017-09-17 11:50:32'),
(108, 2630, '2', 1.76333, 14, 1, '2017-09-17 11:50:32'),
(108, 2632, '3', 1.54083, 17, 1, '2017-09-17 11:50:32'),
(108, 2629, '1', 1.33333, 20, 1, '2017-09-17 11:50:32'),
(108, 2618, '3', 1.76333, 14, 1, '2017-09-17 11:50:32'),
(108, 2634, '4', 1.20333, 22, 1, '2017-09-17 11:50:32'),
(108, 2624, '3', -1.33333, 20, 0, '2017-09-17 11:50:32'),
(108, 2625, '4', -0.48, 36, 0, '2017-09-17 11:50:32'),
(108, 2631, '3', 1.14083, 23, 1, '2017-09-17 11:50:32'),
(108, 2633, '3', 1.92, 12, 1, '2017-09-17 11:50:32'),
(108, 2620, '4', 2.65, 7, 1, '2017-09-17 11:50:32'),
(108, 2619, '3', 2.55, 9, 1, '2017-09-17 11:50:32'),
(108, 2628, '4', -0.75, 45, 0, '2017-09-17 11:50:32'),
(108, 2623, '2', 2.3, 14, 1, '2017-09-17 11:50:33'),
(108, 2622, '2', 2.2, 16, 1, '2017-09-17 11:50:33'),
(108, 2729, '2', 2.69195, 9, 1, '2017-09-17 11:50:33'),
(108, 2819, '1', -2.62111, 11, 0, '2017-09-17 11:50:33'),
(108, 2833, '4', -0.716285, 53, 0, '2017-09-17 11:50:33'),
(108, 2621, '3', 2.5, 10, 1, '2017-09-17 11:50:33'),
(108, 2825, '3', 2.76188, 7, 1, '2017-09-17 11:50:33'),
(108, 2852, '3', -0.64633, 54, 0, '2017-09-17 11:50:33'),
(108, 2816, '1', -2.69195, 9, 0, '2017-09-17 11:50:33'),
(108, 196, '2', 0.00925926, 34, 1, '2017-09-17 11:50:33'),
(108, 200, '2', 0.860969, 13, 1, '2017-09-17 11:50:33'),
(108, 192, '3', -0.0648789, 29, 0, '2017-09-17 11:50:33'),
(108, 214, '2', -0.963333, 13, 0, '2017-09-17 11:50:34'),
(108, 203, '0', -0.03, 10, 0, '2017-09-17 11:50:34'),
(108, 210, '3', 1.14446, 13, 1, '2017-09-17 11:50:34'),
(108, 206, '4', -0.75, 15, 0, '2017-09-17 11:50:34'),
(108, 204, '2', -0.443787, 16, 0, '2017-09-17 11:50:34'),
(108, 215, '1', -0.84083, 16, 0, '2017-09-17 11:50:34'),
(108, 218, '0', 0, 6, -1, '2017-09-17 11:50:34'),
(108, 205, '1', 0.159763, 20, 1, '2017-09-17 11:50:34'),
(108, 189, '3', 0.963333, 13, 1, '2017-09-17 11:50:34'),
(108, 190, '1', -0.75, 15, 0, '2017-09-17 11:50:34'),
(108, 201, '1', -0.00333333, 29, 0, '2017-09-17 11:50:34'),
(108, 219, '1', 0.75, 15, 1, '2017-09-17 11:50:34'),
(108, 208, '3', 0.03, 27, 1, '2017-09-17 11:50:34'),
(108, 191, '1', -0.0415225, 30, 0, '2017-09-17 11:50:35'),
(108, 211, '3', 0.653333, 16, 1, '2017-09-17 11:50:35'),
(108, 207, '3', -0.137755, 22, 0, '2017-09-17 11:50:35'),
(108, 213, '1', -1.25606, 12, 0, '2017-09-17 11:50:35'),
(108, 199, '2', 0.998521, 11, 1, '2017-09-17 11:50:35'),
(108, 212, '0', 0, 17, -1, '2017-09-17 11:50:35'),
(108, 217, '2', -0.0344388, 25, 0, '2017-09-17 11:50:35'),
(108, 195, '0', -0.03, 10, 0, '2017-09-17 11:50:35'),
(108, 198, '4', -0.886106, 21, 0, '2017-09-17 11:50:35'),
(108, 193, '3', 1.6875, 8, 1, '2017-09-17 11:50:35'),
(108, 209, '4', -0.979592, 12, 0, '2017-09-17 11:50:35'),
(108, 216, '1', -0.0133333, 28, 0, '2017-09-17 11:50:35'),
(108, 202, '4', -0.646684, 15, 0, '2017-09-17 11:50:35'),
(108, 194, '4', -0.6075, 22, 0, '2017-09-17 11:50:36'),
(108, 197, '2', 1.12037, 14, 1, '2017-09-17 11:50:36'),
(108, 234, '1', -0.105469, 26, 0, '2017-09-17 11:50:36'),
(108, 230, '2', -0.421875, 20, 0, '2017-09-17 11:50:36'),
(108, 231, '1', -1.20333, 11, 0, '2017-09-17 11:50:36'),
(108, 240, '0', -0.03, 10, 0, '2017-09-17 11:50:36'),
(108, 236, '4', -0.75, 15, 0, '2017-09-17 11:50:36'),
(108, 220, '3', 0.925926, 16, 1, '2017-09-17 11:50:36'),
(108, 223, '0', 0, 9, -1, '2017-09-17 11:50:36'),
(108, 227, '1', 0.75, 14, 1, '2017-09-17 11:50:36'),
(108, 228, '4', -0.853333, 14, 0, '2017-09-17 11:50:36'),
(108, 232, '2', 0.925926, 16, 1, '2017-09-17 11:50:36'),
(108, 241, '1', -0.949219, 14, 0, '2017-09-17 11:50:36'),
(108, 225, '4', -0.259516, 24, 0, '2017-09-17 11:50:37'),
(108, 233, '4', -0.853333, 14, 0, '2017-09-17 11:50:37'),
(108, 229, '3', -0.508651, 20, 0, '2017-09-17 11:50:37'),
(108, 221, '1', -0.373702, 22, 0, '2017-09-17 11:50:37'),
(108, 235, '2', 0.27, 21, 1, '2017-09-17 11:50:37'),
(108, 237, '2', 0.495117, 19, 1, '2017-09-17 11:50:37'),
(108, 224, '0', -0.00259516, 34, 0, '2017-09-17 11:50:37'),
(108, 239, '0', -0.03, 10, 0, '2017-09-17 11:50:37'),
(108, 2748, '4', -0.333333, 20, 0, '2017-09-17 11:50:37'),
(108, 2736, '3', -0.853333, 14, 0, '2017-09-17 11:50:37'),
(108, 2744, '3', -0.963333, 13, 0, '2017-09-17 11:50:38'),
(108, 2755, '4', -1.08, 12, 0, '2017-09-17 11:50:38'),
(108, 2739, '1', 0.333333, 20, 1, '2017-09-17 11:50:38'),
(108, 2752, '1', 1.08, 12, 1, '2017-09-17 11:50:38'),
(108, 2740, '4', -0.27, 21, 0, '2017-09-17 11:50:38'),
(108, 2749, '4', 1.20333, 11, 1, '2017-09-17 11:50:38'),
(108, 2738, '1', -0.963333, 13, 0, '2017-09-17 11:50:38'),
(108, 2760, '1', -0.653333, 16, 0, '2017-09-17 11:50:38'),
(108, 2761, '1', 0.48, 18, 1, '2017-09-17 11:50:38'),
(108, 2741, '3', 1.33333, 10, 1, '2017-09-17 11:50:38'),
(108, 2747, '2', -0.963333, 13, 0, '2017-09-17 11:50:38'),
(108, 2753, '2', 0.333333, 20, 1, '2017-09-17 11:50:38'),
(108, 2754, '1', 1.20333, 11, 1, '2017-09-17 11:50:39'),
(108, 2756, '3', -0.653333, 16, 0, '2017-09-17 11:50:39'),
(108, 2743, '4', 0.75, 15, 1, '2017-09-17 11:50:39'),
(108, 2746, '2', 1.61333, 8, 1, '2017-09-17 11:50:39'),
(108, 2751, '2', 1.20333, 11, 1, '2017-09-17 11:50:39'),
(108, 2742, '4', 1.20333, 11, 1, '2017-09-17 11:50:39'),
(108, 2737, '3', -0.963333, 13, 0, '2017-09-17 11:50:39'),
(108, 2758, '4', 1.47, 9, 1, '2017-09-17 11:50:39'),
(108, 2757, '1', -0.963333, 13, 0, '2017-09-17 11:50:39'),
(108, 2762, '3', 1.08, 12, 1, '2017-09-17 11:50:39'),
(108, 2763, '1', 0.653333, 16, 1, '2017-09-17 11:50:39'),
(108, 2745, '2', 0.48, 18, 1, '2017-09-17 11:50:39'),
(108, 2759, '2', 1.08, 12, 1, '2017-09-17 11:50:39'),
(108, 2750, '1', -0.163333, 23, 0, '2017-09-17 11:50:40'),
(108, 2772, '2', 2.0172, 9, 1, '2017-09-17 11:50:40'),
(108, 2767, '4', 1.92, 10, 1, '2017-09-17 11:50:40'),
(108, 2768, '1', -1.92, 18, 0, '2017-09-17 11:50:40'),
(108, 2782, '0', 0, 10, -1, '2017-09-17 11:50:40'),
(108, 2789, '0', 0, 10, -1, '2017-09-17 11:50:40'),
(108, 2769, '4', 1.7328, 12, 1, '2017-09-17 11:50:40'),
(108, 2778, '2', 1.86, 19, 1, '2017-09-17 11:50:40'),
(108, 2785, '4', -2.1, 15, 0, '2017-09-17 11:50:40'),
(108, 2787, '2', -2.22, 13, 0, '2017-09-17 11:50:40'),
(108, 2784, '2', 2.2188, 7, 1, '2017-09-17 11:50:40'),
(108, 2779, '1', 1.74, 21, 1, '2017-09-17 11:50:40'),
(108, 2764, '4', -2.28, 12, 0, '2017-09-17 11:50:41'),
(108, 2771, '3', 1.08, 20, 1, '2017-09-17 11:50:41'),
(108, 2786, '1', -1.86, 19, 0, '2017-09-17 11:50:41'),
(108, 2770, '2', 0.9408, 22, 1, '2017-09-17 11:50:41'),
(108, 2777, '0', 0, 14, -1, '2017-09-17 11:50:41'),
(108, 2773, '2', 1.8252, 11, 1, '2017-09-17 11:50:41'),
(108, 2776, '1', 2.28, 12, 1, '2017-09-17 11:50:41'),
(108, 2780, '1', 1.14, 31, 1, '2017-09-17 11:50:41'),
(108, 2775, '3', 2.16, 14, 1, '2017-09-17 11:50:41'),
(108, 2783, '3', 2.28, 12, 1, '2017-09-17 11:50:41'),
(108, 2791, '3', 2.52, 8, 1, '2017-09-17 11:50:41'),
(108, 2815, '2', -2.13414, 28, 0, '2017-09-17 11:50:41'),
(108, 2765, '1', -2.4, 10, 0, '2017-09-17 11:50:41'),
(108, 2774, '4', 1.92, 18, 1, '2017-09-17 11:50:42'),
(108, 1196, '4', 0.1875, 18, 1, '2017-09-17 11:50:42'),
(108, 1177, '2', 0.619835, 12, 1, '2017-09-17 11:50:42'),
(108, 1198, '4', 0.9075, 9, 1, '2017-09-17 11:50:42'),
(108, 1184, '4', 0.880208, 11, 1, '2017-09-17 11:50:42'),
(108, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:50:42'),
(108, 1174, '3', 0.159763, 20, 1, '2017-09-17 11:50:42'),
(108, 1203, '3', 0.0833333, 25, 1, '2017-09-17 11:50:42'),
(108, 1263, '2', -0.541875, 23, 0, '2017-09-17 11:50:42'),
(108, 1173, '2', 0.3675, 13, 1, '2017-09-17 11:50:42'),
(108, 1197, '3', -1.17188, 9, 0, '2017-09-17 11:50:42'),
(108, 1292, '2', -0.403333, 19, 0, '2017-09-17 11:50:42'),
(108, 1190, '4', 1.10587, 11, 1, '2017-09-17 11:50:42'),
(108, 1169, '2', 1.02083, 10, 1, '2017-09-17 11:50:43'),
(108, 1185, '4', 1.53061, 8, 1, '2017-09-17 11:50:43'),
(108, 1216, '4', 0.046875, 21, 1, '2017-09-17 11:50:43'),
(108, 1195, '2', -0.0075, 19, 0, '2017-09-17 11:50:43'),
(108, 1270, '0', 0, 16, -1, '2017-09-17 11:50:43'),
(108, 1172, '4', 1.08, 8, 1, '2017-09-17 11:50:43'),
(108, 1227, '0', 0, 19, -1, '2017-09-17 11:50:43'),
(108, 1186, '3', 1.53061, 8, 1, '2017-09-17 11:50:43'),
(108, 1210, '1', 0.0208333, 22, 1, '2017-09-17 11:50:43'),
(108, 1194, '1', 1.2398, 10, 1, '2017-09-17 11:50:43'),
(108, 1297, '3', 1.92, 12, 1, '2017-09-17 11:50:43'),
(108, 1268, '0', 0, 20, -1, '2017-09-17 11:50:43'),
(108, 1199, '0', -0.09375, 32, 0, '2017-09-17 11:50:43'),
(108, 1281, '1', -0.3, 27, 0, '2017-09-17 11:50:44'),
(108, 1293, '1', -2, 8, 0, '2017-09-17 11:50:44'),
(108, 1291, '1', -1.08, 8, 0, '2017-09-17 11:50:44'),
(108, 1170, '2', 0.520833, 14, 1, '2017-09-17 11:50:44'),
(108, 1218, '2', -0.75, 10, 0, '2017-09-17 11:50:44'),
(108, 1276, '2', -0.949219, 14, 0, '2017-09-17 11:50:44'),
(108, 1183, '2', 0.892562, 10, 1, '2017-09-17 11:50:44'),
(108, 1175, '4', 0.949219, 14, 1, '2017-09-17 11:50:44'),
(108, 1220, '4', -0.1875, 21, 0, '2017-09-17 11:50:44'),
(108, 1200, '2', -0.231481, 26, 0, '2017-09-17 11:50:44'),
(108, 1294, '2', -0.0208333, 22, 0, '2017-09-17 11:50:44'),
(108, 1208, '1', 0.75, 25, 1, '2017-09-17 11:50:44'),
(108, 1282, '4', -0.213333, 22, 0, '2017-09-17 11:50:44'),
(108, 1217, '2', -0.0675, 17, 0, '2017-09-17 11:50:45'),
(108, 1171, '1', -0.3675, 13, 0, '2017-09-17 11:50:45'),
(108, 1287, '2', -0.574219, 27, 0, '2017-09-17 11:50:45'),
(108, 1219, '2', -0.0557851, 19, 0, '2017-09-17 11:50:45'),
(108, 1191, '3', 1.53061, 8, 1, '2017-09-17 11:50:45'),
(108, 1269, '2', -0.688802, 25, 0, '2017-09-17 11:50:45'),
(109, 1198, '0', -0.0075, 20, 0, '2017-09-17 11:50:46'),
(109, 1196, '0', -0.00520833, 24, 0, '2017-09-17 11:50:46'),
(109, 1218, '1', -0.3675, 13, 0, '2017-09-17 11:50:46'),
(109, 1292, '1', 0.403333, 19, 1, '2017-09-17 11:50:46'),
(109, 1185, '1', -2.20408, 4, 0, '2017-09-17 11:50:46'),
(109, 1297, '1', -2.1675, 9, 0, '2017-09-17 11:50:46'),
(109, 1194, '4', -0.46301, 17, 0, '2017-09-17 11:50:46'),
(109, 1174, '4', -2.55621, 2, 0, '2017-09-17 11:50:46'),
(109, 1172, '1', -0.0675, 17, 0, '2017-09-17 11:50:46'),
(109, 1291, '1', -0.48, 12, 0, '2017-09-17 11:50:47'),
(109, 1173, '1', -0.48, 12, 0, '2017-09-17 11:50:47'),
(109, 1270, '1', -2.04726, 8, 0, '2017-09-17 11:50:47'),
(109, 601, '4', 1.6081, 15, 1, '2017-09-17 11:50:47'),
(109, 1091, '3', -1.76333, 14, 0, '2017-09-17 11:50:47'),
(109, 594, '3', 1.92, 10, 1, '2017-09-17 11:50:47'),
(109, 624, '1', 1.47, 18, 1, '2017-09-17 11:50:47'),
(109, 605, '1', -0.240833, 43, 0, '2017-09-17 11:50:47'),
(109, 593, '1', 1.76333, 14, 1, '2017-09-17 11:50:47'),
(109, 598, '4', 2.00083, 11, 1, '2017-09-17 11:50:47'),
(109, 600, '3', 2.20408, 8, 1, '2017-09-17 11:50:48'),
(109, 609, '3', -0.48, 36, 0, '2017-09-17 11:50:48'),
(109, 1124, '3', -1.92, 12, 0, '2017-09-17 11:50:48'),
(109, 615, '2', 0.963333, 26, 1, '2017-09-17 11:50:48'),
(109, 1311, '4', 0.8112, 24, 1, '2017-09-17 11:50:48'),
(109, 1317, '4', -1.20333, 22, 0, '2017-09-17 11:50:48'),
(109, 854, '1', 1.47, 21, 1, '2017-09-17 11:50:48'),
(109, 597, '1', -1.90226, 11, 0, '2017-09-17 11:50:48'),
(109, 599, '1', 0.6075, 33, 1, '2017-09-17 11:50:48'),
(109, 403, '4', 1.76333, 14, 1, '2017-09-17 11:50:48'),
(109, 603, '1', 0.933062, 23, 1, '2017-09-17 11:50:48'),
(109, 1096, '1', -2.2, 16, 0, '2017-09-17 11:50:48'),
(109, 606, '1', -1.47, 18, 0, '2017-09-17 11:50:49'),
(109, 595, '4', 0.443787, 32, 1, '2017-09-17 11:50:49'),
(109, 619, '4', 1.92, 12, 1, '2017-09-17 11:50:49'),
(109, 852, '2', -1.54083, 17, 0, '2017-09-17 11:50:49'),
(109, 613, '1', -1.47, 18, 0, '2017-09-17 11:50:49'),
(109, 602, '4', -0.421875, 40, 0, '2017-09-17 11:50:49'),
(109, 1308, '3', 0.9075, 27, 1, '2017-09-17 11:50:49'),
(109, 1318, '1', -1.30963, 19, 0, '2017-09-17 11:50:49'),
(109, 607, '1', -1.04177, 23, 0, '2017-09-17 11:50:49'),
(109, 622, '2', 2.25333, 8, 1, '2017-09-17 11:50:49'),
(109, 850, '1', -2.25333, 8, 0, '2017-09-17 11:50:49'),
(109, 1301, '1', -2.21558, 9, 0, '2017-09-17 11:50:49'),
(109, 1089, '4', -2.43, 6, 0, '2017-09-17 11:50:50'),
(109, 611, '2', -0.3468, 33, 0, '2017-09-17 11:50:50'),
(109, 596, '2', -0.988683, 23, 0, '2017-09-17 11:50:50'),
(109, 614, '2', -2.37037, 6, 0, '2017-09-17 11:50:50'),
(109, 604, '2', -1.76333, 14, 0, '2017-09-17 11:50:50'),
(109, 853, '2', 2.43, 6, 1, '2017-09-17 11:50:50'),
(109, 996, '4', -0.6348, 27, 0, '2017-09-17 11:50:50'),
(109, 1310, '4', 1.77515, 12, 1, '2017-09-17 11:50:50'),
(109, 1303, '1', 1.02083, 25, 1, '2017-09-17 11:50:50'),
(109, 1106, '0', 0, 11, -1, '2017-09-17 11:50:50'),
(109, 1092, '0', 0, 13, -1, '2017-09-17 11:50:50'),
(109, 1340, '3', -0.377732, 40, 0, '2017-09-17 11:50:51'),
(109, 1331, '0', 0, 24, -1, '2017-09-17 11:50:51'),
(109, 1320, '3', 1.08, 20, 1, '2017-09-17 11:50:51'),
(109, 1313, '2', 1.56481, 15, 1, '2017-09-17 11:50:51'),
(109, 1341, '3', -0.9075, 27, 0, '2017-09-17 11:50:51'),
(109, 1332, '3', 1.76333, 14, 1, '2017-09-17 11:50:51'),
(109, 1322, '3', 2.37964, 7, 1, '2017-09-17 11:50:51'),
(109, 1338, '2', 0.979592, 24, 1, '2017-09-17 11:50:51'),
(109, 1315, '2', -1.64893, 15, 0, '2017-09-17 11:50:51'),
(109, 1343, '2', -2.5392, 4, 0, '2017-09-17 11:50:51'),
(109, 1337, '1', -0.75, 32, 0, '2017-09-17 11:50:51'),
(109, 1329, '3', 2.34083, 7, 1, '2017-09-17 11:50:52'),
(109, 1325, '1', 1.76881, 13, 1, '2017-09-17 11:50:52'),
(109, 1326, '1', 1.28775, 20, 1, '2017-09-17 11:50:52'),
(109, 1113, '1', 2.3168, 8, 1, '2017-09-17 11:50:52'),
(109, 1307, '1', -2.49394, 6, 0, '2017-09-17 11:50:52'),
(109, 1335, '1', -2.1132, 9, 0, '2017-09-17 11:50:52'),
(109, 1324, '3', 1.21488, 24, 1, '2017-09-17 11:50:52'),
(109, 1323, '3', 2.29688, 8, 1, '2017-09-17 11:50:52'),
(109, 1327, '3', 1.3068, 17, 1, '2017-09-17 11:50:52'),
(109, 1333, '2', 2.52083, 5, 1, '2017-09-17 11:50:52'),
(109, 1321, '2', -2.625, 8, 0, '2017-09-17 11:50:52'),
(109, 1126, '1', -0.9075, 27, 0, '2017-09-17 11:50:53'),
(109, 1312, '1', -2.08333, 11, 0, '2017-09-17 11:50:53'),
(109, 1334, '4', 2.00083, 11, 1, '2017-09-17 11:50:53'),
(109, 1103, '1', -0.925926, 32, 0, '2017-09-17 11:50:53'),
(109, 1132, '2', -2.43, 6, 0, '2017-09-17 11:50:53'),
(109, 1328, '4', -0.9075, 27, 0, '2017-09-17 11:50:53'),
(109, 1339, '2', 1.92, 12, 1, '2017-09-17 11:50:53'),
(109, 995, '4', 2.00083, 11, 1, '2017-09-17 11:50:53'),
(109, 1090, '4', -0.75, 30, 0, '2017-09-17 11:50:53'),
(109, 1118, '4', -2.61333, 4, 0, '2017-09-17 11:50:53'),
(109, 1349, '4', -2.61333, 4, 0, '2017-09-17 11:50:53'),
(109, 1351, '4', 2.43, 6, 1, '2017-09-17 11:50:54'),
(109, 1345, '4', -2.2376, 9, 0, '2017-09-17 11:50:54'),
(109, 1108, '2', -2.1132, 9, 0, '2017-09-17 11:50:54'),
(109, 1360, '2', 2.61333, 4, 1, '2017-09-17 11:50:54'),
(109, 1304, '2', 1.6081, 15, 1, '2017-09-17 11:50:54'),
(109, 1352, '2', -1.76333, 14, 0, '2017-09-17 11:50:54'),
(109, 1347, '3', 2.27263, 7, 1, '2017-09-17 11:50:54'),
(109, 1355, '1', 2.08333, 10, 1, '2017-09-17 11:50:54'),
(109, 1350, '1', 2.52083, 5, 1, '2017-09-17 11:50:54'),
(109, 1905, '2', -0.958412, 20, 0, '2017-09-17 11:50:54'),
(109, 1886, '3', 1.94676, 7, 1, '2017-09-17 11:50:54'),
(109, 1899, '3', 2.15643, 7, 1, '2017-09-17 11:50:54'),
(109, 1935, '4', -2.05141, 9, 0, '2017-09-17 11:50:55'),
(109, 1953, '0', 0, 10, -1, '2017-09-17 11:50:55'),
(109, 1916, '1', 1.80589, 13, 1, '2017-09-17 11:50:55'),
(109, 2148, '0', 0, 17, -1, '2017-09-17 11:50:55'),
(109, 1895, '4', 1.11153, 18, 1, '2017-09-17 11:50:55'),
(109, 1913, '0', 0, 8, -1, '2017-09-17 11:50:55'),
(109, 1924, '4', 1.14446, 13, 1, '2017-09-17 11:50:55'),
(109, 1907, '3', 1.92, 8, 1, '2017-09-17 11:50:55'),
(109, 1910, '3', -1.88021, 10, 0, '2017-09-17 11:50:55'),
(109, 1946, '3', -2.1675, 6, 0, '2017-09-17 11:50:55'),
(109, 2157, '3', -2.20408, 8, 0, '2017-09-17 11:50:55'),
(109, 1938, '4', -1.6875, 12, 0, '2017-09-17 11:50:56'),
(109, 1928, '4', -0.0648789, 29, 0, '2017-09-17 11:50:56'),
(109, 1932, '4', -1.27599, 16, 0, '2017-09-17 11:50:56'),
(109, 1890, '2', -0.75, 19, 0, '2017-09-17 11:50:56'),
(109, 1943, '2', -2.46387, 6, 0, '2017-09-17 11:50:56'),
(109, 1949, '2', -2.26843, 6, 0, '2017-09-17 11:50:56'),
(109, 1931, '4', -1.47, 12, 0, '2017-09-17 11:50:56'),
(109, 1902, '1', 0.495117, 19, 1, '2017-09-17 11:50:56'),
(109, 2054, '1', -2.29688, 5, 0, '2017-09-17 11:50:56'),
(109, 2389, '3', -1.36688, 13, 0, '2017-09-17 11:50:56'),
(109, 2425, '1', -0.316875, 27, 0, '2017-09-17 11:50:56'),
(109, 2392, '1', -0.541875, 23, 0, '2017-09-17 11:50:56'),
(109, 2399, '1', -0.541875, 23, 0, '2017-09-17 11:50:57'),
(109, 2423, '2', -0.27, 28, 0, '2017-09-17 11:50:57'),
(109, 2398, '2', 0.27, 28, 1, '2017-09-17 11:50:57'),
(109, 2424, '0', 0, 28, -1, '2017-09-17 11:50:57'),
(109, 2417, '0', 0, 1, -1, '2017-09-17 11:50:57'),
(109, 2441, '4', -0.3675, 26, 0, '2017-09-17 11:50:57'),
(109, 2452, '4', 0.27, 28, 1, '2017-09-17 11:50:57'),
(109, 2397, '0', 0, 17, -1, '2017-09-17 11:50:57'),
(109, 2426, '2', -0.1875, 30, 0, '2017-09-17 11:50:57'),
(109, 2415, '4', 0.016875, 37, 1, '2017-09-17 11:50:57'),
(109, 2460, '4', -2.43, 4, 0, '2017-09-17 11:50:57'),
(109, 2388, '3', 2.04187, 7, 1, '2017-09-17 11:50:58'),
(109, 2393, '3', 1.47, 12, 1, '2017-09-17 11:50:58'),
(109, 2462, '3', -2.04187, 7, 0, '2017-09-17 11:50:58'),
(109, 2412, '2', -1.92, 8, 0, '2017-09-17 11:50:58'),
(109, 2437, '2', 2.29688, 5, 1, '2017-09-17 11:50:58'),
(109, 2421, '2', 1.57687, 11, 1, '2017-09-17 11:50:58'),
(109, 2463, '2', -1.6875, 10, 0, '2017-09-17 11:50:58'),
(109, 2436, '1', -0.75, 20, 0, '2017-09-17 11:50:58'),
(109, 2387, '4', 0.27, 28, 1, '2017-09-17 11:50:58'),
(109, 2433, '4', -2.29688, 5, 0, '2017-09-17 11:50:58'),
(109, 2395, '1', 1.47, 12, 1, '2017-09-17 11:50:58'),
(109, 2402, '1', -1.92, 8, 0, '2017-09-17 11:50:59'),
(109, 2396, '1', -1.80187, 9, 0, '2017-09-17 11:50:59'),
(109, 2390, '0', -0.001875, 40, 0, '2017-09-17 11:50:59'),
(109, 2391, '1', -2.04187, 7, 0, '2017-09-17 11:50:59'),
(109, 2033, '1', -1.2398, 10, 0, '2017-09-17 11:50:59'),
(109, 712, '3', -1.17188, 9, 0, '2017-09-17 11:50:59'),
(109, 676, '2', 0.646684, 15, 1, '2017-09-17 11:50:59'),
(109, 2031, '4', -1.08, 12, 0, '2017-09-17 11:50:59'),
(109, 699, '4', 0.3675, 13, 1, '2017-09-17 11:50:59'),
(109, 716, '1', -0.536982, 15, 0, '2017-09-17 11:50:59'),
(109, 1985, '3', -1.41797, 10, 0, '2017-09-17 11:50:59'),
(109, 679, '1', 1.50521, 7, 1, '2017-09-17 11:51:00'),
(109, 2011, '1', -0.0133333, 28, 0, '2017-09-17 11:51:00'),
(109, 1996, '0', 0, 9, -1, '2017-09-17 11:51:00'),
(109, 2010, '1', 2.08333, 5, 1, '2017-09-17 11:51:00'),
(109, 1991, '4', 0.48, 18, 1, '2017-09-17 11:51:00'),
(109, 706, '4', 1.61333, 8, 1, '2017-09-17 11:51:00'),
(109, 690, '1', -0.12, 16, 0, '2017-09-17 11:51:00'),
(109, 659, '3', 0.9075, 9, 1, '2017-09-17 11:51:00'),
(109, 663, '1', 1.6875, 7, 1, '2017-09-17 11:51:00'),
(109, 1888, '1', 1.77515, 6, 1, '2017-09-17 11:51:00'),
(109, 703, '1', -1.88021, 5, 0, '2017-09-17 11:51:00'),
(109, 2013, '1', -1.08, 12, 0, '2017-09-17 11:51:01'),
(109, 2008, '4', 1.47, 9, 1, '2017-09-17 11:51:01'),
(109, 658, '4', -1.47, 6, 0, '2017-09-17 11:51:01'),
(109, 680, '3', 0.382653, 18, 1, '2017-09-17 11:51:01'),
(109, 713, '3', 1.43787, 8, 1, '2017-09-17 11:51:01'),
(109, 1917, '3', 0.1875, 21, 1, '2017-09-17 11:51:01'),
(109, 1915, '1', -1.2398, 10, 0, '2017-09-17 11:51:01'),
(109, 1919, '1', -1.92, 14, 0, '2017-09-17 11:51:01'),
(109, 1930, '0', 0, 10, -1, '2017-09-17 11:51:01'),
(109, 1906, '1', -1.61333, 8, 0, '2017-09-17 11:51:01'),
(109, 1880, '2', -0.0934256, 28, 0, '2017-09-17 11:51:01'),
(109, 1892, '2', -0.998521, 11, 0, '2017-09-17 11:51:02'),
(109, 2042, '1', -1.6875, 8, 0, '2017-09-17 11:51:02'),
(109, 664, '3', 1.03806, 14, 1, '2017-09-17 11:51:02'),
(109, 1920, '2', 1.29199, 11, 1, '2017-09-17 11:51:02'),
(109, 1922, '1', -1.33333, 10, 0, '2017-09-17 11:51:02'),
(109, 687, '0', 0, 9, -1, '2017-09-17 11:51:02'),
(109, 1912, '1', -1.85204, 6, 0, '2017-09-17 11:51:02'),
(109, 1904, '4', -1.08, 12, 0, '2017-09-17 11:51:02'),
(109, 1908, '3', -0.75, 16, 0, '2017-09-17 11:51:02'),
(109, 1921, '1', -0.963333, 13, 0, '2017-09-17 11:51:02'),
(109, 1918, '3', 1.6875, 7, 1, '2017-09-17 11:51:03'),
(109, 1909, '1', -0.574219, 18, 0, '2017-09-17 11:51:03'),
(109, 698, '4', 1.76333, 7, 1, '2017-09-17 11:51:03'),
(109, 714, '1', 1.14446, 13, 1, '2017-09-17 11:51:03'),
(109, 1927, '3', -1.47, 9, 0, '2017-09-17 11:51:03'),
(109, 704, '3', -0.403333, 19, 0, '2017-09-17 11:51:03'),
(109, 1926, '4', -1.5498, 9, 0, '2017-09-17 11:51:03'),
(109, 689, '1', -1.76333, 7, 0, '2017-09-17 11:51:03'),
(109, 1914, '4', 1.10587, 11, 1, '2017-09-17 11:51:03'),
(109, 1929, '4', -1.25606, 12, 0, '2017-09-17 11:51:03'),
(109, 1923, '2', -1.5498, 9, 0, '2017-09-17 11:51:03'),
(109, 665, '1', 0.0533333, 26, 1, '2017-09-17 11:51:04'),
(109, 685, '3', -0.27, 14, 0, '2017-09-17 11:51:04'),
(109, 1911, '3', 1.6875, 8, 1, '2017-09-17 11:51:04'),
(109, 2034, '2', -0.653333, 16, 0, '2017-09-17 11:51:04'),
(109, 717, '2', -0.668981, 19, 0, '2017-09-17 11:51:04'),
(109, 1891, '1', -0.27, 21, 0, '2017-09-17 11:51:04'),
(109, 1925, '1', 0.619835, 24, 1, '2017-09-17 11:51:04'),
(109, 1941, '1', -1.56481, 10, 0, '2017-09-17 11:51:04'),
(110, 1907, '3', 0.226875, 29, 1, '2017-09-17 11:51:05'),
(110, 1886, '3', 0.333333, 24, 1, '2017-09-17 11:51:05'),
(110, 1910, '4', -0.813802, 23, 0, '2017-09-17 11:51:05'),
(110, 2157, '0', 0, 28, -1, '2017-09-17 11:51:05'),
(110, 1949, '2', -0.816635, 22, 0, '2017-09-17 11:51:05'),
(110, 1931, '4', -0.991875, 17, 0, '2017-09-17 11:51:05'),
(110, 1935, '4', -0.1875, 39, 0, '2017-09-17 11:51:06'),
(110, 1890, '2', -1.51454, 11, 0, '2017-09-17 11:51:06'),
(110, 1953, '4', 0.151875, 31, 1, '2017-09-17 11:51:06'),
(110, 1932, '1', 0.567108, 26, 1, '2017-09-17 11:51:06'),
(110, 1946, '2', -0.091875, 33, 0, '2017-09-17 11:51:06'),
(110, 1895, '4', 0.17155, 35, 1, '2017-09-17 11:51:06'),
(110, 1916, '4', -0.0722354, 49, 0, '2017-09-17 11:51:06'),
(110, 2148, '2', 0.03, 36, 1, '2017-09-17 11:51:06'),
(110, 1905, '4', 0.409735, 29, 1, '2017-09-17 11:51:06'),
(110, 1899, '3', 1.54395, 13, 1, '2017-09-17 11:51:06'),
(110, 1913, '0', -0.000833333, 60, 0, '2017-09-17 11:51:06'),
(110, 1902, '0', -0.00292969, 32, 0, '2017-09-17 11:51:07'),
(110, 1924, '3', -0.259516, 24, 0, '2017-09-17 11:51:07'),
(110, 1928, '4', -0.0415225, 30, 0, '2017-09-17 11:51:07'),
(110, 1943, '1', 0.123779, 51, 1, '2017-09-17 11:51:07'),
(110, 1938, '4', -1.09505, 19, 0, '2017-09-17 11:51:07'),
(110, 2052, '3', 0.816635, 22, 1, '2017-09-17 11:51:07'),
(110, 2048, '4', -2.38327, 5, 0, '2017-09-17 11:51:07'),
(110, 2054, '3', -0.151875, 31, 0, '2017-09-17 11:51:07'),
(110, 2057, '4', 1.20333, 11, 1, '2017-09-17 11:51:07'),
(110, 2053, '4', 0.619835, 24, 1, '2017-09-17 11:51:08'),
(110, 1992, '1', 0.046875, 35, 1, '2017-09-17 11:51:08'),
(110, 1980, '1', -0.0991736, 36, 0, '2017-09-17 11:51:08'),
(110, 1982, '1', 0.17155, 35, 1, '2017-09-17 11:51:08'),
(110, 1986, '2', -0.0192, 46, 0, '2017-09-17 11:51:08'),
(110, 1976, '4', -0.0768, 42, 0, '2017-09-17 11:51:08'),
(110, 1989, '1', 1.17188, 18, 1, '2017-09-17 11:51:08'),
(110, 1959, '1', 0.00443787, 50, 1, '2017-09-17 11:51:08'),
(110, 1958, '4', -0.276467, 39, 0, '2017-09-17 11:51:08'),
(110, 2060, '3', 1.47, 12, 1, '2017-09-17 11:51:08'),
(110, 1972, '0', 0, 43, -1, '2017-09-17 11:51:08'),
(110, 1956, '4', 0.506059, 33, 1, '2017-09-17 11:51:08'),
(110, 1979, '0', 0, 18, -1, '2017-09-17 11:51:09'),
(110, 1968, '1', 0.574219, 27, 1, '2017-09-17 11:51:09'),
(110, 1960, '1', 0.75, 30, 1, '2017-09-17 11:51:09'),
(110, 1961, '3', 0.0588, 43, 1, '2017-09-17 11:51:09'),
(110, 2082, '4', -1.3068, 17, 0, '2017-09-17 11:51:09'),
(110, 2084, '1', 1.41797, 15, 1, '2017-09-17 11:51:09'),
(110, 2073, '4', -0.2352, 36, 0, '2017-09-17 11:51:09'),
(110, 2081, '0', -0.00110947, 52, 0, '2017-09-17 11:51:09'),
(110, 2066, '3', 0.016875, 37, 1, '2017-09-17 11:51:09'),
(110, 2080, '0', -0.00170068, 42, 0, '2017-09-17 11:51:09'),
(110, 2074, '3', -0.0557851, 38, 0, '2017-09-17 11:51:09'),
(110, 3400, '0', -0.00292969, 32, 0, '2017-09-17 11:51:09'),
(110, 3405, '1', 0.48, 18, 1, '2017-09-17 11:51:10'),
(110, 3397, '1', -0.354492, 21, 0, '2017-09-17 11:51:10'),
(110, 3415, '1', -0.963333, 13, 0, '2017-09-17 11:51:10'),
(110, 3404, '4', 0.354492, 21, 1, '2017-09-17 11:51:10'),
(110, 3398, '2', -1.5498, 9, 0, '2017-09-17 11:51:10'),
(110, 3412, '4', 1.20333, 11, 1, '2017-09-17 11:51:10'),
(110, 3401, '4', -0.0117188, 30, 0, '2017-09-17 11:51:10'),
(110, 3407, '1', 0.75, 15, 1, '2017-09-17 11:51:10'),
(110, 3410, '3', -0.75, 15, 0, '2017-09-17 11:51:10'),
(110, 3414, '4', -0.963333, 13, 0, '2017-09-17 11:51:10'),
(110, 3413, '1', -0.653333, 16, 0, '2017-09-17 11:51:10'),
(110, 3411, '3', -0.0133333, 28, 0, '2017-09-17 11:51:11'),
(110, 3408, '1', -0.213333, 22, 0, '2017-09-17 11:51:11'),
(110, 3416, '0', -0.00333333, 30, 0, '2017-09-17 11:51:11'),
(110, 3402, '1', 0.1875, 24, 1, '2017-09-17 11:51:11'),
(110, 3403, '2', 0.237305, 23, 1, '2017-09-17 11:51:11'),
(110, 3399, '1', -0.574219, 18, 0, '2017-09-17 11:51:11'),
(110, 3409, '2', 0.00333333, 29, 1, '2017-09-17 11:51:11'),
(110, 3406, '0', -0.00333333, 30, 0, '2017-09-17 11:51:11'),
(110, 3426, '1', 0.303719, 30, 1, '2017-09-17 11:51:11'),
(110, 3420, '2', 0.683368, 23, 1, '2017-09-17 11:51:11'),
(110, 3431, '0', -0.00154959, 44, 0, '2017-09-17 11:51:11'),
(110, 3422, '4', -0.892562, 20, 0, '2017-09-17 11:51:12'),
(110, 3418, '0', -0.00154959, 44, 0, '2017-09-17 11:51:12'),
(110, 3427, '4', 1.04752, 18, 1, '2017-09-17 11:51:12'),
(110, 3436, '1', -0.75, 22, 0, '2017-09-17 11:51:12'),
(110, 3430, '1', 1.04752, 18, 1, '2017-09-17 11:51:12'),
(110, 3433, '2', 0.819731, 21, 1, '2017-09-17 11:51:12'),
(110, 3428, '3', -0.1875, 33, 0, '2017-09-17 11:51:12'),
(110, 3419, '3', -1.04752, 18, 0, '2017-09-17 11:51:12'),
(110, 3437, '2', 0.303719, 30, 1, '2017-09-17 11:51:12'),
(110, 3425, '3', 0.22314, 32, 1, '2017-09-17 11:51:12'),
(110, 3432, '1', -0.892562, 20, 0, '2017-09-17 11:51:12'),
(110, 3434, '4', -0.892562, 20, 0, '2017-09-17 11:51:12'),
(110, 3423, '2', -0.892562, 20, 0, '2017-09-17 11:51:13'),
(110, 3417, '3', 0.396694, 28, 1, '2017-09-17 11:51:13'),
(110, 3424, '1', -0.559401, 25, 0, '2017-09-17 11:51:13'),
(110, 3429, '1', 1.79132, 10, 1, '2017-09-17 11:51:13'),
(110, 3421, '3', -0.396694, 28, 0, '2017-09-17 11:51:13'),
(110, 3435, '0', 0, 13, -1, '2017-09-17 11:51:13'),
(110, 3448, '1', -0.58391, 19, 0, '2017-09-17 11:51:13'),
(110, 3442, '1', -0.00259516, 33, 0, '2017-09-17 11:51:13'),
(110, 3451, '1', -0.75, 17, 0, '2017-09-17 11:51:13'),
(110, 3438, '0', -0.00259516, 34, 0, '2017-09-17 11:51:13'),
(110, 3440, '2', 0.0648789, 29, 1, '2017-09-17 11:51:13'),
(110, 3453, '3', -1.37284, 11, 0, '2017-09-17 11:51:14'),
(110, 3446, '0', -0.00259516, 34, 0, '2017-09-17 11:51:14'),
(110, 3444, '0', -0.00259516, 34, 0, '2017-09-17 11:51:14'),
(110, 3439, '2', -0.373702, 22, 0, '2017-09-17 11:51:14'),
(110, 3455, '3', -1.37284, 11, 0, '2017-09-17 11:51:14'),
(110, 3466, '1', -0.373702, 22, 0, '2017-09-17 11:51:14'),
(110, 3457, '0', -0.00259516, 34, 0, '2017-09-17 11:51:14'),
(110, 3462, '1', -0.0648789, 29, 0, '2017-09-17 11:51:14'),
(110, 3456, '2', -0.0233564, 31, 0, '2017-09-17 11:51:14'),
(110, 3463, '0', 0, 19, -1, '2017-09-17 11:51:14'),
(110, 3450, '0', -0.00259516, 34, 0, '2017-09-17 11:51:14'),
(110, 3470, '2', 0.314014, 23, 1, '2017-09-17 11:51:15'),
(110, 3458, '0', -0.00259516, 34, 0, '2017-09-17 11:51:15'),
(110, 3460, '2', 0.127163, 27, 1, '2017-09-17 11:51:15'),
(110, 3468, '4', -1.62197, 9, 0, '2017-09-17 11:51:15'),
(110, 3508, '2', -0.226875, 29, 0, '2017-09-17 11:51:15'),
(110, 3449, '0', -0.0075, 20, 0, '2017-09-17 11:51:15'),
(110, 3504, '0', -0.00443787, 26, 0, '2017-09-17 11:51:15'),
(110, 3452, '0', 0, 16, -1, '2017-09-17 11:51:15'),
(110, 3443, '0', 0, 2, -1, '2017-09-17 11:51:15'),
(110, 3487, '0', 0, 2, -1, '2017-09-17 11:51:15'),
(110, 3494, '0', -0.00520833, 24, 0, '2017-09-17 11:51:15'),
(110, 3489, '0', -0.75, 11, 0, '2017-09-17 11:51:15'),
(110, 1186, '0', -0.00382653, 28, 0, '2017-09-17 11:51:16'),
(110, 1203, '3', 0.0833333, 25, 1, '2017-09-17 11:51:16'),
(110, 1216, '0', 0, 15, -1, '2017-09-17 11:51:16'),
(110, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:51:16'),
(110, 1291, '1', -0.03, 18, 0, '2017-09-17 11:51:16'),
(110, 1196, '4', 0.130208, 19, 1, '2017-09-17 11:51:16'),
(110, 1218, '0', 0, 15, -1, '2017-09-17 11:51:16'),
(110, 1194, '4', -0.309949, 19, 0, '2017-09-17 11:51:16'),
(110, 1169, '2', 0.0833333, 20, 1, '2017-09-17 11:51:16'),
(110, 1184, '4', 0.255208, 17, 1, '2017-09-17 11:51:16'),
(110, 1297, '3', 1.02083, 25, 1, '2017-09-17 11:51:16'),
(110, 1198, '4', 0.0075, 19, 1, '2017-09-17 11:51:17'),
(110, 1190, '0', -0.00382653, 28, 0, '2017-09-17 11:51:17'),
(110, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:51:17'),
(110, 1261, '2', -0.0747922, 32, 0, '2017-09-17 11:51:17'),
(110, 1173, '2', 0, 20, 1, '2017-09-17 11:51:17'),
(110, 1183, '2', 0.00619835, 21, 1, '2017-09-17 11:51:17'),
(110, 1170, '2', 0.421875, 15, 1, '2017-09-17 11:51:17'),
(110, 1177, '2', 1.04752, 9, 1, '2017-09-17 11:51:17'),
(110, 1172, '0', -0.0075, 20, 0, '2017-09-17 11:51:17'),
(110, 1276, '2', -0.84668, 15, 0, '2017-09-17 11:51:17'),
(110, 1174, '0', 0, 23, -1, '2017-09-17 11:51:17'),
(110, 1197, '1', 0.1875, 18, 1, '2017-09-17 11:51:18'),
(110, 1292, '3', -0.12, 24, 0, '2017-09-17 11:51:18'),
(110, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:51:18'),
(110, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:51:18'),
(110, 1263, '1', 0.6075, 22, 1, '2017-09-17 11:51:18'),
(110, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:51:18'),
(110, 1282, '0', -0.00333333, 30, 0, '2017-09-17 11:51:18'),
(110, 1175, '0', -0.00292969, 32, 0, '2017-09-17 11:51:18'),
(110, 1191, '3', 1.2398, 10, 1, '2017-09-17 11:51:18'),
(110, 1217, '1', 0, 20, 0, '2017-09-17 11:51:18'),
(110, 1268, '0', -0.00130208, 48, 0, '2017-09-17 11:51:18'),
(110, 1265, '0', -0.00110947, 52, 0, '2017-09-17 11:51:19'),
(110, 1189, '1', -0.0344388, 25, 0, '2017-09-17 11:51:19'),
(110, 1208, '0', -0.0012, 50, 0, '2017-09-17 11:51:19'),
(110, 1202, '3', -0.1875, 27, 0, '2017-09-17 11:51:19'),
(110, 1220, '0', -0.00382653, 28, 0, '2017-09-17 11:51:19'),
(110, 1284, '0', -0.0075, 20, 0, '2017-09-17 11:51:19'),
(110, 1219, '0', -0.00619835, 22, 0, '2017-09-17 11:51:19'),
(110, 1171, '4', 0.12, 16, 1, '2017-09-17 11:51:19'),
(110, 1257, '0', -0.00130208, 48, 0, '2017-09-17 11:51:19'),
(110, 1281, '0', -0.00333333, 30, 0, '2017-09-17 11:51:19'),
(110, 1293, '2', 0.421875, 15, 1, '2017-09-17 11:51:19'),
(110, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:51:20'),
(110, 1199, '0', -0.00292969, 32, 0, '2017-09-17 11:51:20'),
(110, 1200, '0', -0.00231481, 36, 0, '2017-09-17 11:51:20'),
(110, 1294, '3', 0, 24, 1, '2017-09-17 11:51:20'),
(110, 1287, '1', -0.421875, 30, 0, '2017-09-17 11:51:20'),
(110, 1209, '0', -0.0012, 50, 0, '2017-09-17 11:51:20'),
(110, 173, '1', -2.1675, 15, 0, '2017-09-17 11:51:20'),
(110, 1250, '1', 1.76333, 14, 1, '2017-09-17 11:51:20'),
(110, 1299, '1', -2.3168, 8, 0, '2017-09-17 11:51:20'),
(110, 1229, '0', -0.00102881, 54, 0, '2017-09-17 11:51:20'),
(110, 1295, '3', -0.333333, 16, 0, '2017-09-17 11:51:20'),
(110, 1275, '3', -0.0164609, 50, 0, '2017-09-17 11:51:21'),
(110, 1298, '3', -2.80333, 2, 0, '2017-09-17 11:51:21'),
(110, 171, '3', -2.77922, 3, 0, '2017-09-17 11:51:21'),
(110, 1264, '3', -2.56267, 5, 0, '2017-09-17 11:51:21'),
(110, 1206, '3', -1.2675, 21, 0, '2017-09-17 11:51:21'),
(110, 868, '0', 0, 11, -1, '2017-09-17 11:51:21'),
(110, 1125, '0', 0, 22, -1, '2017-09-17 11:51:21'),
(110, 1639, '0', 0, 0, -1, '2017-09-17 11:51:21'),
(110, 340, '1', -1.57687, 22, 0, '2017-09-17 11:51:21'),
(110, 2401, '1', -2.63033, 7, 0, '2017-09-17 11:51:22'),
(110, 326, '1', -1.00148, 38, 0, '2017-09-17 11:51:22'),
(110, 865, '1', -1.76333, 14, 0, '2017-09-17 11:51:22'),
(110, 1091, '1', -1.76333, 14, 0, '2017-09-17 11:51:22'),
(110, 604, '3', 1.76333, 14, 1, '2017-09-17 11:51:22'),
(110, 1089, '2', -1.61333, 16, 0, '2017-09-17 11:51:22'),
(110, 854, '0', 0, 46, -1, '2017-09-17 11:51:22'),
(110, 1318, '0', 0, 47, -1, '2017-09-17 11:51:22'),
(110, 596, '0', 0, 48, -1, '2017-09-17 11:51:22'),
(110, 602, '0', -0.000732422, 64, 0, '2017-09-17 11:51:22'),
(110, 609, '0', -0.000833333, 60, 0, '2017-09-17 11:51:22'),
(110, 624, '2', -2.25333, 8, 0, '2017-09-17 11:51:23'),
(110, 595, '2', -2.77367, 2, 0, '2017-09-17 11:51:23'),
(111, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:51:23'),
(111, 1270, '0', -0.00141777, 46, 0, '2017-09-17 11:51:23'),
(111, 1263, '3', -0.676875, 21, 0, '2017-09-17 11:51:24'),
(111, 1190, '4', 1.2398, 10, 1, '2017-09-17 11:51:24'),
(111, 1218, '2', -1.47, 6, 0, '2017-09-17 11:51:24'),
(111, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:51:24'),
(111, 1170, '2', 0.255208, 17, 1, '2017-09-17 11:51:24'),
(111, 1173, '2', 0.75, 10, 1, '2017-09-17 11:51:24'),
(111, 1292, '2', -1.08, 12, 0, '2017-09-17 11:51:24'),
(111, 1174, '3', 0.359467, 17, 1, '2017-09-17 11:51:24'),
(111, 1198, '4', 0.6075, 11, 1, '2017-09-17 11:51:24'),
(111, 1184, '0', -0.00520833, 24, 0, '2017-09-17 11:51:24'),
(111, 1194, '0', 0, 24, -1, '2017-09-17 11:51:24'),
(111, 1177, '2', 1.04752, 9, 1, '2017-09-17 11:51:24'),
(111, 1196, '4', 0.333333, 16, 1, '2017-09-17 11:51:25'),
(111, 1197, '1', 1.33333, 8, 1, '2017-09-17 11:51:25'),
(111, 1172, '4', 1.08, 8, 1, '2017-09-17 11:51:25'),
(111, 1216, '4', 1.02083, 10, 1, '2017-09-17 11:51:25'),
(111, 1183, '2', 1.39463, 7, 1, '2017-09-17 11:51:25'),
(111, 1186, '3', 1.53061, 8, 1, '2017-09-17 11:51:25'),
(111, 1203, '3', 0.0133333, 28, 1, '2017-09-17 11:51:25'),
(111, 1276, '0', 0, 28, -1, '2017-09-17 11:51:25'),
(111, 1169, '2', 1.17188, 9, 1, '2017-09-17 11:51:25'),
(111, 1210, '0', 0, 13, -1, '2017-09-17 11:51:25'),
(111, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:51:25'),
(111, 1195, '4', 0.1875, 15, 1, '2017-09-17 11:51:26'),
(111, 1297, '3', 1.84083, 13, 1, '2017-09-17 11:51:26'),
(111, 1200, '3', -1.41667, 19, 0, '2017-09-17 11:51:26'),
(111, 1291, '4', 0.6075, 11, 1, '2017-09-17 11:51:26'),
(111, 1281, '1', -1, 20, 0, '2017-09-17 11:51:26'),
(111, 1268, '3', -0.376302, 31, 0, '2017-09-17 11:51:26'),
(111, 1287, '0', -0.00130208, 48, 0, '2017-09-17 11:51:26'),
(111, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:51:26'),
(111, 1191, '3', 1.10587, 11, 1, '2017-09-17 11:51:26'),
(111, 1219, '3', 1.39463, 7, 1, '2017-09-17 11:51:26'),
(111, 1208, '0', -0.06, 50, 0, '2017-09-17 11:51:26'),
(111, 1282, '2', -1.8, 12, 0, '2017-09-17 11:51:27'),
(111, 1294, '4', -0.421875, 15, 0, '2017-09-17 11:51:27'),
(111, 1284, '3', 1.08, 8, 1, '2017-09-17 11:51:27'),
(111, 1257, '0', -0.0625, 48, 0, '2017-09-17 11:51:27'),
(111, 1171, '3', -0.27, 14, 0, '2017-09-17 11:51:27'),
(111, 1265, '0', -0.00110947, 52, 0, '2017-09-17 11:51:27'),
(111, 1217, '3', 0.9075, 9, 1, '2017-09-17 11:51:27'),
(111, 1175, '4', 0.75, 24, 1, '2017-09-17 11:51:27'),
(111, 1202, '1', 1, 24, 1, '2017-09-17 11:51:27'),
(111, 1189, '3', 1.82143, 11, 1, '2017-09-17 11:51:27'),
(111, 1199, '3', 0.9375, 22, 1, '2017-09-17 11:51:28'),
(111, 1220, '0', -0.107143, 28, 0, '2017-09-17 11:51:28'),
(111, 1293, '2', 1.5, 12, 1, '2017-09-17 11:51:28'),
(111, 1250, '0', -0.05, 60, 0, '2017-09-17 11:51:28'),
(111, 1298, '1', 1.55, 29, 1, '2017-09-17 11:51:28'),
(111, 1295, '3', -0.5, 20, 0, '2017-09-17 11:51:28'),
(111, 1209, '0', -0.06, 50, 0, '2017-09-17 11:51:28'),
(111, 1176, '4', 2.25, 7, 1, '2017-09-17 11:51:28'),
(111, 1204, '4', 1, 32, 1, '2017-09-17 11:51:28'),
(111, 1299, '3', 1.69381, 38, 1, '2017-09-17 11:51:28'),
(111, 1188, '1', 2.15104, 11, 1, '2017-09-17 11:51:28'),
(111, 1286, '0', -0.195743, 60, 0, '2017-09-17 11:51:29'),
(111, 1229, '0', -0.209987, 54, 0, '2017-09-17 11:51:29'),
(111, 172, '1', -2.02494, 49, 0, '2017-09-17 11:51:29'),
(111, 1187, '2', 0.870298, 27, 1, '2017-09-17 11:51:29'),
(111, 173, '1', -1.60139, 61, 0, '2017-09-17 11:51:29'),
(111, 1464, '2', 1.33333, 16, 1, '2017-09-17 11:51:29'),
(111, 3035, '2', 1.53061, 8, 1, '2017-09-17 11:51:29'),
(111, 1450, '4', 1.56481, 10, 1, '2017-09-17 11:51:29'),
(111, 1453, '1', 1.8252, 11, 1, '2017-09-17 11:51:29'),
(111, 3039, '1', 1.60207, 7, 1, '2017-09-17 11:51:29'),
(111, 1458, '0', 0, 11, -1, '2017-09-17 11:51:29'),
(111, 1460, '3', -1.03355, 19, 0, '2017-09-17 11:51:30'),
(111, 1463, '2', 0.125517, 35, 1, '2017-09-17 11:51:30'),
(111, 1461, '3', 2.15643, 7, 1, '2017-09-17 11:51:30'),
(111, 1465, '1', 1.53061, 8, 1, '2017-09-17 11:51:30'),
(111, 1487, '3', -1.76087, 19, 0, '2017-09-17 11:51:30'),
(111, 3051, '0', -0.00443787, 26, 0, '2017-09-17 11:51:30'),
(111, 1452, '2', 1.6875, 10, 1, '2017-09-17 11:51:30'),
(111, 2933, '1', -1.875, 9, 0, '2017-09-17 11:51:30'),
(111, 1466, '2', 0.6348, 27, 1, '2017-09-17 11:51:30'),
(111, 1456, '1', 1.6875, 10, 1, '2017-09-17 11:51:30'),
(111, 1474, '3', -2.07143, 13, 0, '2017-09-17 11:51:30'),
(111, 1462, '1', 1.6875, 10, 1, '2017-09-17 11:51:30'),
(111, 1477, '3', 1.38889, 29, 1, '2017-09-17 11:51:31'),
(111, 1470, '1', 2.28, 12, 1, '2017-09-17 11:51:31'),
(111, 1483, '3', -2.36842, 8, 0, '2017-09-17 11:51:31'),
(111, 1475, '4', -1.56522, 22, 0, '2017-09-17 11:51:31'),
(111, 1486, '4', -2.52273, 7, 0, '2017-09-17 11:51:31'),
(111, 3044, '3', 2.08333, 4, 1, '2017-09-17 11:51:31'),
(111, 1467, '3', 1.40083, 19, 1, '2017-09-17 11:51:31'),
(111, 1481, '4', -2.4, 8, 0, '2017-09-17 11:51:31'),
(111, 1459, '2', 1.80187, 9, 1, '2017-09-17 11:51:31'),
(111, 1478, '4', -1.65, 18, 0, '2017-09-17 11:51:31'),
(111, 1454, '3', -0.668981, 19, 0, '2017-09-17 11:51:31'),
(111, 1457, '4', 2.43, 4, 1, '2017-09-17 11:51:32'),
(111, 1472, '4', -2.475, 7, 0, '2017-09-17 11:51:32'),
(111, 1449, '0', 0, 8, -1, '2017-09-17 11:51:32'),
(111, 1451, '1', 0.0208333, 33, 1, '2017-09-17 11:51:32'),
(111, 1455, '1', 0.826875, 19, 1, '2017-09-17 11:51:32'),
(111, 2929, '3', -1.17188, 9, 0, '2017-09-17 11:51:32'),
(111, 3004, '2', -2.25333, 4, 0, '2017-09-17 11:51:32'),
(111, 1485, '4', 2.05141, 9, 1, '2017-09-17 11:51:32'),
(111, 1471, '4', 0.6075, 33, 1, '2017-09-17 11:51:32'),
(111, 1473, '3', -1.3068, 17, 0, '2017-09-17 11:51:32'),
(111, 3002, '3', -1.43787, 8, 0, '2017-09-17 11:51:33'),
(111, 1482, '2', -1.89824, 9, 0, '2017-09-17 11:51:33'),
(111, 1479, '4', -0.968492, 19, 0, '2017-09-17 11:51:33'),
(111, 3008, '1', -1.2398, 10, 0, '2017-09-17 11:51:33'),
(111, 1468, '2', 1.92, 8, 1, '2017-09-17 11:51:33'),
(111, 1480, '3', -1.7415, 10, 0, '2017-09-17 11:51:33'),
(111, 3000, '1', -0.130208, 19, 0, '2017-09-17 11:51:33'),
(111, 1484, '2', -2.20408, 6, 0, '2017-09-17 11:51:33'),
(111, 1476, '0', 0, 12, -1, '2017-09-17 11:51:33'),
(111, 1488, '3', -1.21488, 16, 0, '2017-09-17 11:51:33'),
(111, 1491, '3', -2.32823, 5, 0, '2017-09-17 11:51:34'),
(111, 1469, '2', 2.29688, 5, 1, '2017-09-17 11:51:34'),
(111, 1504, '1', 0.510469, 47, 1, '2017-09-17 11:51:34'),
(111, 1490, '1', 1.89824, 9, 1, '2017-09-17 11:51:34'),
(111, 1503, '0', -0.00141777, 46, 0, '2017-09-17 11:51:34'),
(111, 1497, '1', -0.491497, 25, 0, '2017-09-17 11:51:34'),
(111, 1499, '2', 0.409735, 29, 1, '2017-09-17 11:51:34'),
(111, 3062, '1', 1.29199, 11, 1, '2017-09-17 11:51:34'),
(111, 1501, '3', 2.2376, 6, 1, '2017-09-17 11:51:34'),
(111, 1496, '4', 1.48915, 13, 1, '2017-09-17 11:51:34'),
(111, 1492, '2', 2.12138, 7, 1, '2017-09-17 11:51:34'),
(111, 2947, '2', -0.48, 18, 0, '2017-09-17 11:51:35'),
(111, 1507, '0', -0.00110947, 52, 0, '2017-09-17 11:51:35'),
(111, 1502, '4', -1.54395, 13, 0, '2017-09-17 11:51:35'),
(111, 1495, '3', -1.33333, 14, 0, '2017-09-17 11:51:35'),
(111, 1500, '3', -0.0898669, 43, 0, '2017-09-17 11:51:35'),
(111, 1506, '2', -2.1168, 8, 0, '2017-09-17 11:51:35'),
(111, 1498, '3', 1.41797, 15, 1, '2017-09-17 11:51:35'),
(111, 1489, '3', -1.63435, 11, 0, '2017-09-17 11:51:35'),
(111, 3076, '1', 0.75, 15, 1, '2017-09-17 11:51:35'),
(111, 3054, '1', -0.12, 24, 0, '2017-09-17 11:51:35'),
(111, 1505, '1', 2.63672, 5, 1, '2017-09-17 11:51:35'),
(111, 1494, '1', -1.29848, 13, 0, '2017-09-17 11:51:35'),
(111, 1493, '1', -1.92, 8, 0, '2017-09-17 11:51:36'),
(111, 1510, '4', -0.1875, 39, 0, '2017-09-17 11:51:36'),
(111, 1515, '1', 2.43, 4, 1, '2017-09-17 11:51:36'),
(111, 1518, '1', -1.96599, 8, 0, '2017-09-17 11:51:36'),
(111, 680, '3', 1.2398, 10, 1, '2017-09-17 11:51:36'),
(111, 1888, '1', 1.28254, 9, 1, '2017-09-17 11:51:36'),
(111, 706, '4', 1.92, 6, 1, '2017-09-17 11:51:36'),
(111, 2013, '2', 1.08, 12, 1, '2017-09-17 11:51:36'),
(111, 1985, '4', 1.05762, 13, 1, '2017-09-17 11:51:36'),
(111, 1991, '4', 0.48, 18, 1, '2017-09-17 11:51:36'),
(111, 2031, '1', 1.20333, 11, 1, '2017-09-17 11:51:36'),
(111, 658, '1', -0.75, 10, 0, '2017-09-17 11:51:37'),
(111, 703, '3', 0.333333, 16, 1, '2017-09-17 11:51:37'),
(111, 676, '2', 1.85204, 6, 1, '2017-09-17 11:51:37'),
(111, 690, '1', -0.75, 10, 0, '2017-09-17 11:51:37'),
(111, 2008, '4', 1.92, 6, 1, '2017-09-17 11:51:37'),
(111, 1911, '3', 1.875, 12, 1, '2017-09-17 11:51:37'),
(111, 2042, '4', -1.59375, 15, 0, '2017-09-17 11:51:37'),
(111, 1892, '0', -0.115385, 26, 0, '2017-09-17 11:51:37'),
(111, 1919, '4', 2.7, 7, 1, '2017-09-17 11:51:37'),
(111, 1914, '4', 1.5, 14, 1, '2017-09-17 11:51:37'),
(111, 665, '4', -1.9, 11, 0, '2017-09-17 11:51:37'),
(111, 1927, '2', 1.7, 13, 1, '2017-09-17 11:51:38'),
(111, 1925, '1', 1.84091, 17, 1, '2017-09-17 11:51:38'),
(111, 1915, '3', 2.25, 7, 1, '2017-09-17 11:51:38'),
(111, 1909, '1', -1.78125, 13, 0, '2017-09-17 11:51:38'),
(111, 1920, '4', -2.34375, 7, 0, '2017-09-17 11:51:38'),
(111, 1921, '3', -2.1, 9, 0, '2017-09-17 11:51:38'),
(111, 664, '3', 2.38235, 7, 1, '2017-09-17 11:51:38'),
(111, 714, '1', 1.76471, 14, 1, '2017-09-17 11:51:38'),
(111, 1926, '4', -2.25, 8, 0, '2017-09-17 11:51:38'),
(111, 2034, '1', -0.7, 23, 0, '2017-09-17 11:51:38'),
(111, 1923, '0', 0, 12, -1, '2017-09-17 11:51:38'),
(111, 1880, '3', -2.11765, 10, 0, '2017-09-17 11:51:39'),
(111, 1906, '1', -1.4, 16, 0, '2017-09-17 11:51:39'),
(111, 689, '1', -2.1, 9, 0, '2017-09-17 11:51:39'),
(111, 699, '3', -0.6075, 11, 0, '2017-09-17 11:51:39'),
(111, 2010, '1', 2.25333, 4, 1, '2017-09-17 11:51:39'),
(111, 1891, '1', -2, 10, 0, '2017-09-17 11:51:39'),
(111, 1996, '0', 0, 11, -1, '2017-09-17 11:51:39'),
(111, 712, '1', 1.33333, 8, 1, '2017-09-17 11:51:39'),
(111, 713, '3', 1.28254, 9, 1, '2017-09-17 11:51:39'),
(111, 685, '0', -0.15, 20, 0, '2017-09-17 11:51:39'),
(111, 1908, '4', -1.78125, 13, 0, '2017-09-17 11:51:39'),
(111, 2033, '4', -1.53061, 8, 0, '2017-09-17 11:51:40'),
(111, 659, '0', -0.0075, 20, 0, '2017-09-17 11:51:40'),
(111, 716, '1', -1.43787, 8, 0, '2017-09-17 11:51:40'),
(111, 663, '1', 2.02423, 5, 1, '2017-09-17 11:51:40'),
(111, 2011, '4', -0.963333, 13, 0, '2017-09-17 11:51:40'),
(111, 679, '1', 1.17188, 9, 1, '2017-09-17 11:51:40'),
(111, 1912, '0', 0, 18, -1, '2017-09-17 11:51:40'),
(111, 717, '3', -0.75, 18, 0, '2017-09-17 11:51:40'),
(111, 1917, '1', -1.6875, 7, 0, '2017-09-17 11:51:40'),
(111, 2604, '1', -1.2675, 14, 0, '2017-09-17 11:51:40'),
(111, 2613, '4', 1.80187, 9, 1, '2017-09-17 11:51:40'),
(111, 2603, '2', -2.43, 4, 0, '2017-09-17 11:51:41'),
(111, 2611, '3', 2.29688, 5, 1, '2017-09-17 11:51:41'),
(111, 2608, '3', 2.29688, 5, 1, '2017-09-17 11:51:41'),
(111, 2612, '1', 1.17188, 15, 1, '2017-09-17 11:51:41'),
(111, 2601, '2', 1.92, 8, 1, '2017-09-17 11:51:41'),
(111, 2615, '4', -0.9075, 18, 0, '2017-09-17 11:51:41'),
(111, 2607, '4', 1.92, 8, 1, '2017-09-17 11:51:41'),
(111, 2605, '2', 2.29688, 5, 1, '2017-09-17 11:51:41'),
(111, 2609, '2', 2.04187, 7, 1, '2017-09-17 11:51:41'),
(111, 2631, '0', 0, 13, -1, '2017-09-17 11:51:41'),
(111, 2626, '3', 2.7, 6, 1, '2017-09-17 11:51:41'),
(111, 2622, '2', 2.6, 8, 1, '2017-09-17 11:51:41'),
(111, 2620, '4', 2.75, 5, 1, '2017-09-17 11:51:42'),
(111, 2634, '4', 2.5, 10, 1, '2017-09-17 11:51:42'),
(111, 2734, '1', -2.72703, 8, 0, '2017-09-17 11:51:42'),
(111, 2635, '3', -2.3, 14, 0, '2017-09-17 11:51:42'),
(111, 2628, '4', -2.7, 6, 0, '2017-09-17 11:51:42'),
(111, 2630, '2', 2.15, 17, 1, '2017-09-17 11:51:42'),
(111, 2619, '3', 2.6, 8, 1, '2017-09-17 11:51:42'),
(111, 2629, '4', -2.3, 14, 0, '2017-09-17 11:51:42'),
(111, 2632, '1', -2.7, 6, 0, '2017-09-17 11:51:42'),
(111, 2616, '4', 2.8, 4, 1, '2017-09-17 11:51:42'),
(111, 2618, '3', 2.7, 6, 1, '2017-09-17 11:51:42'),
(111, 2617, '1', 2.8, 4, 1, '2017-09-17 11:51:43'),
(111, 2841, '3', 2.86514, 4, 1, '2017-09-17 11:51:43'),
(111, 2838, '3', 2.83093, 5, 1, '2017-09-17 11:51:43'),
(111, 2816, '4', 2.79651, 6, 1, '2017-09-17 11:51:43'),
(111, 2731, '4', 2.54929, 13, 1, '2017-09-17 11:51:43'),
(111, 2730, '4', 2.21246, 22, 1, '2017-09-17 11:51:43'),
(111, 2882, '3', -2.71109, 11, 0, '2017-09-17 11:51:43'),
(111, 2847, '0', 0, 7, -1, '2017-09-17 11:51:43'),
(111, 2833, '3', 2.62111, 11, 1, '2017-09-17 11:51:43'),
(111, 2866, '4', 2.79285, 8, 1, '2017-09-17 11:51:43'),
(111, 2883, '3', 2.62679, 14, 1, '2017-09-17 11:51:43'),
(111, 2861, '2', 2.79285, 8, 1, '2017-09-17 11:51:44'),
(111, 2859, '2', 2.25832, 26, 1, '2017-09-17 11:51:44'),
(111, 2901, '4', 2.89738, 5, 1, '2017-09-17 11:51:44'),
(111, 2896, '4', -2.87619, 6, 0, '2017-09-17 11:51:44'),
(111, 2904, '3', 2.74383, 12, 1, '2017-09-17 11:51:44'),
(111, 2903, '3', -2.85477, 7, 0, '2017-09-17 11:51:44'),
(111, 2891, '1', 2.85477, 7, 1, '2017-09-17 11:51:44'),
(111, 2905, '1', 2.62572, 17, 1, '2017-09-17 11:51:44'),
(111, 2906, '0', 0, 7, -1, '2017-09-17 11:51:44'),
(111, 2894, '4', -2.74383, 12, 0, '2017-09-17 11:51:44'),
(111, 2909, '0', 0, 21, -1, '2017-09-17 11:51:44'),
(111, 2890, '0', -0.583258, 60, 0, '2017-09-17 11:51:44'),
(111, 2897, '3', -1.97128, 39, 0, '2017-09-17 11:51:44'),
(111, 2907, '3', 2.21169, 32, 1, '2017-09-17 11:51:45'),
(111, 2892, '4', -2.85477, 7, 0, '2017-09-17 11:51:45'),
(111, 2908, '2', -2.8331, 8, 0, '2017-09-17 11:51:45'),
(111, 2855, '1', -2.59808, 15, 0, '2017-09-17 11:51:45'),
(111, 2870, '3', 2.89828, 4, 1, '2017-09-17 11:51:45'),
(111, 2885, '4', 2.38747, 22, 1, '2017-09-17 11:51:45'),
(111, 2884, '3', -2.71109, 11, 0, '2017-09-17 11:51:45'),
(111, 2862, '3', -2.62679, 14, 0, '2017-09-17 11:51:45'),
(111, 2864, '2', 2.53969, 17, 1, '2017-09-17 11:51:45'),
(111, 2889, '1', -2.65518, 13, 0, '2017-09-17 11:51:45'),
(111, 2871, '2', 2.87228, 5, 1, '2017-09-17 11:51:45'),
(111, 2868, '2', 2.84605, 6, 1, '2017-09-17 11:51:46'),
(111, 2899, '4', -2.89738, 5, 0, '2017-09-17 11:51:46'),
(111, 2874, '1', 2.76586, 9, 1, '2017-09-17 11:51:46'),
(111, 2900, '1', -2.76655, 11, 0, '2017-09-17 11:51:46'),
(111, 2886, '1', 2.84605, 6, 1, '2017-09-17 11:51:46'),
(111, 2898, '4', 2.89738, 5, 1, '2017-09-17 11:51:46'),
(111, 2893, '4', 2.93908, 3, 1, '2017-09-17 11:51:46'),
(111, 2895, '3', -2.85477, 7, 0, '2017-09-17 11:51:46'),
(111, 1317, '2', -2.25333, 8, 0, '2017-09-17 11:51:46'),
(111, 1311, '3', -2.0172, 9, 0, '2017-09-17 11:51:46'),
(111, 604, '3', 2.34083, 7, 1, '2017-09-17 11:51:46'),
(111, 593, '1', 2.00083, 11, 1, '2017-09-17 11:51:47'),
(111, 615, '4', -0.75, 30, 0, '2017-09-17 11:51:47'),
(111, 1091, '3', -2.00083, 11, 0, '2017-09-17 11:51:47'),
(111, 850, '3', 2.34083, 7, 1, '2017-09-17 11:51:47'),
(111, 606, '1', -2.61333, 4, 0, '2017-09-17 11:51:47'),
(111, 602, '0', 0, 27, -1, '2017-09-17 11:51:47'),
(111, 596, '2', -2.37037, 6, 0, '2017-09-17 11:51:47'),
(111, 1301, '3', 2.63672, 4, 1, '2017-09-17 11:51:47'),
(111, 597, '2', 2.37037, 6, 1, '2017-09-17 11:51:47'),
(111, 599, '2', -0.653333, 32, 0, '2017-09-17 11:51:47'),
(112, 1173, '2', 0.27, 14, 1, '2017-09-17 11:51:48'),
(112, 1186, '3', 1.10587, 11, 1, '2017-09-17 11:51:48'),
(112, 1169, '2', 1.02083, 10, 1, '2017-09-17 11:51:48'),
(112, 1194, '1', 1.2398, 10, 1, '2017-09-17 11:51:49'),
(112, 1292, '1', 0.48, 18, 1, '2017-09-17 11:51:49'),
(112, 1291, '4', 0.27, 14, 1, '2017-09-17 11:51:49'),
(112, 1196, '4', 1.17188, 9, 1, '2017-09-17 11:51:49'),
(112, 1197, '1', 0.333333, 16, 1, '2017-09-17 11:51:49'),
(112, 1218, '0', -0.0075, 20, 0, '2017-09-17 11:51:49'),
(112, 1183, '2', 0.75, 11, 1, '2017-09-17 11:51:49'),
(112, 1261, '0', -0.00207756, 38, 0, '2017-09-17 11:51:49'),
(112, 1184, '0', -0.00520833, 24, 0, '2017-09-17 11:51:49'),
(112, 1190, '3', -1.38138, 9, 0, '2017-09-17 11:51:49'),
(112, 1198, '1', -1.47, 6, 0, '2017-09-17 11:51:49'),
(112, 1227, '2', -0.0208333, 22, 0, '2017-09-17 11:51:49'),
(112, 1174, '3', 1.77515, 6, 1, '2017-09-17 11:51:50'),
(112, 1170, '1', -0.75, 12, 0, '2017-09-17 11:51:50'),
(112, 1195, '4', 0.1875, 15, 1, '2017-09-17 11:51:50'),
(112, 1185, '3', -0.860969, 13, 0, '2017-09-17 11:51:50'),
(112, 1263, '2', -1.17188, 15, 0, '2017-09-17 11:51:50'),
(112, 1177, '2', 0.75, 11, 1, '2017-09-17 11:51:50'),
(112, 1270, '2', -0.567108, 26, 0, '2017-09-17 11:51:50'),
(112, 1210, '0', -0.00520833, 24, 0, '2017-09-17 11:51:50'),
(112, 1276, '2', -1.41797, 10, 0, '2017-09-17 11:51:50'),
(112, 1203, '4', -0.48, 18, 0, '2017-09-17 11:51:50'),
(112, 1172, '4', 0.03, 18, 1, '2017-09-17 11:51:50'),
(112, 1216, '4', 1.33333, 8, 1, '2017-09-17 11:51:51'),
(112, 1297, '3', 1.76333, 14, 1, '2017-09-17 11:51:51'),
(112, 1189, '3', 1.2398, 10, 1, '2017-09-17 11:51:51'),
(112, 1294, '3', 0.520833, 14, 1, '2017-09-17 11:51:51'),
(112, 1199, '2', -0.84668, 15, 0, '2017-09-17 11:51:51'),
(112, 1219, '3', 0.396694, 14, 1, '2017-09-17 11:51:51'),
(112, 1200, '0', 0, 10, -1, '2017-09-17 11:51:51'),
(112, 1191, '3', 1.85204, 6, 1, '2017-09-17 11:51:51'),
(112, 1293, '2', 0.520833, 14, 1, '2017-09-17 11:51:51'),
(112, 1257, '0', 0, 8, -1, '2017-09-17 11:51:51'),
(112, 1284, '3', 0.48, 12, 1, '2017-09-17 11:51:51'),
(112, 1208, '2', -1.47, 15, 0, '2017-09-17 11:51:51'),
(112, 1217, '4', -0.12, 16, 0, '2017-09-17 11:51:52'),
(112, 1171, '4', 1.2675, 7, 1, '2017-09-17 11:51:52'),
(112, 1265, '0', 0, 30, -1, '2017-09-17 11:51:52'),
(112, 1268, '1', 0.421875, 30, 1, '2017-09-17 11:51:52'),
(112, 1282, '3', 0.0833333, 25, 1, '2017-09-17 11:51:52'),
(112, 1281, '1', -0.12, 24, 0, '2017-09-17 11:51:52'),
(112, 1175, '2', -0.421875, 20, 0, '2017-09-17 11:51:52'),
(112, 1269, '0', -0.00130208, 48, 0, '2017-09-17 11:51:52'),
(112, 1287, '4', -0.949219, 21, 0, '2017-09-17 11:51:52'),
(112, 1202, '1', 0.0833333, 30, 1, '2017-09-17 11:51:52'),
(112, 1220, '2', 0.75, 14, 1, '2017-09-17 11:51:52'),
(112, 1299, '3', 0.176309, 50, 1, '2017-09-17 11:51:53'),
(112, 1289, '2', 0.151875, 31, 1, '2017-09-17 11:51:53'),
(112, 1209, '0', -0.0012, 50, 0, '2017-09-17 11:51:53'),
(112, 1286, '3', -1.84083, 13, 0, '2017-09-17 11:51:53'),
(112, 1204, '0', -0.00130208, 48, 0, '2017-09-17 11:51:53'),
(112, 173, '0', -0.0003, 100, 0, '2017-09-17 11:51:53'),
(112, 1188, '1', 1.10587, 11, 1, '2017-09-17 11:51:53'),
(112, 1176, '4', 1.10587, 11, 1, '2017-09-17 11:51:53'),
(112, 1187, '1', -0.495117, 19, 0, '2017-09-17 11:51:53'),
(112, 1296, '1', -0.1875, 18, 0, '2017-09-17 11:51:53'),
(112, 1264, '0', -0.000688705, 66, 0, '2017-09-17 11:51:53'),
(112, 1283, '4', 0.520833, 14, 1, '2017-09-17 11:51:54'),
(112, 1275, '1', -0.333333, 36, 0, '2017-09-17 11:51:54'),
(112, 171, '1', 0.001875, 78, 1, '2017-09-17 11:51:54'),
(112, 172, '1', -1.24983, 39, 0, '2017-09-17 11:51:54'),
(112, 1250, '0', -0.000833333, 60, 0, '2017-09-17 11:51:54'),
(112, 2615, '1', 1.47, 12, 1, '2017-09-17 11:51:54'),
(112, 2608, '3', 2.29688, 5, 1, '2017-09-17 11:51:54'),
(112, 2604, '1', -1.92, 8, 0, '2017-09-17 11:51:54'),
(112, 2614, '4', 2.29688, 5, 1, '2017-09-17 11:51:54'),
(112, 2610, '3', 2.1675, 6, 1, '2017-09-17 11:51:54'),
(112, 2607, '4', 1.08, 16, 1, '2017-09-17 11:51:54'),
(112, 2603, '4', -1.08, 16, 0, '2017-09-17 11:51:54'),
(112, 2613, '4', 2.43, 4, 1, '2017-09-17 11:51:55'),
(112, 2601, '2', 2.1675, 6, 1, '2017-09-17 11:51:55'),
(112, 2624, '2', 1.8, 24, 1, '2017-09-17 11:51:55'),
(112, 2629, '0', 0, 31, -1, '2017-09-17 11:51:55');
INSERT INTO `responses` (`userID`, `questionID`, `answer`, `score`, `timeConsumed`, `correct`, `timestamp`) VALUES
(112, 2622, '2', 1.8, 24, 1, '2017-09-17 11:51:55'),
(112, 2618, '3', 2.55, 9, 1, '2017-09-17 11:51:55'),
(112, 2632, '3', 2.5, 10, 1, '2017-09-17 11:51:55'),
(112, 2627, '4', -2.45, 11, 0, '2017-09-17 11:51:55'),
(112, 2631, '3', 1.8, 24, 1, '2017-09-17 11:51:55'),
(112, 2633, '3', 2, 20, 1, '2017-09-17 11:51:55'),
(112, 2820, '1', -2.25111, 21, 0, '2017-09-17 11:51:55'),
(112, 2621, '3', 2.5, 10, 1, '2017-09-17 11:51:56'),
(112, 2731, '4', 1.93165, 29, 1, '2017-09-17 11:51:56'),
(112, 2728, '4', 1.62865, 36, 1, '2017-09-17 11:51:56'),
(112, 2847, '3', -2.05434, 26, 0, '2017-09-17 11:51:56'),
(112, 2825, '3', 2.62111, 11, 1, '2017-09-17 11:51:56'),
(112, 2730, '3', -2.513, 14, 0, '2017-09-17 11:51:56'),
(112, 2845, '3', -2.13414, 24, 0, '2017-09-17 11:51:56'),
(112, 2735, '1', 2.43962, 16, 1, '2017-09-17 11:51:56'),
(112, 2734, '3', 1.48993, 39, 1, '2017-09-17 11:51:56'),
(112, 2732, '4', 2.43962, 16, 1, '2017-09-17 11:51:56'),
(112, 2729, '1', -1.53686, 38, 0, '2017-09-17 11:51:56'),
(112, 2852, '2', 2.40251, 17, 1, '2017-09-17 11:51:57'),
(112, 2835, '1', -1.80492, 32, 0, '2017-09-17 11:51:57'),
(112, 2833, '3', 2.47645, 15, 1, '2017-09-17 11:51:57'),
(112, 2841, '3', 2.89915, 3, 1, '2017-09-17 11:51:57'),
(112, 2733, '2', 2.40251, 17, 1, '2017-09-17 11:51:57'),
(112, 2816, '4', 2.513, 14, 1, '2017-09-17 11:51:57'),
(112, 2874, '0', -0.387298, 60, 0, '2017-09-17 11:51:57'),
(112, 2889, '1', -2.12132, 30, 0, '2017-09-17 11:51:57'),
(112, 2838, '3', 2.65665, 10, 1, '2017-09-17 11:51:57'),
(112, 2884, '0', 0, 36, -1, '2017-09-17 11:51:57'),
(112, 2864, '1', -1.97484, 34, 0, '2017-09-17 11:51:57'),
(112, 2819, '2', 2.65665, 10, 1, '2017-09-17 11:51:58'),
(112, 2861, '2', 2.76586, 9, 1, '2017-09-17 11:51:58'),
(112, 2887, '2', -2.15639, 29, 0, '2017-09-17 11:51:58'),
(112, 2879, '0', 0, 21, -1, '2017-09-17 11:51:58'),
(112, 2888, '3', 2.41868, 21, 1, '2017-09-17 11:51:58'),
(112, 2883, '3', 2.71109, 11, 1, '2017-09-17 11:51:58'),
(112, 2859, '1', -1.77482, 39, 0, '2017-09-17 11:51:58'),
(112, 2877, '2', 2.81957, 7, 1, '2017-09-17 11:51:58'),
(112, 2881, '0', 0, 36, -1, '2017-09-17 11:51:58'),
(112, 2885, '4', 2.71109, 11, 1, '2017-09-17 11:51:58'),
(112, 2904, '3', 2.55085, 20, 1, '2017-09-17 11:51:58'),
(112, 2901, '4', 2.76655, 11, 1, '2017-09-17 11:51:59'),
(112, 2892, '4', -2.64998, 16, 0, '2017-09-17 11:51:59'),
(112, 2902, '4', -2.30359, 29, 0, '2017-09-17 11:51:59'),
(112, 2900, '1', -2.47253, 23, 0, '2017-09-17 11:51:59'),
(112, 2855, '1', -2.59808, 15, 0, '2017-09-17 11:51:59'),
(112, 2866, '4', 2.79285, 8, 1, '2017-09-17 11:51:59'),
(112, 2862, '3', -2.44949, 20, 0, '2017-09-17 11:51:59'),
(112, 2882, '1', 2.56905, 16, 1, '2017-09-17 11:51:59'),
(112, 2865, '3', 2.76586, 9, 1, '2017-09-17 11:51:59'),
(112, 2899, '2', 2.76655, 11, 1, '2017-09-17 11:51:59'),
(112, 2908, '3', 2.55085, 20, 1, '2017-09-17 11:51:59'),
(112, 2903, '2', 2.64998, 16, 1, '2017-09-17 11:51:59'),
(112, 2925, '2', -2.80416, 11, 0, '2017-09-17 11:52:00'),
(112, 2896, '4', -2.47253, 23, 0, '2017-09-17 11:52:00'),
(112, 2894, '4', -2.47253, 23, 0, '2017-09-17 11:52:00'),
(112, 2898, '1', -2.6739, 15, 0, '2017-09-17 11:52:00'),
(112, 2909, '0', -0.583258, 60, 0, '2017-09-17 11:52:00'),
(112, 2870, '3', 2.68328, 12, 1, '2017-09-17 11:52:00'),
(112, 2895, '2', 2.6739, 15, 1, '2017-09-17 11:52:00'),
(112, 2905, '1', 2.8331, 8, 1, '2017-09-17 11:52:00'),
(112, 2906, '3', -2.74383, 12, 0, '2017-09-17 11:52:00'),
(112, 2890, '1', -2.44558, 24, 0, '2017-09-17 11:52:00'),
(112, 2891, '1', 2.789, 10, 1, '2017-09-17 11:52:00'),
(112, 2907, '3', 2.33303, 28, 1, '2017-09-17 11:52:01'),
(112, 2893, '4', 2.91834, 4, 1, '2017-09-17 11:52:01'),
(112, 2910, '1', -2.78495, 12, 0, '2017-09-17 11:52:01'),
(112, 722, '3', 1.56481, 10, 1, '2017-09-17 11:52:01'),
(112, 490, '3', -1.33333, 12, 0, '2017-09-17 11:52:01'),
(112, 465, '4', -0.853333, 14, 0, '2017-09-17 11:52:01'),
(112, 486, '1', 2.37037, 4, 1, '2017-09-17 11:52:01'),
(112, 726, '1', 1.37284, 11, 1, '2017-09-17 11:52:01'),
(112, 509, '1', 1.02083, 15, 1, '2017-09-17 11:52:01'),
(112, 724, '4', -0.653333, 16, 0, '2017-09-17 11:52:01'),
(112, 498, '2', 1.47, 12, 1, '2017-09-17 11:52:01'),
(112, 733, '3', 0.226875, 29, 1, '2017-09-17 11:52:02'),
(112, 464, '3', 0.75, 13, 1, '2017-09-17 11:52:02'),
(112, 489, '1', 0.9075, 18, 1, '2017-09-17 11:52:02'),
(112, 481, '0', 0, 13, -1, '2017-09-17 11:52:02'),
(112, 719, '1', -0.668981, 19, 0, '2017-09-17 11:52:02'),
(112, 720, '4', 2.40166, 4, 1, '2017-09-17 11:52:02'),
(112, 728, '4', -1.00554, 16, 0, '2017-09-17 11:52:02'),
(112, 734, '2', 0.963333, 13, 1, '2017-09-17 11:52:02'),
(112, 472, '1', 1.47, 12, 1, '2017-09-17 11:52:02'),
(112, 752, '2', -1.17391, 28, 0, '2017-09-17 11:52:02'),
(112, 725, '4', 2.0346, 6, 1, '2017-09-17 11:52:03'),
(112, 480, '0', 0, 22, -1, '2017-09-17 11:52:03'),
(112, 746, '4', 2, 12, 1, '2017-09-17 11:52:03'),
(112, 474, '0', -0.075, 40, 0, '2017-09-17 11:52:03'),
(112, 738, '3', -1.67647, 15, 0, '2017-09-17 11:52:03'),
(112, 756, '3', -1.8125, 19, 0, '2017-09-17 11:52:03'),
(112, 721, '0', -0.001875, 40, 0, '2017-09-17 11:52:03'),
(112, 737, '2', -1.2675, 14, 0, '2017-09-17 11:52:03'),
(112, 718, '1', 1.61333, 8, 1, '2017-09-17 11:52:03'),
(112, 466, '2', -1.47, 9, 0, '2017-09-17 11:52:03'),
(112, 730, '1', -0.592593, 20, 0, '2017-09-17 11:52:04'),
(112, 732, '4', 1.12037, 14, 1, '2017-09-17 11:52:04'),
(112, 485, '1', 0.886106, 21, 1, '2017-09-17 11:52:04'),
(112, 729, '0', -0.00231481, 36, 0, '2017-09-17 11:52:04'),
(112, 727, '2', 1.44676, 11, 1, '2017-09-17 11:52:04'),
(112, 753, '1', -2.07143, 13, 0, '2017-09-17 11:52:04'),
(112, 735, '4', 1.33333, 10, 1, '2017-09-17 11:52:04'),
(112, 478, '2', -2.04, 16, 0, '2017-09-17 11:52:04'),
(112, 736, '2', -1.62197, 9, 0, '2017-09-17 11:52:04'),
(112, 487, '4', 1.2675, 14, 1, '2017-09-17 11:52:04'),
(112, 494, '3', 1.20333, 11, 1, '2017-09-17 11:52:04'),
(112, 723, '1', 2.37037, 4, 1, '2017-09-17 11:52:04'),
(112, 476, '2', -2.025, 13, 0, '2017-09-17 11:52:05'),
(112, 731, '3', -0.280093, 25, 0, '2017-09-17 11:52:05'),
(112, 741, '2', 0.351108, 25, 1, '2017-09-17 11:52:05'),
(112, 475, '2', -0.816635, 22, 0, '2017-09-17 11:52:05'),
(112, 739, '1', 1.44676, 11, 1, '2017-09-17 11:52:05'),
(112, 479, '0', 0, 14, -1, '2017-09-17 11:52:05'),
(112, 757, '3', -2.6087, 6, 0, '2017-09-17 11:52:05'),
(112, 502, '2', 1.73677, 11, 1, '2017-09-17 11:52:05'),
(112, 745, '3', -0.991875, 17, 0, '2017-09-17 11:52:05'),
(112, 482, '4', 1.33333, 14, 1, '2017-09-17 11:52:05'),
(112, 483, '1', -2.15643, 7, 0, '2017-09-17 11:52:05'),
(112, 747, '2', 0.453704, 22, 1, '2017-09-17 11:52:05'),
(112, 750, '0', -0.00141777, 46, 0, '2017-09-17 11:52:06'),
(112, 740, '3', -0.592593, 20, 0, '2017-09-17 11:52:06'),
(112, 748, '1', -1.80187, 9, 0, '2017-09-17 11:52:06'),
(112, 744, '2', -1.80187, 9, 0, '2017-09-17 11:52:06'),
(112, 477, '3', -1.73677, 11, 0, '2017-09-17 11:52:06'),
(112, 743, '0', -0.00231481, 36, 0, '2017-09-17 11:52:06'),
(112, 742, '3', -1.80187, 9, 0, '2017-09-17 11:52:06'),
(112, 754, '1', -1.63435, 11, 0, '2017-09-17 11:52:06'),
(112, 499, '1', 1.29848, 13, 1, '2017-09-17 11:52:06'),
(112, 755, '0', -0.00130208, 48, 0, '2017-09-17 11:52:06'),
(112, 751, '2', 1.3032, 15, 1, '2017-09-17 11:52:06'),
(112, 749, '1', -0.0638021, 41, 0, '2017-09-17 11:52:07'),
(112, 492, '2', 1.47, 12, 1, '2017-09-17 11:52:07'),
(112, 775, '4', 0.625236, 25, 1, '2017-09-17 11:52:07'),
(112, 777, '2', 1.54395, 13, 1, '2017-09-17 11:52:07'),
(112, 493, '3', -1.61333, 8, 0, '2017-09-17 11:52:07'),
(112, 760, '4', 1.17188, 15, 1, '2017-09-17 11:52:07'),
(112, 768, '0', -0.00130208, 48, 0, '2017-09-17 11:52:07'),
(112, 470, '0', -0.001875, 40, 0, '2017-09-17 11:52:07'),
(112, 770, '2', 1.02083, 20, 1, '2017-09-17 11:52:07'),
(112, 764, '1', -1.12037, 14, 0, '2017-09-17 11:52:07'),
(112, 776, '4', -2.15643, 7, 0, '2017-09-17 11:52:08'),
(112, 491, '1', -1.86981, 8, 0, '2017-09-17 11:52:08'),
(112, 484, '1', 2.38327, 5, 1, '2017-09-17 11:52:08'),
(112, 471, '0', -0.00333333, 30, 0, '2017-09-17 11:52:08'),
(112, 771, '2', -0.204159, 34, 0, '2017-09-17 11:52:08'),
(112, 761, '0', -0.00141777, 46, 0, '2017-09-17 11:52:08'),
(112, 765, '0', -0.001875, 40, 0, '2017-09-17 11:52:08'),
(112, 758, '0', -0.00207756, 38, 0, '2017-09-17 11:52:08'),
(113, 2148, '3', -0.03, 36, 0, '2017-09-17 11:52:09'),
(113, 1932, '1', 0.0510397, 40, 1, '2017-09-17 11:52:09'),
(113, 1902, '4', -1.5498, 9, 0, '2017-09-17 11:52:09'),
(113, 1949, '3', -0.362949, 30, 0, '2017-09-17 11:52:09'),
(113, 1928, '3', -0.16609, 26, 0, '2017-09-17 11:52:09'),
(113, 1943, '2', -1.05762, 26, 0, '2017-09-17 11:52:09'),
(113, 1946, '2', -1.36688, 13, 0, '2017-09-17 11:52:09'),
(113, 2157, '2', -1.6081, 15, 0, '2017-09-17 11:52:09'),
(113, 1931, '4', -0.75, 20, 0, '2017-09-17 11:52:09'),
(113, 1953, '1', -1.57687, 11, 0, '2017-09-17 11:52:09'),
(113, 1916, '1', 0.699168, 30, 1, '2017-09-17 11:52:10'),
(113, 1895, '4', 1.83743, 10, 1, '2017-09-17 11:52:10'),
(113, 1924, '3', -1.75433, 8, 0, '2017-09-17 11:52:10'),
(113, 1910, '2', 2.08333, 8, 1, '2017-09-17 11:52:10'),
(113, 1886, '3', 0.592593, 20, 1, '2017-09-17 11:52:10'),
(113, 1938, '1', 1.88021, 10, 1, '2017-09-17 11:52:10'),
(113, 1899, '3', 1.11153, 18, 1, '2017-09-17 11:52:10'),
(113, 1890, '4', 0.407202, 24, 1, '2017-09-17 11:52:10'),
(113, 1913, '2', -1.20333, 22, 0, '2017-09-17 11:52:10'),
(113, 1907, '3', 1.57687, 11, 1, '2017-09-17 11:52:10'),
(113, 1935, '4', -1.6875, 13, 0, '2017-09-17 11:52:10'),
(113, 1905, '4', 1.54395, 13, 1, '2017-09-17 11:52:11'),
(113, 2053, '3', -0.683368, 23, 0, '2017-09-17 11:52:11'),
(113, 1992, '1', 1.6875, 10, 1, '2017-09-17 11:52:11'),
(113, 2054, '4', -1.36688, 13, 0, '2017-09-17 11:52:11'),
(113, 1968, '1', 1.78255, 11, 1, '2017-09-17 11:52:11'),
(113, 1958, '1', 1.6875, 14, 1, '2017-09-17 11:52:11'),
(113, 2048, '3', 1.94093, 9, 1, '2017-09-17 11:52:11'),
(113, 2060, '3', 1.36688, 13, 1, '2017-09-17 11:52:11'),
(113, 1956, '1', -1.85204, 12, 0, '2017-09-17 11:52:11'),
(113, 1972, '4', -1.4856, 16, 0, '2017-09-17 11:52:11'),
(113, 1961, '3', 1.1532, 19, 1, '2017-09-17 11:52:11'),
(113, 1979, '4', 1.36688, 13, 1, '2017-09-17 11:52:12'),
(113, 1959, '1', 2.34763, 6, 1, '2017-09-17 11:52:12'),
(113, 1980, '4', 2.12138, 7, 1, '2017-09-17 11:52:12'),
(113, 1960, '2', -2.08333, 10, 0, '2017-09-17 11:52:12'),
(113, 1986, '1', -2.2188, 7, 0, '2017-09-17 11:52:12'),
(113, 1989, '1', 1.2513, 17, 1, '2017-09-17 11:52:12'),
(113, 2052, '3', 1.83743, 10, 1, '2017-09-17 11:52:12'),
(113, 1982, '3', -1.83743, 10, 0, '2017-09-17 11:52:12'),
(113, 2057, '4', 1.33333, 10, 1, '2017-09-17 11:52:12'),
(113, 1976, '4', -2.3232, 6, 0, '2017-09-17 11:52:12'),
(113, 2069, '3', -2.5392, 4, 0, '2017-09-17 11:52:12'),
(113, 2081, '2', -2.45081, 5, 0, '2017-09-17 11:52:13'),
(113, 2066, '3', 1.57687, 11, 1, '2017-09-17 11:52:13'),
(113, 2073, '3', -2.3232, 6, 0, '2017-09-17 11:52:13'),
(113, 2076, '2', 2.05141, 9, 1, '2017-09-17 11:52:13'),
(113, 2082, '2', 2.1168, 8, 1, '2017-09-17 11:52:13'),
(113, 2067, '4', -1.03355, 19, 0, '2017-09-17 11:52:13'),
(113, 2068, '1', 1.33333, 14, 1, '2017-09-17 11:52:13'),
(113, 2064, '1', 0.823129, 20, 1, '2017-09-17 11:52:13'),
(113, 2079, '1', 1.8252, 11, 1, '2017-09-17 11:52:13'),
(113, 2071, '1', -1.6875, 11, 0, '2017-09-17 11:52:13'),
(113, 2072, '1', -0.958412, 20, 0, '2017-09-17 11:52:13'),
(113, 2077, '3', 2.1132, 9, 1, '2017-09-17 11:52:14'),
(113, 2075, '3', -1.98047, 9, 0, '2017-09-17 11:52:14'),
(113, 2083, '1', -2.08333, 8, 0, '2017-09-17 11:52:14'),
(113, 2074, '3', -1.3032, 15, 0, '2017-09-17 11:52:14'),
(113, 2070, '1', 2.40755, 5, 1, '2017-09-17 11:52:14'),
(113, 2080, '1', 1.85204, 9, 1, '2017-09-17 11:52:14'),
(113, 2084, '1', 1.50521, 14, 1, '2017-09-17 11:52:14'),
(113, 2078, '3', -1.77515, 12, 0, '2017-09-17 11:52:14'),
(113, 2093, '3', 0.154959, 34, 1, '2017-09-17 11:52:14'),
(113, 2095, '3', -0.470052, 29, 0, '2017-09-17 11:52:14'),
(113, 2092, '3', 1.2513, 17, 1, '2017-09-17 11:52:14'),
(113, 2098, '3', 2.05141, 9, 1, '2017-09-17 11:52:15'),
(113, 2096, '3', 0.75, 29, 1, '2017-09-17 11:52:15'),
(113, 2089, '2', 0.806584, 26, 1, '2017-09-17 11:52:15'),
(113, 2102, '3', 1.54395, 13, 1, '2017-09-17 11:52:15'),
(113, 2100, '1', 2.35714, 12, 1, '2017-09-17 11:52:15'),
(113, 2101, '3', 2.65, 7, 1, '2017-09-17 11:52:15'),
(113, 2103, '3', 2.4375, 9, 1, '2017-09-17 11:52:15'),
(113, 2094, '4', 1.82609, 18, 1, '2017-09-17 11:52:15'),
(113, 2085, '3', -1.875, 15, 0, '2017-09-17 11:52:15'),
(113, 2099, '4', 2.28261, 11, 1, '2017-09-17 11:52:15'),
(113, 2086, '4', 2.07143, 13, 1, '2017-09-17 11:52:15'),
(113, 2088, '2', -1.19055, 39, 0, '2017-09-17 11:52:16'),
(113, 2091, '3', -1.77867, 25, 0, '2017-09-17 11:52:16'),
(113, 2087, '1', -1.64286, 19, 0, '2017-09-17 11:52:16'),
(113, 2090, '4', 2.1875, 13, 1, '2017-09-17 11:52:16'),
(113, 2097, '4', 2.1875, 13, 1, '2017-09-17 11:52:16'),
(113, 2109, '2', 2.04426, 21, 1, '2017-09-17 11:52:16'),
(113, 2105, '4', 2.60187, 10, 1, '2017-09-17 11:52:16'),
(113, 2118, '2', 2.65665, 8, 1, '2017-09-17 11:52:16'),
(113, 2115, '4', 2.62823, 9, 1, '2017-09-17 11:52:16'),
(113, 2108, '3', -2.80447, 5, 0, '2017-09-17 11:52:16'),
(113, 2104, '1', -2.12283, 17, 0, '2017-09-17 11:52:16'),
(113, 854, '1', 2.05959, 12, 1, '2017-09-17 11:52:17'),
(113, 601, '3', -1.6875, 14, 0, '2017-09-17 11:52:17'),
(113, 605, '4', -2.34083, 7, 0, '2017-09-17 11:52:17'),
(113, 853, '4', -2.25333, 8, 0, '2017-09-17 11:52:17'),
(113, 614, '2', -2.27263, 7, 0, '2017-09-17 11:52:17'),
(113, 611, '1', -1.1532, 19, 0, '2017-09-17 11:52:17'),
(113, 607, '1', -2.68718, 3, 0, '2017-09-17 11:52:17'),
(113, 1463, '1', -1.3032, 15, 0, '2017-09-17 11:52:17'),
(113, 1449, '2', -1.80187, 9, 0, '2017-09-17 11:52:17'),
(113, 3051, '3', 0.443787, 16, 1, '2017-09-17 11:52:17'),
(113, 1464, '2', 1.98047, 9, 1, '2017-09-17 11:52:17'),
(113, 1456, '2', -1.17188, 15, 0, '2017-09-17 11:52:18'),
(113, 3035, '2', 1.2398, 10, 1, '2017-09-17 11:52:18'),
(113, 3039, '1', 0.869823, 12, 1, '2017-09-17 11:52:18'),
(113, 1453, '3', -1.3068, 17, 0, '2017-09-17 11:52:18'),
(113, 1451, '1', 0.925926, 16, 1, '2017-09-17 11:52:18'),
(113, 1450, '2', -1.02083, 15, 0, '2017-09-17 11:52:18'),
(113, 1461, '3', 2.04726, 8, 1, '2017-09-17 11:52:18'),
(113, 1459, '2', 2.04187, 7, 1, '2017-09-17 11:52:18'),
(113, 1458, '1', -1.02083, 15, 0, '2017-09-17 11:52:18'),
(113, 1466, '4', -0.5808, 28, 0, '2017-09-17 11:52:18'),
(113, 2929, '4', 1.02083, 10, 1, '2017-09-17 11:52:18'),
(113, 1462, '1', 2.04187, 7, 1, '2017-09-17 11:52:19'),
(113, 1467, '3', 1.40083, 19, 1, '2017-09-17 11:52:19'),
(113, 3044, '3', 2.52083, 2, 1, '2017-09-17 11:52:19'),
(113, 1465, '2', -1.2398, 10, 0, '2017-09-17 11:52:19'),
(113, 1454, '1', -1.02083, 15, 0, '2017-09-17 11:52:19'),
(113, 1455, '2', -1.2675, 14, 0, '2017-09-17 11:52:19'),
(113, 1460, '1', 1.83743, 10, 1, '2017-09-17 11:52:19'),
(113, 1452, '2', 0.75, 20, 1, '2017-09-17 11:52:19'),
(113, 1635, '4', 1.20333, 11, 1, '2017-09-17 11:52:19'),
(113, 1641, '3', 0.382653, 18, 1, '2017-09-17 11:52:19'),
(113, 1632, '4', -1.20333, 11, 0, '2017-09-17 11:52:19'),
(113, 1633, '1', -1.60207, 7, 0, '2017-09-17 11:52:20'),
(113, 1634, '3', 1.88021, 5, 1, '2017-09-17 11:52:20'),
(113, 1661, '3', 1.28254, 9, 1, '2017-09-17 11:52:20'),
(113, 1647, '1', -1.9571, 5, 0, '2017-09-17 11:52:20'),
(113, 1665, '2', 0.00619835, 42, 1, '2017-09-17 11:52:20'),
(113, 1672, '1', -1.6875, 12, 0, '2017-09-17 11:52:20'),
(113, 1637, '1', 1.50521, 7, 1, '2017-09-17 11:52:20'),
(113, 1704, '1', -1.60207, 14, 0, '2017-09-17 11:52:20'),
(113, 1709, '2', -2.15643, 7, 0, '2017-09-17 11:52:20'),
(113, 1655, '4', -0.559401, 25, 0, '2017-09-17 11:52:20'),
(113, 1695, '4', -2.08333, 9, 0, '2017-09-17 11:52:20'),
(113, 1660, '3', -1.13609, 10, 0, '2017-09-17 11:52:21'),
(113, 1662, '0', -0.00382653, 28, 0, '2017-09-17 11:52:21'),
(113, 1694, '1', 1.4518, 14, 1, '2017-09-17 11:52:21'),
(113, 1663, '1', 0, 30, 1, '2017-09-17 11:52:21'),
(113, 1646, '3', -2.14793, 4, 0, '2017-09-17 11:52:21'),
(113, 1676, '4', 1.6428, 13, 1, '2017-09-17 11:52:21'),
(113, 1708, '2', -1.50521, 14, 0, '2017-09-17 11:52:21'),
(113, 1671, '3', 2.08333, 7, 1, '2017-09-17 11:52:21'),
(113, 1715, '1', 1.56481, 15, 1, '2017-09-17 11:52:21'),
(113, 1707, '4', 1.81481, 12, 1, '2017-09-17 11:52:22'),
(113, 1666, '3', -2.2376, 6, 0, '2017-09-17 11:52:22'),
(113, 1667, '3', 2.58673, 3, 1, '2017-09-17 11:52:22'),
(113, 1712, '1', -0.75, 27, 0, '2017-09-17 11:52:22'),
(113, 1696, '4', 2.00826, 8, 1, '2017-09-17 11:52:22'),
(113, 1675, '4', 1.81481, 12, 1, '2017-09-17 11:52:22'),
(113, 1698, '1', 2.34763, 6, 1, '2017-09-17 11:52:22'),
(113, 1674, '1', 2.45081, 5, 1, '2017-09-17 11:52:22'),
(113, 1644, '1', -0.860969, 13, 0, '2017-09-17 11:52:22'),
(113, 1668, '2', -1.47, 12, 0, '2017-09-17 11:52:22'),
(113, 1714, '3', 1.74723, 9, 1, '2017-09-17 11:52:22'),
(113, 1693, '1', -2.08333, 8, 0, '2017-09-17 11:52:23'),
(113, 1711, '1', 2.35692, 5, 1, '2017-09-17 11:52:23'),
(113, 1643, '2', 0.998521, 11, 1, '2017-09-17 11:52:23'),
(113, 1700, '4', -1.8252, 11, 0, '2017-09-17 11:52:23'),
(113, 1679, '2', 1.6875, 11, 1, '2017-09-17 11:52:23'),
(113, 464, '2', -1.28254, 9, 0, '2017-09-17 11:52:23'),
(113, 729, '2', 1.81481, 8, 1, '2017-09-17 11:52:23'),
(113, 487, '4', 2.1675, 6, 1, '2017-09-17 11:52:23'),
(113, 735, '4', 1.33333, 10, 1, '2017-09-17 11:52:23'),
(113, 472, '1', 2.1675, 6, 1, '2017-09-17 11:52:23'),
(113, 736, '2', -1.89187, 7, 0, '2017-09-17 11:52:23'),
(113, 737, '4', 1.08, 16, 1, '2017-09-17 11:52:24'),
(113, 494, '1', -1.76333, 7, 0, '2017-09-17 11:52:24'),
(113, 731, '2', 1.81481, 8, 1, '2017-09-17 11:52:24'),
(113, 726, '1', 0.75, 17, 1, '2017-09-17 11:52:24'),
(113, 720, '4', 2.40166, 4, 1, '2017-09-17 11:52:24'),
(113, 718, '1', 1.92, 6, 1, '2017-09-17 11:52:24'),
(113, 745, '3', -2.325, 9, 0, '2017-09-17 11:52:24'),
(113, 465, '3', -0.963333, 13, 0, '2017-09-17 11:52:24'),
(113, 732, '4', 1.12037, 14, 1, '2017-09-17 11:52:24'),
(113, 490, '2', 1.44676, 11, 1, '2017-09-17 11:52:24'),
(113, 723, '1', 2.22454, 5, 1, '2017-09-17 11:52:24'),
(113, 502, '2', 2.41304, 9, 1, '2017-09-17 11:52:25'),
(113, 482, '4', 2.35714, 9, 1, '2017-09-17 11:52:25'),
(113, 741, '1', -2.44737, 7, 0, '2017-09-17 11:52:25'),
(113, 748, '2', 2.175, 11, 1, '2017-09-17 11:52:25'),
(113, 499, '2', -1.73684, 16, 0, '2017-09-17 11:52:25'),
(113, 479, '4', 2.41304, 9, 1, '2017-09-17 11:52:25'),
(113, 743, '4', 2.5, 6, 1, '2017-09-17 11:52:25'),
(113, 757, '3', -2.73913, 4, 0, '2017-09-17 11:52:25'),
(113, 1203, '3', 0.03, 27, 1, '2017-09-17 11:52:25'),
(113, 1186, '3', 1.6875, 7, 1, '2017-09-17 11:52:25'),
(113, 1270, '3', -0.409735, 29, 0, '2017-09-17 11:52:25'),
(113, 1185, '0', -0.00382653, 28, 0, '2017-09-17 11:52:25'),
(113, 1173, '2', 0.48, 12, 1, '2017-09-17 11:52:26'),
(113, 1218, '4', 0.6075, 11, 1, '2017-09-17 11:52:26'),
(113, 1198, '4', 0.75, 10, 1, '2017-09-17 11:52:26'),
(113, 1197, '1', 1.17188, 9, 1, '2017-09-17 11:52:26'),
(113, 1190, '4', 1.38138, 9, 1, '2017-09-17 11:52:26'),
(113, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:52:26'),
(113, 1174, '2', -1.28254, 9, 0, '2017-09-17 11:52:26'),
(113, 1183, '2', 0.75, 11, 1, '2017-09-17 11:52:26'),
(113, 1177, '2', 0.892562, 10, 1, '2017-09-17 11:52:26'),
(113, 1297, '3', 1.6875, 15, 1, '2017-09-17 11:52:26'),
(113, 1172, '2', -1.2675, 7, 0, '2017-09-17 11:52:26'),
(113, 1263, '3', -0.75, 20, 0, '2017-09-17 11:52:26'),
(113, 1195, '0', -0.0075, 20, 0, '2017-09-17 11:52:27'),
(113, 1261, '1', -0.00207756, 37, 0, '2017-09-17 11:52:27'),
(113, 1216, '4', 1.6875, 6, 1, '2017-09-17 11:52:27'),
(113, 1194, '1', 1.85204, 6, 1, '2017-09-17 11:52:27'),
(113, 1292, '1', 2.25333, 4, 1, '2017-09-17 11:52:27'),
(113, 1281, '4', -0.7, 23, 0, '2017-09-17 11:52:27'),
(113, 1175, '4', 1.3125, 18, 1, '2017-09-17 11:52:27'),
(113, 1268, '2', -1.625, 22, 0, '2017-09-17 11:52:27'),
(113, 1257, '3', -2.375, 10, 0, '2017-09-17 11:52:27'),
(113, 1196, '4', 1.17188, 9, 1, '2017-09-17 11:52:27'),
(113, 1276, '2', -0.105469, 26, 0, '2017-09-17 11:52:27'),
(113, 1210, '1', 0.0208333, 22, 1, '2017-09-17 11:52:28'),
(113, 1291, '4', 0.12, 16, 1, '2017-09-17 11:52:28'),
(113, 1169, '2', 0.630208, 13, 1, '2017-09-17 11:52:28'),
(113, 1170, '1', -0.630208, 13, 0, '2017-09-17 11:52:28'),
(113, 1184, '4', 1.02083, 10, 1, '2017-09-17 11:52:28'),
(113, 1208, '1', 0.48, 42, 1, '2017-09-17 11:52:28'),
(113, 1294, '2', -1.625, 11, 0, '2017-09-17 11:52:28'),
(113, 1219, '3', 1.79132, 5, 1, '2017-09-17 11:52:28'),
(113, 1287, '1', -2.0625, 15, 0, '2017-09-17 11:52:28'),
(113, 1199, '4', -0.65918, 17, 0, '2017-09-17 11:52:28'),
(113, 1171, '3', -0.9075, 9, 0, '2017-09-17 11:52:28'),
(113, 1189, '1', -0.46301, 17, 0, '2017-09-17 11:52:29'),
(113, 1200, '2', -0.835648, 17, 0, '2017-09-17 11:52:29'),
(113, 1220, '4', -1.2398, 10, 0, '2017-09-17 11:52:29'),
(113, 1191, '3', 1.6875, 7, 1, '2017-09-17 11:52:29'),
(113, 1202, '3', -0.925926, 16, 0, '2017-09-17 11:52:29'),
(113, 1217, '3', 0.3675, 13, 1, '2017-09-17 11:52:29'),
(113, 1265, '2', 1.9571, 10, 1, '2017-09-17 11:52:29'),
(113, 1284, '4', -0.48, 12, 0, '2017-09-17 11:52:29'),
(113, 1269, '3', -0.333333, 32, 0, '2017-09-17 11:52:29'),
(113, 1282, '3', 0.653333, 16, 1, '2017-09-17 11:52:30'),
(113, 1293, '4', -0.630208, 13, 0, '2017-09-17 11:52:30'),
(113, 1299, '1', -1.79132, 15, 0, '2017-09-17 11:52:30'),
(113, 1204, '3', -0.0638021, 41, 0, '2017-09-17 11:52:30'),
(113, 1187, '1', -1.29199, 11, 0, '2017-09-17 11:52:30'),
(113, 173, '1', -0.5808, 56, 0, '2017-09-17 11:52:30'),
(113, 1206, '3', -0.0075, 57, 0, '2017-09-17 11:52:30'),
(113, 1283, '4', 0.333333, 16, 1, '2017-09-17 11:52:30'),
(113, 172, '3', -2.63033, 7, 0, '2017-09-17 11:52:30'),
(114, 1216, '1', -0.333333, 16, 0, '2017-09-17 11:52:31'),
(114, 1190, '0', -0.00382653, 28, 0, '2017-09-17 11:52:31'),
(114, 1197, '1', 0.333333, 16, 1, '2017-09-17 11:52:31'),
(114, 1291, '0', -0.0075, 20, 0, '2017-09-17 11:52:31'),
(114, 1270, '3', -0.0510397, 40, 0, '2017-09-17 11:52:31'),
(114, 1198, '4', 0.27, 14, 1, '2017-09-17 11:52:31'),
(114, 1183, '2', 1.04752, 9, 1, '2017-09-17 11:52:32'),
(114, 1227, '0', -0.00520833, 24, 0, '2017-09-17 11:52:32'),
(114, 1210, '3', -0.0208333, 22, 0, '2017-09-17 11:52:32'),
(114, 1173, '2', 0.27, 14, 1, '2017-09-17 11:52:32'),
(114, 1185, '2', -0.0956633, 23, 0, '2017-09-17 11:52:32'),
(114, 1184, '4', 0.1875, 18, 1, '2017-09-17 11:52:32'),
(114, 1186, '3', 1.53061, 8, 1, '2017-09-17 11:52:32'),
(114, 1203, '0', -0.00333333, 30, 0, '2017-09-17 11:52:32'),
(114, 1194, '1', 1.53061, 8, 1, '2017-09-17 11:52:32'),
(114, 1276, '2', -1.05762, 13, 0, '2017-09-17 11:52:32'),
(114, 1218, '4', 0.6075, 11, 1, '2017-09-17 11:52:32'),
(114, 1196, '4', 0.255208, 17, 1, '2017-09-17 11:52:33'),
(114, 1292, '1', 0.653333, 16, 1, '2017-09-17 11:52:33'),
(114, 1172, '4', 0.0675, 17, 1, '2017-09-17 11:52:33'),
(114, 1174, '3', 0.217456, 19, 1, '2017-09-17 11:52:33'),
(114, 1261, '3', 0, 38, 1, '2017-09-17 11:52:33'),
(114, 1195, '3', 0, 20, 0, '2017-09-17 11:52:33'),
(114, 1170, '2', 0.255208, 17, 1, '2017-09-17 11:52:33'),
(114, 1263, '4', -0.316875, 27, 0, '2017-09-17 11:52:33'),
(114, 1169, '0', -0.00520833, 24, 0, '2017-09-17 11:52:33'),
(114, 1177, '2', 1.21488, 8, 1, '2017-09-17 11:52:33'),
(114, 1297, '3', 1.14083, 23, 1, '2017-09-17 11:52:33'),
(114, 1202, '3', -0.037037, 32, 0, '2017-09-17 11:52:33'),
(114, 1293, '1', -0.421875, 15, 0, '2017-09-17 11:52:33'),
(114, 1217, '3', 1.08, 8, 1, '2017-09-17 11:52:34'),
(114, 1294, '3', 0.046875, 21, 1, '2017-09-17 11:52:34'),
(114, 1175, '4', 0.0732422, 27, 1, '2017-09-17 11:52:34'),
(114, 1208, '2', -0.0012, 49, 0, '2017-09-17 11:52:34'),
(114, 1220, '2', 1.38138, 9, 1, '2017-09-17 11:52:34'),
(114, 1200, '2', -0.00925926, 34, 0, '2017-09-17 11:52:34'),
(114, 1257, '3', -0.0638021, 41, 0, '2017-09-17 11:52:34'),
(114, 1268, '1', 0.0208333, 44, 1, '2017-09-17 11:52:34'),
(114, 1199, '3', 0.237305, 23, 1, '2017-09-17 11:52:34'),
(114, 1282, '1', -0.563333, 17, 0, '2017-09-17 11:52:34'),
(114, 1219, '3', 0.22314, 16, 1, '2017-09-17 11:52:35'),
(114, 1191, '3', 1.53061, 8, 1, '2017-09-17 11:52:35'),
(114, 1265, '0', 0, 49, -1, '2017-09-17 11:52:35'),
(114, 1281, '1', -0.1, 29, 0, '2017-09-17 11:52:35'),
(114, 1171, '4', 1.95, 7, 1, '2017-09-17 11:52:35'),
(114, 1284, '4', -0.45, 17, 0, '2017-09-17 11:52:35'),
(114, 1287, '4', -1.75, 20, 0, '2017-09-17 11:52:35'),
(114, 1269, '0', 0, 40, -1, '2017-09-17 11:52:35'),
(114, 1189, '0', 0, 1, -1, '2017-09-17 11:52:35'),
(114, 1250, '2', -0.5, 50, 0, '2017-09-17 11:52:35'),
(114, 1275, '1', -0.722222, 41, 0, '2017-09-17 11:52:35'),
(114, 1176, '3', -0.860969, 13, 0, '2017-09-17 11:52:35'),
(114, 1264, '0', -0.000688705, 66, 0, '2017-09-17 11:52:36'),
(114, 1209, '1', -0.0012, 49, 0, '2017-09-17 11:52:36'),
(114, 1283, '4', 0, 24, 1, '2017-09-17 11:52:36'),
(114, 1206, '3', -0.00333333, 58, 0, '2017-09-17 11:52:36'),
(114, 1289, '0', -0.001875, 40, 0, '2017-09-17 11:52:36'),
(114, 173, '1', -0.1728, 76, 0, '2017-09-17 11:52:36'),
(114, 1286, '2', -0.963333, 26, 0, '2017-09-17 11:52:36'),
(114, 3408, '3', 1.33333, 10, 1, '2017-09-17 11:52:36'),
(114, 3404, '4', 0.1875, 24, 1, '2017-09-17 11:52:36'),
(114, 3402, '1', 0.75, 16, 1, '2017-09-17 11:52:36'),
(114, 3411, '1', 0.0133333, 28, 1, '2017-09-17 11:52:36'),
(114, 3400, '4', -0.046875, 28, 0, '2017-09-17 11:52:37'),
(114, 3415, '2', -0.853333, 14, 0, '2017-09-17 11:52:37'),
(114, 3401, '3', 0.0732422, 27, 1, '2017-09-17 11:52:37'),
(114, 3399, '3', -0.0263672, 29, 0, '2017-09-17 11:52:37'),
(114, 3406, '1', -0.563333, 17, 0, '2017-09-17 11:52:37'),
(114, 3412, '4', 0.75, 15, 1, '2017-09-17 11:52:37'),
(114, 3410, '2', -0.03, 27, 0, '2017-09-17 11:52:37'),
(114, 3398, '4', -2.13574, 5, 0, '2017-09-17 11:52:37'),
(114, 3413, '4', 1.61333, 8, 1, '2017-09-17 11:52:37'),
(114, 3414, '2', 1.08, 12, 1, '2017-09-17 11:52:38'),
(114, 3409, '3', -0.213333, 22, 0, '2017-09-17 11:52:38'),
(114, 3405, '2', -1.08, 12, 0, '2017-09-17 11:52:38'),
(114, 3403, '4', -0.105469, 26, 0, '2017-09-17 11:52:38'),
(114, 3397, '0', -0.00292969, 32, 0, '2017-09-17 11:52:38'),
(114, 3407, '1', 0.333333, 20, 1, '2017-09-17 11:52:38'),
(114, 3416, '4', 0.27, 21, 1, '2017-09-17 11:52:38'),
(114, 3428, '3', -0.348657, 29, 0, '2017-09-17 11:52:38'),
(114, 3424, '2', 0.125517, 35, 1, '2017-09-17 11:52:39'),
(114, 3434, '2', -0.1875, 33, 0, '2017-09-17 11:52:39'),
(114, 3429, '1', 0.396694, 28, 1, '2017-09-17 11:52:39'),
(114, 3436, '4', 1.39463, 14, 1, '2017-09-17 11:52:39'),
(114, 3426, '4', -0.22314, 32, 0, '2017-09-17 11:52:39'),
(114, 3430, '1', 0.619835, 24, 1, '2017-09-17 11:52:39'),
(114, 3417, '4', 0, 44, 0, '2017-09-17 11:52:39'),
(114, 3419, '1', -2.12138, 7, 0, '2017-09-17 11:52:39'),
(114, 3423, '4', -0.0139463, 41, 0, '2017-09-17 11:52:39'),
(114, 3433, '2', 0.75, 22, 1, '2017-09-17 11:52:39'),
(114, 3418, '1', 0.26188, 31, 1, '2017-09-17 11:52:39'),
(114, 3427, '4', 1.58678, 12, 1, '2017-09-17 11:52:40'),
(114, 3432, '1', -1.21488, 16, 0, '2017-09-17 11:52:40'),
(114, 3425, '4', -0.619835, 24, 0, '2017-09-17 11:52:40'),
(114, 3435, '4', 0.0991736, 36, 1, '2017-09-17 11:52:40'),
(114, 3422, '3', 1.12965, 17, 1, '2017-09-17 11:52:40'),
(114, 3420, '1', -1.39463, 14, 0, '2017-09-17 11:52:40'),
(114, 3421, '1', -0.00154959, 43, 0, '2017-09-17 11:52:40'),
(114, 3437, '2', 0.819731, 21, 1, '2017-09-17 11:52:40'),
(114, 3431, '1', -1.21488, 16, 0, '2017-09-17 11:52:40'),
(114, 3455, '3', -0.0103806, 32, 0, '2017-09-17 11:52:40'),
(114, 3442, '2', -0.127163, 27, 0, '2017-09-17 11:52:41'),
(114, 3457, '4', 0.0648789, 29, 1, '2017-09-17 11:52:41'),
(114, 3470, '0', -0.00259516, 34, 0, '2017-09-17 11:52:41'),
(114, 3450, '4', -0.210208, 25, 0, '2017-09-17 11:52:41'),
(114, 3453, '4', 0.00259516, 33, 1, '2017-09-17 11:52:41'),
(114, 3463, '0', -0.00259516, 34, 0, '2017-09-17 11:52:41'),
(114, 3446, '1', -0.0934256, 28, 0, '2017-09-17 11:52:41'),
(114, 3451, '4', -0.936851, 15, 0, '2017-09-17 11:52:41'),
(114, 3440, '3', -0.438581, 21, 0, '2017-09-17 11:52:41'),
(114, 3456, '2', -0.66436, 18, 0, '2017-09-17 11:52:41'),
(114, 3439, '0', -0.00259516, 34, 0, '2017-09-17 11:52:41'),
(114, 3466, '1', -1.03806, 14, 0, '2017-09-17 11:52:42'),
(114, 3438, '4', -1.14446, 13, 0, '2017-09-17 11:52:42'),
(114, 3458, '2', -0.259516, 24, 0, '2017-09-17 11:52:42'),
(114, 3462, '1', -0.0103806, 32, 0, '2017-09-17 11:52:42'),
(114, 3460, '1', -1.03806, 14, 0, '2017-09-17 11:52:42'),
(114, 3444, '3', -0.00259516, 33, 0, '2017-09-17 11:52:42'),
(114, 3468, '4', -1.25606, 12, 0, '2017-09-17 11:52:42'),
(114, 3448, '1', -0.75, 17, 0, '2017-09-17 11:52:42'),
(114, 3503, '0', 0, 14, -1, '2017-09-17 11:52:42'),
(114, 3493, '4', -1.17188, 15, 0, '2017-09-17 11:52:42'),
(114, 3495, '4', -0.676875, 21, 0, '2017-09-17 11:52:43'),
(114, 3477, '4', -0.676875, 21, 0, '2017-09-17 11:52:43'),
(114, 611, '2', -1.92, 10, 0, '2017-09-17 11:52:43'),
(114, 1318, '1', -1.30963, 19, 0, '2017-09-17 11:52:43'),
(114, 1311, '3', -1.3872, 16, 0, '2017-09-17 11:52:43'),
(114, 854, '2', -1.53061, 20, 0, '2017-09-17 11:52:43'),
(114, 607, '2', -0.00860969, 53, 0, '2017-09-17 11:52:43'),
(114, 602, '1', -0.164795, 49, 0, '2017-09-17 11:52:43'),
(114, 852, '4', 0.0408333, 53, 1, '2017-09-17 11:52:43'),
(114, 1303, '3', -1.92, 12, 0, '2017-09-17 11:52:43'),
(114, 604, '3', 0.100833, 49, 1, '2017-09-17 11:52:43'),
(114, 853, '4', -2.08333, 10, 0, '2017-09-17 11:52:44'),
(114, 735, '4', 0.333333, 20, 1, '2017-09-17 11:52:44'),
(114, 722, '2', -1.02083, 15, 0, '2017-09-17 11:52:44'),
(114, 498, '1', -1.17188, 15, 0, '2017-09-17 11:52:44'),
(114, 466, '4', -0.03, 27, 0, '2017-09-17 11:52:44'),
(114, 730, '2', 0.835648, 17, 1, '2017-09-17 11:52:44'),
(114, 723, '1', 0.520833, 21, 1, '2017-09-17 11:52:44'),
(114, 729, '3', -0.0833333, 30, 0, '2017-09-17 11:52:44'),
(114, 487, '4', 1.36688, 13, 1, '2017-09-17 11:52:44'),
(114, 464, '4', -0.0399408, 23, 0, '2017-09-17 11:52:44'),
(114, 490, '3', -1.94676, 7, 0, '2017-09-17 11:52:45'),
(114, 494, '3', 0.963333, 13, 1, '2017-09-17 11:52:45'),
(114, 725, '4', 0.66436, 18, 1, '2017-09-17 11:52:45'),
(114, 486, '1', 1.33333, 12, 1, '2017-09-17 11:52:45'),
(114, 728, '4', -1.62881, 10, 0, '2017-09-17 11:52:45'),
(114, 481, '3', -1.17188, 15, 0, '2017-09-17 11:52:45'),
(114, 737, '4', 0.75, 20, 1, '2017-09-17 11:52:45'),
(114, 727, '2', 0.1875, 27, 1, '2017-09-17 11:52:45'),
(114, 489, '4', -1.57687, 11, 0, '2017-09-17 11:52:45'),
(114, 465, '3', -1.76333, 7, 0, '2017-09-17 11:52:45'),
(114, 720, '4', 1.51454, 11, 1, '2017-09-17 11:52:46'),
(114, 485, '2', -0.958412, 20, 0, '2017-09-17 11:52:46'),
(114, 732, '2', -0.592593, 20, 0, '2017-09-17 11:52:46'),
(114, 509, '1', 1.56481, 10, 1, '2017-09-17 11:52:46'),
(114, 719, '0', 0, 36, -1, '2017-09-17 11:52:46'),
(114, 734, '3', -1.20333, 11, 0, '2017-09-17 11:52:46'),
(114, 726, '1', 1.03806, 14, 1, '2017-09-17 11:52:46'),
(114, 724, '4', -0.12, 24, 0, '2017-09-17 11:52:46'),
(114, 733, '1', -0.316875, 27, 0, '2017-09-17 11:52:46'),
(114, 721, '1', 0.226875, 29, 1, '2017-09-17 11:52:46'),
(114, 718, '1', 0.963333, 13, 1, '2017-09-17 11:52:47'),
(114, 736, '2', -0.66436, 18, 0, '2017-09-17 11:52:47'),
(114, 472, '3', -1.47, 12, 0, '2017-09-17 11:52:47'),
(114, 731, '2', 0.835648, 17, 1, '2017-09-17 11:52:47'),
(114, 478, '2', -2.1168, 8, 0, '2017-09-17 11:52:47'),
(114, 740, '1', 1.22454, 13, 1, '2017-09-17 11:52:47'),
(114, 755, '1', 0.0117188, 45, 1, '2017-09-17 11:52:47'),
(114, 757, '3', -0.318998, 31, 0, '2017-09-17 11:52:47'),
(114, 743, '0', -0.00231481, 36, 0, '2017-09-17 11:52:47'),
(114, 746, '1', -1.94676, 7, 0, '2017-09-17 11:52:47'),
(114, 749, '0', 0, 18, -1, '2017-09-17 11:52:48'),
(114, 499, '0', -0.00207756, 38, 0, '2017-09-17 11:52:48'),
(114, 502, '2', 1.36248, 15, 1, '2017-09-17 11:52:48'),
(114, 477, '1', -0.567108, 26, 0, '2017-09-17 11:52:48'),
(114, 480, '3', -1.36688, 13, 0, '2017-09-17 11:52:48'),
(117, 1169, '2', 0.421875, 15, 1, '2017-09-29 08:57:46'),
(117, 1197, '1', 0.00520833, 23, 1, '2017-09-29 08:58:08'),
(117, 1174, '0', -0.00443787, 26, 0, '2017-09-29 08:58:35'),
(117, 1183, '2', 0.0557851, 19, 1, '2017-09-29 08:58:54'),
(117, 1194, '1', 0.860969, 13, 1, '2017-09-29 08:59:07'),
(117, 1185, '0', -0.00382653, 28, 0, '2017-09-29 08:59:36'),
(117, 1227, '1', -0.00520833, 23, 0, '2017-09-29 08:59:58'),
(117, 1170, '2', 0.130208, 19, 1, '2017-09-29 09:00:17'),
(117, 1297, '3', 1.6875, 15, 1, '2017-09-29 09:00:33'),
(117, 1216, '1', -0.130208, 19, 0, '2017-09-29 09:00:51'),
(117, 1172, '4', 0.48, 12, 1, '2017-09-29 09:01:03'),
(117, 1186, '3', 1.2398, 10, 1, '2017-09-29 09:01:13'),
(117, 1291, '4', 0.0675, 17, 1, '2017-09-29 09:01:30'),
(117, 1195, '4', 0.48, 12, 1, '2017-09-29 09:01:42'),
(117, 1270, '3', -0.277883, 32, 0, '2017-09-29 09:02:14'),
(117, 1261, '3', 0, 38, 1, '2017-09-29 09:02:52'),
(117, 1196, '4', 0.421875, 15, 1, '2017-09-29 09:03:07'),
(117, 1177, '2', 0.892562, 10, 1, '2017-09-29 09:03:17'),
(117, 1184, '4', 0.75, 12, 1, '2017-09-29 09:03:29'),
(117, 1263, '1', 0.151875, 31, 1, '2017-09-29 09:04:00'),
(117, 1276, '4', 0, 32, 0, '2017-09-29 09:04:33'),
(117, 1292, '0', -0.00333333, 32, 0, '2017-09-29 09:04:33'),
(117, 1190, '4', 0.860969, 13, 1, '2017-09-29 09:04:45'),
(117, 1203, '3', 0.163333, 23, 1, '2017-09-29 09:05:08'),
(117, 1210, '0', -0.00520833, 24, 0, '2017-09-29 09:05:33'),
(117, 1173, '2', 0.27, 14, 1, '2017-09-29 09:05:48'),
(117, 1198, '0', -0.0075, 20, 0, '2017-09-29 09:06:08'),
(117, 1218, '4', 0.0075, 21, 1, '2017-09-29 09:06:08'),
(117, 1284, '1', 0, 20, 0, '2017-09-29 09:06:28'),
(117, 1265, '3', -0.24963, 37, 0, '2017-09-29 09:07:05'),
(117, 1268, '2', -0.00520833, 46, 0, '2017-09-29 09:07:51'),
(117, 1208, '1', 0.1728, 38, 1, '2017-09-29 09:08:29'),
(117, 1269, '2', -0.105469, 39, 0, '2017-09-29 09:09:09'),
(117, 1199, '3', 0.0263672, 29, 1, '2017-09-29 09:09:38'),
(117, 1217, '3', 0.12, 16, 1, '2017-09-29 09:09:53'),
(117, 1294, '3', 1.02083, 10, 1, '2017-09-29 09:10:03'),
(117, 1191, '3', 0.46301, 17, 1, '2017-09-29 09:10:20'),
(117, 1175, '4', 0.1875, 24, 1, '2017-09-29 09:10:44'),
(117, 1202, '1', 0.583333, 29, 1, '2017-09-29 09:11:14'),
(117, 1200, '0', -0.0833333, 36, 0, '2017-09-29 09:11:50'),
(117, 1282, '0', 0, 30, -1, '2017-09-29 09:12:20'),
(117, 1281, '0', -0.1, 30, 0, '2017-09-29 09:12:20'),
(117, 1171, '4', 0.45, 17, 1, '2017-09-29 09:12:37'),
(117, 1293, '2', 1.5, 12, 1, '2017-09-29 09:12:49'),
(117, 1220, '0', 0, 8, -1, '2017-09-29 09:12:57'),
(117, 1287, '0', 0, 32, -1, '2017-09-29 09:13:29'),
(117, 1257, '4', 0.8125, 35, 1, '2017-09-29 09:14:04'),
(117, 1189, '3', 1.5, 14, 1, '2017-09-29 09:14:18'),
(117, 1219, '0', -0.136364, 22, 0, '2017-09-29 09:14:40'),
(117, 1289, '3', -1.575, 19, 0, '2017-09-29 09:14:59'),
(117, 1296, '0', -0.125, 24, 0, '2017-09-29 09:15:23'),
(117, 1275, '1', -0.888889, 38, 0, '2017-09-29 09:16:01'),
(117, 1264, '4', 0.545455, 54, 1, '2017-09-29 09:16:56'),
(117, 1204, '4', 1.0625, 31, 1, '2017-09-29 09:17:26'),
(117, 1286, '0', -0.05, 60, 0, '2017-09-29 09:18:26'),
(117, 172, '2', 0.845455, 79, 1, '2017-09-29 09:19:45'),
(117, 1298, '0', -0.05, 60, 0, '2017-09-29 09:20:46'),
(117, 1299, '0', -0.0454545, 66, 0, '2017-09-29 09:21:52'),
(117, 1283, '0', -0.125, 24, 0, '2017-09-29 09:22:16'),
(117, 3689, '0', -0.00333333, 30, 0, '2017-09-29 09:23:08'),
(117, 3649, '4', 1.02083, 10, 1, '2017-09-29 09:23:19'),
(117, 3670, '1', 0.255208, 17, 1, '2017-09-29 09:23:35'),
(117, 3688, '0', -0.00333333, 30, 0, '2017-09-29 09:24:06'),
(117, 3652, '1', 0.130208, 19, 1, '2017-09-29 09:24:25'),
(117, 3841, '3', -0.75, 14, 0, '2017-09-29 09:24:39'),
(117, 3644, '2', 1.50521, 7, 1, '2017-09-29 09:24:45'),
(117, 3650, '0', -0.00520833, 24, 0, '2017-09-29 09:25:10'),
(117, 3681, '0', -0.00520833, 24, 0, '2017-09-29 09:25:34'),
(117, 3675, '4', 1.50521, 7, 1, '2017-09-29 09:25:40'),
(117, 3665, '0', -0.00520833, 24, 0, '2017-09-29 09:26:05'),
(117, 3660, '0', -0.00520833, 24, 0, '2017-09-29 09:26:29'),
(117, 3679, '2', 0.421875, 15, 1, '2017-09-29 09:26:44'),
(117, 3647, '3', 0.75, 12, 1, '2017-09-29 09:26:56'),
(117, 3653, '0', -0.00520833, 24, 0, '2017-09-29 09:27:20'),
(117, 3651, '3', -1.02083, 10, 0, '2017-09-29 09:27:31'),
(117, 3678, '0', -0.00520833, 24, 0, '2017-09-29 09:27:55'),
(117, 3668, '0', -0.00520833, 24, 0, '2017-09-29 09:28:19'),
(117, 3640, '0', -0.00520833, 24, 0, '2017-09-29 09:28:44'),
(117, 3686, '0', -0.00333333, 30, 0, '2017-09-29 09:29:14'),
(117, 3648, '3', -0.046875, 21, 0, '2017-09-29 09:29:36'),
(117, 3676, '1', -0.00520833, 23, 0, '2017-09-29 09:29:58'),
(117, 3643, '0', 0, 7, -1, '2017-09-29 09:30:04'),
(117, 3658, '0', 0, 24, -1, '2017-09-29 09:30:28'),
(117, 3646, '1', -0.421875, 15, 0, '2017-09-29 09:30:44'),
(117, 3645, '0', -0.00520833, 24, 0, '2017-09-29 09:31:08'),
(117, 3666, '1', -0.255208, 17, 0, '2017-09-29 09:31:25'),
(117, 3690, '0', 0, 16, -1, '2017-09-29 09:31:40'),
(117, 3673, '4', -0.255208, 17, 0, '2017-09-29 09:31:58'),
(117, 3655, '4', 1.17188, 9, 1, '2017-09-29 09:32:07'),
(117, 3662, '4', 1.17188, 9, 1, '2017-09-29 09:32:15'),
(117, 3834, '3', -0.979592, 12, 0, '2017-09-29 09:32:28'),
(117, 3642, '0', -0.00520833, 24, 0, '2017-09-29 09:32:52'),
(117, 3667, '0', -0.00520833, 24, 0, '2017-09-29 09:33:16'),
(117, 3664, '0', -0.00520833, 24, 0, '2017-09-29 09:33:40'),
(117, 3657, '2', -0.333333, 16, 0, '2017-09-29 09:33:57'),
(117, 3788, '3', 0, 26, 1, '2017-09-29 09:34:22'),
(117, 3725, '3', 0.998521, 11, 1, '2017-09-29 09:34:34'),
(117, 3786, '1', -0.0177515, 24, 0, '2017-09-29 09:34:58'),
(117, 3765, '0', -0.00443787, 26, 0, '2017-09-29 09:35:24'),
(117, 3778, '0', -0.00443787, 26, 0, '2017-09-29 09:35:50'),
(117, 3757, '0', -0.00443787, 26, 0, '2017-09-29 09:36:18'),
(117, 3794, '0', -0.00443787, 26, 0, '2017-09-29 09:36:45'),
(117, 3838, '0', -0.00382653, 28, 0, '2017-09-29 09:37:13'),
(117, 3833, '0', -0.00382653, 28, 0, '2017-09-29 09:37:41'),
(117, 3831, '0', -0.00382653, 28, 0, '2017-09-29 09:38:10'),
(117, 3820, '0', -0.00382653, 28, 0, '2017-09-29 09:38:39'),
(117, 3836, '0', -0.00382653, 28, 0, '2017-09-29 09:39:07'),
(117, 3845, '2', 0.0612245, 24, 1, '2017-09-29 09:39:31'),
(117, 3844, '1', -1.38138, 9, 0, '2017-09-29 09:39:40'),
(117, 3828, '0', -0.00382653, 28, 0, '2017-09-29 09:40:08'),
(117, 3832, '2', 0.1875, 21, 1, '2017-09-29 09:40:29'),
(117, 3829, '0', -0.00382653, 28, 0, '2017-09-29 09:40:57'),
(117, 3823, '0', -0.00382653, 28, 0, '2017-09-29 09:41:25'),
(117, 3837, '0', -0.00382653, 28, 0, '2017-09-29 09:41:53'),
(117, 3824, '0', -0.00382653, 28, 0, '2017-09-29 09:42:22'),
(117, 3821, '0', -0.00382653, 28, 0, '2017-09-29 09:42:50'),
(117, 3825, '0', -0.00382653, 28, 0, '2017-09-29 09:43:18'),
(117, 3819, '4', 0.46301, 17, 1, '2017-09-29 09:43:34'),
(117, 3835, '0', -0.00382653, 28, 0, '2017-09-29 09:44:03'),
(117, 3816, '3', -0.1875, 21, 0, '2017-09-29 09:44:24'),
(117, 3843, '0', -0.00382653, 28, 0, '2017-09-29 09:44:52'),
(117, 3817, '0', -0.00382653, 28, 0, '2017-09-29 09:45:20'),
(117, 3815, '0', -0.00382653, 28, 0, '2017-09-29 09:45:49'),
(117, 3830, '0', -0.00382653, 28, 0, '2017-09-29 09:46:17'),
(117, 3842, '4', -0.653333, 16, 0, '2017-09-29 09:46:33'),
(117, 3839, '1', -0.55102, 16, 0, '2017-09-29 09:46:49'),
(117, 3827, '0', -0.00382653, 28, 0, '2017-09-29 09:47:17'),
(118, 1218, '0', -0.0075, 20, 0, '2017-09-29 09:53:29'),
(118, 1170, '2', 0.130208, 19, 1, '2017-09-29 09:53:48'),
(118, 1297, '3', 0.9075, 27, 1, '2017-09-29 09:54:15'),
(118, 1292, '0', 0, 30, -1, '2017-09-29 09:54:45'),
(118, 1270, '0', -0.00141777, 46, 0, '2017-09-29 09:55:32'),
(118, 1261, '3', 0.168283, 29, 1, '2017-09-29 09:56:01'),
(118, 1183, '2', 0.0247934, 20, 1, '2017-09-29 09:56:20'),
(118, 1203, '0', -0.00333333, 30, 0, '2017-09-29 09:56:51'),
(118, 1190, '4', 0.860969, 13, 1, '2017-09-29 09:57:04'),
(118, 1194, '1', 0.75, 14, 1, '2017-09-29 09:57:17'),
(118, 1169, '2', 0.421875, 15, 1, '2017-09-29 09:57:33'),
(118, 1172, '0', -0.0075, 20, 0, '2017-09-29 09:57:53'),
(118, 1185, '0', -0.00382653, 28, 0, '2017-09-29 09:58:21'),
(118, 1276, '0', -0.00292969, 32, 0, '2017-09-29 09:58:54'),
(118, 1227, '0', -0.00520833, 24, 0, '2017-09-29 09:59:18'),
(118, 1177, '2', 0.303719, 15, 1, '2017-09-29 09:59:33'),
(118, 1197, '3', -1.50521, 7, 0, '2017-09-29 09:59:39'),
(118, 1174, '0', -0.00443787, 26, 0, '2017-09-29 10:00:06'),
(118, 1263, '1', 0.3675, 26, 1, '2017-09-29 10:00:31'),
(118, 1196, '4', 0.333333, 16, 1, '2017-09-29 10:00:47'),
(118, 1195, '4', 0.1875, 15, 1, '2017-09-29 10:01:03'),
(118, 1198, '4', 1.08, 8, 1, '2017-09-29 10:01:10'),
(118, 1186, '3', 0.860969, 13, 1, '2017-09-29 10:01:23'),
(118, 1210, '0', -0.00520833, 24, 0, '2017-09-29 10:01:47'),
(118, 1291, '4', 0.27, 14, 1, '2017-09-29 10:02:01'),
(118, 1216, '0', -0.00520833, 24, 0, '2017-09-29 10:02:25'),
(118, 1173, '2', 1.08, 8, 1, '2017-09-29 10:02:34'),
(118, 1184, '4', 0.0833333, 20, 1, '2017-09-29 10:02:53'),
(118, 1281, '1', -0.03, 27, 0, '2017-09-29 10:03:21'),
(118, 1294, '3', 0.630208, 13, 1, '2017-09-29 10:03:34'),
(118, 1171, '4', 0.1875, 15, 1, '2017-09-29 10:03:48'),
(118, 1202, '0', -0.00231481, 36, 0, '2017-09-29 10:04:25'),
(118, 1191, '2', -0.244898, 36, 0, '2017-09-29 10:04:25'),
(118, 1217, '2', -0.27, 14, 0, '2017-09-29 10:04:38'),
(118, 1268, '1', 0.0208333, 44, 1, '2017-09-29 10:05:23'),
(118, 1199, '3', 0.046875, 28, 1, '2017-09-29 10:05:50'),
(118, 1219, '3', 0.303719, 15, 1, '2017-09-29 10:06:06'),
(118, 1189, '3', 1.10587, 11, 1, '2017-09-29 10:06:17'),
(118, 1269, '0', 0, 34, -1, '2017-09-29 10:06:50'),
(118, 1265, '0', 0, 8, -1, '2017-09-29 10:06:59'),
(118, 1175, '0', -0.00292969, 32, 0, '2017-09-29 10:07:31'),
(118, 1284, '3', 0, 20, 1, '2017-09-29 10:07:51'),
(118, 1293, '0', -0.130208, 20, 0, '2017-09-29 10:07:51'),
(118, 1257, '4', 0.1875, 36, 1, '2017-09-29 10:08:27'),
(118, 1208, '0', -0.0012, 50, 0, '2017-09-29 10:09:17'),
(118, 1282, '0', -0.00333333, 30, 0, '2017-09-29 10:09:47'),
(118, 1200, '2', -0.0208333, 33, 0, '2017-09-29 10:10:21'),
(118, 1220, '0', -0.00382653, 28, 0, '2017-09-29 10:10:50'),
(118, 1287, '0', -0.00130208, 48, 0, '2017-09-29 10:11:38'),
(118, 1176, '3', -1.2398, 10, 0, '2017-09-29 10:11:49'),
(118, 1296, '0', -0.00520833, 24, 0, '2017-09-29 10:12:13'),
(118, 1298, '1', 0.653333, 32, 1, '2017-09-29 10:12:45'),
(118, 172, '2', 0.805537, 53, 1, '2017-09-29 10:13:38'),
(118, 1286, '0', -0.000833333, 60, 0, '2017-09-29 10:14:39'),
(118, 1250, '0', -0.000833333, 60, 0, '2017-09-29 10:15:39'),
(118, 1264, '0', -0.000688705, 66, 0, '2017-09-29 10:16:45'),
(118, 1299, '0', -0.000688705, 66, 0, '2017-09-29 10:17:52'),
(118, 1283, '4', 0.333333, 16, 1, '2017-09-29 10:18:07'),
(118, 3414, '2', 0.27, 21, 1, '2017-09-29 10:25:08'),
(118, 3403, '3', -0.046875, 28, 0, '2017-09-29 10:25:36'),
(118, 3406, '2', 0.75, 15, 1, '2017-09-29 10:25:52'),
(118, 3398, '2', -0.046875, 28, 0, '2017-09-29 10:26:19'),
(118, 3415, '1', -0.0133333, 28, 0, '2017-09-29 10:26:47'),
(118, 3409, '1', -0.00333333, 29, 0, '2017-09-29 10:27:16'),
(118, 3408, '3', 0.563333, 17, 1, '2017-09-29 10:27:33'),
(118, 3397, '1', -0.574219, 18, 0, '2017-09-29 10:27:51'),
(118, 3411, '2', -0.163333, 23, 0, '2017-09-29 10:28:15'),
(118, 3407, '1', 0.563333, 17, 1, '2017-09-29 10:28:31'),
(118, 3413, '4', 0.12, 24, 1, '2017-09-29 10:28:55'),
(118, 3405, '2', -1.08, 12, 0, '2017-09-29 10:29:08'),
(118, 3410, '1', 0.75, 15, 1, '2017-09-29 10:29:22'),
(118, 3412, '1', -0.653333, 16, 0, '2017-09-29 10:29:38'),
(118, 3399, '1', -0.84668, 15, 0, '2017-09-29 10:29:54'),
(118, 3400, '0', -0.00292969, 32, 0, '2017-09-29 10:30:26'),
(118, 3404, '4', 1.6875, 8, 1, '2017-09-29 10:30:34'),
(118, 3416, '0', -0.00333333, 30, 0, '2017-09-29 10:31:04'),
(118, 3401, '1', -0.949219, 14, 0, '2017-09-29 10:31:18'),
(118, 3402, '4', -1.05762, 13, 0, '2017-09-29 10:31:32'),
(118, 3429, '2', -0.00154959, 43, 0, '2017-09-29 10:32:14'),
(118, 3418, '1', 1.48915, 13, 1, '2017-09-29 10:32:27'),
(118, 3435, '0', -0.00154959, 44, 0, '2017-09-29 10:33:11'),
(118, 3424, '1', -1.58678, 12, 0, '2017-09-29 10:33:23'),
(118, 3422, '3', 0.968492, 19, 1, '2017-09-29 10:33:42'),
(118, 3419, '1', -1.39463, 14, 0, '2017-09-29 10:33:56'),
(118, 3428, '3', -1.12965, 17, 0, '2017-09-29 10:34:14'),
(118, 3434, '0', 0, 30, -1, '2017-09-29 10:34:43'),
(118, 3437, '0', 0, 4, -1, '2017-09-29 10:34:47'),
(118, 3432, '4', 0.0387397, 39, 1, '2017-09-29 10:35:26'),
(118, 3431, '1', -0.154959, 34, 0, '2017-09-29 10:36:01'),
(118, 3421, '3', -0.0557851, 38, 0, '2017-09-29 10:36:39'),
(118, 3426, '1', 1.3032, 15, 1, '2017-09-29 10:36:54'),
(118, 3436, '4', 0.892562, 20, 1, '2017-09-29 10:37:13'),
(118, 3420, '3', -0.819731, 21, 0, '2017-09-29 10:37:34'),
(118, 3425, '4', -1.04752, 18, 0, '2017-09-29 10:37:52'),
(118, 3433, '2', 0.0139463, 41, 1, '2017-09-29 10:38:34'),
(118, 3423, '4', -0.619835, 24, 0, '2017-09-29 10:38:57'),
(118, 3430, '2', -0.683368, 23, 0, '2017-09-29 10:39:20'),
(118, 3417, '1', -0.0139463, 41, 0, '2017-09-29 10:40:01'),
(118, 3427, '0', -0.00154959, 44, 0, '2017-09-29 10:40:45'),
(118, 3439, '4', 1.49481, 10, 1, '2017-09-29 10:40:56'),
(118, 3444, '0', 0, 5, -1, '2017-09-29 10:41:00'),
(118, 3446, '2', 0.0934256, 28, 1, '2017-09-29 10:41:28'),
(118, 3450, '1', -0.0415225, 30, 0, '2017-09-29 10:41:58'),
(118, 3458, '1', 0.127163, 27, 1, '2017-09-29 10:42:25'),
(118, 3460, '1', -0.84083, 16, 0, '2017-09-29 10:42:41'),
(118, 3448, '0', -0.00259516, 34, 0, '2017-09-29 10:43:15'),
(118, 3440, '2', 0.259516, 24, 1, '2017-09-29 10:43:40'),
(118, 3470, '0', -0.00259516, 34, 0, '2017-09-29 10:44:14'),
(118, 3438, '0', -0.00259516, 34, 0, '2017-09-29 10:44:48'),
(118, 3462, '1', -0.314014, 23, 0, '2017-09-29 10:45:11'),
(118, 3442, '4', 0.66436, 18, 1, '2017-09-29 10:45:30'),
(118, 3463, '0', -0.00259516, 34, 0, '2017-09-29 10:46:04'),
(118, 3466, '1', -0.127163, 27, 0, '2017-09-29 10:46:31'),
(118, 3457, '4', 0.373702, 22, 1, '2017-09-29 10:46:53'),
(118, 3451, '2', -1.49481, 10, 0, '2017-09-29 10:47:03'),
(118, 3453, '3', -0.66436, 18, 0, '2017-09-29 10:47:22'),
(118, 3455, '2', -0.0934256, 28, 0, '2017-09-29 10:47:50'),
(118, 3456, '0', -0.00259516, 34, 0, '2017-09-29 10:48:24'),
(118, 3468, '4', -0.373702, 22, 0, '2017-09-29 10:48:47'),
(118, 3515, '4', -0.991875, 17, 0, '2017-09-29 10:49:03'),
(118, 3640, '1', -1.6875, 6, 0, '2017-09-29 10:50:06'),
(118, 3648, '4', -0.255208, 17, 0, '2017-09-29 10:50:23'),
(118, 3670, '2', -1.6875, 6, 0, '2017-09-29 10:50:30'),
(118, 3667, '0', 0, 22, -1, '2017-09-29 10:50:51'),
(118, 3642, '0', 0, 11, -1, '2017-09-29 10:51:02'),
(118, 3679, '3', -0.880208, 11, 0, '2017-09-29 10:51:13'),
(118, 3665, '0', -0.00520833, 24, 0, '2017-09-29 10:51:37'),
(118, 3647, '2', -0.1875, 18, 0, '2017-09-29 10:51:56'),
(118, 3645, '0', -0.00520833, 24, 0, '2017-09-29 10:52:20'),
(118, 3644, '2', 0.75, 12, 1, '2017-09-29 10:52:33'),
(118, 3664, '4', 1.17188, 9, 1, '2017-09-29 10:52:41'),
(118, 3689, '0', -0.00333333, 30, 0, '2017-09-29 10:53:11'),
(118, 3678, '1', 0, 24, 1, '2017-09-29 10:53:36'),
(118, 3675, '0', -0.00520833, 24, 0, '2017-09-29 10:53:36'),
(118, 3646, '3', 0.520833, 14, 1, '2017-09-29 10:53:50'),
(118, 3662, '4', 0.630208, 13, 1, '2017-09-29 10:54:02'),
(118, 3668, '1', -1.50521, 7, 0, '2017-09-29 10:54:09'),
(118, 3652, '1', 0.0208333, 22, 1, '2017-09-29 10:54:31'),
(118, 3651, '1', 2.08333, 4, 1, '2017-09-29 10:54:36'),
(118, 3653, '3', -0.1875, 18, 0, '2017-09-29 10:54:54'),
(118, 3657, '2', -0.255208, 17, 0, '2017-09-29 10:55:10'),
(118, 3658, '3', 0.75, 12, 1, '2017-09-29 10:55:22'),
(118, 3649, '1', -0.046875, 21, 0, '2017-09-29 10:55:44'),
(118, 3676, '2', 0.421875, 15, 1, '2017-09-29 10:56:02'),
(118, 3688, '2', 0.48, 18, 1, '2017-09-29 10:56:16'),
(118, 3643, '2', 0.0208333, 22, 1, '2017-09-29 10:56:38'),
(118, 3666, '1', -1.33333, 8, 0, '2017-09-29 10:56:47'),
(118, 3834, '2', 0.75, 14, 1, '2017-09-29 10:57:01'),
(118, 3660, '0', -0.00520833, 24, 0, '2017-09-29 10:57:25'),
(118, 3655, '3', -0.0208333, 22, 0, '2017-09-29 10:57:48'),
(118, 3690, '0', -0.00333333, 30, 0, '2017-09-29 10:58:18'),
(118, 3841, '0', -0.00382653, 28, 0, '2017-09-29 10:58:46'),
(118, 3650, '2', -0.1875, 18, 0, '2017-09-29 10:59:05'),
(118, 3686, '3', -0.75, 15, 0, '2017-09-29 10:59:19'),
(118, 3681, '3', -0.75, 12, 0, '2017-09-29 10:59:32'),
(118, 3673, '2', 1.02083, 10, 1, '2017-09-29 10:59:42'),
(118, 3757, '0', -0.00443787, 26, 0, '2017-09-29 11:00:08'),
(118, 3765, '2', -0.536982, 15, 0, '2017-09-29 11:00:23'),
(118, 3788, '3', 0.0399408, 23, 1, '2017-09-29 11:00:46'),
(118, 3725, '2', -0.998521, 11, 0, '2017-09-29 11:00:57'),
(118, 3794, '1', -0.217456, 19, 0, '2017-09-29 11:01:16'),
(118, 3778, '0', 0, 13, -1, '2017-09-29 11:01:29'),
(118, 3786, '1', -1.28254, 9, 0, '2017-09-29 11:01:38'),
(118, 3833, '4', 0.1875, 21, 1, '2017-09-29 11:01:58'),
(118, 3821, '3', 2.20408, 4, 1, '2017-09-29 11:02:03'),
(118, 3831, '0', -0.00382653, 28, 0, '2017-09-29 11:02:31'),
(118, 3825, '4', 0.0956633, 23, 1, '2017-09-29 11:02:53'),
(118, 3820, '0', -0.00382653, 28, 0, '2017-09-29 11:03:21'),
(118, 3836, '2', 0.979592, 12, 1, '2017-09-29 11:03:34'),
(118, 3842, '3', 1.92, 6, 1, '2017-09-29 11:03:39'),
(118, 3839, '1', 0, 28, 0, '2017-09-29 11:04:08'),
(118, 3818, '0', -0.00382653, 28, 0, '2017-09-29 11:04:08'),
(118, 3816, '0', -0.00382653, 28, 0, '2017-09-29 11:04:36'),
(118, 3824, '3', -0.382653, 18, 0, '2017-09-29 11:04:54'),
(118, 3823, '4', 0.46301, 17, 1, '2017-09-29 11:05:11'),
(118, 3840, '2', -0.0612245, 24, 0, '2017-09-29 11:05:34'),
(118, 3826, '3', 0, 28, 1, '2017-09-29 11:06:02'),
(118, 3817, '0', -0.00382653, 28, 0, '2017-09-29 11:06:02'),
(118, 3837, '3', -0.382653, 18, 0, '2017-09-29 11:06:21'),
(118, 3844, '1', -0.382653, 18, 0, '2017-09-29 11:06:39'),
(118, 3822, '0', -0.00382653, 28, 0, '2017-09-29 11:07:07'),
(118, 3829, '3', 0.00382653, 29, 1, '2017-09-29 11:07:35'),
(118, 3827, '3', -0.0612245, 24, 0, '2017-09-29 11:07:59'),
(118, 3845, '0', -0.00382653, 28, 0, '2017-09-29 11:08:27'),
(118, 3838, '3', 0.137755, 22, 1, '2017-09-29 11:08:50'),
(118, 3830, '0', -0.00382653, 28, 0, '2017-09-29 11:09:18'),
(118, 3832, '0', -0.00382653, 28, 0, '2017-09-29 11:09:46'),
(118, 3828, '2', -0.309949, 19, 0, '2017-09-29 11:10:06'),
(118, 3819, '4', 0.137755, 22, 1, '2017-09-29 11:10:28'),
(118, 3843, '1', -1.38138, 9, 0, '2017-09-29 11:10:37'),
(118, 3835, '0', -0.00382653, 28, 0, '2017-09-29 11:11:05'),
(118, 3815, '4', -1.6875, 7, 0, '2017-09-29 11:11:13'),
(118, 3857, '0', -0.00333333, 30, 0, '2017-09-29 11:11:43'),
(118, 3851, '0', -0.00333333, 30, 0, '2017-09-29 11:12:13'),
(118, 3850, '1', -0.0133333, 28, 0, '2017-09-29 11:12:41'),
(118, 3861, '1', -0.0833333, 25, 0, '2017-09-29 11:13:06'),
(118, 3846, '3', -0.0833333, 25, 0, '2017-09-29 11:13:31'),
(118, 3853, '0', -0.00333333, 30, 0, '2017-09-29 11:14:02'),
(118, 3858, '0', -0.00333333, 30, 0, '2017-09-29 11:14:32');

-- --------------------------------------------------------

--
-- Table structure for table `session`
--

CREATE TABLE IF NOT EXISTS `session` (
  `sessionID` int(11) NOT NULL AUTO_INCREMENT,
  `userID` int(11) NOT NULL,
  `createdAt` bigint(20) NOT NULL,
  `currentTimestamp` bigint(20) NOT NULL,
  PRIMARY KEY (`sessionID`),
  UNIQUE KEY `sessionID` (`sessionID`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=95 ;

--
-- Dumping data for table `session`
--

INSERT INTO `session` (`sessionID`, `userID`, `createdAt`, `currentTimestamp`) VALUES
(3, 3, 1505278509, 1505278509),
(5, 5, 1505278515, 1505278515),
(46, 39, 1505288287, 1505288287),
(80, 71, 1505288682, 1505288682),
(92, 7, 1506778755, 1506778755),
(94, 56, 1507900541, 1507900541);

-- --------------------------------------------------------

--
-- Table structure for table `skills`
--

CREATE TABLE IF NOT EXISTS `skills` (
  `skill_id` int(5) NOT NULL AUTO_INCREMENT,
  `skill` varchar(255) NOT NULL,
  `availableForUserDriven` tinyint(1) NOT NULL,
  `compulsorySkill` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`skill_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=30 ;

--
-- Dumping data for table `skills`
--

INSERT INTO `skills` (`skill_id`, `skill`, `availableForUserDriven`, `compulsorySkill`) VALUES
(1, 'Android', -1, 0),
(2, 'Artificial Intelligence', -1, 0),
(3, 'Automata (Theory of Computation)', -1, 0),
(4, 'C', -1, 0),
(5, 'C#', -1, 0),
(6, 'C++', -1, 0),
(7, 'Computer Networks', -1, 0),
(8, 'Computer Organization and Architecture', -1, 0),
(9, 'CSS', -1, 0),
(10, 'Cryptography', -1, 0),
(11, 'Data Structure', -1, 0),
(12, 'Database Management', -1, 0),
(13, 'Design and Analysis of Algorithm', -1, 0),
(14, 'Graphic Designing', -1, 0),
(15, 'HTML', -1, 0),
(16, 'Internet of Things', -1, 0),
(17, 'JAVA', -1, 0),
(18, 'JavaScript', -1, 0),
(19, 'Operating Systems', -1, 0),
(20, 'PHP', -1, 0),
(21, 'Python', -1, 0),
(22, '.NET', -1, 0),
(25, 'General Aptitude', -1, 1),
(26, 'Sales/Marketing', 1, 0),
(27, 'Big Data', -1, 0),
(28, 'Linux', 1, 0),
(29, 'Verbal Ability', 1, 0);

-- --------------------------------------------------------

--
-- Table structure for table `testSetup`
--

CREATE TABLE IF NOT EXISTS `testSetup` (
  `testID` int(2) NOT NULL,
  `skillsAllowed` int(5) NOT NULL,
  `timeAllowed` int(5) NOT NULL,
  `singleLogin` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`testID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `testSetup`
--

INSERT INTO `testSetup` (`testID`, `skillsAllowed`, `timeAllowed`, `singleLogin`) VALUES
(1, 2, 25, 0);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE IF NOT EXISTS `users` (
  `userID` int(5) NOT NULL AUTO_INCREMENT,
  `firstName` varchar(255) NOT NULL,
  `lastName` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `mobile` bigint(10) NOT NULL,
  `gender` enum('1','2') NOT NULL,
  `password` varchar(255) NOT NULL,
  `collegeID` int(5) NOT NULL,
  `batch` int(5) NOT NULL,
  `courseID` int(5) NOT NULL,
  `registrationLevel` enum('1','2','3') NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`userID`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=119 ;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`userID`, `firstName`, `lastName`, `email`, `mobile`, `gender`, `password`, `collegeID`, `batch`, `courseID`, `registrationLevel`, `created_at`) VALUES
(1, 'Biswa Bijaya', 'Samal', 'me@biswabijaya.com', 9090374605, '1', '0028606febd55af7e7e880dcd38145b5', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(2, 'satvik', 'bansal', 'satvikbansl@gmail.com', 9466364576, '1', '6e0808f67dc19b32c166dfe5307507c8', 26, 2019, 1, '3', '2017-09-13 06:18:34'),
(3, 'Arun', 'verma', 'arunv4080@gmail.com', 7404273824, '1', '1bd97e2eaa58f325c4fe50caa2f26199', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(4, 'Rishabh', 'Pandey', 'pandeyrishabh97@gmail.com', 8929893219, '1', '1586cc0b899b1724b176e05eb22042f9', 26, 2019, 1, '3', '2017-09-13 06:53:35'),
(5, 'Rishabh', 'Kumar', 'rishabh.bhardwaj2010@gmail.com', 8285618367, '1', '07b23adbb666e5c0b28c3d37282b69db', 26, 2019, 1, '3', '2017-09-13 07:28:30'),
(6, 'navdeep', 'gahlawat', 'navdeepgahlawat3@gmail.com', 9467282823, '1', 'f457a057b1808a6e174bb26fe15c5fd0', 26, 2019, 1, '3', '2017-09-13 06:42:02'),
(7, 'swati', 'arora', 'swatiarora084@gmail.com', 8569805229, '2', 'a5d4debd86791678e5cbff2dcf526e40', 26, 2019, 1, '3', '2017-09-13 06:18:20'),
(8, 'Kunwar', 'Pulastya', 'kpulastya9@gmail.com', 9560429444, '1', '71ce2352360788def4e11c28ba587b67', 26, 2019, 1, '3', '2017-09-13 06:17:26'),
(9, 'Shivam', 'Gupta', 'shivugupta97@gmail.com', 8222089634, '1', 'b40112469d6bb94ca27231a383f5fbd1', 26, 2019, 1, '3', '2017-09-13 06:17:33'),
(10, 'Harish', '                      ', 'ambdharish100@gmail.com', 9138256325, '1', '8c2bd9890f876c0e4ca1a9bc2037df31', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(11, 'Utkarsh', 'Sharma', 'sharmautkarsh96@gmail.com', 8607322246, '1', '83ce1e8e50190f2b09fcd26f30fab65f', 26, 2019, 1, '3', '2017-09-13 07:28:15'),
(12, 'ANSHUL', 'SHARMA', 'anshulsankhyan@gmail.com', 8894828736, '1', '05a301b4b7a2bd3fdc61de2a9aa0d842', 26, 2019, 1, '3', '2017-09-13 05:54:09'),
(13, 'gagan', 'yadav', 'bindassgagan@gmail.com', 7532992250, '1', 'cec0c5981b6ecbf832bba7f43759397f', 26, 2019, 1, '3', '2017-09-13 05:58:58'),
(14, 'Adish', 'Jain', 'adishjain589@gmail.com', 8950697737, '1', 'c5f8a7e74fd63e7acf56dfb6ddd09418', 26, 2019, 1, '3', '2017-09-13 07:00:06'),
(15, 'Prajesh', 'Mehta', 'prajesh.meheta@gmail.com', 9582783109, '1', '306bb98682cab115aa1b8931853a36ab', 26, 2019, 1, '3', '2017-09-13 07:21:18'),
(16, 'juhi', 'parikh', 'juhiparikh97@gmail.com', 8585919707, '2', '68e6691249652ac535c6ae62163d96e9', 26, 2019, 1, '3', '2017-09-13 06:43:11'),
(17, 'Balraj', 'Saini', 'shadybalraj@gmail.com', 9991915421, '1', '5a8c80bc0ef6ca5ae6cf038c8df315a5', 26, 2019, 1, '3', '2017-09-13 05:58:55'),
(18, 'Pranay', 'Khanna', 'pranaykhanna2012@gmail.com', 7838269616, '1', 'c6e6e9119e31c91cc4b2833f89abeabe', 26, 2019, 1, '3', '2017-09-13 07:21:30'),
(19, 'N K HARRIS', 'KUMAR', 'harrisnk.1998@gmail.com', 9953653388, '1', 'eba1d9e1affbdd3a47678305e48efbd1', 26, 2019, 1, '3', '2017-09-13 07:02:10'),
(20, 'Zubin', 'Nair', 'znair96@gmail.com', 9810255331, '1', '60b7abdf7dc947f78b5601723b71cb3c', 26, 2019, 1, '3', '2017-09-13 05:52:13'),
(21, 'K', 'Srinath', 'lnsnath@gmail.com', 9968297704, '1', '87863baab6871748b63352599bd8f06b', 26, 2019, 1, '3', '2017-09-13 06:59:56'),
(22, 'Jyoti', 'dalal', 'jyotidalal1997@gmail.com', 8930578371, '2', '63226edbb6722866769dbc3bd182f336', 26, 2019, 1, '3', '2017-09-13 06:29:34'),
(23, 'Ishaan', 'Bhaskar', '24ishanb@gmail.com', 9555394746, '1', 'e276db8c4e48bf20b18fcb312216cf23', 26, 2019, 1, '2', '2017-09-13 04:58:00'),
(24, 'Nilaksh', 'Thakur', 'nthakur119@gmail.com', 9418067518, '1', '2f2bd891ee1d169b20874e5dfc6533e2', 26, 2019, 1, '3', '2017-09-13 07:11:06'),
(25, 'harshit', 'sachdeva', 'harshsachdeva80@gmail.com', 8447882079, '1', '16dda49085278a848f33b52d4a7eac13', 26, 2019, 1, '3', '2017-09-13 07:31:55'),
(26, 'Harsh', 'Jangra', 'harshjangra48@gmail.com', 8950198238, '1', '349df45dbfd35eaa9b4809dc0c1a5834', 26, 2019, 1, '3', '2017-09-13 06:46:26'),
(27, 'Jyoti', 'Gambhir', 'jyotigambhir247@gmail.com', 8814053073, '2', '39af072a4c951cb684f43a8f15234536', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(28, 'Deeksha', 'Shandilya', 'shandydeeksha16@gmail.com', 9816354522, '2', '23b431acfeb41e15d466d75de822307c', 26, 2019, 1, '3', '2017-09-13 05:58:59'),
(29, 'Ishaan', 'Bhaskar', 'ikbh99@gmail.com', 9015975255, '1', 'e276db8c4e48bf20b18fcb312216cf23', 26, 2019, 1, '3', '2017-09-13 07:11:07'),
(30, 'shruti', 'thapar', 'shrutithapar15@gmail.com', 7056703040, '2', 'd70cb91d7205f02242d43d1d66d830a9', 26, 2019, 1, '3', '2017-09-13 07:18:42'),
(31, 'bhaveet', 'kumar', 'bhaveetseekin14@gmail.com', 8930855838, '1', 'bd8efb476ec2433fa85cd3cba06b4c63', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(32, 'pranav', 'vashist', 'pranav.vashist111@gmail.com', 8447847063, '1', 'd69f1db266ee2077e2b1e220aeffc211', 26, 2019, 1, '2', '2017-09-17 15:09:35'),
(33, 'Preet', 'Goel', 'pgpreetgoel12@gmail.com', 9582987155, '1', '740c94ad74f60818d9ae41da7881e015', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(34, 'Rishabh', 'Sinha', 'rishabh566@live.com', 9999288920, '1', 'e10adc3949ba59abbe56e057f20f883e', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(35, 'Karan', 'Gupta', 'karankg1997@gmail.com', 9560217892, '1', '7c117c7b7aa0884428f71bc4269e389e', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(36, 'Parichay', 'Sharma', 'parichaysharma21@gmail.com', 9717661840, '1', 'a895e25a071eba550a3db52f0b5d9ef0', 26, 2019, 1, '3', '2017-09-13 09:54:22'),
(37, 'raghav', 'aggarwal', 'raghav9712@gmail.com', 9810877466, '1', '6053586e1a5d26919d8b997e52fa27ec', 26, 2019, 1, '3', '2017-09-13 08:44:36'),
(38, 'hritika', 'tandon', 'tandonhritika@gmail.com', 9992533383, '2', 'bbc7f430cd5dc0fef7ad088371c03a71', 26, 2019, 1, '3', '2017-09-13 09:49:51'),
(39, 'satyam', 'agrawal', 'satyam.agr1996@gmail.com', 9992209339, '1', '9aafad407f857ef19a3bee004a7df4a4', 26, 2019, 1, '3', '2017-09-13 09:22:23'),
(40, 'Ravi', 'Kharb', 'ravikkharb@gmail.com', 9034612834, '1', '8ee50bfb994662363b22998cc213fe32', 26, 2019, 1, '3', '2017-09-13 09:32:13'),
(41, 'rishabh', 'surana', 'rishu.surana14@gmail.com', 8287776461, '1', '15b1a4c0ddb2fdb69f33dc5616542a7d', 26, 2019, 1, '3', '2017-09-13 08:46:43'),
(42, 'Shonik', 'Raj', 'rajshonik@gmail.com', 9464374414, '1', 'dbabe6aa3bf071169639c4ca988121aa', 26, 2019, 1, '3', '2017-09-13 10:01:45'),
(43, 'Pulkit', 'Gogia', 'pulkit.ramjas@gmail.com', 8287493983, '1', 'c1ebaa4a65aefce86572f0d0350c155c', 26, 2019, 1, '3', '2017-09-13 09:39:38'),
(44, 'Vaishali', 'singh', 'vishusingh7790@gmail.com', 9034449142, '2', '40c3a8cdce1668cf859c9e14ab0b999d', 26, 2019, 1, '3', '2017-09-13 09:38:12'),
(45, 'garishma', 'arora', 'garishma14@gmail.com', 9013232020, '2', 'c7c6f4230c2b66f46bbeaddf895dc19b', 26, 2019, 1, '3', '2017-09-13 09:19:11'),
(46, 'vasant', 'vohra', 'vasantvvv@gmail.com', 8700410435, '1', '4f95aab4a3023235322d65b4fd5d5e05', 26, 2019, 1, '3', '2017-09-13 09:38:15'),
(47, 'SAKSHI', 'GUPTA', 'sakshi.gupta0417@gmail.com', 9873560417, '2', 'ab1dbd386662b62477b62087a389256a', 26, 2019, 1, '3', '2017-09-13 08:54:38'),
(48, 'Archirekh', 'Majumder', 'archirekhmajumder42@gmail.com', 9830788010, '1', '01218e86e95e581b12f7c12e3c981eb8', 26, 2019, 1, '3', '2017-09-13 09:47:28'),
(49, 'Navodit', 'Singhal', 'singhalnavodit@gmail.com', 9818728650, '1', '763b9e7a732bc998e0772040cf5110bf', 26, 2019, 1, '3', '2017-09-13 10:20:14'),
(50, 'Hemant', 'Kumar', 'hemantdahiya99@gmail.com', 8529493494, '1', '78bb292f9460177b64475cd16821920e', 26, 2019, 1, '3', '2017-09-13 09:06:17'),
(51, 'kenneth', 'mohandas', 'kennethmohandas111@gmail.com', 9971381272, '1', '828da7f4c34eed26873cade974c8de90', 26, 2019, 1, '3', '2017-09-13 10:20:10'),
(52, 'Daya ', 'vats', 'daya23vats@gmail.com', 7404802608, '1', 'f592b5d3889dcfb8809034f4e8d838cd', 26, 2019, 1, '3', '2017-09-13 09:33:53'),
(53, 'Kapil ', 'Kumar', 'kapilmit10@gmail.com', 9466061450, '1', 'dd48e09a593d12aff6a314d2bf5a26cb', 26, 2019, 1, '3', '2017-09-13 10:20:27'),
(54, 'aditya', 'sethi', 'adisethi123@gmail.com', 9953999221, '1', '3dd26396192b16eda60bb99efaf8e7a4', 26, 2019, 1, '3', '2017-09-13 08:06:55'),
(55, 'kshitij', 'katiyar', 'srm.katiyar@gmail.com', 8571019767, '1', '63808a6656c919529927388395f1905e', 26, 2019, 1, '3', '2017-09-13 08:31:45'),
(56, 'Manik', 'Juneja', 'manikjuneja13@gmail.com', 8222800220, '1', 'f3b95292c3eadbed8af336fe91018d83', 26, 2019, 1, '3', '2017-09-13 09:51:39'),
(57, 'manik', 'batra', 'manikbatra25@gmail.com', 9896377265, '1', 'c62406846525b5d1ae388252e97eebc2', 26, 2019, 1, '3', '2017-09-13 09:30:45'),
(58, 'Rishav ', 'Kaushal', 'rishavkaushal111@gmail.com', 9599510941, '1', '827ccb0eea8a706c4c34a16891f84e7b', 26, 2019, 1, '3', '2017-09-13 08:29:40'),
(59, 'Aastha', 'Verma', 'aasthav1997@gmail.com', 8802655249, '2', '8fd375682f1c7d7def5894bf4b6f2ccf', 26, 2019, 1, '3', '2017-09-13 08:14:17'),
(60, 'diwakar', 'kumar', 'diwakarjha397@gmail.com', 7876025394, '1', '6e733754e97c1b13ad69d00a7196c41d', 26, 2019, 1, '3', '2017-09-13 09:06:18'),
(61, 'pranav', 'vashist', 'pranav.vashist28@gmail.com', 7011136275, '1', 'd69f1db266ee2077e2b1e220aeffc211', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(62, 'sandeep', 'chahal', 'sandeepchahal740@gmail.com', 9118000060, '1', 'fc0d4bcbb7721a72fa6ca48258dd7bf5', 26, 2019, 1, '3', '2017-09-13 08:21:52'),
(63, 'shivani', 'gulati', 'shivani.gulati77@gmail.com', 9310645901, '2', '2138cb5b0302e84382dd9b3677576b24', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(64, 'PREETI', 'GUPTA', 'preetigupta998@gmail.com', 8826013055, '2', '48d9d2bbfdb0d128464d3d7ecfa626b4', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(65, 'RAVI', 'KHAPRA', 'anonymouscia786@gmail.com', 9671400742, '1', '3d3966a365f3c300004a14135e1236f1', 26, 2019, 1, '3', '2017-09-13 08:29:38'),
(66, 'Ritika ', 'Agarwal', 'ritikaa72@gmail.com', 9530090539, '2', '8377260da528225b6bd7d85d1215f32d', 26, 2019, 1, '3', '2017-09-13 09:35:39'),
(67, 'SHUBHANGI', 'KUNDRA', 'shubhangi.kundra.99@gmail.com', 9729630399, '2', '5650ecb36f6611ba3e7497db983f3f7b', 26, 2019, 1, '3', '2017-09-13 09:37:33'),
(68, 'NIKHIL', 'GUPTA', 'gupta.nikhil3199@gmail.com', 9654553327, '1', '102eb1ef188b1a24e1a3e2621298702a', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(69, 'AVINASH ', 'BAGUL', 'avibagul80@gmail.com', 8087974090, '1', 'c7013e06526afc34c1818f456a3880db', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(70, 'prafful', 'singh', 'prafful.singh017@gmail.com', 8384928547, '1', '3fc0a7acf087f549ac2b266baf94b8b1', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(71, 'Rajat', 'Sharma', 'rajat1111997@gmail.com', 9991538131, '1', '1fb41bbe5e723a4ba2f157a97d928913', 26, 2019, 1, '3', '2017-09-17 15:09:35'),
(72, 'Inaam', 'mir', 'mirinaam1995.im@gmail.com', 8059817107, '1', 'f59046ad3f1c4966c398bd1fc9ed8b33', 26, 2018, 1, '3', '2017-09-17 15:09:49'),
(73, 'vivek ', 'mishra', 'vivekmishra892@gmail.com', 9971689497, '1', '1dc36fe72f272b889d364dc4d4c7ffd8', 26, 2018, 1, '3', '2017-09-13 05:58:26'),
(74, 'Dimple', 'Bhardwaj', 'bhardwaj.dimple13@yahoo.com', 8816937894, '2', '047eb126571d816e4d8d7c1cff453984', 26, 2018, 1, '1', '2017-09-17 15:09:49'),
(75, 'Neha', 'Rana', 'neharana95126@gmail.com', 8930023813, '2', 'a05c15c5197d178fa82e9eb9b3f8cf9e', 26, 2018, 1, '3', '2017-09-17 15:09:49'),
(76, 'Prateek', 'Wadhwa', 'prateek.wadhwa14@gmail.com', 7206345990, '1', '38f17efe263aec7e30081d4bca251820', 26, 2018, 1, '3', '2017-09-13 06:12:19'),
(77, 'Sakshi ', 'Dhawan', 'sakshidhawan87@gmail.com', 9999147267, '2', '20412eb6968682060afde3b19ab484f3', 26, 2018, 1, '3', '2017-09-17 15:09:49'),
(78, 'ROHAN', 'YADAV', 'ROHANYADAV024@GMAIL.COM', 9717852740, '1', '781e5e245d69b566979b86e28d23f2c7', 26, 2018, 1, '3', '2017-09-13 04:51:35'),
(79, 'Utsav', 'Preet', 'utsavpreet@gmail.com', 9717286281, '1', '420ff54f63f0c752838b0debb64ad865', 26, 2018, 1, '3', '2017-09-13 06:31:48'),
(80, 'Karthik', 'Mohan', 'karthikmohan59@gmail.com', 9566113354, '1', 'ca1ce7282abaf433cb28178f2b1460cf', 26, 2018, 1, '3', '2017-09-13 06:08:39'),
(81, 'sajal', 'bansal', 'sajalbansal974@gmail.com', 9654422844, '1', 'e563326f1612cddc7b7e8ce81b4a3233', 26, 2018, 1, '3', '2017-09-13 04:50:56'),
(82, 'Aditi', 'Mudgal', 'aditi.mudgalaa2@gmail.com', 8130211368, '2', 'c18692b896ddbc0a5eb83fd64983db93', 26, 2018, 1, '3', '2017-09-17 15:09:49'),
(83, 'pardeep', 'rohilla', 'pardeeprohilla060@gmail.com', 8571027185, '1', '2999f74c20197d34301f442cfc10a19b', 26, 2018, 1, '3', '2017-09-13 06:16:26'),
(84, 'shikhar', 'kapila', 'kap.shikhar@gmail.com', 9999288920, '1', '403f8e510ebb7ac9489f2f1d1804a50b', 26, 2018, 1, '3', '2017-09-13 07:33:00'),
(85, 'Faisal', 'Ahmed', 'faisalahmedwork1@gmail.com', 9468267176, '1', '34d9836a599015ab4215aaa3dfb7e2d5', 26, 2018, 1, '3', '2017-09-13 06:49:14'),
(86, 'Yashika', 'Chaudhary', 'yashikac17@gmail.com', 7027673833, '2', '957773852059a0090d504aefb934c9e2', 26, 2018, 1, '3', '2017-09-17 15:09:49'),
(87, 'Maninder', 'Duhan', 'Maninderduhan1@gmail.com', 9050566076, '1', '99461716eba4e60a6eae8471bdf57034', 26, 2018, 1, '3', '2017-09-13 06:49:27'),
(88, 'Devanshu ', 'Kaushik', 'devanshu.kaushik74@gmail.com', 8800208006, '1', 'f713b8e4b896ef1f730f1d89abfc95d0', 26, 2018, 1, '3', '2017-09-13 05:35:21'),
(89, 'Yogesh', 'Kumar', 'kumaryogesh13500@gmail.com', 9990038348, '1', 'e0f489329a2f1aa9a4b14ae118767227', 26, 2018, 1, '3', '2017-09-13 06:27:24'),
(90, 'Garima', 'Chauhan', 'garimachauhan54@gmail.com', 8813017767, '2', 'e63f56d891426b54ad592f0f5537b17a', 26, 2018, 1, '3', '2017-09-13 07:18:27'),
(91, 'Kunal', 'Manik', 'kunalmanik95@gmail.com', 8901315677, '1', '548f06af15a6493170cb6f400581d096', 26, 2018, 1, '3', '2017-09-13 06:35:16'),
(92, 'hardik', 'talwar', 'hardik23197@gmail.com', 9416080923, '1', '6f1a4eac96bd3e211101867f3f7e5826', 26, 2018, 1, '3', '2017-09-13 06:49:02'),
(93, 'Aditya', 'Kohli', 'akohli2014@gmail.com', 9999219792, '1', 'ad64c1befd4671bf4cfb491bfff2de8b', 26, 2018, 1, '3', '2017-09-13 05:18:55'),
(94, 'Kaushal', 'Kumar', 'kaushalscobono@gmail.com', 9671144354, '1', '10c02a49d1494425da60231fff38c467', 26, 2018, 1, '3', '2017-09-13 06:41:47'),
(95, 'Mohan', 'Samal', 'mohan.k.samal@gmail.com', 8826819550, '1', '85064efb60a9601805dcea56ec5402f7', 26, 2018, 1, '3', '2017-09-13 05:50:05'),
(96, 'ARUSHI', 'SHARMA', 'sharmaarushionline05@gmail.com', 9990113151, '2', '398e00ed7218d1d0a1fcea08dbf9aac1', 26, 2018, 1, '3', '2017-09-13 06:13:04'),
(97, 'SAHIL', 'KAUSHISH', 'sahilkaushish7@gmail.com', 9813827414, '1', '3d769db291e9ba1661ab59393570952c', 26, 2018, 1, '3', '2017-09-13 05:40:50'),
(98, 'K H', 'VAISHNAVI', '2khv.1096@gmail.com', 8447770809, '2', '1a7a54e0e7dce9a656dd751c732e519f', 26, 2018, 1, '3', '2017-09-13 06:52:19'),
(99, 'sachin', 'ruhil', 'sachinruhil06@gmail.com', 9811159922, '1', 'ffac1fcbb5e5b438e064fff0eb38879f', 26, 2018, 1, '3', '2017-09-13 05:33:36'),
(100, 'Harmanan', 'Kohli', 'hkohli40@gmail.com', 9819527168, '1', '2d1b07ff9f34bfdf546a6b45c6319bdb', 26, 2018, 1, '3', '2017-09-13 06:07:48'),
(101, 'Shubham', 'Angaria', 'shubhammetrodude@gmail.com', 9582053671, '1', '39f789c974aaf55fa304153254b48355', 26, 2018, 1, '3', '2017-09-13 06:03:48'),
(102, 'Varshini', 'Srinivasan', 'suj.varsha@gmail.com', 9599587417, '2', '1329f0fee1a45a217ea1447f3c87bcd9', 26, 2018, 1, '3', '2017-09-13 06:31:10'),
(103, 'Chiman ', 'saini', 'Chimansaini1994@gmail.com', 8059109052, '1', '632e37e4ab4ce2c4003b8ebe40cf6289', 26, 2018, 1, '3', '2017-09-13 06:01:30'),
(104, 'Pulkita', 'Goel', 'pulkitagoel.goel@gmail.com', 9899411381, '2', 'b592499c4e84ab826a65e3170040699a', 26, 2018, 1, '3', '2017-09-13 06:52:34'),
(105, 'POOJA', 'BHUSHAN', 'poojabhushan96@gmail.com', 8930929558, '2', '04eaae5e3b8c6620e759dc99f37bb4a3', 26, 2018, 1, '3', '2017-09-13 05:49:09'),
(106, 'Damini', 'Sharma', 'daminisharma.278@gmail.com', 9818028713, '2', '67cb6d1087fe07ff0647e5bc83916746', 26, 2018, 1, '3', '2017-09-13 06:04:21'),
(107, 'priya', 'duggal', 'priya07duggal@gmail.com', 7838779549, '2', 'ebf36750de40477dbcb4f996bb01a979', 26, 2018, 1, '3', '2017-09-13 06:08:04'),
(108, 'Saurabh', 'Joshi', 'saurabhjoshi130894@gmail.com', 7275581735, '1', 'cc06bbaba0df3b2fe7127954ce952c6c', 26, 2018, 1, '3', '2017-09-13 05:50:10'),
(109, 'vanshika', 'oberoi', 'vanshikaoberoi17@gmail.com', 9999331265, '2', '9ce5bf51f40edd95f7f4dbfcce918ad7', 26, 2018, 1, '3', '2017-09-13 05:44:47'),
(110, 'Anirudh', 'Gupta', 'emanirudh96@gmail.com', 8860982609, '1', '8dc52efd4d15108378c27c92e1ef04ae', 26, 2018, 1, '3', '2017-09-13 06:16:06'),
(111, 'Dimple', 'Bhardwaj', 'bhardwaj.dimple13@gmail.com', 7015455465, '2', '047eb126571d816e4d8d7c1cff453984', 26, 2018, 1, '3', '2017-09-13 06:02:50'),
(112, 'Shubhank', 'Kuchhal', 'shubhank.kuchhal1997@gmail.com', 7404643238, '1', 'b47592872fca4910b55af1120167fcc5', 26, 2018, 1, '3', '2017-09-17 15:09:49'),
(113, 'ROHAN', 'YADAV', 'VIVEKJOGESHAM178@GMAIL.COM', 9717852741, '1', '25f9e794323b453885f5181f1b624d0b', 26, 2018, 1, '3', '2017-09-13 05:50:29'),
(114, 'sajal', 'bansal', 'dipeshbansal407@gmail.com', 9654760456, '1', 'e563326f1612cddc7b7e8ce81b4a3233', 26, 2018, 1, '3', '2017-09-13 06:08:49'),
(115, 'pranav', 'vashist', 'pranav.vashist1@gmail.com', 8447847063, '1', 'd69f1db266ee2077e2b1e220aeffc211', 26, 2018, 1, '1', '2017-09-17 15:09:49'),
(116, 'bhaveet', 'kumar', 'bhaveetseekin14@gmail.com', 8930855838, '1', 'bd8efb476ec2433fa85cd3cba06b4c63', 26, 2018, 1, '1', '2017-09-17 15:09:49'),
(117, 'Alakshender ', 'Kumar', 'ramakant987@gmail.com', 9650644894, '1', '203f954d9891ffa7e67b829de930d97c', 41, 2017, 1, '3', '2017-09-29 09:47:47'),
(118, 'Vartika', 'Srivastava', 'vartika640@gmail.com', 7503057377, '2', 'd25b55d37b1656b9710ddbb992d6e367', 41, 2017, 1, '3', '2017-09-29 11:15:09');

-- --------------------------------------------------------

--
-- Table structure for table `userSkills`
--

CREATE TABLE IF NOT EXISTS `userSkills` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `userID` int(5) NOT NULL,
  `skillID` int(5) NOT NULL,
  `score` float NOT NULL DEFAULT '0',
  `status` enum('1','2','3','4') NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=601 ;

--
-- Dumping data for table `userSkills`
--

INSERT INTO `userSkills` (`id`, `userID`, `skillID`, `score`, `status`) VALUES
(1, 3, 2, 4.5399, '4'),
(2, 2, 2, 1.16767, '4'),
(3, 2, 16, -3.3514, '4'),
(4, 1, 15, 47.3203, '4'),
(8, 9, 2, -10.2087, '4'),
(10, 4, 15, 59.6668, '4'),
(11, 9, 1, -6.52633, '4'),
(12, 11, 15, 56.3714, '4'),
(13, 9, 17, -10.6812, '4'),
(14, 11, 17, 17.5707, '4'),
(15, 20, 15, 60.252, '4'),
(16, 4, 13, -10.4956, '4'),
(17, 8, 4, 16.9613, '4'),
(18, 9, 12, -11.1449, '4'),
(19, 14, 15, 56.3272, '4'),
(20, 7, 17, 13.8097, '4'),
(21, 21, 4, 52.6989, '4'),
(22, 10, 25, 25.4214, '4'),
(23, 8, 17, 33.4049, '4'),
(25, 13, 6, 27.3127, '4'),
(26, 12, 17, -2.2435, '4'),
(27, 6, 8, -10.0521, '4'),
(28, 7, 6, -4.92445, '4'),
(29, 21, 6, 18.7212, '4'),
(30, 14, 9, 34.4266, '4'),
(31, 19, 4, 21.4013, '4'),
(33, 3, 16, -2.94615, '4'),
(34, 20, 4, 36.0975, '4'),
(35, 9, 21, -12.0841, '4'),
(36, 19, 6, 12.8584, '4'),
(37, 3, 21, -7.16278, '4'),
(38, 20, 17, 21.8186, '4'),
(39, 2, 21, 0, '1'),
(40, 16, 6, -10.5745, '4'),
(41, 23, 17, 0, '1'),
(42, 2, 14, 0, '1'),
(43, 20, 19, 44.4145, '4'),
(44, 4, 4, 8.6437, '4'),
(45, 11, 4, 23.0543, '4'),
(46, 6, 4, 14.5534, '4'),
(48, 20, 11, 7.37393, '4'),
(49, 21, 17, -10.2271, '4'),
(50, 22, 4, 7.87018, '4'),
(51, 15, 11, 0, '1'),
(52, 1, 9, -6.82787, '4'),
(53, 18, 17, 13.9812, '4'),
(54, 7, 15, -10.1067, '4'),
(55, 1, 6, 6.81656, '4'),
(56, 21, 15, 33.1235, '4'),
(57, 14, 18, -2.68074, '4'),
(58, 3, 14, 0, '1'),
(59, 6, 19, 17.0643, '4'),
(61, 12, 2, -5.9284, '4'),
(62, 22, 17, 9.79466, '4'),
(63, 4, 17, -10.5652, '4'),
(64, 23, 15, 0, '1'),
(66, 7, 4, -10.4323, '4'),
(67, 12, 25, 2.32391, '4'),
(68, 5, 9, -2.06785, '4'),
(69, 11, 19, 5.35562, '4'),
(71, 24, 15, 42.2991, '4'),
(72, 18, 15, 59.6222, '4'),
(73, 11, 11, -12.1844, '4'),
(74, 6, 17, -11.9298, '4'),
(75, 19, 15, 52.3512, '4'),
(76, 5, 15, 48.6424, '4'),
(77, 2, 26, -10.6364, '4'),
(78, 3, 26, -5.55974, '4'),
(79, 15, 15, 37.8051, '4'),
(80, 13, 4, 0.0132732, '4'),
(81, 4, 26, -10.1701, '4'),
(83, 24, 20, -10.3476, '4'),
(84, 14, 26, 0.53668, '4'),
(85, 15, 17, 5.27347, '4'),
(86, 18, 4, 9.9755, '4'),
(87, 6, 25, 17.1536, '4'),
(88, 16, 11, -11.2558, '4'),
(89, 26, 17, -11.3738, '4'),
(90, 25, 17, 40.9847, '4'),
(91, 26, 1, 0, '1'),
(93, 15, 19, -7.03052, '4'),
(94, 26, 11, -10.5169, '4'),
(95, 18, 19, 8.57893, '4'),
(96, 25, 15, 47.8551, '4'),
(97, 5, 13, 15.6557, '4'),
(98, 24, 19, -2.8033, '4'),
(99, 23, 25, 0, '1'),
(100, 19, 17, -11.3187, '4'),
(101, 26, 15, 34.7255, '4'),
(102, 19, 25, 13.6261, '4'),
(103, 25, 6, 42.1668, '4'),
(104, 5, 4, 13.0207, '4'),
(105, 14, 17, 21.3816, '4'),
(106, 21, 25, 38.3192, '4'),
(108, 26, 6, -11.6531, '4'),
(109, 22, 11, 4.61307, '4'),
(111, 20, 25, 8.49288, '4'),
(112, 24, 4, 2.70395, '4'),
(113, 26, 25, 7.09846, '4'),
(114, 7, 25, -11.0308, '4'),
(115, 11, 25, 4.55275, '4'),
(116, 5, 25, 8.12766, '4'),
(117, 4, 25, 0.680361, '4'),
(118, 3, 25, 10.2128, '4'),
(119, 17, 25, 8.15931, '4'),
(120, 28, 25, 11.5581, '4'),
(121, 15, 4, 5.69711, '4'),
(122, 25, 4, 23.6583, '4'),
(123, 2, 25, 12.6814, '4'),
(124, 13, 19, 0, '4'),
(125, 13, 25, 18.393, '4'),
(126, 1, 4, 10.7069, '4'),
(128, 14, 25, 9.66068, '4'),
(129, 22, 25, 2.09558, '4'),
(130, 1, 25, 6.99288, '4'),
(131, 16, 15, 52.6067, '4'),
(132, 27, 11, 6.93301, '4'),
(133, 24, 25, -0.510331, '4'),
(134, 10, 21, -1.68563, '4'),
(135, 27, 3, -10.0576, '4'),
(136, 27, 4, 10.5613, '4'),
(137, 29, 4, -10.2908, '4'),
(138, 10, 12, 19.98, '4'),
(139, 10, 25, 25.4214, '4'),
(140, 29, 15, 55.3358, '4'),
(141, 25, 25, 9.13424, '4'),
(142, 29, 17, 33.5259, '4'),
(143, 29, 19, -1.86329, '4'),
(144, 27, 25, -2.7966, '4'),
(145, 9, 25, -11.1241, '4'),
(146, 8, 25, 39.8598, '4'),
(147, 16, 17, 7.23042, '4'),
(149, 16, 25, 9.29446, '4'),
(150, 29, 25, 32.1009, '4'),
(151, 15, 25, 3.96519, '4'),
(152, 18, 25, 9.75649, '4'),
(153, 30, 25, -0.925075, '4'),
(154, 17, 17, 19.488, '4'),
(155, 28, 17, 8.6844, '4'),
(156, 30, 11, 5.83331, '4'),
(157, 30, 4, 6.61192, '4'),
(158, 30, 13, 1.60465, '4'),
(159, 30, 6, 18.153, '4'),
(160, 5, 17, 11.3724, '4'),
(161, 25, 11, 14.877, '4'),
(162, 32, 25, 0, '1'),
(163, 36, 4, 17.753, '4'),
(164, 37, 4, 25.2985, '4'),
(165, 41, 4, 9.42824, '4'),
(166, 40, 21, -10.3076, '4'),
(167, 37, 6, -10.9571, '4'),
(168, 39, 17, -0.968725, '4'),
(169, 36, 21, -10.1722, '4'),
(170, 41, 6, -3.48037, '4'),
(171, 39, 4, -10.7601, '4'),
(172, 40, 16, 10.6833, '4'),
(174, 46, 1, -11.3326, '4'),
(175, 39, 12, -10.9095, '4'),
(176, 46, 21, -10.4411, '4'),
(177, 33, 3, -10.4605, '4'),
(178, 52, 1, -3.28762, '4'),
(179, 37, 27, -10.152, '4'),
(180, 51, 6, 1.50024, '4'),
(181, 39, 11, -10.552, '4'),
(182, 48, 17, 9.66277, '4'),
(184, 53, 6, 12.3126, '4'),
(185, 42, 7, 3.33613, '4'),
(186, 43, 11, -4.98794, '4'),
(187, 42, 15, 36.7718, '4'),
(188, 39, 3, -10.8534, '4'),
(189, 46, 15, 49.8597, '4'),
(190, 46, 19, -8.36474, '4'),
(191, 48, 11, -6.57122, '4'),
(192, 39, 25, -7.3502, '4'),
(193, 39, 25, -7.3502, '4'),
(194, 40, 4, 44.4068, '4'),
(195, 42, 17, -11.9184, '4'),
(196, 40, 3, 7.90977, '4'),
(197, 52, 15, 39.1264, '4'),
(198, 37, 11, 0, '1'),
(199, 48, 4, 8.83971, '4'),
(200, 58, 15, -10.2098, '4'),
(201, 61, 3, -10.8298, '4'),
(202, 31, 6, 12.3207, '4'),
(203, 33, 4, 15.0132, '4'),
(204, 34, 3, -0.909116, '4'),
(205, 43, 26, -6.16736, '4'),
(206, 61, 26, -5.55728, '4'),
(207, 61, 13, 6.81434, '4'),
(208, 34, 15, 35.5484, '4'),
(209, 31, 17, -10.6349, '4'),
(210, 61, 11, 6.3107, '4'),
(211, 55, 15, 34.9838, '4'),
(212, 58, 11, -10.4086, '4'),
(213, 50, 4, 18.8028, '4'),
(214, 48, 13, 10.3917, '4'),
(215, 35, 17, 29.2518, '4'),
(216, 38, 15, 35.7276, '4'),
(217, 52, 11, -10.3713, '4'),
(218, 33, 11, 3.95027, '4'),
(219, 56, 15, 33.6053, '4'),
(220, 31, 15, 41.6515, '4'),
(221, 47, 17, -10.6247, '4'),
(222, 61, 17, 0, '4'),
(223, 43, 17, -4.58252, '4'),
(224, 44, 7, 15.2464, '4'),
(225, 55, 17, 0, '1'),
(226, 49, 6, 23.1997, '4'),
(227, 61, 25, 17.398, '4'),
(228, 34, 25, 13.1141, '4'),
(229, 60, 1, -10.8501, '4'),
(230, 50, 6, -11.213, '4'),
(231, 33, 17, -10.5918, '4'),
(232, 56, 9, 22.9386, '4'),
(233, 40, 14, 35.7909, '4'),
(234, 47, 15, -11.341, '4'),
(235, 48, 6, 0, '1'),
(236, 56, 4, 8.53887, '4'),
(237, 52, 17, -11.8413, '4'),
(238, 58, 25, -10.1269, '4'),
(239, 48, 25, -3.40605, '4'),
(240, 40, 25, 29.9534, '4'),
(241, 53, 11, -1.92167, '4'),
(242, 51, 11, -1.95708, '4'),
(243, 31, 11, -10.3704, '4'),
(244, 33, 6, -12.2207, '4'),
(245, 38, 17, -10.7955, '4'),
(246, 45, 11, -10.6088, '4'),
(247, 45, 25, 25.559, '4'),
(248, 47, 3, -10.3992, '4'),
(249, 52, 4, 0, '1'),
(250, 49, 11, 2.84976, '4'),
(251, 44, 11, 2.34623, '4'),
(252, 43, 19, -10.845, '4'),
(254, 51, 17, 13.4738, '4'),
(255, 42, 4, 9.27873, '4'),
(256, 60, 19, -10.02, '4'),
(257, 53, 17, 26.376, '4'),
(258, 57, 4, 7.24835, '4'),
(261, 49, 17, 15.6556, '4'),
(262, 37, 26, 0, '1'),
(263, 62, 17, -5.47794, '4'),
(264, 36, 11, 5.88827, '4'),
(265, 41, 21, 2.37105, '4'),
(266, 57, 11, -4.851, '4'),
(267, 50, 17, -11.7545, '4'),
(268, 60, 4, 2.53562, '4'),
(269, 37, 25, -10.0681, '4'),
(270, 50, 25, 1.05645, '4'),
(271, 41, 25, 9.61782, '4'),
(272, 33, 25, -11.8227, '4'),
(273, 55, 13, 0, '1'),
(274, 52, 25, 3.12843, '4'),
(275, 38, 13, 13.363, '4'),
(276, 56, 11, 10.1762, '4'),
(277, 57, 19, -6.975, '4'),
(278, 55, 11, -10.0078, '4'),
(279, 51, 19, 6.02969, '4'),
(280, 36, 15, 29.4891, '4'),
(281, 53, 19, 5.83354, '4'),
(282, 60, 18, -5.91417, '4'),
(283, 59, 6, 20.6874, '4'),
(284, 49, 19, 1.14532, '4'),
(285, 57, 17, -11.0205, '4'),
(286, 57, 26, -3.63451, '4'),
(287, 44, 17, -11.2266, '4'),
(289, 56, 25, 4.01244, '4'),
(290, 62, 11, -0.0460089, '4'),
(291, 57, 25, 7.01855, '4'),
(292, 53, 15, 38.5241, '4'),
(293, 51, 7, 25.3624, '4'),
(294, 43, 4, -10.2323, '4'),
(295, 35, 25, 1.01718, '4'),
(296, 54, 6, 5.45223, '4'),
(297, 42, 26, -1.7524, '4'),
(298, 36, 26, -11.3785, '4'),
(299, 54, 4, 3.45768, '4'),
(300, 38, 11, -10.6351, '4'),
(301, 63, 4, 17.2847, '4'),
(302, 49, 7, 20.123, '4'),
(303, 43, 25, -10.024, '4'),
(304, 59, 17, 3.88365, '4'),
(305, 62, 4, -3.52424, '4'),
(306, 47, 13, -9.3075, '4'),
(307, 51, 25, 15.8318, '4'),
(308, 53, 25, 12.7656, '4'),
(309, 49, 25, 2.47378, '4'),
(310, 47, 25, 2.00204, '4'),
(311, 60, 25, -2.52342, '4'),
(312, 36, 25, 10.3509, '4'),
(313, 63, 15, 26.4932, '4'),
(315, 42, 25, 3.41068, '4'),
(316, 38, 19, -11.3533, '4'),
(317, 62, 25, -3.87613, '4'),
(318, 64, 15, 8.38802, '4'),
(319, 38, 25, -11.2542, '4'),
(320, 44, 21, -10.0855, '4'),
(321, 54, 19, 0, '1'),
(322, 64, 6, 14.2841, '4'),
(323, 64, 4, -10.077, '4'),
(324, 55, 19, 0, '1'),
(325, 31, 25, 2.60624, '4'),
(326, 55, 25, -12.4663, '4'),
(327, 65, 15, 35.5729, '4'),
(328, 65, 4, 6.45657, '4'),
(329, 66, 3, 0.406938, '4'),
(330, 65, 6, -3.67419, '4'),
(331, 64, 11, -12.3647, '4'),
(332, 65, 17, 6.13139, '4'),
(333, 66, 11, -11.3915, '4'),
(334, 44, 3, -11.3919, '4'),
(335, 65, 9, -10.47, '4'),
(336, 63, 26, -2.14749, '4'),
(337, 44, 25, -6.85635, '4'),
(338, 59, 19, 0, '1'),
(339, 54, 25, 7.62557, '4'),
(340, 67, 6, 29.8105, '4'),
(341, 65, 25, -0.0660456, '4'),
(342, 64, 19, 3.2625, '4'),
(343, 59, 25, 6.69965, '4'),
(344, 46, 26, 0, '1'),
(345, 64, 25, -1.97344, '4'),
(346, 46, 25, 5.53709, '4'),
(347, 67, 17, -11.3996, '4'),
(348, 66, 17, -11.8572, '4'),
(350, 67, 15, -10.7992, '4'),
(351, 66, 15, 40.4831, '4'),
(352, 67, 11, -3.64297, '4'),
(353, 68, 11, 9.56685, '4'),
(354, 67, 25, -1.59206, '4'),
(355, 69, 6, 21.185, '4'),
(356, 66, 4, 38.9838, '4'),
(357, 70, 4, 24.2592, '4'),
(358, 68, 17, -9.22457, '4'),
(359, 68, 15, 65.6732, '4'),
(360, 69, 15, 52.7818, '4'),
(361, 63, 8, 12.2089, '4'),
(362, 70, 15, 60.6563, '4'),
(363, 66, 25, -11.1183, '4'),
(364, 63, 25, 6.03492, '4'),
(365, 69, 9, 15.4804, '4'),
(366, 70, 21, -10.1594, '4'),
(367, 69, 11, 4.6133, '4'),
(368, 70, 9, 21.5887, '4'),
(369, 68, 9, 0, '1'),
(370, 68, 25, 33.4849, '4'),
(371, 70, 6, 20.6859, '4'),
(372, 70, 25, -12.3851, '4'),
(373, 71, 4, 11.9505, '4'),
(374, 71, 11, 2.94282, '4'),
(375, 71, 15, 16.1403, '4'),
(376, 71, 9, 13.2833, '4'),
(377, 71, 13, 11.1233, '4'),
(378, 71, 25, 8.12905, '4'),
(379, 69, 25, -2.34178, '4'),
(380, 45, 15, 11.0938, '4'),
(381, 45, 19, 7.34505, '4'),
(382, 72, 11, 7.71694, '4'),
(383, 72, 15, 56.6736, '4'),
(384, 72, 6, -12.2644, '4'),
(385, 72, 25, 26.5297, '4'),
(386, 73, 4, 5.20293, '4'),
(387, 73, 6, -2.37443, '4'),
(388, 73, 15, -11.1356, '4'),
(389, 73, 17, -10.9109, '4'),
(390, 73, 25, -8.59339, '4'),
(391, 75, 9, 23.2672, '4'),
(392, 75, 15, 43.7554, '4'),
(393, 75, 17, -1.25993, '4'),
(394, 75, 12, 0, '1'),
(395, 75, 6, 0, '1'),
(396, 75, 25, -11.2132, '4'),
(397, 76, 17, 7.51727, '4'),
(398, 76, 12, 4.64049, '4'),
(399, 76, 15, 12.7546, '4'),
(400, 76, 9, -10.5164, '4'),
(401, 76, 6, -4.59417, '4'),
(402, 76, 25, 11.8727, '4'),
(403, 77, 17, -10.9029, '4'),
(404, 77, 4, 0.599775, '4'),
(405, 77, 6, -11.5887, '4'),
(406, 77, 12, -10.7799, '4'),
(407, 77, 25, -11.849, '4'),
(408, 78, 2, 0, '1'),
(409, 78, 6, 0, '1'),
(410, 78, 11, 0, '1'),
(411, 78, 13, 0, '1'),
(412, 78, 17, 0, '1'),
(413, 78, 25, 0, '1'),
(414, 79, 15, 101.144, '4'),
(415, 79, 9, 59.9407, '4'),
(416, 79, 16, 1.21598, '4'),
(417, 79, 18, -10.6531, '4'),
(418, 79, 6, 0, '1'),
(419, 79, 25, -11.9999, '4'),
(420, 80, 1, 37.5368, '4'),
(421, 80, 6, 7.38594, '4'),
(422, 80, 14, 14.3443, '4'),
(423, 80, 2, -7.32172, '4'),
(424, 80, 11, 0, '1'),
(425, 80, 25, 9.26137, '4'),
(426, 81, 17, 0, '1'),
(427, 81, 26, 0, '1'),
(428, 81, 6, 0, '1'),
(429, 81, 25, 0, '1'),
(430, 82, 26, -10.1989, '4'),
(431, 82, 6, -11.0255, '4'),
(432, 82, 12, -11.5818, '4'),
(433, 82, 25, -10.7207, '4'),
(434, 83, 4, 1.77074, '4'),
(435, 83, 7, 6.63715, '4'),
(436, 83, 12, -4.86691, '4'),
(437, 83, 25, 5.22545, '4'),
(438, 84, 9, 12.398, '4'),
(439, 84, 15, 44.7606, '4'),
(440, 84, 18, -4.1827, '4'),
(441, 84, 25, 22.4428, '4'),
(442, 85, 4, 18.729, '4'),
(443, 85, 11, 28.2397, '4'),
(444, 85, 1, 36.3352, '4'),
(445, 85, 17, 18.6319, '4'),
(446, 85, 25, 39.2707, '4'),
(447, 86, 8, -11.2941, '4'),
(448, 86, 12, 4.22194, '4'),
(449, 86, 19, -1.86248, '4'),
(450, 86, 4, 11.4671, '4'),
(451, 86, 15, 74.697, '4'),
(452, 86, 25, 7.24292, '4'),
(453, 87, 7, 35.0895, '4'),
(454, 87, 15, 7.17771, '4'),
(455, 87, 9, -11.3057, '4'),
(456, 87, 12, 0.0969584, '4'),
(457, 87, 25, -5.30553, '4'),
(458, 88, 26, -10.6949, '4'),
(459, 88, 25, 7.93847, '4'),
(460, 89, 6, -10.0123, '4'),
(461, 89, 17, 3.65646, '4'),
(462, 89, 12, 6.63999, '4'),
(463, 89, 25, 14.0077, '4'),
(464, 90, 17, -3.54047, '4'),
(465, 90, 19, 5.86794, '4'),
(466, 90, 4, 7.65613, '4'),
(467, 90, 15, 22.114, '4'),
(468, 90, 9, 16.6589, '4'),
(469, 90, 25, 5.13531, '4'),
(470, 91, 1, 40.1541, '4'),
(471, 91, 2, 21.1319, '4'),
(472, 91, 11, 0, '1'),
(473, 91, 21, 0, '1'),
(474, 91, 12, 72.0532, '4'),
(475, 91, 25, 29.6174, '4'),
(476, 92, 4, 0.724848, '4'),
(477, 92, 11, 3.33933, '4'),
(478, 92, 1, 2.07332, '4'),
(479, 92, 3, -10.211, '4'),
(480, 92, 25, -1.78092, '4'),
(481, 93, 1, -6.41803, '4'),
(482, 93, 6, -12.1405, '4'),
(483, 93, 12, -11.5795, '4'),
(484, 93, 17, 0, '4'),
(485, 93, 11, -11.3214, '4'),
(486, 93, 25, -11.607, '4'),
(487, 94, 4, 13.0781, '4'),
(488, 94, 6, 16.6367, '4'),
(489, 94, 11, 10.3449, '4'),
(490, 94, 2, 5.92357, '4'),
(491, 94, 25, 9.15371, '4'),
(492, 95, 6, -10.2219, '4'),
(493, 95, 15, -11.484, '4'),
(494, 95, 16, -0.954583, '4'),
(495, 95, 21, -10.8402, '4'),
(496, 95, 25, 5.15786, '4'),
(497, 96, 4, -11.4756, '4'),
(498, 96, 6, -10.3797, '4'),
(499, 96, 15, 9.05875, '4'),
(500, 96, 20, -10.0819, '4'),
(501, 96, 25, -2.86816, '4'),
(502, 97, 4, 0.899052, '4'),
(503, 97, 15, 27.3941, '4'),
(504, 97, 9, 7.20493, '4'),
(505, 97, 25, 8.80437, '4'),
(506, 98, 1, 0.353983, '4'),
(507, 98, 6, 12.4225, '4'),
(508, 98, 7, 35.3687, '4'),
(509, 98, 17, -10.2677, '4'),
(510, 98, 25, 19.5454, '4'),
(511, 99, 21, -10.9287, '4'),
(512, 99, 27, 0, '1'),
(513, 99, 26, 0, '1'),
(514, 99, 25, 4.1276, '4'),
(515, 100, 15, 44.3161, '4'),
(516, 100, 21, 5.90357, '4'),
(517, 100, 13, 31.5492, '4'),
(518, 100, 11, 6.50493, '4'),
(519, 100, 25, -10.3591, '4'),
(520, 100, 25, -10.3591, '4'),
(521, 101, 1, -11.248, '4'),
(522, 101, 6, -10.3938, '4'),
(523, 101, 12, -6.43055, '4'),
(524, 101, 17, -10.0164, '4'),
(525, 101, 11, -10.0416, '4'),
(526, 101, 25, -10.698, '4'),
(527, 102, 4, -10.4796, '4'),
(528, 102, 6, 18.0121, '4'),
(529, 102, 20, -10.3313, '4'),
(530, 102, 15, 27.5433, '4'),
(531, 102, 25, 8.59816, '4'),
(532, 103, 11, 7.87146, '4'),
(533, 103, 15, 8.66417, '4'),
(534, 103, 7, -2.50746, '4'),
(535, 103, 13, 2.81278, '4'),
(536, 103, 25, 3.58631, '4'),
(537, 104, 17, 2.83474, '4'),
(538, 104, 6, -10.8658, '4'),
(539, 104, 15, 4.24292, '4'),
(540, 104, 7, 17.8312, '4'),
(541, 104, 25, 5.35725, '4'),
(542, 105, 8, -10.1427, '4'),
(543, 105, 12, -10.4242, '4'),
(544, 105, 19, -10.4475, '4'),
(545, 105, 4, -10.8927, '4'),
(546, 105, 15, -10.6987, '4'),
(547, 105, 25, -10.1635, '4'),
(548, 106, 4, 4.31035, '4'),
(549, 106, 6, -11.0558, '4'),
(550, 106, 11, 2.57288, '4'),
(551, 106, 15, 3.02354, '4'),
(552, 106, 25, 13.558, '4'),
(553, 107, 6, -10.2836, '4'),
(554, 107, 4, -10.7951, '4'),
(555, 107, 21, -10.5784, '4'),
(556, 107, 12, -11.8232, '4'),
(557, 107, 25, 7.98771, '4'),
(558, 108, 15, 21.3052, '4'),
(559, 108, 5, -3.07569, '4'),
(560, 108, 9, 19.3973, '4'),
(561, 108, 25, 7.63771, '4'),
(562, 109, 6, 7.7689, '4'),
(563, 109, 20, -10.8019, '4'),
(564, 109, 2, -10.959, '4'),
(565, 109, 12, -10.599, '4'),
(566, 109, 25, -10.4424, '4'),
(567, 110, 2, 1.89097, '4'),
(568, 110, 26, -9.01444, '4'),
(569, 110, 16, -0.767146, '4'),
(570, 110, 6, -6.6419, '4'),
(571, 110, 1, -6.97202, '4'),
(572, 110, 25, -8.95517, '4'),
(573, 111, 11, 2.19234, '4'),
(574, 111, 15, 48.1478, '4'),
(575, 111, 6, -0.968815, '4'),
(576, 111, 12, 5.62961, '4'),
(577, 111, 25, 21.3805, '4'),
(578, 112, 25, 6.97974, '4'),
(579, 112, 15, 52.8723, '4'),
(580, 112, 17, 2.31948, '4'),
(581, 113, 2, 26.7702, '4'),
(582, 113, 6, -10.3351, '4'),
(583, 113, 11, 7.38639, '4'),
(584, 113, 13, 5.94474, '4'),
(585, 113, 17, 16.9501, '4'),
(586, 113, 25, 1.08561, '4'),
(587, 114, 6, -10.1825, '4'),
(588, 114, 17, -6.38291, '4'),
(589, 114, 26, -9.25586, '4'),
(590, 114, 25, 7.60151, '4'),
(591, 115, 11, 0, '1'),
(592, 115, 26, 0, '1'),
(593, 115, 13, 0, '1'),
(594, 115, 17, 0, '1'),
(595, 115, 3, 0, '1'),
(596, 117, 28, 2.6243, '4'),
(597, 117, 25, 14.2598, '4'),
(598, 118, 25, 8.59402, '4'),
(599, 118, 28, -2.89673, '4'),
(600, 118, 26, -5.48337, '4');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
